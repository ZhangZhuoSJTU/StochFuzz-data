#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 8
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_402824:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_435692]
            call fopen@PLT

            test RAX,RAX
            je .L_4028a8

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_4028c8

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_4028b2

            mov RSI,RBP
            mov RDI,R12
            call .L_4029d0

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_4028a2:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_4028a8:

            mov EDI,1
            call exit@PLT
.L_4028b2:

            lea RDI,QWORD PTR [RIP+.L_4356a3]
            call puts@PLT

            mov EDI,3
            call exit@PLT
.L_4028c8:

            lea RDI,QWORD PTR [RIP+.L_435695]
            call puts@PLT

            mov EDI,2
            call exit@PLT
.L_4028de:

            nop
            nop
.L_402910:

            ret 
.L_402912:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402920:

            push RBP
            mov EAX,OFFSET .L_649310
            cmp RAX,OFFSET .L_649310
            mov RBP,RSP
            je .L_402948

            mov EAX,0
            test RAX,RAX
            je .L_402948

            pop RBP
            mov EDI,OFFSET .L_649310
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402948:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402950:

            mov ESI,OFFSET .L_649310
            push RBP
            sub RSI,OFFSET .L_649310
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_402988

            mov EAX,0
            test RAX,RAX
            je .L_402988

            pop RBP
            mov EDI,OFFSET .L_649310
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402988:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4029c0:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_402950
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4029d0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,304
.L_4029df:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSI-3]
            cmp RAX,61
            ja .L_402b53

            movzx EAX,BYTE PTR [RDI+1]
            mov R12,RDI
            mov DWORD PTR [RSP+16],1
            mov QWORD PTR [RSP+24],8388608
            mov BYTE PTR [RSP+37],0
            mov BYTE PTR [RSP+38],0
            mov BYTE PTR [RSP+39],0
            mov BYTE PTR [RSP+22],0
            test AL,1
            je .L_402a38

            mov DWORD PTR [RSP+16],2
.L_402a38:

            mov EDX,EAX
            lea RBX,QWORD PTR [RSP+48]
            lea R14,QWORD PTR [R12+2]
            shr DL,1
            and EDX,1
            mov BYTE PTR [RSP+20],DL
            mov EDX,EAX
            shr DL,2
            and EDX,1
            mov BYTE PTR [RSP+21],DL
            mov EDX,EAX
            shr DL,3
            and EDX,1
            mov BYTE PTR [RSP+32],DL
            mov EDX,EAX
            shr DL,4
            and EDX,1
            mov BYTE PTR [RSP+33],DL
            mov EDX,EAX
            shr DL,5
            and EDX,1
            mov BYTE PTR [RSP+34],DL
            mov EDX,EAX
            shr AL,7
            mov BYTE PTR [RSP+36],AL
            lea RAX,QWORD PTR [RBX+16]
            shr DL,6
            and EDX,1
            mov QWORD PTR [RSP+48],RAX
            mov RAX,R12
            mov BYTE PTR [RSP+35],DL
            add RAX,RSI
            je .L_402aaa

            test R14,R14
            je .L_402c3c
.L_402aaa:

            lea RBP,QWORD PTR [RSI-2]
            cmp RBP,15
            mov QWORD PTR [RSP],RBP
            jg .L_402b80

            cmp RBP,1
            jne .L_402c78

            movzx EAX,BYTE PTR [R12+2]
            mov R13,RSP
            mov BYTE PTR [RSP+64],AL
.L_402ad3:

            mov RAX,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+48]
            lea RBP,QWORD PTR [RSP+80]
            mov RSI,R13
            mov RDI,RBP
            mov QWORD PTR [RSP+56],RAX
            mov BYTE PTR [RDX+RAX*1],0
            lea RDX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+8],EAX
.L_402b07:

            call .L_406f90
.L_402b0c:

            mov EAX,DWORD PTR [RSP+232]
            test EAX,EAX
            jne .L_402b38

            mov RAX,QWORD PTR [RSP+48]
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RBP
            mov RDI,R13
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+8],EAX
.L_402b33:

            call .L_40b540
.L_402b38:

            mov RDI,RBP
            add RBX,16
            call .L_40bc10

            mov RDI,QWORD PTR [RSP+48]
            cmp RDI,RBX
            je .L_402b53

            call _ZdlPv@PLT
.L_402b53:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+296]
            xor RCX,QWORD PTR FS:[40]
            jne .L_402c48

            add RSP,304
.L_402b73:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402b80:

            mov R13,RSP
            xor EDX,EDX
            mov RDI,RBX
            mov RSI,R13
.L_402b8b:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDX
.L_402b9e:

            cmp EBP,8
            jae .L_402bd8

            test BPL,4
            jne .L_402c25

            test EBP,EBP
            je .L_402ad3

            movzx EDX,BYTE PTR [R12+2]
            test BPL,2
            mov BYTE PTR [RAX],DL
            je .L_402ad3

            mov ESI,EBP
            movzx EDX,WORD PTR [R14+RSI*1-2]
            mov WORD PTR [RAX+RSI*1-2],DX
            jmp .L_402ad3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402bd8:

            mov RDX,QWORD PTR [R12+2]
            mov QWORD PTR [RAX],RDX
            mov EDX,EBP
            mov RCX,QWORD PTR [R14+RDX*1-8]
            mov QWORD PTR [RAX+RDX*1-8],RCX
            lea RDX,QWORD PTR [RAX+8]
            and RDX,-8
            sub RAX,RDX
            lea ESI,DWORD PTR [RBP+RAX*1]
            sub R14,RAX
            and ESI,4294967288
            cmp ESI,8
            jb .L_402ad3

            and ESI,4294967288
            xor EAX,EAX
.L_402c0f:

            mov ECX,EAX
            add EAX,8
            mov RDI,QWORD PTR [R14+RCX*1]
            cmp EAX,ESI
            mov QWORD PTR [RDX+RCX*1],RDI
            jb .L_402c0f

            jmp .L_402ad3
.L_402c25:

            mov EDX,DWORD PTR [R12+2]
            mov ESI,EBP
            mov DWORD PTR [RAX],EDX
            mov EDX,DWORD PTR [R14+RSI*1-4]
            mov DWORD PTR [RAX+RSI*1-4],EDX
            jmp .L_402ad3
.L_402c3c:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_402c48:

            call __stack_chk_fail@PLT
.L_402c4d:

            mov R12,RAX
.L_402c50:

            mov RDI,QWORD PTR [RSP+48]
            add RBX,16
            cmp RDI,RBX
            je .L_402c63

            call _ZdlPv@PLT
.L_402c63:

            mov RDI,R12
            call _Unwind_Resume@PLT
.L_402c6b:

            mov RDI,RBP
            mov R12,RAX
            call .L_40bc10

            jmp .L_402c50
.L_402c78:

            lea RAX,QWORD PTR [RBX+16]
            mov R13,RSP
            jmp .L_402b9e
.L_402c84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402c90:

            push R15
            push R14
            lea R15,QWORD PTR [RIP+.L_4369d8]
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_402ca5:

            mov EBX,DWORD PTR [RCX]
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+8],R8D
            test EBX,EBX
            jle .L_402d66

            mov R14,RDI
            movsx EDI,BYTE PTR [RDX]
            mov RBP,RDX
            mov R13,RCX
            mov R12D,EDI
            call isspace@PLT

            test EAX,EAX
            jne .L_402d80
.L_402cd4:

            cmp R12B,45
            je .L_402dd0

            cmp EBX,2
            jle .L_402d49

            cmp R12B,48
            jne .L_402d90

            cmp BYTE PTR [RBP+1],48
            jne .L_402d90

            xor EAX,EAX
.L_402cf9:

            lea EDX,DWORD PTR [RBX-3]
            mov RSI,RBP
            lea RDX,QWORD PTR [RBP+RDX*1+1]
            nop
            nop
            nop
            nop
.L_402d08:

            cmp BYTE PTR [RSI+2],48
            jne .L_402da0

            add RSI,1
            sub EBX,1
            cmp RSI,RDX
            jne .L_402d08

            test AL,AL
            je .L_402df5

            mov EBX,3
            jmp .L_402db4
.L_402d30:

            movsx EDI,BYTE PTR [RBP]
            mov R12D,EDI
            call isspace@PLT

            test EAX,EAX
            je .L_402cd4
.L_402d40:

            add RBP,1
            sub EBX,1
            jne .L_402d30
.L_402d49:

            movsxd R12,EBX
            mov RSI,RBP
            mov RDI,R14
            mov RDX,R12
            call memmove@PLT
.L_402d5a:

            mov BYTE PTR [R14+R12*1],0
            mov R15,R14
            mov DWORD PTR [R13],EBX
.L_402d66:

            add RSP,24
.L_402d6a:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402d80:

            mov R8D,DWORD PTR [RSP+8]
            test R8B,R8B
            jne .L_402d40

            jmp .L_402d66
.L_402d8c:

            mov RBP,RSI
            nop
.L_402d90:

            cmp EBX,DWORD PTR [RSP+12]
            jl .L_402d49

            lea R15,QWORD PTR [RIP+.L_4369d8]
            jmp .L_402d66
          .byte 0x90
.L_402da0:

            test AL,AL
            je .L_402d8c
.L_402da4:

            add EBX,1
            cmp EBX,DWORD PTR [RSP+12]
            lea R15,QWORD PTR [RIP+.L_4369d8]
            jge .L_402d66
.L_402db4:

            movsxd R12,EBX
            sub RSI,1
            mov RDI,R14
            mov RDX,R12
            call memmove@PLT

            mov BYTE PTR [R14],45
            jmp .L_402d5a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402dd0:

            sub EBX,1
            lea RSI,QWORD PTR [RBP+1]
            cmp EBX,2
            jle .L_402da4

            cmp BYTE PTR [RBP+1],48
            jne .L_402da4

            cmp BYTE PTR [RBP+2],48
            jne .L_402da4

            mov RBP,RSI
            mov EAX,1
            jmp .L_402cf9
.L_402df5:

            mov RBP,RSI
            mov EBX,2
            jmp .L_402d90
.L_402dff:

            nop
.L_402e00:

            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,264
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+248],RDX
            xor EDX,EDX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_402e58
.L_402e2a:

            xor EAX,EAX
.L_402e2c:

            mov RBX,QWORD PTR [RSP+248]
            xor RBX,QWORD PTR FS:[40]
            jne .L_402f05

            add RSP,264
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402e58:

            lea RAX,QWORD PTR [RSP+32]
            mov R12,RCX
            lea RCX,QWORD PTR [RSP+12]
            mov RDX,RDI
            mov ESI,201
            mov R8D,1
            mov RDI,RAX
            call .L_402c90

            mov RBX,RAX
            call __errno_location@PLT

            test BPL,BPL
            mov R13,RAX
            mov DWORD PTR [RAX],0
            lea RSI,QWORD PTR [RSP+24]
            mov RDI,RBX
            jne .L_402ee0

            call strtod@PLT
.L_402e9e:

            movsxd RAX,DWORD PTR [RSP+12]
            add RBX,RAX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_402e2a

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_402e2a

            test R12,R12
            mov EAX,1
            je .L_402e2c

            test BPL,BPL
            jne .L_402ef0

            movsd QWORD PTR [R12],XMM0
            jmp .L_402e2c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402ee0:

            call strtof@PLT

            cvtss2sd XMM0,XMM0
            jmp .L_402e9e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402ef0:

            pxor XMM1,XMM1
            mov EAX,EBP
            cvtsd2ss XMM1,XMM0
            movss DWORD PTR [R12],XMM1
            jmp .L_402e2c
.L_402f05:

            call __stack_chk_fail@PLT
.L_402f0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402f10:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_402f1e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_402f3c

            test RDX,RDX
            jne .L_402fc7
.L_402f3c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_402f90

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_402fc0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_402f64:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_402fd3

            add RSP,16
.L_402f84:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402f90:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_402fa9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_402f64
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402fc0:

            test RBX,RBX
            je .L_402f64

            jmp .L_402fa9
.L_402fc7:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_402fd3:

            call __stack_chk_fail@PLT
.L_402fd8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402fe0:

            push RBP
            push RBX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,56
.L_402fec:

            movsxd RDX,DWORD PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp EDX,99
            jle .L_4030c0

            xor ESI,ESI
            mov RBP,RSP
            mov EDX,100
.L_403013:

            call .L_4145d0

            lea RCX,QWORD PTR [RBP+16]
            movsxd RDX,EDX
            mov RSI,RAX
            add RDX,RAX
            mov RDI,RBP
            mov QWORD PTR [RSP],RCX
            call .L_402f10
.L_403031:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RSP+8]
            cmp RAX,2
            jbe .L_4030f0

            lea RSI,QWORD PTR [RIP+.L_4356c4]
            mov EDX,3
            mov RDI,RBP
.L_403059:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_40305e:

            lea RDX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX],RDX
            mov RCX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RAX+16]
            cmp RCX,RDX
            je .L_4030e0

            mov QWORD PTR [RBX],RCX
            mov RCX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBX+16],RCX
.L_40307c:

            mov RCX,QWORD PTR [RAX+8]
            add RBP,16
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RAX],RDX
            mov RDI,QWORD PTR [RSP]
            mov QWORD PTR [RAX+8],0
            mov BYTE PTR [RAX+16],0
            cmp RDI,RBP
            je .L_4030a5

            call _ZdlPv@PLT
.L_4030a5:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4030eb

            add RSP,56
.L_4030bc:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_4030c0:

            mov RSI,QWORD PTR [RSI]
            lea RAX,QWORD PTR [RBX+16]
            mov RDI,RBX
            mov QWORD PTR [RBX],RAX
            add RDX,RSI
.L_4030d0:

            call .L_402f10
.L_4030d5:

            jmp .L_4030a5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4030e0:

            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_40307c
.L_4030eb:

            call __stack_chk_fail@PLT
.L_4030f0:

            lea RDI,QWORD PTR [RIP+.L_4356af]
.L_4030f7:

            call _ZSt20__throw_length_errorPKc@PLT
.L_4030fc:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov RBX,RAX
            cmp RDI,RBP
            je .L_403111

            call _ZdlPv@PLT
.L_403111:

            mov RDI,RBX
.L_403114:

            call _Unwind_Resume@PLT
.L_403119:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403120:

            xor EAX,EAX
            cmp ESI,1
            mov QWORD PTR [RDI+8],8388608
            sete AL
            mov BYTE PTR [RDI+16],0
            mov BYTE PTR [RDI+17],0
            add EAX,1
            cmp ESI,2
            mov BYTE PTR [RDI+18],0
            mov DWORD PTR [RDI],EAX
            sete AL
            cmp ESI,3
            mov BYTE PTR [RDI+4],AL
            mov BYTE PTR [RDI+5],AL
            setne BYTE PTR [RDI+6]
            mov BYTE PTR [RDI+19],0
            mov BYTE PTR [RDI+20],1
            mov BYTE PTR [RDI+21],0
            mov BYTE PTR [RDI+22],0
            mov BYTE PTR [RDI+23],0
            ret 
.L_403169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403170:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_40317d

            mov EAX,DWORD PTR [RAX+12]
            ret 
.L_40317d:

            mov EAX,4294967295
            ret 
.L_403183:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403190:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_403199:

            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_403228

            mov EAX,DWORD PTR [RBX+152]
            mov RBP,QWORD PTR [RIP+.L_649350]
            test EAX,EAX
            jne .L_4031d6

            mov RBP,QWORD PTR [RBX+200]
            test RBP,RBP
            je .L_403200
.L_4031d6:

            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_403228

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_40322d

            add RSP,24
.L_4031fa:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403200:

            mov RDI,QWORD PTR [RBX+112]
.L_403204:

            call .L_40ffc0
.L_403209:

            test RAX,RAX
            mov RBP,RAX
            mov QWORD PTR [RBX+200],RAX
            jne .L_4031d6

            mov RBP,QWORD PTR [RIP+.L_649350]
            mov QWORD PTR [RBX+200],RBP
            jmp .L_4031d6
.L_403228:

            call abort@PLT
.L_40322d:

            call __stack_chk_fail@PLT
.L_403232:

            mov RBX,RAX
            mov RDI,RSP
            call .L_40c0f0

            mov RDI,RBX
.L_403240:

            call _Unwind_Resume@PLT
.L_403245:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403250:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_403259:

            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_4032e8

            mov EAX,DWORD PTR [RBX+152]
            mov RBP,QWORD PTR [RIP+.L_649348]
            test EAX,EAX
            jne .L_403296

            mov RBP,QWORD PTR [RBX+208]
            test RBP,RBP
            je .L_4032c0
.L_403296:

            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_4032e8

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_4032ed

            add RSP,24
.L_4032ba:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4032c0:

            mov RDI,QWORD PTR [RBX+112]
.L_4032c4:

            call .L_410070
.L_4032c9:

            test RAX,RAX
            mov RBP,RAX
            mov QWORD PTR [RBX+208],RAX
            jne .L_403296

            mov RBP,QWORD PTR [RIP+.L_649348]
            mov QWORD PTR [RBX+208],RBP
            jmp .L_403296
.L_4032e8:

            call abort@PLT
.L_4032ed:

            call __stack_chk_fail@PLT
.L_4032f2:

            mov RBX,RAX
            mov RDI,RSP
            call .L_40c0f0

            mov RDI,RBX
.L_403300:

            call _Unwind_Resume@PLT
.L_403305:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403310:

            movsxd RSI,DWORD PTR [RDI+8]
            mov RDX,QWORD PTR [RDI]
            xor EAX,EAX
            add RSI,RDX
            cmp RSI,RDX
            ja .L_403330

            jmp .L_403368
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403328:

            cmp RSI,RCX
            mov RDX,RCX
            jbe .L_40335e
.L_403330:

            cmp BYTE PTR [RDX],92
            lea RCX,QWORD PTR [RDX+1]
            jne .L_403328

            cmp RCX,RSI
            lea RDI,QWORD PTR [RDX+2]
            jae .L_403360

            movsx EDX,BYTE PTR [RDX+1]
            sub EDX,48
            cmp EDX,9
            ja .L_403360

            cmp EAX,EDX
            mov RCX,RDI
            cmovl EAX,EDX
            cmp RSI,RCX
            mov RDX,RCX
            ja .L_403330
.L_40335e:

            ret 
.L_403360:

            mov RCX,RDI
            jmp .L_403328
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403368:

            ret 
.L_40336a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403370:

            push R15
            push R14
            lea RAX,QWORD PTR [RDI+16]
            push R13
            push R12
            mov R15,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_403388:

            mov QWORD PTR [RDI],RAX
            mov BYTE PTR [RDI+16],0
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov QWORD PTR [RDI+8],0
            lea ESI,DWORD PTR [RAX+RAX*1]
            movsxd RSI,ESI
.L_4033a5:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@PLT

            mov EAX,DWORD PTR [R15+8]
            test EAX,EAX
            jle .L_4034b0

            xor R12D,R12D
            jmp .L_40341b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4033c0:

            cmp BPL,122
            jle .L_4033d8
.L_4033c6:

            cmp BPL,95
            je .L_4033d8

            cmp BPL,57
            jg .L_403442

            nop
            nop
            nop
            nop
            nop
            nop
.L_4033d8:

            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RSP+8],RAX
            lea R13,QWORD PTR [R14+1]
            mov EDX,15
            je .L_4033ef

            mov RDX,QWORD PTR [RBX+16]
.L_4033ef:

            cmp R13,RDX
            ja .L_403490
.L_4033f8:

            mov BYTE PTR [RAX+R14*1],BPL
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],R13
            mov BYTE PTR [RAX+R13*1],0
.L_403408:

            lea EAX,DWORD PTR [R12+1]
            add R12,1
            cmp DWORD PTR [R15+8],EAX
            jle .L_4034b0
.L_40341b:

            mov RAX,QWORD PTR [R15]
            mov R14,QWORD PTR [RBX+8]
            movzx EBP,BYTE PTR [RAX+R12*1]
            cmp BPL,96
            jg .L_4033c0

            cmp BPL,64
            jg .L_4034c8

            cmp BPL,47
            jg .L_4033c6

            test BPL,BPL
            js .L_4033d8
.L_403442:

            test BPL,BPL
            je .L_403500

            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RSP+8],RAX
            lea RBP,QWORD PTR [R14+1]
            mov EDX,15
            je .L_403462

            mov RDX,QWORD PTR [RBX+16]
.L_403462:

            cmp RBP,RDX
            ja .L_4034e0
.L_403467:

            mov BYTE PTR [RAX+R14*1],92
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],RBP
            mov BYTE PTR [RAX+RBP*1],0
            mov RAX,QWORD PTR [R15]
            mov R14,QWORD PTR [RBX+8]
            movzx EBP,BYTE PTR [RAX+R12*1]
            jmp .L_4033d8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403490:

            mov R8D,1
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R14
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT

            mov RAX,QWORD PTR [RBX]
            jmp .L_4033f8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4034b0:

            add RSP,24
.L_4034b4:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4034c8:

            cmp BPL,90
            jle .L_4033d8

            jmp .L_4033c6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4034e0:

            mov R8D,1
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R14
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT

            mov RAX,QWORD PTR [RBX]
            jmp .L_403467
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403500:

            movabs RAX,9223372036854775807
            sub RAX,R14
            cmp RAX,3
            jbe .L_40352c

            lea RSI,QWORD PTR [RIP+.L_4356c8]
            mov EDX,4
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_403408
.L_40352c:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_403538:

            mov RDI,QWORD PTR [RBX]
            cmp QWORD PTR [RSP+8],RDI
            mov RBP,RAX
            je .L_40354a

            call _ZdlPv@PLT
.L_40354a:

            mov RDI,RBP
.L_40354d:

            call _Unwind_Resume@PLT
.L_403552:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403560:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,296
.L_403571:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            cmp QWORD PTR [RDI+120],0
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            je .L_4039d8

            mov RDX,QWORD PTR [RDI+72]
            lea R15,QWORD PTR [RSP+48]
            mov EBX,ECX
            lea R14,QWORD PTR [RSP+80]
            lea R12,QWORD PTR [RSP+112]
            mov RSI,QWORD PTR [RDI+64]
            lea RAX,QWORD PTR [R15+16]
            mov RBP,RDI
            mov R13D,ECX
            cmp EDX,ECX
            mov RDI,R12
            mov QWORD PTR [RSP+56],0
            cmovle EBX,EDX
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [R14+16]
            mov DWORD PTR [RSP+12],EBX
            movsxd RBX,EBX
            mov BYTE PTR [RSP+64],0
            cmp RBX,RDX
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [R12+16]
            cmovbe RDX,RBX
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RSP+96],0
            add RDX,RSI
            mov QWORD PTR [RSP+112],RAX
.L_403609:

            call .L_402f10

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_403a20

            lea RCX,QWORD PTR [R15+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_403a58

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_403a67

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_40366a:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,R12
            je .L_403689

            call _ZdlPv@PLT
.L_403689:

            mov RDX,QWORD PTR [RBP+72]
            lea R12,QWORD PTR [RSP+144]
            mov RSI,QWORD PTR [RBP+64]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,R12
            cmp RBX,RDX
            cmovbe RDX,RBX
            mov QWORD PTR [RSP+144],RAX
            add RDX,RSI
            call .L_402f10
.L_4036b8:

            mov RSI,QWORD PTR [RSP+144]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP+80]
            mov RDX,QWORD PTR [RSP+152]
            cmp RSI,RAX
            je .L_4039e0

            lea RCX,QWORD PTR [R14+16]
            mov RAX,QWORD PTR [RSP+160]
            cmp RDI,RCX
            je .L_403aa0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+88],RDX
            mov QWORD PTR [RSP+96],RAX
            je .L_403aaf

            mov QWORD PTR [RSP+144],RDI
            mov QWORD PTR [RSP+160],RCX
.L_40371d:

            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+144]
            cmp RDI,R12
            je .L_403742

            call _ZdlPv@PLT
.L_403742:

            cmp BYTE PTR [RBP+96],0
            je .L_403790

            mov EAX,DWORD PTR [RSP+12]
            test EAX,EAX
            jle .L_403790

            lea EDI,DWORD PTR [RAX-1]
            xor EAX,EAX
            add RDI,1
            jmp .L_403769
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403760:

            add RAX,1
            cmp RAX,RDI
            je .L_403790
.L_403769:

            mov RCX,QWORD PTR [RSP+48]
            add RCX,RAX
            movzx EDX,BYTE PTR [RCX]
            lea ESI,DWORD PTR [RDX-97]
            cmp SIL,25
            ja .L_403760

            add RAX,1
            sub EDX,32
            cmp RAX,RDI
            mov BYTE PTR [RCX],DL
            jne .L_403769

            nop
            nop
            nop
            nop
            nop
.L_403790:

            lea R12,QWORD PTR [RSP+176]
            sub R13D,DWORD PTR [RSP+12]
            lea RBX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RSP+192],0
            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBX+16]
            test R13D,R13D
            mov QWORD PTR [RSP+208],RAX
            jg .L_4038d0
.L_4037ef:

            mov RAX,QWORD PTR [RSP+88]
            test RAX,RAX
            je .L_403920

            mov RDX,QWORD PTR [RSP+80]
            lea RBP,QWORD PTR [RSP+240]
            lea RSI,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+40],EAX
            mov RDI,RBP
            mov QWORD PTR [RSP+32],RDX
.L_40381b:

            call .L_415280

            mov RSI,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+80]
            mov RDX,QWORD PTR [RSP+248]
            cmp RSI,RAX
            je .L_403ac8

            lea RCX,QWORD PTR [R14+16]
            mov RAX,QWORD PTR [RSP+256]
            cmp RDI,RCX
            je .L_403a80

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+88],RDX
            mov QWORD PTR [RSP+96],RAX
            je .L_403a8f

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_403884:

            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+240]
            cmp RDI,RBP
            je .L_4038a9

            call _ZdlPv@PLT
.L_4038a9:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            mov EBP,1
            jmp .L_403956
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4038d0:

            mov RDI,QWORD PTR [RBP+120]
            mov ECX,R13D
            mov RDX,RBX
            mov RSI,R12
            call .L_422400

            test AL,AL
            je .L_4037ef

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+176]
            mov RDI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RDX,QWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov RDI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4038a9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403920:

            mov RDI,QWORD PTR [RSP+16]
            lea RCX,QWORD PTR [RIP+.L_4369d8]
            xor R8D,R8D
            xor ESI,ESI
            mov RDX,QWORD PTR [RDI+8]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            mov RDI,QWORD PTR [RSP+24]
            lea RCX,QWORD PTR [RIP+.L_4369d8]
            xor R8D,R8D
            xor ESI,ESI
            mov RDX,QWORD PTR [RDI+8]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_403954:

            xor EBP,EBP
.L_403956:

            mov RDI,QWORD PTR [RSP+208]
            add RBX,16
            cmp RDI,RBX
            je .L_40396c

            call _ZdlPv@PLT
.L_40396c:

            mov RDI,QWORD PTR [RSP+176]
            add R12,16
            cmp RDI,R12
            je .L_403982

            call _ZdlPv@PLT
.L_403982:

            mov RDI,QWORD PTR [RSP+80]
            add R14,16
            cmp RDI,R14
            je .L_403995

            call _ZdlPv@PLT
.L_403995:

            mov RDI,QWORD PTR [RSP+48]
            add R15,16
            cmp RDI,R15
            je .L_4039a8

            call _ZdlPv@PLT
.L_4039a8:

            mov RBX,QWORD PTR [RSP+280]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_403b54

            add RSP,296
.L_4039c8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4039d8:

            xor EBP,EBP
            jmp .L_4039a8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4039e0:

            test RDX,RDX
            je .L_403a08

            cmp RDX,1
            je .L_403b20

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+80]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403a08:

            mov QWORD PTR [RSP+88],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_40371d
          .byte 0x66
          .byte 0x90
.L_403a20:

            test RDX,RDX
            je .L_403a40

            cmp RDX,1
            je .L_403b00

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
.L_403a40:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_40366a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403a58:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_403a67:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_40366a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403a80:

            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+88],RDX
            mov QWORD PTR [RSP+96],RAX
.L_403a8f:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+240],RDI
            jmp .L_403884
.L_403aa0:

            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+88],RDX
            mov QWORD PTR [RSP+96],RAX
.L_403aaf:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+144],RDI
            jmp .L_40371d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403ac8:

            test RDX,RDX
            je .L_403aea

            cmp RDX,1
            jne .L_403b40

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+80]
.L_403aea:

            mov QWORD PTR [RSP+88],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+240]
            jmp .L_403884
.L_403b00:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_403a40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b20:

            movzx EAX,BYTE PTR [RSP+160]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_403a08
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403b40:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_403aea
.L_403b54:

            call __stack_chk_fail@PLT
.L_403b59:

            mov RBP,RAX
.L_403b5c:

            mov RDI,QWORD PTR [RSP+80]
            add R14,16
            cmp RDI,R14
            je .L_403b6f

            call _ZdlPv@PLT
.L_403b6f:

            mov RDI,QWORD PTR [RSP+48]
            add R15,16
            cmp RDI,R15
            je .L_403b82

            call _ZdlPv@PLT
.L_403b82:

            mov RDI,RBP
.L_403b85:

            call _Unwind_Resume@PLT
.L_403b8a:

            mov RDI,QWORD PTR [RSP+208]
            add RBX,16
            mov RBP,RAX
            cmp RDI,RBX
            je .L_403ba3

            call _ZdlPv@PLT
.L_403ba3:

            mov RDI,QWORD PTR [RSP+176]
            add R12,16
            cmp RDI,R12
            je .L_403b5c

            call _ZdlPv@PLT

            jmp .L_403b5c
.L_403bbb:

            nop
            nop
            nop
            nop
            nop
.L_403bc0:

            cmp QWORD PTR [RDI+112],0
            je .L_403bf0

            mov EAX,DWORD PTR [RDI+192]
            cmp EAX,-1
            je .L_403bd8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403bd8:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+112]
            call .L_40ff20

            mov DWORD PTR [RBX+192],EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403bf0:

            mov EAX,4294967295
            ret 
.L_403bf6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c00:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_403c07:

            mov RAX,QWORD PTR [RSI]
            mov RBP,RDX
            movsxd RSI,DWORD PTR [RSI+8]
            mov EBX,4294967295
            add RSI,RAX
            cmp RSI,RAX
            jbe .L_403c54

            nop
            nop
.L_403c20:

            cmp BYTE PTR [RAX],92
            lea RCX,QWORD PTR [RAX+1]
            jne .L_403c4c

            cmp RCX,RSI
            je .L_403c70

            movsx ECX,BYTE PTR [RAX+1]
            cmp ECX,92
            je .L_403c48

            sub ECX,48
            cmp ECX,9
            ja .L_403cc0

            cmp EBX,ECX
            cmovl EBX,ECX
.L_403c48:

            lea RCX,QWORD PTR [RAX+2]
.L_403c4c:

            cmp RSI,RCX
            mov RAX,RCX
            ja .L_403c20
.L_403c54:

            mov RDI,R12
            call .L_403bc0

            mov EDX,EAX
            mov EAX,1
            cmp EDX,EBX
            jl .L_403c98

            pop RBX
.L_403c68:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403c70:

            mov RDX,QWORD PTR [RBP+8]
            lea RCX,QWORD PTR [RIP+.L_4358c0]
            mov RDI,RBP
            mov R8D,45
            xor ESI,ESI
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403c98:

            mov RDI,R12
            call .L_403bc0

            lea RSI,QWORD PTR [RIP+.L_435930]
            mov ECX,EAX
            mov EDX,EBX
            mov RDI,RBP
            xor EAX,EAX
            call .L_414de0

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403cc0:

            mov RDX,QWORD PTR [RBP+8]
            lea RCX,QWORD PTR [RIP+.L_4358f0]
            mov RDI,RBP
            mov R8D,61
            xor ESI,ESI
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_403ce2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403cf0:

            test RDX,RDX
            sete AL
            ret 
.L_403cf7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d00:

            test RDX,RDX
            je .L_403d30

            sub RSP,8
            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+8]
            mov RCX,RDI
            movsxd R8,ESI
            mov RDI,RAX
            xor ESI,ESI
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            mov EAX,1
            add RSP,8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403d30:

            mov EAX,1
            ret 
.L_403d36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d40:

            test RDX,RDX
            je .L_403d4b

            mov QWORD PTR [RDX],RDI
            mov DWORD PTR [RDX+8],ESI
.L_403d4b:

            mov EAX,1
            ret 
.L_403d51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d60:

            xor EAX,EAX
            cmp ESI,1
            je .L_403d70
.L_403d67:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403d70:

            test RDX,RDX
            mov EAX,1
            je .L_403d67

            movzx ECX,BYTE PTR [RDI]
            mov BYTE PTR [RDX],CL
            ret 
.L_403d80:

            xor EAX,EAX
            cmp ESI,1
            je .L_403d90
.L_403d87:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403d90:

            test RDX,RDX
            mov EAX,1
            je .L_403d87

            movzx ECX,BYTE PTR [RDI]
            mov BYTE PTR [RDX],CL
            ret 
.L_403da0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_403de0
.L_403dc2:

            xor EAX,EAX
.L_403dc4:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_403e53

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_403de0:

            lea RAX,QWORD PTR [RSP+32]
            mov EBP,ECX
            lea RCX,QWORD PTR [RSP+12]
            xor R8D,R8D
            mov ESI,33
            mov R12,RDX
            mov RDX,RDI
            mov RDI,RAX
            call .L_402c90

            mov RBX,RAX
            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+24]
            mov EDX,EBP
            mov RDI,RBX
            mov DWORD PTR [RAX],0
            mov R13,RAX
            call strtol@PLT

            movsxd RDX,DWORD PTR [RSP+12]
            mov RCX,RAX
            add RBX,RDX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_403dc2

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_403dc2

            test R12,R12
            mov EAX,1
            je .L_403dc4

            mov QWORD PTR [R12],RCX
            jmp .L_403dc4
.L_403e53:

            call __stack_chk_fail@PLT
.L_403e58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e60:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_403ea8
.L_403e82:

            xor EAX,EAX
.L_403e84:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_403f2a

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
.L_403ea8:

            lea RAX,QWORD PTR [RSP+32]
            mov R12D,ECX
            lea RCX,QWORD PTR [RSP+12]
            xor R8D,R8D
            mov RBP,RDX
            mov ESI,33
            mov RDX,RDI
            mov RDI,RAX
            call .L_402c90

            cmp BYTE PTR [RAX],45
            mov RBX,RAX
            je .L_403e82

            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+24]
            mov EDX,R12D
            mov RDI,RBX
            mov DWORD PTR [RAX],0
            mov R13,RAX
            call strtoul@PLT

            movsxd RDX,DWORD PTR [RSP+12]
            mov RCX,RAX
            add RBX,RDX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_403e82

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_403e82

            test RBP,RBP
            mov EAX,1
            je .L_403e84

            mov QWORD PTR [RBP],RCX
            jmp .L_403e84
.L_403f2a:

            call __stack_chk_fail@PLT
.L_403f2f:

            nop
.L_403f30:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403da0

            test AL,AL
            je .L_403f63

            mov RDX,QWORD PTR [RSP]
            movsx RCX,DX
            cmp RDX,RCX
            je .L_403f80

            xor EAX,EAX
.L_403f63:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_403f8a

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403f80:

            test RBX,RBX
            je .L_403f63

            mov WORD PTR [RBX],DX
            jmp .L_403f63
.L_403f8a:

            call __stack_chk_fail@PLT
.L_403f8f:

            nop
.L_403f90:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403e60

            test AL,AL
            je .L_403fc3

            mov RDX,QWORD PTR [RSP]
            test RDX,-65536
            je .L_403fe0

            xor EAX,EAX
.L_403fc3:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_403fea

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fe0:

            test RBX,RBX
            je .L_403fc3

            mov WORD PTR [RBX],DX
            jmp .L_403fc3
.L_403fea:

            call __stack_chk_fail@PLT
.L_403fef:

            nop
.L_403ff0:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403da0

            test AL,AL
            je .L_404022

            mov RDX,QWORD PTR [RSP]
            movsxd RCX,EDX
            cmp RDX,RCX
            je .L_404040

            xor EAX,EAX
.L_404022:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_404049

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404040:

            test RBX,RBX
            je .L_404022

            mov DWORD PTR [RBX],EDX
            jmp .L_404022
.L_404049:

            call __stack_chk_fail@PLT
.L_40404e:

            nop
            nop
.L_404050:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403e60

            test AL,AL
            je .L_404081

            mov RDX,QWORD PTR [RSP]
            mov ECX,EDX
            cmp RDX,RCX
            je .L_4040a0

            xor EAX,EAX
.L_404081:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4040a9

            add RSP,16
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4040a0:

            test RBX,RBX
            je .L_404081

            mov DWORD PTR [RBX],EDX
            jmp .L_404081
.L_4040a9:

            call __stack_chk_fail@PLT
.L_4040ae:

            nop
            nop
.L_4040b0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_4040f0
.L_4040d2:

            xor EAX,EAX
.L_4040d4:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_404163

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_4040f0:

            lea RAX,QWORD PTR [RSP+32]
            mov EBP,ECX
            lea RCX,QWORD PTR [RSP+12]
            xor R8D,R8D
            mov ESI,33
            mov R12,RDX
            mov RDX,RDI
            mov RDI,RAX
            call .L_402c90

            mov RBX,RAX
            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+24]
            mov EDX,EBP
            mov RDI,RBX
            mov DWORD PTR [RAX],0
            mov R13,RAX
            call strtoll@PLT

            movsxd RDX,DWORD PTR [RSP+12]
            mov RCX,RAX
            add RBX,RDX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_4040d2

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_4040d2

            test R12,R12
            mov EAX,1
            je .L_4040d4

            mov QWORD PTR [R12],RCX
            jmp .L_4040d4
.L_404163:

            call __stack_chk_fail@PLT
.L_404168:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404170:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_4041b8
.L_404192:

            xor EAX,EAX
.L_404194:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40423a

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
.L_4041b8:

            lea RAX,QWORD PTR [RSP+32]
            mov R12D,ECX
            lea RCX,QWORD PTR [RSP+12]
            xor R8D,R8D
            mov RBP,RDX
            mov ESI,33
            mov RDX,RDI
            mov RDI,RAX
            call .L_402c90

            cmp BYTE PTR [RAX],45
            mov RBX,RAX
            je .L_404192

            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+24]
            mov EDX,R12D
            mov RDI,RBX
            mov DWORD PTR [RAX],0
            mov R13,RAX
            call strtoull@PLT

            movsxd RDX,DWORD PTR [RSP+12]
            mov RCX,RAX
            add RBX,RDX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_404192

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_404192

            test RBP,RBP
            mov EAX,1
            je .L_404194

            mov QWORD PTR [RBP],RCX
            jmp .L_404194
.L_40423a:

            call __stack_chk_fail@PLT
.L_40423f:

            nop
.L_404240:

            mov RCX,RDX
            xor EDX,EDX
            jmp .L_402e00
.L_40424a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404250:

            mov RCX,RDX
            mov EDX,1
            jmp .L_402e00
.L_40425d:

            nop
            nop
            nop
.L_404260:

            mov ECX,10
            jmp .L_403f30
.L_40426a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404270:

            mov ECX,16
            jmp .L_403f30
.L_40427a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404280:

            mov ECX,8
            jmp .L_403f30
.L_40428a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404290:

            xor ECX,ECX
            jmp .L_403f30
.L_404297:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042a0:

            mov ECX,10
            jmp .L_403f90
.L_4042aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4042b0:

            mov ECX,16
            jmp .L_403f90
.L_4042ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4042c0:

            mov ECX,8
            jmp .L_403f90
.L_4042ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4042d0:

            xor ECX,ECX
            jmp .L_403f90
.L_4042d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042e0:

            mov ECX,10
            jmp .L_403ff0
.L_4042ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4042f0:

            mov ECX,16
            jmp .L_403ff0
.L_4042fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404300:

            mov ECX,8
            jmp .L_403ff0
.L_40430a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404310:

            xor ECX,ECX
            jmp .L_403ff0
.L_404317:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404320:

            mov ECX,10
            jmp .L_404050
.L_40432a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404330:

            mov ECX,16
            jmp .L_404050
.L_40433a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404340:

            mov ECX,8
            jmp .L_404050
.L_40434a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404350:

            xor ECX,ECX
            jmp .L_404050
.L_404357:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404360:

            mov ECX,10
            jmp .L_403da0
.L_40436a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404370:

            mov ECX,16
            jmp .L_403da0
.L_40437a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404380:

            mov ECX,8
            jmp .L_403da0
.L_40438a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404390:

            xor ECX,ECX
            jmp .L_403da0
.L_404397:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4043a0:

            mov ECX,10
            jmp .L_403e60
.L_4043aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043b0:

            mov ECX,16
            jmp .L_403e60
.L_4043ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043c0:

            mov ECX,8
            jmp .L_403e60
.L_4043ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043d0:

            xor ECX,ECX
            jmp .L_403e60
.L_4043d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4043e0:

            mov ECX,10
            jmp .L_4040b0
.L_4043ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043f0:

            mov ECX,16
            jmp .L_4040b0
.L_4043fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404400:

            mov ECX,8
            jmp .L_4040b0
.L_40440a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404410:

            xor ECX,ECX
            jmp .L_4040b0
.L_404417:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404420:

            mov ECX,10
            jmp .L_404170
.L_40442a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404430:

            mov ECX,16
            jmp .L_404170
.L_40443a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404440:

            mov ECX,8
            jmp .L_404170
.L_40444a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404450:

            xor ECX,ECX
            jmp .L_404170
.L_404457:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404460:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,520
.L_404474:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_404774

            cmp EAX,2
            je .L_404528

            cmp BYTE PTR [RDI+6],0
            mov EAX,4
            jne .L_404538
.L_4044aa:

            cmp BYTE PTR [RBX+4],0
            jne .L_4044b5

            or EAX,1940
.L_4044b5:

            cmp BYTE PTR [RBX+16],0
            je .L_4044be

            or EAX,2
.L_4044be:

            cmp BYTE PTR [RBX+17],0
            je .L_4044c7

            or AH,8
.L_4044c7:

            cmp BYTE PTR [RBX+18],0
            je .L_4044d0

            or EAX,8
.L_4044d0:

            cmp BYTE PTR [RBX+19],0
            je .L_4044d9

            or AH,16
.L_4044d9:

            cmp BYTE PTR [RBX+20],0
            jne .L_4044e2

            or EAX,1
.L_4044e2:

            cmp BYTE PTR [RBX+21],0
            je .L_4044ea

            or AL,128
.L_4044ea:

            cmp BYTE PTR [RBX+22],0
            je .L_4044f3

            or AH,1
.L_4044f3:

            cmp BYTE PTR [RBX+23],0
            je .L_4044fc

            or EAX,16
.L_4044fc:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404a3f

            add RSP,520
.L_40451a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404528:

            mov EAX,36
            jmp .L_4044aa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404538:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4045c8:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4045cd:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_404687:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40468c:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_40469c:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,138
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4046d8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4356d8]
            mov EDX,17
.L_4046e8:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RBX]
            lea RDI,QWORD PTR [RBP+8]
            call _ZNSolsEi@PLT
.L_4046f8:

            cmp BYTE PTR [RSP+112],0
            je .L_404780
.L_404703:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_404735

            call _ZdlPv@PLT
.L_404735:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT
.L_404774:

            mov EAX,4
            jmp .L_4044aa
          .byte 0x66
          .byte 0x90
.L_404780:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_404962

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_4048c0

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_4047fa:

            call .L_402f10
.L_4047ff:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_404974

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_4049d2

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4049e1

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_40485d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_404881
.L_40487c:

            call _ZdlPv@PLT
.L_404881:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_404890:

            call write@PLT
.L_404895:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_404703

            call _ZdlPv@PLT

            jmp .L_404703
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4048c0:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RSP+64]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+8],RCX
.L_4048d7:

            call .L_402f10

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4049a5

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_4049f4

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_404a03

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_40493a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_40487c

            jmp .L_404881
.L_404962:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40496f:

            jmp .L_404881
.L_404974:

            test RDX,RDX
            je .L_404992

            cmp RDX,1
            je .L_404a29

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_404992:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_40485d
.L_4049a5:

            test RDX,RDX
            je .L_4049bf

            cmp RDX,1
            je .L_404a16

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_4049bf:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_40493a
.L_4049d2:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4049e1:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_40485d
.L_4049f4:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_404a03:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_40493a
.L_404a16:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_4049bf
.L_404a29:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_404992
.L_404a3f:

            call __stack_chk_fail@PLT
.L_404a44:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_404a5b

            call _ZdlPv@PLT
.L_404a5b:

            call _ZSt9terminatev@PLT
.L_404a60:

            jmp .L_404a44
.L_404a62:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
.L_404a70:

            call _Unwind_Resume@PLT
.L_404a75:

            mov RBX,RAX
.L_404a78:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_404a91:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_404aa5:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            jmp .L_404a78
.L_404ac9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404ad0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,552
.L_404ae1:

            movsxd R10,DWORD PTR [RDX+8]
            mov R14,QWORD PTR [RDX]
            mov QWORD PTR [RSP+24],RDI
            mov QWORD PTR [RSP+32],RDX
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RDI
            xor EDI,EDI
            mov QWORD PTR [RSP+16],RCX
            mov DWORD PTR [RSP+8],R8D
            lea R15,QWORD PTR [R14+R10*1]
            cmp R15,R14
            jbe .L_404bd7

            mov RBX,RSI
            nop
.L_404b20:

            movzx EBP,BYTE PTR [R14]
            lea R13,QWORD PTR [R14+1]
            cmp BPL,92
            jne .L_404b80

            cmp R15,R13
            ja .L_404be8
.L_404b37:

            mov RAX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RAX+46]
            test AL,AL
            jne .L_404ca5

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b50:

            mov RDI,QWORD PTR [RSP+536]
            xor RDI,QWORD PTR FS:[40]
            jne .L_405745

            add RSP,552
.L_404b6e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404b80:

            mov RDX,QWORD PTR [RBX]
            mov R14,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RBX+16]
            mov ECX,15
            cmp RDX,RSI
            lea R12,QWORD PTR [R14+1]
            je .L_404b9d

            mov RCX,QWORD PTR [RBX+16]
.L_404b9d:

            cmp R12,RCX
            jbe .L_404bba

            xor EDX,EDX
            mov R8D,1
            xor ECX,ECX
            mov RSI,R14
            mov RDI,RBX
.L_404bb2:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT

            mov RDX,QWORD PTR [RBX]
.L_404bba:

            mov BYTE PTR [RDX+R14*1],BPL
            mov RDX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],R12
            mov BYTE PTR [RDX+R14*1+1],0
            mov R14,R13
.L_404bce:

            cmp R15,R14
            ja .L_404b20
.L_404bd7:

            mov EAX,1
            jmp .L_404b50
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404be8:

            movsx EAX,BYTE PTR [R14+1]
            lea EBP,DWORD PTR [RAX-48]
            cmp EBP,9
            jbe .L_404c50

            cmp EAX,92
            jne .L_404b37

            mov RAX,QWORD PTR [RBX]
            mov RBP,QWORD PTR [RBX+8]
            lea RCX,QWORD PTR [RBX+16]
            mov EDX,15
            cmp RAX,RCX
            lea R12,QWORD PTR [RBP+1]
            je .L_404c1b

            mov RDX,QWORD PTR [RBX+16]
.L_404c1b:

            cmp R12,RDX
            jbe .L_404c38

            mov R8D,1
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT

            mov RAX,QWORD PTR [RBX]
.L_404c38:

            mov BYTE PTR [RAX+RBP*1],92
            mov RAX,QWORD PTR [RBX]
            add R14,2
            mov QWORD PTR [RBX+8],R12
            mov BYTE PTR [RAX+RBP*1+1],0
            jmp .L_404bce
          .byte 0x66
          .byte 0x90
.L_404c50:

            cmp EBP,DWORD PTR [RSP+8]
            jge .L_404fe0

            movsxd RBP,EBP
            shl RBP,4
            add RBP,QWORD PTR [RSP+16]
            movsxd RDX,DWORD PTR [RBP+8]
            test EDX,EDX
            jg .L_404c80
.L_404c6e:

            add R14,2
            jmp .L_404bce
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404c80:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBX+8]
            cmp RDX,RAX
            ja .L_405739

            mov RSI,QWORD PTR [RBP]
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_404ca3:

            jmp .L_404c6e
.L_404ca5:

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R13
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_404d3e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_404d43:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_404e14:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_404e19:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_404e29:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,881
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_404e65:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435707]
            mov EDX,25
.L_404e75:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RAX]
            test RBP,RBP
            je .L_40529d

            mov RDI,RBP
            call strlen@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,RAX
            mov RSI,RBP
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_404ea2:

            cmp BYTE PTR [RSP+144],0
            jne .L_40521d

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+48]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_40550d

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_40546e

            lea R14,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_404f1f:

            call .L_402f10
.L_404f24:

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_4055d7

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_40556c

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_40557b

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_404f7f:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,R14
            je .L_404f9e
.L_404f99:

            call _ZdlPv@PLT
.L_404f9e:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_404fad:

            call write@PLT
.L_404fb2:

            mov RDI,QWORD PTR [RSP+48]
            add RBP,16
            mov BYTE PTR [RSP+144],1
            cmp RDI,RBP
            je .L_40521d

            call _ZdlPv@PLT

            jmp .L_40521d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404fe0:

            mov RAX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RAX+46]
            test AL,AL
            je .L_404b50

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R13
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_40508a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40508f:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_405160:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_405165:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_405175:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,869
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4051b1:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356ea]
            mov EDX,16
.L_4051c1:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,EBP
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_4356fb]
            mov EDX,11
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RSP+32]
            mov R14,QWORD PTR [RAX]
            test R14,R14
            je .L_4052be

            mov RDI,R14
            call strlen@PLT

            mov RSI,R14
            mov RDX,RAX
            mov RDI,RBP
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40520f:

            cmp BYTE PTR [RSP+144],0
            je .L_4052d9
.L_40521d:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+264],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_40525a

            call _ZdlPv@PLT
.L_40525a:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_404b50
.L_40529d:

            mov RAX,QWORD PTR [RSP+152]
            mov RAX,QWORD PTR [RAX-24]
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov ESI,DWORD PTR [RDI+32]
            or ESI,1
.L_4052b4:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@PLT
.L_4052b9:

            jmp .L_404ea2
.L_4052be:

            mov RAX,QWORD PTR [RBP]
            mov RDI,QWORD PTR [RAX-24]
            add RDI,RBP
            mov ESI,DWORD PTR [RDI+32]
            or ESI,1
.L_4052cf:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@PLT
.L_4052d4:

            jmp .L_40520f
.L_4052d9:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+48]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_4054fc

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_4053e0

            lea R14,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_405348:

            call .L_402f10
.L_40534d:

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_40553b

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_40551e

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_40552d

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_4053a8:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,R14
            je .L_4053c7
.L_4053c2:

            call _ZdlPv@PLT
.L_4053c7:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_4053d6:

            call write@PLT
.L_4053db:

            jmp .L_404fb2
.L_4053e0:

            lea R14,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+80],RAX
.L_4053f1:

            call .L_402f10
.L_4053f6:

            mov RSI,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            cmp RSI,RAX
            je .L_405625

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_405608

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_405617

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_40544b:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+80]
            cmp RDI,R14
            jne .L_4053c2

            jmp .L_4053c7
.L_40546e:

            lea R14,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+80],RAX
.L_40547f:

            call .L_402f10
.L_405484:

            mov RSI,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            cmp RSI,RAX
            je .L_4055a6

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_405589

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_405598

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4054d9:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+80]
            cmp RDI,R14
            jne .L_404f99

            jmp .L_404f9e
.L_4054fc:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
.L_405503:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_405508:

            jmp .L_4053c7
.L_40550d:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
.L_405514:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_405519:

            jmp .L_404f9e
.L_40551e:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_40552d:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_4053a8
.L_40553b:

            test RDX,RDX
            je .L_405559

            cmp RDX,1
            je .L_405694

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_405559:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_4053a8
.L_40556c:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_40557b:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_404f7f
.L_405589:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_405598:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4054d9
.L_4055a6:

            test RDX,RDX
            je .L_4055c4

            cmp RDX,1
            je .L_405665

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_4055c4:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_4054d9
.L_4055d7:

            test RDX,RDX
            je .L_4055f5

            cmp RDX,1
            je .L_40567b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_4055f5:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_404f7f
.L_405608:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_405617:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_40544b
.L_405625:

            test RDX,RDX
            je .L_40563f

            cmp RDX,1
            je .L_405652

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_40563f:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_40544b
.L_405652:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_40563f
.L_405665:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4055c4
.L_40567b:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4055f5
.L_405694:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_405559
.L_4056ad:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
.L_4056bb:

            call _Unwind_Resume@PLT
.L_4056c0:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4056d4:

            jmp .L_4056ad
.L_4056d6:

            jmp .L_4056c0
.L_4056d8:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
.L_4056f9:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_405712:

            mov RBP,RAX
            jmp .L_4056f9
.L_405717:

            mov RDI,QWORD PTR [RSP+48]
            add RBP,16
            cmp RDI,RBP
            je .L_40572a

            call _ZdlPv@PLT
.L_40572a:

            call _ZSt9terminatev@PLT
.L_40572f:

            jmp .L_405717
.L_405731:

            jmp .L_405717
.L_405733:

            jmp .L_405717
.L_405735:

            jmp .L_4056d8
.L_405737:

            jmp .L_405712
.L_405739:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_405745:

            call __stack_chk_fail@PLT
.L_40574a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405750:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,56
            mov R12,RDX
            sub RSP,632
.L_40576f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+616],RAX
            xor EAX,EAX
.L_405782:

            call _Znwm@PLT

            xor ESI,ESI
            mov RDI,RAX
            mov RBP,RAX
            call pthread_rwlock_init@PLT

            test EAX,EAX
            jne .L_406a2f

            movsxd RDX,DWORD PTR [R13+8]
            mov RSI,QWORD PTR [R13]
            mov QWORD PTR [RBX],RBP
            lea RBP,QWORD PTR [RSP+224]
            lea R13,QWORD PTR [RBP+16]
            mov RDI,RBP
            add RDX,RSI
            mov QWORD PTR [RSP+224],R13
            call .L_402f10
.L_4057c6:

            mov RSI,QWORD PTR [RSP+224]
            mov RDI,QWORD PTR [RBX+8]
            cmp RSI,R13
            je .L_405eb8

            lea RAX,QWORD PTR [RBX+24]
            mov RCX,QWORD PTR [RSP+232]
            mov RDX,QWORD PTR [RSP+240]
            cmp RDI,RAX
            je .L_405a70

            test RDI,RDI
            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+8],RSI
            mov QWORD PTR [RBX+16],RCX
            mov QWORD PTR [RBX+24],RDX
            je .L_405a7c

            mov QWORD PTR [RSP+224],RDI
            mov QWORD PTR [RSP+240],RAX
.L_405821:

            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RDI],0
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,RAX
            je .L_405846

            call _ZdlPv@PLT
.L_405846:

            mov EAX,DWORD PTR [R12]
            lea RDI,QWORD PTR [RIP+.L_649360]
            lea R13,QWORD PTR [RBX+40]
            mov DWORD PTR [RBX+40],EAX
            movzx EAX,BYTE PTR [R12+4]
            mov BYTE PTR [RBX+44],AL
            movzx EAX,BYTE PTR [R12+5]
            mov BYTE PTR [RBX+45],AL
            movzx EAX,BYTE PTR [R12+6]
            mov BYTE PTR [RBX+46],AL
            mov RAX,QWORD PTR [R12+8]
            mov QWORD PTR [RBX+48],RAX
            movzx EAX,BYTE PTR [R12+16]
            mov BYTE PTR [RBX+56],AL
            movzx EAX,BYTE PTR [R12+17]
            mov BYTE PTR [RBX+57],AL
            movzx EAX,BYTE PTR [R12+18]
            mov BYTE PTR [RBX+58],AL
            movzx EAX,BYTE PTR [R12+19]
            mov BYTE PTR [RBX+59],AL
            movzx EAX,BYTE PTR [R12+20]
            mov BYTE PTR [RBX+60],AL
            movzx EAX,BYTE PTR [R12+21]
            mov BYTE PTR [RBX+61],AL
            movzx EAX,BYTE PTR [R12+22]
            mov BYTE PTR [RBX+62],AL
            movzx EAX,BYTE PTR [R12+23]
            mov BYTE PTR [RBX+63],AL
            call pthread_mutex_lock@PLT

            cmp QWORD PTR [RIP+.L_649358],0
            je .L_406370
.L_4058d7:

            lea RDI,QWORD PTR [RIP+.L_649360]
            call pthread_mutex_unlock@PLT

            mov RAX,QWORD PTR [RIP+.L_649358]
            mov DWORD PTR [RBX+152],0
            mov RDI,R13
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+104],0
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+144],RAX
            mov QWORD PTR [RBX+200],0
            mov QWORD PTR [RBX+208],0
            mov DWORD PTR [RBX+192],4294967295
            mov DWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+104],0
            mov DWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
.L_405963:

            call .L_404460

            mov RDX,QWORD PTR [RBX+8]
            lea R13,QWORD PTR [RSP+96]
            lea R12,QWORD PTR [RSP+80]
            mov ESI,EAX
            mov RDI,R12
            mov QWORD PTR [RSP+80],RDX
            mov RDX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+88],EDX
            mov RDX,R13
            call .L_42de80

            test RAX,RAX
            mov QWORD PTR [RBX+104],RAX
            je .L_405a90

            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RBX+72],0
            lea RCX,QWORD PTR [RSP+72]
            lea RDX,QWORD PTR [RBX+96]
            lea RSI,QWORD PTR [RBX+64]
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RBX+104]
            mov BYTE PTR [RBX+96],0
            call .L_40fac0

            test AL,AL
            je .L_406408

            mov RDI,QWORD PTR [RSP+72]
            mov QWORD PTR [RBX+112],RDI
.L_4059d7:

            mov RAX,QWORD PTR [RBX+48]
            movabs RDX,6148914691236517206
            lea RCX,QWORD PTR [RAX+RAX*1]
            mov RAX,RCX
            sar RCX,63
            imul RDX
            mov RSI,RDX
            sub RSI,RCX
            call .L_41a8d0

            test RAX,RAX
            mov QWORD PTR [RBX+120],RAX
            je .L_405ef8

            mov RDI,RAX
            call .L_4285a0
.L_405a13:

            mov BYTE PTR [RBX+136],AL
            mov RBX,QWORD PTR [RSP+120]
            test RBX,RBX
            je .L_405a41
.L_405a23:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_405a34

            call _ZdlPv@PLT
.L_405a34:

            mov ESI,32
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_405a41:

            mov RAX,QWORD PTR [RSP+616]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406a2a

            add RSP,632
.L_405a5f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405a70:

            mov QWORD PTR [RBX+8],RSI
            mov QWORD PTR [RBX+16],RCX
            mov QWORD PTR [RBX+24],RDX
.L_405a7c:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+224],RDI
            jmp .L_405821
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405a90:

            mov RAX,QWORD PTR [RIP+.L_649358]
            cmp QWORD PTR [RBX+144],RAX
            je .L_4064b0
.L_405aa4:

            cmp BYTE PTR [RBX+46],0
            je .L_405dc9

            lea RDI,QWORD PTR [RBP+120]
            mov BYTE PTR [RSP+224],0
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+568],0
            mov QWORD PTR [RSP+560],0
            mov BYTE PTR [RSP+569],0
            xor ESI,ESI
            mov QWORD PTR [RSP+344],RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+576],0
            mov QWORD PTR [RSP+584],0
            mov QWORD PTR [RSP+592],0
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+232],R14
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_405b48:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_405b4d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+248],0
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+232],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+344],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+240],RAX
            mov QWORD PTR [RSP+288],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+304],16
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+240],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+328],0
            mov QWORD PTR [RSP+312],RAX
.L_405c1e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_405c23:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_405c33:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,201
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_405c6f:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435721]
            mov EDX,15
.L_405c7f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBX+8]
            mov RSI,R12
            mov QWORD PTR [RSP+80],RAX
            mov RAX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+88],EAX
            lea RAX,QWORD PTR [RSP+160]
            mov RDI,RAX
            mov QWORD PTR [RSP+56],RAX
            call .L_402fe0
.L_405cad:

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+160]
            lea RDI,QWORD PTR [RBP+8]
.L_405cc1:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435731]
            mov EDX,3
            mov RDI,RAX
            mov R12,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R15,QWORD PTR [RSP+192]
            mov RSI,R13
            mov RDI,R15
            call .L_40cb90
.L_405cf0:

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            mov RDI,R12
.L_405d03:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_405d08:

            mov RDI,QWORD PTR [RSP+192]
            lea RAX,QWORD PTR [R15+16]
            cmp RDI,RAX
            je .L_405d1e

            call _ZdlPv@PLT
.L_405d1e:

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+160]
            add RAX,16
            cmp RDI,RAX
            je .L_405d39

            call _ZdlPv@PLT
.L_405d39:

            cmp BYTE PTR [RSP+224],0
            je .L_406210
.L_405d47:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+312]
            mov QWORD PTR [RSP+232],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+344],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+240],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_405d84

            call _ZdlPv@PLT
.L_405d84:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+240],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RCX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+RAX*1+232],RCX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+344],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_405dc9:

            movsxd RDX,DWORD PTR [RSP+112]
            mov RSI,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+224],RAX
            add RDX,RSI
.L_405de5:

            call .L_402f10
.L_405dea:

            mov RSI,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBX+160]
            mov RDX,QWORD PTR [RSP+232]
            cmp RSI,RAX
            je .L_406420

            lea RAX,QWORD PTR [RBX+176]
            mov RCX,QWORD PTR [RSP+240]
            cmp RDI,RAX
            je .L_406460

            test RDI,RDI
            mov RAX,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+160],RSI
            mov QWORD PTR [RBX+168],RDX
            mov QWORD PTR [RBX+176],RCX
            je .L_406475

            mov QWORD PTR [RSP+224],RDI
            mov QWORD PTR [RSP+240],RAX
.L_405e5b:

            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,RBP
            je .L_405e80

            call _ZdlPv@PLT
.L_405e80:

            mov EAX,DWORD PTR [RSP+96]
            mov EDX,1
            cmp EAX,13
            ja .L_405e98

            lea RDX,QWORD PTR [RIP+.L_435a60]
            mov EDX,DWORD PTR [RDX+RAX*4]
.L_405e98:

            mov DWORD PTR [RBX+152],EDX
.L_405e9e:

            mov RBX,QWORD PTR [RSP+120]
            test RBX,RBX
            jne .L_405a23

            jmp .L_405a41
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405eb8:

            mov RDX,QWORD PTR [RSP+232]
            test RDX,RDX
            je .L_405ee0

            cmp RDX,1
            je .L_406490

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RBX+8]
.L_405ee0:

            mov QWORD PTR [RBX+16],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+224]
            jmp .L_405821
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405ef8:

            cmp BYTE PTR [RBX+46],0
            je .L_4061cf

            lea RDI,QWORD PTR [RBP+120]
            mov BYTE PTR [RSP+224],0
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+568],0
            mov QWORD PTR [RSP+560],0
            mov BYTE PTR [RSP+569],0
            xor ESI,ESI
            mov QWORD PTR [RSP+344],RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+576],0
            mov QWORD PTR [RSP+584],0
            mov QWORD PTR [RSP+592],0
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+232],R14
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_405f9c:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_405fa1:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+248],0
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+232],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+344],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+240],RAX
            mov QWORD PTR [RSP+288],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+304],16
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+240],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+328],0
            mov QWORD PTR [RSP+312],RAX
.L_406072:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_406077:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_406087:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,223
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4060c3:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435735]
            mov EDX,17
.L_4060d3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBX+8]
            lea R15,QWORD PTR [RSP+192]
            mov RSI,R12
            mov RDI,R15
            mov QWORD PTR [RSP+80],RAX
            mov RAX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+88],EAX
            call .L_402fe0
.L_4060fc:

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            lea RDI,QWORD PTR [RBP+8]
.L_406110:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_43575f]
            mov EDX,1
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_406129:

            mov RDI,QWORD PTR [RSP+192]
            lea RAX,QWORD PTR [R15+16]
            cmp RDI,RAX
            je .L_40613f

            call _ZdlPv@PLT
.L_40613f:

            cmp BYTE PTR [RSP+224],0
            je .L_4065b8
.L_40614d:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+312]
            mov QWORD PTR [RSP+232],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+344],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+240],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_40618a

            call _ZdlPv@PLT
.L_40618a:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+240],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RCX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+RAX*1+232],RCX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+344],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_4061cf:

            mov EDI,32
.L_4061d4:

            call _Znwm@PLT
.L_4061d9:

            lea RDX,QWORD PTR [RIP+.L_4359b2]
            mov RBP,RAX
            lea RAX,QWORD PTR [RAX+16]
            mov RDI,RBP
            lea RSI,QWORD PTR [RDX-34]
            mov QWORD PTR [RBP],RAX
.L_4061f2:

            call .L_402f10
.L_4061f7:

            mov QWORD PTR [RBX+144],RBP
            mov DWORD PTR [RBX+152],14
            jmp .L_405e9e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406210:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea R12,QWORD PTR [RSP+128]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RSP+144],0
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RSP+280]
            test RAX,RAX
            je .L_4067e0

            mov RDX,QWORD PTR [RSP+264]
            mov RSI,QWORD PTR [RSP+272]
            cmp RAX,RDX
            jbe .L_4064f8

            lea RDX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+192],RDX
            mov RDX,RAX
.L_40628a:

            call .L_402f10
.L_40628f:

            mov RSI,QWORD PTR [RSP+192]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+200]
            cmp RSI,RAX
            je .L_4067f8

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+208]
            cmp RDI,RCX
            je .L_4068a3

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
            je .L_4068bb

            mov QWORD PTR [RSP+192],RDI
            mov QWORD PTR [RSP+208],RCX
.L_406303:

            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RDI],0
            add R15,16
            mov RDI,QWORD PTR [RSP+192]
            cmp RDI,R15
            je .L_406328
.L_406323:

            call _ZdlPv@PLT
.L_406328:

            movsxd RDX,DWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+128]
            mov EDI,2
.L_40633d:

            call write@PLT
.L_406342:

            mov RDI,QWORD PTR [RSP+128]
            add R12,16
            mov BYTE PTR [RSP+224],1
            cmp RDI,R12
            je .L_405d47

            call _ZdlPv@PLT

            jmp .L_405d47
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406370:

            mov EDI,32
.L_406375:

            call _Znwm@PLT

            lea RDX,QWORD PTR [RAX+16]
            mov EDI,48
            mov QWORD PTR [RAX+8],0
            mov BYTE PTR [RAX+16],0
            mov QWORD PTR [RIP+.L_649358],RAX
            mov QWORD PTR [RAX],RDX
            call _Znwm@PLT

            lea RDX,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+40],0
            mov EDI,48
            mov QWORD PTR [RIP+.L_649350],RAX
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],RDX
            call _Znwm@PLT
.L_4063d2:

            lea RDX,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RIP+.L_649348],RAX
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],RDX
            jmp .L_4058d7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406408:

            mov RDI,QWORD PTR [RBX+104]
.L_40640c:

            call .L_40fa90

            mov RDI,RAX
            mov QWORD PTR [RBX+112],RAX
            jmp .L_4059d7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406420:

            test RDX,RDX
            je .L_406448

            cmp RDX,1
            jne .L_4064d8

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RBX+160]
.L_406448:

            mov QWORD PTR [RBX+168],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+224]
            jmp .L_405e5b
.L_406460:

            mov QWORD PTR [RBX+160],RSI
            mov QWORD PTR [RBX+168],RDX
            mov QWORD PTR [RBX+176],RCX
.L_406475:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+224],RDI
            jmp .L_405e5b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406490:

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RBX+8]
            jmp .L_405ee0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4064b0:

            mov EDI,32
            call _Znwm@PLT
.L_4064ba:

            mov RSI,R13
            mov RDI,RAX
            mov R14,RAX
.L_4064c3:

            call .L_40cb90
.L_4064c8:

            mov QWORD PTR [RBX+144],R14
            jmp .L_405aa4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4064d8:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RBX+160]
            jmp .L_406448
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4064f8:

            mov R15,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+160],RAX
.L_40650c:

            call .L_402f10
.L_406511:

            mov RSI,QWORD PTR [RSP+160]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+168]
            cmp RSI,RAX
            je .L_406838

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+176]
            cmp RDI,RCX
            je .L_406875

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
            je .L_40688d

            mov QWORD PTR [RSP+160],RDI
            mov QWORD PTR [RSP+176],RCX
.L_406585:

            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+168],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+160]
            add RAX,16
            cmp RDI,RAX
            jne .L_406323

            jmp .L_406328
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4065b8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea R12,QWORD PTR [RSP+128]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RSP+144],0
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RSP+280]
            test RAX,RAX
            je .L_4068cc

            mov RDX,QWORD PTR [RSP+264]
            mov RSI,QWORD PTR [RSP+272]
            cmp RAX,RDX
            jbe .L_406718

            lea RDX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+192],RDX
            mov RDX,RAX
.L_406632:

            call .L_402f10
.L_406637:

            mov RSI,QWORD PTR [RSP+192]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+200]
            cmp RSI,RAX
            je .L_4068dd

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+208]
            cmp RDI,RCX
            je .L_406985

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
            je .L_40699d

            mov QWORD PTR [RSP+192],RDI
            mov QWORD PTR [RSP+208],RCX
.L_4066ab:

            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RDI],0
            add R15,16
            mov RDI,QWORD PTR [RSP+192]
            cmp RDI,R15
            je .L_4066d0
.L_4066cb:

            call _ZdlPv@PLT
.L_4066d0:

            movsxd RDX,DWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+128]
            mov EDI,2
.L_4066e5:

            call write@PLT
.L_4066ea:

            mov RDI,QWORD PTR [RSP+128]
            add R12,16
            mov BYTE PTR [RSP+224],1
            cmp RDI,R12
            je .L_40614d

            call _ZdlPv@PLT

            jmp .L_40614d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406718:

            lea RCX,QWORD PTR [RSP+160]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+160],RAX
.L_406737:

            call .L_402f10
.L_40673c:

            mov RSI,QWORD PTR [RSP+160]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+168]
            cmp RSI,RAX
            je .L_40691a

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+176]
            cmp RDI,RCX
            je .L_406957

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
            je .L_40696f

            mov QWORD PTR [RSP+160],RDI
            mov QWORD PTR [RSP+176],RCX
.L_4067b0:

            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+168],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+160]
            add RAX,16
            cmp RDI,RAX
            jne .L_4066cb

            jmp .L_4066d0
          .byte 0x66
          .byte 0x90
.L_4067e0:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_4067e7:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4067ec:

            jmp .L_406328
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4067f8:

            test RDX,RDX
            je .L_40681c

            cmp RDX,1
            je .L_4069ae

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+128]
.L_40681c:

            mov QWORD PTR [RSP+136],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+192]
            jmp .L_406303
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406838:

            test RDX,RDX
            je .L_40685c

            cmp RDX,1
            je .L_4069cd

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+128]
.L_40685c:

            mov QWORD PTR [RSP+136],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+160]
            jmp .L_406585
.L_406875:

            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
.L_40688d:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+160],RDI
            jmp .L_406585
.L_4068a3:

            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
.L_4068bb:

            lea RDI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+192],RDI
            jmp .L_406303
.L_4068cc:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_4068d3:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4068d8:

            jmp .L_4066d0
.L_4068dd:

            test RDX,RDX
            je .L_406901

            cmp RDX,1
            je .L_406a0b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+128]
.L_406901:

            mov QWORD PTR [RSP+136],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+192]
            jmp .L_4066ab
.L_40691a:

            test RDX,RDX
            je .L_40693e

            cmp RDX,1
            je .L_4069ec

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+128]
.L_40693e:

            mov QWORD PTR [RSP+136],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+160]
            jmp .L_4067b0
.L_406957:

            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
.L_40696f:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+160],RDI
            jmp .L_4067b0
.L_406985:

            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
.L_40699d:

            lea RDI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+192],RDI
            jmp .L_4066ab
.L_4069ae:

            movzx EAX,BYTE PTR [RSP+208]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_40681c
.L_4069cd:

            movzx EAX,BYTE PTR [RSP+176]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_40685c
.L_4069ec:

            movzx EAX,BYTE PTR [RSP+176]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_40693e
.L_406a0b:

            movzx EAX,BYTE PTR [RSP+208]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_406901
.L_406a2a:

            call __stack_chk_fail@PLT
.L_406a2f:

            call abort@PLT
.L_406a34:

            mov ESI,32
            mov RDI,R14
            mov RBX,RAX
            call _ZdlPvm@PLT
.L_406a44:

            mov RBP,QWORD PTR [RSP+120]
            test RBP,RBP
            je .L_406a6d

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_406a60

            call _ZdlPv@PLT
.L_406a60:

            mov ESI,32
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_406a6d:

            mov RDI,RBX
.L_406a70:

            call _Unwind_Resume@PLT
.L_406a75:

            mov RDI,QWORD PTR [RSP+128]
            add R12,16
            cmp RDI,R12
            je .L_406a8b

            call _ZdlPv@PLT
.L_406a8b:

            call _ZSt9terminatev@PLT
.L_406a90:

            jmp .L_406a75
.L_406a92:

            mov RDI,QWORD PTR [RSP+192]
            add R15,16
            mov RBX,RAX
            cmp RDI,R15
            je .L_406aab
.L_406aa6:

            call _ZdlPv@PLT
.L_406aab:

            mov RDI,RBP
            call .L_40bd80

            jmp .L_406a44
.L_406ab5:

            jmp .L_406a75
.L_406ab7:

            jmp .L_406a75
.L_406ab9:

            mov RBX,RAX
.L_406abc:

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+160]
            add RDX,16
            cmp RDI,RDX
            jne .L_406aa6

            jmp .L_406aab
.L_406ad4:

            mov RDI,QWORD PTR [RSP+192]
            add R15,16
            mov RBX,RAX
            cmp RDI,R15
            je .L_406abc

            call _ZdlPv@PLT

            jmp .L_406abc
.L_406aef:

            mov RBX,RAX
            jmp .L_406a44
.L_406af7:

            mov ESI,32
            mov RDI,RBP
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_406a44
.L_406b0c:

            mov RBX,RAX
            jmp .L_406aab
.L_406b11:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_406a44
.L_406b22:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R14-24]
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+RAX*1+232],RCX
.L_406b47:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+344],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_406a44
.L_406b62:

            mov RBX,RAX
            jmp .L_406b47
.L_406b67:

            jmp .L_406b62
.L_406b69:

            jmp .L_406b22
.L_406b6b:

            jmp .L_406b11
.L_406b6d:

            jmp .L_406b0c
.L_406b6f:

            nop
.L_406b70:

            push R14
            push R13
            lea R13,QWORD PTR [RDI+176]
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+80]
            push RBX
            lea RBP,QWORD PTR [RDI+24]
            mov RBX,RDI
            sub RSP,48
.L_406b8e:

            mov QWORD PTR [RDI+8],RBP
            mov QWORD PTR [RDI+16],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test RSI,RSI
            mov BYTE PTR [RDI+24],0
            mov DWORD PTR [RDI+40],1
            mov BYTE PTR [RDI+44],0
            mov BYTE PTR [RDI+45],0
            mov BYTE PTR [RDI+46],1
            mov QWORD PTR [RDI+48],8388608
            mov BYTE PTR [RDI+56],0
            mov BYTE PTR [RDI+57],0
            mov BYTE PTR [RDI+58],0
            mov BYTE PTR [RDI+59],0
            mov BYTE PTR [RDI+60],1
            mov BYTE PTR [RDI+61],0
            mov BYTE PTR [RDI+62],0
            mov BYTE PTR [RDI+63],0
            mov QWORD PTR [RDI+64],R12
            mov QWORD PTR [RDI+72],0
            mov BYTE PTR [RDI+80],0
            mov QWORD PTR [RDI+160],R13
            mov QWORD PTR [RDI+168],0
            mov BYTE PTR [RDI+176],0
            mov DWORD PTR [RSP+16],1
            mov BYTE PTR [RSP+20],0
            mov BYTE PTR [RSP+21],0
            mov BYTE PTR [RSP+22],1
            mov QWORD PTR [RSP+24],8388608
            mov BYTE PTR [RSP+32],0
            mov BYTE PTR [RSP+33],0
            mov BYTE PTR [RSP+34],0
            mov BYTE PTR [RSP+35],0
            mov BYTE PTR [RSP+36],1
            mov BYTE PTR [RSP+37],0
            mov BYTE PTR [RSP+38],0
            mov BYTE PTR [RSP+39],0
            mov QWORD PTR [RSP],RSI
            je .L_406c6b

            mov RDI,RSI
            call strlen@PLT
.L_406c6b:

            lea RDX,QWORD PTR [RSP+16]
            mov RSI,RSP
            mov RDI,RBX
            mov DWORD PTR [RSP+8],EAX
.L_406c7a:

            call .L_405750
.L_406c7f:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406c9c

            add RSP,48
.L_406c93:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_406c9c:

            call __stack_chk_fail@PLT
.L_406ca1:

            mov RDI,QWORD PTR [RBX+160]
            mov R14,RAX
            cmp R13,RDI
            je .L_406cb5

            call _ZdlPv@PLT
.L_406cb5:

            mov RDI,QWORD PTR [RBX+64]
            cmp R12,RDI
            je .L_406cc3

            call _ZdlPv@PLT
.L_406cc3:

            mov RDI,QWORD PTR [RBX+8]
            cmp RBP,RDI
            je .L_406cd1

            call _ZdlPv@PLT
.L_406cd1:

            mov RDI,R14
.L_406cd4:

            call _Unwind_Resume@PLT
.L_406cd9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ce0:

            push R14
            push R13
            lea R13,QWORD PTR [RDI+176]
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+80]
            push RBX
            lea RBP,QWORD PTR [RDI+24]
            mov RBX,RDI
            sub RSP,48
.L_406cfe:

            mov QWORD PTR [RDI+8],RBP
            mov QWORD PTR [RDI+16],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov BYTE PTR [RDI+24],0
            mov DWORD PTR [RDI+40],1
            lea RDX,QWORD PTR [RSP+16]
            mov BYTE PTR [RDI+44],0
            mov BYTE PTR [RDI+45],0
            mov BYTE PTR [RDI+46],1
            mov QWORD PTR [RDI+48],8388608
            mov BYTE PTR [RDI+56],0
            mov BYTE PTR [RDI+57],0
            mov BYTE PTR [RDI+58],0
            mov BYTE PTR [RDI+59],0
            mov BYTE PTR [RDI+60],1
            mov BYTE PTR [RDI+61],0
            mov BYTE PTR [RDI+62],0
            mov BYTE PTR [RDI+63],0
            mov QWORD PTR [RDI+64],R12
            mov QWORD PTR [RDI+72],0
            mov BYTE PTR [RDI+80],0
            mov QWORD PTR [RDI+160],R13
            mov QWORD PTR [RDI+168],0
            mov BYTE PTR [RDI+176],0
            mov DWORD PTR [RSP+16],1
            mov BYTE PTR [RSP+20],0
            mov BYTE PTR [RSP+21],0
            mov BYTE PTR [RSP+22],1
            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RSP+24],8388608
            mov BYTE PTR [RSP+32],0
            mov BYTE PTR [RSP+33],0
            mov BYTE PTR [RSP+34],0
            mov BYTE PTR [RSP+35],0
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSI+8]
            mov RSI,RSP
            mov BYTE PTR [RSP+36],1
            mov BYTE PTR [RSP+37],0
            mov BYTE PTR [RSP+38],0
            mov BYTE PTR [RSP+39],0
            mov DWORD PTR [RSP+8],EAX
.L_406de1:

            call .L_405750
.L_406de6:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406e03

            add RSP,48
.L_406dfa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_406e03:

            call __stack_chk_fail@PLT
.L_406e08:

            mov RDI,QWORD PTR [RBX+160]
            mov R14,RAX
            cmp R13,RDI
            je .L_406e1c

            call _ZdlPv@PLT
.L_406e1c:

            mov RDI,QWORD PTR [RBX+64]
            cmp R12,RDI
            je .L_406e2a

            call _ZdlPv@PLT
.L_406e2a:

            mov RDI,QWORD PTR [RBX+8]
            cmp RBP,RDI
            je .L_406e38

            call _ZdlPv@PLT
.L_406e38:

            mov RDI,R14
.L_406e3b:

            call _Unwind_Resume@PLT
.L_406e40:

            push R14
            push R13
            lea R13,QWORD PTR [RDI+176]
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+80]
            push RBX
            lea RBP,QWORD PTR [RDI+24]
            mov RBX,RDI
            sub RSP,32
.L_406e5e:

            mov QWORD PTR [RDI+8],RBP
            mov QWORD PTR [RDI+16],0
            mov RDX,RSP
            mov BYTE PTR [RDI+24],0
            mov DWORD PTR [RDI+40],1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov BYTE PTR [RDI+44],0
            mov BYTE PTR [RDI+45],0
            mov BYTE PTR [RDI+46],1
            mov QWORD PTR [RDI+48],8388608
            mov BYTE PTR [RDI+56],0
            mov BYTE PTR [RDI+57],0
            mov BYTE PTR [RDI+58],0
            mov BYTE PTR [RDI+59],0
            mov BYTE PTR [RDI+60],1
            mov BYTE PTR [RDI+61],0
            mov BYTE PTR [RDI+62],0
            mov BYTE PTR [RDI+63],0
            mov QWORD PTR [RDI+64],R12
            mov QWORD PTR [RDI+72],0
            mov BYTE PTR [RDI+80],0
            mov QWORD PTR [RDI+160],R13
            mov QWORD PTR [RDI+168],0
            mov BYTE PTR [RDI+176],0
            mov DWORD PTR [RSP],1
            mov BYTE PTR [RSP+4],0
            mov BYTE PTR [RSP+5],0
            mov BYTE PTR [RSP+6],1
            mov QWORD PTR [RSP+8],8388608
            mov BYTE PTR [RSP+16],0
            mov BYTE PTR [RSP+17],0
            mov BYTE PTR [RSP+18],0
            mov BYTE PTR [RSP+19],0
            mov BYTE PTR [RSP+20],1
            mov BYTE PTR [RSP+21],0
            mov BYTE PTR [RSP+22],0
            mov BYTE PTR [RSP+23],0
.L_406f2c:

            call .L_405750
.L_406f31:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406f4e

            add RSP,32
.L_406f45:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_406f4e:

            call __stack_chk_fail@PLT
.L_406f53:

            mov RDI,QWORD PTR [RBX+160]
            mov R14,RAX
            cmp R13,RDI
            je .L_406f67

            call _ZdlPv@PLT
.L_406f67:

            mov RDI,QWORD PTR [RBX+64]
            cmp R12,RDI
            je .L_406f75

            call _ZdlPv@PLT
.L_406f75:

            mov RDI,QWORD PTR [RBX+8]
            cmp RBP,RDI
            je .L_406f83

            call _ZdlPv@PLT
.L_406f83:

            mov RDI,R14
.L_406f86:

            call _Unwind_Resume@PLT
.L_406f8b:

            nop
            nop
            nop
            nop
            nop
.L_406f90:

            push R14
            push R13
            lea R13,QWORD PTR [RDI+176]
            push R12
            lea R12,QWORD PTR [RDI+80]
            push RBP
            lea RBP,QWORD PTR [RDI+24]
            push RBX
.L_406fa7:

            mov QWORD PTR [RDI+16],0
            mov BYTE PTR [RDI+24],0
            mov DWORD PTR [RDI+40],1
            mov RBX,RDI
            mov QWORD PTR [RDI+8],RBP
            mov BYTE PTR [RDI+44],0
            mov BYTE PTR [RDI+45],0
            mov BYTE PTR [RDI+46],1
            mov QWORD PTR [RDI+48],8388608
            mov BYTE PTR [RDI+56],0
            mov BYTE PTR [RDI+57],0
            mov BYTE PTR [RDI+58],0
            mov BYTE PTR [RDI+59],0
            mov BYTE PTR [RDI+60],1
            mov BYTE PTR [RDI+61],0
            mov BYTE PTR [RDI+62],0
            mov BYTE PTR [RDI+63],0
            mov QWORD PTR [RDI+64],R12
            mov QWORD PTR [RDI+72],0
            mov BYTE PTR [RDI+80],0
            mov QWORD PTR [RDI+160],R13
            mov QWORD PTR [RDI+168],0
            mov BYTE PTR [RDI+176],0
.L_40701e:

            call .L_405750
.L_407023:

            pop RBX
.L_407024:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_40702c:

            mov RDI,QWORD PTR [RBX+160]
            mov R14,RAX
            cmp R13,RDI
            je .L_407040

            call _ZdlPv@PLT
.L_407040:

            mov RDI,QWORD PTR [RBX+64]
            cmp R12,RDI
            je .L_40704e

            call _ZdlPv@PLT
.L_40704e:

            mov RDI,QWORD PTR [RBX+8]
            cmp RBP,RDI
            je .L_40705c

            call _ZdlPv@PLT
.L_40705c:

            mov RDI,R14
.L_40705f:

            call _Unwind_Resume@PLT
.L_407064:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407070:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,552
.L_407084:

            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_40761d

            mov RBP,QWORD PTR [RBX+128]
            test RBP,RBP
            je .L_407100
.L_4070b8:

            mov RDI,QWORD PTR [RSP+24]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_40761d

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_407662

            add RSP,552
.L_4070eb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407100:

            mov RAX,QWORD PTR [RIP+.L_649358]
            cmp QWORD PTR [RBX+144],RAX
            jne .L_4070b8

            mov RCX,QWORD PTR [RBX+48]
            movabs RDX,6148914691236517206
            mov RDI,QWORD PTR [RBX+112]
            mov RAX,RCX
            sar RCX,63
            imul RDX
            mov RSI,RDX
            sub RSI,RCX
.L_407132:

            call .L_41a8e0
.L_407137:

            test RAX,RAX
            mov RBP,RAX
            mov QWORD PTR [RBX+128],RAX
            jne .L_4070b8

            cmp BYTE PTR [RBX+46],0
            je .L_407410

            lea R12,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R15
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov QWORD PTR [RSP+496],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4071ed:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4071f2:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_4072b3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4072b8:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_4072c9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,244
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407307:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_435747]
            mov EDX,25
.L_407318:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBX+8]
            lea R14,QWORD PTR [RSP+112]
            lea RSI,QWORD PTR [RSP+32]
            mov RDI,R14
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+40],EAX
            call .L_402fe0
.L_407340:

            mov RDX,QWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            lea RDI,QWORD PTR [R12+8]
.L_40734f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_43575f]
            mov EDX,1
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407368:

            mov RDI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_40737b

            call _ZdlPv@PLT
.L_40737b:

            cmp BYTE PTR [RSP+144],0
            je .L_40744e
.L_407389:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_4073ca

            call _ZdlPv@PLT
.L_4073ca:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+RAX*1+152],RDX
            mov QWORD PTR [RSP+264],R15
            call _ZNSt8ios_baseD2Ev@PLT
.L_407410:

            mov EDI,32
.L_407415:

            call _Znwm@PLT
.L_40741a:

            lea RDX,QWORD PTR [RIP+.L_4359e2]
            mov R12,RAX
            lea RAX,QWORD PTR [RAX+16]
            mov RDI,R12
            lea RSI,QWORD PTR [RDX-42]
            mov QWORD PTR [R12],RAX
.L_407433:

            call .L_402f10
.L_407438:

            mov QWORD PTR [RBX+144],R12
            mov DWORD PTR [RBX+152],14
            jmp .L_4070b8
.L_40744e:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_407622

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_407585

            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_4074bf:

            call .L_402f10
.L_4074c4:

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_407636

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_4076ac

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_4076bb

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_407524:

            mov RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+120],0
            add R14,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,R14
            je .L_407548
.L_407543:

            call _ZdlPv@PLT
.L_407548:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_407557:

            call write@PLT
.L_40755c:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_407389

            call _ZdlPv@PLT

            jmp .L_407389
.L_407585:

            lea R14,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+80],RAX
.L_407596:

            call .L_402f10

            mov RSI,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            cmp RSI,RAX
            je .L_407667

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_40768f

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_40769e

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4075f5:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+88],0
            add R14,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+80]
            cmp RDI,R14
            jne .L_407543

            jmp .L_407548
.L_40761d:

            call abort@PLT
.L_407622:

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R12+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_407631:

            jmp .L_407548
.L_407636:

            test RDX,RDX
            je .L_407654

            cmp RDX,1
            je .L_4076c9

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
.L_407654:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_407524
.L_407662:

            call __stack_chk_fail@PLT
.L_407667:

            test RDX,RDX
            je .L_407681

            cmp RDX,1
            je .L_4076e2

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
.L_407681:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_4075f5
.L_40768f:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_40769e:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+80],RAX
            jmp .L_4075f5
.L_4076ac:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_4076bb:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+112],RAX
            jmp .L_407524
.L_4076c9:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            jmp .L_407654
.L_4076e2:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_407681
.L_4076f5:

            mov RBX,RAX
.L_4076f8:

            lea RDI,QWORD PTR [RSP+24]
            call .L_40c0f0

            mov RDI,RBX
.L_407705:

            call _Unwind_Resume@PLT
.L_40770a:

            mov RDI,QWORD PTR [RSP+112]
            add R14,16
            mov RBX,RAX
            cmp RDI,R14
            je .L_407720

            call _ZdlPv@PLT
.L_407720:

            mov RDI,R12
            call .L_40bd80

            jmp .L_4076f8
.L_40772a:

            mov ESI,32
            mov RDI,R12
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_4076f8
.L_40773c:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_407754

            call _ZdlPv@PLT
.L_407754:

            call _ZSt9terminatev@PLT
.L_407759:

            jmp .L_40773c
.L_40775b:

            mov RBX,RAX
            jmp .L_407720
.L_407760:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_4076f8
.L_40776f:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+RAX*1+152],RDX
.L_407797:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+264],R15
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_4076f8
.L_4077ae:

            mov RBX,RAX
            jmp .L_407797
.L_4077b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4077c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,712
.L_4077d4:

            mov EDI,DWORD PTR [RDI+152]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],R9
            test EDI,EDI
            jne .L_407980

            cmp QWORD PTR [RBP+112],0
            je .L_407980

            movsxd R13,EDX
            mov EAX,R13D
            shr EAX,31
            cmp R13D,ECX
            setg R12B
            or R12B,AL
            jne .L_407c18

            cmp ECX,DWORD PTR [RSI+8]
            mov R15,RSI
            mov DWORD PTR [RSP+16],R8D
            jg .L_407c18

            movdqu XMM0,XMMWORD PTR [RSI]
            sub ECX,R13D
            lea RDX,QWORD PTR [RSP+160]
            movsxd RAX,R13D
            mov RDI,RBP
            mov QWORD PTR [RSP+160],0
            movaps XMMWORD PTR [RSP+144],XMM0
            mov DWORD PTR [RSP+152],ECX
            mov ECX,DWORD PTR [RSP+768]
            add QWORD PTR [RSP+144],RAX
            test ECX,ECX
            mov EAX,0
            cmovne RAX,RDX
            mov DWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+96],RAX
.L_407889:

            call .L_403bc0
.L_40788e:

            mov RBX,QWORD PTR [RBP+120]
            add EAX,1
            cmp DWORD PTR [RSP+768],EAX
            mov R8D,DWORD PTR [RSP+16]
            cmovle EAX,DWORD PTR [RSP+768]
            cmp BYTE PTR [RBX],0
            mov DWORD PTR [RSP+76],EAX
            je .L_4080f0

            test R13D,R13D
            jne .L_407950

            cmp BYTE PTR [RBX+1],1
            je .L_409224

            cmp R8D,2
            mov R8D,1
            je .L_409224
.L_4078d9:

            mov RAX,QWORD PTR [RBP+72]
            test RAX,RAX
            je .L_40822f
.L_4078e6:

            mov ECX,DWORD PTR [RSP+152]
            movsxd R13,EAX
            cmp EAX,ECX
            jg .L_407950

            cmp BYTE PTR [RBP+96],0
            movsxd R14,EAX
            mov R9,QWORD PTR [RSP+144]
            mov RDI,QWORD PTR [RBP+64]
            je .L_4081dd

            lea RAX,QWORD PTR [RDI+R14*1]
            cmp RDI,RAX
            lea RAX,QWORD PTR [R9+R14*1]
            jb .L_407931

            jmp .L_408210
          .byte 0x90
.L_407920:

            add R9,1
            add RDI,1
            cmp R9,RAX
            je .L_408210
.L_407931:

            movzx EDX,BYTE PTR [R9]
            lea R10D,DWORD PTR [RDX-65]
            lea ESI,DWORD PTR [RDX+32]
            cmp R10B,26
            cmovb EDX,ESI
            cmp DL,BYTE PTR [RDI]
            je .L_407920

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407950:

            xor R12D,R12D
.L_407953:

            mov RCX,QWORD PTR [RSP+696]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40a5c9

            add RSP,712
.L_407974:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_407980:

            cmp BYTE PTR [RBP+46],0
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_407a28:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_407a2d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_407afe:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_407b03:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_407b13:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,538
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407b4f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435761]
            mov EDX,13
.L_407b5f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+144]
            lea RDI,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RAX]
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407b7b:

            cmp BYTE PTR [RSP+304],0
            je .L_407f70
.L_407b89:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+312],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+424],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_407bc6

            call _ZdlPv@PLT
.L_407bc6:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBX+72]
            xor R12D,R12D
            mov QWORD PTR [RSP+320],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RCX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RCX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_407953
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407c18:

            cmp BYTE PTR [RBP+46],0
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_407cc4:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_407cc9:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_407d9a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_407d9f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_407daf:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,544
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407deb:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4359e8]
            mov EDX,35
.L_407dfb:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407e00:

            cmp BYTE PTR [RSP+304],0
            jne .L_407b89

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_409211

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            jbe .L_408c90

            lea RCX,QWORD PTR [RSP+272]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+88],RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_407ea0:

            call .L_402f10
.L_407ea5:

            mov RSI,QWORD PTR [RSP+272]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            cmp RSI,RAX
            je .L_409623

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+288]
            add RCX,16
            cmp RDI,RCX
            je .L_4097d7

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_4097ef

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RCX
.L_407f1d:

            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_407f47
.L_407f42:

            call _ZdlPv@PLT
.L_407f47:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_407f5c:

            call write@PLT
.L_407f61:

            jmp .L_4080c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407f70:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_408c78

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            ja .L_408110

            lea RCX,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+80],RCX
            mov QWORD PTR [RSP+240],RAX
.L_407fff:

            call .L_402f10
.L_408004:

            mov RSI,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            cmp RSI,RAX
            je .L_408d60

            mov RAX,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+256]
            add RAX,16
            cmp RDI,RAX
            je .L_408ddd

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RCX
            je .L_408df5

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RAX
.L_40807c:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4080a6
.L_4080a1:

            call _ZdlPv@PLT
.L_4080a6:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_4080bb:

            call write@PLT
.L_4080c0:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+304],1
            add RAX,16
            cmp RDI,RAX
            je .L_407b89

            call _ZdlPv@PLT

            jmp .L_407b89
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4080f0:

            mov RAX,QWORD PTR [RBP+72]
            test RAX,RAX
            je .L_408bc0

            test R13D,R13D
            jne .L_407950

            jmp .L_4078e6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408110:

            lea RCX,QWORD PTR [RSP+272]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+88],RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_408132:

            call .L_402f10
.L_408137:

            mov RSI,QWORD PTR [RSP+272]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            cmp RSI,RAX
            je .L_408da0

            mov RAX,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+288]
            add RAX,16
            cmp RDI,RAX
            je .L_408e0b

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RCX
            je .L_408e23

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RAX
.L_4081af:

            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            jne .L_4080a1

            jmp .L_4080a6
.L_4081dd:

            mov RDX,R14
            mov RSI,R9
            mov DWORD PTR [RSP+32],R8D
            mov DWORD PTR [RSP+24],ECX
            mov QWORD PTR [RSP+16],R9
            call memcmp@PLT

            test EAX,EAX
            jne .L_407950

            mov R9,QWORD PTR [RSP+16]
            mov R8D,DWORD PTR [RSP+32]
            mov ECX,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [R9+R14*1]
.L_408210:

            sub ECX,R13D
            mov QWORD PTR [RSP+144],RAX
            cmp R8D,2
            mov EAX,1
            mov DWORD PTR [RSP+152],ECX
            cmovne R8D,EAX
.L_40822f:

            cmp DWORD PTR [RSP+76],5
            movzx EAX,BYTE PTR [RBP+45]
            movsxd RCX,DWORD PTR [RBX+12]
            mov BYTE PTR [RSP+143],0
            mov DWORD PTR [RSP+104],EAX
            setle AL
            and AL,BYTE PTR [RBP+136]
            mov DWORD PTR [RSP+112],ECX
            mov BYTE PTR [RSP+111],AL
            mov EAX,262144
            cqo 
            idiv RCX
            mov DWORD PTR [RSP+116],EAX
.L_408267:

            cmp R8D,2
            mov EAX,2
            cmovne EAX,DWORD PTR [RSP+104]
            cmp BYTE PTR [RSP+111],0
            mov DWORD PTR [RSP+104],EAX
            je .L_4088d8

            mov EAX,DWORD PTR [R15+8]
            cmp EAX,4096
            jg .L_4088d8

            cmp DWORD PTR [RSP+76],1
            setg DL
            cmp EAX,8
            setle AL
            or DL,AL
            je .L_408a60

            movzx R14D,BYTE PTR [RIP+.L_649340]
            test R14B,R14B
            jne .L_409ce8

            mov BYTE PTR [RSP+111],DL
            mov DWORD PTR [RSP+96],1
.L_4082c6:

            mov RAX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+120],1
            mov QWORD PTR [RSP+176],RAX
            mov EAX,DWORD PTR [RSP+152]
            mov DWORD PTR [RSP+184],EAX
.L_4082e9:

            cmp BYTE PTR [RSP+111],0
            je .L_408e39

            test R14B,R14B
            je .L_40866d

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_40839f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4083a4:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_408475:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40847a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_40848a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,744
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4084c6:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_4084d6:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40850f:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_408523:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_415210
.L_40855e:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+64]
.L_408573:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RIP+.L_435826]
            mov EDX,15
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4085a7:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_4085c2

            call _ZdlPv@PLT
.L_4085c2:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4085dd

            call _ZdlPv@PLT
.L_4085dd:

            cmp BYTE PTR [RSP+304],0
            je .L_409e76
.L_4085eb:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+312],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+424],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_408628

            call _ZdlPv@PLT
.L_408628:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+320],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RDX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RDX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_40866d:

            lea RSI,QWORD PTR [RSP+176]
            sub RSP,8
.L_408679:

            mov RDI,QWORD PTR [RBP+120]
            mov EAX,DWORD PTR [RSP+84]
            mov ECX,1
            mov RDX,R15
            push RAX
            mov R9,QWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+120]
.L_408694:

            call .L_427a90

            test AL,AL
            pop R8
            pop R9
.L_40869f:

            jne .L_408856

            cmp BYTE PTR [RSP+120],0
            jne .L_407953

            cmp BYTE PTR [RBP+46],0
            je .L_407953

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,749
            mov RDI,RBX
            call .L_40c150
.L_4086d6:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435836]
.L_4086e1:

            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_4086e6:

            mov RDI,RBX
            call .L_40bd80

            jmp .L_407953
.L_4086f3:

            xor R13D,R13D
            cmp BYTE PTR [RIP+.L_649340],0
            je .L_40882f

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,668
            mov RDI,RBX
.L_40871a:

            call .L_40c150
.L_40871f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_40872f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_408768:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40877c:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R14,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R14
            mov QWORD PTR [RSP+88],R14
            call .L_415210
.L_4087b2:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R13
.L_4087c5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_4357dc]
            mov RDI,R13
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_4087f0:

            mov RDI,QWORD PTR [RSP+272]
            mov RAX,R14
            add RAX,16
            cmp RDI,RAX
            je .L_408809

            call _ZdlPv@PLT
.L_408809:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_408824

            call _ZdlPv@PLT
.L_408824:

            mov RDI,RBX
            xor R13D,R13D
            call .L_40bd80
.L_40882f:

            cmp DWORD PTR [RSP+76],1
            jg .L_409010

            jne .L_408856

            mov RAX,QWORD PTR [RSP+160]
            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RDX],RAX
            mov EAX,DWORD PTR [RSP+168]
            mov DWORD PTR [RDX+8],EAX
.L_408856:

            test R13D,R13D
            jle .L_408877

            mov EAX,DWORD PTR [RSP+768]
            test EAX,EAX
            jle .L_408877

            mov RDX,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RDX+8]
            sub QWORD PTR [RDX],R13
            add EAX,R13D
            mov DWORD PTR [RDX+8],EAX
.L_408877:

            mov EBX,DWORD PTR [RSP+76]
            cmp DWORD PTR [RSP+768],EBX
            jle .L_4088c7

            mov EDX,DWORD PTR [RSP+768]
            movsxd RCX,EBX
            mov RSI,QWORD PTR [RSP+8]
            mov RAX,RCX
            shl RAX,4
            sub EDX,1
            add RAX,RSI
            sub EDX,EBX
            add RDX,RCX
            shl RDX,4
            lea RDX,QWORD PTR [RSI+RDX*1+16]
            nop
            nop
.L_4088b0:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RAX,RDX
            jne .L_4088b0
.L_4088c7:

            mov R12D,1
            jmp .L_407953
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4088d8:

            cmp DWORD PTR [RSP+112],500
            jg .L_408a60

            mov EAX,DWORD PTR [RSP+116]
            cmp DWORD PTR [R15+8],EAX
            jg .L_408a60

            cmp DWORD PTR [RSP+76],1
            jle .L_408a60

            movzx R14D,BYTE PTR [RIP+.L_649340]
            mov DWORD PTR [RSP+96],1
            test R14B,R14B
            je .L_4082c6

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,698
            mov RDI,RBX
.L_40892f:

            call .L_40c150
.L_408934:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_408944:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40897d:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_408991:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_415210
.L_4089ca:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R14
.L_4089dd:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_43580a]
            mov RDI,R14
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_408a08:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_408a23

            call _ZdlPv@PLT
.L_408a23:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_408a3e

            call _ZdlPv@PLT
.L_408a3e:

            mov RDI,RBX
            call .L_40bd80

            movzx R14D,BYTE PTR [RIP+.L_649340]
            mov DWORD PTR [RSP+96],1
            jmp .L_4082c6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408a60:

            lea RAX,QWORD PTR [RSP+144]
            mov ECX,1
            mov RDX,R15
            mov RDI,RBX
            mov QWORD PTR [RSP+120],RAX
            push 0
.L_408a7a:

            mov RSI,RAX
            lea RAX,QWORD PTR [RSP+151]
            push RAX
            mov R8D,DWORD PTR [RSP+120]
            lea R9,QWORD PTR [RSP+176]
.L_408a93:

            call .L_421780

            test AL,AL
            pop R10
            pop R11
.L_408a9e:

            jne .L_40882f

            cmp BYTE PTR [RSP+143],0
            movzx R14D,BYTE PTR [RIP+.L_649340]
            je .L_40969d

            test R14B,R14B
            mov DWORD PTR [RSP+96],1
            je .L_4082c6

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,708
            mov RDI,RBX
            call .L_40c150
.L_408ae7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_408af7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_408b30:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_408b44:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_415210
.L_408b7a:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R14
.L_408b8d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_4357a9]
            mov RDI,R14
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_408bb8:

            jmp .L_408a08
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408bc0:

            cmp DWORD PTR [RSP+76],5
            movsxd RCX,DWORD PTR [RBX+12]
            movzx EDI,BYTE PTR [RBP+45]
            mov BYTE PTR [RSP+143],0
            setle AL
            and AL,BYTE PTR [RBP+136]
            mov DWORD PTR [RSP+112],ECX
            mov DWORD PTR [RSP+104],EDI
            mov BYTE PTR [RSP+111],AL
            mov EAX,262144
            cqo 
            idiv RCX
            mov DWORD PTR [RSP+116],EAX
            lea EAX,DWORD PTR [R8-1]
            cmp EAX,1
            jbe .L_40996e

            lea RAX,QWORD PTR [RSP+144]
            mov R8D,EDI
            xor ECX,ECX
            mov RDX,R15
            mov RDI,RBX
            mov QWORD PTR [RSP+120],RAX
            push 0
.L_408c1f:

            mov RSI,RAX
            lea R13,QWORD PTR [RSP+151]
            push R13
            mov R9,QWORD PTR [RSP+112]
.L_408c31:

            call .L_421780
.L_408c36:

            test AL,AL
            pop R14
            pop RDX
.L_408c3b:

            jne .L_409050

            movzx EAX,BYTE PTR [RIP+.L_649340]
            cmp BYTE PTR [RSP+143],0
            mov BYTE PTR [RSP+111],AL
            je .L_409833

            test AL,AL
            jne .L_409ff7
.L_408c62:

            xor R14D,R14D
            xor R13D,R13D
            mov DWORD PTR [RSP+96],0
            jmp .L_4082c6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408c78:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_408c81:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_408c86:

            jmp .L_4080a6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408c90:

            lea RCX,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+80],RCX
            mov QWORD PTR [RSP+240],RAX
.L_408caf:

            call .L_402f10
.L_408cb4:

            mov RSI,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            cmp RSI,RAX
            je .L_409660

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+256]
            add RCX,16
            cmp RDI,RCX
            je .L_409805

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40981d

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_408d2c:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            jne .L_407f42

            jmp .L_407f47
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408d60:

            test RDX,RDX
            je .L_408d84

            cmp RDX,1
            je .L_40994f

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+208]
.L_408d84:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+240]
            jmp .L_40807c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408da0:

            test RDX,RDX
            je .L_408dc4

            cmp RDX,1
            je .L_409930

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+280]
            mov RDI,QWORD PTR [RSP+208]
.L_408dc4:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+272]
            jmp .L_4081af
.L_408ddd:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RCX
.L_408df5:

            mov RAX,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+240],RDI
            jmp .L_40807c
.L_408e0b:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RCX
.L_408e23:

            mov RAX,QWORD PTR [RSP+88]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+272],RDI
            jmp .L_4081af
.L_408e39:

            cmp DWORD PTR [RSP+112],500
            jg .L_40922f

            mov EAX,DWORD PTR [RSP+116]
            cmp DWORD PTR [RSP+184],EAX
            jg .L_40922f

            test R14B,R14B
            je .L_408f8f

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,754
            mov RDI,RBX
.L_408e78:

            call .L_40c150
.L_408e7d:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_408e8d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_408ec6:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_408eda:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_415210
.L_408f13:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R14
.L_408f26:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435852]
            mov RDI,R14
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_408f51:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_408f6c

            call _ZdlPv@PLT
.L_408f6c:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_408f87

            call _ZdlPv@PLT
.L_408f87:

            mov RDI,RBX
            call .L_40bd80
.L_408f8f:

            lea RSI,QWORD PTR [RSP+176]
            sub RSP,8
.L_408f9b:

            mov RDI,QWORD PTR [RBP+120]
            mov EAX,DWORD PTR [RSP+84]
            mov RDX,R15
            push RAX
            mov R9,QWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+120]
            mov ECX,DWORD PTR [RSP+112]
.L_408fb5:

            call .L_4174b0

            test AL,AL
            pop RSI
            pop RDI
.L_408fbe:

            jne .L_408856

            cmp BYTE PTR [RSP+120],0
            jne .L_407953

            cmp BYTE PTR [RBP+46],0
            je .L_407953

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,760
            mov RDI,RBX
            call .L_40c150
.L_408ff5:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435863]
.L_409000:

            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_409005:

            jmp .L_4086e6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409010:

            mov RAX,QWORD PTR [RSP+160]
            movzx R14D,BYTE PTR [RIP+.L_649340]
            mov BYTE PTR [RSP+120],0
            mov DWORD PTR [RSP+104],2
            mov DWORD PTR [RSP+96],1
            mov QWORD PTR [RSP+176],RAX
            mov EAX,DWORD PTR [RSP+168]
            mov DWORD PTR [RSP+184],EAX
            jmp .L_4082e9
.L_409050:

            cmp BYTE PTR [RIP+.L_649340],0
            jne .L_409976
.L_40905d:

            cmp QWORD PTR [RSP+96],0
            je .L_4088c7

            mov RDI,RBP
.L_40906c:

            call .L_407070

            test RAX,RAX
            je .L_407950

            lea RSI,QWORD PTR [RSP+160]
            push 0
.L_409084:

            push R13
            mov R8D,1
            mov ECX,1
            mov RDX,R15
            mov R9,RSI
            mov RDI,RAX
            call .L_421780

            test AL,AL
            pop RBX
            pop R13
.L_4090a4:

            jne .L_4086f3

            movzx EAX,BYTE PTR [RIP+.L_649340]
            cmp BYTE PTR [RSP+143],0
            mov BYTE PTR [RSP+111],AL
            je .L_40a3eb

            test AL,AL
            je .L_408c62

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,654
            mov RDI,RBX
            call .L_40c150
.L_4090e7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_4090f7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_409130:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_409144:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R14,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R14
            mov QWORD PTR [RSP+88],R14
            call .L_415210
.L_40917a:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R13
.L_40918d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_4357a1]
            mov RDI,R13
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_4091b8:

            mov RDI,QWORD PTR [RSP+272]
            mov RAX,R14
            add RAX,16
            cmp RDI,RAX
            je .L_4091d1

            call _ZdlPv@PLT
.L_4091d1:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4091ec

            call _ZdlPv@PLT
.L_4091ec:

            mov RDI,RBX
            xor R13D,R13D
            call .L_40bd80

            movzx R14D,BYTE PTR [RIP+.L_649340]
            mov BYTE PTR [RSP+111],0
            mov DWORD PTR [RSP+96],0
            jmp .L_4082c6
.L_409211:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_40921a:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40921f:

            jmp .L_407f47
.L_409224:

            mov R8D,2
            jmp .L_4078d9
.L_40922f:

            test R14B,R14B
            je .L_4095a8

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_4092da:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4092df:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_4093b0:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4093b5:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_4093c5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,765
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_409401:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_409411:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40944a:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40945e:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_415210
.L_409499:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+64]
.L_4094ae:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RIP+.L_435880]
            mov EDX,11
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4094e2:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_4094fd

            call _ZdlPv@PLT
.L_4094fd:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_409518

            call _ZdlPv@PLT
.L_409518:

            cmp BYTE PTR [RSP+304],0
            je .L_40a0e9
.L_409526:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+312],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+424],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_409563

            call _ZdlPv@PLT
.L_409563:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+320],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RDX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RDX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_4095a8:

            lea RSI,QWORD PTR [RSP+176]
            sub RSP,8
.L_4095b4:

            mov RDI,QWORD PTR [RBP+120]
            mov EAX,DWORD PTR [RSP+84]
            mov RDX,R15
            push RAX
            mov R9,QWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+120]
            mov ECX,DWORD PTR [RSP+112]
.L_4095ce:

            call .L_4275a0

            test AL,AL
            pop RDX
            pop RCX
            jne .L_408856

            cmp BYTE PTR [RSP+120],0
            jne .L_407953

            cmp BYTE PTR [RBP+46],0
            je .L_407953

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,770
            mov RDI,RBX
            call .L_40c150
.L_40960e:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43588c]
.L_409619:

            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40961e:

            jmp .L_4086e6
.L_409623:

            test RDX,RDX
            je .L_409647

            cmp RDX,1
            je .L_409e38

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+280]
            mov RDI,QWORD PTR [RSP+208]
.L_409647:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+272]
            jmp .L_407f1d
.L_409660:

            test RDX,RDX
            je .L_409684

            cmp RDX,1
            je .L_409e57

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+208]
.L_409684:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+240]
            jmp .L_408d2c
.L_40969d:

            test R14B,R14B
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,715
            mov RDI,RBX
.L_4096bd:

            call .L_40c150
.L_4096c2:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_4096d2:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40970b:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40971f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R15,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R15
            mov QWORD PTR [RSP+88],R15
            call .L_415210
.L_409755:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,RBP
.L_409768:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435779]
            mov RDI,RBP
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_409793:

            mov RDI,QWORD PTR [RSP+272]
            mov RAX,R15
            add RAX,16
            cmp RDI,RAX
            je .L_4097ac

            call _ZdlPv@PLT
.L_4097ac:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4097c7

            call _ZdlPv@PLT
.L_4097c7:

            mov RDI,RBX
            xor R12D,R12D
            call .L_40bd80

            jmp .L_407953
.L_4097d7:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_4097ef:

            mov RAX,QWORD PTR [RSP+88]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+272],RDI
            jmp .L_407f1d
.L_409805:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40981d:

            mov RAX,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+240],RDI
            jmp .L_408d2c
.L_409833:

            cmp BYTE PTR [RSP+111],0
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,631
            mov RDI,RBX
.L_409855:

            call .L_40c150
.L_40985a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_40986a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_4098a3:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_4098b7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R15,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R15
            mov QWORD PTR [RSP+88],R15
            call .L_415210
.L_4098ed:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,RBP
.L_409900:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435779]
            mov RDI,RBP
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40992b:

            jmp .L_409793
.L_409930:

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+280]
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_408dc4
.L_40994f:

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_408d84
.L_40996e:

            xor R13D,R13D
            jmp .L_408267
.L_409976:

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_409a18:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_409a1d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_409aee:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_409af3:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_409b03:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,637
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_409b3f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_409b4f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_409b88:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_409b9c:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_415210
.L_409bd4:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+64]
.L_409be9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RIP+.L_43578f]
            mov EDX,17
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_409c1d:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_409c38

            call _ZdlPv@PLT
.L_409c38:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_409c53

            call _ZdlPv@PLT
.L_409c53:

            cmp BYTE PTR [RSP+304],0
            je .L_40a26a
.L_409c61:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+312],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+424],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_409c9e

            call _ZdlPv@PLT
.L_409c9e:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+320],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RDX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RDX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_40905d
.L_409ce8:

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,690
            mov RDI,RBX
.L_409cff:

            call .L_40c150
.L_409d04:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_409d14:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_409d4d:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_409d61:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_415210
.L_409d9c:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+16]
.L_409db1:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_4357ef]
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_409de0:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_409dfb

            call _ZdlPv@PLT
.L_409dfb:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_409e16

            call _ZdlPv@PLT
.L_409e16:

            mov RDI,RBX
            call .L_40bd80

            mov BYTE PTR [RSP+111],R14B
            mov DWORD PTR [RSP+96],1
            movzx R14D,BYTE PTR [RIP+.L_649340]
            jmp .L_4082c6
.L_409e38:

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+280]
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_409647
.L_409e57:

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_409684
.L_409e76:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_40a69a

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            jbe .L_40a431

            mov RCX,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_409efd:

            call .L_402f10
.L_409f02:

            mov RCX,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a6fa

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+288]
            add RCX,16
            cmp RDI,RCX
            je .L_40a890

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a8a8

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RCX
.L_409f7f:

            mov RAX,QWORD PTR [RSP+272]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_409fb1
.L_409fac:

            call _ZdlPv@PLT
.L_409fb1:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_409fc6:

            call write@PLT
.L_409fcb:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+304],1
            add RAX,16
            cmp RDI,RAX
            je .L_4085eb

            call _ZdlPv@PLT

            jmp .L_4085eb
.L_409ff7:

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,625
            mov RDI,RBX
.L_40a00e:

            call .L_40c150
.L_40a013:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_40a023:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40a05c:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40a070:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R14,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R14
            mov QWORD PTR [RSP+88],R14
            call .L_415210
.L_40a0a6:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R13
.L_40a0b9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_4357a9]
            mov RDI,R13
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40a0e4:

            jmp .L_4091b8
.L_40a0e9:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_40a6ad

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            jbe .L_40a4fd

            mov RCX,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_40a170:

            call .L_402f10
.L_40a175:

            mov RCX,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a954

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+288]
            add RCX,16
            cmp RDI,RCX
            je .L_40a926

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a93e

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RCX
.L_40a1f2:

            mov RAX,QWORD PTR [RSP+272]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_40a224
.L_40a21f:

            call _ZdlPv@PLT
.L_40a224:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_40a239:

            call write@PLT
.L_40a23e:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+304],1
            add RAX,16
            cmp RDI,RAX
            je .L_409526

            call _ZdlPv@PLT

            jmp .L_409526
.L_40a26a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_40a98e

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            jbe .L_40a5ce

            mov RCX,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_40a2f1:

            call .L_402f10
.L_40a2f6:

            mov RCX,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a8ec

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+288]
            add RCX,16
            cmp RDI,RCX
            je .L_40a8be

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a8d6

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RCX
.L_40a373:

            mov RAX,QWORD PTR [RSP+272]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_40a3a5
.L_40a3a0:

            call _ZdlPv@PLT
.L_40a3a5:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_40a3ba:

            call write@PLT
.L_40a3bf:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+304],1
            add RAX,16
            cmp RDI,RAX
            je .L_409c61

            call _ZdlPv@PLT

            jmp .L_409c61
.L_40a3eb:

            cmp BYTE PTR [RSP+111],0
            jne .L_40a734
.L_40a3f6:

            cmp BYTE PTR [RBP+46],0
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,664
            mov RDI,RBX
.L_40a417:

            call .L_40c150
.L_40a41c:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4357ca]
.L_40a427:

            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40a42c:

            jmp .L_4097c7
.L_40a431:

            mov RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+240],RAX
.L_40a445:

            call .L_402f10
.L_40a44a:

            mov RCX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+240]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a6c0

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+256]
            add RCX,16
            cmp RDI,RCX
            je .L_40a862

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a87a

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_40a4c7:

            mov RAX,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            jne .L_409fac

            jmp .L_409fb1
.L_40a4fd:

            mov RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+240],RAX
.L_40a511:

            call .L_402f10
.L_40a516:

            mov RCX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+240]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40aa37

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+256]
            add RCX,16
            cmp RDI,RCX
            je .L_40aa09

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40aa21

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_40a593:

            mov RAX,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            jne .L_40a21f

            jmp .L_40a224
.L_40a5c9:

            call __stack_chk_fail@PLT
.L_40a5ce:

            mov RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+240],RAX
.L_40a5e2:

            call .L_402f10
.L_40a5e7:

            mov RCX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+240]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a9cf

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+256]
            add RCX,16
            cmp RDI,RCX
            je .L_40a9a1

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a9b9

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_40a664:

            mov RAX,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            jne .L_40a3a0

            jmp .L_40a3a5
.L_40a69a:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_40a6a3:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40a6a8:

            jmp .L_409fb1
.L_40a6ad:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_40a6b6:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40a6bb:

            jmp .L_40a224
.L_40a6c0:

            test RDX,RDX
            je .L_40a6e9

            cmp RDX,1
            jne .L_40ac39

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
.L_40a6e9:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a4c7
.L_40a6fa:

            test RDX,RDX
            je .L_40a723

            cmp RDX,1
            jne .L_40ac1a

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
.L_40a723:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_409f7f
.L_40a734:

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,660
            mov RDI,RBX
.L_40a74b:

            call .L_40c150
.L_40a750:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43576f]
            mov EDX,6
.L_40a760:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40a799:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40a7ad:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435776]
            mov EDX,2
            mov RDI,RAX
            mov R12,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R15,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R15
            mov QWORD PTR [RSP+88],R15
            call .L_415210
.L_40a7e3:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R12
.L_40a7f6:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            mov RDI,RAX
            mov R12,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_4357b6]
            mov RDI,R12
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40a821:

            mov RDI,QWORD PTR [RSP+272]
            mov RAX,R15
            add RAX,16
            cmp RDI,RAX
            je .L_40a83a

            call _ZdlPv@PLT
.L_40a83a:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_40a855

            call _ZdlPv@PLT
.L_40a855:

            mov RDI,RBX
            call .L_40bd80

            jmp .L_40a3f6
.L_40a862:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a87a:

            mov RAX,QWORD PTR [RSP+80]
            add RAX,16
            mov QWORD PTR [RSP+240],RAX
            jmp .L_40a4c7
.L_40a890:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a8a8:

            mov RAX,QWORD PTR [RSP+88]
            add RAX,16
            mov QWORD PTR [RSP+272],RAX
            jmp .L_409f7f
.L_40a8be:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a8d6:

            mov RAX,QWORD PTR [RSP+88]
            add RAX,16
            mov QWORD PTR [RSP+272],RAX
            jmp .L_40a373
.L_40a8ec:

            test RDX,RDX
            je .L_40a915

            cmp RDX,1
            jne .L_40ab86

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
.L_40a915:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a373
.L_40a926:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a93e:

            mov RAX,QWORD PTR [RSP+88]
            add RAX,16
            mov QWORD PTR [RSP+272],RAX
            jmp .L_40a1f2
.L_40a954:

            test RDX,RDX
            je .L_40a97d

            cmp RDX,1
            jne .L_40aa71

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
.L_40a97d:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a1f2
.L_40a98e:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_40a997:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40a99c:

            jmp .L_40a3a5
.L_40a9a1:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a9b9:

            mov RAX,QWORD PTR [RSP+80]
            add RAX,16
            mov QWORD PTR [RSP+240],RAX
            jmp .L_40a664
.L_40a9cf:

            test RDX,RDX
            je .L_40a9f8

            cmp RDX,1
            jne .L_40aa8b

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
.L_40a9f8:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a664
.L_40aa09:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40aa21:

            mov RAX,QWORD PTR [RSP+80]
            add RAX,16
            mov QWORD PTR [RSP+240],RAX
            jmp .L_40a593
.L_40aa37:

            test RDX,RDX
            je .L_40aa60

            cmp RDX,1
            jne .L_40aaee

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
.L_40aa60:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a593
.L_40aa71:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            jmp .L_40a97d
.L_40aa8b:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            jmp .L_40a9f8
.L_40aaa5:

            mov RBP,RAX
            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_40aac3

            call _ZdlPv@PLT
.L_40aac3:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_40aade

            call _ZdlPv@PLT
.L_40aade:

            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
.L_40aae9:

            call _Unwind_Resume@PLT
.L_40aaee:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            jmp .L_40aa60
.L_40ab08:

            jmp .L_40aaa5
.L_40ab0a:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            add RAX,16
            cmp RDI,RAX
            je .L_40ab25

            call _ZdlPv@PLT
.L_40ab25:

            call _ZSt9terminatev@PLT
.L_40ab2a:

            mov RBP,RAX
.L_40ab2d:

            mov RAX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40ab4b:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R14-24]
            mov RDX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RDX
            jmp .L_40ab2d
.L_40ab72:

            mov RBP,RAX
            jmp .L_40aac3
.L_40ab7a:

            mov RBP,RAX
            jmp .L_40aade
.L_40ab82:

            jmp .L_40ab7a
.L_40ab84:

            jmp .L_40ab0a
.L_40ab86:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            jmp .L_40a915
.L_40aba0:

            jmp .L_40ab0a
.L_40aba5:

            jmp .L_40ab72
.L_40aba7:

            jmp .L_40ab7a
.L_40aba9:

            jmp .L_40ab72
.L_40abab:

            jmp .L_40ab7a
.L_40abad:

            jmp .L_40ab72
.L_40abaf:

            jmp .L_40ab7a
.L_40abb1:

            jmp .L_40ab7a
.L_40abb3:

            jmp .L_40ab7a
.L_40abb5:

            jmp .L_40ab0a
.L_40abba:

            jmp .L_40ab2a
.L_40abbf:

            jmp .L_40aaa5
.L_40abc4:

            jmp .L_40aaa5
.L_40abc9:

            jmp .L_40ab72
.L_40abcb:

            jmp .L_40ab7a
.L_40abcd:

            jmp .L_40aaa5
.L_40abd2:

            jmp .L_40ab72
.L_40abd4:

            jmp .L_40ab72
.L_40abd6:

            jmp .L_40ab7a
.L_40abd8:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40abec:

            jmp .L_40ab7a
.L_40abee:

            jmp .L_40abd8
.L_40abf0:

            jmp .L_40ab4b
.L_40abf5:

            jmp .L_40aaa5
.L_40abfa:

            jmp .L_40ab72
.L_40abff:

            jmp .L_40ab7a
.L_40ac04:

            jmp .L_40abd8
.L_40ac06:

            jmp .L_40ab4b
.L_40ac0b:

            jmp .L_40ab2a
.L_40ac10:

            jmp .L_40ab7a
.L_40ac15:

            jmp .L_40ab0a
.L_40ac1a:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            jmp .L_40a723
.L_40ac34:

            jmp .L_40ab7a
.L_40ac39:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            jmp .L_40a6e9
.L_40ac53:

            jmp .L_40ab0a
.L_40ac58:

            jmp .L_40aaa5
.L_40ac5d:

            jmp .L_40ab72
.L_40ac62:

            jmp .L_40ab7a
.L_40ac67:

            jmp .L_40abd8
.L_40ac6c:

            jmp .L_40aaa5
.L_40ac71:

            jmp .L_40aaa5
.L_40ac76:

            jmp .L_40ab72
.L_40ac7b:

            jmp .L_40ab7a
.L_40ac80:

            jmp .L_40ab4b
.L_40ac85:

            jmp .L_40ab2a
.L_40ac8a:

            jmp .L_40ab72
.L_40ac8f:

            jmp .L_40ab7a
.L_40ac94:

            jmp .L_40aaa5
.L_40ac99:

            jmp .L_40ab7a
.L_40ac9e:

            jmp .L_40ab7a
.L_40aca3:

            jmp .L_40ab0a
.L_40aca8:

            jmp .L_40ab7a
.L_40acad:

            jmp .L_40abd8
.L_40acb2:

            jmp .L_40ab4b
.L_40acb7:

            jmp .L_40ab2a
.L_40acbc:

            jmp .L_40aaa5
.L_40acc1:

            jmp .L_40ab72
.L_40acc6:

            jmp .L_40ab0a
.L_40accb:

            jmp .L_40ab0a
.L_40acd0:

            jmp .L_40aaa5
.L_40acd5:

            jmp .L_40ab72
.L_40acda:

            jmp .L_40aaa5
.L_40acdf:

            jmp .L_40ab0a
.L_40ace4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40acf0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,536
.L_40ad04:

            mov R10D,DWORD PTR [RDI+152]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            test R10D,R10D
            je .L_40ad60

            movzx EDX,BYTE PTR [RDI+46]
            test DL,DL
            jne .L_40ae40
.L_40ad2f:

            mov RBX,QWORD PTR [RSP+520]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40b52c

            add RSP,536
.L_40ad4f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ad60:

            test R9D,R9D
            mov R12,RSI
            mov R15,RCX
            sete BYTE PTR [RSP+8]
            test RCX,RCX
            mov R13,R8
            mov R14D,R9D
            movzx EAX,BYTE PTR [RSP+8]
            jne .L_40ae30

            xor ESI,ESI
            test AL,AL
            je .L_40ae30
.L_40ad8c:

            lea RBX,QWORD PTR [RSP+128]
            lea RCX,QWORD PTR [RBX+272]
            mov RAX,RBX
            nop
            nop
.L_40ada0:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RAX,RCX
            jne .L_40ada0

            cmp ESI,17
            jg .L_40b140

            sub RSP,8
.L_40adc4:

            mov ECX,DWORD PTR [R12+8]
            mov R8D,EDX
            push RSI
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBP
            mov R9,RBX
.L_40add8:

            call .L_4077c0
.L_40addd:

            xor ECX,ECX
            test AL,AL
            pop RSI
            pop RDI
.L_40ade3:

            je .L_40b1e0
.L_40ade9:

            test R15,R15
            je .L_40adfc

            movsxd RAX,DWORD PTR [RBX+8]
            add RAX,QWORD PTR [RBX]
            sub RAX,QWORD PTR [R12]
            mov DWORD PTR [R15],EAX
.L_40adfc:

            test R13,R13
            sete DL
            or DL,BYTE PTR [RSP+8]
            je .L_40b0a7

            test RCX,RCX
            je .L_40b1f8
.L_40ae15:

            mov RDI,RCX
            mov BYTE PTR [RSP+8],DL
            call _ZdaPv@PLT

            movzx EDX,BYTE PTR [RSP+8]
            jmp .L_40ad2f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ae30:

            lea ESI,DWORD PTR [R14+1]
            jmp .L_40ad8c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ae40:

            lea RBX,QWORD PTR [RSP+128]
            mov BYTE PTR [RSP+128],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_40aed9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40aede:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+232],0
            mov QWORD PTR [RSP+216],RAX
.L_40af9b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40afa0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4356cd]
            mov EDX,10
.L_40afb0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,795
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40afec:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435761]
            mov EDX,13
.L_40affc:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+144]
            lea RDI,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RAX]
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40b018:

            cmp BYTE PTR [RSP+128],0
            je .L_40b202
.L_40b026:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+216]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_40b05b

            call _ZdlPv@PLT
.L_40b05b:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RSI
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EDX,EDX
            jmp .L_40ad2f
.L_40b0a7:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],RCX
            mov BYTE PTR [RSP+16],DL
.L_40b0b3:

            call .L_403bc0

            cmp R14D,EAX
            mov RCX,QWORD PTR [RSP+8]
            jg .L_40b1cb

            test R14D,R14D
            jle .L_40b1e7

            lea EAX,DWORD PTR [R14-1]
            lea RBP,QWORD PTR [RBX+16]
            shl RAX,4
            lea RBX,QWORD PTR [RBX+RAX*1+32]
            jmp .L_40b0f9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b0e8:

            add RBP,16
            add R13,8
            cmp RBX,RBP
            je .L_40b1e7
.L_40b0f9:

            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [RSP+8],RCX
            mov ESI,DWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RBP]
            mov RDX,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            mov RCX,QWORD PTR [RSP+8]
            jne .L_40b0e8

            test RCX,RCX
            mov BYTE PTR [RSP+8],AL
            je .L_40b1e0

            mov RDI,RCX
            call _ZdaPv@PLT

            movzx EDX,BYTE PTR [RSP+8]
            jmp .L_40ad2f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b140:

            movsxd RCX,ESI
            mov DWORD PTR [RSP+28],EDX
            mov DWORD PTR [RSP+24],ESI
            mov RDI,RCX
            mov QWORD PTR [RSP+16],RCX
            shl RDI,4
            call _Znam@PLT

            mov RCX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+28]
            mov RBX,RAX
            mov ESI,DWORD PTR [RSP+24]
            sub RCX,1
.L_40b170:

            sub RCX,1
            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RCX,-1
            jne .L_40b170

            sub RSP,8
.L_40b190:

            mov ECX,DWORD PTR [R12+8]
            mov R8D,EDX
            push RSI
            xor EDX,EDX
            mov R9,RBX
            mov RSI,R12
            mov RDI,RBP
            call .L_4077c0
.L_40b1a9:

            mov EDX,EAX
            test DL,DL
            pop RAX
            pop RCX
            jne .L_40b3c4

            mov RDI,RBX
            mov BYTE PTR [RSP+8],DL
            call _ZdaPv@PLT

            movzx EDX,BYTE PTR [RSP+8]
            jmp .L_40ad2f
.L_40b1cb:

            test RCX,RCX
            movzx EDX,BYTE PTR [RSP+16]
            jne .L_40ae15

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b1e0:

            xor EDX,EDX
            jmp .L_40ad2f
.L_40b1e7:

            test RCX,RCX
            je .L_40b1f8

            mov RDI,RCX
            call _ZdaPv@PLT

            nop
            nop
            nop
            nop
.L_40b1f8:

            mov EDX,1
            jmp .L_40ad2f
.L_40b202:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+32]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_40b3cc

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_40b32b

            lea RDI,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+64],RAX
.L_40b270:

            call .L_402f10
.L_40b275:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            add RAX,16
            cmp RSI,RAX
            je .L_40b40b

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+80]
            cmp RDI,RCX
            je .L_40b438

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_40b447

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_40b2cf:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_40b2f3
.L_40b2ee:

            call _ZdlPv@PLT
.L_40b2f3:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_40b302:

            call write@PLT
.L_40b307:

            mov RDI,QWORD PTR [RSP+32]
            add RBP,16
            mov BYTE PTR [RSP+128],1
            cmp RDI,RBP
            je .L_40b026

            call _ZdlPv@PLT

            jmp .L_40b026
.L_40b32b:

            lea RDI,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
.L_40b341:

            call .L_402f10

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            add RAX,16
            cmp RSI,RAX
            je .L_40b3dd

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_40b45a

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_40b469

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_40b39c:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_40b2ee

            jmp .L_40b2f3
.L_40b3c4:

            mov RCX,RBX
            jmp .L_40ade9
.L_40b3cc:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40b3d8:

            jmp .L_40b2f3
.L_40b3dd:

            test RDX,RDX
            je .L_40b3fb

            cmp RDX,1
            je .L_40b48f

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
.L_40b3fb:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_40b39c
.L_40b40b:

            test RDX,RDX
            je .L_40b425

            cmp RDX,1
            je .L_40b47c

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
.L_40b425:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_40b2cf
.L_40b438:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_40b447:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_40b2cf
.L_40b45a:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_40b469:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_40b39c
.L_40b47c:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40b425
.L_40b48f:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40b3fb
.L_40b4a5:

            mov RDI,QWORD PTR [RSP+32]
            add RBP,16
            cmp RDI,RBP
            je .L_40b4b8

            call _ZdlPv@PLT
.L_40b4b8:

            call _ZSt9terminatev@PLT
.L_40b4bd:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
.L_40b4cb:

            call _Unwind_Resume@PLT
.L_40b4d0:

            jmp .L_40b4a5
.L_40b4d2:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40b4e6:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RSI
.L_40b50e:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40b527:

            mov RBP,RAX
            jmp .L_40b50e
.L_40b52c:

            call __stack_chk_fail@PLT
.L_40b531:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b540:

            mov RAX,RDI
            mov R8,RDX
            mov RDI,RSI
            mov R9D,ECX
            mov EDX,2
            xor ECX,ECX
            mov RSI,RAX
            jmp .L_40acf0
.L_40b55b:

            nop
            nop
            nop
            nop
            nop
.L_40b560:

            mov RAX,RDI
            mov R8,RDX
            mov RDI,RSI
            mov R9D,ECX
            xor EDX,EDX
            xor ECX,ECX
            mov RSI,RAX
            jmp .L_40acf0
.L_40b578:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b580:

            push RBX
            mov R9D,ECX
            mov RBX,RDI
            mov R8,RDX
            mov RDI,RSI
            mov EDX,1
            sub RSP,16
.L_40b596:

            mov RSI,RBX
            lea RCX,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_40acf0

            test AL,AL
            je .L_40b5c2

            movsxd RCX,DWORD PTR [RSP+4]
            add QWORD PTR [RBX],RCX
            sub DWORD PTR [RBX+8],ECX
.L_40b5c2:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_40b5d8

            add RSP,16
.L_40b5d6:

            pop RBX
            ret 
.L_40b5d8:

            call __stack_chk_fail@PLT
.L_40b5dd:

            nop
            nop
            nop
.L_40b5e0:

            push RBX
            mov R9D,ECX
            mov RBX,RDI
            mov R8,RDX
            mov RDI,RSI
            xor EDX,EDX
            sub RSP,16
.L_40b5f3:

            mov RSI,RBX
            lea RCX,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_40acf0

            test AL,AL
            je .L_40b61f

            movsxd RCX,DWORD PTR [RSP+4]
            add QWORD PTR [RBX],RCX
            sub DWORD PTR [RBX+8],ECX
.L_40b61f:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_40b635

            add RSP,16
.L_40b633:

            pop RBX
            ret 
.L_40b635:

            call __stack_chk_fail@PLT
.L_40b63a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40b640:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov R12,RDI
            sub RSP,344
.L_40b65a:

            lea R14,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+328],RAX
            xor EAX,EAX
            lea RDX,QWORD PTR [R14+272]
            mov RAX,R14
            nop
            nop
            nop
            nop
.L_40b680:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RDX,RAX
            jne .L_40b680

            mov RDI,RBP
            call .L_403310

            lea EBX,DWORD PTR [RAX+1]
            cmp EBX,17
            jle .L_40b6d8
.L_40b6a7:

            xor EBX,EBX
.L_40b6a9:

            mov RCX,QWORD PTR [RSP+328]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_40b7b4

            add RSP,344
.L_40b6c9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b6d8:

            mov RCX,QWORD PTR [R12+8]
            mov RAX,QWORD PTR [R12]
            mov RSI,RSP
            sub RSP,8
            xor EDX,EDX
            xor R8D,R8D
            mov R9,R14
            mov RDI,R13
            mov QWORD PTR [RSP+8],RAX
            mov DWORD PTR [RSP+16],ECX
            push RBX
.L_40b6fd:

            call .L_4077c0
.L_40b702:

            test AL,AL
            pop RDX
            pop RCX
            je .L_40b6a7

            lea R15,QWORD PTR [RSP+16]
            mov R8D,EBX
            mov RCX,R14
            mov RDX,RBP
            mov RDI,R13
            mov QWORD PTR [RSP+24],0
            lea RAX,QWORD PTR [R15+16]
            mov RSI,R15
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
.L_40b733:

            call .L_404ad0

            test AL,AL
            mov EBX,EAX
            mov RDI,QWORD PTR [RSP+16]
            jne .L_40b75a
.L_40b743:

            add R15,16
            cmp RDI,R15
            je .L_40b6a9

            call _ZdlPv@PLT

            jmp .L_40b6a9
.L_40b75a:

            mov RCX,QWORD PTR [R12+8]
            mov RSI,QWORD PTR [RSP+48]
            sub RSI,QWORD PTR [R12]
            movsxd RAX,DWORD PTR [RSP+56]
            mov R8,QWORD PTR [RSP+24]
            mov RDX,RCX
            sub RDX,RSI
            cmp RAX,RDX
            cmovbe RDX,RAX
            cmp RSI,RCX
            ja .L_40b7b9

            mov RCX,RDI
            mov RDI,R12
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_40b78f:

            mov RDI,QWORD PTR [RSP+16]
            jmp .L_40b743
.L_40b796:

            mov RDI,QWORD PTR [RSP+16]
            add R15,16
            mov RBX,RAX
            cmp RDI,R15
            je .L_40b7ac

            call _ZdlPv@PLT
.L_40b7ac:

            mov RDI,RBX
.L_40b7af:

            call _Unwind_Resume@PLT
.L_40b7b4:

            call __stack_chk_fail@PLT
.L_40b7b9:

            mov RDX,RSI
            lea RDI,QWORD PTR [RIP+.L_435a10]
            lea RSI,QWORD PTR [RIP+.L_4358a4]
            xor EAX,EAX
.L_40b7cc:

            call _ZSt24__throw_out_of_range_fmtPKcz@PLT
.L_40b7d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b7e0:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            lea R13,QWORD PTR [RBP-336]
            push R12
            push RBX
            mov R14,RDI
            sub RSP,408
.L_40b7fe:

            mov QWORD PTR [RBP-432],RDX
            lea RDX,QWORD PTR [R13+272]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            mov QWORD PTR [RBP-400],RSI
            mov RAX,R13
            nop
            nop
            nop
.L_40b828:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RAX,RDX
            jne .L_40b828

            mov RDI,QWORD PTR [RBP-432]
            call .L_403310

            lea R12D,DWORD PTR [RAX+1]
            cmp R12D,17
            jg .L_40ba30

            mov RAX,QWORD PTR [R14]
            lea RSI,QWORD PTR [RBP-368]
            mov RCX,QWORD PTR [R14+8]
            mov QWORD PTR [RBP-360],0
            mov BYTE PTR [RBP-352],0
            lea RDX,QWORD PTR [RSI+16]
            mov QWORD PTR [RBP-408],RSI
            mov RDI,RAX
            add RDI,RCX
            mov QWORD PTR [RBP-368],RDX
            mov QWORD PTR [RBP-424],RDI
            jb .L_40ba30

            lea RDI,QWORD PTR [RBP-384]
            mov RBX,RAX
            mov DWORD PTR [RBP-412],0
            xor R15D,R15D
            mov QWORD PTR [RBP-440],RDI
            jmp .L_40b90c
          .byte 0x66
          .byte 0x90
.L_40b8c0:

            mov RDX,QWORD PTR [RBP-432]
            mov RSI,QWORD PTR [RBP-408]
            mov R8D,R12D
            mov RDI,QWORD PTR [RBP-400]
            mov RCX,R13
.L_40b8db:

            call .L_404ad0

            movsxd RBX,DWORD PTR [RBP-328]
            add DWORD PTR [RBP-412],1
            add RBX,QWORD PTR [RBP-336]
            cmp QWORD PTR [RBP-424],RBX
            mov R15,RBX
            jb .L_40b9a0
.L_40b905:

            mov RAX,QWORD PTR [R14]
            mov RCX,QWORD PTR [R14+8]
.L_40b90c:

            sub RSP,8
            mov RSI,QWORD PTR [RBP-440]
            mov RDI,QWORD PTR [RBP-400]
            mov RDX,RBX
            push R12
            mov R9,R13
            sub RDX,RAX
            xor R8D,R8D
            mov QWORD PTR [RBP-384],RAX
            mov DWORD PTR [RBP-376],ECX
.L_40b939:

            call .L_4077c0

            test AL,AL
            pop RCX
            pop RSI
            je .L_40b9a0

            mov RAX,QWORD PTR [RBP-336]
            cmp RAX,RBX
            mov QWORD PTR [RBP-392],RAX
            ja .L_40b9e8
.L_40b95b:

            cmp QWORD PTR [RBP-392],R15
            jne .L_40b8c0

            mov EDX,DWORD PTR [RBP-328]
            test EDX,EDX
            jne .L_40b8c0

            cmp QWORD PTR [RBP-424],RBX
            ja .L_40ba68

            mov R15,QWORD PTR [RBP-392]
            add RBX,1
.L_40b98e:

            cmp QWORD PTR [RBP-424],RBX
            jae .L_40b905

            nop
            nop
            nop
            nop
            nop
.L_40b9a0:

            mov EAX,DWORD PTR [RBP-412]
            test EAX,EAX
            je .L_40b9c6

            cmp QWORD PTR [RBP-424],RBX
            ja .L_40baa3
.L_40b9b7:

            mov RDI,QWORD PTR [RBP-408]
            mov RSI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_@PLT
.L_40b9c6:

            mov RAX,QWORD PTR [RBP-408]
            mov RDI,QWORD PTR [RBP-368]
            add RAX,16
            cmp RDI,RAX
            je .L_40ba3a

            call _ZdlPv@PLT

            jmp .L_40ba3a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b9e8:

            mov RDX,RAX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBP-360]
            sub RDX,RBX
            cmp RDX,RAX
            ja .L_40bb0f

            mov RDI,QWORD PTR [RBP-408]
            mov RSI,RBX
.L_40ba12:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RAX,QWORD PTR [RBP-336]
            mov QWORD PTR [RBP-392],RAX
            jmp .L_40b95b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ba30:

            mov DWORD PTR [RBP-412],0
.L_40ba3a:

            mov RSI,QWORD PTR [RBP-56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RBP-412]
            jne .L_40bb0a

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_40ba61:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ba68:

            movabs RAX,9223372036854775807
            cmp QWORD PTR [RBP-360],RAX
            je .L_40bb1b

            mov RDI,QWORD PTR [RBP-408]
            mov EDX,1
            mov RSI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            add RBX,1
            mov R15,QWORD PTR [RBP-392]
            jmp .L_40b98e
.L_40baa3:

            mov RDX,QWORD PTR [RBP-424]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBP-360]
            sub RDX,RBX
            cmp RDX,RAX
            ja .L_40bad7

            mov RDI,QWORD PTR [RBP-408]
            mov RSI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_40b9b7
.L_40bad7:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40bae3:

            mov RDX,QWORD PTR [RBP-408]
            mov RDI,QWORD PTR [RBP-368]
            mov RBX,RAX
            add RDX,16
            cmp RDI,RDX
            je .L_40bb02

            call _ZdlPv@PLT
.L_40bb02:

            mov RDI,RBX
.L_40bb05:

            call _Unwind_Resume@PLT
.L_40bb0a:

            call __stack_chk_fail@PLT
.L_40bb0f:

            lea RDI,QWORD PTR [RIP+.L_4356af]
.L_40bb16:

            call _ZSt20__throw_length_errorPKc@PLT
.L_40bb1b:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40bb27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bb30:

            push R14
            push R13
            mov R10,RDI
            push R12
            push RBP
            mov RBP,RDX
            push RBX
            mov R12,RSI
            mov R13,RCX
            sub RSP,288
.L_40bb4b:

            mov R14,RSP
            lea RDX,QWORD PTR [R14+272]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov RAX,R14
            nop
            nop
            nop
            nop
            nop
.L_40bb70:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RDX,RAX
            jne .L_40bb70

            mov RDI,RBP
            call .L_403310

            lea EBX,DWORD PTR [RAX+1]
            cmp EBX,17
            jle .L_40bbc0
.L_40bb97:

            xor EAX,EAX
.L_40bb99:

            mov RSI,QWORD PTR [RSP+280]
            xor RSI,QWORD PTR FS:[40]
            jne .L_40bc07

            add RSP,288
.L_40bbb3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40bbc0:

            sub RSP,8
            mov ECX,DWORD PTR [R10+8]
            xor EDX,EDX
            push RBX
            xor R8D,R8D
            mov R9,R14
            mov RSI,R10
            mov RDI,R12
            call .L_4077c0

            test AL,AL
            pop RDX
            pop RCX
            je .L_40bb97

            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [R13+8],0
            mov R8D,EBX
            mov RCX,R14
            mov RDX,RBP
            mov RSI,R13
            mov RDI,R12
            mov BYTE PTR [RAX],0
            call .L_404ad0

            jmp .L_40bb99
.L_40bc07:

            call __stack_chk_fail@PLT
.L_40bc0c:

            nop
            nop
            nop
            nop
.L_40bc10:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_40bc19:

            mov RDI,QWORD PTR [RDI+112]
            test RDI,RDI
            je .L_40bc27

            call .L_40f010
.L_40bc27:

            mov RDI,QWORD PTR [RBX+104]
            test RDI,RDI
            je .L_40bc35

            call .L_40f010
.L_40bc35:

            mov RBP,QWORD PTR [RBX]
            test RBP,RBP
            je .L_40bc5a

            mov RDI,RBP
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_40bd77

            mov ESI,56
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bc5a:

            mov RBP,QWORD PTR [RBX+120]
            test RBP,RBP
            je .L_40bc78

            mov RDI,RBP
            call .L_42f3c0

            mov ESI,440
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bc78:

            mov RBP,QWORD PTR [RBX+128]
            test RBP,RBP
            je .L_40bc99

            mov RDI,RBP
            call .L_42f3c0

            mov ESI,440
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bc99:

            mov RBP,QWORD PTR [RBX+144]
            cmp QWORD PTR [RIP+.L_649358],RBP
            je .L_40bccd

            test RBP,RBP
            je .L_40bccd

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_40bcc0

            call _ZdlPv@PLT
.L_40bcc0:

            mov ESI,32
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bccd:

            mov RBP,QWORD PTR [RBX+200]
            test RBP,RBP
            je .L_40bcfb

            cmp RBP,QWORD PTR [RIP+.L_649350]
            je .L_40bcfb

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c3a0

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bcfb:

            mov RBP,QWORD PTR [RBX+208]
            test RBP,RBP
            je .L_40bd29

            cmp RBP,QWORD PTR [RIP+.L_649348]
            je .L_40bd29

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c400

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bd29:

            mov RDI,QWORD PTR [RBX+160]
            lea RAX,QWORD PTR [RBX+176]
            cmp RDI,RAX
            je .L_40bd41

            call _ZdlPv@PLT
.L_40bd41:

            mov RDI,QWORD PTR [RBX+64]
            lea RAX,QWORD PTR [RBX+80]
            cmp RDI,RAX
            je .L_40bd53

            call _ZdlPv@PLT
.L_40bd53:

            mov RDI,QWORD PTR [RBX+8]
            add RBX,24
            cmp RDI,RBX
            je .L_40bd70

            add RSP,8
.L_40bd64:

            pop RBX
            pop RBP
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bd70:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40bd77:

            call abort@PLT
.L_40bd7c:

            nop
            nop
            nop
            nop
.L_40bd80:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,112
.L_40bd8b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI],0
            je .L_40be38
.L_40bda4:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RBX+88]
            mov QWORD PTR [RBX+8],RAX
            add RAX,40
            mov QWORD PTR [RBX+120],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RBX+16],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_40bdd4

            call _ZdlPv@PLT
.L_40bdd4:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RBX+16],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RBX+RAX*1+8],RDX
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RBX+120],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40c0cd

            add RSP,112
.L_40be2f:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40be38:

            lea RSI,QWORD PTR [RIP+.L_4369d7]
            add RDI,8
            mov EDX,1
            mov RBP,RSP
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+8],0
            mov BYTE PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RBX+56]
            test RAX,RAX
            je .L_40bfd8

            mov RDX,QWORD PTR [RBX+40]
            mov RSI,QWORD PTR [RBX+48]
            cmp RAX,RDX
            ja .L_40bf40

            lea R12,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+32],RAX
.L_40be96:

            call .L_402f10
.L_40be9b:

            mov RSI,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+40]
            cmp RSI,RAX
            je .L_40bff0

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+48]
            cmp RDI,RCX
            je .L_40c060

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
            je .L_40c06e

            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+48],RCX
.L_40beef:

            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+32]
            cmp RDI,R12
            je .L_40bf0e
.L_40bf09:

            call _ZdlPv@PLT
.L_40bf0e:

            movsxd RDX,DWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            mov EDI,2
.L_40bf1c:

            call write@PLT
.L_40bf21:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov BYTE PTR [RBX],1
            cmp RDI,RBP
            je .L_40bda4

            call _ZdlPv@PLT

            jmp .L_40bda4
          .byte 0x90
.L_40bf40:

            lea R12,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+64],RDX
            mov RDX,RAX
.L_40bf55:

            call .L_402f10

            mov RSI,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+72]
            cmp RSI,RAX
            je .L_40c028

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+80]
            cmp RDI,RCX
            je .L_40c080

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
            je .L_40c08e

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_40bfae:

            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+64]
            cmp RDI,R12
            jne .L_40bf09

            jmp .L_40bf0e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bfd8:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40bfe4:

            jmp .L_40bf0e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bff0:

            test RDX,RDX
            je .L_40c010

            cmp RDX,1
            je .L_40c0b8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP]
            nop
            nop
            nop
.L_40c010:

            mov QWORD PTR [RSP+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40beef
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c028:

            test RDX,RDX
            je .L_40c048

            cmp RDX,1
            je .L_40c0a0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c048:

            mov QWORD PTR [RSP+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_40bfae
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c060:

            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
.L_40c06e:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+32],RDI
            jmp .L_40beef
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c080:

            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
.L_40c08e:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_40bfae
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c0a0:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP]
            jmp .L_40c048
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c0b8:

            movzx EAX,BYTE PTR [RSP+48]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP]
            jmp .L_40c010
.L_40c0cd:

            call __stack_chk_fail@PLT
.L_40c0d2:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            cmp RDI,RBP
            je .L_40c0e4

            call _ZdlPv@PLT
.L_40c0e4:

            call _ZSt9terminatev@PLT
.L_40c0e9:

            jmp .L_40c0d2
.L_40c0eb:

            nop
            nop
            nop
            nop
            nop
.L_40c0f0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_40c105

            add RSP,8
            ret 
.L_40c105:

            call abort@PLT
.L_40c10a:

            nop
            nop
            nop
            nop
            nop
            nop
#-----------------------------------
.align 16
.weak _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
.type _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev, @function
#-----------------------------------
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev:
#-----------------------------------
.align 16
.weak _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev
.type _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev, @function
#-----------------------------------
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            mov RDI,QWORD PTR [RDI+72]
            lea RAX,QWORD PTR [RBX+88]
            cmp RDI,RAX
            je .L_40c130

            call _ZdlPv@PLT
.L_40c130:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+56]
            mov QWORD PTR [RBX],RAX
            pop RBX
            jmp _ZNSt6localeD1Ev@PLT
.L_40c144:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c150:

            push R15
            push R14
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push R13
            lea R13,QWORD PTR [RDI+120]
            push R12
            push RBP
            push RBX
            lea RBP,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov R12,RSI
            sub RSP,24
.L_40c173:

            mov BYTE PTR [RDI],0
            mov RDI,R13
            mov DWORD PTR [RSP+12],EDX
            call _ZNSt8ios_baseC2Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RBX+344],0
            xor ESI,ESI
            mov QWORD PTR [RBX+120],R14
            mov QWORD PTR [RBX+336],0
            mov BYTE PTR [RBX+345],0
            mov QWORD PTR [RBX+352],0
            mov RDI,QWORD PTR [RAX-24]
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RBX+360],0
            mov QWORD PTR [RBX+368],0
            mov QWORD PTR [RBX+376],0
            add RDI,RBP
            mov QWORD PTR [RDI],RAX
.L_40c1e9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40c1ee:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+40],0
            lea R15,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            add RAX,40
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+120],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+64],0
            mov QWORD PTR [RBX+16],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov DWORD PTR [RBX+80],16
            mov QWORD PTR [RBX+96],0
            mov BYTE PTR [RBX+104],0
            mov RSI,R15
            mov RDI,R13
            mov QWORD PTR [RBX+16],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RBX+88],RAX
.L_40c275:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40c27a:

            test R12,R12
            je .L_40c2e0

            mov RDI,R12
            call strlen@PLT

            mov RSI,R12
            mov RDX,RAX
            mov RDI,RBP
.L_40c290:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40c295:

            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            mov RDI,RBP
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RSP+12]
            mov RDI,RBP
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            add RSP,24
.L_40c2cd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c2e0:

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RAX-24]
            add RDI,RBP
            mov ESI,DWORD PTR [RDI+32]
            or ESI,1
            call _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@PLT
.L_40c2f6:

            jmp .L_40c295
.L_40c2f8:

            mov RDI,R15
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RBX+RAX*1+8],RCX
.L_40c31e:

            mov RDI,R13
            mov QWORD PTR [RBX+120],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
.L_40c32d:

            call _Unwind_Resume@PLT
.L_40c332:

            mov RBP,RAX
            jmp .L_40c31e
.L_40c337:

            mov RBX,RAX
            mov RDI,RBP
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40c34a:

            nop
            nop
            nop
            nop
            nop
            nop
#-----------------------------------
.align 16
.weak _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev
.type _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev, @function
#-----------------------------------
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            mov RDI,QWORD PTR [RDI+72]
            lea RAX,QWORD PTR [RBX+88]
            cmp RDI,RAX
            je .L_40c370

            call _ZdlPv@PLT
.L_40c370:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+56]
            mov QWORD PTR [RBX],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RDI,RBX
            mov ESI,104
            pop RBX
            jmp _ZdlPvm@PLT
.L_40c391:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c3a0:

            test RSI,RSI
            je .L_40c3f0

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_40c3af:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_40c3a0

            mov RDI,QWORD PTR [RBX+32]
            lea RAX,QWORD PTR [RBX+48]
            mov RBP,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40c3d1

            call _ZdlPv@PLT
.L_40c3d1:

            mov RDI,RBX
            mov RBX,RBP
            call _ZdlPv@PLT

            test RBP,RBP
            jne .L_40c3af

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c3f0:

            ret 
.L_40c3f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c400:

            test RSI,RSI
            je .L_40c450

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_40c40f:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_40c400

            mov RDI,QWORD PTR [RBX+40]
            lea RAX,QWORD PTR [RBX+56]
            mov RBP,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40c431

            call _ZdlPv@PLT
.L_40c431:

            mov RDI,RBX
            mov RBX,RBP
            call _ZdlPv@PLT

            test RBP,RBP
            jne .L_40c40f

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c450:

            ret 
.L_40c452:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c460:

            push R15
            push R14
            mov R15,RCX
            push R13
            push R12
            lea R13,QWORD PTR [RDI+8]
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            mov R14D,1
            sub RSP,8
            test RSI,RSI
            je .L_40c4c8
.L_40c486:

            mov EDI,40
            call _Znwm@PLT

            mov RBX,RAX
            mov RAX,QWORD PTR [R15]
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov EDI,R14D
            mov QWORD PTR [RBX+32],RAX
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RBP+40],1
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c4c8:

            cmp RDX,R13
            je .L_40c486

            xor R14D,R14D
            mov EAX,DWORD PTR [RDX+32]
            cmp DWORD PTR [RCX+4],EAX
            setl R14B
            jmp .L_40c486
.L_40c4dc:

            nop
            nop
            nop
            nop
.L_40c4e0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_40c4ee:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_40c50c

            test RDX,RDX
            jne .L_40c597
.L_40c50c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_40c560

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_40c590

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_40c534:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40c5a3

            add RSP,16
.L_40c554:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c560:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_40c579:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_40c534
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c590:

            test RBX,RBX
            je .L_40c534

            jmp .L_40c579
.L_40c597:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_40c5a3:

            call __stack_chk_fail@PLT
.L_40c5a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c5b0:

            pxor XMM0,XMM0
            mov BYTE PTR [RDI],SIL
            mov BYTE PTR [RDI+1],0
            mov WORD PTR [RDI+2],DX
            mov QWORD PTR [RDI+4],1
            mov QWORD PTR [RDI+12],0
            mov DWORD PTR [RDI+20],0
            movups XMMWORD PTR [RDI+24],XMM0
            ret 
.L_40c5db:

            nop
            nop
            nop
            nop
            nop
.L_40c5e0:

            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_40c5f0:

            movsxd RAX,DWORD PTR [RDI+24]
            test EAX,EAX
            je .L_40c670

            cmp EAX,7
            mov R12,QWORD PTR [RDI+32]
            jle .L_40c657

            lea EBP,DWORD PTR [RAX-1]
            and EBP,EAX
            jne .L_40c657

            lea EDI,DWORD PTR [RAX+RAX*1]
            movsxd RDI,EDI
            shl RDI,2
            call _Znam@PLT

            mov EDX,DWORD PTR [RBX+24]
            mov QWORD PTR [RBX+32],RAX
            test EDX,EDX
            jle .L_40c690

            xor EDX,EDX
            jmp .L_40c634
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c630:

            mov RAX,QWORD PTR [RBX+32]
.L_40c634:

            mov ECX,DWORD PTR [R12+RDX*1]
            add EBP,1
            mov DWORD PTR [RAX+RDX*1],ECX
            add RDX,4
            cmp DWORD PTR [RBX+24],EBP
            jg .L_40c630
.L_40c647:

            mov RDI,R12
            call _ZdaPv@PLT

            movsxd RAX,DWORD PTR [RBX+24]
            mov R12,QWORD PTR [RBX+32]
.L_40c657:

            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBX+24],EDX
            mov DWORD PTR [R12+RAX*4],R13D
            add RSP,8
.L_40c665:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c670:

            mov EDI,32
            call _Znam@PLT

            mov R12,RAX
            mov QWORD PTR [RBX+32],RAX
            movsxd RAX,DWORD PTR [RBX+24]
            jmp .L_40c657
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c690:

            test R12,R12
            jne .L_40c647

            mov R12,RAX
            movsxd RAX,DWORD PTR [RBX+24]
            jmp .L_40c657
.L_40c69e:

            nop
            nop
.L_40c6a0:

            push RBP
            push RBX
            mov EBX,EDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            mov EDX,21
            mov WORD PTR [RAX+2],BP
            mov QWORD PTR [RAX+4],1
            mov WORD PTR [RAX],DX
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            mov QWORD PTR [RAX+28],0
            mov DWORD PTR [RAX+36],0
            mov DWORD PTR [RAX+24],EBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40c6f0:

            cmp BYTE PTR [RDI],8
            jne .L_40c700

            movzx EDX,WORD PTR [RDI+2]
            mov RAX,RDI
            cmp ESI,EDX
            je .L_40c750
.L_40c700:

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,8
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],BP
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov WORD PTR [RAX+6],SI
            movups XMMWORD PTR [RAX+24],XMM0
            mov QWORD PTR [RAX+8],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_40c750:

            ret 
.L_40c752:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c760:

            cmp BYTE PTR [RDI],7
            jne .L_40c770

            movzx EDX,WORD PTR [RDI+2]
            mov RAX,RDI
            cmp ESI,EDX
            je .L_40c7c0
.L_40c770:

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,7
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],BP
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov WORD PTR [RAX+6],SI
            movups XMMWORD PTR [RAX+24],XMM0
            mov QWORD PTR [RAX+8],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_40c7c0:

            ret 
.L_40c7c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c7d0:

            cmp BYTE PTR [RDI],9
            jne .L_40c7e0

            movzx EDX,WORD PTR [RDI+2]
            mov RAX,RDI
            cmp ESI,EDX
            je .L_40c830
.L_40c7e0:

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,9
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],BP
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov WORD PTR [RAX+6],SI
            movups XMMWORD PTR [RAX+24],XMM0
            mov QWORD PTR [RAX+8],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_40c830:

            ret 
.L_40c832:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c840:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40c847:

            mov EDI,40
            mov R12D,ESI
            mov EBX,EDX
            call _Znwm@PLT

            mov EDX,11
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],R12W
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+28],0
            mov DWORD PTR [RAX+36],0
            mov WORD PTR [RAX+6],SI
            mov QWORD PTR [RAX+8],RBP
            mov DWORD PTR [RAX+24],EBX
            pop RBX
.L_40c894:

            pop RBP
            pop R12
            ret 
.L_40c898:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c8a0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov EDI,40
            mov R13D,ESI
            mov EBP,EDX
            mov EBX,ECX
            sub RSP,8
.L_40c8b9:

            call _Znwm@PLT

            mov EDX,10
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],R13W
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+32],0
            mov WORD PTR [RAX+6],SI
            mov QWORD PTR [RAX+8],R12
            mov DWORD PTR [RAX+28],EBP
            mov DWORD PTR [RAX+24],EBX
            add RSP,8
.L_40c8fb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c902:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c910:

            push RBP
            push RBX
            mov EBX,EDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            mov EDX,3
            mov WORD PTR [RAX+2],BP
            mov QWORD PTR [RAX+4],1
            mov WORD PTR [RAX],DX
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            mov QWORD PTR [RAX+28],0
            mov DWORD PTR [RAX+36],0
            mov DWORD PTR [RAX+24],EBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40c960:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            sub RSP,8
.L_40c96d:

            test ESI,ESI
            jle .L_40ca08

            cmp ESI,1
            mov RBX,RDI
            mov R12D,ESI
            je .L_40c9f0

            mov EDI,40
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov RBP,RAX
            mov EAX,4
            mov WORD PTR [RBP+2],R13W
            mov QWORD PTR [RBP+4],1
            mov WORD PTR [RBP],AX
            lea EAX,DWORD PTR [R12-1]
            mov QWORD PTR [RBP+12],0
            movups XMMWORD PTR [RBP+24],XMM0
            lea R12,QWORD PTR [RBX+RAX*4+4]
            mov DWORD PTR [RBP+20],0
            nop
            nop
            nop
            nop
.L_40c9c8:

            mov RDI,RBP
            add RBX,4
            mov ESI,DWORD PTR [RBX-4]
            call .L_40c5e0

            cmp R12,RBX
            jne .L_40c9c8

            add RSP,8
.L_40c9e0:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c9f0:

            mov EDI,DWORD PTR [RDI]
            add RSP,8
            mov ESI,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_40c910
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ca08:

            mov EDI,40
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,2
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],R13W
            mov RBP,RAX
            mov QWORD PTR [RAX+4],1
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            movups XMMWORD PTR [RAX+24],XMM0
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40ca4f:

            nop
.L_40ca50:

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            mov EDX,20
            mov WORD PTR [RAX+2],BP
            mov QWORD PTR [RAX+4],1
            mov WORD PTR [RAX],DX
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+24],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40ca9b:

            nop
            nop
            nop
            nop
            nop
.L_40caa0:

            push RBX
            mov EDX,40
            mov RBX,RSI
            sub RSP,48
.L_40caad:

            movdqu XMM0,XMMWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+32]
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+16]
            mov QWORD PTR [RSP+32],RAX
            movaps XMMWORD PTR [RSP+16],XMM0
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+32]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov QWORD PTR [RBX+32],RAX
            movups XMMWORD PTR [RBX],XMM0
            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jne .L_40cb0e

            add RSP,48
.L_40cb0c:

            pop RBX
            ret 
.L_40cb0e:

            call __stack_chk_fail@PLT
.L_40cb13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cb20:

            push RBX
            lea RAX,QWORD PTR [RDI+16]
            mov RBX,RDI
            sub RSP,16
            cmp ESI,13
            jbe .L_40cb58

            lea RSI,QWORD PTR [RIP+.L_435aec]
            mov QWORD PTR [RDI],RAX
            mov EAX,16
.L_40cb40:

            lea RDX,QWORD PTR [RSI+RAX*1]
.L_40cb44:

            mov RDI,RBX
            call .L_40c4e0

            add RSP,16
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cb58:

            lea RDX,QWORD PTR [RIP+.L_645f40]
            movsxd RSI,ESI
            mov QWORD PTR [RDI],RAX
            mov RSI,QWORD PTR [RDX+RSI*8]
            mov RDX,-1
            test RSI,RSI
            je .L_40cb44

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call strlen@PLT

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_40cb40
.L_40cb89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cb90:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,104
.L_40cb9d:

            mov EDX,DWORD PTR [RSI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            movsxd RAX,DWORD PTR [RSI]
            test EDX,EDX
            jne .L_40cc08

            cmp EAX,13
            lea RDX,QWORD PTR [RDI+16]
            jbe .L_40cd50

            lea RSI,QWORD PTR [RIP+.L_435aec]
            mov QWORD PTR [RDI],RDX
            mov EAX,16
.L_40cbd3:

            lea RDX,QWORD PTR [RSI+RAX*1]
.L_40cbd7:

            mov RDI,RBX
.L_40cbda:

            call .L_40c4e0
.L_40cbdf:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_40cd97

            add RSP,104
.L_40cbfa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cc08:

            lea R12,QWORD PTR [RSP+16]
            cmp EAX,13
            mov RBP,RSI
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            lea RDX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+16],RDX
            jbe .L_40cd08

            lea R13,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RIP+.L_435aec]
            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+48],RAX
            mov EAX,16
.L_40cc4b:

            lea RDX,QWORD PTR [RSI+RAX*1]
.L_40cc4f:

            mov RDI,R13
.L_40cc52:

            call .L_40c4e0
.L_40cc57:

            mov RDX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R12
.L_40cc64:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_40cc69:

            mov RDI,QWORD PTR [RSP+48]
            add R13,16
            cmp RDI,R13
            je .L_40cc7c

            call _ZdlPv@PLT
.L_40cc7c:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RSP+24]
            cmp RAX,1
            jbe .L_40cd9c

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,R12
.L_40cca4:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            movsxd RDX,DWORD PTR [RBP+16]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RBP+8]
            cmp RDX,RAX
            ja .L_40cdc6

            mov RDI,R12
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            lea RAX,QWORD PTR [RBX+16]
            add R12,16
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,R12
            je .L_40cd88

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RBX+16],RAX
.L_40ccf6:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_40cbdf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40cd08:

            lea RDX,QWORD PTR [RIP+.L_645f40]
            lea R13,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RDX+RAX*8]
            lea RAX,QWORD PTR [R13+16]
            mov RDX,-1
            mov QWORD PTR [RSP+48],RAX
            test RSI,RSI
            je .L_40cc4f

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call strlen@PLT

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_40cc4b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cd50:

            lea RCX,QWORD PTR [RIP+.L_645f40]
            mov QWORD PTR [RDI],RDX
            mov RDX,-1
            mov RSI,QWORD PTR [RCX+RAX*8]
            test RSI,RSI
            je .L_40cbd7

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call strlen@PLT

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_40cbd3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cd88:

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_40ccf6
.L_40cd97:

            call __stack_chk_fail@PLT
.L_40cd9c:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40cda8:

            mov RBX,RAX
.L_40cdab:

            mov RDI,QWORD PTR [RSP+16]
            add R12,16
            cmp RDI,R12
            je .L_40cdbe

            call _ZdlPv@PLT
.L_40cdbe:

            mov RDI,RBX
.L_40cdc1:

            call _Unwind_Resume@PLT
.L_40cdc6:

            lea RDI,QWORD PTR [RIP+.L_4356af]
.L_40cdcd:

            call _ZSt20__throw_length_errorPKc@PLT
.L_40cdd2:

            mov RDI,QWORD PTR [RSP+48]
            add R13,16
            mov RBX,RAX
            cmp RDI,R13
            je .L_40cdab

            call _ZdlPv@PLT

            jmp .L_40cdab
.L_40cdea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40cdf0:

            mov EAX,DWORD PTR [RSI]
            mov DWORD PTR [RDI],EAX
            mov RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RDI+8],RAX
            mov EAX,DWORD PTR [RSI+16]
            mov DWORD PTR [RDI+16],EAX
            ret 
.L_40ce03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ce10:

            lea RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RDI+24],0
            mov QWORD PTR [RDI+32],0
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+40],RAX
            mov QWORD PTR [RDI+48],RAX
            mov DWORD PTR [RDI+8],0
            ret 
.L_40ce42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ce50:

            mov RAX,QWORD PTR [RDI+32]
            lea RCX,QWORD PTR [RDI+24]
            test RAX,RAX
            je .L_40ce90

            mov RDX,RCX
            jmp .L_40ce74
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ce68:

            mov RDX,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_40ce82
.L_40ce74:

            cmp ESI,DWORD PTR [RAX+36]
            jle .L_40ce68

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_40ce74
.L_40ce82:

            cmp RDX,RCX
            je .L_40ce90

            cmp ESI,DWORD PTR [RDX+32]
            setge AL
            ret 
          .byte 0x66
          .byte 0x90
.L_40ce90:

            xor EAX,EAX
            ret 
.L_40ce93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cea0:

            mov EAX,DWORD PTR [RDI]
            xor EAX,DWORD PTR [RDI+4]
            test EAX,67108863
            sete AL
            ret 
.L_40ceae:

            nop
            nop
.L_40ceb0:

            movsxd RDI,EDI
            sub RSP,8
            lea RDI,QWORD PTR [RDI*8+24]
            call _Znam@PLT

            lea RDX,QWORD PTR [RAX+24]
            mov DWORD PTR [RAX+16],0
            mov BYTE PTR [RAX],0
            mov DWORD PTR [RAX+4],0
            mov QWORD PTR [RAX+8],RDX
            add RSP,8
            ret 
.L_40cee2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cef0:

            jmp _ZdaPv@PLT
.L_40cef5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cf00:

            push RBX
.L_40cf01:

            mov EAX,DWORD PTR [RDI+16]
            mov RBX,RDI
            add EAX,1
            cdqe 
            lea RDI,QWORD PTR [RAX*8+24]
            call _Znam@PLT

            movzx EDX,BYTE PTR [RBX]
            movsxd RCX,DWORD PTR [RBX+16]
            lea R10,QWORD PTR [RAX+24]
            mov DWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+8],R10
            mov BYTE PTR [RAX],DL
            mov EDX,1114112
            sub EDX,DWORD PTR [RBX+4]
            mov DWORD PTR [RAX+4],EDX
            mov RDX,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RDX+RCX*8]
            cmp RDX,R9
            je .L_40cfb8

            xor ECX,ECX
            xor EDI,EDI
            jmp .L_40cf73
          .byte 0x90
.L_40cf50:

            movsxd R8,EDI
            sub ESI,1
            add RDX,8
            lea R8,QWORD PTR [R10+R8*8]
            add EDI,1
            mov DWORD PTR [R8],ECX
            mov DWORD PTR [R8+4],ESI
            mov EBX,DWORD PTR [RDX-4]
            cmp RDX,R9
            lea ECX,DWORD PTR [RBX+1]
            je .L_40cf88
.L_40cf73:

            mov ESI,DWORD PTR [RDX]
            cmp ESI,ECX
            jne .L_40cf50

            mov EBX,DWORD PTR [RDX+4]
            add RDX,8
            cmp RDX,R9
            lea ECX,DWORD PTR [RBX+1]
            jne .L_40cf73
.L_40cf88:

            cmp ECX,1114111
            jle .L_40cf98

            mov DWORD PTR [RAX+16],EDI
            pop RBX
.L_40cf94:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cf98:

            movsxd RDX,EDI
            add EDI,1
            lea R10,QWORD PTR [R10+RDX*8]
.L_40cfa2:

            mov DWORD PTR [R10],ECX
            mov DWORD PTR [R10+4],1114111
            mov DWORD PTR [RAX+16],EDI
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cfb8:

            mov EDI,1
            xor ECX,ECX
            jmp .L_40cfa2
.L_40cfc1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cfd0:

            mov ECX,DWORD PTR [RDI+16]
            mov R8,QWORD PTR [RDI+8]
            test ECX,ECX
            jg .L_40cfee

            jmp .L_40d00c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cfe0:

            add EDX,1
            lea R8,QWORD PTR [R8+RAX*1+8]
            sub ECX,EDX
            test ECX,ECX
            jle .L_40d00c
.L_40cfee:

            mov EDX,ECX
            sar EDX,1
            movsxd RAX,EDX
            shl RAX,3
            lea RDI,QWORD PTR [R8+RAX*1]
            cmp DWORD PTR [RDI+4],ESI
            jl .L_40cfe0

            cmp DWORD PTR [RDI],ESI
            jle .L_40d010

            mov ECX,EDX
            test ECX,ECX
            jg .L_40cfee
.L_40d00c:

            xor EAX,EAX
            ret 
          .byte 0x90
.L_40d010:

            mov EAX,1
            ret 
.L_40d016:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d020:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            lea R13,QWORD PTR [R12+24]
            sub RSP,8
.L_40d032:

            movsxd RAX,DWORD PTR [RDI+56]
            lea RDI,QWORD PTR [RAX*8+24]
            call _Znam@PLT

            mov RBP,RAX
            add RAX,24
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [R12+40]
            mov DWORD PTR [RBP+16],0
            mov BYTE PTR [RBP],0
            mov DWORD PTR [RBP+4],0
            cmp RAX,R13
            je .L_40d0b8

            xor EBX,EBX
            nop
            nop
            nop
            nop
.L_40d070:

            mov RDX,QWORD PTR [RAX+32]
            add RBX,1
            mov RDI,RAX
            mov QWORD PTR [RBP+RBX*8+16],RDX
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp RAX,R13
            jne .L_40d070
.L_40d08a:

            mov EAX,DWORD PTR [R12+8]
            mov DWORD PTR [RBP+16],EBX
            mov DWORD PTR [RBP+4],EAX
            mov EAX,DWORD PTR [R12]
            xor EAX,DWORD PTR [R12+4]
            test EAX,67108863
            mov RAX,RBP
            sete BYTE PTR [RBP]
            add RSP,8
.L_40d0ae:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d0b8:

            xor EBX,EBX
            jmp .L_40d08a
.L_40d0bc:

            nop
            nop
            nop
            nop
.L_40d0c0:

            push R14
            push R13
            mov R13D,EDI
            push R12
            push RBP
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBX
            sub RSP,400
            mov RBX,RSP
            mov BYTE PTR [RSP],0
            lea RDI,QWORD PTR [RBX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+392],RAX
            xor EAX,EAX
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+344],0
            xor ESI,ESI
            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+336],0
            mov BYTE PTR [RSP+345],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+368],0
            mov QWORD PTR [RSP+376],0
            mov QWORD PTR [RSP+8],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R14
.L_40d16e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40d173:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+8],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+120],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+80],16
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+104],0
            mov QWORD PTR [RSP+88],RAX
.L_40d206:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40d20b:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435afd]
            mov EDX,14
.L_40d21b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,492
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40d257:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435b0c]
            mov EDX,16
.L_40d267:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,R13D
            call _ZNSolsEi@PLT
.L_40d278:

            mov RDI,RBX
            call .L_410170

            call abort@PLT
.L_40d285:

            mov R13,RAX
.L_40d288:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_40d299:

            call _Unwind_Resume@PLT
.L_40d29e:

            mov RDI,RBX
            call .L_410170

            call abort@PLT
.L_40d2ab:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
.L_40d2ba:

            call _Unwind_Resume@PLT
.L_40d2bf:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+8],RBP
            mov QWORD PTR [RSP+RAX*1+8],R14
            jmp .L_40d288
.L_40d2db:

            nop
            nop
            nop
            nop
            nop
.L_40d2e0:

            push R15
            push R14
            mov R15D,EDI
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            sub RSP,56
.L_40d2f4:

            test EDX,EDX
            jne .L_40d350

            cmp R15D,6
            mov EDI,40
            je .L_40d5d0

            call _Znwm@PLT

            mov RBX,RAX
            mov EAX,2
            mov WORD PTR [RBX],AX
.L_40d317:

            pxor XMM0,XMM0
            mov WORD PTR [RBX+2],R13W
            mov QWORD PTR [RBX+4],1
            mov QWORD PTR [RBX+12],0
            mov DWORD PTR [RBX+20],0
            movups XMMWORD PTR [RBX+24],XMM0
.L_40d33b:

            add RSP,56
.L_40d33f:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d350:

            cmp EDI,6
            mov R12,RSI
            mov EBP,EDX
            jne .L_40d460

            test R8B,R8B
            je .L_40d460

            movsxd RBX,EDX
            movabs RAX,1152921504606846975
            cmp RBX,RAX
            ja .L_40d62c

            shl RBX,3
            mov RDI,RBX
            call _Znam@PLT

            mov RDX,RBX
            mov R14,RAX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov ESI,EBP
            mov EDX,R13D
            mov RDI,R14
            call .L_42d5b0

            cmp EAX,1
            mov EBP,EAX
            je .L_40d600

            cmp EBP,65535
            mov R12,R14
            jg .L_40d46f
.L_40d3c1:

            mov EDI,40
            call _Znwm@PLT

            pxor XMM0,XMM0
            test EBP,EBP
            mov RBX,RAX
            mov BYTE PTR [RAX],R15B
            mov BYTE PTR [RAX+1],0
            mov WORD PTR [RAX+2],R13W
            mov QWORD PTR [RAX+4],1
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            movups XMMWORD PTR [RAX+24],XMM0
            js .L_40d61e

            cmp EBP,1
            jle .L_40d5e8

            movsxd RDI,EBP
            shl RDI,3
            call _Znam@PLT

            mov WORD PTR [RBX+6],BP
            mov QWORD PTR [RBX+8],RAX
.L_40d41e:

            lea EDX,DWORD PTR [RBP-1]
            lea RSI,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
.L_40d430:

            mov RCX,QWORD PTR [R12+RDX*1]
            mov QWORD PTR [RAX+RDX*1],RCX
            add RDX,8
            cmp RSI,RDX
            jne .L_40d430
.L_40d441:

            test R14,R14
            je .L_40d33b
.L_40d44a:

            mov RDI,R14
            call _ZdaPv@PLT

            jmp .L_40d33b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d460:

            xor R14D,R14D
            cmp EBP,65535
            jle .L_40d3c1
.L_40d46f:

            lea EDX,DWORD PTR [RBP+65534]
            mov EDI,40
            mov RAX,RDX
            shl RAX,16
            add RAX,RDX
            shl RAX,15
            add RDX,RAX
            shr RDX,47
            mov DWORD PTR [RSP+8],EDX
            call _Znwm@PLT

            mov EDX,DWORD PTR [RSP+8]
            pxor XMM0,XMM0
            mov RBX,RAX
            mov BYTE PTR [RAX],R15B
            mov BYTE PTR [RAX+1],0
            mov WORD PTR [RAX+2],R13W
            mov QWORD PTR [RAX+4],1
            test EDX,4294901760
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            movups XMMWORD PTR [RAX+24],XMM0
            jne .L_40d625

            movsxd RAX,EDX
            cmp EDX,1
            lea RDI,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RDI
            jle .L_40d4fc

            mov DWORD PTR [RSP+8],EDX
            call _Znam@PLT

            mov EDX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+8],RAX
.L_40d4fc:

            cmp DX,1
            mov WORD PTR [RBX+6],DX
            jbe .L_40d610

            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP+16],RAX
.L_40d513:

            lea EAX,DWORD PTR [RDX-1]
            test EAX,EAX
            mov DWORD PTR [RSP+40],EAX
            jle .L_40d581

            sub EDX,2
            mov R11,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+32],RBX
            mov RAX,RDX
            mov DWORD PTR [RSP+44],EBP
            mov RBP,R12
            shl RAX,16
            sub RAX,RDX
            mov RBX,R11
            lea RAX,QWORD PTR [R12+RAX*8+524280]
            mov QWORD PTR [RSP+8],RAX
.L_40d54c:

            xor R8D,R8D
            mov RSI,RBP
            mov ECX,R13D
            mov EDX,65535
            mov EDI,R15D
            add RBP,524280
            call .L_40d2e0

            add RBX,8
            mov QWORD PTR [RBX-8],RAX
            cmp RBP,QWORD PTR [RSP+8]
            jne .L_40d54c

            mov RBX,QWORD PTR [RSP+32]
            mov EBP,DWORD PTR [RSP+44]
.L_40d581:

            mov EDI,DWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+16]
            xor R8D,R8D
            mov RSI,QWORD PTR [RSP+24]
            mov ECX,R13D
            mov EDX,EDI
            lea R10,QWORD PTR [RAX+RSI*1-8]
            mov EAX,EDI
            shl EAX,16
            sub EDX,EAX
            sub EAX,EDI
            mov EDI,R15D
            cdqe 
            add EDX,EBP
            mov QWORD PTR [RSP+8],R10
            lea RSI,QWORD PTR [R12+RAX*8]
            call .L_40d640

            mov R10,QWORD PTR [RSP+8]
            test R14,R14
            mov QWORD PTR [R10],RAX
            jne .L_40d44a

            jmp .L_40d33b
.L_40d5d0:

            call _Znwm@PLT

            mov EDX,1
            mov RBX,RAX
            mov WORD PTR [RAX],DX
            jmp .L_40d317
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d5e8:

            test EBP,EBP
            mov WORD PTR [RAX+6],BP
            lea RAX,QWORD PTR [RAX+8]
            jne .L_40d41e

            jmp .L_40d441
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d600:

            mov RDI,R14
            mov RBX,QWORD PTR [R14]
            call _ZdaPv@PLT

            jmp .L_40d33b
.L_40d610:

            lea RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_40d513
.L_40d61e:

            mov EDI,EBP
            call .L_40d0c0
.L_40d625:

            mov EDI,EDX
            call .L_40d0c0
.L_40d62c:

            call __cxa_throw_bad_array_new_length@PLT
.L_40d631:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d640:

            cmp EDX,1
            je .L_40d650

            movzx R8D,R8B
            jmp .L_40d2e0
          .byte 0x66
          .byte 0x90
.L_40d650:

            mov RAX,QWORD PTR [RSI]
            ret 
.L_40d654:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d660:

            cmp ESI,1
            je .L_40d680

            mov ECX,EDX
            mov R8D,1
            mov EDX,ESI
            mov RSI,RDI
            mov EDI,6
            jmp .L_40d2e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d680:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_40d684:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d690:

            cmp ESI,1
            je .L_40d6b0

            mov ECX,EDX
            xor R8D,R8D
            mov EDX,ESI
            mov RSI,RDI
            mov EDI,6
            jmp .L_40d2e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d6b0:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_40d6b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d6c0:

            cmp ESI,1
            je .L_40d6e0

            mov ECX,EDX
            xor R8D,R8D
            mov EDX,ESI
            mov RSI,RDI
            mov EDI,5
            jmp .L_40d2e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d6e0:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_40d6e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d6f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
            movzx EDX,BYTE PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp DL,BYTE PTR [RSI]
            je .L_40d748
.L_40d71b:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40dd9b

            add RSP,520
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d748:

            cmp DL,21
            mov RBX,RDI
            ja .L_40d8b0

            lea RCX,QWORD PTR [RIP+.L_435cc8]
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d768:

            movzx EDX,WORD PTR [RSI+2]
            xor EAX,EAX
            xor DX,WORD PTR [RDI+2]
            and EDX,64
            jne .L_40d71b

            mov ECX,DWORD PTR [RSI+28]
            cmp DWORD PTR [RDI+28],ECX
            jne .L_40d71b

            nop
.L_40d780:

            mov EAX,DWORD PTR [RSI+24]
            cmp DWORD PTR [RBX+24],EAX
            sete AL
            jmp .L_40d71b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d790:

            mov EAX,1
            jmp .L_40d71b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d7a0:

            movsxd RDX,DWORD PTR [RDI+24]
            xor EAX,EAX
            cmp EDX,DWORD PTR [RSI+24]
            jne .L_40d71b

            movzx ECX,WORD PTR [RSI+2]
            xor CX,WORD PTR [RDI+2]
            and ECX,1
            jne .L_40d71b

            mov RSI,QWORD PTR [RSI+32]
            mov RDI,QWORD PTR [RDI+32]
            shl RDX,2
            call memcmp@PLT

            test EAX,EAX
            sete AL
            jmp .L_40d71b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d7e0:

            movzx EAX,WORD PTR [RSI+2]
            xor AX,WORD PTR [RDI+2]
            not EAX
            shr AX,15
            jmp .L_40d71b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d7f8:

            mov RCX,QWORD PTR [RDI+24]
            mov RSI,QWORD PTR [RSI+24]
            xor EAX,EAX
            mov EBX,DWORD PTR [RSI+4]
            cmp DWORD PTR [RCX+4],EBX
            jne .L_40d71b

            movsxd RDI,DWORD PTR [RCX+16]
            movsxd R8,DWORD PTR [RSI+16]
            cmp RDI,R8
            lea RDX,QWORD PTR [RDI*8]
            jne .L_40d71b

            mov RSI,QWORD PTR [RSI+8]
            mov RDI,QWORD PTR [RCX+8]
            call memcmp@PLT

            test EAX,EAX
            sete AL
            jmp .L_40d71b
          .byte 0x66
          .byte 0x90
.L_40d840:

            xor EAX,EAX
            mov ECX,DWORD PTR [RSI+24]
            cmp DWORD PTR [RDI+24],ECX
            jne .L_40d71b

            mov RAX,QWORD PTR [RSI+32]
            cmp QWORD PTR [RDI+32],RAX
            sete AL
            jmp .L_40d71b
          .byte 0x66
          .byte 0x90
.L_40d860:

            movzx EAX,WORD PTR [RSI+6]
            cmp WORD PTR [RDI+6],AX
            sete AL
            jmp .L_40d71b
.L_40d870:

            movzx EAX,WORD PTR [RSI+2]
            xor AX,WORD PTR [RDI+2]
            shr AX,6
            xor EAX,1
            and EAX,1
            jmp .L_40d71b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d890:

            xor EAX,EAX
            mov ECX,DWORD PTR [RSI+24]
            cmp DWORD PTR [RDI+24],ECX
            jne .L_40d71b

            movzx EAX,WORD PTR [RSI+2]
            xor AX,WORD PTR [RDI+2]
            not EAX
            and EAX,1
            jmp .L_40d71b
.L_40d8b0:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_40d940:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40d945:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_40d9ff:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40da04:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435c3e]
            mov EDX,13
.L_40da14:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,385
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40da50:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435aa0]
            mov EDX,32
.L_40da60:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,BYTE PTR [RBX]
            lea RDI,QWORD PTR [RBP+8]
            call _ZNSolsEi@PLT
.L_40da71:

            cmp BYTE PTR [RSP+112],0
            je .L_40daf0
.L_40da78:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_40daaa

            call _ZdlPv@PLT
.L_40daaa:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_40d71b
.L_40daf0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBX,QWORD PTR [RSP+16]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_40dcbf

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_40dc1f

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_40db64:

            call .L_40c4e0
.L_40db69:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_40dcd0

            lea RDI,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+96]
            cmp RAX,RDI
            je .L_40dd2e

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_40dd3d

            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+96],RDI
.L_40dbc6:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_40dbea
.L_40dbe5:

            call _ZdlPv@PLT
.L_40dbea:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_40dbf9:

            call write@PLT
.L_40dbfe:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov BYTE PTR [RSP+112],1
            cmp RDI,RBX
            je .L_40da78

            call _ZdlPv@PLT

            jmp .L_40da78
.L_40dc1f:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_40dc35:

            call .L_40c4e0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_40dd01

            lea RDI,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+64]
            cmp RAX,RDI
            je .L_40dd50

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_40dd5f

            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDI
.L_40dc97:

            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_40dbe5

            jmp .L_40dbea
.L_40dcbf:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40dccb:

            jmp .L_40dbea
.L_40dcd0:

            test RDX,RDX
            je .L_40dcee

            cmp RDX,1
            je .L_40dd85

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
.L_40dcee:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+80]
            jmp .L_40dbc6
.L_40dd01:

            test RDX,RDX
            je .L_40dd1b

            cmp RDX,1
            je .L_40dd72

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
.L_40dd1b:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+48]
            jmp .L_40dc97
.L_40dd2e:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_40dd3d:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_40dbc6
.L_40dd50:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_40dd5f:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            mov QWORD PTR [RSP+48],RAX
            jmp .L_40dc97
.L_40dd72:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            jmp .L_40dd1b
.L_40dd85:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_40dcee
.L_40dd9b:

            call __stack_chk_fail@PLT
.L_40dda0:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            cmp RDI,RBX
            je .L_40ddb3

            call _ZdlPv@PLT
.L_40ddb3:

            call _ZSt9terminatev@PLT
.L_40ddb8:

            jmp .L_40dda0
.L_40ddba:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
.L_40ddc8:

            call _Unwind_Resume@PLT
.L_40ddcd:

            mov RBX,RAX
.L_40ddd0:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40dde9:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40ddfd:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDI
            jmp .L_40ddd0
.L_40de21:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40de30:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,520
.L_40de44:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp WORD PTR [RDI+6],0
            jne .L_40deb0

            movzx EAX,BYTE PTR [RBP]
            cmp AL,11
            je .L_40e0f8
.L_40de6a:

            cmp AL,20
            je .L_40e130

            cmp AL,4
            je .L_40dea0
.L_40de76:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40e453

            add RSP,520
.L_40de94:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_40dea0:

            mov RDI,QWORD PTR [RBP+32]
            test RDI,RDI
            je .L_40de76

            call _ZdaPv@PLT

            jmp .L_40de76
.L_40deb0:

            lea RBX,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_40df40:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40df45:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_40dfff:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40e004:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435c3e]
            mov EDX,13
.L_40e014:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,34
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40e050:

            lea RCX,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435b1d]
            mov EDX,21
            mov RDI,RCX
            mov QWORD PTR [RSP],RCX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            cmp BYTE PTR [RSP+112],0
            mov RCX,QWORD PTR [RSP]
            je .L_40e170
.L_40e07b:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_40e0ad

            call _ZdlPv@PLT
.L_40e0ad:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            movzx EAX,BYTE PTR [RBP]
            cmp AL,11
            jne .L_40de6a
.L_40e0f8:

            mov RBX,QWORD PTR [RBP+32]
            test RBX,RBX
            je .L_40de76

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40e116

            call _ZdlPv@PLT
.L_40e116:

            mov ESI,32
            mov RDI,RBX
            call _ZdlPvm@PLT

            jmp .L_40de76
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e130:

            mov RDI,QWORD PTR [RBP+24]
            test RDI,RDI
            je .L_40e13e

            call _ZdaPv@PLT
.L_40e13e:

            mov RBX,QWORD PTR [RBP+32]
            test RBX,RBX
            je .L_40de76

            mov RSI,QWORD PTR [RBX+32]
            lea RDI,QWORD PTR [RBX+16]
            call .L_4117e0

            mov ESI,64
            mov RDI,RBX
            call _ZdlPvm@PLT

            jmp .L_40de76
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e170:

            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            mov RDI,RCX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_40e350

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_40e2a8

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_40e1e5:

            call .L_40c4e0
.L_40e1ea:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40e368

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_40e408

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_40e417

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_40e248:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_40e26c
.L_40e267:

            call _ZdlPv@PLT
.L_40e26c:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_40e27b:

            call write@PLT
.L_40e280:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_40e07b

            call _ZdlPv@PLT

            jmp .L_40e07b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e2a8:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_40e2c1:

            call .L_40c4e0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40e3a8

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_40e3e0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_40e3ef

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_40e324:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_40e267

            jmp .L_40e26c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e350:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40e35d:

            jmp .L_40e26c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e368:

            test RDX,RDX
            je .L_40e390

            cmp RDX,1
            je .L_40e43d

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e390:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_40e248
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e3a8:

            test RDX,RDX
            je .L_40e3c8

            cmp RDX,1
            je .L_40e42a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e3c8:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_40e324
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e3e0:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_40e3ef:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_40e324
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e408:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_40e417:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_40e248
.L_40e42a:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_40e3c8
.L_40e43d:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_40e390
.L_40e453:

            call __stack_chk_fail@PLT
.L_40e458:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT
.L_40e469:

            call _ZSt9terminatev@PLT
.L_40e46e:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_40e469

            call _ZdlPv@PLT

            jmp .L_40e469
.L_40e487:

            jmp .L_40e46e
.L_40e489:

            lea RDI,QWORD PTR [RBX+16]
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            jmp .L_40e458
.L_40e4aa:

            lea RDI,QWORD PTR [RBX+8]
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_40e469
.L_40e4b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e4c0:

            cmp WORD PTR [RDI+6],0
            je .L_40e4d0

            xor EAX,EAX
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_40e4d0:

            push RBX
            mov RBX,RDI
            call .L_40de30

            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov EAX,1
            pop RBX
            ret 
.L_40e4ed:

            nop
            nop
            nop
.L_40e4f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,88
.L_40e504:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test RDI,RDI
            sete DL
            test RSI,RSI
            sete AL
            or DL,AL
            je .L_40e558

            cmp RDI,RSI
            sete R12B
.L_40e52b:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40e75f

            add RSP,88
.L_40e546:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e558:

            call .L_40d6f0
.L_40e55d:

            test AL,AL
            mov R12D,EAX
            je .L_40e52b

            movzx EAX,BYTE PTR [RBX]
            lea EDX,DWORD PTR [RAX-5]
            cmp DL,6
            ja .L_40e52b

            lea RCX,QWORD PTR [RSP+32]
            lea R15,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RCX
            lea RCX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+24],RCX
.L_40e5a3:

            cmp AL,5
            jb .L_40e608

            cmp AL,6
            jbe .L_40e650

            cmp AL,11
            ja .L_40e608

            cmp WORD PTR [RBX+6],1
            mov RDI,QWORD PTR [RBX+8]
            jbe .L_40e5c1

            mov RDI,QWORD PTR [RDI]
.L_40e5c1:

            cmp WORD PTR [RBP+6],1
            mov QWORD PTR [RSP+32],RDI
            mov RSI,QWORD PTR [RBP+8]
            jbe .L_40e5d4

            mov RSI,QWORD PTR [RSI]
.L_40e5d4:

            mov QWORD PTR [RSP+40],RSI
.L_40e5d9:

            call .L_40d6f0

            test AL,AL
            jne .L_40e750
.L_40e5e6:

            mov RDI,QWORD PTR [RSP+48]
            xor R12D,R12D
.L_40e5ee:

            test RDI,RDI
            je .L_40e52b

            call _ZdlPv@PLT

            jmp .L_40e52b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e608:

            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+56]
            sub RAX,RDI
            sar RAX,3
            test EAX,EAX
            je .L_40e5ee

            lea ESI,DWORD PTR [RAX-2]
            movsxd RSI,ESI
            lea RDX,QWORD PTR [RSI*8]
            cmp RSI,RAX
            lea RCX,QWORD PTR [RDI+RDX*1]
            mov RBP,QWORD PTR [RDI+RDX*1+8]
            mov RBX,QWORD PTR [RCX]
            ja .L_40e740

            jae .L_40e647

            mov QWORD PTR [RSP+56],RCX
.L_40e647:

            movzx EAX,BYTE PTR [RBX]
            jmp .L_40e5a3
          .byte 0x90
.L_40e650:

            movzx EAX,WORD PTR [RBX+6]
            lea RCX,QWORD PTR [RBX+8]
            xor R13D,R13D
            xor R14D,R14D
            mov QWORD PTR [RSP+8],RCX
            test AX,AX
            jne .L_40e6f9

            jmp .L_40e608
          .byte 0x66
          .byte 0x90
.L_40e670:

            mov RAX,QWORD PTR [RBX+8]
.L_40e674:

            cmp WORD PTR [RBP+6],1
            mov RDI,QWORD PTR [RAX+R13*1]
            lea RAX,QWORD PTR [RBP+8]
            mov QWORD PTR [RSP+32],RDI
            jbe .L_40e68c

            mov RAX,QWORD PTR [RBP+8]
.L_40e68c:

            mov RSI,QWORD PTR [RAX+R13*1]
            mov QWORD PTR [RSP+40],RSI
            call .L_40d6f0

            test AL,AL
            je .L_40e5e6

            mov RSI,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+64]
            cmp RSI,RAX
            je .L_40e720

            test RSI,RSI
            je .L_40e6be

            mov RDX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSI],RDX
.L_40e6be:

            add RSI,8
            mov QWORD PTR [RSP+56],RSI
.L_40e6c7:

            cmp RSI,RAX
            je .L_40e710

            test RSI,RSI
            je .L_40e6d9

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSI],RAX
.L_40e6d9:

            add RSI,8
            mov QWORD PTR [RSP+56],RSI
.L_40e6e2:

            movzx EDX,WORD PTR [RBX+6]
            add R14D,1
            add R13,8
            cmp EDX,R14D
            mov EAX,EDX
            jle .L_40e608
.L_40e6f9:

            cmp AX,1
            ja .L_40e670

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_40e674
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e710:

            mov RDX,QWORD PTR [RSP+24]
            mov RDI,R15
            call .L_4119e0

            jmp .L_40e6e2
          .byte 0x90
.L_40e720:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,R15
            call .L_4119e0

            mov RSI,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+64]
            jmp .L_40e6c7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e740:

            sub RSI,RAX
            mov RDI,R15
            call .L_411b10
.L_40e74b:

            jmp .L_40e647
.L_40e750:

            mov RBX,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RSP+40]
            jmp .L_40e647
.L_40e75f:

            call __stack_chk_fail@PLT
.L_40e764:

            mov RDI,QWORD PTR [RSP+48]
            mov RBX,RAX
            test RDI,RDI
            je .L_40e776

            call _ZdlPv@PLT
.L_40e776:

            mov RDI,RBX
.L_40e779:

            call _Unwind_Resume@PLT
.L_40e77e:

            nop
            nop
.L_40e780:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_40e78e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,EDX
            jg .L_40e8e8

            cmp EDX,64
            mov R13,RDI
            mov EBX,ESI
            mov R14D,EDX
            jle .L_40e7bc

            cmp ESI,122
            jle .L_40e9b5
.L_40e7bc:

            mov RAX,QWORD PTR [R13+32]
            lea R12,QWORD PTR [R13+16]
            lea RBP,QWORD PTR [R13+24]
            test RAX,RAX
            je .L_40ea18

            mov RDX,RBP
            mov RCX,RAX
            jmp .L_40e7ec
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e7e0:

            mov RDX,RCX
            mov RCX,QWORD PTR [RCX+16]
            test RCX,RCX
            je .L_40e7fa
.L_40e7ec:

            cmp DWORD PTR [RCX+36],EBX
            jge .L_40e7e0

            mov RCX,QWORD PTR [RCX+24]
            test RCX,RCX
            jne .L_40e7ec
.L_40e7fa:

            cmp RBP,RDX
            je .L_40e808

            cmp DWORD PTR [RDX+32],EBX
            jle .L_40e8d8
.L_40e808:

            test EBX,EBX
            mov ECX,DWORD PTR [R13+8]
            jle .L_40e910

            lea EDI,DWORD PTR [RBX-1]
            mov RSI,RBP
            mov RDX,RAX
            jmp .L_40e82c
          .byte 0x90
.L_40e820:

            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40e83a
.L_40e82c:

            cmp EDI,DWORD PTR [RDX+36]
            jle .L_40e820

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40e82c
.L_40e83a:

            cmp RBP,RSI
            je .L_40e910

            mov R15D,DWORD PTR [RSI+32]
            cmp EDI,R15D
            jl .L_40e910

            mov EAX,DWORD PTR [RSI+36]
            mov RDI,R12
            cmp R14D,EAX
            cmovl R14D,EAX
            sub EAX,R15D
            add EAX,1
            sub ECX,EAX
            mov DWORD PTR [R13+8],ECX
            call .L_412590

            cmp R14D,1114110
            mov RAX,QWORD PTR [R13+32]
            mov ECX,DWORD PTR [R13+8]
            jg .L_40ea10

            test RAX,RAX
            lea EDI,DWORD PTR [R14+1]
            mov EBX,R15D
            je .L_40e95f
.L_40e893:

            mov RDX,RAX
            mov RSI,RBP
            jmp .L_40e8ac
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e8a0:

            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40e8ba
.L_40e8ac:

            cmp DWORD PTR [RDX+36],EDI
            jge .L_40e8a0

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40e8ac
.L_40e8ba:

            cmp RBP,RSI
            je .L_40e928

            mov EDX,DWORD PTR [RSI+32]
            cmp EDX,EDI
            jg .L_40e928

            mov R14D,DWORD PTR [RSI+36]
            mov EAX,R14D
            sub EAX,EDX
            jmp .L_40e997
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e8d8:

            cmp DWORD PTR [RDX+36],R14D
            jl .L_40e808

            nop
            nop
            nop
            nop
            nop
            nop
.L_40e8e8:

            xor EAX,EAX
.L_40e8ea:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_40ea58

            add RSP,24
.L_40e902:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e910:

            cmp R14D,1114110
            lea EDI,DWORD PTR [R14+1]
            jle .L_40e893

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e928:

            test RAX,RAX
            je .L_40e95f

            mov RSI,RBP
            jmp .L_40e944
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e938:

            mov RSI,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_40e952
.L_40e944:

            cmp EBX,DWORD PTR [RAX+36]
            jle .L_40e938

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_40e944
.L_40e952:

            cmp RSI,RBP
            je .L_40e95f

            mov EAX,DWORD PTR [RSI+32]
            cmp EAX,R14D
            jle .L_40e990
.L_40e95f:

            mov EAX,R14D
            mov RSI,RSP
            mov RDI,R12
            sub EAX,EBX
            mov DWORD PTR [RSP],EBX
            mov DWORD PTR [RSP+4],R14D
            lea EAX,DWORD PTR [RCX+RAX*1+1]
            mov DWORD PTR [R13+8],EAX
            call .L_412640

            mov EAX,1
            jmp .L_40e8ea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e990:

            mov EDI,DWORD PTR [RSI+36]
            sub EDI,EAX
            mov EAX,EDI
.L_40e997:

            add EAX,1
            mov RDI,R12
            sub ECX,EAX
            mov DWORD PTR [R13+8],ECX
            call .L_412590

            mov RAX,QWORD PTR [R13+32]
            mov ECX,DWORD PTR [R13+8]
            jmp .L_40e928
.L_40e9b5:

            cmp ESI,65
            mov EDX,65
            mov EAX,90
            cmovge EDX,ESI
            cmp R14D,90
            cmovle EAX,R14D
            cmp EAX,EDX
            jl .L_40e9e7

            sub EAX,EDX
            lea ECX,DWORD PTR [RAX+1]
            mov EAX,1
            shl EAX,CL
            lea ECX,DWORD PTR [RDX-65]
            sub EAX,1
            shl EAX,CL
            or DWORD PTR [RDI],EAX
.L_40e9e7:

            cmp EBX,97
            mov EAX,97
            cmovge EAX,EBX
            cmp R14D,122
            jg .L_40ea36

            cmp R14D,EAX
            jl .L_40e7bc

            mov EDX,R14D
            jmp .L_40ea3b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ea10:

            mov EBX,R15D
            jmp .L_40e928
.L_40ea18:

            test EBX,EBX
            mov ECX,DWORD PTR [R13+8]
            jg .L_40e95f

            cmp R14D,1114110
            jg .L_40e928

            jmp .L_40e95f
.L_40ea36:

            mov EDX,122
.L_40ea3b:

            sub EDX,EAX
            lea ECX,DWORD PTR [RDX+1]
            mov EDX,1
            shl EDX,CL
            lea ECX,DWORD PTR [RAX-97]
            sub EDX,1
            shl EDX,CL
            or DWORD PTR [R13+4],EDX
            jmp .L_40e7bc
.L_40ea58:

            call __stack_chk_fail@PLT
.L_40ea5d:

            nop
            nop
            nop
.L_40ea60:

            push R12
            push RBP
            lea RBP,QWORD PTR [RSI+24]
            push RBX
            mov RBX,QWORD PTR [RSI+40]
            cmp RBX,RBP
            je .L_40ea96

            mov R12,RDI
            nop
            nop
            nop
            nop
.L_40ea78:

            mov EDX,DWORD PTR [RBX+36]
            mov ESI,DWORD PTR [RBX+32]
            mov RDI,R12
            call .L_40e780

            mov RDI,RBX
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp RAX,RBP
            mov RBX,RAX
            jne .L_40ea78
.L_40ea96:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40ea9b:

            nop
            nop
            nop
            nop
            nop
.L_40eaa0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov EDI,64
            push RBP
            push RBX
            lea R12,QWORD PTR [R15+24]
            sub RSP,24
.L_40eaba:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call _Znwm@PLT

            mov RBX,QWORD PTR [R15+40]
            mov DWORD PTR [RAX+24],0
            mov RBP,RAX
            mov QWORD PTR [RAX+32],0
            add RAX,24
            mov QWORD PTR [RBP+56],0
            mov QWORD PTR [RBP+40],RAX
            mov QWORD PTR [RBP+48],RAX
            cmp RBX,R12
            mov QWORD PTR [RBP],0
            mov DWORD PTR [RBP+8],0
            je .L_40eb40

            lea R14,QWORD PTR [RBP+16]
            mov R13,RSP
            nop
            nop
            nop
            nop
.L_40eb18:

            mov EAX,DWORD PTR [RBX+36]
            mov EDX,DWORD PTR [RBX+32]
            mov RSI,R13
            mov RDI,R14
            mov DWORD PTR [RSP],EDX
            mov DWORD PTR [RSP+4],EAX
            call .L_412640

            mov RDI,RBX
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp RAX,R12
            mov RBX,RAX
            jne .L_40eb18
.L_40eb40:

            mov EAX,DWORD PTR [R15]
            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov DWORD PTR [RBP],EAX
            mov EAX,DWORD PTR [R15+4]
            mov DWORD PTR [RBP+4],EAX
            mov EAX,DWORD PTR [R15+8]
            mov DWORD PTR [RBP+8],EAX
            mov RAX,RBP
            jne .L_40eb76

            add RSP,24
.L_40eb6b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40eb76:

            call __stack_chk_fail@PLT
.L_40eb7b:

            nop
            nop
            nop
            nop
            nop
.L_40eb80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_40eb8e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,1114110
            jg .L_40ec18

            cmp ESI,121
            mov R15,RDI
            mov EBP,ESI
            jg .L_40ebc0

            cmp ESI,96
            jg .L_40eca1

            mov DWORD PTR [RDI+4],0
.L_40ebc0:

            cmp EBP,89
            jle .L_40ec90
.L_40ebc9:

            lea EBX,DWORD PTR [RBP+1]
            lea R12,QWORD PTR [R15+24]
            mov R13,RSP
            nop
            nop
            nop
            nop
            nop
.L_40ebd8:

            mov RAX,QWORD PTR [R15+32]
            test RAX,RAX
            je .L_40ec18

            mov RSI,R12
            jmp .L_40ebfc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ebf0:

            mov RSI,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_40ec0a
.L_40ebfc:

            cmp DWORD PTR [RAX+36],EBX
            jge .L_40ebf0

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_40ebfc
.L_40ec0a:

            cmp R12,RSI
            je .L_40ec18

            cmp DWORD PTR [RSI+32],1114111
            jle .L_40ec40
.L_40ec18:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40ecd3

            add RSP,24
.L_40ec30:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ec40:

            mov RAX,QWORD PTR [RSI+32]
            lea R14,QWORD PTR [R15+16]
            mov RDI,R14
            mov QWORD PTR [RSP],RAX
            call .L_412590

            mov EDX,DWORD PTR [RSP]
            mov EAX,DWORD PTR [RSP+4]
            sub EAX,EDX
            add EAX,1
            sub DWORD PTR [R15+8],EAX
            cmp EDX,EBP
            jg .L_40ebd8

            mov RSI,R13
            mov RDI,R14
            mov DWORD PTR [RSP+4],EBP
            call .L_412680

            mov EAX,DWORD PTR [RSP+4]
            sub EAX,DWORD PTR [RSP]
            add EAX,1
            add DWORD PTR [R15+8],EAX
            jmp .L_40ebd8
          .byte 0x66
          .byte 0x90
.L_40ec90:

            cmp EBP,64
            jg .L_40ecbd

            mov DWORD PTR [R15],0
            jmp .L_40ebc9
.L_40eca1:

            mov ECX,122
            mov EAX,67108863
            sub ECX,ESI
            shr EAX,CL
            and DWORD PTR [RDI+4],EAX
            cmp EBP,89
            jg .L_40ebc9

            jmp .L_40ec90
.L_40ecbd:

            mov ECX,90
            mov EAX,67108863
            sub ECX,EBP
            shr EAX,CL
            and DWORD PTR [R15],EAX
            jmp .L_40ebc9
.L_40ecd3:

            call __stack_chk_fail@PLT
.L_40ecd8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ece0:

            push R15
            push R14
            movabs RDX,2305843009213693951
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_40ecf8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+56]
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            add RAX,1
            cmp RAX,RDX
            ja .L_40ef30

            test RAX,RAX
            mov R12,RDI
            jne .L_40eea0

            mov RBX,QWORD PTR [R12+40]
            lea R13,QWORD PTR [R12+24]
            cmp RBX,R13
            je .L_40eee9
.L_40ed53:

            mov EAX,DWORD PTR [RBX+32]
            test EAX,EAX
            je .L_40ee78

            xor EBP,EBP
.L_40ed60:

            lea R14,QWORD PTR [RSP+8]
            lea R15,QWORD PTR [RSP+16]
            jmp .L_40ed73
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ed70:

            mov EAX,DWORD PTR [RAX+32]
.L_40ed73:

            sub EAX,1
            mov RSI,R14
            mov RDI,R15
            mov DWORD PTR [RSP+8],EBP
            mov DWORD PTR [RSP+12],EAX
.L_40ed84:

            call .L_412820

            mov EAX,DWORD PTR [RBX+36]
            mov RDI,RBX
            lea EBP,DWORD PTR [RAX+1]
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp R13,RAX
            mov RBX,RAX
            jne .L_40ed70
.L_40ed9f:

            cmp EBP,1114111
            jle .L_40ef10
.L_40edab:

            lea RBP,QWORD PTR [R12+16]
            mov RSI,QWORD PTR [R12+32]
            mov RDI,RBP
            call .L_4117e0

            mov RDI,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+24],RDI
            mov QWORD PTR [R12+32],0
            mov QWORD PTR [R12+40],R13
            mov QWORD PTR [R12+48],R13
            mov QWORD PTR [R12+56],0
            je .L_40ee16

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40edf0:

            lea RSI,QWORD PTR [RDI+RBX*8]
            mov RDI,RBP
            call .L_412680

            mov RDI,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+24]
            add RBX,1
            sub RAX,RDI
            sar RAX,3
            cmp RBX,RAX
            jb .L_40edf0
.L_40ee16:

            mov EAX,DWORD PTR [R12]
            not EAX
            and EAX,67108863
            mov DWORD PTR [R12],EAX
            mov EAX,DWORD PTR [R12+4]
            not EAX
            and EAX,67108863
            mov DWORD PTR [R12+4],EAX
            mov EAX,1114112
            sub EAX,DWORD PTR [R12+8]
            test RDI,RDI
            mov DWORD PTR [R12+8],EAX
            je .L_40ee4f

            call _ZdlPv@PLT
.L_40ee4f:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40ef56

            add RSP,56
.L_40ee67:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ee78:

            mov EAX,DWORD PTR [RBX+36]
            mov RDI,RBX
            lea EBP,DWORD PTR [RAX+1]
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp R13,RAX
            mov RBX,RAX
            je .L_40ed9f

            mov EAX,DWORD PTR [RAX+32]
            jmp .L_40ed60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40eea0:

            lea RBX,QWORD PTR [RAX*8]
            mov RDI,RBX
            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RBP,RAX
            test RDI,RDI
            je .L_40eec2

            call _ZdlPv@PLT
.L_40eec2:

            lea RAX,QWORD PTR [RBP+RBX*1]
            mov RBX,QWORD PTR [R12+40]
            lea R13,QWORD PTR [R12+24]
            mov QWORD PTR [RSP+16],RBP
            mov QWORD PTR [RSP+24],RBP
            mov QWORD PTR [RSP+32],RAX
            cmp RBX,R13
            jne .L_40ed53
.L_40eee9:

            lea RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            movabs RAX,4785070309113856
            mov QWORD PTR [RSP+8],RAX
            call .L_412820

            jmp .L_40edab
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ef10:

            lea RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+8],EBP
            mov DWORD PTR [RSP+12],1114111
            call .L_412820

            jmp .L_40edab
.L_40ef30:

            lea RDI,QWORD PTR [RIP+.L_435b33]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40ef3c:

            mov RDI,QWORD PTR [RSP+16]
            mov RBX,RAX
            test RDI,RDI
            je .L_40ef4e

            call _ZdlPv@PLT
.L_40ef4e:

            mov RDI,RBX
.L_40ef51:

            call _Unwind_Resume@PLT
.L_40ef56:

            call __stack_chk_fail@PLT
.L_40ef5b:

            nop
            nop
            nop
            nop
            nop
.L_40ef60:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,48
            mov R12,RSI
            sub RSP,24
.L_40ef78:

            call _Znwm@PLT

            mov RBX,RAX
            mov RAX,QWORD PTR [R13]
            mov RSI,R12
            lea RDX,QWORD PTR [RBX+32]
            mov RDI,RBP
            mov RAX,QWORD PTR [RAX]
            mov DWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+32],RAX
            call .L_4128e0

            test RDX,RDX
            je .L_40efe8

            test RAX,RAX
            lea RCX,QWORD PTR [RBP+8]
            mov EDI,1
            je .L_40efd0
.L_40efb4:

            mov RSI,RBX
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RBP+40],1
            add RSP,24
.L_40efc5:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_40efd0:

            cmp RDX,RCX
            je .L_40efb4

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBX+32],RAX
            setb DIL
            jmp .L_40efb4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40efe8:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40f005:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f010:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_40f019:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,WORD PTR [RDI+4]
            cmp AX,-1
            je .L_40f060

            sub EAX,1
            test AX,AX
            mov WORD PTR [RDI+4],AX
            jne .L_40f044

            call .L_40f180
.L_40f044:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f17a

            add RSP,40
.L_40f05c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_40f060:

            lea RDI,QWORD PTR [RIP+.L_6493a0]
            call pthread_mutex_lock@PLT

            mov RDI,QWORD PTR [RIP+.L_6493c8]
            mov QWORD PTR [RSP+8],RBX
            mov RDX,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDI+8]
            mov RAX,RCX
            test RDX,RDX
            jne .L_40f0ec
.L_40f088:

            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RDX
            lea RDX,QWORD PTR [RSP+16]
            call .L_40ef60

            mov RDI,QWORD PTR [RIP+.L_6493c8]
.L_40f0a6:

            mov EBP,DWORD PTR [RAX+40]
            sub EBP,1
            cmp EBP,65534
            jg .L_40f110

            lea RSI,QWORD PTR [RSP+16]
            mov WORD PTR [RBX+4],BP
            mov QWORD PTR [RSP+16],RBX
            call .L_411860
.L_40f0c7:

            lea RDI,QWORD PTR [RIP+.L_6493a0]
            call pthread_mutex_unlock@PLT

            jmp .L_40f044
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f0e0:

            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40f0fb
.L_40f0ec:

            cmp RBX,QWORD PTR [RDX+32]
            jbe .L_40f0e0

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40f0ec
.L_40f0fb:

            cmp RCX,RAX
            je .L_40f088

            cmp RBX,QWORD PTR [RAX+32]
            jb .L_40f088

            jmp .L_40f0a6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f110:

            mov RDX,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+8],RBX
            mov RAX,RCX
            test RDX,RDX
            jne .L_40f13c

            jmp .L_40f15b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f130:

            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+16]
.L_40f137:

            test RDX,RDX
            je .L_40f150
.L_40f13c:

            cmp RBX,QWORD PTR [RDX+32]
            jbe .L_40f130

            mov RDX,QWORD PTR [RDX+24]
            jmp .L_40f137
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f150:

            cmp RCX,RAX
            je .L_40f15b

            cmp RBX,QWORD PTR [RAX+32]
            jae .L_40f172
.L_40f15b:

            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RDX
            lea RDX,QWORD PTR [RSP+16]
            call .L_40ef60
.L_40f172:

            mov DWORD PTR [RAX+40],EBP
            jmp .L_40f0c7
.L_40f17a:

            call __stack_chk_fail@PLT
.L_40f17f:

            nop
.L_40f180:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,536
.L_40f194:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            cmp WORD PTR [RDI+6],0
            je .L_40f550

            lea R12,QWORD PTR [RSP+128]
            mov QWORD PTR [RDI+16],0
            xor EBP,EBP
            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40f205
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f1e0:

            mov RDI,RBX
            call .L_40de30

            mov ESI,40
            mov RDI,RBX
            call _ZdlPvm@PLT

            test RBP,RBP
            je .L_40f562

            mov RBX,RBP
            mov RBP,QWORD PTR [RBP+16]
.L_40f205:

            cmp WORD PTR [RBX+4],0
            jne .L_40f2a0
.L_40f210:

            movzx EAX,WORD PTR [RBX+6]
            test AX,AX
            je .L_40f1e0

            cmp AX,1
            lea RCX,QWORD PTR [RBX+8]
            jbe .L_40f227

            mov RCX,QWORD PTR [RBX+8]
.L_40f227:

            mov QWORD PTR [RSP+16],R12
            mov R15D,1
            mov R12,RBP
            mov RBP,RBX
            mov RBX,RCX
            jmp .L_40f276
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f240:

            sub EAX,1
            mov WORD PTR [R14+4],AX
.L_40f248:

            test AX,AX
            jne .L_40f260

            cmp WORD PTR [R14+6],0
            je .L_40f530

            mov QWORD PTR [R14+16],R12
            mov R12,R14
.L_40f260:

            movzx EAX,WORD PTR [RBP+6]
.L_40f264:

            mov EDX,R15D
            movzx ESI,AX
            add R15,1
            cmp ESI,EDX
            jle .L_40f500
.L_40f276:

            mov R14,QWORD PTR [RBX+R15*8-8]
            test R14,R14
            je .L_40f264

            movzx EAX,WORD PTR [R14+4]
            cmp AX,-1
            jne .L_40f240

            mov RDI,R14
.L_40f28e:

            call .L_40f010
.L_40f293:

            movzx EAX,WORD PTR [R14+4]
            jmp .L_40f248
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f2a0:

            mov RDI,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+128],0
            call _ZNSt8ios_baseC2Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+472],0
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_40f32a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40f32f:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R12+16]
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+232],0
            mov QWORD PTR [RSP+216],RAX
.L_40f3f0:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40f3f5:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_435c3e]
            mov EDX,13
.L_40f406:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,136
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40f444:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_435b43]
            mov EDX,20
.L_40f455:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,WORD PTR [RBX+4]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSo9_M_insertImEERSoT_@PLT
.L_40f468:

            cmp BYTE PTR [RSP+128],0
            je .L_40f590
.L_40f476:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+216]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_40f4ac

            call _ZdlPv@PLT
.L_40f4ac:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+136],R13
            mov QWORD PTR [RSP+RAX*1+136],RCX
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+248],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_40f210
          .byte 0x66
          .byte 0x90
.L_40f500:

            cmp AX,1
            mov RCX,RBX
            mov RBX,RBP
            mov RBP,R12
            mov R12,QWORD PTR [RSP+16]
            jbe .L_40f51c

            mov RDI,RCX
            call _ZdaPv@PLT
.L_40f51c:

            xor EAX,EAX
            mov WORD PTR [RBX+6],AX
            jmp .L_40f1e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f530:

            mov RDI,R14
            call .L_40de30

            mov ESI,40
            mov RDI,R14
            call _ZdlPvm@PLT

            movzx EAX,WORD PTR [RBP+6]
            jmp .L_40f264
          .byte 0x66
          .byte 0x90
.L_40f550:

            call .L_40de30

            mov ESI,40
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_40f562:

            mov RAX,QWORD PTR [RSP+520]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f879

            add RSP,536
.L_40f580:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f590:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_40f780

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            jbe .L_40f6a0

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
.L_40f60b:

            call .L_40c4e0

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40f791

            mov RAX,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_40f811

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
            je .L_40f820

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RAX
.L_40f66f:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_40f739

            jmp .L_40f73e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f6a0:

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+64],RAX
            call .L_40c4e0
.L_40f6bb:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40f7c2

            mov RAX,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_40f7ef

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
            je .L_40f7fe

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RAX
.L_40f71a:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_40f73e
.L_40f739:

            call _ZdlPv@PLT
.L_40f73e:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_40f74d:

            call write@PLT
.L_40f752:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_40f476

            call _ZdlPv@PLT

            jmp .L_40f476
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f780:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [R12+88]
.L_40f78a:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40f78f:

            jmp .L_40f73e
.L_40f791:

            test RDX,RDX
            je .L_40f7af

            cmp RDX,1
            je .L_40f846

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
.L_40f7af:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_40f66f
.L_40f7c2:

            test RDX,RDX
            je .L_40f7dc

            cmp RDX,1
            je .L_40f833

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
.L_40f7dc:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_40f71a
.L_40f7ef:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
.L_40f7fe:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_40f71a
.L_40f811:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
.L_40f820:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_40f66f
.L_40f833:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40f7dc
.L_40f846:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40f7af
.L_40f85c:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_40f874

            call _ZdlPv@PLT
.L_40f874:

            call _ZSt9terminatev@PLT
.L_40f879:

            call __stack_chk_fail@PLT
.L_40f87e:

            mov RBX,RAX
            mov RDI,R12
            call .L_40bd80

            mov RDI,RBX
.L_40f88c:

            call _Unwind_Resume@PLT
.L_40f891:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40f8a6:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],R13
            mov QWORD PTR [RSP+RAX*1+136],RCX
.L_40f8ce:

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+248],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40f8ef:

            mov RBX,RAX
            jmp .L_40f8ce
.L_40f8f4:

            jmp .L_40f85c
.L_40f8f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f900:

            push RBX
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_6493a0]
            sub RSP,32
.L_40f90f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call pthread_mutex_lock@PLT

            mov RDI,QWORD PTR [RIP+.L_6493c8]
            test RDI,RDI
            je .L_40fa40

            cmp WORD PTR [RBX+4],-1
            lea RAX,QWORD PTR [RDI+8]
            mov RDX,QWORD PTR [RDI+16]
            je .L_40f9d8

            test RDX,RDX
            mov QWORD PTR [RSP+8],RBX
            mov RSI,RAX
            jne .L_40f96c

            jmp .L_40f986
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f960:

            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40f97b
.L_40f96c:

            cmp RBX,QWORD PTR [RDX+32]
            jbe .L_40f960

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40f96c
.L_40f97b:

            cmp RAX,RSI
            je .L_40f986

            cmp RBX,QWORD PTR [RSI+32]
            jae .L_40f99d
.L_40f986:

            lea RAX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            call .L_40ef60

            mov RSI,RAX
.L_40f99d:

            mov EAX,4294967295
            mov DWORD PTR [RSI+40],65535
            mov WORD PTR [RBX+4],AX
.L_40f9ad:

            lea RDI,QWORD PTR [RIP+.L_6493a0]
            call pthread_mutex_unlock@PLT

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40fa89

            add RSP,32
.L_40f9d1:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f9d8:

            test RDX,RDX
            mov QWORD PTR [RSP+8],RBX
            mov RSI,RAX
            jne .L_40f9fc

            jmp .L_40fa16
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f9f0:

            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40fa0b
.L_40f9fc:

            cmp RBX,QWORD PTR [RDX+32]
            jbe .L_40f9f0

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40f9fc
.L_40fa0b:

            cmp RAX,RSI
            je .L_40fa16

            cmp RBX,QWORD PTR [RSI+32]
            jae .L_40fa2d
.L_40fa16:

            lea RAX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            call .L_40ef60

            mov RSI,RAX
.L_40fa2d:

            add DWORD PTR [RSI+40],1
            jmp .L_40f9ad
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fa40:

            mov EDI,48
            call _Znwm@PLT

            cmp WORD PTR [RBX+4],-1
            lea RSI,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+40],0
            mov RDI,RAX
            mov QWORD PTR [RAX+24],RSI
            mov QWORD PTR [RAX+32],RSI
            mov QWORD PTR [RIP+.L_6493c8],RAX
            mov QWORD PTR [RSP+8],RBX
            jne .L_40f986

            jmp .L_40fa16
.L_40fa89:

            call __stack_chk_fail@PLT
.L_40fa8e:

            nop
            nop
.L_40fa90:

            movzx EDX,WORD PTR [RDI+4]
            mov RAX,RDI
            cmp DX,-3
            ja .L_40faa8

            add EDX,1
            mov WORD PTR [RDI+4],DX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40faa8:

            sub RSP,24
            mov QWORD PTR [RSP+8],RDI
            call .L_40f900

            mov RAX,QWORD PTR [RSP+8]
            add RSP,24
            ret 
.L_40fac0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_40face:

            mov QWORD PTR [RSI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RDX],0
            xor EAX,EAX
            mov QWORD PTR [RCX],0
            cmp BYTE PTR [RDI],5
            je .L_40fb20
.L_40fafd:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40fe3b

            add RSP,72
.L_40fb15:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40fb20:

            mov R12,RDI
            movzx EDI,WORD PTR [RDI+6]
            mov RBP,RSI
            mov R13,RDX
            mov R15,RCX
            lea R10,QWORD PTR [R12+8]
            cmp DI,1
            jbe .L_40fb40

            mov R10,QWORD PTR [R12+8]
.L_40fb40:

            test EDI,EDI
            je .L_40fb74

            mov RAX,QWORD PTR [R10]
            cmp BYTE PTR [RAX],18
            jne .L_40fb74

            lea RAX,QWORD PTR [R10+8]
            xor EBX,EBX
            jmp .L_40fb6d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fb58:

            mov RCX,QWORD PTR [RAX]
            mov R14,RAX
            add RAX,8
            movzx ESI,BYTE PTR [RCX]
            cmp SIL,18
            jne .L_40fb80

            mov EBX,EDX
.L_40fb6d:

            lea EDX,DWORD PTR [RBX+1]
            cmp EDX,EDI
            jne .L_40fb58
.L_40fb74:

            xor EAX,EAX
            jmp .L_40fafd
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fb80:

            cmp SIL,3
            je .L_40fd30

            cmp SIL,4
            jne .L_40fb74

            test BYTE PTR [RCX+2],32
            mov EAX,DWORD PTR [RCX+24]
            mov QWORD PTR [RSP+8],R10
            mov QWORD PTR [RSP],RCX
            jne .L_40fc4d

            shl EAX,2
            xor EDX,EDX
            mov RDI,RBP
            movsxd RSI,EAX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc@PLT

            mov RCX,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RBP]
            mov R10,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RCX+24]
            test ESI,ESI
            jle .L_40fe37

            lea RAX,QWORD PTR [RSP+48]
            xor R11D,R11D
            xor R8D,R8D
            mov QWORD PTR [RSP+40],RAX
            jmp .L_40fbf8
.L_40fbe0:

            mov BYTE PTR [RDX],AL
            add RDX,1
.L_40fbe6:

            add R8D,1
            add R11,4
            cmp DWORD PTR [RCX+24],R8D
            jle .L_40fdc8
.L_40fbf8:

            mov RAX,QWORD PTR [RCX+32]
            mov EAX,DWORD PTR [RAX+R11*1]
            cmp EAX,127
            mov DWORD PTR [RSP+48],EAX
            jle .L_40fbe0

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,RDX
            mov QWORD PTR [RSP+32],R11
            mov QWORD PTR [RSP+24],R10
            mov DWORD PTR [RSP+20],R8D
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_414120

            mov RDX,QWORD PTR [RSP]
            cdqe 
            mov R11,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+20]
            mov RCX,QWORD PTR [RSP+8]
            add RDX,RAX
            jmp .L_40fbe6
.L_40fc4d:

            movsxd RSI,EAX
            xor EDX,EDX
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc@PLT

            mov RCX,QWORD PTR [RSP]
            xor EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RCX+24]
            test EDI,EDI
            jle .L_40fc8b

            nop
            nop
            nop
            nop
.L_40fc70:

            mov RSI,QWORD PTR [RCX+32]
            mov RDX,QWORD PTR [RBP]
            mov ESI,DWORD PTR [RSI+RAX*4]
            mov BYTE PTR [RDX+RAX*1],SIL
            lea EDX,DWORD PTR [RAX+1]
            add RAX,1
            cmp DWORD PTR [RCX+24],EDX
            jg .L_40fc70
.L_40fc8b:

            mov RAX,QWORD PTR [R14]
            movzx EDX,WORD PTR [R12+6]
            lea R14D,DWORD PTR [RBX+2]
            movzx EAX,WORD PTR [RAX+2]
            mov BYTE PTR [R13],AL
            and BYTE PTR [R13],1
            cmp EDX,R14D
            jle .L_40fd70

            add EBX,3
            movsxd RSI,R14D
            movsxd RBX,EBX
            lea RBP,QWORD PTR [RSI*8]
            mov RAX,RBX
            neg RAX
            lea R13,QWORD PTR [RBP+RAX*8]
            add R13,R10
            jmp .L_40fce1
          .byte 0x90
.L_40fcd0:

            add EAX,1
            mov WORD PTR [RDI+4],AX
.L_40fcd7:

            mov EAX,EBX
            add RBX,1
            cmp EDX,EAX
            jle .L_40fd08
.L_40fce1:

            mov RDI,QWORD PTR [R13+RBX*8]
            movzx EAX,WORD PTR [RDI+4]
            cmp AX,-3
            jbe .L_40fcd0

            mov QWORD PTR [RSP],R10
            call .L_40f900

            movzx EDX,WORD PTR [R12+6]
            mov R10,QWORD PTR [RSP]
            jmp .L_40fcd7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40fd08:

            sub EDX,R14D
            lea RSI,QWORD PTR [R10+RBP*1]
            cmp EDX,1
            jne .L_40fdb0

            mov RAX,QWORD PTR [RSI]
.L_40fd1b:

            mov QWORD PTR [R15],RAX
            mov EAX,1
            jmp .L_40fafd
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fd30:

            test BYTE PTR [RCX+2],32
            mov R8D,DWORD PTR [RCX+24]
            jne .L_40fd44

            cmp R8D,127
            jg .L_40fde6
.L_40fd44:

            mov RSI,QWORD PTR [RBP+8]
            movsx R8D,R8B
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            mov QWORD PTR [RSP],R10
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov R10,QWORD PTR [RSP]
            jmp .L_40fc8b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fd70:

            movzx EBX,WORD PTR [R12+2]
            mov EDI,40
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,2
            mov WORD PTR [RAX],DX
            mov QWORD PTR [RAX+4],1
            mov WORD PTR [RAX+2],BX
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            movups XMMWORD PTR [RAX+24],XMM0
            jmp .L_40fd1b
.L_40fdb0:

            movzx ECX,WORD PTR [R12+2]
            xor R8D,R8D
            mov EDI,5
            call .L_40d2e0

            jmp .L_40fd1b
.L_40fdc8:

            mov RSI,RDX
            sub RSI,QWORD PTR [RBP]
.L_40fdcf:

            xor EDX,EDX
            mov RDI,RBP
            mov QWORD PTR [RSP],R10
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc@PLT

            mov R10,QWORD PTR [RSP]
            jmp .L_40fc8b
.L_40fde6:

            lea RSI,QWORD PTR [RCX+24]
            lea RCX,QWORD PTR [RSP+52]
            mov QWORD PTR [RSP+8],R10
            mov RDI,RCX
            mov QWORD PTR [RSP],RCX
            call .L_414120

            movsxd RDX,EAX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RSP]
            mov R10,QWORD PTR [RSP+8]
            cmp RDX,RAX
            ja .L_40fe40

            mov RSI,RCX
            mov RDI,RBP
            mov QWORD PTR [RSP],R10
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov R10,QWORD PTR [RSP]
            jmp .L_40fc8b
.L_40fe37:

            xor ESI,ESI
            jmp .L_40fdcf
.L_40fe3b:

            call __stack_chk_fail@PLT
.L_40fe40:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40fe4c:

            nop
            nop
            nop
            nop
.L_40fe50:

            push RBP
            push RBX
            sub RSP,40
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,WORD PTR [RDI+4]
            cmp AX,-1
            movzx EBX,AX
            je .L_40fe90
.L_40fe73:

            mov RSI,QWORD PTR [RSP+24]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_40ff19

            add RSP,40
            pop RBX
            pop RBP
            ret 
.L_40fe90:

            mov RBP,RDI
            lea RDI,QWORD PTR [RIP+.L_6493a0]
            xor EBX,EBX
            call pthread_mutex_lock@PLT

            mov RDI,QWORD PTR [RIP+.L_6493c8]
            test RDI,RDI
            je .L_40ff08

            mov RDX,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+8],RBP
            mov RAX,RCX
            test RDX,RDX
            jne .L_40fed4

            jmp .L_40feee
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fec8:

            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40fee3
.L_40fed4:

            cmp RBP,QWORD PTR [RDX+32]
            jbe .L_40fec8

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40fed4
.L_40fee3:

            cmp RCX,RAX
            je .L_40feee

            cmp RBP,QWORD PTR [RAX+32]
            jae .L_40ff05
.L_40feee:

            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RDX
            lea RDX,QWORD PTR [RSP+16]
            call .L_40ef60
.L_40ff05:

            mov EBX,DWORD PTR [RAX+40]
.L_40ff08:

            lea RDI,QWORD PTR [RIP+.L_6493a0]
            call pthread_mutex_unlock@PLT

            jmp .L_40fe73
.L_40ff19:

            call __stack_chk_fail@PLT
.L_40ff1e:

            nop
            nop
.L_40ff20:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            lea RBP,QWORD PTR [RIP+.L_645e90]
            sub RSP,48
.L_40ff32:

            mov RBX,RSP
            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_40ff48:

            call .L_4116b0
.L_40ff4d:

            mov ECX,1
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+20],1000000
.L_40ff67:

            call .L_4136c0
.L_40ff6c:

            mov R12D,DWORD PTR [RSP+24]
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            call .L_412370

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40ff99

            add RSP,48
.L_40ff94:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40ff99:

            call __stack_chk_fail@PLT
.L_40ff9e:

            mov R12,RAX
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            call .L_412370

            mov RDI,R12
.L_40ffb0:

            call _Unwind_Resume@PLT
.L_40ffb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ffc0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            lea RBP,QWORD PTR [RIP+.L_645ed0]
            sub RSP,48
.L_40ffd2:

            mov RBX,RSP
            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_40ffe8:

            call .L_4116b0
.L_40ffed:

            mov ECX,1
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+24],0
            mov DWORD PTR [RSP+20],1000000
.L_41000f:

            call .L_4136c0
.L_410014:

            mov R12,QWORD PTR [RSP+24]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP],RBP
            call .L_412370

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_41004a

            add RSP,48
.L_410045:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41004a:

            call __stack_chk_fail@PLT
.L_41004f:

            mov RBP,RAX
            mov RDI,RBX
            call .L_412450

            mov RDI,RBP
.L_41005d:

            call _Unwind_Resume@PLT
.L_410062:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410070:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            lea RBP,QWORD PTR [RIP+.L_645f10]
            sub RSP,48
.L_410082:

            mov RBX,RSP
            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_410098:

            call .L_4116b0
.L_41009d:

            mov ECX,1
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+24],0
            mov DWORD PTR [RSP+20],1000000
.L_4100bf:

            call .L_4136c0
.L_4100c4:

            mov R12,QWORD PTR [RSP+24]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP],RBP
            call .L_412370

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_4100fa

            add RSP,48
.L_4100f5:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_4100fa:

            call __stack_chk_fail@PLT
.L_4100ff:

            mov RBP,RAX
            mov RDI,RBX
            call .L_4124f0

            mov RDI,RBP
.L_41010d:

            call _Unwind_Resume@PLT
.L_410112:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410120:

            cmp BYTE PTR [RSI],11
            mov EAX,EDX
            je .L_410130

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410130:

            add DWORD PTR [RDI+24],1
            ret 
.L_410135:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410140:

            mov EAX,EDX
            ret 
.L_410143:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410150:

            mov EAX,ESI
            ret 
.L_410153:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410160:

            mov EAX,ECX
            ret 
.L_410163:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410170:

            push R12
            push RBP
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            push RBX
            mov EDX,1
            mov RBX,RDI
            add RDI,8
            sub RSP,112
.L_41018b:

            mov RBP,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
.L_41019e:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4101a3:

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+8],0
            mov BYTE PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RBX+56]
            test RAX,RAX
            je .L_410380

            mov RDX,QWORD PTR [RBX+40]
            mov RSI,QWORD PTR [RBX+48]
            cmp RAX,RDX
            jbe .L_4102b0

            lea R12,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+64],RDX
            mov RDX,RAX
.L_4101ec:

            call .L_40c4e0
.L_4101f1:

            mov RSI,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+72]
            cmp RSI,RAX
            je .L_410398

            lea RAX,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+80]
            cmp RDI,RAX
            je .L_410360

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
            je .L_41036e

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RAX
.L_410245:

            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+64]
            cmp RDI,R12
            je .L_410264
.L_41025f:

            call _ZdlPv@PLT
.L_410264:

            movsxd RDX,DWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            mov EDI,2
.L_410272:

            call write@PLT
.L_410277:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov BYTE PTR [RBX],1
            cmp RDI,RBP
            je .L_41028c

            call _ZdlPv@PLT
.L_41028c:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_410420

            add RSP,112
.L_4102a4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4102b0:

            lea R12,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+32],RAX
.L_4102c2:

            call .L_40c4e0

            mov RSI,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+40]
            cmp RSI,RAX
            je .L_4103d0

            lea RAX,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+48]
            cmp RDI,RAX
            je .L_410340

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
            je .L_41034e

            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+48],RAX
.L_410313:

            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+32]
            cmp RDI,R12
            jne .L_41025f

            jmp .L_410264
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410340:

            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
.L_41034e:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+32],RDI
            jmp .L_410313
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410360:

            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
.L_41036e:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_410245
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410380:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41038c:

            jmp .L_410264
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410398:

            test RDX,RDX
            je .L_4103b3

            cmp RDX,1
            jne .L_410400

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP]
.L_4103b3:

            mov QWORD PTR [RSP+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_410245
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4103d0:

            test RDX,RDX
            je .L_4103eb

            cmp RDX,1
            jne .L_410410

            movzx EAX,BYTE PTR [RSP+48]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP]
.L_4103eb:

            mov QWORD PTR [RSP+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_410313
          .byte 0x66
          .byte 0x90
.L_410400:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP]
            jmp .L_4103b3
.L_410410:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP]
            jmp .L_4103eb
.L_410420:

            call __stack_chk_fail@PLT
.L_410425:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov RBX,RAX
            cmp RDI,RBP
            je .L_41043a

            call _ZdlPv@PLT
.L_41043a:

            mov RDI,RBX
.L_41043d:

            call _Unwind_Resume@PLT
.L_410442:

            jmp .L_410425
.L_410444:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410450:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_410468:

            lea RBX,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+12],EDX
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_410510:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_410515:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_4105d2:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4105d7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435c3e]
            mov EDX,13
.L_4105e7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,606
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_410623:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435c50]
            mov EDX,37
.L_410633:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_410638:

            cmp BYTE PTR [RSP+128],0
            je .L_4106e8
.L_410646:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_410674

            call _ZdlPv@PLT
.L_410674:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+12]
            jne .L_4109de

            add RSP,536
.L_4106da:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4106e8:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_4108d0

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_410828

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_410760:

            call .L_40c4e0
.L_410765:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4108e8

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_410960

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_41096f

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_4107c4:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_4107e8
.L_4107e3:

            call _ZdlPv@PLT
.L_4107e8:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_4107f7:

            call write@PLT
.L_4107fc:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_410646

            call _ZdlPv@PLT

            jmp .L_410646
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410828:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_410842:

            call .L_40c4e0

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_410928

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_410988

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_410997

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_4108a6:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_4107e3

            jmp .L_4107e8
          .byte 0x66
          .byte 0x90
.L_4108d0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4108de:

            jmp .L_4107e8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4108e8:

            test RDX,RDX
            je .L_410910

            cmp RDX,1
            je .L_4109c8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410910:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_4107c4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410928:

            test RDX,RDX
            je .L_410948

            cmp RDX,1
            je .L_4109b0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_410948:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_4108a6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410960:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_41096f:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_4107c4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410988:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_410997:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_4108a6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4109b0:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_410948
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4109c8:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_410910
.L_4109de:

            call __stack_chk_fail@PLT
.L_4109e3:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_4109fb

            call _ZdlPv@PLT
.L_4109fb:

            call _ZSt9terminatev@PLT
.L_410a00:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
.L_410a27:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_410a3b:

            call _Unwind_Resume@PLT
.L_410a40:

            jmp .L_4109e3
.L_410a42:

            mov R13,RAX
            jmp .L_410a27
.L_410a47:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_410a5b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_410a6e:

            nop
            nop
.L_410a70:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_410a88:

            lea RBX,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+12],EDX
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_410b30:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_410b35:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_410bf2:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_410bf7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435c3e]
            mov EDX,13
.L_410c07:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,566
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_410c43:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435c78]
            mov EDX,38
.L_410c53:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_410c58:

            cmp BYTE PTR [RSP+128],0
            je .L_410d08
.L_410c66:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_410c94

            call _ZdlPv@PLT
.L_410c94:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+12]
            jne .L_410ffe

            add RSP,536
.L_410cfa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410d08:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_410ef0

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_410e48

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_410d80:

            call .L_40c4e0
.L_410d85:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_410f08

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_410f80

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_410f8f

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_410de4:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_410e08
.L_410e03:

            call _ZdlPv@PLT
.L_410e08:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_410e17:

            call write@PLT
.L_410e1c:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_410c66

            call _ZdlPv@PLT

            jmp .L_410c66
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410e48:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_410e62:

            call .L_40c4e0

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_410f48

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_410fa8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_410fb7

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_410ec6:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_410e03

            jmp .L_410e08
          .byte 0x66
          .byte 0x90
.L_410ef0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_410efe:

            jmp .L_410e08
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410f08:

            test RDX,RDX
            je .L_410f30

            cmp RDX,1
            je .L_410fe8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410f30:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_410de4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410f48:

            test RDX,RDX
            je .L_410f68

            cmp RDX,1
            je .L_410fd0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_410f68:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_410ec6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410f80:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_410f8f:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_410de4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410fa8:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_410fb7:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_410ec6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410fd0:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_410f68
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410fe8:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_410f30
.L_410ffe:

            call __stack_chk_fail@PLT
.L_411003:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_41101b

            call _ZdlPv@PLT
.L_41101b:

            call _ZSt9terminatev@PLT
.L_411020:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
.L_411047:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_41105b:

            call _Unwind_Resume@PLT
.L_411060:

            jmp .L_411003
.L_411062:

            mov R13,RAX
            jmp .L_411047
.L_411067:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41107b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41108e:

            nop
            nop
.L_411090:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_4110a8:

            lea RBX,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+12],EDX
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_411150:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_411155:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_411212:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_411217:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435c3e]
            mov EDX,13
.L_411227:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,522
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_411263:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435ca0]
            mov EDX,36
.L_411273:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_411278:

            cmp BYTE PTR [RSP+128],0
            je .L_411328
.L_411286:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_4112b4

            call _ZdlPv@PLT
.L_4112b4:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+12]
            jne .L_41161e

            add RSP,536
.L_41131a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411328:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_411510

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_411468

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_4113a0:

            call .L_40c4e0
.L_4113a5:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_411528

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_4115a0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_4115af

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_411404:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_411428
.L_411423:

            call _ZdlPv@PLT
.L_411428:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_411437:

            call write@PLT
.L_41143c:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_411286

            call _ZdlPv@PLT

            jmp .L_411286
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411468:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_411482:

            call .L_40c4e0

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_411568

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_4115c8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_4115d7

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_4114e6:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_411423

            jmp .L_411428
          .byte 0x66
          .byte 0x90
.L_411510:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41151e:

            jmp .L_411428
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411528:

            test RDX,RDX
            je .L_411550

            cmp RDX,1
            je .L_411608

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411550:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_411404
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411568:

            test RDX,RDX
            je .L_411588

            cmp RDX,1
            je .L_4115f0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_411588:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_4114e6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4115a0:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_4115af:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_411404
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4115c8:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_4115d7:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_4114e6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4115f0:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_411588
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411608:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_411550
.L_41161e:

            call __stack_chk_fail@PLT
.L_411623:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_41163b

            call _ZdlPv@PLT
.L_41163b:

            call _ZSt9terminatev@PLT
.L_411640:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
.L_411667:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_41167b:

            call _Unwind_Resume@PLT
.L_411680:

            jmp .L_411623
.L_411682:

            mov R13,RAX
            jmp .L_411667
.L_411687:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41169b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4116ae:

            nop
            nop
.L_4116b0:

            lea RAX,QWORD PTR [RIP+.L_648cd0]
            push R12
            push RBP
            push RBX
.L_4116bb:

            mov RBP,RDI
            mov QWORD PTR [RDI],RAX
            mov EDI,80
.L_4116c6:

            call _Znwm@PLT
.L_4116cb:

            mov EDI,64
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov RBX,RAX
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov QWORD PTR [RAX+56],0
            mov QWORD PTR [RAX+64],0
            mov QWORD PTR [RAX+72],0
            mov QWORD PTR [RAX+8],8
.L_411722:

            call _Znwm@PLT
.L_411727:

            mov RCX,QWORD PTR [RBX+8]
            mov EDI,512
            mov QWORD PTR [RBX],RAX
            lea RDX,QWORD PTR [RCX-1]
            shr RDX,1
            lea R12,QWORD PTR [RAX+RDX*8]
.L_41173e:

            call _Znwm@PLT
.L_411743:

            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [RBP+8],RBX
            mov BYTE PTR [RBP+16],0
            mov QWORD PTR [RBX+40],R12
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            mov QWORD PTR [RBX+32],RDX
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+64],RDX
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+48],RAX
            pop RBX
.L_411777:

            pop RBP
            pop R12
            ret 
.L_41177b:

            mov RBP,RAX
.L_41177e:

            mov RDI,RBX
            mov ESI,80
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_41178e:

            call _Unwind_Resume@PLT
.L_411793:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_41179b:

            call __cxa_rethrow@PLT
.L_4117a0:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBP
            call __cxa_begin_catch@PLT

            mov RDI,QWORD PTR [RBX]
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
.L_4117c7:

            call __cxa_rethrow@PLT
.L_4117cc:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            jmp .L_41177e
.L_4117d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4117e0:

            test RSI,RSI
            je .L_411818

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_4117ef:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_4117e0

            mov RBP,QWORD PTR [RBX+16]
            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            mov RBX,RBP
            jne .L_4117ef

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411818:

            ret 
.L_41181a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_411820:

            test RSI,RSI
            je .L_411858

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_41182f:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_411820

            mov RBP,QWORD PTR [RBX+16]
            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            mov RBX,RBP
            jne .L_41182f

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411858:

            ret 
.L_41185a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_411860:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            lea R13,QWORD PTR [RBP+8]
            sub RSP,8
.L_411875:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_4119c8

            mov RDX,QWORD PTR [RSI]
            mov R15,R13
            mov RBX,RDI
            jmp .L_411899
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411890:

            mov RBX,QWORD PTR [RBX+24]
            test RBX,RBX
            je .L_4118b0
.L_411899:

            cmp QWORD PTR [RBX+32],RDX
            jb .L_411890

            mov RAX,QWORD PTR [RBX+16]
            jbe .L_411908

            mov R15,RBX
            mov RBX,RAX
            test RBX,RBX
            jne .L_411899
.L_4118b0:

            cmp R13,R15
            sete AL
.L_4118b6:

            cmp QWORD PTR [RBP+24],R15
            mov R14,QWORD PTR [RBP+40]
            jne .L_4119c0

            test AL,AL
            je .L_4119c0
.L_4118cc:

            mov RSI,RDI
            mov RDI,RBP
            call .L_411820

            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+24],R13
            mov QWORD PTR [RBP+32],R13
            mov QWORD PTR [RBP+40],0
.L_4118ef:

            add RSP,8
.L_4118f3:

            mov RAX,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411908:

            mov RCX,QWORD PTR [RBX+24]
            test RCX,RCX
            jne .L_411924

            jmp .L_411938
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411918:

            mov R15,RCX
            mov RCX,QWORD PTR [RCX+16]
            test RCX,RCX
            je .L_411938
.L_411924:

            cmp RDX,QWORD PTR [RCX+32]
            jb .L_411918

            mov RCX,QWORD PTR [RCX+24]
            test RCX,RCX
            jne .L_411924

            nop
            nop
            nop
            nop
            nop
.L_411938:

            test RAX,RAX
            je .L_41194f
.L_41193d:

            cmp RDX,QWORD PTR [RAX+32]
            ja .L_4119a0

            mov RBX,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            jne .L_41193d
.L_41194f:

            cmp QWORD PTR [RBP+24],RBX
            mov R14,QWORD PTR [RBP+40]
            je .L_4119b0
.L_411959:

            cmp R15,RBX
            je .L_4119c0

            nop
            nop
.L_411960:

            mov RDI,RBX
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            mov RDI,RBX
            mov RSI,R13
            mov R12,RAX
            call _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@PLT

            mov RDI,RAX
            mov RBX,R12
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBP+40]
            sub RAX,1
            cmp R12,R15
            mov QWORD PTR [RBP+40],RAX
            jne .L_411960

            sub R14,RAX
            jmp .L_4118ef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4119a0:

            mov RAX,QWORD PTR [RAX+24]
            jmp .L_411938
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4119b0:

            cmp R15,R13
            jne .L_411959

            jmp .L_4118cc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4119c0:

            xor R14D,R14D
            jmp .L_4118ef
.L_4119c8:

            mov R15,R13
            mov EAX,1
            jmp .L_4118b6
.L_4119d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4119e0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_4119f7:

            mov RCX,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            mov RAX,RCX
            sub R14,RBX
            sub RAX,RBX
            sar RAX,3
            test RAX,RAX
            je .L_411ad0

            lea RSI,QWORD PTR [RAX+RAX*1]
            mov R15,-8
            cmp RAX,RSI
            jbe .L_411ae8
.L_411a28:

            mov RDI,R15
            mov QWORD PTR [RSP],RDX
            call _Znwm@PLT

            mov RBX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+8]
            mov R8,R12
            mov RDX,QWORD PTR [RSP]
            mov R13,RAX
            add R15,RAX
            sub R8,RBX
.L_411a4c:

            add R14,R13
            je .L_411a57

            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [R14],RAX
.L_411a57:

            cmp R12,RBX
            je .L_411a7c

            mov RDX,R8
            mov RSI,RBX
            mov RDI,R13
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_411a7c:

            mov R14,RCX
            lea R8,QWORD PTR [R13+R8*1+8]
            sub R14,R12
            cmp RCX,R12
            je .L_411a9d

            mov RDI,R8
            mov RDX,R14
            mov RSI,R12
            call memcpy@PLT

            mov R8,RAX
.L_411a9d:

            add R14,R8
            test RBX,RBX
            je .L_411aad

            mov RDI,RBX
            call _ZdlPv@PLT
.L_411aad:

            mov QWORD PTR [RBP],R13
            mov QWORD PTR [RBP+8],R14
            mov QWORD PTR [RBP+16],R15
            add RSP,24
.L_411abd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411ad0:

            mov ESI,1
.L_411ad5:

            lea R15,QWORD PTR [RSI*8]
            jmp .L_411a28
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411ae8:

            movabs RAX,2305843009213693951
            cmp RSI,RAX
            ja .L_411a28

            test RSI,RSI
            jne .L_411ad5

            mov R8,R14
            xor R15D,R15D
            xor R13D,R13D
            jmp .L_411a4c
.L_411b0e:

            nop
            nop
.L_411b10:

            test RSI,RSI
            je .L_411b58

            mov RCX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            sub RAX,RCX
            mov R8,RCX
            sar RAX,3
            cmp RAX,RSI
            jb .L_411b60

            mov RDX,RSI
            mov RAX,RCX
            nop
            nop
            nop
            nop
            nop
            nop
.L_411b38:

            mov QWORD PTR [RAX],0
            add RAX,8
            sub RDX,1
            jne .L_411b38

            lea RAX,QWORD PTR [RCX+RSI*8]
            mov QWORD PTR [RDI+8],RAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411b58:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411b60:

            push R15
.L_411b62:

            push R14
            movabs RDX,2305843009213693951
            push R13
            push R12
            mov RAX,RDX
            push RBP
            push RBX
            mov RBX,RCX
            mov RBP,RSI
            mov R12,RDI
            sub RSP,24
.L_411b84:

            mov R15,QWORD PTR [RDI]
            sub RBX,R15
            mov R14,RBX
            sar R14,3
            sub RAX,R14
            cmp RSI,RAX
            ja .L_411c7a

            cmp RSI,R14
            mov RAX,R14
            cmovae RAX,RSI
            add RAX,R14
            jb .L_411c60

            cmp RAX,RDX
            ja .L_411c60

            test RAX,RAX
            je .L_411c6c

            lea R13,QWORD PTR [RAX*8]
.L_411bca:

            mov RDI,R13
            call _Znwm@PLT

            mov R8,QWORD PTR [R12+8]
            mov R15,QWORD PTR [R12]
            mov R9,RAX
            add R13,RAX
            mov RDX,R8
            sub RDX,R15
.L_411be7:

            lea RAX,QWORD PTR [R9+RBX*1]
            mov RCX,RBP
            nop
            nop
.L_411bf0:

            mov QWORD PTR [RAX],0
            add RAX,8
            sub RCX,1
            jne .L_411bf0

            cmp R15,R8
            je .L_411c50

            mov RDI,R9
            mov RSI,R15
            call memmove@PLT

            mov R9,RAX
.L_411c14:

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            call _ZdlPv@PLT

            mov R9,QWORD PTR [RSP+8]
.L_411c26:

            lea RSI,QWORD PTR [RBP+R14*1]
            mov QWORD PTR [R12],R9
            mov QWORD PTR [R12+16],R13
            lea RAX,QWORD PTR [R9+RSI*8]
            mov QWORD PTR [R12+8],RAX
            add RSP,24
.L_411c41:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411c50:

            test R15,R15
            je .L_411c26

            jmp .L_411c14
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411c60:

            mov R13,-8
            jmp .L_411bca
.L_411c6c:

            mov RDX,RBX
            xor R13D,R13D
            xor R9D,R9D
            jmp .L_411be7
.L_411c7a:

            lea RDI,QWORD PTR [RIP+.L_435d20]
            call _ZSt20__throw_length_errorPKc@PLT
.L_411c86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411c90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_411ca1:

            mov RCX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            test RCX,RCX
            je .L_411cf4

            mov RAX,QWORD PTR [RCX+72]
            sub RAX,QWORD PTR [RCX+40]
            sar RAX,3
            sub RAX,1
            shl RAX,4
            mov RDX,RAX
            mov RAX,QWORD PTR [RCX+48]
            sub RAX,QWORD PTR [RCX+56]
            sar RAX,5
            add RAX,RDX
            mov RDX,QWORD PTR [RCX+32]
            sub RDX,QWORD PTR [RCX+16]
            sar RDX,5
            add RAX,RDX
            jne .L_411d20
.L_411cf4:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4122e1

            add RSP,520
.L_411d12:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411d20:

            lea RBX,QWORD PTR [RSP+112]
            mov RBP,RDI
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_411db3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_411db8:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_411e72:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_411e77:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435d3a]
            mov EDX,18
.L_411e87:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,147
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_411ec3:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435d4d]
            mov EDX,16
.L_411ed3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_411ed8:

            cmp BYTE PTR [RSP+112],0
            je .L_412020
.L_411ee3:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_411f15

            call _ZdlPv@PLT
.L_411f15:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
.L_411f60:

            mov RSI,QWORD PTR [RBX+72]
            mov RAX,RSI
            sub RAX,QWORD PTR [RBX+40]
            sar RAX,3
            sub RAX,1
            shl RAX,4
            mov RDX,RAX
            mov RAX,RCX
            sub RAX,RDI
            sar RAX,5
            add RAX,RDX
            mov RDX,QWORD PTR [RBX+32]
            sub RDX,QWORD PTR [RBX+16]
            sar RDX,5
            add RAX,RDX
            je .L_411cf4

            cmp RCX,RDI
            je .L_411fd0
.L_411fa1:

            mov RDI,QWORD PTR [RCX-8]
            mov ESI,4
            call _ZdlPvm@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            cmp RCX,RDI
            je .L_411fe0

            sub RCX,32
            mov QWORD PTR [RBX+48],RCX
            jmp .L_411f60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411fd0:

            mov RCX,QWORD PTR [RSI-8]
            add RCX,512
            jmp .L_411fa1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411fe0:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [RBX+56],RAX
            add RAX,480
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            mov RBX,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            jmp .L_411f60
          .byte 0x90
.L_412020:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_412204

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_412160

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_412096:

            call .L_40c4e0
.L_41209b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_412216

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_412274

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_412283

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_4120f9:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_41211d
.L_412118:

            call _ZdlPv@PLT
.L_41211d:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_41212c:

            call write@PLT
.L_412131:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_411ee3

            call _ZdlPv@PLT

            jmp .L_411ee3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412160:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_412179:

            call .L_40c4e0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_412247

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_412296

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4122a5

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4121dc:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_412118

            jmp .L_41211d
.L_412204:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_412211:

            jmp .L_41211d
.L_412216:

            test RDX,RDX
            je .L_412234

            cmp RDX,1
            je .L_4122cb

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_412234:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4120f9
.L_412247:

            test RDX,RDX
            je .L_412261

            cmp RDX,1
            je .L_4122b8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_412261:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_4121dc
.L_412274:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_412283:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_4120f9
.L_412296:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4122a5:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4121dc
.L_4122b8:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_412261
.L_4122cb:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_412234
.L_4122e1:

            call __stack_chk_fail@PLT
.L_4122e6:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_4122fd

            call _ZdlPv@PLT
.L_4122fd:

            call _ZSt9terminatev@PLT
.L_412302:

            jmp .L_4122e6
.L_412304:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
.L_412326:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
.L_41233a:

            call _Unwind_Resume@PLT
.L_41233f:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_412352:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_412366:

            mov RBP,RAX
            jmp .L_412326
.L_41236b:

            nop
            nop
            nop
            nop
            nop
.L_412370:

            lea RAX,QWORD PTR [RIP+.L_648cd0]
            push R12
            push RBP
            push RBX
.L_41237b:

            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_411c90

            mov RBP,QWORD PTR [RBX+8]
            test RBP,RBP
            je .L_4123e0

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_4123ca

            mov RAX,QWORD PTR [RBP+72]
            mov RBX,QWORD PTR [RBP+40]
            lea R12,QWORD PTR [RAX+8]
            cmp R12,RBX
            jbe .L_4123c5

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4123b0:

            mov RDI,QWORD PTR [RBX]
            add RBX,8
            call _ZdlPv@PLT

            cmp R12,RBX
            ja .L_4123b0

            mov RDI,QWORD PTR [RBP]
.L_4123c5:

            call _ZdlPv@PLT
.L_4123ca:

            pop RBX
.L_4123cb:

            mov RDI,RBP
            mov ESI,80
            pop RBP
            pop R12
            jmp _ZdlPvm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4123e0:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_4123e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4123f0:

            push RBX
            mov RBX,RDI
            call .L_412370

            mov RDI,RBX
            mov ESI,24
            pop RBX
            jmp _ZdlPvm@PLT
.L_412407:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412410:

            lea RAX,QWORD PTR [RIP+.L_645e90]
            mov QWORD PTR [RDI],RAX
            jmp .L_412370
.L_41241f:

            nop
.L_412420:

            lea RAX,QWORD PTR [RIP+.L_645e90]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_412370

            mov RDI,RBX
            mov ESI,32
            pop RBX
            jmp _ZdlPvm@PLT
.L_412441:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412450:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_645ed0]
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_412485

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c3a0

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_412485:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_412370
.L_412493:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4124a0:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_645ed0]
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_4124d5

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c3a0

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_4124d5:

            mov RDI,RBX
            call .L_412370

            add RSP,8
            mov RDI,RBX
            mov ESI,32
            pop RBX
            pop RBP
            jmp _ZdlPvm@PLT
.L_4124f0:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_645f10]
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_412525

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c400

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_412525:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_412370
.L_412533:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412540:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_645f10]
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_412575

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c400

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_412575:

            mov RDI,RBX
            call .L_412370

            add RSP,8
            mov RDI,RBX
            mov ESI,32
            pop RBX
            pop RBP
            jmp _ZdlPvm@PLT
.L_412590:

            push RBX
            mov RBX,RDI
            mov RDI,RSI
            lea RSI,QWORD PTR [RBX+8]
            call _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@PLT

            mov RDI,RAX
            call _ZdlPv@PLT

            sub QWORD PTR [RBX+40],1
            pop RBX
            ret 
.L_4125af:

            nop
.L_4125b0:

            push RBX
            sub RSP,16
.L_4125b5:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_412610

            mov EDX,DWORD PTR [RSI+4]
            jmp .L_4125d9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4125c8:

            mov RAX,QWORD PTR [RBX+16]
            mov ECX,1
            test RAX,RAX
            je .L_4125e9
.L_4125d6:

            mov RBX,RAX
.L_4125d9:

            cmp EDX,DWORD PTR [RBX+32]
            jl .L_4125c8

            mov RAX,QWORD PTR [RBX+24]
            xor ECX,ECX
            test RAX,RAX
            jne .L_4125d6
.L_4125e9:

            test CL,CL
            mov R8,RBX
            jne .L_412614
.L_4125f0:

            xor EDX,EDX
            mov ECX,DWORD PTR [RBX+36]
            cmp ECX,DWORD PTR [RSI]
            mov RAX,RBX
            cmovl RAX,RDX
            cmovl RDX,R8
.L_412602:

            add RSP,16
.L_412606:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412610:

            lea RBX,QWORD PTR [RDI+8]
.L_412614:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_412602

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R8,RBX
            mov RSI,QWORD PTR [RSP+8]
            mov RBX,RAX
            jmp .L_4125f0
.L_412639:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412640:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            call .L_4125b0

            test RDX,RDX
            jne .L_412660

            add RSP,8
            xor EDX,EDX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_412660:

            mov RCX,RBP
            mov RDI,RBX
            mov RSI,RAX
            call .L_40c460

            add RSP,8
            mov EDX,1
            pop RBX
            pop RBP
            ret 
.L_41267a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_412680:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            call .L_4125b0

            test RDX,RDX
            jne .L_4126a0

            add RSP,8
            xor EDX,EDX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_4126a0:

            mov RCX,RBP
            mov RDI,RBX
            mov RSI,RAX
            call .L_40c460

            add RSP,8
            mov EDX,1
            pop RBX
            pop RBP
            ret 
.L_4126ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4126c0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,24
.L_4126d7:

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RDI]
            mov RCX,RAX
            sub R14,RDI
            sub RCX,RDI
            sar RCX,3
            test RCX,RCX
            je .L_4127d8

            lea RSI,QWORD PTR [RCX+RCX*1]
            mov R13,-8
            cmp RCX,RSI
            jbe .L_4127f0
.L_412708:

            mov RDI,R13
            mov QWORD PTR [RSP+8],RDX
            call _Znwm@PLT

            mov RDI,QWORD PTR [RBP]
            mov R12,RAX
            mov RDX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBP+8]
            lea R15,QWORD PTR [R12+8]
            add R13,R12
.L_41272d:

            add R14,R12
            je .L_412738

            mov RDX,QWORD PTR [RDX]
            mov QWORD PTR [R14],RDX
.L_412738:

            cmp RBX,RDI
            je .L_412776

            mov RCX,R12
            mov RDX,RDI
            nop
            nop
            nop
            nop
            nop
.L_412748:

            test RCX,RCX
            je .L_412753

            mov RSI,QWORD PTR [RDX]
            mov QWORD PTR [RCX],RSI
.L_412753:

            add RDX,8
            add RCX,8
            cmp RBX,RDX
            jne .L_412748

            lea RDX,QWORD PTR [RDI+8]
            mov RSI,RBX
            sub RSI,RDX
            mov RDX,RSI
            shr RDX,3
            lea R15,QWORD PTR [R12+RDX*8+16]
.L_412776:

            cmp RBX,RAX
            je .L_4127b0

            mov RDX,RBX
            mov RCX,R15
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412788:

            test RCX,RCX
            je .L_412793

            mov RSI,QWORD PTR [RDX]
            mov QWORD PTR [RCX],RSI
.L_412793:

            add RDX,8
            add RCX,8
            cmp RDX,RAX
            jne .L_412788

            add RBX,8
            sub RDX,RBX
            shr RDX,3
            lea R15,QWORD PTR [R15+RDX*8+8]
.L_4127b0:

            test RDI,RDI
            je .L_4127ba

            call _ZdlPv@PLT
.L_4127ba:

            mov QWORD PTR [RBP],R12
            mov QWORD PTR [RBP+8],R15
            mov QWORD PTR [RBP+16],R13
            add RSP,24
.L_4127ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4127d8:

            mov ESI,1
.L_4127dd:

            lea R13,QWORD PTR [RSI*8]
            jmp .L_412708
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4127f0:

            movabs RCX,2305843009213693951
            cmp RSI,RCX
            ja .L_412708

            test RSI,RSI
            jne .L_4127dd

            mov R15D,8
            xor R13D,R13D
            xor R12D,R12D
            jmp .L_41272d
.L_412819:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412820:

            mov RAX,QWORD PTR [RDI+8]
            cmp RAX,QWORD PTR [RDI+16]
            je .L_412840

            test RAX,RAX
            je .L_412835

            mov RDX,QWORD PTR [RSI]
            mov QWORD PTR [RAX],RDX
.L_412835:

            add RAX,8
            mov QWORD PTR [RDI+8],RAX
            ret 
          .byte 0x66
          .byte 0x90
.L_412840:

            mov RDX,RSI
            mov RSI,RAX
            jmp .L_4126c0
.L_41284b:

            nop
            nop
            nop
            nop
            nop
.L_412850:

            push RBP
            push RBX
            sub RSP,8
.L_412856:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_4128b0

            mov R8,QWORD PTR [RSI]
            jmp .L_41287a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412868:

            mov RAX,QWORD PTR [RBX+16]
            mov R9D,1
            test RAX,RAX
            je .L_41288f
.L_412877:

            mov RBX,RAX
.L_41287a:

            mov RCX,QWORD PTR [RBX+32]
            cmp R8,RCX
            jb .L_412868

            mov RAX,QWORD PTR [RBX+24]
            xor R9D,R9D
            test RAX,RAX
            jne .L_412877
.L_41288f:

            test R9B,R9B
            mov R10,RBX
            jne .L_4128b4
.L_412897:

            xor EDX,EDX
            mov RAX,RBX
            cmp R8,RCX
            cmova RAX,RDX
            cmova RDX,R10
.L_4128a7:

            add RSP,8
.L_4128ab:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_4128b0:

            lea RBX,QWORD PTR [RDI+8]
.L_4128b4:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_4128a7

            mov RBP,RSI
            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R10,RBX
            mov R8,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RAX+32]
            mov RBX,RAX
            jmp .L_412897
.L_4128da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4128e0:

            push R13
            lea RAX,QWORD PTR [RDI+8]
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
.L_4128f4:

            cmp RSI,RAX
            je .L_412978

            mov R13,QWORD PTR [RDX]
            cmp R13,QWORD PTR [RSI+32]
            mov RBX,RSI
            jae .L_412940

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            mov RDX,RAX
            je .L_412934

            mov RDI,RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jbe .L_41298c

            cmp QWORD PTR [RAX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmovne RDX,RBX
.L_412934:

            add RSP,8
.L_412938:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_412940:

            jbe .L_4129a8

            mov RCX,QWORD PTR [RDI+32]
            xor EAX,EAX
            cmp RCX,RSI
            mov RDX,RCX
            je .L_412934

            mov RDI,RSI
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jae .L_41298c

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RAX,RDX
            cmove RDX,RBX
            jmp .L_412934
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412978:

            cmp QWORD PTR [RDI+40],0
            je .L_41298c

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RDX]
            cmp QWORD PTR [RBX+32],RAX
            jb .L_4129c0
.L_41298c:

            add RSP,8
.L_412990:

            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_412850
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4129a8:

            add RSP,8
            mov RAX,RSI
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4129c0:

            add RSP,8
            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4129d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4129de:

            mov RBX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP],RSI
            test RBX,RBX
            je .L_412ac8

            mov RAX,QWORD PTR [RSP]
            mov R15,QWORD PTR [RAX+8]
            mov RBP,QWORD PTR [RAX]
            jmp .L_412a19
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412a08:

            mov RAX,QWORD PTR [RBX+16]
            mov ESI,1
            test RAX,RAX
            je .L_412a67
.L_412a16:

            mov RBX,RAX
.L_412a19:

            mov R14,QWORD PTR [RBX+40]
            mov R13,QWORD PTR [RBX+32]
            cmp R15,R14
            mov R12,R14
            cmovbe R12,R15
            test R12,R12
            je .L_412a42

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call memcmp@PLT

            test EAX,EAX
            jne .L_412a58
.L_412a42:

            mov RAX,R15
            sub RAX,R14
            cmp RAX,2147483647
            jg .L_412a5c

            cmp RAX,-2147483648
            jl .L_412a08
.L_412a58:

            test EAX,EAX
            js .L_412a08
.L_412a5c:

            mov RAX,QWORD PTR [RBX+24]
            xor ESI,ESI
            test RAX,RAX
            jne .L_412a16
.L_412a67:

            test SIL,SIL
            mov R9,RBX
            jne .L_412acc

            test R12,R12
            jne .L_412b0b
.L_412a78:

            sub R14,R15
            cmp R14,2147483647
            jg .L_412ab0
.L_412a84:

            cmp R14,-2147483648
            jl .L_412a94

            mov EAX,R14D
.L_412a90:

            test EAX,EAX
            jns .L_412ab0
.L_412a94:

            add RSP,24
.L_412a98:

            xor EAX,EAX
            mov RDX,R9
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412ab0:

            add RSP,24
            mov RAX,RBX
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412ac8:

            lea RBX,QWORD PTR [RDI+8]
.L_412acc:

            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RAX+24],RBX
            je .L_412b40

            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov RCX,QWORD PTR [RSP]
            mov R14,QWORD PTR [RAX+40]
            mov R9,RBX
            mov R13,QWORD PTR [RAX+32]
            mov RBX,RAX
            mov R15,QWORD PTR [RCX+8]
            mov R12,R14
            mov RBP,QWORD PTR [RCX]
            cmp R15,R14
            cmovbe R12,R15
            test R12,R12
            je .L_412a78
.L_412b0b:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,R13
            mov QWORD PTR [RSP],R9
            call memcmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP]
            jne .L_412a90

            sub R14,R15
            cmp R14,2147483647
            jle .L_412a84

            jmp .L_412ab0
          .byte 0x66
          .byte 0x90
.L_412b40:

            add RSP,24
.L_412b44:

            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_412b54:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412b60:

            push R15
            lea RAX,QWORD PTR [RDI+8]
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R15,RDX
            sub RSP,24
.L_412b78:

            cmp RSI,RAX
            je .L_412d78

            mov R12,QWORD PTR [RDX+8]
            mov RBP,QWORD PTR [RSI+40]
            mov RBX,RSI
            mov R8,QWORD PTR [RSI+32]
            mov R14,QWORD PTR [RDX]
            cmp R12,RBP
            mov RCX,RBP
            cmovbe RCX,R12
            test RCX,RCX
            jne .L_412c58

            mov RAX,R12
            sub RAX,RBP
            cmp RAX,2147483647
            jg .L_412caa
.L_412bb8:

            cmp RAX,-2147483648
            jl .L_412bc8

            test EAX,EAX
            jns .L_412d50
.L_412bc8:

            cmp QWORD PTR [R13+24],RBX
            mov RAX,RBX
            mov RDX,RBX
            je .L_412d65

            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov RBP,QWORD PTR [RAX+40]
            mov RCX,RAX
            cmp R12,RBP
            mov RDX,RBP
            cmovbe RDX,R12
            test RDX,RDX
            je .L_412c0e

            mov RDI,QWORD PTR [RAX+32]
            mov RSI,R14
            mov QWORD PTR [RSP],RAX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP]
            jne .L_412c29
.L_412c0e:

            sub RBP,R12
            cmp RBP,2147483647
            jg .L_412dd0

            cmp RBP,-2147483648
            jl .L_412c31

            mov EAX,EBP
.L_412c29:

            test EAX,EAX
            jns .L_412dd0
.L_412c31:

            cmp QWORD PTR [RCX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmove RBX,RCX
            add RSP,24
.L_412c47:

            mov RDX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412c58:

            mov RDX,RCX
            mov RSI,R8
            mov RDI,R14
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],R8
            call memcmp@PLT

            test EAX,EAX
            mov R8,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            jne .L_412df0

            mov RAX,R12
            sub RAX,RBP
            cmp RAX,2147483647
            jle .L_412bb8

            nop
            nop
            nop
            nop
            nop
            nop
.L_412c98:

            mov RDX,RCX
            mov RSI,R14
            mov RDI,R8
            call memcmp@PLT

            test EAX,EAX
            jne .L_412cc5
.L_412caa:

            sub RBP,R12
            cmp RBP,2147483647
            jg .L_412d60

            cmp RBP,-2147483648
            jl .L_412ccd

            mov EAX,EBP
.L_412cc5:

            test EAX,EAX
            jns .L_412d60
.L_412ccd:

            cmp QWORD PTR [R13+32],RBX
            je .L_412db5

            mov RDI,RBX
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            mov RBP,QWORD PTR [RAX+40]
            mov RCX,RAX
            cmp R12,RBP
            mov RDX,RBP
            cmovbe RDX,R12
            test RDX,RDX
            je .L_412d0d

            mov RSI,QWORD PTR [RAX+32]
            mov RDI,R14
            mov QWORD PTR [RSP],RAX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP]
            jne .L_412d29
.L_412d0d:

            sub R12,RBP
            cmp R12,2147483647
            jg .L_412dd0

            cmp R12,-2147483648
            jl .L_412d31

            mov EAX,R12D
.L_412d29:

            test EAX,EAX
            jns .L_412dd0
.L_412d31:

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RBX,RCX
            cmovne RAX,RCX
            mov RDX,RBX
            jmp .L_412d65
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412d50:

            test RCX,RCX
            jne .L_412c98

            jmp .L_412caa
          .byte 0x66
          .byte 0x90
.L_412d60:

            mov RAX,RBX
            xor EDX,EDX
.L_412d65:

            add RSP,24
.L_412d69:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412d78:

            cmp QWORD PTR [RDI+40],0
            je .L_412dd0

            mov RBX,QWORD PTR [RDI+32]
            mov R12,QWORD PTR [RDX+8]
            mov RBP,QWORD PTR [RBX+40]
            mov RDX,R12
            cmp RBP,R12
            cmovbe RDX,RBP
            test RDX,RDX
            jne .L_412e00
.L_412d9a:

            sub RBP,R12
            cmp RBP,2147483647
            jg .L_412dd0

            cmp RBP,-2147483648
            jl .L_412db5

            mov EAX,EBP
.L_412db1:

            test EAX,EAX
            jns .L_412dd0
.L_412db5:

            add RSP,24
.L_412db9:

            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412dd0:

            add RSP,24
            mov RSI,R15
            mov RDI,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4129d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412df0:

            js .L_412bc8

            jmp .L_412c98
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412e00:

            mov RDI,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [R15]
            call memcmp@PLT

            test EAX,EAX
            je .L_412d9a

            jmp .L_412db1
.L_412e12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412e20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,56
            cmp BYTE PTR [RSI],11
            je .L_412e50
.L_412e35:

            add RSP,56
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412e50:

            mov RAX,QWORD PTR [RSI+32]
            mov RBX,RSI
            test RAX,RAX
            mov QWORD PTR [RSP+32],RAX
            je .L_412e35

            mov RAX,QWORD PTR [RDI+24]
            mov R14,RDI
            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_412fe0

            mov R14,QWORD PTR [RAX+16]
            lea RSI,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+24],RSI
            test R14,R14
            je .L_413119

            mov RAX,QWORD PTR [RSP+32]
            mov R12,QWORD PTR [RSP+24]
            mov RCX,R14
            mov R13,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_412eb9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412eb0:

            mov RCX,QWORD PTR [RCX+24]
            test RCX,RCX
            je .L_412f10
.L_412eb9:

            mov R15,QWORD PTR [RCX+40]
            mov RDX,R13
            cmp R15,R13
            cmovbe RDX,R15
            test RDX,RDX
            je .L_412ee8

            mov RDI,QWORD PTR [RCX+32]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RCX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+8]
            jne .L_412f00
.L_412ee8:

            sub R15,R13
            cmp R15,2147483647
            jg .L_412f04

            cmp R15,-2147483648
            jl .L_412eb0

            mov EAX,R15D
.L_412f00:

            test EAX,EAX
            js .L_412eb0
.L_412f04:

            mov R12,RCX
            mov RCX,QWORD PTR [RCX+16]
            test RCX,RCX
            jne .L_412eb9
.L_412f10:

            cmp R12,QWORD PTR [RSP+24]
            je .L_412f51

            mov R15,QWORD PTR [R12+40]
            cmp R13,R15
            mov RDX,R15
            cmovbe RDX,R13
            test RDX,RDX
            jne .L_412fc0
.L_412f2f:

            mov RAX,R13
            sub RAX,R15
            cmp RAX,2147483647
            jg .L_412e35

            cmp RAX,-2147483648
            jl .L_412f51
.L_412f49:

            test EAX,EAX
            jns .L_412e35
.L_412f51:

            mov R15,QWORD PTR [RSP+24]
            jmp .L_412f6d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412f60:

            mov R14,QWORD PTR [R14+24]
.L_412f64:

            test R14,R14
            je .L_4130c0
.L_412f6d:

            mov R12,QWORD PTR [R14+40]
            mov RDX,R13
            cmp R12,R13
            cmovbe RDX,R12
            test RDX,RDX
            je .L_412f92

            mov RDI,QWORD PTR [R14+32]
            mov RSI,QWORD PTR [RSP+16]
            call memcmp@PLT

            test EAX,EAX
            jne .L_412fac
.L_412f92:

            mov RCX,R12
            sub RCX,R13
            cmp RCX,2147483647
            jg .L_412fb0

            cmp RCX,-2147483648
            jl .L_412f60

            mov EAX,ECX
.L_412fac:

            test EAX,EAX
            js .L_412f60
.L_412fb0:

            mov R15,R14
            mov R14,QWORD PTR [R14+16]
            jmp .L_412f64
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412fc0:

            mov RSI,QWORD PTR [R12+32]
            mov RDI,QWORD PTR [RSP+16]
            call memcmp@PLT

            test EAX,EAX
            je .L_412f2f

            jmp .L_412f49
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412fe0:

            mov EDI,48
.L_412fe5:

            call _Znwm@PLT

            lea R15,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+40],RAX
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+24],R15
            mov QWORD PTR [RAX+32],R15
            mov QWORD PTR [R14+24],RAX
            mov RAX,QWORD PTR [RBX+32]
            mov QWORD PTR [RSP+32],RAX
.L_41301f:

            mov QWORD PTR [RSP+24],R15
.L_413024:

            mov EDI,72
            mov R13,R15
            call _Znwm@PLT
.L_413031:

            mov R15,RAX
            lea R14,QWORD PTR [RAX+32]
            lea RAX,QWORD PTR [RAX+48]
            mov QWORD PTR [R15+32],RAX
            mov R12,RAX
            mov RAX,QWORD PTR [RSP+32]
            mov RDI,R14
            mov RSI,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RAX+8]
            add RDX,RSI
.L_413055:

            call .L_40c4e0
.L_41305a:

            mov RDI,QWORD PTR [RSP+40]
            mov RDX,R14
            mov RSI,R13
            mov DWORD PTR [R15+64],0
            call .L_412b60

            test RDX,RDX
            mov R14,RAX
            mov R13,RDX
            je .L_413123

            cmp QWORD PTR [RSP+24],RDX
            je .L_413091

            test RAX,RAX
            je .L_413141
.L_413091:

            mov EDI,1
.L_413096:

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,R13
            mov RSI,R15
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            mov RAX,QWORD PTR [RSP+40]
            add QWORD PTR [RAX+40],1
.L_4130b0:

            mov EAX,DWORD PTR [RBX+24]
            mov DWORD PTR [R15+64],EAX
            jmp .L_412e35
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4130c0:

            cmp R15,QWORD PTR [RSP+24]
            je .L_413024

            mov R14,QWORD PTR [R15+40]
            cmp R13,R14
            mov RDX,R14
            cmovbe RDX,R13
            test RDX,RDX
            je .L_4130f0

            mov RSI,QWORD PTR [R15+32]
            mov RDI,QWORD PTR [RSP+16]
            call memcmp@PLT

            test EAX,EAX
            jne .L_41310f
.L_4130f0:

            mov R8,R13
            sub R8,R14
            cmp R8,2147483647
            jg .L_4130b0

            cmp R8,-2147483648
            jl .L_413024

            mov EAX,R8D
.L_41310f:

            test EAX,EAX
            js .L_413024

            jmp .L_4130b0
.L_413119:

            mov R15,QWORD PTR [RSP+24]
            jmp .L_41301f
.L_413123:

            mov RDI,QWORD PTR [R15+32]
            cmp R12,RDI
            je .L_413131

            call _ZdlPv@PLT
.L_413131:

            mov RDI,R15
            mov R15,R14
            call _ZdlPv@PLT

            jmp .L_4130b0
.L_413141:

            mov R14,QWORD PTR [R15+40]
            mov RCX,QWORD PTR [RDX+40]
            cmp R14,RCX
            mov RDX,RCX
            cmovbe RDX,R14
            test RDX,RDX
            je .L_413173

            mov RSI,QWORD PTR [R13+32]
            mov RDI,QWORD PTR [R15+32]
            mov QWORD PTR [RSP+8],RCX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+8]
            jne .L_413193
.L_413173:

            mov RAX,R14
            xor EDI,EDI
            sub RAX,RCX
            cmp RAX,2147483647
            jg .L_413096

            cmp RAX,-2147483648
            jl .L_413091
.L_413193:

            shr EAX,31
            mov EDI,EAX
            jmp .L_413096
.L_41319d:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RDI,R15
            call _ZdlPv@PLT
.L_4131ad:

            call __cxa_rethrow@PLT
.L_4131b2:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_4131bd:

            call _Unwind_Resume@PLT
.L_4131c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4131d0:

            push RBP
            push RBX
            sub RSP,8
.L_4131d6:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_413230

            mov R8D,DWORD PTR [RSI]
            jmp .L_4131fa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4131e8:

            mov RAX,QWORD PTR [RBX+16]
            mov R9D,1
            test RAX,RAX
            je .L_41320e
.L_4131f7:

            mov RBX,RAX
.L_4131fa:

            mov ECX,DWORD PTR [RBX+32]
            cmp R8D,ECX
            jl .L_4131e8

            mov RAX,QWORD PTR [RBX+24]
            xor R9D,R9D
            test RAX,RAX
            jne .L_4131f7
.L_41320e:

            test R9B,R9B
            mov R10,RBX
            jne .L_413234
.L_413216:

            xor EDX,EDX
            mov RAX,RBX
            cmp R8D,ECX
            cmovg RAX,RDX
            cmovg RDX,R10
.L_413226:

            add RSP,8
.L_41322a:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413230:

            lea RBX,QWORD PTR [RDI+8]
.L_413234:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_413226

            mov RBP,RSI
            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R10,RBX
            mov R8D,DWORD PTR [RBP]
            mov ECX,DWORD PTR [RAX+32]
            mov RBX,RAX
            jmp .L_413216
.L_413259:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413260:

            push R13
            lea RAX,QWORD PTR [RDI+8]
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
.L_413274:

            cmp RSI,RAX
            je .L_4132f8

            mov R13D,DWORD PTR [RDX]
            cmp R13D,DWORD PTR [RSI+32]
            mov RBX,RSI
            jge .L_4132c0

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            mov RDX,RAX
            je .L_4132b4

            mov RDI,RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            cmp R13D,DWORD PTR [RAX+32]
            mov RDX,RAX
            jle .L_41330a

            cmp QWORD PTR [RAX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmovne RDX,RBX
.L_4132b4:

            add RSP,8
.L_4132b8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_4132c0:

            jle .L_413320

            mov RCX,QWORD PTR [RDI+32]
            xor EAX,EAX
            cmp RCX,RSI
            mov RDX,RCX
            je .L_4132b4

            mov RDI,RSI
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            cmp R13D,DWORD PTR [RAX+32]
            mov RDX,RAX
            jge .L_41330a

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RAX,RDX
            cmove RDX,RBX
            jmp .L_4132b4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4132f8:

            cmp QWORD PTR [RDI+40],0
            je .L_41330a

            mov RBX,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RDX]
            cmp DWORD PTR [RBX+32],EAX
            jl .L_413330
.L_41330a:

            add RSP,8
.L_41330e:

            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_4131d0
          .byte 0x90
.L_413320:

            add RSP,8
            mov RAX,RSI
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_413330:

            add RSP,8
            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_413340:

            push R15
            push R14
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            sub RSP,24
            cmp BYTE PTR [RSI],11
            je .L_413370
.L_413356:

            add RSP,24
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413370:

            mov R14,QWORD PTR [RSI+32]
            test R14,R14
            je .L_413356

            mov R13,QWORD PTR [RDI+24]
            mov RBP,RDI
            test R13,R13
            je .L_413480

            mov RAX,QWORD PTR [R13+16]
            lea R15,QWORD PTR [R13+8]
            mov EBP,DWORD PTR [RSI+24]
            mov RBX,R15
            test RAX,RAX
            jne .L_4133ac

            jmp .L_4133c4
          .byte 0x66
          .byte 0x90
.L_4133a0:

            mov RBX,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_4133ba
.L_4133ac:

            cmp EBP,DWORD PTR [RAX+32]
            jle .L_4133a0

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_4133ac
.L_4133ba:

            cmp R15,RBX
            je .L_4133c4

            cmp EBP,DWORD PTR [RBX+32]
            jge .L_413422
.L_4133c4:

            mov EDI,72
            mov QWORD PTR [RSP+8],RBX
            call _Znwm@PLT

            mov RSI,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+32],EBP
            lea RBP,QWORD PTR [RAX+56]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+48],0
            mov BYTE PTR [RAX+56],0
            mov QWORD PTR [RAX+40],RBP
            mov RDI,R13
            mov RBX,RAX
            call .L_413260

            test RDX,RDX
            je .L_413438

            cmp R15,RDX
            je .L_41340d

            test RAX,RAX
            je .L_413470
.L_41340d:

            mov EDI,1
.L_413412:

            mov RCX,R15
            mov RSI,RBX
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [R13+40],1
.L_413422:

            lea RDI,QWORD PTR [RBX+40]
            mov RSI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            jmp .L_413356
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413438:

            mov RDI,QWORD PTR [RBX+40]
            cmp RBP,RDI
            je .L_413450

            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
.L_413450:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov RBX,RAX
            jmp .L_413422
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413470:

            xor EDI,EDI
            mov EAX,DWORD PTR [RDX+32]
            cmp DWORD PTR [RBX+32],EAX
            setl DIL
            jmp .L_413412
          .byte 0x66
          .byte 0x90
.L_413480:

            mov EDI,48
            mov QWORD PTR [RSP+8],RSI
            call _Znwm@PLT

            mov RSI,QWORD PTR [RSP+8]
            lea RBX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBP+24],RAX
            mov R13,RAX
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],RBX
            mov QWORD PTR [RAX+32],RBX
            mov R15,RBX
            mov QWORD PTR [RAX+40],0
            mov R14,QWORD PTR [RSI+32]
            mov EBP,DWORD PTR [RSI+24]
            jmp .L_4133c4
.L_4134cd:

            nop
            nop
            nop
.L_4134d0:

            mov RCX,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR [RDI+48]
            lea RDX,QWORD PTR [RCX-32]
            cmp RAX,RDX
            je .L_413500

            test RAX,RAX
            je .L_4134f6

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RAX+16],XMM0
.L_4134f6:

            add RAX,32
            mov QWORD PTR [RDI+48],RAX
            ret 
          .byte 0x90
.L_413500:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_413514:

            mov R12,QWORD PTR [RDI+72]
            mov RCX,QWORD PTR [RDI]
            mov RDX,QWORD PTR [RDI+8]
            mov RAX,R12
            sub RAX,RCX
            mov RSI,RDX
            sar RAX,3
            sub RSI,RAX
            cmp RSI,1
            jbe .L_413590
.L_413535:

            mov EDI,512
            call _Znwm@PLT

            mov QWORD PTR [R12+8],RAX
            mov RAX,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_41355e

            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RAX+16],XMM0
.L_41355e:

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            add RSP,8
.L_413585:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_413590:

            mov RSI,QWORD PTR [RDI+40]
            mov RAX,R12
            sub RAX,RSI
            sar RAX,3
            lea R14,QWORD PTR [RAX+2]
            lea R13,QWORD PTR [RAX+1]
            lea RAX,QWORD PTR [R14+R14*1]
            cmp RDX,RAX
            ja .L_413658

            test RDX,RDX
            je .L_413688

            lea R12,QWORD PTR [RDX+RDX*1+2]
            movabs RAX,2305843009213693951
            cmp R12,RAX
            ja .L_4136b0
.L_4135d4:

            lea RDI,QWORD PTR [R12*8]
            call _Znwm@PLT

            mov R15,RAX
            mov RAX,R12
            mov RSI,QWORD PTR [RBX+40]
            sub RAX,R14
            shr RAX,1
            lea R14,QWORD PTR [R15+RAX*8]
            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            cmp RDX,RSI
            je .L_41360d

            sub RDX,RSI
            mov RDI,R14
            call memmove@PLT
.L_41360d:

            mov RDI,QWORD PTR [RBX]
            shl R13,3
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],R15
            mov QWORD PTR [RBX+8],R12
.L_413620:

            mov RAX,QWORD PTR [R14]
            lea R12,QWORD PTR [R14+R13*1-8]
            mov QWORD PTR [RBX+40],R14
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            add RAX,512
            mov QWORD PTR [RBX+32],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBX+56],RAX
            add RAX,512
            mov QWORD PTR [RBX+64],RAX
            jmp .L_413535
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413658:

            sub RDX,R14
            add R12,8
            shl R13,3
            shr RDX,1
            lea R14,QWORD PTR [RCX+RDX*8]
            mov RDX,R12
            sub RDX,RSI
            cmp RSI,R14
            jbe .L_413698

            cmp RSI,R12
            je .L_413620

            mov RDI,R14
            call memmove@PLT

            jmp .L_413620
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413688:

            mov R12D,3
            jmp .L_4135d4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413698:

            cmp RSI,R12
            je .L_413620

            mov RDI,R13
            sub RDI,RDX
            add RDI,R14
            call memmove@PLT

            jmp .L_413620
.L_4136b0:

            call _ZSt17__throw_bad_allocv@PLT
.L_4136b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4136c0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov EBX,EDX
            sub RSP,552
.L_4136d9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            mov BYTE PTR [RSP],CL
.L_4136ef:

            call .L_411c90

            test RBP,RBP
            je .L_413900

            mov RDI,QWORD PTR [R15+8]
            lea R12,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RBP
            mov DWORD PTR [RSP+24],4294967295
            mov DWORD PTR [RSP+28],EBX
            lea R13,QWORD PTR [RIP+.L_410160]
            mov RSI,R12
            mov QWORD PTR [RSP+40],0
            call .L_4134d0

            mov RAX,QWORD PTR [R15+8]
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
.L_41373f:

            cmp RDI,RBP
            je .L_413865
.L_413748:

            mov R9D,DWORD PTR [RBP-24]
            mov R14,QWORD PTR [RBP-32]
            cmp R9D,-1
            jne .L_413882
.L_41375a:

            mov EAX,DWORD PTR [R15+20]
            mov R8,QWORD PTR [R15]
            mov EDX,DWORD PTR [RBP-20]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [R15+20],EAX
            js .L_413ca8

            mov BYTE PTR [RSP+16],0
            mov RCX,R12
            mov RSI,R14
            mov RDI,R15
            call QWORD PTR [R8+16]
.L_413785:

            cmp BYTE PTR [RSP+16],0
            mov EBX,EAX
            mov DWORD PTR [RBP-16],EAX
            jne .L_4137da

            movzx EAX,WORD PTR [R14+6]
            mov DWORD PTR [RBP-24],0
            mov QWORD PTR [RBP-8],0
            cmp AX,1
            je .L_413d00

            mov R9D,0
            ja .L_413da0

            nop
            nop
            nop
            nop
            nop
.L_4137c0:

            mov RAX,QWORD PTR [R15]
            mov R8,QWORD PTR [RBP-8]
            mov EBX,DWORD PTR [RBP-16]
            mov EDX,DWORD PTR [RBP-20]
            mov R10,QWORD PTR [RAX+24]
            cmp R10,R13
            jne .L_413d80
.L_4137da:

            mov R14,QWORD PTR [R15+8]
            mov RBP,QWORD PTR [R14+48]
            mov RDI,QWORD PTR [R14+56]
            cmp RBP,RDI
            je .L_413cc0

            sub RBP,32
            mov QWORD PTR [R14+48],RBP
.L_4137f7:

            mov RCX,QWORD PTR [R14+72]
            mov RDX,RCX
            sub RDX,QWORD PTR [R14+40]
            sar RDX,3
            sub RDX,1
            mov RSI,RDX
            mov RDX,RBP
            sub RDX,RDI
            shl RSI,4
            sar RDX,5
            add RDX,RSI
            mov RSI,QWORD PTR [R14+32]
            sub RSI,QWORD PTR [R14+16]
            sar RSI,5
            add RDX,RSI
            je .L_413c79

            cmp RBP,RDI
            mov RDX,RBP
            je .L_4138f0
.L_41383f:

            mov RSI,QWORD PTR [RDX-8]
            movsxd RAX,DWORD PTR [RDX-24]
            test RSI,RSI
            je .L_4138e8

            mov DWORD PTR [RSI+RAX*4],EBX
            mov EAX,DWORD PTR [RDX-24]
.L_413856:

            add EAX,1
            cmp RDI,RBP
            mov DWORD PTR [RDX-24],EAX
            jne .L_413748
.L_413865:

            mov RBP,QWORD PTR [RCX-8]
            add RBP,512
            mov R9D,DWORD PTR [RBP-24]
            mov R14,QWORD PTR [RBP-32]
            cmp R9D,-1
            je .L_41375a
.L_413882:

            movzx EAX,WORD PTR [R14+6]
.L_413887:

            test AX,AX
            je .L_4137c0

            cmp AX,1
            jbe .L_413d0b

            movzx EDX,AX
            mov RCX,QWORD PTR [R14+8]
            cmp R9D,EDX
            jl .L_413d1b
.L_4138aa:

            mov RDX,QWORD PTR [R15]
            mov R8,QWORD PTR [RBP-8]
            mov EBX,DWORD PTR [RBP-16]
            mov R10,QWORD PTR [RDX+24]
            mov EDX,DWORD PTR [RBP-20]
            cmp R10,R13
            jne .L_413d80
.L_4138c4:

            cmp AX,1
            jbe .L_4137da

            mov RDI,QWORD PTR [RBP-8]
            test RDI,RDI
            je .L_4137da

            call _ZdaPv@PLT

            jmp .L_4137da
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4138e8:

            mov DWORD PTR [RDX-12],EBX
            jmp .L_413856
.L_4138f0:

            mov RAX,QWORD PTR [RCX-8]
            lea RDX,QWORD PTR [RAX+512]
            jmp .L_41383f
.L_413900:

            lea RBP,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R13
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov QWORD PTR [RSP+496],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_413999:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41399e:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_413a5b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_413a60:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435d3a]
            mov EDX,18
.L_413a70:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,160
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_413aac:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435d5e]
            mov EDX,9
.L_413abc:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_413ac1:

            cmp BYTE PTR [RSP+144],0
            jne .L_413bff

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_413eb0

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            ja .L_413e06

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RAX
.L_413b45:

            call .L_40c4e0
.L_413b4a:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_413ecf

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_413f2d

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_413f3c

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_413ba8:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_413bcc
.L_413bc7:

            call _ZdlPv@PLT
.L_413bcc:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_413bdb:

            call write@PLT
.L_413be0:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_413bff

            call _ZdlPv@PLT
.L_413bff:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_413c34

            call _ZdlPv@PLT
.L_413c34:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],RCX
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT
.L_413c79:

            mov EAX,EBX
            mov RBX,QWORD PTR [RSP+536]
            xor RBX,QWORD PTR FS:[40]
            jne .L_413f9d

            add RSP,552
.L_413c99:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413ca8:

            mov BYTE PTR [R15+16],1
            mov RSI,R14
            mov RDI,R15
.L_413cb3:

            call QWORD PTR [R8+40]

            mov EBX,EAX
            jmp .L_4137da
          .byte 0x66
          .byte 0x90
.L_413cc0:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [R14+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [R14+72],RDX
            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [R14+56],RAX
            add RAX,480
            mov QWORD PTR [R14+48],RAX
            mov QWORD PTR [R14+64],RDX
            mov R14,QWORD PTR [R15+8]
            mov RBP,QWORD PTR [R14+48]
            mov RDI,QWORD PTR [R14+56]
            jmp .L_4137f7
          .byte 0x90
.L_413d00:

            lea RDX,QWORD PTR [RBP-12]
            xor R9D,R9D
            mov QWORD PTR [RBP-8],RDX
.L_413d0b:

            movzx EDX,AX
            lea RCX,QWORD PTR [R14+8]
            cmp R9D,EDX
            jge .L_4138aa
.L_413d1b:

            movsxd RAX,R9D
            test R9D,R9D
            lea RSI,QWORD PTR [RAX*8]
            mov RDX,QWORD PTR [RCX+RAX*8]
            jle .L_413d40

            cmp BYTE PTR [RSP],0
            je .L_413d40

            cmp QWORD PTR [RCX+RSI*1-8],RDX
            je .L_413dc0
.L_413d40:

            mov EAX,DWORD PTR [RBP-16]
            mov RDI,QWORD PTR [R15+8]
            mov RSI,R12
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+24],4294967295
            mov QWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+28],EAX
            call .L_4134d0

            mov RAX,QWORD PTR [R15+8]
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
            jmp .L_41373f
          .byte 0x66
          .byte 0x90
.L_413d80:

            mov ECX,EBX
            mov RSI,R14
            mov RDI,R15
            call R10

            mov EBX,EAX
            movzx EAX,WORD PTR [R14+6]
            jmp .L_4138c4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413da0:

            lea RDI,QWORD PTR [RAX*4]
            call _Znam@PLT
.L_413dad:

            mov R9D,DWORD PTR [RBP-24]
            mov QWORD PTR [RBP-8],RAX
            movzx EAX,WORD PTR [R14+6]
            jmp .L_413887
          .byte 0x90
.L_413dc0:

            mov RDX,QWORD PTR [R15]
            mov RCX,QWORD PTR [RBP-8]
            mov R8,QWORD PTR [RDX+32]
            lea RDX,QWORD PTR [RAX*4]
            mov EAX,DWORD PTR [RCX+RDX*1-4]
            lea RBX,QWORD PTR [RCX+RDX*1]
            lea RCX,QWORD PTR [RIP+.L_410150]
            cmp R8,RCX
            jne .L_413ec2
.L_413deb:

            mov DWORD PTR [RBX],EAX
            mov RAX,QWORD PTR [R15+8]
            add DWORD PTR [RBP-24],1
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
            jmp .L_41373f
.L_413e06:

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_413e1f:

            call .L_40c4e0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_413f00

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_413f4f

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_413f5e

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_413e88:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            jne .L_413bc7

            jmp .L_413bcc
.L_413eb0:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_413ebd:

            jmp .L_413bcc
.L_413ec2:

            mov ESI,EAX
            mov RDI,R15
.L_413ec7:

            call R8

            jmp .L_413deb
.L_413ecf:

            test RDX,RDX
            je .L_413eed

            cmp RDX,1
            je .L_413f87

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_413eed:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_413ba8
.L_413f00:

            test RDX,RDX
            je .L_413f1a

            cmp RDX,1
            je .L_413f71

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_413f1a:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_413e88
.L_413f2d:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_413f3c:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_413ba8
.L_413f4f:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_413f5e:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_413e88
.L_413f71:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_413f1a
.L_413f87:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_413eed
.L_413f9d:

            call __stack_chk_fail@PLT
.L_413fa2:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_413fb9

            call _ZdlPv@PLT
.L_413fb9:

            call _ZSt9terminatev@PLT
.L_413fbe:

            jmp .L_413fa2
.L_413fc0:

            mov RBX,RAX
.L_413fc3:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_413fdc:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],RCX
            jmp .L_413fc3
.L_414006:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41401a:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41402d:

            nop
            nop
            nop
.L_414030:

            movzx EAX,BYTE PTR [RSI]
            cmp EAX,127
            jle .L_414080

            movzx ECX,BYTE PTR [RSI+1]
            lea EDX,DWORD PTR [RCX-128]
            test DL,192
            je .L_414050
.L_414044:

            mov DWORD PTR [RDI],65533
            mov EAX,1
            ret 
.L_414050:

            cmp EAX,223
            movzx ECX,DL
            jg .L_414090

            cmp EAX,191
            jle .L_414044

            shl EAX,6
            or EAX,ECX
            and EAX,2047
            cmp EAX,127
            jle .L_414044

            mov DWORD PTR [RDI],EAX
            mov EAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414080:

            mov DWORD PTR [RDI],EAX
            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414090:

            movzx EDX,BYTE PTR [RSI+2]
            add EDX,-128
            test DL,192
            jne .L_414044

            cmp EAX,239
            movzx R8D,DL
            jle .L_4140f0

            movzx ESI,BYTE PTR [RSI+3]
            add ESI,-128
            test SIL,192
            jne .L_414044

            cmp EAX,247
            jg .L_414044

            shl EAX,6
            movzx ESI,SIL
            or EAX,ECX
            shl EAX,6
            or EAX,R8D
            shl EAX,6
            or EAX,ESI
            and EAX,2097151
            cmp EAX,65535
            jle .L_414044

            mov DWORD PTR [RDI],EAX
            mov EAX,4
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4140f0:

            shl EAX,6
            or EAX,ECX
            shl EAX,6
            or EAX,R8D
            movzx EAX,AX
            cmp EAX,2047
            jle .L_414044

            mov DWORD PTR [RDI],EAX
            mov EAX,3
            ret 
.L_414111:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414120:

            movsxd RAX,DWORD PTR [RSI]
            cmp RAX,127
            jbe .L_414178

            cmp RAX,2047
            jbe .L_414180

            cmp RAX,1114111
            ja .L_4141c0

            mov RDX,RAX
            mov ESI,EAX
            mov RCX,RAX
            shr RDX,6
            and ESI,63
            shr RCX,12
            and EDX,63
            or ESI,4294967168
            or EDX,4294967168
            cmp RAX,65535
            ja .L_4141a0

            or ECX,4294967264
            mov BYTE PTR [RDI+1],DL
            mov BYTE PTR [RDI+2],SIL
            mov BYTE PTR [RDI],CL
            mov EAX,3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414178:

            mov BYTE PTR [RDI],AL
            mov EAX,1
            ret 
.L_414180:

            mov RDX,RAX
            and EAX,63
            shr RDX,6
            or EAX,4294967168
            or EDX,4294967232
            mov BYTE PTR [RDI+1],AL
            mov EAX,2
            mov BYTE PTR [RDI],DL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4141a0:

            shr RAX,18
            and ECX,63
            mov BYTE PTR [RDI+2],DL
            or EAX,4294967280
            or ECX,4294967168
            mov BYTE PTR [RDI+3],SIL
            mov BYTE PTR [RDI],AL
            mov BYTE PTR [RDI+1],CL
            mov EAX,4
            ret 
          .byte 0x90
.L_4141c0:

            mov ESI,4294967229
            mov EDX,4294967231
            mov ECX,4294967279
            mov BYTE PTR [RDI],CL
            mov BYTE PTR [RDI+1],DL
            mov EAX,3
            mov BYTE PTR [RDI+2],SIL
            ret 
.L_4141de:

            nop
            nop
.L_4141e0:

            sub RSP,56
            mov DWORD PTR [RSP+12],EDI
            lea RSI,QWORD PTR [RSP+12]
            lea RDI,QWORD PTR [RSP+30]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_414120

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_41421c

            add RSP,56
            ret 
.L_41421c:

            call __stack_chk_fail@PLT
.L_414221:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414230:

            xor EAX,EAX
            test ESI,ESI
            jle .L_414272

            movzx EDX,BYTE PTR [RDI]
            mov EAX,1
            cmp EDX,127
            jle .L_414272

            xor EAX,EAX
            cmp ESI,1
            je .L_414272

            cmp EDX,223
            mov EAX,1
            jle .L_414272

            xor EAX,EAX
            cmp ESI,2
            je .L_414272

            cmp EDX,239
            setle AL
            cmp ESI,3
            setg DL
            or EAX,EDX
            movzx EAX,AL
.L_414272:

            ret 
.L_414274:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414280:

            sub RSP,24
.L_414284:

            mov R9,RDI
            xor R10D,R10D
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            lea R11,QWORD PTR [RSP+4]
            jmp .L_4142b4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4142a8:

            test EAX,EAX
            je .L_4142d0

            add R9,1
.L_4142b0:

            add R10,1
.L_4142b4:

            movzx EAX,BYTE PTR [R9]
            cmp EAX,127
            jle .L_4142a8

            mov RSI,R9
            mov RDI,R11
            call .L_414030

            cdqe 
            add R9,RAX
            jmp .L_4142b0
          .byte 0x90
.L_4142d0:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R10D
            jne .L_4142e8

            add RSP,24
.L_4142e7:

            ret 
.L_4142e8:

            call __stack_chk_fail@PLT
.L_4142ed:

            nop
            nop
            nop
.L_4142f0:

            sub RSP,24
.L_4142f4:

            mov R9,RDI
            mov R10D,ESI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,127
            lea R11,QWORD PTR [RSP+4]
            jle .L_414350
.L_414314:

            movzx EAX,BYTE PTR [R9]
            cmp RAX,127
            jg .L_414331
.L_41431e:

            test RAX,RAX
            je .L_414370

            add R9,1
            movzx EAX,BYTE PTR [R9]
            cmp RAX,127
            jle .L_41431e
.L_414331:

            mov RSI,R9
            mov RDI,R11
            call .L_414030

            cmp DWORD PTR [RSP+4],R10D
            je .L_414390

            cdqe 
            add R9,RAX
            jmp .L_414314
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414350:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414395

            add RSP,24
.L_414364:

            jmp strchr@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414370:

            xor EAX,EAX
.L_414372:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            jne .L_414395

            add RSP,24
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414390:

            mov RAX,R9
            jmp .L_414372
.L_414395:

            call __stack_chk_fail@PLT
.L_41439a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4143a0:

            push RBX
            movsxd RDX,DWORD PTR [RSI+8]
            mov RBX,RDI
            mov RSI,QWORD PTR [RSI]
            call _ZNSo5writeEPKcl@PLT

            mov RAX,RBX
            pop RBX
            ret 
.L_4143b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4143c0:

            mov R8D,DWORD PTR [RDI+8]
            xor EAX,EAX
            cmp R8D,DWORD PTR [RSI+8]
            je .L_4143d0
.L_4143cc:

            ret 

            nop
            nop
.L_4143d0:

            test R8D,R8D
            mov RCX,QWORD PTR [RSI]
            mov RDX,QWORD PTR [RDI]
            movsxd RSI,R8D
            jle .L_4143ea

            movzx EDI,BYTE PTR [RCX+RSI*1-1]
            cmp BYTE PTR [RDX+RSI*1-1],DIL
            jne .L_4143cc
.L_4143ea:

            lea RAX,QWORD PTR [RDX+RSI*1]
            cmp RAX,RDX
            jbe .L_414415

            movzx ESI,BYTE PTR [RCX]
            cmp BYTE PTR [RDX],SIL
            je .L_414408
.L_4143fb:

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0x90
.L_414400:

            movzx EDI,BYTE PTR [RCX]
            cmp BYTE PTR [RDX],DIL
            jne .L_4143fb
.L_414408:

            add RDX,1
            add RCX,1
            cmp RAX,RDX
            jne .L_414400
.L_414415:

            mov EAX,1
            ret 
.L_41441b:

            nop
            nop
            nop
            nop
            nop
.L_414420:

            movsxd R8,DWORD PTR [RDI+8]
            mov RDX,QWORD PTR [RSI+8]
            mov RAX,RSI
            mov RCX,QWORD PTR [RDI]
            xor ESI,ESI
            mov RDI,RAX
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_414438:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414440:

            push RBX
            movsxd RBX,DWORD PTR [RDI+8]
            mov RAX,RSI
            sub RBX,RCX
            cmp RBX,RDX
            cmova RBX,RDX
            add RCX,QWORD PTR [RDI]
            mov RDI,RAX
            movsxd RDX,EBX
            mov RSI,RCX
            call memcpy@PLT

            mov EAX,EBX
            pop RBX
            ret 
.L_414467:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414470:

            movsxd R8,DWORD PTR [RDI+8]
            mov EAX,ESI
            test R8D,R8D
            jle .L_414556

            cmp R8,RDX
            jbe .L_414556

            mov R9,QWORD PTR [RDI]
            lea R10,QWORD PTR [R9+R8*1]
            sub R8,RDX
            lea RCX,QWORD PTR [R9+RDX*1]
            sar R8,2
            test R8,R8
            jle .L_41455c

            cmp BYTE PTR [RCX],SIL
            je .L_414561

            cmp SIL,BYTE PTR [RCX+1]
            lea RDX,QWORD PTR [RCX+1]
            je .L_414528

            cmp SIL,BYTE PTR [RCX+2]
            lea RDX,QWORD PTR [RCX+2]
            je .L_414528

            cmp SIL,BYTE PTR [RCX+3]
            lea RDI,QWORD PTR [RCX+R8*4]
            lea RDX,QWORD PTR [RCX+3]
            jne .L_4144e7

            jmp .L_414528
.L_4144d0:

            cmp AL,BYTE PTR [RCX+4]
            je .L_414528

            cmp AL,BYTE PTR [RDX+1]
            je .L_414520

            cmp AL,BYTE PTR [RDX+2]
            je .L_414538

            cmp AL,BYTE PTR [RDX+3]
            je .L_414540

            mov RCX,RDX
.L_4144e7:

            lea RDX,QWORD PTR [RCX+4]
            cmp RDX,RDI
            jne .L_4144d0
.L_4144f0:

            mov RAX,R10
            sub RAX,RDX
            cmp RAX,2
            je .L_41450b

            cmp RAX,3
            jne .L_414550

            cmp SIL,BYTE PTR [RDX]
            je .L_414528

            add RDX,1
.L_41450b:

            cmp SIL,BYTE PTR [RDX]
            je .L_414528

            add RDX,1
.L_414514:

            cmp SIL,BYTE PTR [RDX]
            mov EAX,4294967295
            je .L_414528

            ret 
.L_414520:

            lea RDX,QWORD PTR [RCX+5]
            nop
            nop
            nop
            nop
.L_414528:

            cmp R10,RDX
            je .L_414556

            mov EAX,EDX
            sub EAX,R9D
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414538:

            lea RDX,QWORD PTR [RCX+6]
            jmp .L_414528
          .byte 0x66
          .byte 0x90
.L_414540:

            lea RDX,QWORD PTR [RCX+7]
            jmp .L_414528
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414550:

            cmp RAX,1
            je .L_414514
.L_414556:

            mov EAX,4294967295
            ret 
.L_41455c:

            mov RDX,RCX
            jmp .L_4144f0
.L_414561:

            mov RDX,RCX
            jmp .L_414528
.L_414566:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414570:

            mov EAX,DWORD PTR [RDI+8]
            mov R8D,ESI
            test EAX,EAX
            jle .L_4145ba

            sub EAX,1
            mov RDI,QWORD PTR [RDI]
            cdqe 
            cmp RAX,RDX
            cmovbe RDX,RAX
            movsxd RCX,EDX
            mov EAX,EDX
            cmp SIL,BYTE PTR [RDI+RCX*1]
            je .L_4145bf

            lea ECX,DWORD PTR [RDX-1]
            movsxd RCX,ECX
            mov RAX,RCX
            sub RAX,RDX
            mov RDX,RAX
            jmp .L_4145b3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4145a8:

            sub RCX,1
            cmp BYTE PTR [RDI+RCX*1+1],R8B
            je .L_4145bf
.L_4145b3:

            cmp RCX,RDX
            mov EAX,ECX
            jne .L_4145a8
.L_4145ba:

            mov EAX,4294967295
.L_4145bf:

            ret 
.L_4145c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4145d0:

            movsxd RCX,DWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI]
            cmp RCX,RSI
            cmovbe RSI,RCX
            sub RCX,RSI
            add RAX,RSI
            cmp RCX,RDX
            cmova RCX,RDX
            mov EDX,ECX
            ret 
.L_4145ee:

            nop
            nop
.L_4145f0:

            mov ECX,DWORD PTR [RDI+8]
            test ECX,ECX
            js .L_41470a

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            movsxd RBX,ECX
            sub RSP,24
            cmp RBX,RDX
            jb .L_414700

            mov R14,QWORD PTR [RDI]
            movsxd R13,DWORD PTR [RSI+8]
            mov R15,QWORD PTR [RSI]
            lea RBP,QWORD PTR [R14+RBX*1]
            lea RDI,QWORD PTR [R14+RDX*1]
            lea RAX,QWORD PTR [R15+R13*1]
            cmp RBP,RDI
            je .L_414635

            cmp R15,RAX
            jne .L_414660
.L_414635:

            sub RDI,R14
            lea RAX,QWORD PTR [RDI+R13*1]
            cmp RBX,RAX
            jb .L_414700

            mov EAX,EDI
.L_414647:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414660:

            lea R8,QWORD PTR [R15+1]
            mov R12,R15
            not R12
            add R12,RAX
            cmp RAX,R8
            je .L_4146e0
.L_414672:

            mov QWORD PTR [RSP+8],R8
            sub RSP,8
            mov RDX,R15
            push 0
            mov RSI,RBP
            call .L_414900

            cmp RBP,RAX
            pop RDX
            pop RCX
.L_41468d:

            je .L_4146d8

            lea RDI,QWORD PTR [RAX+1]
            cmp RBP,RDI
            je .L_414635

            mov R8,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RAX+R12*1]
            mov RDX,RDI
            mov RCX,R8
            jmp .L_4146b9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4146b0:

            add RDX,1
            cmp RBP,RDX
            je .L_4146d8
.L_4146b9:

            movzx R9D,BYTE PTR [RCX]
            cmp BYTE PTR [RDX],R9B
            jne .L_414672

            add RCX,1
            cmp RDX,RSI
            jne .L_4146b0

            mov RDI,RAX
            jmp .L_414635
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4146d8:

            mov RDI,RBP
            jmp .L_414635
.L_4146e0:

            sub RSP,8
.L_4146e4:

            mov RSI,RBP
            mov RDX,R15
            push 0
            call .L_414900

            pop RSI
            pop RDI
            mov RDI,RAX
            jmp .L_414635
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414700:

            mov EAX,4294967295
            jmp .L_414647
.L_41470a:

            or EAX,4294967295
            ret 
.L_41470e:

            nop
            nop
.L_414710:

            sub RSP,24
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov RSI,RSP
            xor EDX,EDX
            call .L_4145f0

            cmp EAX,-1
            setne AL
            add RSP,24
            ret 
.L_414732:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414740:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_41474e:

            movsxd RCX,DWORD PTR [RDI+8]
            mov R8D,DWORD PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp ECX,R8D
            jl .L_4148b8

            test R8D,R8D
            je .L_414878

            movsxd R12,R8D
            mov R13,QWORD PTR [RDI]
            mov RBX,QWORD PTR [RSI]
            sub RCX,R12
            mov R15,RDI
            cmp RCX,RDX
            cmova RCX,RDX
            lea R14,QWORD PTR [RBX+R12*1]
            add RCX,R12
            lea RBP,QWORD PTR [R13+RCX*1]
            cmp R13,RBP
            je .L_4148a8

            cmp RBX,R14
            je .L_4148a8

            lea RDX,QWORD PTR [R14-1]
            cmp RBX,RDX
            je .L_4148c0

            lea RAX,QWORD PTR [RSP+40]
            mov R11,RBP
            add RBX,1
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],RAX
.L_4147e7:

            mov QWORD PTR [RSP+40],R14
            mov QWORD PTR [RSP+48],R13
            sub RSP,8
.L_4147f5:

            mov QWORD PTR [RSP+64],R11
            push 0
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+16]
            call .L_4149f0

            mov RCX,QWORD PTR [RSP+80]
            pop RAX
            pop RDX
.L_41481c:

            cmp R13,RCX
            je .L_4148b8

            lea R11,QWORD PTR [RCX-1]
            cmp R13,R11
            je .L_4148b8

            mov RDI,RBX
            lea RSI,QWORD PTR [R14-2]
            mov RDX,R11
            sub RDI,R14
            add RDI,RCX
            jmp .L_414855
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414848:

            sub RDX,1
            sub RSI,1
            cmp R13,RDX
            je .L_4148b8
.L_414855:

            movzx EAX,BYTE PTR [RSI]
            cmp BYTE PTR [RDX-1],AL
            jne .L_4147e7

            cmp RDX,RDI
            jne .L_414848
.L_414862:

            sub RCX,R12
            cmp RBP,RCX
            je .L_4148b8

            mov EAX,ECX
            sub EAX,DWORD PTR [R15]
            jmp .L_414882
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414878:

            cmp RCX,RDX
            cmovbe RDX,RCX
            mov RAX,RDX
.L_414882:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4148f7

            add RSP,88
.L_414896:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4148a8:

            mov QWORD PTR [RSP+40],RBP
            mov RCX,RBP
.L_4148b0:

            cmp RCX,R13
            jne .L_414862

            nop
            nop
            nop
.L_4148b8:

            mov EAX,4294967295
            jmp .L_414882
          .byte 0x90
.L_4148c0:

            mov QWORD PTR [RSP+48],R14
            mov QWORD PTR [RSP+56],R13
            lea RDI,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RBP
            lea RCX,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RSP+56]
            sub RSP,8
            push 0
            call .L_4149f0

            mov RCX,QWORD PTR [RSP+56]
            pop RSI
            pop RDI
            jmp .L_4148b0
.L_4148f7:

            call __stack_chk_fail@PLT
.L_4148fc:

            nop
            nop
            nop
            nop
.L_414900:

            mov RCX,RSI
            sub RCX,RDI
            mov RAX,RCX
            sar RAX,2
            test RAX,RAX
            jle .L_4149d1

            movzx R8D,BYTE PTR [RDX]
            cmp BYTE PTR [RDI],R8B
            je .L_4149d6

            cmp BYTE PTR [RDI+1],R8B
            je .L_4149da

            cmp BYTE PTR [RDI+2],R8B
            je .L_4149df

            cmp BYTE PTR [RDI+3],R8B
            lea R9,QWORD PTR [RDI+RAX*4]
            jne .L_41496b

            jmp .L_4149e4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414950:

            cmp BYTE PTR [RDI+4],R8B
            je .L_414992

            cmp BYTE PTR [RCX+1],R8B
            je .L_414998

            cmp BYTE PTR [RCX+2],R8B
            je .L_4149a0

            cmp BYTE PTR [RCX+3],R8B
            je .L_4149a8

            mov RDI,RCX
.L_41496b:

            lea RCX,QWORD PTR [RDI+4]
            cmp RCX,R9
            mov RAX,RCX
            jne .L_414950

            mov RCX,RSI
            sub RCX,R9
.L_41497d:

            cmp RCX,2
            je .L_4149c4

            cmp RCX,3
            je .L_4149b7

            cmp RCX,1
            je .L_4149ad

            mov RAX,RSI
.L_414992:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414998:

            lea RAX,QWORD PTR [RDI+5]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4149a0:

            lea RAX,QWORD PTR [RDI+6]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4149a8:

            lea RAX,QWORD PTR [RDI+7]
            ret 
.L_4149ad:

            movzx EDX,BYTE PTR [RDX]
.L_4149b0:

            cmp DL,BYTE PTR [RAX]
            cmovne RAX,RSI
            ret 
.L_4149b7:

            movzx EDX,BYTE PTR [RDX]
            cmp BYTE PTR [RAX],DL
            je .L_414992

            add RAX,1
            jmp .L_4149c7
.L_4149c4:

            movzx EDX,BYTE PTR [RDX]
.L_4149c7:

            cmp BYTE PTR [RAX],DL
            je .L_414992

            add RAX,1
            jmp .L_4149b0
.L_4149d1:

            mov RAX,RDI
            jmp .L_41497d
.L_4149d6:

            mov RAX,RDI
            ret 
.L_4149da:

            lea RAX,QWORD PTR [RDI+1]
            ret 
.L_4149df:

            lea RAX,QWORD PTR [RDI+2]
            ret 
.L_4149e4:

            lea RAX,QWORD PTR [RDI+3]
            ret 
.L_4149e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4149f0:

            mov R9,QWORD PTR [RSI]
            mov RAX,RDI
            mov RDI,QWORD PTR [RDX]
            mov RDX,R9
            sub RDX,RDI
            mov R11,RDX
            sar R11,2
            test R11,R11
            jle .L_414b22

            push RBX
.L_414a10:

            mov R8,QWORD PTR [RCX]
            movzx EBX,BYTE PTR [R8-1]
            cmp BYTE PTR [R9-1],BL
            je .L_414aca

            lea R10,QWORD PTR [R9-1]
            mov QWORD PTR [RSI],R10
            movzx EBX,BYTE PTR [R8-1]
            cmp BYTE PTR [R9-2],BL
            je .L_414ab8

            lea R10,QWORD PTR [R9-2]
            mov QWORD PTR [RSI],R10
            movzx EBX,BYTE PTR [R9-3]
            cmp BYTE PTR [R8-1],BL
            je .L_414ab8

            lea RBX,QWORD PTR [R9+1]
            shl R11,2
            lea RDX,QWORD PTR [R9-3]
            sub RBX,R11
            jmp .L_414a9f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414a60:

            lea R9,QWORD PTR [RDX-1]
            cmp RDX,RBX
            mov QWORD PTR [RSI],R9
            je .L_414ad0

            movzx R10D,BYTE PTR [RDX-2]
            cmp BYTE PTR [R8-1],R10B
            je .L_414aca

            lea R10,QWORD PTR [RDX-2]
            mov QWORD PTR [RSI],R10
            movzx R9D,BYTE PTR [R8-1]
            cmp BYTE PTR [RDX-3],R9B
            je .L_414ab8

            lea R10,QWORD PTR [RDX-3]
            sub RDX,4
            mov QWORD PTR [RSI],R10
            movzx R9D,BYTE PTR [R8-1]
            cmp BYTE PTR [R11-4],R9B
            je .L_414ab8
.L_414a9f:

            mov QWORD PTR [RSI],RDX
            movzx R9D,BYTE PTR [R8-1]
            mov R11,RDX
            cmp BYTE PTR [RDX-1],R9B
            jne .L_414a60

            mov QWORD PTR [RAX],RDX
            pop RBX
.L_414ab4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414ab8:

            mov QWORD PTR [RAX],R10
            pop RBX
            ret 
.L_414abd:

            mov RDX,QWORD PTR [RCX]
            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            jne .L_414b19
.L_414aca:

            mov QWORD PTR [RAX],R9
            pop RBX
            ret 
          .byte 0x90
.L_414ad0:

            mov RDX,R9
            sub RDX,RDI
            cmp RDX,2
            je .L_414aed

            cmp RDX,3
            je .L_414abd

            cmp RDX,1
            je .L_414b14
.L_414ae8:

            mov QWORD PTR [RAX],RDI
            pop RBX
            ret 
.L_414aed:

            mov RDX,QWORD PTR [RCX]
.L_414af0:

            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_414aca

            sub R9,1
            mov QWORD PTR [RSI],R9
.L_414b01:

            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_414aca

            sub R9,1
            mov QWORD PTR [RSI],R9
            jmp .L_414ae8
.L_414b14:

            mov RDX,QWORD PTR [RCX]
            jmp .L_414b01
.L_414b19:

            sub R9,1
            mov QWORD PTR [RSI],R9
            jmp .L_414af0
.L_414b22:

            cmp RDX,2
            je .L_414b38

            cmp RDX,3
            je .L_414b68

            cmp RDX,1
            je .L_414b63
.L_414b34:

            mov QWORD PTR [RAX],RDI
            ret 
.L_414b38:

            mov RDX,QWORD PTR [RCX]
.L_414b3b:

            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_414b5f

            sub R9,1
            mov QWORD PTR [RSI],R9
.L_414b4c:

            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_414b5f

            sub R9,1
            mov QWORD PTR [RSI],R9
            jmp .L_414b34
.L_414b5f:

            mov QWORD PTR [RAX],R9
            ret 
.L_414b63:

            mov RDX,QWORD PTR [RCX]
            jmp .L_414b4c
.L_414b68:

            mov RDX,QWORD PTR [RCX]
            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_414b5f

            sub R9,1
            mov QWORD PTR [RSI],R9
            jmp .L_414b3b
.L_414b7e:

            nop
            nop
.L_414b80:

            push R15
            push R14
            mov R8,RSI
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDX
            mov ECX,1024
            mov ESI,1024
            mov EBX,1024
            sub RSP,1096
.L_414ba9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1080],RAX
            xor EAX,EAX
            lea RBP,QWORD PTR [RSP+24]
            lea R15,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],RDI
            movdqu XMM0,XMMWORD PTR [RDX]
            mov R9,RBP
            mov RDI,R15
            movups XMMWORD PTR [RSP+24],XMM0
            mov RAX,QWORD PTR [RDX+16]
            mov EDX,1
            mov QWORD PTR [RSP+40],RAX
            call __vsnprintf_chk@PLT

            cmp EAX,1023
            ja .L_414c10

            jmp .L_414cb0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414c00:

            mov RDI,R15
            mov DWORD PTR [RSP+4],EAX
            call _ZdaPv@PLT

            mov EAX,DWORD PTR [RSP+4]
.L_414c10:

            lea EDX,DWORD PTR [RAX+1]
            add EBX,EBX
            test EAX,EAX
            cmovns EBX,EDX
            movsxd R14,EBX
            mov RDI,R14
            call _Znam@PLT

            movdqu XMM0,XMMWORD PTR [R12]
            mov R15,RAX
            mov R9,RBP
            mov R8,R13
            mov RCX,-1
            movups XMMWORD PTR [RBP],XMM0
            mov RAX,QWORD PTR [R12+16]
            mov EDX,1
            mov RSI,R14
            mov RDI,R15
            mov QWORD PTR [RBP+16],RAX
            call __vsnprintf_chk@PLT

            test EAX,EAX
            js .L_414c00

            cmp EBX,EAX
            jle .L_414c00

            mov RDI,QWORD PTR [RSP+8]
            movsxd RDX,EAX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RDX,RAX
            ja .L_414cdf

            mov RSI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RDI,R15
            call _ZdaPv@PLT
.L_414c8b:

            mov RAX,QWORD PTR [RSP+1080]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414cda

            add RSP,1096
.L_414ca5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414cb0:

            mov RCX,QWORD PTR [RSP+8]
            movsxd RDX,EAX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RCX+8]
            cmp RDX,RAX
            ja .L_414cdf

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_414c8b
.L_414cda:

            call __stack_chk_fail@PLT
.L_414cdf:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_414ceb:

            nop
            nop
            nop
            nop
            nop
.L_414cf0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,208
.L_414cfe:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_414d4d

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_414d4d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+240]
            lea RBP,QWORD PTR [RBX+16]
            mov RDX,RSP
            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RBX],RBP
            mov QWORD PTR [RBX+8],0
            mov BYTE PTR [RBX+16],0
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
.L_414d9c:

            call .L_414b80
.L_414da1:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_414dc0

            add RSP,208
.L_414dbb:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_414dc0:

            call __stack_chk_fail@PLT
.L_414dc5:

            mov RDI,QWORD PTR [RBX]
            mov R12,RAX
            cmp RBP,RDI
            je .L_414dd5

            call _ZdlPv@PLT
.L_414dd5:

            mov RDI,R12
.L_414dd8:

            call _Unwind_Resume@PLT
.L_414ddd:

            nop
            nop
            nop
.L_414de0:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_414e36

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_414e36:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RDX,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RDI]
            mov BYTE PTR [RAX],0
            call .L_414b80

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414e9a

            add RSP,216

            ret 
.L_414e9a:

            call __stack_chk_fail@PLT
.L_414e9f:

            nop
.L_414ea0:

            sub RSP,216
.L_414ea7:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_414ef6

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_414ef6:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RDX,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_414b80

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414f4c

            add RSP,216
.L_414f4b:

            ret 
.L_414f4c:

            call __stack_chk_fail@PLT
.L_414f51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414f60:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_414f6e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_414f8c

            test RDX,RDX
            jne .L_415017
.L_414f8c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_414fe0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_415010

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_414fb4:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_415023

            add RSP,16
.L_414fd4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414fe0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_414ff9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_414fb4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415010:

            test RBX,RBX
            je .L_414fb4

            jmp .L_414ff9
.L_415017:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_415023:

            call __stack_chk_fail@PLT
.L_415028:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415030:

            movsxd RSI,ESI
            push R15
            push R14
            push R13
            lea R13,QWORD PTR [RDI+RSI*1]
            push R12
            push RBP
            push RBX
            mov R12,RDX
            mov R14D,ECX
            sub RSP,8
.L_41504b:

            cmp RDI,R13
            jae .L_415206

            xor EBX,EBX
            cmp ECX,1
            mov RBP,RDI
            mov EAX,ECX
            lea R15,QWORD PTR [RIP+.L_435df8]
            jg .L_4150df

            jmp .L_4151f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415070:

            cmp R8B,39
            je .L_4151b8

            cmp R8B,92
            je .L_415198

            cmp R8B,34
            je .L_415178
.L_41508e:

            lea EDX,DWORD PTR [R8-32]
            cmp DL,94
            jbe .L_4151d8

            cmp EAX,3
            jle .L_4151f0

            movsxd RDI,EBX
            mov RCX,R15
            mov RDX,-1
            add RDI,R12
            mov ESI,1
            xor EAX,EAX
            add EBX,4
            call __sprintf_chk@PLT

            nop
            nop
            nop
            nop
            nop
.L_4150c8:

            add RBP,1
            mov EAX,R14D
            sub EAX,EBX
            cmp R13,RBP
            je .L_415120
.L_4150d6:

            cmp EAX,1
            jle .L_4151f0
.L_4150df:

            movzx R8D,BYTE PTR [RBP]
            cmp R8B,13
            je .L_415138

            jg .L_415070

            cmp R8B,9
            je .L_415158

            cmp R8B,10
            jne .L_41508e

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add RBP,1
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],110
            mov EAX,R14D
            sub EAX,EBX
            cmp R13,RBP
            jne .L_4150d6

            nop
            nop
            nop
            nop
            nop
.L_415120:

            test EAX,EAX
            jle .L_4151f0

            movsxd RAX,EBX
            mov BYTE PTR [R12+RAX*1],0
            jmp .L_4151f5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415138:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],114
            jmp .L_4150c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415158:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],116
            jmp .L_4150c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415178:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],34
            jmp .L_4150c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415198:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],92
            jmp .L_4150c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4151b8:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],39
            jmp .L_4150c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4151d8:

            movsxd RAX,EBX
            add EBX,1
            mov BYTE PTR [R12+RAX*1],R8B
            jmp .L_4150c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4151f0:

            mov EBX,4294967295
.L_4151f5:

            add RSP,8
.L_4151f9:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_415206:

            mov EAX,ECX
            xor EBX,EBX
            jmp .L_415120
.L_41520f:

            nop
.L_415210:

            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_415220:

            mov EAX,DWORD PTR [RSI+8]
            lea R13D,DWORD PTR [RAX*4+1]
            movsxd RDI,R13D
            call _Znam@PLT

            mov ESI,DWORD PTR [R12+8]
            mov RDI,QWORD PTR [R12]
            mov ECX,R13D
            mov RDX,RAX
            mov RBP,RAX
            call .L_415030

            lea RDX,QWORD PTR [RBX+16]
            mov RSI,RBP
            mov RDI,RBX
            mov QWORD PTR [RBX],RDX
            movsxd RDX,EAX
            add RDX,RBP
            call .L_414f60

            mov RDI,RBP
            call _ZdaPv@PLT

            add RSP,8
.L_41526e:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_415278:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415280:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_415289:

            movsxd RDX,DWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            mov RBP,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,RBP
            add RDX,RSI
            mov QWORD PTR [RSP],RAX
.L_4152b1:

            call .L_414f60
.L_4152b6:

            mov EAX,DWORD PTR [RSP+8]
            lea ESI,DWORD PTR [RAX-1]
            xor EAX,EAX
.L_4152bf:

            mov EDX,ESI
            shr EDX,31
            mov ECX,EDX
            or CL,AL
            jne .L_4152f6
.L_4152ca:

            mov RDI,QWORD PTR [RSP]
            movsxd RDX,ESI
            add RDI,RDX
            movzx ECX,BYTE PTR [RDI]
            cmp ECX,255
            mov EAX,ECX
            je .L_415340

            mov EDX,ESI
            add EAX,1
            shr EDX,31
            mov BYTE PTR [RDI],AL
            mov EAX,1
            mov ECX,EDX
            or CL,AL
            je .L_4152ca
.L_4152f6:

            lea RDX,QWORD PTR [RBX+16]
            test AL,AL
            mov QWORD PTR [RBX],RDX
            je .L_415370

            mov RAX,QWORD PTR [RSP]
            add RBP,16
            cmp RAX,RBP
            je .L_415360

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RBX+16],RAX
.L_41531a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBX+8],RAX
.L_415323:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+40]
            xor RBX,QWORD PTR FS:[40]
            jne .L_415396

            add RSP,56
.L_41533a:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415340:

            mov RCX,QWORD PTR [RSP+8]
            cmp RDX,RCX
            ja .L_41539b

            mov QWORD PTR [RSP+8],RDX
            sub ESI,1
            mov BYTE PTR [RDI],0
            xor EAX,EAX
            jmp .L_4152bf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415360:

            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41531a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415370:

            lea RDX,QWORD PTR [RIP+.L_4369d8]
            mov RDI,RBX
            mov RSI,RDX
.L_41537d:

            call .L_414f60

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            cmp RDI,RBP
            je .L_415323

            call _ZdlPv@PLT

            jmp .L_415323
.L_415396:

            call __stack_chk_fail@PLT
.L_41539b:

            lea RSI,QWORD PTR [RIP+.L_435dfe]
            lea RDI,QWORD PTR [RIP+.L_435a10]
            xor EAX,EAX
            call _ZSt24__throw_out_of_range_fmtPKcz@PLT
.L_4153b0:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov RBX,RAX
            cmp RDI,RBP
            je .L_4153c5

            call _ZdlPv@PLT
.L_4153c5:

            mov RDI,RBX
.L_4153c8:

            call _Unwind_Resume@PLT
.L_4153cd:

            nop
            nop
            nop
.L_4153d0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_4153de:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_4153fc

            test RDX,RDX
            jne .L_415487
.L_4153fc:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_415450

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_415480

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_415424:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_415493

            add RSP,16
.L_415444:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415450:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_415469:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_415424
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415480:

            test RBX,RBX
            je .L_415424

            jmp .L_415469
.L_415487:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_415493:

            call __stack_chk_fail@PLT
.L_415498:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4154a0:

            mov QWORD PTR [RDI],RSI
            mov QWORD PTR [RDI+8],0
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],0
            mov DWORD PTR [RDI+32],0
            mov BYTE PTR [RDI+40],0
            mov BYTE PTR [RDI+41],0
            mov BYTE PTR [RDI+42],0
            mov QWORD PTR [RDI+48],0
            mov DWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+64],0
            mov DWORD PTR [RDI+72],0
            mov QWORD PTR [RDI+80],0
            mov DWORD PTR [RDI+88],0
            mov QWORD PTR [RDI+96],0
            mov QWORD PTR [RDI+104],0
            ret 
.L_41550b:

            nop
            nop
            nop
            nop
            nop
.L_415510:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+80]
            test RDI,RDI
            je .L_415522

            call _ZdaPv@PLT
.L_415522:

            mov RDI,QWORD PTR [RBX+96]
            test RDI,RDI
            je .L_415530

            call _ZdaPv@PLT
.L_415530:

            mov RDI,QWORD PTR [RBX+64]
            test RDI,RDI
            je .L_415540

            pop RBX
            jmp _ZdaPv@PLT
          .byte 0x90
.L_415540:

            pop RBX
            ret 
.L_415542:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415550:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,520
.L_415564:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+108]
            lea EDI,DWORD PTR [RAX+RAX*1]
            movabs RAX,576460752303423487
            mov DWORD PTR [RBX+108],EDI
            movsxd RDI,EDI
            cmp RDI,RAX
            ja .L_415b16

            shl RDI,4
.L_41559a:

            call _Znam@PLT
.L_41559f:

            movsxd RDX,DWORD PTR [RBX+104]
            mov R12,QWORD PTR [RBX+96]
            mov RDI,RAX
            mov RBP,RAX
            mov RSI,R12
            shl RDX,4
            call memmove@PLT

            mov RDI,R12
            call _ZdaPv@PLT

            mov EAX,DWORD PTR [RBX+108]
            cmp DWORD PTR [RBX+104],EAX
            mov QWORD PTR [RBX+96],RBP
            jge .L_415600

            mov EAX,1
.L_4155d2:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_415b1b

            add RSP,520
.L_4155f0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415600:

            lea RBX,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R12
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41568f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_415694:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+128],R13
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+200],RAX
            mov QWORD PTR [RSP+208],0
            mov BYTE PTR [RSP+216],0
.L_41574e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_415753:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435e12]
            mov EDX,15
.L_415763:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,113
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41579f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435e22]
            mov EDX,19
.L_4157af:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4157b4:

            cmp BYTE PTR [RSP+112],0
            je .L_415830
.L_4157bb:

            mov RDI,QWORD PTR [RSP+200]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],R13
            cmp RDI,RAX
            je .L_4157e6

            call _ZdlPv@PLT
.L_4157e6:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],RBP
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R12
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_4155d2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415830:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_415a88

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_415938

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_4158aa:

            call .L_4153d0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_415a48

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_415ac8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_415ad7

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41590d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_4159d1

            jmp .L_4159d6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415938:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RSP+64]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+8],RCX
            call .L_4153d0
.L_415954:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_415a10

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_415aa0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_415aaf

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_4159b2:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_4159d6
.L_4159d1:

            call _ZdlPv@PLT
.L_4159d6:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_4159e5:

            call write@PLT
.L_4159ea:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_4157bb

            call _ZdlPv@PLT

            jmp .L_4157bb
          .byte 0x90
.L_415a10:

            test RDX,RDX
            je .L_415a30

            cmp RDX,1
            je .L_415aea

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
.L_415a30:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4159b2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415a48:

            test RDX,RDX
            je .L_415a70

            cmp RDX,1
            je .L_415b00

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415a70:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41590d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415a88:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
.L_415a90:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_415a95:

            jmp .L_4159d6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415aa0:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_415aaf:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_4159b2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415ac8:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_415ad7:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41590d
.L_415aea:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_415a30
.L_415b00:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_415a70
.L_415b16:

            call __cxa_throw_bad_array_new_length@PLT
.L_415b1b:

            call __stack_chk_fail@PLT
.L_415b20:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_415b34:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_415b47:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_415b5e

            call _ZdlPv@PLT
.L_415b5e:

            call _ZSt9terminatev@PLT
.L_415b63:

            jmp .L_415b47
.L_415b65:

            mov R13,RAX
.L_415b68:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
            call _Unwind_Resume@PLT
.L_415b81:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],RBP
            mov QWORD PTR [RSP+RAX*1+120],RCX
            jmp .L_415b68
.L_415ba4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415bb0:

            push RBP
            push RBX
            mov EBP,ECX
            mov RBX,RDI
            sub RSP,24
.L_415bbb:

            mov EAX,DWORD PTR [RDI+108]
            cmp DWORD PTR [RDI+104],EAX
            jge .L_415c38
.L_415bc3:

            mov RCX,QWORD PTR [RBX]
            movsxd RAX,ESI
            mov RCX,QWORD PTR [RCX+32]
            mov EAX,DWORD PTR [RCX+RAX*8]
            and EAX,7
            cmp EAX,7
            je .L_415c2c

            test EBP,EBP
            jne .L_415c0e

            mov EAX,DWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX+80]
            lea ECX,DWORD PTR [RAX+1]
            mov RAX,RDX
            sub RAX,QWORD PTR [RBX+8]
            imul ECX,ESI
            add ECX,EAX
            mov EAX,ECX
            shr EAX,5
            lea R8,QWORD PTR [RDI+RAX*4]
            mov EAX,1
            shl EAX,CL
            mov EDI,DWORD PTR [R8]
            test EDI,EAX
            jne .L_415c2c

            or EAX,EDI
            mov DWORD PTR [R8],EAX
.L_415c0e:

            movsxd RAX,DWORD PTR [RBX+104]
            mov RCX,QWORD PTR [RBX+96]
            lea EDI,DWORD PTR [RAX+1]
            shl RAX,4
            add RAX,RCX
            mov DWORD PTR [RBX+104],EDI
            mov DWORD PTR [RAX],ESI
            mov QWORD PTR [RAX+8],RDX
            mov DWORD PTR [RAX+4],EBP
.L_415c2c:

            add RSP,24
.L_415c30:

            pop RBX
            pop RBP
            ret 

            nop
            nop
            nop
            nop
            nop
.L_415c38:

            mov QWORD PTR [RSP+8],RDX
            mov DWORD PTR [RSP+4],ESI
            call .L_415550

            test AL,AL
            mov ESI,DWORD PTR [RSP+4]
            mov RDX,QWORD PTR [RSP+8]
            jne .L_415bc3

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_415c5e:

            nop
            nop
.L_415c60:

            push R15
            push R14
            xor ECX,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,568
.L_415c76:

            mov DWORD PTR [RDI+104],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
            movsxd RAX,DWORD PTR [RDI+16]
            add RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+16],RAX
.L_415c9d:

            call .L_415bb0

            mov BYTE PTR [RSP+15],0
.L_415ca7:

            mov EAX,DWORD PTR [RBX+104]
            test EAX,EAX
            jle .L_415d78
.L_415cb2:

            sub EAX,1
            lea RBP,QWORD PTR [RIP+.L_435e6c]
            mov DWORD PTR [RBX+104],EAX
            cdqe 
            shl RAX,4
            add RAX,QWORD PTR [RBX+96]
            mov ESI,DWORD PTR [RAX]
            mov R15,QWORD PTR [RAX+8]
            mov R13D,DWORD PTR [RAX+4]
.L_415cd3:

            mov RDI,QWORD PTR [RBX]
            movsxd RAX,ESI
            mov RCX,QWORD PTR [RDI+32]
            lea R12,QWORD PTR [RCX+RAX*8]
            mov EDX,DWORD PTR [R12]
            mov EAX,EDX
            and EAX,7
            cmp EAX,6
            ja .L_415f70

            movsxd RAX,DWORD PTR [RBP+RAX*4]
            add RAX,RBP
            jmp RAX
.L_415cfd:

            mov R15,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_415d08:

            cmp BYTE PTR [RBX+42],0
            jne .L_416210
.L_415d12:

            mov ESI,DWORD PTR [RBX+56]
            test ESI,ESI
            je .L_4163b0

            mov RDX,QWORD PTR [RBX+64]
            mov RAX,QWORD PTR [RBX+48]
            movzx R8D,BYTE PTR [RBX+41]
            mov QWORD PTR [RDX+8],R15
            mov RCX,QWORD PTR [RAX]
            test RCX,RCX
            je .L_416370

            test R8B,R8B
            je .L_4163b0

            movsxd RDI,DWORD PTR [RAX+8]
            add RCX,RDI
            cmp R15,RCX
            ja .L_416c80
.L_415d53:

            movsxd RAX,DWORD PTR [RBX+16]
            add RAX,QWORD PTR [RBX+8]
            cmp R15,RAX
            je .L_4163b0

            mov EAX,DWORD PTR [RBX+104]
            mov BYTE PTR [RSP+15],1
            test EAX,EAX
            jg .L_415cb2

            nop
            nop
            nop
            nop
.L_415d78:

            mov RCX,QWORD PTR [RSP+552]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+15]
            jne .L_4171d5

            add RSP,568
.L_415d9b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_415da6:

            mov R15,QWORD PTR [RSP+16]
            xor R13D,R13D
            nop
            nop
.L_415db0:

            mov R14D,DWORD PTR [R12+4]
            lea RDI,QWORD PTR [RBX+24]
            mov RSI,R15
            call .L_42fc70

            not EAX
            test EAX,R14D
            jne .L_415ca7
.L_415dcc:

            mov ESI,DWORD PTR [R12]
            mov EAX,R15D
            mov R8,QWORD PTR [RBX+80]
            sub EAX,DWORD PTR [RBX+8]
            shr ESI,3
            jmp .L_415f37
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415de8:

            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
.L_415df0:

            cmp QWORD PTR [RSP+16],R15
            jbe .L_415ca7

            cmp BYTE PTR [R12+6],0
            movzx ECX,BYTE PTR [R15]
            movzx ESI,BYTE PTR [R12+4]
            movzx EAX,BYTE PTR [R12+5]
            jne .L_416a68
.L_415e17:

            cmp ESI,ECX
            jg .L_415ca7

            cmp ECX,EAX
            jg .L_415ca7

            shr EDX,3
            add R15,1
            mov R8,QWORD PTR [RBX+80]
            mov EAX,R15D
            mov ESI,EDX
            sub EAX,DWORD PTR [RBX+8]
            jmp .L_415f37
.L_415e3f:

            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
            nop
.L_415e48:

            shr EDX,3
            mov EAX,EDX
            mov RSI,RAX
            mov EAX,DWORD PTR [RCX+RAX*8]
            and EAX,7
            cmp EAX,2
            je .L_416340
.L_415e5f:

            mov RDX,QWORD PTR [RSP+16]
            xor ECX,ECX
            mov RDI,RBX
            call .L_415bb0
.L_415e6e:

            jmp .L_415dcc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415e78:

            test R13D,R13D
            lea RAX,QWORD PTR [RIP+.L_435e88]
            lea R9,QWORD PTR [RIP+.L_435edc]
            je .L_4163c0

            cmp R13D,1
            jne .L_416750

            mov ECX,DWORD PTR [RBX+16]
            mov ESI,DWORD PTR [R12+4]
            mov R10,R15
            sub R10,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX+80]
            add ECX,1
            imul ECX,ESI
            add ECX,R10D
            mov EDX,ECX
            shl R13D,CL
            shr EDX,5
            lea RDX,QWORD PTR [R8+RDX*4]
            mov R11D,DWORD PTR [RDX]
            test R13D,R11D
            jne .L_415ca7

            or R13D,R11D
            mov DWORD PTR [RDX],R13D
            mov RCX,QWORD PTR [RDI+32]
            movsxd RDX,ESI
            lea R12,QWORD PTR [RCX+RDX*8]
            mov EDX,DWORD PTR [R12]
            mov R11D,EDX
            and R11D,7
            cmp R11D,6
            ja .L_415f65

            movsxd R11,DWORD PTR [RAX+R11*4]
            add RAX,R11
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415f00:

            test R13D,R13D
            je .L_416448

            cmp R13D,1
            jne .L_4164d8

            movsxd RDX,DWORD PTR [R12+4]
            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RAX+RDX*8],R15
            jmp .L_415ca7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415f28:

            mov R8,QWORD PTR [RBX+80]
.L_415f2c:

            mov EAX,R15D
            sub EAX,DWORD PTR [RBX+8]
.L_415f32:

            shr EDX,3
            mov ESI,EDX
.L_415f37:

            mov ECX,DWORD PTR [RBX+16]
            add ECX,1
            imul ECX,ESI
            add ECX,EAX
            mov EAX,ECX
            shr EAX,5
            lea RDI,QWORD PTR [R8+RAX*4]
            mov EAX,1
            shl EAX,CL
            mov EDX,DWORD PTR [RDI]
            test EDX,EAX
            jne .L_415ca7

            or EAX,EDX
            mov DWORD PTR [RDI],EAX
            jmp .L_415cd3
.L_415f65:

            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415f70:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [R14-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov QWORD PTR [RSP+168],R14
            mov QWORD PTR [RDI],R15
.L_41600d:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_416012:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_4160e3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4160e8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435e12]
            mov EDX,15
.L_4160f8:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,174
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_416134:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435e36]
            mov EDX,19
.L_416144:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [R12]
            lea RDI,QWORD PTR [RBP+8]
            and ESI,7
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435e4a]
            mov EDX,5
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,R13D
            mov RDI,RBX
            call _ZNSolsEi@PLT
.L_41617b:

            cmp BYTE PTR [RSP+160],0
            je .L_416230
.L_416189:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+280],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_4161c6

            call _ZdlPv@PLT
.L_4161c6:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+168],R14
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+RAX*1+168],R15
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RSP+15],0
            jmp .L_415d78
.L_416210:

            movsxd RAX,DWORD PTR [RBX+16]
            add RAX,QWORD PTR [RBX+8]
            cmp R15,RAX
            jne .L_415ca7

            jmp .L_415d12
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416230:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea R12,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_416ec0

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            jbe .L_416a80

            lea R13,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_4162a6:

            call .L_4153d0
.L_4162ab:

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_416ed1

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_416df0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_416dff

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_416310:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R13
            jne .L_416b06

            jmp .L_416b0b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416340:

            mov ESI,DWORD PTR [R12+4]
            mov RDX,R15
            xor ECX,ECX
            mov RDI,RBX
.L_41634d:

            call .L_415bb0

            mov R15,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [R12+4]
            mov R8,QWORD PTR [RBX+80]
            mov EAX,R15D
            sub EAX,DWORD PTR [RBX+8]
            jmp .L_415f37
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416370:

            test ESI,ESI
            jle .L_4163a1
.L_416374:

            add RDX,8
            add RAX,8
            xor ESI,ESI
            nop
            nop
.L_416380:

            mov RDI,QWORD PTR [RDX-8]
            mov RCX,QWORD PTR [RDX]
            add ESI,1
            add RDX,16
            add RAX,16
            sub RCX,RDI
            mov QWORD PTR [RAX-24],RDI
            mov DWORD PTR [RAX-16],ECX
            cmp DWORD PTR [RBX+56],ESI
            jg .L_416380
.L_4163a1:

            test R8B,R8B
            jne .L_415d53

            nop
            nop
            nop
            nop
            nop
            nop
.L_4163b0:

            mov BYTE PTR [RSP+15],1
            jmp .L_415d78
.L_4163ba:

            mov R15,QWORD PTR [RSP+16]
            nop
.L_4163c0:

            mov ECX,1
            mov RDX,R15
            mov RDI,RBX
            call .L_415bb0
.L_4163d0:

            mov ESI,DWORD PTR [R12]
            mov ECX,DWORD PTR [RBX+16]
            mov RDX,R15
            sub RDX,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX+80]
            shr ESI,3
            add ECX,1
            imul ECX,ESI
            mov EAX,EDX
            add ECX,EDX
            mov EDX,ECX
            shr EDX,5
            lea R9,QWORD PTR [R8+RDX*4]
            mov EDX,1
            shl EDX,CL
            mov EDI,DWORD PTR [R9]
            test EDX,EDI
            jne .L_415ca7

            or EDX,EDI
            mov DWORD PTR [R9],EDX
            mov RDX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RDX+32]
            mov EDX,ESI
            lea R12,QWORD PTR [RDI+RDX*8]
            mov EDX,DWORD PTR [R12]
            mov ECX,EDX
            and ECX,7
            cmp ECX,6
            ja .L_415f65

            lea R11,QWORD PTR [RIP+.L_435ea4]
            movsxd RCX,DWORD PTR [R11+RCX*4]
            add RCX,R11
            jmp RCX
.L_41643e:

            mov R15,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
.L_416448:

            lea R14,QWORD PTR [RIP+.L_435ec0]
.L_41644f:

            movsxd RAX,DWORD PTR [R12+4]
            test EAX,EAX
            js .L_416461

            cmp DWORD PTR [RBX+72],EAX
            jg .L_416c8d
.L_416461:

            mov R9D,DWORD PTR [R12]
            mov ECX,DWORD PTR [RBX+16]
            mov RDX,R15
            sub RDX,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX+80]
            shr R9D,3
            add ECX,1
            imul ECX,R9D
            mov ESI,R9D
            mov EAX,EDX
            add ECX,EDX
            mov EDX,ECX
            shr EDX,5
            lea R10,QWORD PTR [R8+RDX*4]
            mov EDX,1
            shl EDX,CL
            mov EDI,DWORD PTR [R10]
            test EDI,EDX
            jne .L_415ca7

            or EDX,EDI
            mov RDI,QWORD PTR [RBX]
            xor R13D,R13D
            mov DWORD PTR [R10],EDX
            mov EDX,R9D
            mov RCX,QWORD PTR [RDI+32]
            lea R12,QWORD PTR [RCX+RDX*8]
            mov EDX,DWORD PTR [R12]
            mov R10D,EDX
            and R10D,7
            cmp R10D,6
            ja .L_415f70

            movsxd R10,DWORD PTR [R14+R10*4]
            add R10,R14
            jmp R10

            nop
            nop
            nop
.L_4164d8:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [R14-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov QWORD PTR [RSP+168],R14
            mov QWORD PTR [RDI],R15
.L_416575:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41657a:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_41664b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_416650:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435e12]
            mov EDX,15
.L_416660:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,242
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41669c:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435e50]
            mov EDX,25
.L_4166ac:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,R13D
            call _ZNSolsEi@PLT
.L_4166bd:

            cmp BYTE PTR [RSP+160],0
            je .L_416b48
.L_4166cb:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+280],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_416708

            call _ZdlPv@PLT
.L_416708:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+168],R14
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+RAX*1+168],R15
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_415ca7

            nop
            nop
            nop
.L_416750:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [R14-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov QWORD PTR [RSP+168],R14
            mov QWORD PTR [RDI],R15
.L_4167ed:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4167f2:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_4168c3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4168c8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435e12]
            mov EDX,15
.L_4168d8:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,197
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_416914:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435e50]
            mov EDX,25
.L_416924:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,R13D
            call _ZNSolsEi@PLT
.L_416935:

            cmp BYTE PTR [RSP+160],0
            jne .L_4166cb

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea R12,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_416f39

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            ja .L_416cb4

            lea R13,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+96],RAX
.L_4169b0:

            call .L_4153d0
.L_4169b5:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_416fc3

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_4170ba

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_4170c9

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_416a0b:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R13
            je .L_416a2a
.L_416a25:

            call _ZdlPv@PLT
.L_416a2a:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_416a39:

            call write@PLT
.L_416a3e:

            mov RDI,QWORD PTR [RSP+64]
            add R12,16
            mov BYTE PTR [RSP+160],1
            cmp RDI,R12
            je .L_4166cb

            call _ZdlPv@PLT

            jmp .L_4166cb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416a68:

            lea EDI,DWORD PTR [RCX-65]
            cmp EDI,25
            ja .L_415e17

            add ECX,32
            jmp .L_415e17
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416a80:

            lea R13,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+96],RAX
.L_416a91:

            call .L_4153d0
.L_416a96:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_416f08

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_416e10

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_416e1f

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_416aec:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R13
            je .L_416b0b
.L_416b06:

            call _ZdlPv@PLT
.L_416b0b:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_416b1a:

            call write@PLT
.L_416b1f:

            mov RDI,QWORD PTR [RSP+64]
            add R12,16
            mov BYTE PTR [RSP+160],1
            cmp RDI,R12
            je .L_416189

            call _ZdlPv@PLT

            jmp .L_416189
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416b48:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea R12,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_416f4a

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            jbe .L_416d61

            lea R13,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_416bbe:

            call .L_4153d0
.L_416bc3:

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_416ff4

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_41707d

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41708c

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_416c28:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R13
            je .L_416c4d
.L_416c48:

            call _ZdlPv@PLT
.L_416c4d:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_416c5c:

            call write@PLT
.L_416c61:

            jmp .L_416a3e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c70:

            xor R13D,R13D
            jmp .L_415db0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c80:

            test ESI,ESI
            jg .L_416374

            jmp .L_415d53
.L_416c8d:

            mov RDX,QWORD PTR [RBX+64]
            mov ECX,1
            mov RDI,RBX
            mov RDX,QWORD PTR [RDX+RAX*8]
.L_416c9d:

            call .L_415bb0
.L_416ca2:

            movsxd RDX,DWORD PTR [R12+4]
            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RAX+RDX*8],R15
            jmp .L_416461
.L_416cb4:

            lea R13,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_416cce:

            call .L_4153d0
.L_416cd3:

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_416f5b

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_41705d

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41706c

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_416d38:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R13
            jne .L_416a25

            jmp .L_416a2a
.L_416d61:

            lea R13,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+96],RAX
.L_416d72:

            call .L_4153d0
.L_416d77:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_416f92

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_41709d

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_4170ac

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_416dcd:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R13
            jne .L_416c48

            jmp .L_416c4d
.L_416df0:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_416dff:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_416310
.L_416e10:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_416e1f:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_416aec
.L_416e2d:

            xor R13D,R13D
            jmp .L_415f32
.L_416e35:

            mov ESI,R9D
            jmp .L_41644f
.L_416e3d:

            shr EDX,3
            mov EAX,EDX
            mov EAX,DWORD PTR [RDI+RAX*8]
            and EAX,7
            cmp EAX,2
            je .L_4170d7

            mov ESI,EDX
            xor R13D,R13D
            jmp .L_415e5f
.L_416e5b:

            mov EAX,DWORD PTR [RBX+16]
            shr EDX,3
            mov ESI,EDX
            lea ECX,DWORD PTR [RAX+1]
            imul ECX,EDX
            add ECX,R10D
            mov EAX,ECX
            shr EAX,5
            lea RDX,QWORD PTR [R8+RAX*4]
            mov EAX,1
            shl EAX,CL
            mov R10D,DWORD PTR [RDX]
            test EAX,R10D
            jne .L_415ca7

            or EAX,R10D
            mov DWORD PTR [RDX],EAX
            mov RCX,QWORD PTR [RDI+32]
            movsxd RAX,ESI
            lea R12,QWORD PTR [RCX+RAX*8]
            mov EDX,DWORD PTR [R12]
            mov EAX,EDX
            and EAX,7
            cmp EAX,6
            ja .L_415f65

            movsxd RAX,DWORD PTR [R9+RAX*4]
            add R9,RAX
            jmp R9
.L_416eb4:

            xor R13D,R13D
            jmp .L_415f2c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416ec0:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_416ec7:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_416ecc:

            jmp .L_416b0b
.L_416ed1:

            test RDX,RDX
            je .L_416ef2

            cmp RDX,1
            je .L_417041

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_416ef2:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_416310
.L_416f08:

            test RDX,RDX
            je .L_416f26

            cmp RDX,1
            je .L_41702b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_416f26:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_416aec
.L_416f39:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_416f40:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_416f45:

            jmp .L_416a2a
.L_416f4a:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_416f51:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_416f56:

            jmp .L_416c4d
.L_416f5b:

            test RDX,RDX
            je .L_416f7c

            cmp RDX,1
            je .L_4171a3

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_416f7c:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_416d38
.L_416f92:

            test RDX,RDX
            je .L_416fb0

            cmp RDX,1
            je .L_4171bf

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_416fb0:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_416dcd
.L_416fc3:

            test RDX,RDX
            je .L_416fe1

            cmp RDX,1
            je .L_417171

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_416fe1:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_416a0b
.L_416ff4:

            test RDX,RDX
            je .L_417015

            cmp RDX,1
            je .L_417187

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_417015:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_416c28
.L_41702b:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_416f26
.L_417041:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_416ef2
.L_41705d:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41706c:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_416d38
.L_41707d:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41708c:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_416c28
.L_41709d:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_4170ac:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_416dcd
.L_4170ba:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_4170c9:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_416a0b
.L_4170d7:

            mov ESI,DWORD PTR [R12+4]
            xor ECX,ECX
            mov RDX,R15
            mov RDI,RBX
.L_4170e4:

            call .L_415bb0

            mov EAX,DWORD PTR [RBX+16]
            mov ESI,DWORD PTR [R12+4]
            mov R8,QWORD PTR [RBX+80]
            lea ECX,DWORD PTR [RAX+1]
            mov RAX,QWORD PTR [RSP+16]
            sub RAX,QWORD PTR [RBX+8]
            imul ECX,ESI
            add ECX,EAX
            mov EAX,ECX
            shr EAX,5
            lea RDX,QWORD PTR [R8+RAX*4]
            mov EAX,1
            shl EAX,CL
            mov EDI,DWORD PTR [RDX]
            test EAX,EDI
            jne .L_415ca7

            or EAX,EDI
            xor R13D,R13D
            mov DWORD PTR [RDX],EAX
            mov RAX,QWORD PTR [RBX]
            mov RCX,QWORD PTR [RAX+32]
            movsxd RAX,ESI
            lea R12,QWORD PTR [RCX+RAX*8]
            mov EDX,DWORD PTR [R12]
            mov EAX,EDX
            and EAX,7
            cmp EAX,6
            ja .L_415f70

            lea RDI,QWORD PTR [RIP+.L_435ef8]
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_417157:

            mov R15,QWORD PTR [RSP+16]
            xor R13D,R13D
            jmp .L_415e48
.L_417164:

            mov R15,QWORD PTR [RSP+16]
            xor R13D,R13D
            jmp .L_415f2c
.L_417171:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_416fe1
.L_417187:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_417015
.L_4171a3:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_416f7c
.L_4171bf:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_416fb0
.L_4171d5:

            call __stack_chk_fail@PLT
.L_4171da:

            mov RBX,RAX
.L_4171dd:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4171fb:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+168],R14
            mov QWORD PTR [RSP+RAX*1+168],R15
            jmp .L_4171dd
.L_41721d:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_417230:

            mov RDI,QWORD PTR [RSP+64]
            add R12,16
            cmp RDI,R12
            je .L_417243

            call _ZdlPv@PLT
.L_417243:

            call _ZSt9terminatev@PLT
.L_417248:

            jmp .L_417230
.L_41724a:

            jmp .L_417230
.L_41724c:

            jmp .L_417230
.L_41724e:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_417262:

            jmp .L_41721d
.L_417264:

            jmp .L_4171da
.L_417269:

            jmp .L_41724e
.L_41726b:

            jmp .L_417230
.L_41726d:

            jmp .L_417230
.L_41726f:

            jmp .L_4171da
.L_417274:

            jmp .L_4171fb
.L_417276:

            jmp .L_41724e
.L_417278:

            jmp .L_41721d
.L_41727a:

            jmp .L_4171fb
.L_41727f:

            nop
.L_417280:

            push R12
            push RBP
            mov R11D,R8D
            push RBX
.L_417287:

            mov R10,QWORD PTR [RSI]
            mov R12D,DWORD PTR [RSP+32]
            mov QWORD PTR [RDI+8],R10
            mov R10D,DWORD PTR [RSI+8]
            mov DWORD PTR [RDI+16],R10D
            mov R10,QWORD PTR [RDX]
            mov QWORD PTR [RDI+24],R10
            mov EDX,DWORD PTR [RDX+8]
            test R10,R10
            mov DWORD PTR [RDI+32],EDX
            je .L_417450
.L_4172b1:

            mov RDX,QWORD PTR [RDI]
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_4172d0

            mov RBX,QWORD PTR [RSI]
            cmp QWORD PTR [RDI+24],RBX
            je .L_4172d0
.L_4172c4:

            xor EAX,EAX
.L_4172c6:

            pop RBX
.L_4172c7:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4172d0:

            cmp BYTE PTR [RDX+1],0
            jne .L_417430
.L_4172da:

            or EAX,ECX
            test R8B,R8B
            mov BYTE PTR [RDI+40],AL
            jne .L_4172e9

            movzx R11D,BYTE PTR [RDX+1]
.L_4172e9:

            mov BYTE PTR [RDI+41],R11B
            movzx EAX,BYTE PTR [RDX+1]
            test R12D,R12D
            mov QWORD PTR [RDI+48],R9
            mov DWORD PTR [RDI+56],R12D
            mov BYTE PTR [RDI+42],AL
            jle .L_417323

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_417308:

            mov QWORD PTR [R9],0
            mov DWORD PTR [R9+8],0
            add EAX,1
            add R9,16
            cmp DWORD PTR [RDI+56],EAX
            jg .L_417308
.L_417323:

            mov EAX,DWORD PTR [RSI+8]
            movsxd RDX,DWORD PTR [RDX+12]
            mov RBP,RSI
            mov RBX,RDI
            add EAX,1
            cdqe 
            imul RAX,RDX
            lea RDX,QWORD PTR [RAX+62]
            add RAX,31
            cmovs RAX,RDX
            movabs RDX,2305843009213693950
            sar RAX,5
            mov DWORD PTR [RDI+88],EAX
            cdqe 
            cmp RAX,RDX
            ja .L_4174a1

            lea RDI,QWORD PTR [RAX*4]
            add R12D,R12D
            call _Znam@PLT

            movsxd RDX,DWORD PTR [RBX+88]
            xor ESI,ESI
            mov QWORD PTR [RBX+80],RAX
            mov RDI,RAX
            shl RDX,2
            call memset@PLT

            cmp R12D,1
            mov DWORD PTR [RBX+72],R12D
            jle .L_417468

            movsxd R12,R12D
            lea RDI,QWORD PTR [R12*8]
.L_4173a0:

            call _Znam@PLT

            movsxd RDX,DWORD PTR [RBX+72]
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RBX+64],RAX
            shl RDX,3
            call memset@PLT

            mov DWORD PTR [RBX+108],256
            mov EDI,4096
            call _Znam@PLT

            cmp BYTE PTR [RBX+40],0
            mov QWORD PTR [RBX+96],RAX
            jne .L_417480

            movsxd RAX,DWORD PTR [RBP+8]
            mov R12,QWORD PTR [RBP]
            add RAX,R12
            jb .L_4172c4

            nop
            nop
            nop
            nop
            nop
.L_4173f0:

            mov RAX,QWORD PTR [RBX+64]
            mov RDX,R12
            mov RDI,RBX
            mov QWORD PTR [RAX],R12
            mov RAX,QWORD PTR [RBX]
            mov ESI,DWORD PTR [RAX+4]
            call .L_415c60

            test AL,AL
            jne .L_4172c6

            movsxd RAX,DWORD PTR [RBP+8]
            add R12,1
            add RAX,QWORD PTR [RBP]
            cmp R12,RAX
            jbe .L_4173f0

            jmp .L_4172c4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417430:

            movsxd RBX,DWORD PTR [RDI+32]
            movsxd R10,DWORD PTR [RSI+8]
            add RBX,QWORD PTR [RDI+24]
            add R10,QWORD PTR [RSI]
            cmp RBX,R10
            jne .L_4172c4

            jmp .L_4172da
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417450:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDI+24],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RDI+32],EAX
            jmp .L_4172b1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417468:

            mov DWORD PTR [RBX+72],2
            mov EDI,16
            jmp .L_4173a0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417480:

            mov RDX,QWORD PTR [RBP]
            mov RAX,QWORD PTR [RBX+64]
            mov RDI,RBX
            mov QWORD PTR [RAX],RDX
            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RBP]
            pop RBX
.L_417496:

            pop RBP
            pop R12
            mov ESI,DWORD PTR [RAX+4]
            jmp .L_415c60
.L_4174a1:

            call __cxa_throw_bad_array_new_length@PLT
.L_4174a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4174b0:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R14,RSI
            push RBX
            mov R13,R9
.L_4174c3:

            mov EBX,R8D
            sub RSP,152
            mov QWORD PTR [RBP-192],0
            mov EAX,DWORD PTR [RBP+16]
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RSI
            xor ESI,ESI
            cmp R8D,2
            mov DWORD PTR [RBP-184],0
            je .L_417608

            cmp ECX,1
            sete CL
            movzx ECX,CL
.L_417507:

            xor R8D,R8D
            test EBX,EBX
            lea R12,QWORD PTR [RBP-176]
            setne R8B
            sub RSP,8
            mov QWORD PTR [RBP-176],RDI
            push RAX
            mov R9,R13
            mov RSI,R14
            mov RDI,R12
            mov QWORD PTR [RBP-168],0
            mov DWORD PTR [RBP-160],0
            mov QWORD PTR [RBP-152],0
            mov DWORD PTR [RBP-144],0
            mov BYTE PTR [RBP-136],0
            mov BYTE PTR [RBP-135],0
            mov BYTE PTR [RBP-134],0
            mov QWORD PTR [RBP-128],0
            mov DWORD PTR [RBP-120],0
            mov QWORD PTR [RBP-112],0
            mov DWORD PTR [RBP-104],0
            mov QWORD PTR [RBP-96],0
            mov DWORD PTR [RBP-88],0
            mov QWORD PTR [RBP-80],0
            mov QWORD PTR [RBP-72],0
.L_4175a8:

            call .L_417280
.L_4175ad:

            test AL,AL
            mov R15D,EAX
            pop RDX
            pop RCX
            je .L_4175bb

            cmp EBX,2
            je .L_4175e8
.L_4175bb:

            mov RDI,R12
            call .L_415510

            mov RSI,QWORD PTR [RBP-56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_417626

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4175e8:

            movsxd RDX,DWORD PTR [R14+8]
            movsxd RAX,DWORD PTR [R13+8]
            add RAX,QWORD PTR [R13]
            add RDX,QWORD PTR [R14]
            cmp RDX,RAX
            sete AL
            mov R15D,EAX
            jmp .L_4175bb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417608:

            test EAX,EAX
            mov ECX,1
            jg .L_417507

            mov EAX,1
            lea R13,QWORD PTR [RBP-192]
            jmp .L_417507
.L_417626:

            call __stack_chk_fail@PLT
.L_41762b:

            mov RBX,RAX
            mov RDI,R12
            call .L_415510

            mov RDI,RBX
.L_417639:

            call _Unwind_Resume@PLT
.L_41763e:

            nop
            nop
.L_417640:

            mov BYTE PTR [RDI+32],1
            xor EAX,EAX
            ret 
.L_417647:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417650:

            cmp BYTE PTR [RDI+32],0
            je .L_417659

            mov BYTE PTR [RCX],1
.L_417659:

            xor EAX,EAX
            ret 
.L_41765c:

            nop
            nop
            nop
            nop
.L_417660:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_41766e:

            mov RBP,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RBP,RBP
            sete DL
            cmp ESI,3
            setg AL
            or DL,AL
            jne .L_4176d8

            movzx EAX,BYTE PTR [RBP]
            mov R12,RDI
            cmp AL,11
            je .L_4176e0

            cmp AL,18
            je .L_417810

            cmp AL,5
            mov EBX,EDX
            je .L_417740

            nop
            nop
.L_4176b0:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_41785d

            add RSP,40
.L_4176ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4176d8:

            xor EBX,EBX
            jmp .L_4176b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4176e0:

            cmp WORD PTR [RBP+6],1
            mov RDI,QWORD PTR [RBP+8]
            jbe .L_4176ee

            mov RDI,QWORD PTR [RDI]
.L_4176ee:

            mov DWORD PTR [RSP+8],ESI
            call .L_40fa90

            mov ESI,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            add ESI,1
            call .L_417660

            test AL,AL
            mov EBX,EAX
            je .L_4177f8

            movzx ESI,WORD PTR [RBP+2]
            mov RDI,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RBP+24]
            call .L_40c840

            mov RDI,RBP
            mov QWORD PTR [R12],RAX
            call .L_40f010

            jmp .L_4176b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417740:

            movzx EAX,WORD PTR [RBP+6]
            test AX,AX
            je .L_4176b0

            cmp AX,1
            mov RDI,QWORD PTR [RBP+8]
            jbe .L_41775a

            mov RDI,QWORD PTR [RDI]
.L_41775a:

            mov DWORD PTR [RSP+8],ESI
            call .L_40fa90

            mov ESI,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            add ESI,1
            call .L_417660

            test AL,AL
            mov EBX,EAX
            je .L_4177f8

            movzx EDI,WORD PTR [RBP+6]
            shl RDI,3
            call _Znam@PLT

            movzx ESI,WORD PTR [RBP+6]
            mov R14,RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [R14],RAX
            cmp ESI,1
            mov EAX,ESI
            jle .L_417838

            lea RCX,QWORD PTR [RBP+8]
            mov R13D,8
            mov R15D,1
            mov QWORD PTR [RSP+8],RCX
            jmp .L_4177e4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4177c0:

            mov RAX,QWORD PTR [RBP+8]
.L_4177c4:

            mov RDI,QWORD PTR [RAX+R13*1]
            add R15D,1
            call .L_40fa90

            movzx ESI,WORD PTR [RBP+6]
            mov QWORD PTR [R14+R13*1],RAX
            add R13,8
            cmp ESI,R15D
            mov EAX,ESI
            jle .L_417838
.L_4177e4:

            cmp AX,1
            ja .L_4177c0

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4177c4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4177f8:

            mov RDI,QWORD PTR [RSP+16]
            call .L_40f010

            jmp .L_4176b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417810:

            movzx EDX,WORD PTR [RBP+2]
            xor ESI,ESI
            xor EDI,EDI
            mov EBX,1
            call .L_40c960

            mov RDI,RBP
            mov QWORD PTR [R12],RAX
            call .L_40f010

            jmp .L_4176b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417838:

            movzx EDX,WORD PTR [RBP+2]
            mov RDI,R14
            call .L_40d6c0

            mov RDI,R14
            mov QWORD PTR [R12],RAX
            call _ZdaPv@PLT

            mov RDI,RBP
            call .L_40f010

            jmp .L_4176b0
.L_41785d:

            call __stack_chk_fail@PLT
.L_417862:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417870:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_41787e:

            mov RBP,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RBP,RBP
            sete DL
            cmp ESI,3
            setg AL
            or DL,AL
            jne .L_4178e8

            movzx EAX,BYTE PTR [RBP]
            mov R12,RDI
            cmp AL,11
            je .L_4178f0

            cmp AL,19
            je .L_417a20

            cmp AL,5
            mov EBX,EDX
            je .L_417950

            nop
            nop
.L_4178c0:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_417a6d

            add RSP,40
.L_4178da:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4178e8:

            xor EBX,EBX
            jmp .L_4178c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4178f0:

            cmp WORD PTR [RBP+6],1
            mov RDI,QWORD PTR [RBP+8]
            jbe .L_4178fe

            mov RDI,QWORD PTR [RDI]
.L_4178fe:

            mov DWORD PTR [RSP+8],ESI
            call .L_40fa90

            mov ESI,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            add ESI,1
            call .L_417870

            test AL,AL
            mov EBX,EAX
            je .L_417a10

            movzx ESI,WORD PTR [RBP+2]
            mov RDI,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RBP+24]
            call .L_40c840

            mov RDI,RBP
            mov QWORD PTR [R12],RAX
            call .L_40f010

            jmp .L_4178c0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417950:

            movzx EAX,WORD PTR [RBP+6]
            test AX,AX
            je .L_4178c0

            cmp AX,1
            lea RDX,QWORD PTR [RBP+8]
            jbe .L_41796b

            mov RDX,QWORD PTR [RBP+8]
.L_41796b:

            mov RDI,QWORD PTR [RDX+RAX*8-8]
            mov DWORD PTR [RSP+8],ESI
            call .L_40fa90

            mov ESI,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            add ESI,1
            call .L_417870

            test AL,AL
            mov EBX,EAX
            je .L_417a10

            movzx EDI,WORD PTR [RBP+6]
            shl RDI,3
            call _Znam@PLT

            movzx EDX,WORD PTR [RBP+6]
            mov RCX,QWORD PTR [RSP+16]
            mov R14,RAX
            movzx ESI,DX
            mov RAX,RDX
            mov QWORD PTR [R14+RDX*8-8],RCX
            cmp ESI,1
            jle .L_417a48

            lea RCX,QWORD PTR [RBP+8]
            xor R13D,R13D
            xor R15D,R15D
            mov QWORD PTR [RSP+8],RCX
            jmp .L_4179ff
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4179d8:

            mov RAX,QWORD PTR [RBP+8]
.L_4179dc:

            mov RDI,QWORD PTR [RAX+R13*1]
            add R15D,1
            call .L_40fa90

            movzx ESI,WORD PTR [RBP+6]
            mov QWORD PTR [R14+R13*1],RAX
            add R13,8
            lea ECX,DWORD PTR [RSI-1]
            mov EAX,ESI
            cmp ECX,R15D
            jle .L_417a48
.L_4179ff:

            cmp AX,1
            ja .L_4179d8

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4179dc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417a10:

            mov RDI,QWORD PTR [RSP+16]
            call .L_40f010

            jmp .L_4178c0
          .byte 0x90
.L_417a20:

            movzx EDX,WORD PTR [RBP+2]
            xor ESI,ESI
            xor EDI,EDI
            mov EBX,1
            call .L_40c960

            mov RDI,RBP
            mov QWORD PTR [R12],RAX
            call .L_40f010

            jmp .L_4178c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417a48:

            movzx EDX,WORD PTR [RBP+2]
            mov RDI,R14
            call .L_40d6c0

            mov RDI,R14
            mov QWORD PTR [R12],RAX
            call _ZdaPv@PLT

            mov RDI,RBP
            call .L_40f010

            jmp .L_4178c0
.L_417a6d:

            call __stack_chk_fail@PLT
.L_417a72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417a80:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_417a8e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_417aac

            test RDX,RDX
            jne .L_417b37
.L_417aac:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_417b00

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_417b30

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_417ad4:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_417b43

            add RSP,16
.L_417af4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417b00:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_417b19:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_417ad4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417b30:

            test RBX,RBX
            je .L_417ad4

            jmp .L_417b19
.L_417b37:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_417b43:

            call __stack_chk_fail@PLT
.L_417b48:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417b50:

            mov EAX,EDI
            ret 
.L_417b53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417b60:

            mov EAX,ESI
            shr EAX,1
            and ESI,1
            lea RAX,QWORD PTR [RDI+RAX*8]
            jne .L_417b78

            mov EAX,DWORD PTR [RAX]
            shr EAX,3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417b78:

            mov EAX,DWORD PTR [RAX+4]
            ret 
.L_417b7c:

            nop
            nop
            nop
            nop
.L_417b80:

            test ESI,ESI
            je .L_417bba

            lea R8D,DWORD PTR [RDX*8]
            jmp .L_417b9a
          .byte 0x66
          .byte 0x90
.L_417b90:

            mov ESI,DWORD PTR [RCX+4]
            mov DWORD PTR [RCX+4],EDX
            test ESI,ESI
            je .L_417bba
.L_417b9a:

            mov EAX,ESI
            shr EAX,1
            and ESI,1
            lea RCX,QWORD PTR [RDI+RAX*8]
            jne .L_417b90

            mov EAX,DWORD PTR [RCX]
            mov ESI,EAX
            and EAX,7
            shr ESI,3
            or EAX,R8D
            test ESI,ESI
            mov DWORD PTR [RCX],EAX
            jne .L_417b9a
.L_417bba:

            ret 
.L_417bbc:

            nop
            nop
            nop
            nop
.L_417bc0:

            test ESI,ESI
            mov ECX,ESI
            je .L_417c00

            test EDX,EDX
            jne .L_417bd8

            mov EAX,ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417bd0:

            mov ECX,DWORD PTR [R8+4]
            test ECX,ECX
            je .L_417bf3
.L_417bd8:

            mov R8D,ECX
            mov EAX,ECX
            shr R8D,1
            and EAX,1
            lea R8,QWORD PTR [RDI+R8*8]
            jne .L_417bd0

            mov ECX,DWORD PTR [R8]
            shr ECX,3
            test ECX,ECX
            jne .L_417bd8
.L_417bf3:

            test EAX,EAX
            je .L_417c08

            mov DWORD PTR [R8+4],EDX
            mov EAX,ESI
            ret 
          .byte 0x66
          .byte 0x90
.L_417c00:

            mov EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417c08:

            mov ECX,DWORD PTR [R8]
            lea EAX,DWORD PTR [RDX*8]
            and ECX,7
            or EAX,ECX
            mov DWORD PTR [R8],EAX
            mov EAX,ESI
            ret 
.L_417c1d:

            nop
            nop
            nop
.L_417c20:

            cmp BYTE PTR [RDI+32],0
            jne .L_417d50

            mov EAX,DWORD PTR [RDI+56]
            lea ECX,DWORD PTR [RAX+RSI*1]
            cmp ECX,DWORD PTR [RDI+44]
            jg .L_417d50

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
.L_417c4c:

            mov EDX,DWORD PTR [RDI+60]
            cmp ECX,EDX
            jle .L_417d17

            test EDX,EDX
            jne .L_417c70

            cmp ECX,8
            mov DWORD PTR [RDI+60],8
            mov EDX,8
            jle .L_417d30
.L_417c70:

            add EDX,EDX
            cmp ECX,EDX
            jg .L_417c70

            mov DWORD PTR [RBX+60],EDX
            movabs RAX,1152921504606846975
            movsxd RDX,EDX
            cmp RDX,RAX
            ja .L_417d5a

            lea R12,QWORD PTR [RDX-1]
            lea RDI,QWORD PTR [RDX*8]
            call _Znam@PLT

            cmp R12,-1
            mov R13,RAX
            je .L_417cce
.L_417ca9:

            lea RDX,QWORD PTR [R13+R12*8+8]
            mov RAX,R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417cb8:

            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],0
            add RAX,8
            cmp RAX,RDX
            jne .L_417cb8
.L_417cce:

            movsxd R12,DWORD PTR [RBX+56]
            mov R14,QWORD PTR [RBX+48]
            mov RDI,R13
            mov RSI,R14
            mov R15,R12
            shl R12,3
            mov RDX,R12
            call memmove@PLT

            mov EDX,DWORD PTR [RBX+60]
            lea RDI,QWORD PTR [R13+R12*1]
            xor ESI,ESI
            sub EDX,R15D
            movsxd RDX,EDX
            shl RDX,3
            call memset@PLT

            mov RDI,R14
            call _ZdaPv@PLT

            mov EAX,DWORD PTR [RBX+56]
            mov QWORD PTR [RBX+48],R13
            lea ECX,DWORD PTR [RBP+RAX*1]
.L_417d17:

            mov DWORD PTR [RBX+56],ECX
            add RSP,8
.L_417d1e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417d30:

            mov EDI,64
            mov R12D,7
            call _Znam@PLT

            mov R13,RAX
            jmp .L_417ca9
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417d50:

            mov BYTE PTR [RDI+32],1
            mov EAX,4294967295
            ret 
.L_417d5a:

            call __cxa_throw_bad_array_new_length@PLT
.L_417d5f:

            nop
.L_417d60:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov ESI,1
            mov RBX,RDI
            call .L_417c20

            test EAX,EAX
            js .L_417da0

            mov EBP,EAX
            movsxd RDX,EAX
            mov RAX,QWORD PTR [RBX+48]
            mov ESI,DWORD PTR [RBX+120]
            lea RDI,QWORD PTR [RAX+RDX*8]
            mov EDX,R12D
            call .L_42ef20

            mov DWORD PTR [RBX+120],EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417da0:

            mov DWORD PTR [RBX+120],0
            pop RBX
            pop RBP
            pop R12
            ret 
.L_417dac:

            nop
            nop
            nop
            nop
.L_417db0:

            push R12
            push RBP
            push RBX
.L_417db4:

            movsxd RBX,DWORD PTR [RDI+56]
            cmp EBX,DWORD PTR [RDI+60]
            jge .L_417e33

            movabs RAX,1152921504606846975
            mov RBP,RDI
            cmp RBX,RAX
            ja .L_417e38

            lea RDI,QWORD PTR [RBX*8]
            call _Znam@PLT

            xor EDX,EDX
            test RBX,RBX
            mov R12,RAX
            je .L_417e0a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417df0:

            add RDX,1
            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],0
            add RAX,8
            cmp RDX,RBX
            jne .L_417df0
.L_417e0a:

            movsxd RDX,DWORD PTR [RBP+56]
            mov RBX,QWORD PTR [RBP+48]
            mov RDI,R12
            mov RSI,RBX
            shl RDX,3
            call memmove@PLT

            mov RDI,RBX
            call _ZdaPv@PLT

            mov EAX,DWORD PTR [RBP+56]
            mov QWORD PTR [RBP+48],R12
            mov DWORD PTR [RBP+60],EAX
.L_417e33:

            pop RBX
.L_417e34:

            pop RBP
            pop R12
            ret 
.L_417e38:

            call __cxa_throw_bad_array_new_length@PLT
.L_417e3d:

            nop
            nop
            nop
.L_417e40:

            xor EAX,EAX
            ret 
.L_417e43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417e50:

            test ESI,ESI
            je .L_417e58

            test EDX,EDX
            jne .L_417e60
.L_417e58:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417e60:

            push R13
            push R12
            mov EAX,ESI
            push RBP
            push RBX
.L_417e68:

            mov RBP,RSI
            mov R9,QWORD PTR [RDI+48]
            mov RBX,RDX
            shr RBP,32
            shr RBX,32
            mov R10D,EDX
            mov R11D,ESI
            mov ECX,EBP
            mov R8D,EBX
            mov R12D,DWORD PTR [R9+RAX*8]
            mov R13D,R12D
            and R13D,7
            cmp R13D,6
            je .L_417f40
.L_417e9a:

            cmp BYTE PTR [RDI+40],0
            je .L_417ef8

            test EBX,EBX
            je .L_417ee1

            shl ESI,3
            jmp .L_417ebd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417eb0:

            mov R8D,DWORD PTR [RAX+4]
            mov DWORD PTR [RAX+4],R11D
            test R8D,R8D
            je .L_417ee1
.L_417ebd:

            mov ECX,R8D
            shr ECX,1
            and R8D,1
            lea RAX,QWORD PTR [R9+RCX*8]
            jne .L_417eb0

            mov ECX,DWORD PTR [RAX]
            mov R8D,ECX
            and ECX,7
            shr R8D,3
            or ECX,ESI
            test R8D,R8D
            mov DWORD PTR [RAX],ECX
            jne .L_417ebd
.L_417ee1:

            shl RBP,32
            mov EAX,EDX
            or RAX,RBP
.L_417eea:

            pop RBX
.L_417eeb:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417ef8:

            test EBP,EBP
            je .L_417f32

            shl EDX,3
            jmp .L_417f13
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417f08:

            mov ECX,DWORD PTR [RDI+4]
            mov DWORD PTR [RDI+4],R10D
            test ECX,ECX
            je .L_417f32
.L_417f13:

            mov ESI,ECX
            shr ESI,1
            and ECX,1
            lea RDI,QWORD PTR [R9+RSI*8]
            jne .L_417f08

            mov ESI,DWORD PTR [RDI]
            mov ECX,ESI
            and ESI,7
            shr ECX,3
            or ESI,EDX
            test ECX,ECX
            mov DWORD PTR [RDI],ESI
            jne .L_417f13
.L_417f32:

            shl RBX,32
            or RAX,RBX
            pop RBX
.L_417f3a:

            pop RBP
            pop R12
            pop R13
            ret 
.L_417f40:

            lea R13D,DWORD PTR [RSI+RSI*1]
            cmp R13D,EBP
            jne .L_417e9a

            shr R12D,3
            test R12D,R12D
            jne .L_417e9a

            test EBP,EBP
            je .L_417fa0

            lea EDI,DWORD PTR [RDX*8]
            jmp .L_417f7b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417f70:

            mov ECX,DWORD PTR [RSI+4]
            mov DWORD PTR [RSI+4],R10D
.L_417f77:

            test ECX,ECX
            je .L_417fa0
.L_417f7b:

            mov EAX,ECX
            shr EAX,1
            and ECX,1
            lea RSI,QWORD PTR [R9+RAX*8]
            jne .L_417f70

            mov EAX,DWORD PTR [RSI]
            mov ECX,EAX
            and EAX,7
            or EAX,EDI
            shr ECX,3
            mov DWORD PTR [RSI],EAX
            jmp .L_417f77
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417fa0:

            shl RBX,32
            mov EAX,EDX
            or RAX,RBX
            jmp .L_417eea
.L_417fae:

            nop
            nop
.L_417fb0:

            test ESI,ESI
            je .L_417fc0

            test EDX,EDX
            jne .L_417fc8

            mov RAX,RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417fc0:

            mov RAX,RDX
            ret 

            nop
            nop
            nop
            nop
.L_417fc8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,1
            mov R12,RDI
            sub RSP,8
.L_417fe0:

            call .L_417c20

            mov EBX,EAX
            xor EAX,EAX
            test EBX,EBX
            js .L_418024

            mov RAX,QWORD PTR [R12+48]
            movsxd RDX,EBX
            mov ESI,EBP
            lea RDI,QWORD PTR [RAX+RDX*8]
            mov EDX,R13D
            call .L_42ef20

            mov RDI,QWORD PTR [R12+48]
            mov RDX,R13
            mov RSI,RBP
            sar RDX,32
            sar RSI,32
            call .L_417bc0

            mov EDX,EBX
            shl RAX,32
            or RAX,RDX
.L_418024:

            add RSP,8
.L_418028:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41802f:

            nop
.L_418030:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EBP,EDX
            push RBX
.L_41803d:

            mov RBX,RSI
            mov ESI,1
            call .L_417c20

            test EAX,EAX
            js .L_418110

            movsxd RDX,EAX
            mov RDI,QWORD PTR [R14+48]
            xor ESI,ESI
            lea R13,QWORD PTR [RDX*8]
            xor EDX,EDX
            mov R12D,EAX
            add RDI,R13
            call .L_42ef20

            mov RCX,RBX
            mov RAX,QWORD PTR [R14+48]
            shr RCX,32
            test ECX,ECX
            mov EDX,ECX
            je .L_4180ba

            lea EDI,DWORD PTR [R12*8]
            jmp .L_41809b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418090:

            mov EDX,DWORD PTR [RSI+4]
            mov DWORD PTR [RSI+4],R12D
            test EDX,EDX
            je .L_4180ba
.L_41809b:

            mov ECX,EDX
            shr ECX,1
            and EDX,1
            lea RSI,QWORD PTR [RAX+RCX*8]
            jne .L_418090

            mov ECX,DWORD PTR [RSI]
            mov EDX,ECX
            and ECX,7
            shr EDX,3
            or ECX,EDI
            test EDX,EDX
            mov DWORD PTR [RSI],ECX
            jne .L_41809b
.L_4180ba:

            test BPL,BPL
            lea RDX,QWORD PTR [RAX+R13*1]
            lea EAX,DWORD PTR [R12+R12*1]
            jne .L_4180f0

            mov ECX,DWORD PTR [RDX]
            shl EBX,3
            or EAX,1
            shl RAX,32
            and ECX,7
            or EBX,ECX
            mov DWORD PTR [RDX],EBX
            mov RDX,RAX
            mov EAX,R12D
            pop RBX
.L_4180e1:

            or RAX,RDX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4180f0:

            mov DWORD PTR [RDX+4],EBX
            mov RDX,RAX
            mov EAX,R12D
            shl RDX,32
            pop RBX
            or RAX,RDX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418110:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41811b:

            nop
            nop
            nop
            nop
            nop
.L_418120:

            push RBX
            movzx EDX,DL
            mov RBX,RSI
            call .L_418030

            shr RAX,32
            shl RAX,32
            mov RDX,RAX
            mov EAX,EBX
            or RAX,RDX
            pop RBX
            ret 
.L_41813e:

            nop
            nop
.L_418140:

            push R14
            push R13
            mov R14D,ECX
            push R12
            push RBP
            mov R12D,ESI
            push RBX
.L_41814e:

            mov ESI,1
            mov RBP,RDI
            mov R13D,EDX
            call .L_417c20

            test EAX,EAX
            js .L_4181c8

            mov RDX,QWORD PTR [RBP+48]
            mov EBX,EAX
            cdqe 
            xor R8D,R8D
            movzx ECX,R14B
            mov ESI,R12D
            lea RDI,QWORD PTR [RDX+RAX*8]
            mov EDX,R13D
            call .L_42ef30

            mov RAX,QWORD PTR [RBP+24]
            mov EDX,R13D
            mov ESI,R12D
            add DWORD PTR [RAX+16],1
            mov RDI,QWORD PTR [RBP+24]
            call .L_42fdb0

            cmp R12D,122
            setle AL
            test AL,R14B
            je .L_4181a9

            cmp R13D,96
            jg .L_4181d8
.L_4181a9:

            lea EAX,DWORD PTR [RBX+RBX*1]
            mov RDX,RAX
            mov EAX,EBX
            shl RDX,32
            pop RBX
.L_4181b6:

            or RAX,RDX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4181c8:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4181d8:

            cmp R12D,97
            mov ESI,97
            cmovl R12D,ESI
            cmp R13D,122
            jg .L_418200

            cmp R13D,R12D
            jl .L_4181a9

            lea EDX,DWORD PTR [R13-32]
            jmp .L_418205
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418200:

            mov EDX,90
.L_418205:

            mov RDI,QWORD PTR [RBP+24]
            lea ESI,DWORD PTR [R12-32]
            call .L_42fdb0

            jmp .L_4181a9
.L_418215:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418220:

            push RBP
            push RBX
            mov ESI,1
            mov RBP,RDI
            sub RSP,8
            call .L_417c20

            test EAX,EAX
            js .L_418268

            mov EBX,EAX
            movsxd RDX,EAX
            mov RAX,QWORD PTR [RBP+48]
            xor ESI,ESI
            lea RDI,QWORD PTR [RAX+RDX*8]
            call .L_42ef80

            lea EAX,DWORD PTR [RBX+RBX*1]
            add RSP,8
            mov RDX,RAX
            mov EAX,EBX
            shl RDX,32
            or RAX,RDX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418268:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_418271:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418280:

            test ESI,ESI
            je .L_4182f0

            push R14
            push R13
            mov R13D,EDX
            push R12
            push RBP
            mov R12,RSI
            push RBX
.L_418292:

            mov ESI,1
            mov RBP,RDI
            call .L_417c20

            mov EBX,EAX
            xor EAX,EAX
            test EBX,EBX
            js .L_4182e7

            mov RDX,QWORD PTR [RBP+48]
            movsxd RAX,EBX
            test R13B,R13B
            lea R14D,DWORD PTR [RBX+RBX*1]
            lea RDI,QWORD PTR [RDX+RAX*8]
            jne .L_4182f8

            mov ESI,R12D
            xor EDX,EDX
            call .L_42ef20

            mov ESI,R14D
            or ESI,1
.L_4182cb:

            mov RDI,QWORD PTR [RBP+48]
            mov RDX,R12
            sar RDX,32
            call .L_417bc0

            mov RDX,RAX
            mov EAX,EBX
            shl RDX,32
            or RAX,RDX
.L_4182e7:

            pop RBX
.L_4182e8:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4182f0:

            jmp .L_418220
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4182f8:

            xor ESI,ESI
            mov EDX,R12D
            call .L_42ef20

            mov ESI,R14D
            jmp .L_4182cb
.L_418307:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418310:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov ESI,1
            mov RBP,RDI
            call .L_417c20

            test EAX,EAX
            js .L_418348

            mov EBX,EAX
            movsxd RDX,EAX
            mov RAX,QWORD PTR [RBP+48]
            mov ESI,R12D
            lea RDI,QWORD PTR [RAX+RDX*8]
            call .L_42ef70

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418348:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_41834f:

            nop
.L_418350:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_418357:

            mov EBX,ESI
            mov ESI,1
            call .L_417c20

            test EAX,EAX
            js .L_418460

            mov RDX,QWORD PTR [R12+48]
            mov EBP,EAX
            cdqe 
            mov ESI,EBX
            lea RDI,QWORD PTR [RDX+RAX*8]
            xor EDX,EDX
            call .L_42ef60

            test BL,3
            jne .L_418470

            and EBX,48
            je .L_418414
.L_418393:

            mov EBX,1
            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
.L_4183a0:

            mov EAX,EBX
            mov ECX,EBX
            and EAX,4294967263
            lea EDX,DWORD PTR [RAX-65]
            mov EAX,ESI
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_4183cb

            lea EAX,DWORD PTR [RSI-48]
            cmp AL,9
            setbe AL
            cmp SIL,95
            sete DIL
            or AL,DIL
            je .L_418430
.L_4183cb:

            cmp DL,25
            mov EAX,1
            jbe .L_4183ea
.L_4183d5:

            lea EDX,DWORD PTR [RCX-48]
            cmp DL,9
            setbe DL
            cmp CL,95
            sete CL
            or EDX,ECX
            cmp DL,AL
            jne .L_418435
.L_4183ea:

            lea EAX,DWORD PTR [RBX+1]
            cmp EAX,255
            jg .L_418408

            mov EBX,EAX
            jmp .L_4183a0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418400:

            mov ESI,255
            nop
            nop
            nop
.L_418408:

            mov RDI,QWORD PTR [R12+24]
            mov EDX,EBX
            call .L_42fdb0
.L_418414:

            lea EAX,DWORD PTR [RBP+RBP*1]
            pop RBX
.L_418419:

            mov RDX,RAX
            mov EAX,EBP
            shl RDX,32
            or RAX,RDX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418430:

            cmp DL,25
            ja .L_4183d5
.L_418435:

            mov RDI,QWORD PTR [R12+24]
            lea EDX,DWORD PTR [RBX-1]
            call .L_42fdb0

            cmp EBX,255
            jg .L_418414

            je .L_418400

            lea EAX,DWORD PTR [RBX+1]
            mov ESI,EBX
            mov EBX,EAX
            jmp .L_4183a0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418460:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418470:

            mov RDI,QWORD PTR [R12+24]
            mov EDX,10
            mov ESI,10
            call .L_42fdb0

            and EBX,48
            jne .L_418393

            jmp .L_418414
.L_41848f:

            nop
.L_418490:

            test ESI,ESI
            jne .L_4184a0

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4184a0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_4184ae:

            mov ESI,2
            mov R12D,EDX
            call .L_417c20

            mov EBX,EAX
            xor EAX,EAX
            test EBX,EBX
            js .L_418550

            mov RDI,QWORD PTR [R13+48]
            movsxd R14,EBX
            add R12D,R12D
            shl R14,3
            mov EDX,EBP
            mov ESI,R12D
            add RDI,R14
            call .L_42ef50

            mov RAX,QWORD PTR [R13+48]
            lea ESI,DWORD PTR [R12+1]
            xor EDX,EDX
            lea RDI,QWORD PTR [RAX+R14*1+8]
            call .L_42ef50

            mov RSI,RBP
            lea EAX,DWORD PTR [RBX+1]
            mov RDI,QWORD PTR [R13+48]
            shr RSI,32
            test ESI,ESI
            mov EDX,ESI
            je .L_418542

            lea R8D,DWORD PTR [RAX*8]
            jmp .L_418522
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418518:

            mov EDX,DWORD PTR [RSI+4]
            mov DWORD PTR [RSI+4],EAX
            test EDX,EDX
            je .L_418542
.L_418522:

            mov ECX,EDX
            shr ECX,1
            and EDX,1
            lea RSI,QWORD PTR [RDI+RCX*8]
            jne .L_418518

            mov ECX,DWORD PTR [RSI]
            mov EDX,ECX
            and ECX,7
            shr EDX,3
            or ECX,R8D
            test EDX,EDX
            mov DWORD PTR [RSI],ECX
            jne .L_418522
.L_418542:

            add EAX,EAX
            mov RDX,RAX
            mov EAX,EBX
            shl RDX,32
            or RAX,RDX
.L_418550:

            pop RBX
.L_418551:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_418559:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418560:

            push RBP
            push RBX
            movzx ECX,CL
            mov EBX,R8D
            movzx EDX,DL
            movzx ESI,SIL
            sub RSP,8
.L_418573:

            mov RBP,RDI
            call .L_418140

            test EBX,EBX
            mov R9,RAX
            je .L_4185d8

            mov RDX,RAX
            mov RSI,QWORD PTR [RBP+48]
            lea EDI,DWORD PTR [RBX*8]
            shr RDX,32
            test EDX,EDX
            mov EAX,EDX
            jne .L_4185aa

            jmp .L_4185c8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4185a0:

            mov EAX,DWORD PTR [RCX+4]
            mov DWORD PTR [RCX+4],EBX
            test EAX,EAX
            je .L_4185c8
.L_4185aa:

            mov EDX,EAX
            shr EDX,1
            test AL,1
            lea RCX,QWORD PTR [RSI+RDX*8]
            jne .L_4185a0

            mov EDX,DWORD PTR [RCX]
            mov EAX,EDX
            and EDX,7
            shr EAX,3
            or EDX,EDI
            test EAX,EAX
            mov DWORD PTR [RCX],EDX
            jne .L_4185aa
.L_4185c8:

            add RSP,8
.L_4185cc:

            mov EAX,R9D
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4185d8:

            mov ESI,DWORD PTR [RBP+124]
            mov RDI,QWORD PTR [RBP+48]
            mov RDX,RAX
            sar RDX,32
            call .L_417bc0

            mov DWORD PTR [RBP+124],EAX
            add RSP,8
            mov EAX,R9D
            pop RBX
            pop RBP
            ret 
.L_4185f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418600:

            mov EAX,DWORD PTR [RDI+120]
            test EAX,EAX
            jne .L_418610

            mov DWORD PTR [RDI+120],ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418610:

            jmp .L_417d60
.L_418615:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418620:

            mov RAX,QWORD PTR [RDI+120]
            ret 
.L_418625:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418630:

            push R14
            pxor XMM0,XMM0
            push R13
            push R12
            mov EDX,191
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_435fec]
            mov R12,RDI
            mov EBP,128
            xor R8D,R8D
            sub RSP,64
.L_418657:

            lea R13,QWORD PTR [RBX+132]
            movaps XMMWORD PTR [RSP],XMM0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov R14,RSP
            movaps XMMWORD PTR [RSP+32],XMM0
            nop
.L_418680:

            movzx ESI,BPL
            xor ECX,ECX
            movzx EDX,DL
            mov RDI,R12
            and EBP,192
            call .L_418560

            add EBP,-128
            mov DWORD PTR [R14],EAX
            je .L_4186ad

            mov EDX,DWORD PTR [R12+120]
            test EDX,EDX
            jne .L_4186d0

            mov DWORD PTR [R12+120],EAX
.L_4186ad:

            add R14,4
            cmp R13,RBX
            je .L_4186e3
.L_4186b6:

            movsxd RAX,DWORD PTR [RBX]
            mov EDX,DWORD PTR [RBX+8]
            xor R8D,R8D
            mov EBP,DWORD PTR [RBX+4]
            add RBX,12
            test EAX,EAX
            js .L_418680

            mov R8D,DWORD PTR [RSP+RAX*4]
            jmp .L_418680
.L_4186d0:

            mov ESI,EAX
            mov RDI,R12
            add R14,4
            call .L_417d60

            cmp R13,RBX
            jne .L_4186b6
.L_4186e3:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_418700

            add RSP,64
.L_4186f7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_418700:

            call __stack_chk_fail@PLT
.L_418705:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418710:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,32
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+36]
            mov DWORD PTR [RSP+12],ESI
            cmp EAX,1
            je .L_418780

            cmp EAX,2
            je .L_418768

            xor EAX,EAX
.L_418742:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_418807

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418768:

            mov ESI,DWORD PTR [RSP+12]
            movzx ECX,DL
            mov EDX,ESI
            call .L_418140

            jmp .L_418742
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418780:

            mov ESI,DWORD PTR [RSP+12]
            cmp ESI,127
            jle .L_4187f8

            lea R14,QWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RSP+12]
            mov RDI,R14
            call .L_414120

            movzx ESI,BYTE PTR [RSP+20]
            mov R13D,EAX
            xor ECX,ECX
            mov RDI,RBX
            mov EDX,ESI
            call .L_418140

            cmp R13D,1
            mov RBP,RAX
            jle .L_4187e9

            mov R12D,1
.L_4187be:

            movzx ESI,BYTE PTR [R14+R12*1]
            xor ECX,ECX
            mov RDI,RBX
            add R12,1
            mov EDX,ESI
            call .L_418140

            mov RSI,RBP
            mov RDX,RAX
            mov RDI,RBX
            call .L_417e50

            cmp R13D,R12D
            mov RBP,RAX
            jg .L_4187be
.L_4187e9:

            mov RAX,RBP
            jmp .L_418742
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4187f8:

            movzx ECX,DL
            mov EDX,ESI
            call .L_418140

            jmp .L_418742
.L_418807:

            call __stack_chk_fail@PLT
.L_41880c:

            nop
            nop
            nop
            nop
.L_418810:

            mov RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RAX+24],ESI
            and ESI,32
            je .L_418823

            mov DWORD PTR [RDI+36],2
.L_418823:

            test RDX,RDX
            mov QWORD PTR [RDI+64],RDX
            jle .L_418870

            cmp RDX,440
            jle .L_418860

            sub RDX,440
            mov EAX,16777216
            mov DWORD PTR [RDI+128],ECX
            shr RDX,3
            cmp RDX,16777216
            cmova RDX,RAX
            mov DWORD PTR [RDI+44],EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418860:

            mov DWORD PTR [RDI+44],0
            mov DWORD PTR [RDI+128],ECX
            ret 
          .byte 0x66
          .byte 0x90
.L_418870:

            mov DWORD PTR [RDI+44],100000
            mov DWORD PTR [RDI+128],ECX
            ret 
.L_41887e:

            nop
            nop
.L_418880:

            cmp BYTE PTR [RDI+32],0
            jne .L_418950

            push RBX
.L_41888b:

            mov RAX,QWORD PTR [RDI+24]
            mov EDX,DWORD PTR [RAX+4]
            test EDX,EDX
            je .L_418910
.L_418896:

            mov RBX,RDI
            call .L_417db0

            mov RDX,QWORD PTR [RBX+48]
            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX+32],RDX
            mov RAX,QWORD PTR [RBX+24]
            mov EDX,DWORD PTR [RBX+56]
            mov DWORD PTR [RAX+12],EDX
            mov RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+48],0
            call .L_42fe00

            mov RDI,QWORD PTR [RBX+24]
            call .L_42f7c0

            mov RAX,QWORD PTR [RBX+64]
            test RAX,RAX
            jle .L_418930

            movsxd RDX,DWORD PTR [RBX+56]
            mov RCX,QWORD PTR [RBX+24]
            sub RAX,440
            shl RDX,3
            sub RAX,RDX
            mov EDX,0
            cmovs RAX,RDX
            mov QWORD PTR [RCX+112],RAX
            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+24],0
            pop RBX
.L_418906:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418910:

            mov EAX,DWORD PTR [RAX+8]
            test EAX,EAX
            jne .L_418896

            mov DWORD PTR [RDI+56],1
            jmp .L_418896
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418930:

            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX+112],1048576
            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+24],0
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418950:

            xor EAX,EAX
            ret 
.L_418953:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418960:

            push RBX
            mov EDX,255
            mov RBX,RDI
            xor ESI,ESI
            xor ECX,ECX
            call .L_418140

            mov RDI,RBX
            mov EDX,1
            mov RSI,RAX
            pop RBX
            jmp .L_418030
.L_418983:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418990:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_4189a8:

            lea RBX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+8],RDI
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_418a51:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_418a56:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_418b13:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_418b18:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435f14]
            mov EDX,14
.L_418b28:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,670
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_418b64:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435f23]
            mov EDX,22
.L_418b74:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_418b79:

            cmp BYTE PTR [RSP+128],0
            je .L_418c30
.L_418b87:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_418bb5

            call _ZdlPv@PLT
.L_418bb5:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov BYTE PTR [RAX+32],1
            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            jne .L_418f2e

            add RSP,536
.L_418c22:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418c30:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_418e20

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_418d70

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_418ca8:

            call .L_417a80
.L_418cad:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_418e38

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_418eb0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_418ebf

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_418d0c:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_418d30
.L_418d2b:

            call _ZdlPv@PLT
.L_418d30:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_418d3f:

            call write@PLT
.L_418d44:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_418b87

            call _ZdlPv@PLT

            jmp .L_418b87
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418d70:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_418d8a:

            call .L_417a80

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_418e78

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_418ed8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_418ee7

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_418dee:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_418d2b

            jmp .L_418d30
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418e20:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_418e2e:

            jmp .L_418d30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418e38:

            test RDX,RDX
            je .L_418e60

            cmp RDX,1
            je .L_418f18

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418e60:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_418d0c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418e78:

            test RDX,RDX
            je .L_418e98

            cmp RDX,1
            je .L_418f00

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_418e98:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_418dee
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418eb0:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_418ebf:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_418d0c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418ed8:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_418ee7:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_418dee
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418f00:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_418e98
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418f18:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_418e60
.L_418f2e:

            call __stack_chk_fail@PLT
.L_418f33:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_418f4b

            call _ZdlPv@PLT
.L_418f4b:

            call _ZSt9terminatev@PLT
.L_418f50:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RDX
.L_418f77:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_418f8b:

            call _Unwind_Resume@PLT
.L_418f90:

            jmp .L_418f33
.L_418f92:

            mov R13,RAX
            jmp .L_418f77
.L_418f97:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_418fab:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_418fbe:

            nop
            nop
.L_418fc0:

            push RBX
            mov RSI,QWORD PTR [RDI+88]
            mov RBX,RDI
            lea RDI,QWORD PTR [RDI+72]
            call .L_41b300

            lea RAX,QWORD PTR [RBX+80]
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+112],0
            mov DWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+96],RAX
            mov QWORD PTR [RBX+104],RAX
            mov EAX,DWORD PTR [RIP+.L_436070]
            mov DWORD PTR [RBX+124],EAX
            pop RBX
            ret 
.L_418fff:

            nop
.L_419000:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_645fc0]
            mov RBX,RDI
            sub RSP,8
.L_419010:

            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_419031

            mov RDI,RBP
            call .L_42f3c0

            mov ESI,440
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_419031:

            mov RDI,QWORD PTR [RBX+48]
            test RDI,RDI
            je .L_41903f

            call _ZdaPv@PLT
.L_41903f:

            mov RSI,QWORD PTR [RBX+88]
            lea RDI,QWORD PTR [RBX+72]
            call .L_41b300

            add RSP,8
.L_419050:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41b260
.L_41905a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_419060:

            push RBX
            mov RBX,RDI
            call .L_419000

            mov RDI,RBX
            mov ESI,136
            pop RBX
            jmp _ZdlPvm@PLT
.L_419077:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419080:

            lea RAX,QWORD PTR [RIP+.L_648d38]
            push R12
            push RBP
            push RBX
.L_41908b:

            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            mov EDI,80
.L_419096:

            call _Znwm@PLT
.L_41909b:

            mov EDI,64
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov RBP,RAX
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov QWORD PTR [RAX+56],0
            mov QWORD PTR [RAX+64],0
            mov QWORD PTR [RAX+72],0
            mov QWORD PTR [RAX+8],8
.L_4190f2:

            call _Znwm@PLT
.L_4190f7:

            mov RCX,QWORD PTR [RBP+8]
            mov QWORD PTR [RBP],RAX
            mov EDI,480
            lea RDX,QWORD PTR [RCX-1]
            shr RDX,1
            lea R12,QWORD PTR [RAX+RDX*8]
.L_41910f:

            call _Znwm@PLT
.L_419114:

            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [RBP+24],RAX
            mov QWORD PTR [RBP+56],RAX
            mov QWORD PTR [RBP+16],RAX
            mov EDI,440
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_645fc0]
            mov QWORD PTR [RBP+40],R12
            mov QWORD PTR [RBP+32],RDX
            mov QWORD PTR [RBP+72],R12
            mov QWORD PTR [RBX],RAX
            lea RAX,QWORD PTR [RBX+80]
            mov QWORD PTR [RBP+64],RDX
            mov QWORD PTR [RBX+8],RBP
            mov BYTE PTR [RBX+16],0
            mov DWORD PTR [RBX+80],0
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+96],RAX
            mov QWORD PTR [RBX+104],RAX
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
.L_419181:

            call _Znwm@PLT
.L_419186:

            mov RDI,RAX
            mov RBP,RAX
.L_41918c:

            call .L_42f300
.L_419191:

            mov QWORD PTR [RBX+24],RBP
            mov BYTE PTR [RBX+32],0
            mov ESI,1
            mov DWORD PTR [RBX+36],1
            mov BYTE PTR [RBX+40],0
            mov RDI,RBX
            mov QWORD PTR [RBX+44],1
            mov QWORD PTR [RBX+52],0
            mov QWORD PTR [RBX+60],0
            mov DWORD PTR [RBX+68],0
.L_4191cb:

            call .L_417c20

            mov RDX,QWORD PTR [RBX+48]
            cdqe 
            lea RDI,QWORD PTR [RDX+RAX*8]
            call .L_42ef90
.L_4191df:

            mov DWORD PTR [RBX+44],0
            pop RBX
.L_4191e7:

            pop RBP
            pop R12
            ret 
.L_4191eb:

            mov RBX,RAX
.L_4191ee:

            mov RDI,RBP
            mov ESI,80
            call _ZdlPvm@PLT

            mov RDI,RBX
.L_4191fe:

            call _Unwind_Resume@PLT
.L_419203:

            mov ESI,440
            mov RDI,RBP
            mov R12,RAX
            call _ZdlPvm@PLT
.L_419213:

            mov RSI,QWORD PTR [RBX+88]
            lea RDI,QWORD PTR [RBX+72]
            call .L_41b300

            mov RDI,RBX
            call .L_41b260

            mov RDI,R12
            call _Unwind_Resume@PLT
.L_419230:

            mov R12,RAX
            jmp .L_419213
.L_419235:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_41923d:

            call __cxa_rethrow@PLT
.L_419242:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
            call __cxa_begin_catch@PLT

            mov RDI,QWORD PTR [RBP]
            call _ZdlPv@PLT

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
.L_41926b:

            call __cxa_rethrow@PLT
.L_419270:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            jmp .L_4191ee
.L_41927d:

            nop
            nop
            nop
.L_419280:

            mov R9D,DWORD PTR [RDI+36]
            cmp R9D,2
            je .L_4193e8

            cmp R9D,1
            movzx EAX,CL
            je .L_4193d0
.L_41929b:

            push R15
            push R14
            movzx EDX,DL
            push R13
            push R12
            movzx ESI,SIL
            push RBP
            push RBX
            movsxd RBX,R8D
            shl RBX,17
            lea RBP,QWORD PTR [RDI+80]
            or RBX,RAX
            lea EAX,DWORD PTR [RDX+RDX*1]
            sub RSP,24
.L_4192c1:

            cdqe 
            or RBX,RAX
            mov EAX,ESI
            shl EAX,9
            cdqe 
            or RBX,RAX
            mov RAX,QWORD PTR [RDI+88]
            test RAX,RAX
            je .L_41930a

            mov R9,RBP
            jmp .L_4192ec
          .byte 0x66
          .byte 0x90
.L_4192e0:

            mov R9,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_4192fb
.L_4192ec:

            cmp RBX,QWORD PTR [RAX+32]
            jbe .L_4192e0

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_4192ec
.L_4192fb:

            cmp RBP,R9
            je .L_41930a

            cmp RBX,QWORD PTR [R9+32]
            jae .L_4193b0
.L_41930a:

            mov R12,RDI
            movzx ECX,CL
            mov R14,RBP
            call .L_418560

            mov R13D,EAX
            mov RAX,QWORD PTR [R12+88]
            test RAX,RAX
            jne .L_41933c

            jmp .L_419356
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419330:

            mov R14,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_41934b
.L_41933c:

            cmp RBX,QWORD PTR [RAX+32]
            jbe .L_419330

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_41933c
.L_41934b:

            cmp RBP,R14
            je .L_419356

            cmp RBX,QWORD PTR [R14+32]
            jae .L_4193a7
.L_419356:

            mov EDI,48
            mov R15,R14
            call _Znwm@PLT

            lea RDI,QWORD PTR [R12+72]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],RBX
            mov DWORD PTR [RAX+40],0
            mov RSI,R15
            mov R14,RAX
            call .L_41b3d0

            test RDX,RDX
            je .L_4193f7

            test RAX,RAX
            jne .L_419391

            cmp RBP,RDX
            jne .L_41940e
.L_419391:

            mov EDI,1
.L_419396:

            mov RCX,RBP
            mov RSI,R14
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [R12+112],1
.L_4193a7:

            mov DWORD PTR [R14+40],R13D
            jmp .L_4193b4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4193b0:

            mov R13D,DWORD PTR [R9+40]
.L_4193b4:

            add RSP,24
.L_4193b8:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4193d0:

            cmp BYTE PTR [RDI+40],0
            jne .L_41929b

            test SIL,SIL
            jns .L_4193e8

            cmp DL,191
            jbe .L_41929b
.L_4193e8:

            movzx ECX,CL
            movzx EDX,DL
            movzx ESI,SIL
            jmp .L_418560
.L_4193f7:

            mov RDI,R14
            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov R14,RAX
            jmp .L_4193a7
.L_41940e:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [R14+32],RAX
            setb DIL
            jmp .L_419396
.L_419421:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419430:

            cmp EDX,255
            mov EAX,255
            push RBX
            cmovg EDX,EAX
            mov RBX,RDI
            xor R8D,R8D
            movzx EDX,DL
            movzx ECX,CL
            movzx ESI,SIL
            call .L_419280

            mov EDX,DWORD PTR [RBX+120]
            test EDX,EDX
            jne .L_419460

            mov DWORD PTR [RBX+120],EAX
            pop RBX
            ret 
.L_419460:

            mov RDI,RBX
            mov ESI,EAX
            pop RBX
            jmp .L_417d60
.L_41946b:

            nop
            nop
            nop
            nop
            nop
.L_419470:

            cmp ESI,EDX
            jg .L_419488

            cmp ESI,255
            jg .L_419488

            movzx ECX,CL
            jmp .L_419430
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419488:

            ret 
.L_41948a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_419490:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,32
.L_41949f:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RBX
            xor EBX,EBX
            cmp ESI,EDX
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+8],EDX
            jg .L_419500

            cmp ESI,128
            mov R8D,ECX
            je .L_419528

            cmp ESI,127
            jg .L_419630

            cmp EDX,127
            jg .L_419710
.L_4194d8:

            movzx ECX,R8B
            movzx EDX,DL
            xor R8D,R8D
            movzx ESI,SIL
            mov RDI,RBP
            call .L_419280

            mov EDX,DWORD PTR [RBP+120]
            test EDX,EDX
            jne .L_4196d0

            mov DWORD PTR [RBP+120],EAX
            nop
            nop
            nop
            nop
.L_419500:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41974c

            add RSP,32
.L_419518:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419528:

            cmp EDX,1114111
            je .L_4196a0
.L_419534:

            cmp EDX,2047
            jg .L_419751
.L_419540:

            cmp EDX,127
            jle .L_4194d8

            mov R9D,ESI
            mov ECX,6
            mov EDI,1
            xor R9D,EDX
.L_419555:

            mov EAX,EDI
            shl EAX,CL
            mov R12D,EAX
            neg R12D
            test R12D,R9D
            je .L_41957b

            lea EBX,DWORD PTR [RAX-1]
            test ESI,EBX
            jne .L_4196e0

            mov EAX,EBX
            and EAX,EDX
            cmp EAX,EBX
            jne .L_419720
.L_41957b:

            add ECX,6
            cmp ECX,24
            jne .L_419555

            lea R12,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RSP+12]
            lea R13,QWORD PTR [RSP+20]
            mov RDI,R12
            call .L_414120

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            mov EBX,EAX
            call .L_414120

            cmp BYTE PTR [RBP+40],0
            je .L_4195f8

            test EBX,EBX
            jle .L_4196c0

            xor R14D,R14D
            xor R8D,R8D
.L_4195bd:

            movzx EDX,BYTE PTR [R13+R14*1]
            movzx ESI,BYTE PTR [R12+R14*1]
            xor ECX,ECX
            mov RDI,RBP
            add R14,1
            call .L_419280

            cmp EBX,R14D
            mov R8D,EAX
            jg .L_4195bd
.L_4195de:

            mov EAX,DWORD PTR [RBP+120]
            test EAX,EAX
            jne .L_419688

            mov DWORD PTR [RBP+120],R8D
            jmp .L_419500
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4195f8:

            sub EBX,1
            js .L_4196c0

            movsxd RBX,EBX
            xor R8D,R8D
.L_419607:

            movzx EDX,BYTE PTR [R13+RBX*1]
            movzx ESI,BYTE PTR [R12+RBX*1]
            xor ECX,ECX
            mov RDI,RBP
            sub RBX,1
            call .L_419280

            test EBX,EBX
            mov R8D,EAX
            jns .L_419607

            jmp .L_4195de
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419630:

            cmp ESI,2047
            jle .L_419534

            cmp ESI,65535
            jg .L_419540

            cmp EDX,65535
            jle .L_419540

            mov EDX,65535
            mov R12D,65536
.L_41965f:

            movzx EBX,R8B
            mov RDI,RBP
            mov ECX,EBX
            call .L_419490

            mov EDX,DWORD PTR [RSP+8]
            mov ECX,EBX
            mov ESI,R12D
            mov RDI,RBP
            call .L_419490

            jmp .L_419500
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419688:

            mov ESI,R8D
            mov RDI,RBP
            call .L_417d60

            jmp .L_419500
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4196a0:

            cmp BYTE PTR [RDI+40],0
            mov EDX,2047
            mov R12D,2048
            jne .L_41965f

            call .L_418630

            jmp .L_419500
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4196c0:

            xor R8D,R8D
            jmp .L_4195de
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4196d0:

            mov ESI,EAX
            mov RDI,RBP
            call .L_417d60

            jmp .L_419500
          .byte 0x90
.L_4196e0:

            movzx R12D,R8B
            mov EDX,ESI
            mov RDI,RBP
            or EDX,EBX
            mov ECX,R12D
            call .L_419490

            mov EAX,DWORD PTR [RSP+12]
            mov EDX,DWORD PTR [RSP+8]
            mov ECX,R12D
            mov RDI,RBP
            or EAX,EBX
            lea ESI,DWORD PTR [RAX+1]
            call .L_419490

            jmp .L_419500
.L_419710:

            mov EDX,127
            mov R12D,128
            jmp .L_41965f
.L_419720:

            movzx EBX,R8B
            and EDX,R12D
            mov RDI,RBP
            sub EDX,1
            mov ECX,EBX
            call .L_419490

            mov EDX,DWORD PTR [RSP+8]
            mov ESI,R12D
            mov ECX,EBX
            mov RDI,RBP
            and ESI,EDX
            call .L_419490

            jmp .L_419500
.L_41974c:

            call __stack_chk_fail@PLT
.L_419751:

            mov EDX,2047
            mov R12D,2048
            jmp .L_41965f
.L_419761:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419770:

            cmp DWORD PTR [RDI+36],2
            movzx ECX,CL
            jne .L_419798

            cmp ESI,EDX
            jg .L_419790

            cmp ESI,255
            jg .L_419790

            jmp .L_419430
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419790:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419798:

            jmp .L_419490
.L_41979d:

            nop
            nop
            nop
.L_4197a0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,552
.L_4197b1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+32],0
            jne .L_4198c0

            cmp BYTE PTR [RSI],21
            mov RBX,RDI
            mov RBP,RSI
            ja .L_419e80

            movzx EAX,BYTE PTR [RSI]
            lea RDX,QWORD PTR [RIP+.L_435f80]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_4197f0:

            mov RSI,QWORD PTR [RDI+88]
            lea RDI,QWORD PTR [RDI+72]
            movzx R13D,BYTE PTR [R12]
            call .L_41b300

            lea RAX,QWORD PTR [RBX+80]
            mov DWORD PTR [RBX+120],0
            mov RCX,QWORD PTR [R12+8]
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+96],RAX
            mov QWORD PTR [RBX+104],RAX
            mov EAX,DWORD PTR [RIP+.L_436070]
            mov RBP,RCX
            mov DWORD PTR [RBX+124],EAX
            movsxd RDX,DWORD PTR [R12+16]
            mov RAX,RDX
            shl RDX,3
            test RDX,RDX
            je .L_41a44b

            nop
            nop
            nop
            nop
            nop
.L_419850:

            test R13B,R13B
            mov ESI,DWORD PTR [RBP]
            mov EDX,DWORD PTR [RBP+4]
            je .L_419869

            cmp ESI,64
            jle .L_41a1d0

            cmp EDX,90
            jle .L_419894
.L_419869:

            cmp ESI,65
            jle .L_41a1d0
.L_419872:

            cmp EDX,64
            jle .L_419880

            cmp ESI,122
            movzx ECX,R13B
            jle .L_419882
.L_419880:

            xor ECX,ECX
.L_419882:

            mov RDI,RBX
.L_419885:

            call .L_419770
.L_41988a:

            mov RCX,QWORD PTR [R12+8]
            mov EAX,DWORD PTR [R12+16]
.L_419894:

            movsxd RDX,EAX
            add RBP,8
            lea RDX,QWORD PTR [RCX+RDX*8]
            cmp RBP,RDX
            jne .L_419850

            mov ECX,DWORD PTR [RBX+120]
.L_4198a7:

            mov EAX,DWORD PTR [RBX+124]
            shl RAX,32
            mov RSI,RAX
            mov EAX,ECX
            or RAX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4198c0:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41a5b8

            add RSP,552
.L_4198de:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4198f0:

            mov R12,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [R12+4]
            test EAX,EAX
            jne .L_4197f0

            lea R12,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_41999a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41999f:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_419a74:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_419a79:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_435f14]
            mov EDX,14
.L_419a8a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,794
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_419ac8:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_435f3a]
            mov EDX,23
.L_419ad9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_419ade:

            cmp BYTE PTR [RSP+144],0
            je .L_41a1ed
.L_419aec:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+264],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_419b2a

            call _ZdlPv@PLT
.L_419b2a:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+RAX*1+152],R15
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RBX+32],1
.L_419b6b:

            xor EAX,EAX
            jmp .L_4198c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419b78:

            mov RDI,RBX
.L_419b7b:

            call .L_418220

            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419b88:

            movzx EDX,WORD PTR [RSI+2]
            mov RSI,QWORD PTR [R8]
            mov EBP,DWORD PTR [R8]
            shr DX,6
            and EDX,1
            call .L_418030

            shr RAX,32
            shl RAX,32
            mov RSI,RAX
            mov EAX,EBP
            or RAX,RSI
            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419bb8:

            movzx EDX,WORD PTR [RSI+2]
            mov RSI,QWORD PTR [R8]
            shr DX,6
            and EDX,1
            call .L_418030

            jmp .L_4198c0
.L_419bd0:

            cmp R9D,1
            mov RAX,QWORD PTR [R8]
            jle .L_4198c0

            lea EDX,DWORD PTR [R9-2]
            lea RBP,QWORD PTR [R8+8]
            lea R12,QWORD PTR [R8+RDX*8+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_419bf0:

            mov RDX,QWORD PTR [RBP]
            mov RSI,RAX
            mov RDI,RBX
            add RBP,8
            call .L_417fb0

            cmp R12,RBP
            jne .L_419bf0

            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419c10:

            mov ESI,32
            call .L_418350

            jmp .L_4198c0
          .byte 0x90
.L_419c20:

            mov ESI,16
            call .L_418350

            jmp .L_4198c0
          .byte 0x90
.L_419c30:

            xor ESI,ESI
            cmp BYTE PTR [RDI+40],0
            sete SIL
            add ESI,1
            call .L_418350

            jmp .L_4198c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419c50:

            xor ESI,ESI
            cmp BYTE PTR [RDI+40],0
            setne SIL
            add ESI,1
            call .L_418350

            jmp .L_4198c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419c70:

            xor ECX,ECX
            mov EDX,255
            xor ESI,ESI
            call .L_418140

            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419c88:

            movzx EDX,WORD PTR [RSI+2]
            mov ESI,DWORD PTR [RSI+24]
            and EDX,1
            call .L_418710

            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419ca0:

            cmp R9D,1
            mov RAX,QWORD PTR [R8]
            jle .L_4198c0

            lea EDX,DWORD PTR [R9-2]
            lea RBP,QWORD PTR [R8+8]
            lea R12,QWORD PTR [R8+RDX*8+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_419cc0:

            mov RDX,QWORD PTR [RBP]
            mov RSI,RAX
            mov RDI,RBX
            add RBP,8
            call .L_417e50

            cmp R12,RBP
            jne .L_419cc0

            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419ce0:

            cmp DWORD PTR [RSI+24],0
            je .L_419b78

            jle .L_41a1b2

            xor R15D,R15D
            xor R12D,R12D
            xor R14D,R14D
            xor R13D,R13D
            jmp .L_419d1c
          .byte 0x66
          .byte 0x90
.L_419d00:

            mov R12D,EAX
            add R13D,1
            shr RAX,32
            add R15,4
            cmp R13D,DWORD PTR [RBP+24]
            mov R14,RAX
            jge .L_41a1c0
.L_419d1c:

            mov RAX,QWORD PTR [RBP+32]
            movzx EDX,WORD PTR [RBP+2]
            mov RDI,RBX
            mov ESI,DWORD PTR [RAX+R15*1]
            and EDX,1
            call .L_418710

            test R13D,R13D
            je .L_419d00

            shl R14,32
            mov ESI,R12D
            mov RDX,RAX
            or RSI,R14
            mov RDI,RBX
            call .L_417e50

            jmp .L_419d00
          .byte 0x90
.L_419d50:

            movzx EDX,WORD PTR [RSI+2]
            mov RSI,QWORD PTR [R8]
            shr DX,6
            and EDX,1
            call .L_418280

            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419d70:

            cmp BYTE PTR [RDI+40],1
            sbb ESI,ESI
            and ESI,4
            add ESI,4
            call .L_418350

            jmp .L_4198c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419d90:

            cmp BYTE PTR [RDI+40],1
            sbb ESI,ESI
            and ESI,4294967292
            add ESI,8
            call .L_418350

            jmp .L_4198c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419db0:

            mov RSI,QWORD PTR [RDI+88]
            lea RDI,QWORD PTR [RDI+72]
            call .L_41b300

            lea RAX,QWORD PTR [RBX+80]
            xor ESI,ESI
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+112],0
            mov DWORD PTR [RBX+120],0
            xor ECX,ECX
            mov QWORD PTR [RBX+96],RAX
            mov QWORD PTR [RBX+104],RAX
            mov EDX,1114111
            mov EAX,DWORD PTR [RIP+.L_436070]
            mov RDI,RBX
            mov DWORD PTR [RBX+124],EAX
            call .L_419770

            mov EAX,DWORD PTR [RBX+124]
            shl RAX,32
            mov RSI,RAX
            mov EAX,DWORD PTR [RBX+120]
            or RAX,RSI
            jmp .L_4198c0
          .byte 0x90
.L_419e10:

            mov EDX,DWORD PTR [RSI+24]
            test EDX,EDX
            jns .L_41a1e0

            mov RAX,QWORD PTR [R8]
            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419e28:

            mov ESI,DWORD PTR [RSI+24]
            call .L_418310

            cmp DWORD PTR [RBX+128],2
            mov RBP,RAX
            je .L_419e73

            mov ESI,8
            mov RDI,RBX
            call .L_418350

            mov RDX,RBP
            mov RSI,RAX
            mov RDI,RBX
            call .L_417e50

            mov RDI,RBX
            mov RBP,RAX
            call .L_418960
.L_419e62:

            mov RDX,RBP
            mov RSI,RAX
            mov RDI,RBX
            call .L_417e50

            mov RBP,RAX
.L_419e73:

            mov RAX,RBP
            jmp .L_4198c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419e80:

            lea R12,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_419f19:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_419f1e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_419ff3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_419ff8:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_435f14]
            mov EDX,14
.L_41a009:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,851
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41a047:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_435f52]
            mov EDX,26
.L_41a058:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,BYTE PTR [RBP]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSolsEi@PLT
.L_41a06b:

            cmp BYTE PTR [RSP+144],0
            jne .L_419aec

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+48]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_41a452

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_41a309

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_41a0ee:

            call .L_417a80
.L_41a0f3:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_41a495

            lea RDI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+128]
            cmp RAX,RDI
            je .L_41a4e8

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RCX
            je .L_41a4f7

            mov QWORD PTR [RSP+112],RAX
            mov QWORD PTR [RSP+128],RDI
.L_41a156:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_41a17a
.L_41a175:

            call _ZdlPv@PLT
.L_41a17a:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_41a189:

            call write@PLT
.L_41a18e:

            mov RDI,QWORD PTR [RSP+48]
            add RBP,16
            mov BYTE PTR [RSP+144],1
            cmp RDI,RBP
            je .L_419aec

            call _ZdlPv@PLT

            jmp .L_419aec
.L_41a1b2:

            xor R12D,R12D
            xor R14D,R14D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a1c0:

            shl R14,32
            mov EAX,R12D
            or RAX,R14
            jmp .L_4198c0
          .byte 0x90
.L_41a1d0:

            xor ECX,ECX
            cmp EDX,121
            jg .L_419882

            jmp .L_419872
.L_41a1e0:

            mov RSI,QWORD PTR [R8]
.L_41a1e3:

            call .L_418490
.L_41a1e8:

            jmp .L_4198c0
.L_41a1ed:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+48]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_41a50a

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_41a3a9

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_41a262:

            call .L_417a80
.L_41a267:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41a51c

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_41a596

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_41a5a5

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_41a2c7:

            mov RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_41a2f0
.L_41a2eb:

            call _ZdlPv@PLT
.L_41a2f0:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_41a2ff:

            call write@PLT
.L_41a304:

            jmp .L_41a18e
.L_41a309:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+80],RAX
.L_41a31f:

            call .L_417a80
.L_41a324:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_41a464

            lea RDI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+96]
            cmp RAX,RDI
            je .L_41a4c6

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RCX
            je .L_41a4d5

            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+96],RDI
.L_41a381:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41a175

            jmp .L_41a17a
.L_41a3a9:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+80],RAX
.L_41a3bf:

            call .L_417a80
.L_41a3c4:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41a548

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_41a574

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_41a583

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41a41e:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41a2eb

            jmp .L_41a2f0
.L_41a44b:

            xor ECX,ECX
            jmp .L_4198a7
.L_41a452:

            lea RSI,QWORD PTR [R12+88]
            mov RDI,RBP
.L_41a45a:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41a45f:

            jmp .L_41a17a
.L_41a464:

            test RDX,RDX
            je .L_41a482

            cmp RDX,1
            je .L_41a5bd

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
.L_41a482:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+80]
            jmp .L_41a381
.L_41a495:

            test RDX,RDX
            je .L_41a4b3

            cmp RDX,1
            je .L_41a5d3

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
.L_41a4b3:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+112]
            jmp .L_41a156
.L_41a4c6:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RCX
.L_41a4d5:

            mov RAX,QWORD PTR [RSP+40]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_41a381
.L_41a4e8:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RCX
.L_41a4f7:

            mov RAX,QWORD PTR [RSP+40]
            add RAX,16
            mov QWORD PTR [RSP+112],RAX
            jmp .L_41a156
.L_41a50a:

            lea RSI,QWORD PTR [R12+88]
            mov RDI,RBP
.L_41a512:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41a517:

            jmp .L_41a2f0
.L_41a51c:

            test RDX,RDX
            je .L_41a53a

            cmp RDX,1
            je .L_41a602

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
.L_41a53a:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_41a2c7
.L_41a548:

            test RDX,RDX
            je .L_41a566

            cmp RDX,1
            je .L_41a5ec

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
.L_41a566:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_41a41e
.L_41a574:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_41a583:

            mov RAX,QWORD PTR [RSP+40]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_41a41e
.L_41a596:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_41a5a5:

            mov RAX,QWORD PTR [RSP+40]
            add RAX,16
            mov QWORD PTR [RSP+112],RAX
            jmp .L_41a2c7
.L_41a5b8:

            call __stack_chk_fail@PLT
.L_41a5bd:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_41a482
.L_41a5d3:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            jmp .L_41a4b3
.L_41a5ec:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_41a566
.L_41a602:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            jmp .L_41a53a
.L_41a61b:

            mov RDI,QWORD PTR [RSP+48]
            add RBP,16
            cmp RDI,RBP
            je .L_41a62e

            call _ZdlPv@PLT
.L_41a62e:

            call _ZSt9terminatev@PLT
.L_41a633:

            jmp .L_41a61b
.L_41a635:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+RAX*1+152],R15
.L_41a656:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_41a66b:

            call _Unwind_Resume@PLT
.L_41a670:

            mov RBX,RAX
            jmp .L_41a656
.L_41a675:

            mov RBX,RAX
            mov RDI,R12
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41a688:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41a69d:

            jmp .L_41a61b
.L_41a6a2:

            jmp .L_41a61b
.L_41a6a7:

            jmp .L_41a675
.L_41a6a9:

            jmp .L_41a688
.L_41a6ab:

            jmp .L_41a635
.L_41a6ad:

            jmp .L_41a670
.L_41a6af:

            nop
.L_41a6b0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov RBP,RDX
            sub RSP,160
.L_41a6c8:

            lea RBX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RDI,RBX
.L_41a6e3:

            call .L_419080
.L_41a6e8:

            movzx ECX,WORD PTR [R13+2]
            mov RDX,QWORD PTR [RSP+40]
            mov EAX,ECX
            mov DWORD PTR [RDX+24],ECX
            test AL,32
            je .L_41a703

            mov DWORD PTR [RSP+52],2
.L_41a703:

            test RBP,RBP
            mov QWORD PTR [RSP+80],RBP
            jle .L_41a898

            cmp RBP,440
            jle .L_41a848

            sub RBP,440
            mov EAX,16777216
            shr RBP,3
            cmp RBP,16777216
            cmova RBP,RAX
            mov DWORD PTR [RSP+60],EBP
.L_41a73d:

            mov RDI,R13
            mov DWORD PTR [RSP+144],2
            mov BYTE PTR [RSP+56],R12B
.L_41a750:

            call .L_432240

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_41a8a8

            lea RBP,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov RDI,RBP
            call .L_417660

            xor ESI,ESI
            mov RDI,RBP
            mov R13D,EAX
            call .L_417870

            mov EBP,EAX
            mov EAX,DWORD PTR [RSP+60]
            mov RSI,QWORD PTR [RSP+8]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBX
            add EAX,EAX
            mov DWORD PTR [RSP+36],EAX
            call .L_41b6d0

            mov RDI,QWORD PTR [RSP+8]
            mov R14,RAX
            call .L_40f010

            cmp BYTE PTR [RSP+48],0
            jne .L_41a8a8

            xor ESI,ESI
            mov RDI,RBX
            mov BYTE PTR [RSP+56],0
            call .L_418310

            mov RSI,R14
            mov RDX,RAX
            mov RDI,RBX
            call .L_417e50

            mov R14,RAX
            mov RAX,QWORD PTR [RSP+40]
            test R12B,R12B
            mov DWORD PTR [RAX+4],R14D
            mov RAX,QWORD PTR [RSP+40]
            je .L_41a858

            mov BYTE PTR [RAX],BPL
            mov RAX,QWORD PTR [RSP+40]
            mov BYTE PTR [RAX+1],R13B
            mov RAX,QWORD PTR [RSP+40]
            cmp BYTE PTR [RAX],0
            je .L_41a86e
.L_41a7fd:

            mov EDX,DWORD PTR [RAX+4]
            mov DWORD PTR [RAX+8],EDX
.L_41a803:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,RBX
            mov BYTE PTR [RAX+2],R12B
            call .L_418880

            mov RBP,RAX
.L_41a817:

            mov RDI,RBX
            call .L_419000

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41a8af

            add RSP,160
.L_41a83c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a848:

            mov DWORD PTR [RSP+60],0
            jmp .L_41a73d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a858:

            mov BYTE PTR [RAX],R13B
            mov RAX,QWORD PTR [RSP+40]
            mov BYTE PTR [RAX+1],BPL
            mov RAX,QWORD PTR [RSP+40]
            cmp BYTE PTR [RAX],0
            jne .L_41a7fd
.L_41a86e:

            mov RDI,RBX
            call .L_418960
.L_41a876:

            mov RDX,R14
            mov RSI,RAX
            mov RDI,RBX
            call .L_417e50

            mov RDX,QWORD PTR [RSP+40]
            mov DWORD PTR [RDX+8],EAX
            jmp .L_41a803
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a898:

            mov DWORD PTR [RSP+60],100000
            jmp .L_41a73d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a8a8:

            xor EBP,EBP
            jmp .L_41a817
.L_41a8af:

            call __stack_chk_fail@PLT
.L_41a8b4:

            mov RBP,RAX
            mov RDI,RBX
            call .L_419000

            mov RDI,RBP
.L_41a8c2:

            call _Unwind_Resume@PLT
.L_41a8c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a8d0:

            mov RDX,RSI
            xor ESI,ESI
            jmp .L_41a6b0
.L_41a8da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41a8e0:

            mov RDX,RSI
            mov ESI,1
            jmp .L_41a6b0
.L_41a8ed:

            nop
            nop
            nop
.L_41a8f0:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBX
.L_41a900:

            lea RBX,QWORD PTR [RBP-192]
            mov R12D,ESI
            sub RSP,200
            mov RDI,RBX
            mov QWORD PTR [RBP-232],RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
.L_41a92a:

            call .L_419080
.L_41a92f:

            mov RDI,R13
.L_41a932:

            call .L_404460

            mov RCX,QWORD PTR [RBP-168]
            test AL,32
            mov RDX,QWORD PTR [R13+8]
            mov DWORD PTR [RCX+24],EAX
            je .L_41a953

            mov DWORD PTR [RBP-156],2
.L_41a953:

            test RDX,RDX
            mov QWORD PTR [RBP-128],RDX
            jle .L_41aac8

            cmp RDX,440
            jle .L_41aab0

            sub RDX,440
            mov EAX,16777216
            shr RDX,3
            cmp RDX,16777216
            cmova RDX,RAX
            mov DWORD PTR [RBP-148],EDX
            add EDX,EDX
.L_41a990:

            mov RSI,QWORD PTR [RBP-232]
            mov DWORD PTR [RBP-172],EDX
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBX
            mov DWORD PTR [RBP-64],R12D
            call .L_41b6d0

            mov RDI,QWORD PTR [RBP-232]
            mov R13,RAX
            mov R14,RAX
            shr R13,32
            mov R15D,EAX
            shl R13,32
            call .L_40f010

            cmp BYTE PTR [RBP-160],0
            jne .L_41aaf5

            test R12D,R12D
            jne .L_41a9f8

            mov RDI,RBX
            call .L_418960

            mov EDX,R14D
            mov RSI,RAX
            mov RDI,RBX
            or RDX,R13
            call .L_417e50

            mov R15D,EAX
.L_41a9f8:

            mov RAX,QWORD PTR [RBP-168]
            mov RDI,RBX
            mov DWORD PTR [RAX+4],R15D
            mov RAX,QWORD PTR [RBP-168]
            mov DWORD PTR [RAX+8],R15D
            mov RAX,QWORD PTR [RBP-168]
            mov BYTE PTR [RAX],1
            mov RAX,QWORD PTR [RBP-168]
            mov BYTE PTR [RAX+1],1
            call .L_418880

            test RAX,RAX
            mov RDI,RAX
            mov R14,RAX
            je .L_41aaf5

            lea RAX,QWORD PTR [RIP+.L_435f6d]
            lea RSI,QWORD PTR [RBP-208]
            push 0
            xor R9D,R9D
            mov R8D,3
            mov ECX,1
            mov QWORD PTR [RBP-208],RAX
            lea RAX,QWORD PTR [RBP-209]
            mov RDX,RSI
            mov DWORD PTR [RBP-200],12
            push RAX
.L_41aa74:

            call .L_421780
.L_41aa79:

            cmp BYTE PTR [RBP-209],0
            pop RAX
            pop RDX
            jne .L_41aae0
.L_41aa84:

            mov RDI,RBX
            call .L_419000

            mov RCX,QWORD PTR [RBP-56]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_41aafa

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41aab0:

            mov DWORD PTR [RBP-148],0
            xor EDX,EDX
            jmp .L_41a990
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aac8:

            mov DWORD PTR [RBP-148],100000
            mov EDX,200000
            jmp .L_41a990
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41aae0:

            mov RDI,R14
            call .L_42f3c0

            mov ESI,440
            mov RDI,R14
            call _ZdlPvm@PLT
.L_41aaf5:

            xor R14D,R14D
            jmp .L_41aa84
.L_41aafa:

            call __stack_chk_fail@PLT
.L_41aaff:

            mov R14,RAX
            mov RDI,RBX
            call .L_419000

            mov RDI,R14
.L_41ab0d:

            call _Unwind_Resume@PLT
.L_41ab12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ab20:

            jmp .L_41a8f0
.L_41ab25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ab30:

            mov RAX,RDX
            ret 
.L_41ab34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ab40:

            mov RAX,RSI
            ret 
.L_41ab44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ab50:

            mov RAX,RCX
            ret 
.L_41ab54:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ab60:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_41ab71:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_41abd4

            mov RDX,QWORD PTR [RAX+72]
            sub RDX,QWORD PTR [RAX+40]
            movabs RCX,-6148914691236517205
            sar RDX,3
            lea RSI,QWORD PTR [RDX+RDX*4-5]
            mov RDX,QWORD PTR [RAX+48]
            sub RDX,QWORD PTR [RAX+56]
            sar RDX,4
            imul RDX,RCX
            lea RSI,QWORD PTR [RDX+RSI*2]
            mov RDX,QWORD PTR [RAX+32]
            sub RDX,QWORD PTR [RAX+16]
            mov RAX,RDX
            sar RAX,4
            imul RAX,RCX
            add RSI,RAX
            jne .L_41ac00
.L_41abd4:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41b1d2

            add RSP,520
.L_41abf2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ac00:

            lea RBX,QWORD PTR [RSP+112]
            mov RBP,RDI
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41ac93:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41ac98:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_41ad52:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41ad57:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435d3a]
            mov EDX,18
.L_41ad67:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,147
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41ada3:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435d4d]
            mov EDX,16
.L_41adb3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41adb8:

            cmp BYTE PTR [RSP+112],0
            je .L_41af10
.L_41adc3:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_41adf5

            call _ZdlPv@PLT
.L_41adf5:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            movabs R12,-6148914691236517205
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ae50:

            mov RCX,QWORD PTR [RBX+72]
            mov RAX,RCX
            sub RAX,QWORD PTR [RBX+40]
            sar RAX,3
            lea RSI,QWORD PTR [RAX+RAX*4-5]
            mov RAX,RDX
            sub RAX,RDI
            sar RAX,4
            imul RAX,R12
            lea RSI,QWORD PTR [RAX+RSI*2]
            mov RAX,QWORD PTR [RBX+32]
            sub RAX,QWORD PTR [RBX+16]
            sar RAX,4
            imul RAX,R12
            add RSI,RAX
            je .L_41abd4

            cmp RDX,RDI
            je .L_41aec0
.L_41ae94:

            mov RDI,QWORD PTR [RDX-8]
            mov ESI,8
            call _ZdlPvm@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            cmp RDX,RDI
            je .L_41aed0

            sub RDX,48
            mov QWORD PTR [RBX+48],RDX
            jmp .L_41ae50
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41aec0:

            mov RDX,QWORD PTR [RCX-8]
            add RDX,480
            jmp .L_41ae94
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41aed0:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBX+56],RAX
            add RAX,432
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            jmp .L_41ae50
          .byte 0x90
.L_41af10:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_41b0f5

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_41b050

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RSP+64]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+8],RCX
.L_41af87:

            call .L_417a80
.L_41af8c:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41b107

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_41b165

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41b174

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_41afea:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_41b00e
.L_41b009:

            call _ZdlPv@PLT
.L_41b00e:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_41b01d:

            call write@PLT
.L_41b022:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_41adc3

            call _ZdlPv@PLT

            jmp .L_41adc3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b050:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_41b06a:

            call .L_417a80

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41b138

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_41b187

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41b196

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41b0cd:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41b009

            jmp .L_41b00e
.L_41b0f5:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41b102:

            jmp .L_41b00e
.L_41b107:

            test RDX,RDX
            je .L_41b125

            cmp RDX,1
            je .L_41b1bc

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_41b125:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_41afea
.L_41b138:

            test RDX,RDX
            je .L_41b152

            cmp RDX,1
            je .L_41b1a9

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_41b152:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41b0cd
.L_41b165:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41b174:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_41afea
.L_41b187:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41b196:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41b0cd
.L_41b1a9:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41b152
.L_41b1bc:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41b125
.L_41b1d2:

            call __stack_chk_fail@PLT
.L_41b1d7:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_41b1ee

            call _ZdlPv@PLT
.L_41b1ee:

            call _ZSt9terminatev@PLT
.L_41b1f3:

            jmp .L_41b1d7
.L_41b1f5:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RCX
.L_41b217:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
.L_41b22b:

            call _Unwind_Resume@PLT
.L_41b230:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41b243:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41b257:

            mov RBP,RAX
            jmp .L_41b217
.L_41b25c:

            nop
            nop
            nop
            nop
.L_41b260:

            lea RAX,QWORD PTR [RIP+.L_648d38]
            push R12
            push RBP
            push RBX
.L_41b26b:

            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_41ab60

            mov RBP,QWORD PTR [RBX+8]
            test RBP,RBP
            je .L_41b2d0

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_41b2ba

            mov RAX,QWORD PTR [RBP+72]
            mov RBX,QWORD PTR [RBP+40]
            lea R12,QWORD PTR [RAX+8]
            cmp R12,RBX
            jbe .L_41b2b5

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b2a0:

            mov RDI,QWORD PTR [RBX]
            add RBX,8
            call _ZdlPv@PLT

            cmp R12,RBX
            ja .L_41b2a0

            mov RDI,QWORD PTR [RBP]
.L_41b2b5:

            call _ZdlPv@PLT
.L_41b2ba:

            pop RBX
.L_41b2bb:

            mov RDI,RBP
            mov ESI,80
            pop RBP
            pop R12
            jmp _ZdlPvm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b2d0:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41b2d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b2e0:

            push RBX
            mov RBX,RDI
            call .L_41b260

            mov RDI,RBX
            mov ESI,24
            pop RBX
            jmp _ZdlPvm@PLT
.L_41b2f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b300:

            test RSI,RSI
            je .L_41b338

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_41b30f:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_41b300

            mov RBP,QWORD PTR [RBX+16]
            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            mov RBX,RBP
            jne .L_41b30f

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b338:

            ret 
.L_41b33a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b340:

            push RBP
            push RBX
            sub RSP,8
.L_41b346:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_41b3a0

            mov R8,QWORD PTR [RSI]
            jmp .L_41b36a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b358:

            mov RAX,QWORD PTR [RBX+16]
            mov R9D,1
            test RAX,RAX
            je .L_41b37f
.L_41b367:

            mov RBX,RAX
.L_41b36a:

            mov RCX,QWORD PTR [RBX+32]
            cmp R8,RCX
            jb .L_41b358

            mov RAX,QWORD PTR [RBX+24]
            xor R9D,R9D
            test RAX,RAX
            jne .L_41b367
.L_41b37f:

            test R9B,R9B
            mov R10,RBX
            jne .L_41b3a4
.L_41b387:

            xor EDX,EDX
            mov RAX,RBX
            cmp R8,RCX
            cmova RAX,RDX
            cmova RDX,R10
.L_41b397:

            add RSP,8
.L_41b39b:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_41b3a0:

            lea RBX,QWORD PTR [RDI+8]
.L_41b3a4:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_41b397

            mov RBP,RSI
            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R10,RBX
            mov R8,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RAX+32]
            mov RBX,RAX
            jmp .L_41b387
.L_41b3ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b3d0:

            push R13
            lea RAX,QWORD PTR [RDI+8]
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
.L_41b3e4:

            cmp RSI,RAX
            je .L_41b468

            mov R13,QWORD PTR [RDX]
            cmp R13,QWORD PTR [RSI+32]
            mov RBX,RSI
            jae .L_41b430

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            mov RDX,RAX
            je .L_41b424

            mov RDI,RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jbe .L_41b47c

            cmp QWORD PTR [RAX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmovne RDX,RBX
.L_41b424:

            add RSP,8
.L_41b428:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_41b430:

            jbe .L_41b498

            mov RCX,QWORD PTR [RDI+32]
            xor EAX,EAX
            cmp RCX,RSI
            mov RDX,RCX
            je .L_41b424

            mov RDI,RSI
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jae .L_41b47c

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RAX,RDX
            cmove RDX,RBX
            jmp .L_41b424
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b468:

            cmp QWORD PTR [RDI+40],0
            je .L_41b47c

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RDX]
            cmp QWORD PTR [RBX+32],RAX
            jb .L_41b4b0
.L_41b47c:

            add RSP,8
.L_41b480:

            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_41b340
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b498:

            add RSP,8
            mov RAX,RSI
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b4b0:

            add RSP,8
            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41b4c0:

            mov RCX,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR [RDI+48]
            lea RDX,QWORD PTR [RCX-48]
            cmp RAX,RDX
            je .L_41b500

            test RAX,RAX
            je .L_41b4ef

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+32]
            movups XMMWORD PTR [RAX+32],XMM0
.L_41b4ef:

            add RAX,48
            mov QWORD PTR [RDI+48],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b500:

            push R15
.L_41b502:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_41b514:

            mov R12,QWORD PTR [RDI+72]
            mov RCX,QWORD PTR [RDI]
            mov RDX,QWORD PTR [RDI+8]
            mov RAX,R12
            sub RAX,RCX
            mov RSI,RDX
            sar RAX,3
            sub RSI,RAX
            cmp RSI,1
            jbe .L_41b5a0
.L_41b535:

            mov EDI,480
            call _Znwm@PLT

            mov QWORD PTR [R12+8],RAX
            mov RAX,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_41b567

            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+32]
            movups XMMWORD PTR [RAX+32],XMM0
.L_41b567:

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            add RSP,8
.L_41b58e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b5a0:

            mov RSI,QWORD PTR [RDI+40]
            mov RAX,R12
            sub RAX,RSI
            sar RAX,3
            lea R14,QWORD PTR [RAX+2]
            lea R13,QWORD PTR [RAX+1]
            lea RAX,QWORD PTR [R14+R14*1]
            cmp RDX,RAX
            ja .L_41b668

            test RDX,RDX
            je .L_41b698

            lea R12,QWORD PTR [RDX+RDX*1+2]
            movabs RAX,2305843009213693951
            cmp R12,RAX
            ja .L_41b6c0
.L_41b5e4:

            lea RDI,QWORD PTR [R12*8]
            call _Znwm@PLT

            mov R15,RAX
            mov RAX,R12
            mov RSI,QWORD PTR [RBX+40]
            sub RAX,R14
            shr RAX,1
            lea R14,QWORD PTR [R15+RAX*8]
            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            cmp RDX,RSI
            je .L_41b61d

            sub RDX,RSI
            mov RDI,R14
            call memmove@PLT
.L_41b61d:

            mov RDI,QWORD PTR [RBX]
            shl R13,3
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],R15
            mov QWORD PTR [RBX+8],R12
.L_41b630:

            mov RAX,QWORD PTR [R14]
            lea R12,QWORD PTR [R14+R13*1-8]
            mov QWORD PTR [RBX+40],R14
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            add RAX,480
            mov QWORD PTR [RBX+32],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBX+56],RAX
            add RAX,480
            mov QWORD PTR [RBX+64],RAX
            jmp .L_41b535
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b668:

            sub RDX,R14
            add R12,8
            shl R13,3
            shr RDX,1
            lea R14,QWORD PTR [RCX+RDX*8]
            mov RDX,R12
            sub RDX,RSI
            cmp RSI,R14
            jbe .L_41b6a8

            cmp RSI,R12
            je .L_41b630

            mov RDI,R14
            call memmove@PLT

            jmp .L_41b630
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b698:

            mov R12D,3
            jmp .L_41b5e4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b6a8:

            cmp RSI,R12
            je .L_41b630

            mov RDI,R13
            sub RDI,RDX
            add RDI,R14
            call memmove@PLT

            jmp .L_41b630
.L_41b6c0:

            call _ZSt17__throw_bad_allocv@PLT
.L_41b6c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b6d0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov R13,RDI
            mov RBX,RDX
            shr R12,32
            sub RSP,568
.L_41b6f1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
            mov BYTE PTR [RSP+8],CL
.L_41b708:

            call .L_41ab60

            test RBP,RBP
            je .L_41bac0

            lea RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+16],RBP
            mov DWORD PTR [RSP+24],4294967295
            mov DWORD PTR [RSP+28],EBX
            mov DWORD PTR [RSP+32],R12D
            mov QWORD PTR [RSP+36],0
            mov QWORD PTR [RSP+44],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP],RSI
.L_41b754:

            call .L_41b4c0

            mov RBP,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [RBP+56]
            mov RDI,QWORD PTR [RBP+48]
            mov R8,QWORD PTR [RBP+72]
.L_41b769:

            cmp RCX,RDI
            mov RBX,RDI
            je .L_41b878

            nop
            nop
            nop
.L_41b778:

            mov R9D,DWORD PTR [RBX-40]
            lea R12,QWORD PTR [RBX-48]
            mov R14,QWORD PTR [RBX-48]
            cmp R9D,-1
            jne .L_41b890

            mov EAX,DWORD PTR [R13+20]
            mov R8,QWORD PTR [R13]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [R13+20],EAX
            js .L_41b960

            mov BYTE PTR [RSP+16],0
            mov RDX,QWORD PTR [R12+12]
            mov RSI,R14
            mov RCX,QWORD PTR [RSP]
            mov RDI,R13
            call QWORD PTR [R8+16]

            cmp BYTE PTR [RSP+16],0
            mov QWORD PTR [R12+20],RAX
            je .L_41b990

            mov RBP,QWORD PTR [R13+8]
            mov R12D,DWORD PTR [RBX-28]
            mov R15D,DWORD PTR [RBX-24]
            mov RDI,QWORD PTR [RBP+48]
            mov RCX,QWORD PTR [RBP+56]
.L_41b7e1:

            cmp RDI,RCX
            je .L_41b901
.L_41b7ea:

            sub RDI,48
            mov QWORD PTR [RBP+48],RDI
.L_41b7f2:

            mov R8,QWORD PTR [RBP+72]
            mov RDX,RDI
            movabs RSI,-6148914691236517205
            sub RDX,RCX
            sar RDX,4
            mov RAX,R8
            sub RAX,QWORD PTR [RBP+40]
            imul RDX,RSI
            sar RAX,3
            lea RAX,QWORD PTR [RAX+RAX*4-5]
            lea RAX,QWORD PTR [RDX+RAX*2]
            mov RDX,QWORD PTR [RBP+32]
            sub RDX,QWORD PTR [RBP+16]
            sar RDX,4
            imul RDX,RSI
            add RAX,RDX
            je .L_41ba88

            cmp RDI,RCX
            mov RDX,RDI
            je .L_41b950
.L_41b847:

            mov RSI,QWORD PTR [RDX-8]
            movsxd RAX,DWORD PTR [RDX-40]
            test RSI,RSI
            je .L_41b940

            lea RAX,QWORD PTR [RSI+RAX*8]
            mov DWORD PTR [RAX],R12D
            mov DWORD PTR [RAX+4],R15D
            mov EAX,DWORD PTR [RDX-40]
.L_41b866:

            add EAX,1
            cmp RCX,RDI
            mov RBX,RDI
            mov DWORD PTR [RDX-40],EAX
            jne .L_41b778
.L_41b878:

            mov RBX,QWORD PTR [R8-8]
            add RBX,480
            jmp .L_41b778
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b890:

            movzx EAX,WORD PTR [R14+6]
.L_41b895:

            test AX,AX
            je .L_41b8b1

            cmp AX,1
            jbe .L_41ba0c

            cmp EAX,R9D
            mov RDX,QWORD PTR [R14+8]
            jg .L_41ba19
.L_41b8b1:

            mov RAX,QWORD PTR [R13]
            mov RCX,QWORD PTR [R12+20]
            mov RSI,R14
            mov RDX,QWORD PTR [R12+12]
            mov R8,QWORD PTR [RBX-8]
            mov RDI,R13
            call QWORD PTR [RAX+24]

            mov R12D,EAX
            shr RAX,32
            cmp WORD PTR [R14+6],1
            mov R15,RAX
            jbe .L_41b8ec

            mov RDI,QWORD PTR [RBX-8]
            test RDI,RDI
            je .L_41b8ec

            call _ZdaPv@PLT
.L_41b8ec:

            mov RBP,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [RBP+48]
            mov RCX,QWORD PTR [RBP+56]
            cmp RDI,RCX
            jne .L_41b7ea
.L_41b901:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBP+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [RBP+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBP+56],RAX
            add RAX,432
            mov QWORD PTR [RBP+48],RAX
            mov QWORD PTR [RBP+64],RDX
            mov RBP,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [RBP+48]
            mov RCX,QWORD PTR [RBP+56]
            jmp .L_41b7f2
.L_41b940:

            mov DWORD PTR [RDX-20],R12D
            mov DWORD PTR [RDX-16],R15D
            jmp .L_41b866
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b950:

            mov RAX,QWORD PTR [R8-8]
            lea RDX,QWORD PTR [RAX+480]
            jmp .L_41b847
.L_41b960:

            mov RAX,QWORD PTR [R8+40]
            lea RBX,QWORD PTR [RIP+.L_417640]
            mov BYTE PTR [R13+16],1
            cmp RAX,RBX
            jne .L_41be90

            mov BYTE PTR [R13+32],1
            xor R15D,R15D
            xor R12D,R12D
            jmp .L_41b7e1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b990:

            movzx EAX,WORD PTR [R14+6]
            mov DWORD PTR [RBX-40],0
            mov QWORD PTR [RBX-8],0
            cmp AX,1
            je .L_41ba00

            mov R9D,0
            jbe .L_41b8b1

            movzx EBP,AX
            lea RDI,QWORD PTR [RBP*8]
            call _Znam@PLT
.L_41b9c6:

            lea RDX,QWORD PTR [RBP-1]
            mov RCX,RAX
            nop
            nop
            nop
.L_41b9d0:

            sub RDX,1
            mov DWORD PTR [RCX],0
            mov DWORD PTR [RCX+4],0
            add RCX,8
            cmp RDX,-1
            jne .L_41b9d0

            mov QWORD PTR [RBX-8],RAX
            mov R9D,DWORD PTR [RBX-40]
            movzx EAX,WORD PTR [R14+6]
            jmp .L_41b895
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ba00:

            lea RDX,QWORD PTR [R12+28]
            xor R9D,R9D
            mov QWORD PTR [RBX-8],RDX
.L_41ba0c:

            cmp EAX,R9D
            lea RDX,QWORD PTR [R14+8]
            jle .L_41b8b1
.L_41ba19:

            movsxd RBP,R9D
            test R9D,R9D
            lea RCX,QWORD PTR [RBP*8]
            mov RAX,QWORD PTR [RDX+RBP*8]
            jle .L_41ba3f

            cmp BYTE PTR [RSP+8],0
            je .L_41ba3f

            cmp QWORD PTR [RDX+RCX*1-8],RAX
            je .L_41be60
.L_41ba3f:

            mov ECX,DWORD PTR [RBX-28]
            mov EDX,DWORD PTR [RBX-24]
            mov RDI,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+16],RAX
            mov DWORD PTR [RSP+24],4294967295
            mov QWORD PTR [RSP+36],0
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+32],EDX
            mov QWORD PTR [RSP+44],0
            mov QWORD PTR [RSP+56],0
            mov RSI,QWORD PTR [RSP]
            jmp .L_41b754
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ba88:

            mov RAX,R15
            mov ESI,R12D
            shl RAX,32
            or RAX,RSI
.L_41ba95:

            mov RBX,QWORD PTR [RSP+552]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41c063

            add RSP,568
.L_41bab3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_41bac0:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+504],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],R14
            mov QWORD PTR [RSP+496],0
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            mov QWORD PTR [RSP+168],R13
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41bb58:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41bb5d:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            lea RAX,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+168],R15
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_41bc1a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41bc1f:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435d3a]
            mov EDX,18
.L_41bc2f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,160
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41bc6b:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435d5e]
            mov EDX,9
.L_41bc7b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41bc80:

            cmp BYTE PTR [RSP+160],0
            je .L_41bd20
.L_41bc8e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+64]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],R15
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_41bcca

            call _ZdlPv@PLT
.L_41bcca:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            shl R12,32
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RSP+RAX*1+168],RCX
            mov QWORD PTR [RSP+280],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov EAX,EBX
            or RAX,R12
            jmp .L_41ba95
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bd20:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_41bf77

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            ja .L_41beb8

            lea RCX,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+96],RAX
.L_41bd96:

            call .L_417a80
.L_41bd9b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41bf89

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_41bfed

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41bffc

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41bdf9:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_41be1d
.L_41be18:

            call _ZdlPv@PLT
.L_41be1d:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_41be2c:

            call write@PLT
.L_41be31:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov BYTE PTR [RSP+160],1
            add RAX,16
            cmp RDI,RAX
            je .L_41bc8e

            call _ZdlPv@PLT

            jmp .L_41bc8e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41be60:

            mov R12,QWORD PTR [RBX-8]
            mov RAX,QWORD PTR [R13]
            mov RDI,R13
            mov RSI,QWORD PTR [R12+RCX*1-8]
.L_41be70:

            call QWORD PTR [RAX+32]

            mov QWORD PTR [R12+RBP*8],RAX
            mov RBP,QWORD PTR [R13+8]
            add DWORD PTR [RBX-40],1
            mov RCX,QWORD PTR [RBP+56]
            mov RDI,QWORD PTR [RBP+48]
            mov R8,QWORD PTR [RBP+72]
            jmp .L_41b769
.L_41be90:

            mov RDX,QWORD PTR [R12+12]
            mov RDI,R13
            mov RSI,R14
            call RAX
.L_41be9d:

            mov RBP,QWORD PTR [R13+8]
            mov R12D,EAX
            shr RAX,32
            mov R15,RAX
            mov RDI,QWORD PTR [RBP+48]
            mov RCX,QWORD PTR [RBP+56]
            jmp .L_41b7e1
.L_41beb8:

            lea RCX,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_41bed7:

            call .L_417a80

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41bfba

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+144]
            add RCX,16
            cmp RDI,RCX
            je .L_41c00f

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41c01e

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_41bf49:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+128]
            add RAX,16
            cmp RDI,RAX
            jne .L_41be18

            jmp .L_41be1d
.L_41bf77:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41bf84:

            jmp .L_41be1d
.L_41bf89:

            test RDX,RDX
            je .L_41bfa7

            cmp RDX,1
            je .L_41c04d

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_41bfa7:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41bdf9
.L_41bfba:

            test RDX,RDX
            je .L_41bfd7

            cmp RDX,1
            je .L_41c034

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_41bfd7:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_41bf49
.L_41bfed:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41bffc:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41bdf9
.L_41c00f:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41c01e:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_41bf49
.L_41c034:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41bfd7
.L_41c04d:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41bfa7
.L_41c063:

            call __stack_chk_fail@PLT
.L_41c068:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_41c07f

            call _ZdlPv@PLT
.L_41c07f:

            call _ZSt9terminatev@PLT
.L_41c084:

            jmp .L_41c068
.L_41c086:

            mov RBX,RAX
.L_41c089:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+280],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_41c09d:

            call _Unwind_Resume@PLT
.L_41c0a2:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41c0b5:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RSP+RAX*1+168],RCX
            jmp .L_41c089
.L_41c0de:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41c0f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c100:

            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_41c110

            jmp _ZdaPv@PLT
          .byte 0x66
          .byte 0x90
.L_41c110:

            ret 
.L_41c112:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c120:

            test RSI,RSI
            je .L_41c167

            push R12
            lea R12,QWORD PTR [RDI+RSI*8]
            push RBP
            push RBX
            mov RBP,RDI
.L_41c130:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_41c151

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c140:

            mov RBX,QWORD PTR [RDI+8]
            call _ZdlPv@PLT

            test RBX,RBX
            mov RDI,RBX
            jne .L_41c140
.L_41c151:

            mov QWORD PTR [RBP],0
            add RBP,8
            cmp R12,RBP
            jne .L_41c130

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41c167:

            ret 
.L_41c169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c170:

            push RBX
.L_41c171:

            lea RBX,QWORD PTR [RDI+1]
            movabs RAX,2305843009213693951
            cmp RBX,RAX
            ja .L_41c1b9

            shl RBX,3
            mov RDI,RBX
            call _Znwm@PLT

            lea RCX,QWORD PTR [RAX+RBX*1-8]
            cmp RAX,RCX
            je .L_41c1b0

            mov RDX,RAX
            nop
            nop
            nop
.L_41c1a0:

            mov QWORD PTR [RDX],0
            add RDX,8
            cmp RCX,RDX
            jne .L_41c1a0
.L_41c1b0:

            mov QWORD PTR [RCX],4096
            pop RBX
.L_41c1b8:

            ret 
.L_41c1b9:

            call _ZSt17__throw_bad_allocv@PLT
.L_41c1be:

            nop
            nop
.L_41c1c0:

            cmp RDI,RSI
            je .L_41c258

            push R14
            push R13
            lea R13,QWORD PTR [RDI+4]
            push R12
            push RBP
            cmp RSI,R13
            push RBX
.L_41c1d8:

            mov RBX,R13
            je .L_41c24c

            lea RAX,QWORD PTR [RDI+8]
            mov R12,RDI
            sub RSI,RAX
            shr RSI,2
            lea R14,QWORD PTR [RDI+RSI*4+8]
            jmp .L_41c21b

            nop
            nop
            nop
            nop
            nop
            nop
.L_41c1f8:

            cmp R12,RBX
            je .L_41c20e

            mov RDX,RBX
            mov RDI,R13
            mov RSI,R12
            sub RDX,R12
            call memmove@PLT
.L_41c20e:

            add RBX,4
            mov DWORD PTR [R12],EBP
            cmp R14,RBX
            je .L_41c24c
.L_41c21b:

            mov EBP,DWORD PTR [RBX]
            cmp EBP,DWORD PTR [R12]
            jl .L_41c1f8

            mov EDX,DWORD PTR [RBX-4]
            lea RAX,QWORD PTR [RBX-4]
            cmp EBP,EDX
            jl .L_41c233

            jmp .L_41c260
.L_41c230:

            mov RAX,RCX
.L_41c233:

            mov DWORD PTR [RAX+4],EDX
            mov EDX,DWORD PTR [RAX-4]
            lea RCX,QWORD PTR [RAX-4]
            cmp EBP,EDX
            jl .L_41c230

            mov DWORD PTR [RAX],EBP
.L_41c243:

            add RBX,4
            cmp R14,RBX
            jne .L_41c21b
.L_41c24c:

            pop RBX
.L_41c24d:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c258:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c260:

            mov RAX,RBX
            mov DWORD PTR [RAX],EBP
            jmp .L_41c243
.L_41c267:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c270:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_41c27e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_41c29c

            test RDX,RDX
            jne .L_41c327
.L_41c29c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_41c2f0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_41c320

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_41c2c4:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41c333

            add RSP,16
.L_41c2e4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c2f0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_41c309:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_41c2c4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c320:

            test RBX,RBX
            je .L_41c2c4

            jmp .L_41c309
.L_41c327:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_41c333:

            call __stack_chk_fail@PLT
.L_41c338:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c340:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDX
            mov RBP,RDI
            sub RSP,16
.L_41c351:

            mov RDX,QWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_41c3a9

            mov EAX,DWORD PTR [RDX+8]
            mov RDI,QWORD PTR [RDX]
            lea RCX,QWORD PTR [RSP+4]
            mov EDX,DWORD PTR [RDX+12]
            mov DWORD PTR [RSP+4],0
            shl EAX,2
            lea ESI,DWORD PTR [RAX+3]
            test EAX,EAX
            mov DWORD PTR [RSP],EDX
            mov RDX,RSP
            cmovns ESI,EAX
            sar ESI,2
            movsxd RSI,ESI
            call .L_435430

            mov EAX,DWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+4]
            shl RAX,32
            or RAX,RDX
.L_41c3a9:

            mov R9,QWORD PTR [R12]
            xor EDX,EDX
            mov R10,QWORD PTR [RBP]
            div R9
            lea RDX,QWORD PTR [R10+RDX*8]
            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            je .L_41c468

            mov RSI,QWORD PTR [RBX]
            mov RCX,QWORD PTR [RAX]
            cmp RSI,RCX
            je .L_41c403

            test RSI,RSI
            sete R8B
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c3e0:

            test RCX,RCX
            je .L_41c3f2

            test R8B,R8B
            jne .L_41c3f2

            mov EDI,DWORD PTR [RSI+8]
            cmp EDI,DWORD PTR [RCX+8]
            je .L_41c420
.L_41c3f2:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_41c468

            mov RCX,QWORD PTR [RAX]
            cmp RCX,RSI
            jne .L_41c3e0
.L_41c403:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41c471

            add RSP,16
.L_41c417:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c420:

            mov EBX,DWORD PTR [RCX+12]
            cmp DWORD PTR [RSI+12],EBX
            jne .L_41c3f2

            test EDI,EDI
            jle .L_41c403

            mov RBX,QWORD PTR [RSI]
            mov R11,QWORD PTR [RCX]
            mov ECX,DWORD PTR [R11]
            cmp DWORD PTR [RBX],ECX
            jne .L_41c3f2

            lea ECX,DWORD PTR [RDI-1]
            lea RBP,QWORD PTR [RCX*4+4]
            mov ECX,4
            jmp .L_41c45e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c450:

            mov EDI,DWORD PTR [RBX+RCX*1]
            add RCX,4
            cmp EDI,DWORD PTR [R11+RCX*1-4]
            jne .L_41c3f2
.L_41c45e:

            cmp RBP,RCX
            jne .L_41c450

            jmp .L_41c403
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c468:

            lea RDX,QWORD PTR [R10+R9*8]
            mov RAX,QWORD PTR [RDX]
            jmp .L_41c403
.L_41c471:

            call __stack_chk_fail@PLT
.L_41c476:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c480:

            push R15
            push R14
            lea RAX,QWORD PTR [RDI+16]
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,24
.L_41c495:

            mov BYTE PTR [RDI+16],0
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+8],RAX
            movsxd RAX,DWORD PTR [RSI]
            mov QWORD PTR [RDI+8],0
            mov RBX,QWORD PTR [RSI+16]
            shl RAX,2
            test RAX,RAX
            je .L_41c528

            lea RDX,QWORD PTR [RIP+.L_4369d8]
            mov RBP,RSI
            lea R13,QWORD PTR [RIP+.L_43617f]
            lea R14,QWORD PTR [RIP+.L_436181]
            mov R15,RDX
            jmp .L_41c505
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c4e0:

            mov RSI,R14
            mov RDI,R12
            xor EAX,EAX
.L_41c4e8:

            call .L_414ea0

            mov RDX,R15
.L_41c4f0:

            movsxd RCX,DWORD PTR [RBP]
            mov RAX,QWORD PTR [RBP+16]
            add RBX,4
            lea RAX,QWORD PTR [RAX+RCX*4]
            cmp RBX,RAX
            je .L_41c528
.L_41c505:

            mov ECX,DWORD PTR [RBX]
            cmp ECX,DWORD PTR [RBP+28]
            jge .L_41c4e0

            lea RSI,QWORD PTR [RIP+.L_436183]
            mov RDI,R12
            xor EAX,EAX
            call .L_414ea0
.L_41c51d:

            mov RDX,R13
            jmp .L_41c4f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c528:

            add RSP,24
.L_41c52c:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41c53a:

            mov RDI,QWORD PTR [R12]
            cmp QWORD PTR [RSP+8],RDI
            mov RBX,RAX
            je .L_41c54d

            call _ZdlPv@PLT
.L_41c54d:

            mov RDI,RBX
.L_41c550:

            call _Unwind_Resume@PLT
.L_41c555:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c560:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,56
.L_41c571:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_41c6d0

            cmp RSI,1
            mov RBP,RSI
            je .L_41c6f0

            cmp RSI,2
            je .L_41c6b0

            mov R12,RSP
            mov RDX,RSI
            lea RSI,QWORD PTR [RIP+.L_43618e]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+8],0
            mov BYTE PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            xor EAX,EAX
.L_41c5ca:

            call .L_414ea0

            mov EAX,DWORD PTR [RBP+8]
            test EAX,EAX
            jle .L_41c63c

            xor EBX,EBX
            lea RDX,QWORD PTR [RIP+.L_4369d8]
            lea R14,QWORD PTR [RIP+.L_436183]
            lea R15,QWORD PTR [RIP+.L_43617f]
            jmp .L_41c60c
          .byte 0x90
.L_41c5f0:

            mov RSI,R14
            mov RDI,R12
            xor EAX,EAX
            call .L_414ea0

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RBP+8],EAX
            mov RDX,R15
            jle .L_41c63c
.L_41c60c:

            mov RAX,QWORD PTR [RBP]
            mov ECX,DWORD PTR [RAX+RBX*4]
            cmp ECX,-1
            jne .L_41c5f0

            lea RSI,QWORD PTR [RIP+.L_436181]
            mov RDI,R12
            xor EAX,EAX
            call .L_414ea0

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RBP+8],EAX
            lea RDX,QWORD PTR [RIP+.L_4369d8]
            jg .L_41c60c
.L_41c63c:

            mov EDX,DWORD PTR [RBP+12]
            lea RSI,QWORD PTR [RIP+.L_436193]
            mov RDI,R12
            xor EAX,EAX
            call .L_414ea0
.L_41c650:

            lea RAX,QWORD PTR [R13+16]
            add R12,16
            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RSP]
            cmp RAX,R12
            je .L_41c6a0

            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [R13+16],RAX
.L_41c672:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R13+8],RAX
.L_41c67b:

            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_41c70c

            add RSP,56
.L_41c692:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c6a0:

            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [R13+16],XMM0
            jmp .L_41c672
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c6b0:

            lea RDX,QWORD PTR [RIP+.L_43618d]
            lea RAX,QWORD PTR [RDI+16]
            lea RSI,QWORD PTR [RDX-1]
            mov QWORD PTR [RDI],RAX
.L_41c6c2:

            call .L_41c270

            jmp .L_41c67b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c6d0:

            lea RDX,QWORD PTR [RIP+.L_436189]
            lea RAX,QWORD PTR [RDI+16]
            lea RSI,QWORD PTR [RDX-1]
            mov QWORD PTR [RDI],RAX
            call .L_41c270

            jmp .L_41c67b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c6f0:

            lea RDX,QWORD PTR [RIP+.L_43618b]
            lea RAX,QWORD PTR [RDI+16]
            lea RSI,QWORD PTR [RDX-1]
            mov QWORD PTR [RDI],RAX
            call .L_41c270

            jmp .L_41c67b
.L_41c70c:

            call __stack_chk_fail@PLT
.L_41c711:

            mov RDI,QWORD PTR [RSP]
            add R12,16
            mov RBX,RAX
            cmp RDI,R12
            je .L_41c726

            call _ZdlPv@PLT
.L_41c726:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41c72e:

            nop
            nop
.L_41c730:

            mov EAX,DWORD PTR [RSI+28]
            mov DWORD PTR [RSI],0
            mov DWORD PTR [RSI+36],EAX
            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            jle .L_41c7af

            mov RCX,QWORD PTR [RDI]
            mov EAX,1
            jmp .L_41c764
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c750:

            cmp DWORD PTR [RSI+4],EDX
            mov BYTE PTR [RSI+40],0
            ja .L_41c788
.L_41c759:

            mov EDX,EAX
            add RAX,1
            cmp DWORD PTR [RDI+8],EDX
            jle .L_41c7af
.L_41c764:

            mov EDX,DWORD PTR [RCX+RAX*4-4]
            cmp EDX,-1
            jne .L_41c750

            cmp BYTE PTR [RSI+40],0
            jne .L_41c759

            mov EDX,DWORD PTR [RSI+36]
            cmp DWORD PTR [RSI+4],EDX
            lea R8D,DWORD PTR [RDX+1]
            mov DWORD PTR [RSI+36],R8D
            jbe .L_41c759

            nop
            nop
            nop
            nop
            nop
.L_41c788:

            mov R10D,DWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+8]
            movsxd R9,EDX
            mov DWORD PTR [R8+R9*4],R10D
            movsxd R9,DWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+16]
            mov DWORD PTR [R8+R9*4],EDX
            mov EDX,EAX
            add DWORD PTR [RSI],1
            add RAX,1
            cmp DWORD PTR [RDI+8],EDX
            jg .L_41c764
.L_41c7af:

            ret 
.L_41c7b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c7c0:

            mov R11,QWORD PTR [RDI+96]
            mov R8D,1
            cmp EDX,-1
            push R13
            lea EAX,DWORD PTR [R8-1]
            push R12
            push RBP
            lea RBP,QWORD PTR [RIP+.L_436218]
            push RBX
.L_41c7de:

            mov DWORD PTR [R11],EDX
            je .L_41c8aa

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c7f0:

            test EDX,EDX
            je .L_41c8b0

            cmp DWORD PTR [RSI+4],EDX
            movsxd R9,EDX
            jbe .L_41c8f0

            mov R10,QWORD PTR [RSI+8]
            mov R12D,DWORD PTR [RSI]
            mov R13,QWORD PTR [RSI+16]
            lea RBX,QWORD PTR [R10+R9*4]
            movsxd R10,DWORD PTR [RBX]
            cmp R10D,R12D
            jae .L_41c826

            cmp DWORD PTR [R13+R10*4],EDX
            je .L_41c8b0
.L_41c826:

            mov BYTE PTR [RSI+40],0
            mov DWORD PTR [RBX],R12D
            movsxd R10,DWORD PTR [RSI]
            mov DWORD PTR [R13+R10*4],EDX
            add DWORD PTR [RSI],1
.L_41c838:

            mov RBX,QWORD PTR [RDI]
            movsxd R10,EAX
            shl R10,2
            lea R13,QWORD PTR [R11+R10*1]
            mov RBX,QWORD PTR [RBX+32]
            lea R12,QWORD PTR [RBX+R9*8]
            mov EBX,DWORD PTR [R12]
            mov R9D,EBX
            and R9D,7
            cmp R9D,6
            ja .L_41c8b0

            movsxd R9,DWORD PTR [RBP+R9*4]
            add R9,RBP
            jmp R9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c870:

            mov EDX,DWORD PTR [R12+4]
            mov R9D,ECX
            and R9D,EDX
            cmp R9D,EDX
            jne .L_41c8b0
.L_41c880:

            shr EBX,3
            mov EAX,R8D
            mov DWORD PTR [R13],EBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c890:

            lea EDX,DWORD PTR [RAX-1]
            mov R8D,EAX
            lea EAX,DWORD PTR [R8-1]
            movsxd RDX,EDX
            mov EDX,DWORD PTR [R11+RDX*4]
            cmp EDX,-1
            jne .L_41c7f0
.L_41c8aa:

            cmp BYTE PTR [RSI+40],0
            je .L_41c900
.L_41c8b0:

            test EAX,EAX
            jne .L_41c890
.L_41c8b4:

            pop RBX
.L_41c8b5:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c8c0:

            mov EAX,DWORD PTR [R12+4]
            lea R9,QWORD PTR [R11+R10*1+4]
            mov DWORD PTR [R13],EAX
            mov EBX,DWORD PTR [RSI+32]
            lea EAX,DWORD PTR [R8+1]
            test EBX,EBX
            jle .L_41c8e1

            mov RBX,QWORD PTR [RDI]
            cmp DWORD PTR [RBX+8],EDX
            je .L_41c940
.L_41c8e1:

            mov EDX,DWORD PTR [R12]
            shr EDX,3
            mov DWORD PTR [R9],EDX
            jmp .L_41c890
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c8f0:

            mov BYTE PTR [RSI+40],0
            jmp .L_41c838
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c900:

            mov EDX,DWORD PTR [RSI+36]
            cmp DWORD PTR [RSI+4],EDX
            lea R8D,DWORD PTR [RDX+1]
            mov DWORD PTR [RSI+36],R8D
            jbe .L_41c8b0

            mov R10D,DWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+8]
            movsxd R9,EDX
            mov DWORD PTR [R8+R9*4],R10D
            movsxd R9,DWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+16]
            mov DWORD PTR [R8+R9*4],EDX
            add DWORD PTR [RSI],1
            test EAX,EAX
            jne .L_41c890

            jmp .L_41c8b4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c940:

            cmp DWORD PTR [RBX+4],EDX
            je .L_41c8e1

            mov DWORD PTR [R9],4294967295
            lea EAX,DWORD PTR [R8+2]
            lea R9,QWORD PTR [R11+R10*1+8]
            jmp .L_41c8e1
.L_41c957:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c960:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_41c96a:

            mov EAX,DWORD PTR [RDX+28]
            mov DWORD PTR [RDX],0
            mov RBX,QWORD PTR [RSI+16]
            mov DWORD PTR [RDX+36],EAX
            movsxd RAX,DWORD PTR [RSI]
            shl RAX,2
            test RAX,RAX
            je .L_41c9e0

            mov R14D,ECX
            mov R12,RDX
            mov RBP,RSI
            mov R13,RDI
            mov R15D,4294967295
            jmp .L_41c9c3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c9a0:

            mov EDX,R15D
            mov RSI,R12
            mov RDI,R13
            call .L_41c7c0
.L_41c9ae:

            movsxd RDX,DWORD PTR [RBP]
            mov RAX,QWORD PTR [RBP+16]
            add RBX,4
            lea RAX,QWORD PTR [RAX+RDX*4]
            cmp RBX,RAX
            je .L_41c9e0
.L_41c9c3:

            mov EDX,DWORD PTR [RBX]
            cmp EDX,DWORD PTR [RBP+28]
            mov ECX,R14D
            jge .L_41c9a0

            mov RSI,R12
            mov RDI,R13
            call .L_41c7c0

            jmp .L_41c9ae

            nop
            nop
            nop
            nop
            nop
            nop
.L_41c9e0:

            pop RBX
.L_41c9e1:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41c9eb:

            nop
            nop
            nop
            nop
            nop
.L_41c9f0:

            mov EAX,DWORD PTR [RDX+28]
            mov DWORD PTR [RDX],0
            mov R11,QWORD PTR [RSI+16]
            mov DWORD PTR [RDX+36],EAX
            movsxd RAX,DWORD PTR [RSI]
            mov R10,RAX
            shl RAX,2
            test RAX,RAX
            je .L_41cb70

            push R15
            push R14
            lea R15D,DWORD PTR [RCX-65]
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov R12,RDX
            mov RBX,R11
            mov RBP,RSI
            mov R14,RDI
            sub RSP,16
.L_41ca34:

            movsxd RAX,DWORD PTR [RBX]
            cmp EAX,DWORD PTR [RBP+28]
            jl .L_41ca58

            cmp BYTE PTR [R9],0
            je .L_41cab0
.L_41ca42:

            add RSP,16
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ca58:

            mov RSI,QWORD PTR [R14]
            mov RDX,QWORD PTR [RSI+32]
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov EDX,DWORD PTR [RAX]
            mov ECX,EDX
            and ECX,7
            cmp ECX,2
            je .L_41cb10

            cmp ECX,5
            jne .L_41ca98

            cmp BYTE PTR [RSI+1],0
            je .L_41ca87

            cmp R13D,256
            jne .L_41ca98
.L_41ca87:

            mov EAX,DWORD PTR [RSP+72]
            mov BYTE PTR [R9],1
            test EAX,EAX
            je .L_41ca42

            nop
            nop
            nop
            nop
            nop
.L_41ca98:

            movsxd RAX,R10D
            add RBX,4
            lea RAX,QWORD PTR [R11+RAX*4]
            cmp RBX,RAX
            jne .L_41ca34

            jmp .L_41ca42
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cab0:

            cmp BYTE PTR [R12+40],0
            jne .L_41ca98

            mov EAX,DWORD PTR [R12+36]
            cmp DWORD PTR [R12+4],EAX
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [R12+36],EDX
            jbe .L_41caec

            mov ESI,DWORD PTR [R12]
            mov RDX,QWORD PTR [R12+8]
            movsxd RCX,EAX
            mov DWORD PTR [RDX+RCX*4],ESI
            movsxd RCX,DWORD PTR [R12]
            mov RDX,QWORD PTR [R12+16]
            mov DWORD PTR [RDX+RCX*4],EAX
            add DWORD PTR [R12],1
.L_41caec:

            mov R10D,DWORD PTR [RBP]
            add RBX,4
            movsxd RAX,R10D
            lea RAX,QWORD PTR [R11+RAX*4]
            cmp RBX,RAX
            jne .L_41ca34

            jmp .L_41ca42
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cb10:

            cmp BYTE PTR [RAX+6],0
            movzx ESI,BYTE PTR [RAX+4]
            mov ECX,R13D
            je .L_41cb29

            lea ECX,DWORD PTR [R13+32]
            cmp R15D,26
            cmovae ECX,R13D
.L_41cb29:

            cmp ESI,ECX
            jg .L_41ca98

            movzx EAX,BYTE PTR [RAX+5]
            cmp ECX,EAX
            jg .L_41ca98

            mov ECX,R8D
            shr EDX,3
            mov RSI,R12
            mov RDI,R14
            mov QWORD PTR [RSP+8],R9
            mov DWORD PTR [RSP+4],R8D
            call .L_41c7c0

            mov R11,QWORD PTR [RBP+16]
            mov R10D,DWORD PTR [RBP]
            mov R8D,DWORD PTR [RSP+4]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_41ca98
          .byte 0x90
.L_41cb70:

            ret 
.L_41cb72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cb80:

            sub RSP,8
            mov QWORD PTR [RDI],RSI
            mov BYTE PTR [RDI+8],0
            mov RDI,RSI
            call pthread_rwlock_rdlock@PLT

            test EAX,EAX
            jne .L_41cb9c

            add RSP,8
            ret 
.L_41cb9c:

            call abort@PLT
.L_41cba1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cbb0:

            cmp BYTE PTR [RDI+8],0
            je .L_41cbc0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cbc0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_41cbe2

            mov RDI,QWORD PTR [RBX]
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_41cbe2

            mov BYTE PTR [RBX+8],1
            pop RBX
            ret 
.L_41cbe2:

            call abort@PLT
.L_41cbe7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cbf0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_41cc05

            add RSP,8
            ret 
.L_41cc05:

            call abort@PLT
.L_41cc0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41cc10:

            cmp RDX,2
            mov QWORD PTR [RDI],RSI
            jbe .L_41cc78

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RDX
            sub RSP,8
.L_41cc25:

            mov EAX,DWORD PTR [RDX+12]
            mov BYTE PTR [RDI+24],0
            mov QWORD PTR [RDI+32],0
            mov DWORD PTR [RDI+20],EAX
            movsxd RDI,DWORD PTR [RDX+8]
            movabs RAX,2305843009213693950
            cmp RDI,RAX
            mov DWORD PTR [RBX+16],EDI
            ja .L_41cc91

            shl RDI,2
            call _Znam@PLT

            movsxd RDX,DWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            mov RDI,RAX
            mov RSI,QWORD PTR [RBP]
            add RSP,8
.L_41cc69:

            pop RBX
            pop RBP
            shl RDX,2
            jmp memmove@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cc78:

            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov BYTE PTR [RDI+24],1
            mov QWORD PTR [RDI+32],RDX
            ret 
.L_41cc91:

            call __cxa_throw_bad_array_new_length@PLT
.L_41cc96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cca0:

            cmp BYTE PTR [RDI+24],0
            jne .L_41ccb0

            jmp .L_41c100
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ccb0:

            ret 
.L_41ccb2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ccc0:

            mov EAX,DWORD PTR [RSI+48]
            movzx EDX,BYTE PTR [RSI+33]
            not EAX
            shr EAX,31
            lea EDX,DWORD PTR [RDX+RAX*2]
            movzx EAX,BYTE PTR [RSI+34]
            lea EAX,DWORD PTR [RAX+RDX*2]
            lea RDX,QWORD PTR [RIP+.L_646000]
            cdqe 
            shl RAX,4
            add RAX,RDX
            add RDI,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX]
            test AL,1
            je .L_41ccf9

            mov RDX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDX+RAX*1-1]
.L_41ccf9:

            jmp RAX
.L_41ccfb:

            nop
            nop
            nop
            nop
            nop
.L_41cd00:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RCX
            sub RSP,568
.L_41cd1a:

            mov QWORD PTR [RDI],RSI
            mov DWORD PTR [RDI+8],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDI+24]
            mov BYTE PTR [RDI+16],0
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+48],RAX
            call pthread_rwlock_init@PLT

            test EAX,EAX
            jne .L_41dc5c

            lea RAX,QWORD PTR [RBX+112]
            xor ESI,ESI
            mov QWORD PTR [RBX+80],0
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+96],0
            mov RDI,RAX
            mov QWORD PTR [RSP+56],RAX
            call pthread_rwlock_init@PLT

            test EAX,EAX
            mov R12D,EAX
            jne .L_41dc5c

            movabs RAX,4611686019492741120
            lea RDI,QWORD PTR [RIP+_ZNSt3tr18__detail12__prime_listE]
            mov QWORD PTR [RBX+168],RBP
            mov QWORD PTR [RBX+200],0
            mov QWORD PTR [RBX+208],0
            mov EDX,303
            mov QWORD PTR [RBX+216],RAX
            mov QWORD PTR [RBX+224],0
.L_41cdcd:

            mov RAX,RDX
            sar RAX,1
            lea RSI,QWORD PTR [RDI+RAX*8]
            cmp QWORD PTR [RSI],9
            ja .L_41cdff

            jmp .L_41d200
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cde8:

            mov RCX,RAX
            sar RCX,1
            lea RSI,QWORD PTR [RDI+RCX*8]
            cmp QWORD PTR [RSI],9
            jbe .L_41d210

            mov RAX,RCX
.L_41cdff:

            test RAX,RAX
            jne .L_41cde8

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            js .L_41d230
.L_41ce10:

            pxor XMM0,XMM0
            cvtsi2ss XMM0,RAX
            ucomiss XMM0,DWORD PTR [RIP+.L_436294]
            jae .L_41d256
.L_41ce26:

            cvttss2si RAX,XMM0
            mov QWORD PTR [RBX+224],RAX
.L_41ce32:

            mov RDI,QWORD PTR [RDI]
            mov QWORD PTR [RBX+200],RDI
.L_41ce3c:

            call .L_41c170
.L_41ce41:

            mov QWORD PTR [RBX+192],RAX
            lea RDX,QWORD PTR [RBX+360]
            lea RAX,QWORD PTR [RBX+232]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ce60:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],4294967295
            add RAX,16
            cmp RDX,RAX
            jne .L_41ce60

            xor EDI,EDI
            xor EAX,EAX
            cmp DWORD PTR [RBX+8],1
            mov BYTE PTR [RBX+360],0
            mov DWORD PTR [RBX+12],0
            jne .L_41ce9f

            movsxd RDI,DWORD PTR [R13+12]
            mov EAX,DWORD PTR [R13+8]
            mov DWORD PTR [RBX+12],EAX
            mov R12,RDI
            mov EAX,EDI
.L_41ce9f:

            mov EDX,DWORD PTR [R13+12]
            mov RSI,QWORD PTR [RBX]
            lea EDX,DWORD PTR [RAX+RDX*2]
            mov RAX,QWORD PTR [RBX+168]
            mov DWORD PTR [RBX+104],EDX
            movsxd RDX,EDX
            sub RAX,368
            shl RDX,2
            mov QWORD PTR [RBX+168],RAX
            movsxd RCX,DWORD PTR [RSI+12]
            add RCX,RDI
            shl RCX,4
            sub RAX,RCX
            sub RAX,RDX
            test RAX,RAX
            mov QWORD PTR [RBX+168],RAX
            js .L_41d408

            mov QWORD PTR [RBX+176],RAX
            movsxd RCX,DWORD PTR [RSI+12]
            mov EDX,DWORD PTR [RSI+20]
            add EDX,1
            add RDI,RCX
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RDI+RDX*2+6]
            mov RCX,RDX
            shl RCX,4
            lea RDX,QWORD PTR [RCX+RDX*4]
            shl RDX,2
            cmp RAX,RDX
            jge .L_41d280

            lea R12,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RDI],R15
.L_41cfba:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41cfbf:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_41d094:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41d099:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_41d0aa:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,474
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41d0e8:

            mov RAX,QWORD PTR [RBX]
            lea R14,QWORD PTR [RSP+128]
            lea RSI,QWORD PTR [RIP+.L_4360b0]
            mov RCX,RBP
            mov RDI,R14
            movsxd RDX,DWORD PTR [RAX+12]
            xor EAX,EAX
.L_41d106:

            call .L_414cf0
.L_41d10b:

            mov RDX,QWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [R12+8]
.L_41d120:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41d125:

            mov RDI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_41d13b

            call _ZdlPv@PLT
.L_41d13b:

            cmp BYTE PTR [RSP+160],0
            je .L_41d738
.L_41d149:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+280],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_41d187

            call _ZdlPv@PLT
.L_41d187:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+168],R13
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+RAX*1+168],R15
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RBX+16],1
.L_41d1cd:

            mov RAX,QWORD PTR [RSP+552]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41dc1f

            add RSP,568
.L_41d1eb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d200:

            mov RCX,RAX
            mov RAX,RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d210:

            sub RAX,RCX
            lea RDI,QWORD PTR [RSI+8]
            lea RDX,QWORD PTR [RAX-1]
            test RDX,RDX
            jg .L_41cdcd

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            jns .L_41ce10
.L_41d230:

            mov RDX,RAX
            pxor XMM0,XMM0
            shr RDX,1
            and EAX,1
            or RDX,RAX
            cvtsi2ss XMM0,RDX
            addss XMM0,XMM0
            ucomiss XMM0,DWORD PTR [RIP+.L_436294]
            jb .L_41ce26
.L_41d256:

            subss XMM0,DWORD PTR [RIP+.L_436294]
            cvttss2si RAX,XMM0
            mov QWORD PTR [RBX+224],RAX
            movabs RAX,-9223372036854775808
            xor QWORD PTR [RBX+224],RAX
            jmp .L_41ce32
.L_41d280:

            mov EDI,48
            mov R14D,DWORD PTR [R13+12]
.L_41d289:

            call _Znwm@PLT
.L_41d28e:

            lea R15D,DWORD PTR [R12+R14*1]
            mov RBP,RAX
            movabs RDX,2305843009213693950
            mov DWORD PTR [RAX+4],R15D
            movsxd RAX,R15D
            cmp RAX,RDX
            ja .L_41dc69

            shl RAX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
.L_41d2bb:

            call _Znam@PLT

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP+8],RAX
            call _Znam@PLT

            mov QWORD PTR [RBP+16],RAX
            call .L_435550
.L_41d2d7:

            test EAX,EAX
            setne BYTE PTR [RBP+24]
            je .L_41d317

            test R15D,R15D
            jle .L_41d317

            lea EAX,DWORD PTR [R15-1]
            mov RSI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d300:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_41d300
.L_41d317:

            mov DWORD PTR [RBP+28],R14D
            mov DWORD PTR [RBP+36],R14D
            mov EDI,48
            mov QWORD PTR [RBX+80],RBP
            mov DWORD PTR [RBP],0
            mov DWORD PTR [RBP+32],R12D
            mov BYTE PTR [RBP+40],1
            mov R14D,DWORD PTR [R13+12]
.L_41d33b:

            call _Znwm@PLT
.L_41d340:

            lea R15D,DWORD PTR [R12+R14*1]
            mov RBP,RAX
            mov DWORD PTR [RAX+4],R15D
            movsxd R13,R15D
            movabs RAX,2305843009213693950
            cmp R13,RAX
            ja .L_41dc24

            shl R13,2
            mov RDI,R13
.L_41d368:

            call _Znam@PLT

            mov QWORD PTR [RBP+8],RAX
            mov RDI,R13
            call _Znam@PLT

            mov QWORD PTR [RBP+16],RAX
            call .L_435550
.L_41d382:

            test EAX,EAX
            setne BYTE PTR [RBP+24]
            je .L_41d3bf

            test R15D,R15D
            jle .L_41d3bf

            lea EAX,DWORD PTR [R15-1]
            mov RSI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
.L_41d3a8:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_41d3a8
.L_41d3bf:

            movsxd RDI,DWORD PTR [RBX+104]
            movabs RAX,2305843009213693950
            mov DWORD PTR [RBP],0
            mov DWORD PTR [RBP+28],R14D
            mov DWORD PTR [RBP+32],R12D
            mov DWORD PTR [RBP+36],R14D
            mov BYTE PTR [RBP+40],1
            mov QWORD PTR [RBX+88],RBP
            cmp RDI,RAX
            ja .L_41dc7b

            shl RDI,2
.L_41d3f5:

            call _Znam@PLT
.L_41d3fa:

            mov QWORD PTR [RBX+96],RAX
            jmp .L_41d1cd
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d408:

            lea R12,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RDI],R15
.L_41d4a6:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41d4ab:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_41d580:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41d585:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_41d596:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,459
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41d5d4:

            mov RAX,QWORD PTR [RBX]
            lea R14,QWORD PTR [RSP+128]
            lea RSI,QWORD PTR [RIP+.L_4360b0]
            mov RCX,RBP
            mov RDI,R14
            movsxd RDX,DWORD PTR [RAX+12]
            xor EAX,EAX
.L_41d5f2:

            call .L_414cf0
.L_41d5f7:

            mov RDX,QWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [R12+8]
.L_41d60c:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41d611:

            mov RDI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_41d627

            call _ZdlPv@PLT
.L_41d627:

            cmp BYTE PTR [RSP+160],0
            jne .L_41d149

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_41da38

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            ja .L_41d8fa

            lea R14,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+96],RAX
.L_41d6a2:

            call .L_41c270
.L_41d6a7:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_41da9e

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_41dacf

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41dade

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41d6fc:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R14
            je .L_41d71b
.L_41d716:

            call _ZdlPv@PLT
.L_41d71b:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_41d72a:

            call write@PLT
.L_41d72f:

            jmp .L_41d8d6

            nop
            nop
            nop
            nop
.L_41d738:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_41da06

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            jbe .L_41d838

            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_41d7a6:

            call .L_41c270

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_41d9cf

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_41da18

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41da27

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_41d80f:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R14
            jne .L_41d8bd

            jmp .L_41d8c2
.L_41d838:

            lea R14,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+96],RAX
            call .L_41c270
.L_41d84e:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_41d99e

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_41da4a

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41da59

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41d8a3:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R14
            je .L_41d8c2
.L_41d8bd:

            call _ZdlPv@PLT
.L_41d8c2:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_41d8d1:

            call write@PLT
.L_41d8d6:

            mov RDI,QWORD PTR [RSP+64]
            add RBP,16
            mov BYTE PTR [RSP+160],1
            cmp RDI,RBP
            je .L_41d149

            call _ZdlPv@PLT

            jmp .L_41d149
.L_41d8fa:

            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_41d90c:

            call .L_41c270
.L_41d911:

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_41da67

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_41daec

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41dafb

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_41d975:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R14
            jne .L_41d716

            jmp .L_41d71b
.L_41d99e:

            test RDX,RDX
            je .L_41d9bc

            cmp RDX,1
            je .L_41db0c

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_41d9bc:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41d8a3
.L_41d9cf:

            test RDX,RDX
            je .L_41d9f0

            cmp RDX,1
            je .L_41db22

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_41d9f0:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_41d80f
.L_41da06:

            lea RSI,QWORD PTR [R12+88]
            mov RDI,RBP
.L_41da0e:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41da13:

            jmp .L_41d8c2
.L_41da18:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41da27:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_41d80f
.L_41da38:

            lea RSI,QWORD PTR [R12+88]
            mov RDI,RBP
.L_41da40:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41da45:

            jmp .L_41d71b
.L_41da4a:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41da59:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41d8a3
.L_41da67:

            test RDX,RDX
            je .L_41da88

            cmp RDX,1
            je .L_41db3e

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_41da88:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_41d975
.L_41da9e:

            test RDX,RDX
            je .L_41dabc

            cmp RDX,1
            je .L_41db5a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_41dabc:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41d6fc
.L_41dacf:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41dade:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41d6fc
.L_41daec:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41dafb:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_41d975
.L_41db0c:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41d9bc
.L_41db22:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41d9f0
.L_41db3e:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41da88
.L_41db5a:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41dabc
.L_41db70:

            mov RDI,QWORD PTR [RSP+64]
            add RBP,16
            cmp RDI,RBP
            je .L_41db83

            call _ZdlPv@PLT
.L_41db83:

            call _ZSt9terminatev@PLT
.L_41db88:

            mov RBP,RAX
.L_41db8b:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_41dba2:

            lea RDI,QWORD PTR [RBX+184]
            call .L_4229b0
.L_41dbae:

            mov RDI,QWORD PTR [RSP+56]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_41dc5c

            mov RDI,QWORD PTR [RSP+48]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_41dc5c

            mov RDI,RBP
.L_41dbd5:

            call _Unwind_Resume@PLT
.L_41dbda:

            jmp .L_41db70
.L_41dbdc:

            jmp .L_41db70
.L_41dbde:

            jmp .L_41db70
.L_41dbe0:

            lea RDI,QWORD PTR [R12+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RSP+RAX*1+168],R15
            jmp .L_41db8b
.L_41dc03:

            lea RDI,QWORD PTR [R12+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_41dba2
.L_41dc12:

            mov RBP,RAX
.L_41dc15:

            mov RDI,R12
            call .L_40bd80

            jmp .L_41dba2
.L_41dc1f:

            call __stack_chk_fail@PLT
.L_41dc24:

            call __cxa_throw_bad_array_new_length@PLT
.L_41dc29:

            mov RDI,QWORD PTR [RSP+128]
            add R14,16
            mov RBP,RAX
            cmp RDI,R14
            je .L_41dc15

            call _ZdlPv@PLT

            jmp .L_41dc15
.L_41dc44:

            mov R12,RAX
            mov RDI,RBP
            mov ESI,48
            call _ZdlPvm@PLT

            mov RBP,R12
            jmp .L_41dba2
.L_41dc5c:

            call abort@PLT
.L_41dc61:

            mov RBP,RAX
            jmp .L_41dba2
.L_41dc69:

            call __cxa_throw_bad_array_new_length@PLT
.L_41dc6e:

            jmp .L_41dc44
.L_41dc70:

            jmp .L_41dbe0
.L_41dc75:

            jmp .L_41dc03
.L_41dc77:

            jmp .L_41dc12
.L_41dc79:

            jmp .L_41dc29
.L_41dc7b:

            call __cxa_throw_bad_array_new_length@PLT
.L_41dc80:

            jmp .L_41db88
.L_41dc85:

            mov RBP,RAX
            jmp .L_41dbae
.L_41dc8d:

            nop
            nop
            nop
.L_41dc90:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EBP,ESI
            sub RSP,16
.L_41dca1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test ESI,ESI
            je .L_41dcf0

            cmp ESI,3
            je .L_41dcf0

            lea R13,QWORD PTR [RDI+104]
            mov RBX,QWORD PTR [R13]
            mov EBP,1
            test RBX,RBX
            je .L_41dcfe
.L_41dccc:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41dd9e

            add RSP,16
.L_41dce7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41dcf0:

            lea R13,QWORD PTR [R12+96]
            mov RBX,QWORD PTR [R13]
            test RBX,RBX
            jne .L_41dccc
.L_41dcfe:

            lea RDI,QWORD PTR [R12+40]
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_41dd26

            mov RBX,QWORD PTR [R13]
            test RBX,RBX
            je .L_41dd30

            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            je .L_41dccc
.L_41dd26:

            call abort@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dd30:

            cmp BYTE PTR [R12+2],0
            mov R14,QWORD PTR [R12+112]
            jne .L_41dd90

            mov RAX,R14
            shr RAX,63
            add R14,RAX
            sar R14,1
.L_41dd4a:

            mov EDI,368
.L_41dd4f:

            call _Znwm@PLT
.L_41dd54:

            mov RCX,R14
            mov EDX,EBP
            mov RSI,R12
            mov RDI,RAX
            mov RBX,RAX
.L_41dd62:

            call .L_41cd00
.L_41dd67:

            lea RAX,QWORD PTR [RIP+.L_41e0b0]
            mov QWORD PTR [R12+120],RAX
            mov QWORD PTR [R13],RBX
            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            je .L_41dccc

            jmp .L_41dd26
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dd90:

            mov EAX,EBP
            and EAX,4294967293
            cmp EAX,1
            cmovne R14,RBX
            jmp .L_41dd4a
.L_41dd9e:

            call __stack_chk_fail@PLT
.L_41dda3:

            mov ESI,368
            mov RDI,RBX
            mov RBP,RAX
            call _ZdlPvm@PLT
.L_41ddb3:

            mov RDI,RSP
            call .L_40c0f0

            mov RDI,RBP
.L_41ddbe:

            call _Unwind_Resume@PLT
.L_41ddc3:

            mov RBP,RAX
            jmp .L_41ddb3
.L_41ddc8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ddd0:

            push R13
            push R12
            movabs RDX,2305843009213693951
            push RBP
            push RBX
            sub RSP,40
.L_41dde4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+208]
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            cmp RAX,RDX
            ja .L_41dfdb

            test RAX,RAX
            mov RBP,RDI
            jne .L_41df50
.L_41de2a:

            mov RDI,QWORD PTR [RBP+192]
            mov RBX,QWORD PTR [RDI]
            mov R12,RDI
            test RBX,RBX
            je .L_41df90
.L_41de40:

            mov RCX,QWORD PTR [RBP+200]
            mov R13,RSP
            mov RDX,QWORD PTR [RDI+RCX*8]
            jmp .L_41de6d
.L_41de50:

            test RSI,RSI
            je .L_41de5b

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RSI],RAX
.L_41de5b:

            mov RBX,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RSP+8],RAX
            test RBX,RBX
            je .L_41dea8
.L_41de6d:

            cmp RBX,RDX
            je .L_41ded8
.L_41de72:

            mov RSI,QWORD PTR [RSP+8]
            cmp RSI,QWORD PTR [RSP+16]
            jne .L_41de50

            mov RDX,RBX
            mov RDI,R13
.L_41de84:

            call .L_4229e0

            mov RBX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBP+192]
            mov RCX,QWORD PTR [RBP+200]
            test RBX,RBX
            mov RDX,QWORD PTR [RDI+RCX*8]
            jne .L_41de6d

            nop
            nop
            nop
            nop
.L_41dea8:

            mov RBX,QWORD PTR [R12+8]
            lea RAX,QWORD PTR [R12+8]
            test RBX,RBX
            jne .L_41decc

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dec0:

            add RAX,8
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_41dec0
.L_41decc:

            cmp RBX,RDX
            mov R12,RAX
            jne .L_41de72

            nop
            nop
            nop
            nop
.L_41ded8:

            mov RSI,RCX
            call .L_41c120

            mov RDX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RBP+208],0
            je .L_41df27

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41df00:

            mov RDI,QWORD PTR [RDX+RBX*8]
            test RDI,RDI
            je .L_41df12

            call _ZdaPv@PLT

            mov RDX,QWORD PTR [RSP]
.L_41df12:

            mov RAX,QWORD PTR [RSP+8]
            add RBX,1
            sub RAX,RDX
            sar RAX,3
            cmp RBX,RAX
            jb .L_41df00
.L_41df27:

            test RDX,RDX
            je .L_41df34

            mov RDI,RDX
            call _ZdlPv@PLT
.L_41df34:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41dfbd

            add RSP,40
.L_41df48:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_41df50:

            lea RBX,QWORD PTR [RAX*8]
            mov RDI,RBX
            call _Znwm@PLT
.L_41df60:

            mov RDI,QWORD PTR [RSP]
            mov R12,RAX
            test RDI,RDI
            je .L_41df71

            call _ZdlPv@PLT
.L_41df71:

            lea RAX,QWORD PTR [R12+RBX*1]
            mov QWORD PTR [RSP],R12
            mov QWORD PTR [RSP+8],R12
            mov QWORD PTR [RSP+16],RAX
            jmp .L_41de2a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41df90:

            mov RBX,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+8]
            test RBX,RBX
            jne .L_41de40

            lea RAX,QWORD PTR [RDI+16]
            nop
            nop
            nop
.L_41dfa8:

            mov R12,RAX
            add RAX,8
            mov RBX,QWORD PTR [RAX-8]
            test RBX,RBX
            je .L_41dfa8

            jmp .L_41de40
.L_41dfbd:

            call __stack_chk_fail@PLT
.L_41dfc2:

            mov RDI,QWORD PTR [RSP]
            mov RBX,RAX
            test RDI,RDI
            je .L_41dfd3

            call _ZdlPv@PLT
.L_41dfd3:

            mov RDI,RBX
.L_41dfd6:

            call _Unwind_Resume@PLT
.L_41dfdb:

            lea RDI,QWORD PTR [RIP+.L_435b33]
.L_41dfe2:

            call _ZSt20__throw_length_errorPKc@PLT
.L_41dfe7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dff0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_41dff9:

            mov RBP,QWORD PTR [RDI+80]
            test RBP,RBP
            je .L_41e02b

            mov RDI,QWORD PTR [RBP+8]
            test RDI,RDI
            je .L_41e010

            call _ZdaPv@PLT
.L_41e010:

            mov RDI,QWORD PTR [RBP+16]
            test RDI,RDI
            je .L_41e01e

            call _ZdaPv@PLT
.L_41e01e:

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_41e02b:

            mov RBP,QWORD PTR [RBX+88]
            test RBP,RBP
            je .L_41e05d

            mov RDI,QWORD PTR [RBP+8]
            test RDI,RDI
            je .L_41e042

            call _ZdaPv@PLT
.L_41e042:

            mov RDI,QWORD PTR [RBP+16]
            test RDI,RDI
            je .L_41e050

            call _ZdaPv@PLT
.L_41e050:

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_41e05d:

            mov RDI,QWORD PTR [RBX+96]
            test RDI,RDI
            je .L_41e06b

            call _ZdaPv@PLT
.L_41e06b:

            mov RDI,RBX
            call .L_41ddd0

            lea RDI,QWORD PTR [RBX+184]
            call .L_4229b0

            lea RDI,QWORD PTR [RBX+112]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_41e0a0

            lea RDI,QWORD PTR [RBX+24]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_41e0a0

            add RSP,8
.L_41e09d:

            pop RBX
            pop RBP
            ret 
.L_41e0a0:

            call abort@PLT
.L_41e0a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e0b0:

            test RDI,RDI
            je .L_41e0d0

            push RBX
            mov RBX,RDI
            call .L_41dff0

            mov RDI,RBX
            mov ESI,368
            pop RBX
            jmp _ZdlPvm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e0d0:

            ret 
.L_41e0d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e0e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,520
.L_41e0f7:

            movzx EBP,BYTE PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            call .L_41cbb0

            test BPL,BPL
            je .L_41e121

            cmp BYTE PTR [RBX+360],0
            je .L_41e1a0
.L_41e121:

            lea RCX,QWORD PTR [RBX+232]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e130:

            movsxd RAX,EDX
            add EDX,1
            mov QWORD PTR [RCX],0
            add RAX,14
            add RCX,16
            shl RAX,4
            add RAX,RBX
            cmp EDX,8
            mov DWORD PTR [RAX+16],4294967295
            jne .L_41e130

            mov RDI,RBX
.L_41e15b:

            call .L_41ddd0
.L_41e160:

            mov RAX,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+168],RAX
            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e748

            add RSP,520
.L_41e18c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e1a0:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41e230:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41e235:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_41e2ef:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41e2f4:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_41e304:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,1154
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41e340:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4360e0]
            mov EDX,37
.L_41e350:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4361a8]
            mov EDX,14
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RSI,QWORD PTR [RBX+208]
            lea RDI,QWORD PTR [RBP+8]
            call _ZNSo9_M_insertImEERSoT_@PLT

            lea RSI,QWORD PTR [RIP+.L_4361b7]
            mov EDX,8
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41e38e:

            cmp BYTE PTR [RSP+112],0
            je .L_41e412
.L_41e395:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_41e3c7

            call _ZdlPv@PLT
.L_41e3c7:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RBX+360],1
            jmp .L_41e121
.L_41e412:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_41e5e6

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_41e545

            lea RDI,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+48],RAX
.L_41e485:

            call .L_41c270
.L_41e48a:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            add RAX,16
            cmp RSI,RAX
            je .L_41e5f8

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_41e656

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41e665

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_41e4e8:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_41e50c
.L_41e507:

            call _ZdlPv@PLT
.L_41e50c:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_41e51b:

            call write@PLT
.L_41e520:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_41e395

            call _ZdlPv@PLT

            jmp .L_41e395
.L_41e545:

            lea RDI,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_41e55b:

            call .L_41c270

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            add RAX,16
            cmp RSI,RAX
            je .L_41e629

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_41e678

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41e687

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41e5be:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41e507

            jmp .L_41e50c
.L_41e5e6:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41e5f3:

            jmp .L_41e50c
.L_41e5f8:

            test RDX,RDX
            je .L_41e616

            cmp RDX,1
            je .L_41e6ad

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_41e616:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_41e4e8
.L_41e629:

            test RDX,RDX
            je .L_41e643

            cmp RDX,1
            je .L_41e69a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_41e643:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41e5be
.L_41e656:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41e665:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_41e4e8
.L_41e678:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41e687:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41e5be
.L_41e69a:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41e643
.L_41e6ad:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41e616
.L_41e6c3:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
.L_41e6d1:

            call _Unwind_Resume@PLT
.L_41e6d6:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_41e6ed

            call _ZdlPv@PLT
.L_41e6ed:

            call _ZSt9terminatev@PLT
.L_41e6f2:

            jmp .L_41e6d6
.L_41e6f4:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41e708:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
.L_41e72a:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41e743:

            mov RBX,RAX
            jmp .L_41e72a
.L_41e748:

            call __stack_chk_fail@PLT
.L_41e74d:

            nop
            nop
            nop
.L_41e750:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov RBX,RDI
            mov R15D,ECX
            sub RSP,104
.L_41e76a:

            lea R13,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+32],RSI
            lea RSI,QWORD PTR [RDI+200]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+40],EDX
            add RDI,192
            mov RDX,R13
            mov DWORD PTR [RSP+44],ECX
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+64],RAX
            call .L_41c340

            mov RCX,QWORD PTR [RBX+200]
            mov RDX,QWORD PTR [RBX+192]
            cmp QWORD PTR [RDX+RCX*8],RAX
            je .L_41e7f0

            mov RAX,QWORD PTR [RAX]
.L_41e7cc:

            mov RSI,QWORD PTR [RSP+88]
            xor RSI,QWORD PTR FS:[40]
            jne .L_41e8ba

            add RSP,104
.L_41e7e4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41e7f0:

            mov RAX,QWORD PTR [RBX]
            movsxd R8,R12D
            mov RDX,QWORD PTR [RBX+168]
            mov EBP,DWORD PTR [RAX+20]
            add EBP,1
            movsxd RBP,EBP
            lea RDI,QWORD PTR [R8+RBP*2+6]
            shl EDI,2
            lea EAX,DWORD PTR [RDI+32]
            cdqe 
            cmp RDX,RAX
            jl .L_41e8a8

            sub RDX,RAX
            movsxd RDI,EDI
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RBX+168],RDX
            call _Znam@PLT

            lea RDX,QWORD PTR [RBP*8]
            lea RDI,QWORD PTR [RAX+24]
            xor ESI,ESI
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP],RAX
            lea RBP,QWORD PTR [RDI+RDX*1]
            mov QWORD PTR [RAX+16],RDI
            mov QWORD PTR [RAX],RBP
            call memset@PLT

            mov R8,QWORD PTR [RSP+8]
            mov RSI,R14
            mov RDI,RBP
            lea RDX,QWORD PTR [R8*4]
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RSP+24]
            sub RSP,8
.L_41e87f:

            lea RSI,QWORD PTR [RBX+184]
            mov RDI,R13
            mov DWORD PTR [RCX+8],R12D
            mov DWORD PTR [RCX+12],R15D
            push 0
            call .L_4231a0

            mov RAX,QWORD PTR [RSP+40]
            pop RDX
            pop RCX
            jmp .L_41e7cc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e8a8:

            mov QWORD PTR [RBX+168],-1
            xor EAX,EAX
            jmp .L_41e7cc
.L_41e8ba:

            call __stack_chk_fail@PLT
.L_41e8bf:

            nop
.L_41e8c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,536
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+24],0
            je .L_41e920

            mov RBX,QWORD PTR [RDI+32]
.L_41e8f1:

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41ee7f

            add RSP,536
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e920:

            mov RAX,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RAX+24]
            mov QWORD PTR [RSP+24],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_41e95d

            mov ECX,DWORD PTR [RBX+20]
            mov EDX,DWORD PTR [RBX+16]
            mov RSI,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX]
.L_41e942:

            call .L_41e750
.L_41e947:

            test RAX,RAX
            mov RBX,RAX
            je .L_41e968
.L_41e94f:

            mov RDI,QWORD PTR [RSP+24]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            je .L_41e8f1
.L_41e95d:

            call abort@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e968:

            lea RBP,QWORD PTR [RSP+128]
            mov BYTE PTR [RSP+128],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41ea01:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41ea06:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+232],0
            mov QWORD PTR [RSP+216],RAX
.L_41eac3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41eac8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_41ead8:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,1237
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41eb14:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436108]
            mov EDX,35
.L_41eb24:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41eb29:

            cmp BYTE PTR [RSP+128],0
            je .L_41ebc0
.L_41eb37:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+216]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_41eb6c

            call _ZdlPv@PLT
.L_41eb6c:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RDX
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_41e94f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ebc0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_41eda2

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            jbe .L_41ed00

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_41ec3a:

            call .L_41c270
.L_41ec3f:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41edb4

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_41ee12

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_41ee21

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41ec9d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_41ecc1
.L_41ecbc:

            call _ZdlPv@PLT
.L_41ecc1:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_41ecd0:

            call write@PLT
.L_41ecd5:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_41eb37

            call _ZdlPv@PLT

            jmp .L_41eb37
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ed00:

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+8],RCX
.L_41ed17:

            call .L_41c270

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41ede5

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_41ee34

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_41ee43

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_41ed7a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            jne .L_41ecbc

            jmp .L_41ecc1
.L_41eda2:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41edaf:

            jmp .L_41ecc1
.L_41edb4:

            test RDX,RDX
            je .L_41edd2

            cmp RDX,1
            je .L_41ee69

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
.L_41edd2:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41ec9d
.L_41ede5:

            test RDX,RDX
            je .L_41edff

            cmp RDX,1
            je .L_41ee56

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
.L_41edff:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41ed7a
.L_41ee12:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_41ee21:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41ec9d
.L_41ee34:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_41ee43:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_41ed7a
.L_41ee56:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_41edff
.L_41ee69:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_41edd2
.L_41ee7f:

            call __stack_chk_fail@PLT
.L_41ee84:

            mov RBX,RAX
.L_41ee87:

            lea RDI,QWORD PTR [RSP+24]
            call .L_40c0f0

            mov RDI,RBX
.L_41ee94:

            call _Unwind_Resume@PLT
.L_41ee99:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_41eeb0

            call _ZdlPv@PLT
.L_41eeb0:

            call _ZSt9terminatev@PLT
.L_41eeb5:

            jmp .L_41ee99
.L_41eeb7:

            mov RDI,RBP
            mov RBX,RAX
            call .L_40bd80

            jmp .L_41ee87
.L_41eec4:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_41ee87
.L_41eed2:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RDX
.L_41eefa:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_41ee87
.L_41ef10:

            mov RBX,RAX
            jmp .L_41eefa
.L_41ef15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ef20:

            push R14
            mov R14,RDX
            mov RDX,RSI
            sub RDX,RDI
            push R13
            push R12
            cmp RDX,64
            push RBP
            push RBX
.L_41ef35:

            jle .L_41f085

            test R14,R14
            mov R13,RDI
            lea RBP,QWORD PTR [RDI+4]
            je .L_41f0a5
.L_41ef4b:

            sar RDX,3
            mov ECX,DWORD PTR [R13+4]
            sub R14,1
            lea R8,QWORD PTR [R13+RDX*4]
            mov EDI,DWORD PTR [R13]
            mov EDX,DWORD PTR [RSI-4]
            mov EAX,DWORD PTR [R8]
            cmp ECX,EAX
            jge .L_41efc8

            cmp EDX,EAX
            jg .L_41f08e

            cmp EDX,ECX
            jg .L_41efd4
.L_41ef76:

            mov DWORD PTR [R13],ECX
            mov DWORD PTR [R13+4],EDI
            mov EDX,DWORD PTR [RSI-4]
.L_41ef81:

            mov RBX,RBP
            mov RAX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ef90:

            cmp EDI,ECX
            mov R12,RBX
            jl .L_41efba

            sub RAX,4
            cmp ECX,EDX
            jge .L_41efaa

            nop
.L_41efa0:

            sub RAX,4
            mov EDX,DWORD PTR [RAX]
            cmp EDX,ECX
            jg .L_41efa0
.L_41efaa:

            cmp RBX,RAX
            jae .L_41eff0

            mov DWORD PTR [RBX],EDX
            mov DWORD PTR [RAX],EDI
            mov EDX,DWORD PTR [RAX-4]
            mov ECX,DWORD PTR [R13]
.L_41efba:

            mov EDI,DWORD PTR [RBX+4]
            add RBX,4
            jmp .L_41ef90
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41efc8:

            cmp EDX,ECX
            jg .L_41ef76

            cmp EDX,EAX
            jle .L_41f08e
.L_41efd4:

            mov DWORD PTR [R13],EDX
            mov DWORD PTR [RSI-4],EDI
            mov EDX,EDI
            mov ECX,DWORD PTR [R13]
            mov EDI,DWORD PTR [R13+4]
            jmp .L_41ef81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eff0:

            mov RDX,R14
            mov RDI,RBX
            call .L_41ef20

            mov RDX,RBX
            sub RDX,R13
            cmp RDX,64
            jle .L_41f085

            test R14,R14
            mov RSI,RBX
            jne .L_41ef4b
.L_41f013:

            mov RBX,RDX
            sar RBX,2
            lea RBP,QWORD PTR [RBX-2]
            sar RBP,1
            jmp .L_41f02c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f028:

            sub RBP,1
.L_41f02c:

            sub RSP,8
.L_41f030:

            mov ECX,DWORD PTR [R13+RBP*4]
            mov RSI,RBP
            push 0
            mov RDX,RBX
            mov RDI,R13
            call .L_4234b0

            test RBP,RBP
            pop RCX
            pop RSI
            jne .L_41f028

            nop
            nop
            nop
            nop
.L_41f050:

            sub R12,4
            mov EAX,DWORD PTR [R13]
            sub RSP,8
            mov RBX,R12
            mov ECX,DWORD PTR [R12]
            xor ESI,ESI
            sub RBX,R13
            mov RDI,R13
            mov DWORD PTR [R12],EAX
            mov RDX,RBX
            push 0
            sar RDX,2
            call .L_4234b0

            cmp RBX,4
            pop RAX
            pop RDX
            jg .L_41f050
.L_41f085:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41f08e:

            mov DWORD PTR [R13],EAX
            mov DWORD PTR [R8],EDI
            mov EDI,DWORD PTR [R13+4]
            mov ECX,DWORD PTR [R13]
            mov EDX,DWORD PTR [RSI-4]
            jmp .L_41ef81
.L_41f0a5:

            mov R12,RSI
            jmp .L_41f013
.L_41f0ad:

            nop
            nop
            nop
.L_41f0b0:

            push R15
            push R14
            movabs RAX,2305843009213693950
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_41f0cb:

            mov EDI,DWORD PTR [RSI+32]
            add EDI,DWORD PTR [RSI+28]
            mov DWORD PTR [RSP+4],EDX
            movsxd RDI,EDI
            cmp RDI,RAX
            ja .L_41f482

            mov R12,RSI
            shl RDI,2
            xor EBX,EBX
            call _Znam@PLT

            mov R13,RAX
            movsxd RAX,DWORD PTR [R12]
            mov RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+16],RDI
            lea R11,QWORD PTR [RDI+RAX*4]
            cmp RDI,R11
            je .L_41f2d8

            mov ESI,DWORD PTR [RSP+4]
            mov RAX,QWORD PTR [RSP+16]
            xor R14D,R14D
            mov BYTE PTR [RSP+8],0
            xor R10D,R10D
            xor EBX,EBX
            mov R15D,1
            mov DWORD PTR [RSP+24],R14D
            and ESI,4096
            mov DWORD PTR [RSP+28],ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f140:

            test R10B,R10B
            mov EDX,DWORD PTR [RAX]
            je .L_41f270

            mov ESI,DWORD PTR [RBP+8]
            test ESI,ESI
            je .L_41f1fd

            cmp EDX,DWORD PTR [R12+28]
            jge .L_41f1fd
.L_41f161:

            mov RDI,QWORD PTR [RBP]
            movsxd RCX,EDX
            mov R9,QWORD PTR [RDI+32]
            lea RSI,QWORD PTR [R9+RCX*8]
            mov R8D,DWORD PTR [RSI]
            mov ECX,R8D
            and ECX,7
            cmp ECX,5
            ja .L_41f1f0

            mov R14,R15
            shl R14,CL
            test R14B,53
            mov RCX,R14
            jne .L_41f1c0

            and ECX,2
            je .L_41f1f0

            mov ECX,DWORD PTR [RBP+8]
            cmp ECX,3
            je .L_41f1c0

            test ECX,ECX
            je .L_41f308

            cmp ECX,1
            jne .L_41f1ae

            cmp BYTE PTR [RSP+8],0
            jne .L_41f1c0
.L_41f1ae:

            mov ECX,DWORD PTR [RSP+28]
            test ECX,ECX
            jne .L_41f470

            nop
            nop
            nop
            nop
            nop
            nop
.L_41f1c0:

            lea ECX,DWORD PTR [RBX+1]
            movsxd RBX,EBX
            mov DWORD PTR [R13+RBX*4],EDX
            mov EDX,DWORD PTR [RSI]
            and EDX,7
            cmp EDX,4
            je .L_41f2b8

            cmp EDX,5
            mov EBX,ECX
            jne .L_41f1f0

            cmp BYTE PTR [RDI+1],0
            mov EDI,1
            cmove R10D,EDI
            nop
            nop
            nop
.L_41f1f0:

            add RAX,4
            cmp RAX,R11
            jne .L_41f140
.L_41f1fd:

            test EBX,EBX
            mov R14D,DWORD PTR [RSP+24]
            je .L_41f215

            movsxd RAX,EBX
            cmp DWORD PTR [R13+RAX*4-4],-1
            je .L_41f388
.L_41f215:

            test R14D,R14D
            je .L_41f2d8
.L_41f21e:

            mov EAX,DWORD PTR [RSP+4]
            or EAX,EBX
            je .L_41f2ef
.L_41f22a:

            cmp DWORD PTR [RBP+8],1
            je .L_41f330
.L_41f234:

            mov ECX,R14D
            mov EDX,EBX
            mov RDI,RBP
            shl ECX,16
            or ECX,DWORD PTR [RSP+4]
            mov RSI,R13
            call .L_41e750

            mov RDI,R13
            mov RBX,RAX
            call _ZdaPv@PLT
.L_41f256:

            add RSP,40
.L_41f25a:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f270:

            cmp EDX,DWORD PTR [R12+28]
            jl .L_41f161

            test EBX,EBX
            je .L_41f1f0

            movsxd RDX,EBX
            cmp DWORD PTR [R13+RDX*4-4],-1
            je .L_41f1f0

            add RAX,4
            add EBX,1
            mov DWORD PTR [R13+RDX*4],4294967295
            cmp RAX,R11
            mov BYTE PTR [RSP+8],1
            jne .L_41f140

            jmp .L_41f1fd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f2b8:

            add RAX,4
            mov EDI,DWORD PTR [RSI+4]
            or DWORD PTR [RSP+24],EDI
            cmp RAX,R11
            mov EBX,ECX
            jne .L_41f140

            jmp .L_41f1fd
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f2d8:

            and DWORD PTR [RSP+4],4096
            xor R14D,R14D
            mov EAX,DWORD PTR [RSP+4]
            or EAX,EBX
            jne .L_41f22a
.L_41f2ef:

            mov RDI,R13
            mov EBX,1
            call _ZdaPv@PLT

            jmp .L_41f256
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f308:

            cmp QWORD PTR [RSP+16],RAX
            jne .L_41f1c0

            shr R8D,3
            mov ECX,R8D
            mov ECX,DWORD PTR [R9+RCX*8]
            and ECX,7
            cmp ECX,2
            jne .L_41f1c0

            jmp .L_41f1ae
          .byte 0x90
.L_41f330:

            movsxd RAX,EBX
            lea R8,QWORD PTR [R13+RAX*4]
            cmp R13,R8
            jae .L_41f234

            mov DWORD PTR [RSP+24],EBX
            mov QWORD PTR [RSP+8],RBP
            mov RBX,R13
            mov RBP,R8
.L_41f350:

            cmp DWORD PTR [RBX],-1
            mov R15,RBX
            jne .L_41f366

            jmp .L_41f435
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f360:

            cmp DWORD PTR [R15],-1
            je .L_41f3a0
.L_41f366:

            add R15,4
            cmp RBP,R15
            ja .L_41f360

            cmp RBX,R15
            jne .L_41f3a9
.L_41f374:

            mov EBX,DWORD PTR [RSP+24]
            mov RBP,QWORD PTR [RSP+8]
            jmp .L_41f234
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f388:

            sub EBX,1
            test R14D,R14D
            jne .L_41f21e

            jmp .L_41f2d8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f3a0:

            cmp RBX,R15
            je .L_41f435
.L_41f3a9:

            mov R12,R15
            mov EAX,63
            mov RSI,R15
            sub R12,RBX
            mov RDI,RBX
            mov RDX,R12
            sar RDX,2
            bsr RDX,RDX
            xor RDX,63
            movsxd RDX,EDX
            sub RAX,RDX
            mov RDX,RAX
            add RDX,RDX
            call .L_41ef20

            cmp R12,64
            jle .L_41f450

            lea R12,QWORD PTR [RBX+64]
            mov RDI,RBX
            mov RSI,R12
            call .L_41c1c0

            cmp R15,R12
            je .L_41f42c

            nop
            nop
            nop
            nop
.L_41f3f8:

            mov ESI,DWORD PTR [R12]
            mov EDX,DWORD PTR [R12-4]
            lea RAX,QWORD PTR [R12-4]
            cmp ESI,EDX
            jl .L_41f413

            jmp .L_41f460
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f410:

            mov RAX,RCX
.L_41f413:

            mov DWORD PTR [RAX+4],EDX
            mov EDX,DWORD PTR [RAX-4]
            lea RCX,QWORD PTR [RAX-4]
            cmp ESI,EDX
            jl .L_41f410

            add R12,4
            mov DWORD PTR [RAX],ESI
            cmp R15,R12
            jne .L_41f3f8
.L_41f42c:

            cmp RBP,R15
            jbe .L_41f374
.L_41f435:

            lea RBX,QWORD PTR [R15+4]
            cmp RBP,RBX
            ja .L_41f350

            jmp .L_41f374
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f450:

            mov RSI,R15
            mov RDI,RBX
            call .L_41c1c0

            jmp .L_41f42c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f460:

            mov RAX,R12
            add R12,4
            cmp R15,R12
            mov DWORD PTR [RAX],ESI
            jne .L_41f3f8

            jmp .L_41f42c
.L_41f470:

            mov RDI,R13
            mov EBX,2
            call _ZdaPv@PLT

            jmp .L_41f256
.L_41f482:

            call __cxa_throw_bad_array_new_length@PLT
.L_41f487:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f490:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            sub RSP,552
.L_41f4a4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            cmp RSI,2
            ja .L_41f728

            je .L_41f868

            lea RBX,QWORD PTR [RSP+144]
            cmp RSI,1
            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+144],0
            lea RDI,QWORD PTR [RBX+120]
            je .L_41ff85

            test RSI,RSI
            je .L_41f9f0

            call _ZNSt8ios_baseC2Ev@PLT

            mov BYTE PTR [RSP+488],0
            mov RAX,QWORD PTR [RBP-24]
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R12
            mov QWORD PTR [RSP+496],0
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RDI],RAX
.L_41f572:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41f577:

            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R13+40]
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+160],R15
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+240],0
            mov BYTE PTR [RSP+248],0
.L_41f639:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41f63e:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_41f64e:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,986
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41f68a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436130]
            mov EDX,42
.L_41f69a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41f69f:

            cmp BYTE PTR [RSP+144],0
            je .L_41f878
.L_41f6ad:

            mov RDI,QWORD PTR [RSP+232]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+160],R15
            cmp RDI,RAX
            je .L_41f6db

            call _ZdlPv@PLT
.L_41f6db:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RSP+RAX*1+152],RCX
            mov QWORD PTR [RSP+264],R12
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_41f755
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f728:

            movsxd RBP,EDX
            mov RBX,RDI
            mov RAX,QWORD PTR [RSI+16]
            cmp EBP,256
            mov RDX,QWORD PTR [RDI]
            je .L_41f780

            movsxd RCX,EBP
            movzx EDX,BYTE PTR [RDX+RCX*1+160]
            mov RAX,QWORD PTR [RAX+RDX*8]
            test RAX,RAX
            je .L_41f990
.L_41f755:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            jne .L_420434

            add RSP,552
.L_41f773:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_41f780:

            movsxd RDX,DWORD PTR [RDX+20]
            mov RAX,QWORD PTR [RAX+RDX*8]
            test RAX,RAX
            jne .L_41f755

            mov RSI,QWORD PTR [RDI+80]
            mov RDI,R12
            xor R13D,R13D
            xor R14D,R14D
            call .L_41c730

            mov EDX,DWORD PTR [R12+12]
            mov EAX,EDX
            mov EDI,EDX
            shr EDX,13
            and EAX,4095
            shr EDI,16
            and EDX,1
            mov ECX,EAX
            or ECX,10
.L_41f7bb:

            mov ESI,ECX
            not EAX
            or ECX,16
            or ESI,32
            cmp R14B,DL
            mov RDX,QWORD PTR [RBX+88]
            cmove ECX,ESI
            and EAX,EDI
            mov RSI,QWORD PTR [RBX+80]
            test EAX,ECX
            jne .L_41fd18
.L_41f7dd:

            mov EAX,DWORD PTR [RBX+12]
            mov BYTE PTR [RSP+47],0
            mov R8D,R13D
            mov ECX,EBP
            mov RDI,RBX
            push RAX
.L_41f7ee:

            mov EAX,DWORD PTR [RBX+8]
            push RAX
            lea R9,QWORD PTR [RSP+63]
            call .L_41c9f0

            cmp EBP,256
            pop RAX
            mov RAX,QWORD PTR [RBX+80]
            pop RDX
            je .L_41fcf0
.L_41f80e:

            mov RSI,QWORD PTR [RBX+88]
            mov QWORD PTR [RBX+88],RAX
            mov QWORD PTR [RBX+80],RSI
.L_41f81a:

            cmp BYTE PTR [RSP+47],0
            je .L_41f828

            or R13D,4096
.L_41f828:

            mov EAX,R13D
            mov RDI,RBX
            or AH,32
            test R14B,R14B
            cmovne R13D,EAX
            mov EDX,R13D
.L_41f83b:

            call .L_41f0b0
.L_41f840:

            cmp EBP,256
            mov RCX,QWORD PTR [R12+16]
            mov RDX,QWORD PTR [RBX]
            je .L_41fd08

            movzx EDX,BYTE PTR [RDX+RBP*1+160]
.L_41f85c:

            mov QWORD PTR [RCX+RDX*8],RAX
            jmp .L_41f755
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f868:

            mov EAX,2
            jmp .L_41f755
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f878:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_41fec0

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            ja .L_41fd68

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+80],RAX
.L_41f8ef:

            call .L_41c270
.L_41f8f4:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41fed8

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_41ff41

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_41ff50

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41f953:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_41f977
.L_41f972:

            call _ZdlPv@PLT
.L_41f977:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_41f986:

            call write@PLT
.L_41f98b:

            jmp .L_41fcc4
.L_41f990:

            mov RSI,QWORD PTR [RDI+80]
            mov RDI,R12
            call .L_41c730

            mov EDX,DWORD PTR [R12+12]
            mov EDI,EDX
            mov EAX,EDX
            shr EDI,16
            and EAX,4095
            cmp EBP,10
            jne .L_41fd38

            mov ECX,EAX
            shr EDX,13
            mov R13D,1
            or ECX,2
            and EDX,1
            mov ESI,10
.L_41f9cc:

            lea R8D,DWORD PTR [RSI-48]
            cmp R8B,9
            setbe R14B
            cmp SIL,95
            sete SIL
            or R14D,ESI
            jmp .L_41f7bb
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f9f0:

            call _ZNSt8ios_baseC2Ev@PLT

            mov BYTE PTR [RSP+488],0
            mov RAX,QWORD PTR [RBP-24]
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R12
            mov QWORD PTR [RSP+496],0
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RDI],RAX
.L_41fa6d:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41fa72:

            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R13+40]
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+160],R15
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+240],0
            mov BYTE PTR [RSP+248],0
.L_41fb34:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41fb39:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_41fb49:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,983
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41fb85:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4361dc]
            mov EDX,28
.L_41fb95:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41fb9a:

            cmp BYTE PTR [RSP+144],0
            jne .L_41f6ad

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_420263

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_41fe18

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_41fc22:

            call .L_41c270
.L_41fc27:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4202a7

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_4202fa

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_420309

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_41fc8c:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_41fcb0
.L_41fcab:

            call _ZdlPv@PLT
.L_41fcb0:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_41fcbf:

            call write@PLT
.L_41fcc4:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_41f6ad

            call _ZdlPv@PLT

            jmp .L_41f6ad
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41fcf0:

            cmp DWORD PTR [RBX+8],3
            mov RSI,RAX
            jne .L_41f80e

            jmp .L_41f81a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fd08:

            movsxd RDX,DWORD PTR [RDX+20]
            jmp .L_41f85c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fd18:

            mov RDI,RBX
            call .L_41c960

            mov RDX,QWORD PTR [RBX+80]
            mov RSI,QWORD PTR [RBX+88]
            mov QWORD PTR [RBX+88],RDX
            mov QWORD PTR [RBX+80],RSI
            jmp .L_41f7dd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41fd38:

            mov ECX,EBP
            shr EDX,13
            mov ESI,EBP
            and ECX,4294967263
            and EDX,1
            mov R13D,0
            sub ECX,65
            cmp CL,25
            mov ECX,EAX
            ja .L_41f9cc

            mov R14D,1
            jmp .L_41f7bb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fd68:

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_41fd81:

            call .L_41c270
.L_41fd86:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41ff10

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_41ff63

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_41ff72

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_41fdeb:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            jne .L_41f972

            jmp .L_41f977
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fe18:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+80],RAX
.L_41fe2e:

            call .L_41c270
.L_41fe33:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_420276

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_4202d8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_4202e7

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41fe92:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41fcab

            jmp .L_41fcb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fec0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
.L_41fec9:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41fece:

            jmp .L_41f977
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fed8:

            test RDX,RDX
            je .L_41fef6

            cmp RDX,1
            je .L_42031c

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_41fef6:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41f953
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ff10:

            test RDX,RDX
            je .L_41ff2e

            cmp RDX,1
            je .L_420332

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_41ff2e:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_41fdeb
.L_41ff41:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_41ff50:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41f953
.L_41ff63:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_41ff72:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_41fdeb
.L_41ff85:

            call _ZNSt8ios_baseC2Ev@PLT

            mov BYTE PTR [RSP+488],0
            mov RAX,QWORD PTR [RBP-24]
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R12
            mov QWORD PTR [RSP+496],0
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RDI],RAX
.L_420002:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_420007:

            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R13+40]
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+160],R15
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+240],0
            mov BYTE PTR [RSP+248],0
.L_4200c9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4200ce:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_4200de:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,979
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42011a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4361c0]
            mov EDX,27
.L_42012a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42012f:

            cmp BYTE PTR [RSP+144],0
            jne .L_41f6ad

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_420421

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_42037a

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_4201b7:

            call .L_41c270
.L_4201bc:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_420484

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_420462

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_420471

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_420221:

            mov RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_42024a
.L_420245:

            call _ZdlPv@PLT
.L_42024a:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_420259:

            call write@PLT
.L_42025e:

            jmp .L_41fcc4
.L_420263:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
.L_42026c:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_420271:

            jmp .L_41fcb0
.L_420276:

            test RDX,RDX
            je .L_420294

            cmp RDX,1
            je .L_42034b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_420294:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41fe92
.L_4202a7:

            test RDX,RDX
            je .L_4202c5

            cmp RDX,1
            je .L_420361

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_4202c5:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_41fc8c
.L_4202d8:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_4202e7:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41fe92
.L_4202fa:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_420309:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_41fc8c
.L_42031c:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_41fef6
.L_420332:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_41ff2e
.L_42034b:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_420294
.L_420361:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4202c5
.L_42037a:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+80],RAX
.L_420390:

            call .L_41c270

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_420439

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_4204ac

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_4204bb

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4203f4:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_420245

            jmp .L_42024a
.L_420421:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42042f:

            jmp .L_42024a
.L_420434:

            call __stack_chk_fail@PLT
.L_420439:

            test RDX,RDX
            je .L_420457

            cmp RDX,1
            je .L_4204ce

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
.L_420457:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_4203f4
.L_420462:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_420471:

            mov RAX,QWORD PTR [RSP+24]
            add RAX,16
            mov QWORD PTR [RSP+112],RAX
            jmp .L_420221
.L_420484:

            test RDX,RDX
            je .L_42049e

            cmp RDX,1
            je .L_4204e4

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
.L_42049e:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_420221
.L_4204ac:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_4204bb:

            mov RAX,QWORD PTR [RSP+24]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_4203f4
.L_4204ce:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_420457
.L_4204e4:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            jmp .L_42049e
.L_4204fa:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
.L_420508:

            call _Unwind_Resume@PLT
.L_42050d:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_420521:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_420539

            call _ZdlPv@PLT
.L_420539:

            call _ZSt9terminatev@PLT
.L_42053e:

            jmp .L_420521
.L_420540:

            jmp .L_4204fa
.L_420542:

            jmp .L_420521
.L_420544:

            jmp .L_4204fa
.L_420546:

            mov R13,RAX
.L_420549:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+264],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
            call _Unwind_Resume@PLT
.L_420562:

            jmp .L_420521
.L_420564:

            jmp .L_420521
.L_420566:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RSP+RAX*1+152],RCX
            jmp .L_420549
.L_42058f:

            jmp .L_420546
.L_420591:

            jmp .L_420566
.L_420593:

            jmp .L_42050d
.L_420598:

            jmp .L_42050d
.L_42059d:

            jmp .L_420566
.L_42059f:

            jmp .L_420546
.L_4205a1:

            jmp .L_420521
.L_4205a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4205b0:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBX,RDI
            add RDI,24
            mov RBP,RSI
            sub RSP,16
.L_4205c5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_42061c

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBX
.L_4205eb:

            call .L_41f490
.L_4205f0:

            mov RDI,QWORD PTR [RSP]
            mov RBX,RAX
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_42061c

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_420621

            add RSP,16
.L_420617:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42061c:

            call abort@PLT
.L_420621:

            call __stack_chk_fail@PLT
.L_420626:

            mov RBX,RAX
            mov RDI,RSP
            call .L_40c0f0

            mov RDI,RBX
.L_420634:

            call _Unwind_Resume@PLT
.L_420639:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420640:

            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            jmp .L_4235c0
.L_42064c:

            nop
            nop
            nop
            nop
.L_420650:

            mov R8D,1
            xor ECX,ECX
            xor EDX,EDX
            jmp .L_4235c0
.L_42065f:

            nop
.L_420660:

            xor R8D,R8D
            mov ECX,1
            xor EDX,EDX
            jmp .L_4235c0
.L_42066f:

            nop
.L_420670:

            mov R8D,1
            mov ECX,1
            xor EDX,EDX
            jmp .L_4235c0
.L_420682:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420690:

            xor R8D,R8D
            xor ECX,ECX
            mov EDX,1
            jmp .L_4235c0
.L_42069f:

            nop
.L_4206a0:

            mov R8D,1
            xor ECX,ECX
            mov EDX,1
            jmp .L_4235c0
.L_4206b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4206c0:

            xor R8D,R8D
            mov ECX,1
            mov EDX,1
            jmp .L_4235c0
.L_4206d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4206e0:

            mov R8D,1
            mov ECX,1
            mov EDX,1
            jmp .L_4235c0
.L_4206f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420700:

            mov EDX,DWORD PTR [RSI+48]
            movzx ECX,BYTE PTR [RSI+33]
            movzx R8D,BYTE PTR [RSI+34]
            not EDX
            shr EDX,31
            jmp .L_4235c0
.L_420716:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420720:

            push R14
            push R13
            mov R13D,1
            push R12
            push RBP
            push RBX
            sub RSP,32
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+8]
            cmp EAX,-1
            je .L_420770
.L_42074a:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_42089f

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_420770:

            mov R12,RDI
            lea RDI,QWORD PTR [RDI+24]
            mov QWORD PTR [RSP+8],RSI
            mov RBP,RDX
            mov R14D,ECX
            mov QWORD PTR [RSP+16],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            mov EBX,EAX
            mov RSI,QWORD PTR [RSP+8]
            jne .L_42085a

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,-1
            jne .L_420848

            mov RAX,QWORD PTR [R12+80]
            cmp BYTE PTR [RSI+32],0
            mov EDX,DWORD PTR [RAX+28]
            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+36],EDX
            mov RAX,QWORD PTR [R12]
            je .L_420860

            mov EDX,DWORD PTR [RAX+4]
.L_4207c9:

            mov RSI,QWORD PTR [R12+80]
            mov ECX,R14D
            mov RDI,R12
            call .L_41c7c0

            mov RSI,QWORD PTR [R12+80]
            mov EDX,R14D
.L_4207e1:

            call .L_41f0b0

            test RAX,RAX
            mov RSI,RAX
            mov QWORD PTR [RBP],RAX
            je .L_420888

            cmp RAX,1
            je .L_420890

            cmp RAX,2
            mov R13D,4294967293
            jne .L_42082d

            jmp .L_420876
          .byte 0x66
          .byte 0x90
.L_420810:

            mov RSI,QWORD PTR [RBP]
            cmp RSI,RAX
            je .L_420822

            cmp R13D,-3
            jne .L_420870

            mov R13D,EBX
.L_420822:

            add EBX,1
            cmp EBX,256
            je .L_420876
.L_42082d:

            mov EDX,EBX
            mov RDI,R12
            call .L_41f490
.L_420837:

            test RAX,RAX
            jne .L_420810

            mov DWORD PTR [RBP+8],R13D
            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
.L_420848:

            mov RDI,QWORD PTR [RSP+16]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            je .L_42074a
.L_42085a:

            call abort@PLT
          .byte 0x90
.L_420860:

            mov EDX,DWORD PTR [RAX+8]
            jmp .L_4207c9
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420870:

            mov R13D,4294967294
.L_420876:

            mov DWORD PTR [RBP+8],R13D
            mov R13D,1
            jmp .L_420848
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420888:

            xor R13D,R13D
            jmp .L_420848
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420890:

            mov DWORD PTR [RBP+8],4294967293
            mov R13D,1
            jmp .L_420848
.L_42089f:

            call __stack_chk_fail@PLT
.L_4208a4:

            lea RDI,QWORD PTR [RSP+16]
            mov RBX,RAX
            call .L_40c0f0

            mov RDI,RBX
.L_4208b4:

            call _Unwind_Resume@PLT
.L_4208b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4208c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,552
.L_4208d4:

            mov RDX,QWORD PTR [RSI]
            mov RSI,QWORD PTR [RSI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            cmp RDX,RSI
            jb .L_42090a

            movsxd RAX,DWORD PTR [RBP+8]
            movsxd RCX,DWORD PTR [RBP+24]
            add RAX,RDX
            add RCX,RSI
            cmp RCX,RAX
            jae .L_420ba0
.L_42090a:

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_4209a3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4209a8:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            lea R13,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+264],RAX
            mov QWORD PTR [RSP+160],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_420a74:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_420a79:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_420a89:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1607
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_420ac5:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4361f9]
            mov EDX,27
.L_420ad5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_420ada:

            cmp BYTE PTR [RSP+144],0
            je .L_420c78
.L_420ae8:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+264],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_420b25

            call _ZdlPv@PLT
.L_420b25:

            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],R13
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov QWORD PTR [RBP+40],1
            mov BYTE PTR [RSP+7],1
.L_420b69:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+7]
            jne .L_4214f8

            add RSP,552
.L_420b8c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420ba0:

            cmp BYTE PTR [RBP+34],0
            mov RBX,RDI
            jne .L_420dc0

            cmp RCX,RAX
            je .L_420e98

            movzx EDX,BYTE PTR [RAX]
            cmp DL,10
            je .L_420dd6
.L_420bc2:

            mov EAX,EDX
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_420ea8

            lea EAX,DWORD PTR [RDX-48]
            cmp AL,9
            jbe .L_420ea8

            xor R13D,R13D
            cmp DL,95
            mov EAX,6
            je .L_420ea8

            nop
            nop
.L_420bf0:

            cmp BYTE PTR [RBP+32],0
            jne .L_420bfe

            mov RDX,QWORD PTR [RBX]
            cmp BYTE PTR [RDX],0
            je .L_420c01
.L_420bfe:

            or EAX,1
.L_420c01:

            movsxd R14,EAX
            mov ECX,R13D
            mov RSI,RBP
            lea R12,QWORD PTR [R14+14]
            mov RDI,RBX
            shl R12,4
            lea R15,QWORD PTR [RBX+R12*1+8]
            mov RDX,R15
.L_420c1d:

            call .L_420720

            test AL,AL
            jne .L_420c4f

            mov RSI,QWORD PTR [RBP+56]
            mov RDI,RBX
            call .L_41e0e0

            mov ECX,R13D
            mov RDX,R15
            mov RSI,RBP
            mov RDI,RBX
            call .L_420720
.L_420c43:

            test AL,AL
            mov BYTE PTR [RSP+7],AL
            je .L_420ec0
.L_420c4f:

            lea RAX,QWORD PTR [R14+14]
            shl RAX,4
            mov RAX,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RBP+40],RAX
            mov EAX,DWORD PTR [RBX+R12*1+16]
            mov BYTE PTR [RSP+7],1
            mov DWORD PTR [RBP+48],EAX
            jmp .L_420b69
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420c78:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_4212b8

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_420df0

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_420cf2:

            call .L_41c270
.L_420cf7:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_421308

            mov RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_421148

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_421157

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_420d5c:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_420d80
.L_420d7b:

            call _ZdlPv@PLT
.L_420d80:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_420d8f:

            call write@PLT
.L_420d94:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_420ae8

            call _ZdlPv@PLT

            jmp .L_420ae8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420dc0:

            cmp RDX,RSI
            je .L_420e98

            movzx EDX,BYTE PTR [RDX-1]
            cmp DL,10
            jne .L_420bc2
.L_420dd6:

            mov R13D,1
            mov EAX,2
            jmp .L_420bf0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420df0:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+80],RAX
.L_420e06:

            call .L_41c270
.L_420e0b:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4212d0

            mov RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_421120

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42112f

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_420e6a:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_420d7b

            jmp .L_420d80
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420e98:

            mov R13D,5
            xor EAX,EAX
            jmp .L_420bf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420ea8:

            mov R13D,8192
            mov EAX,4
            jmp .L_420bf0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420ec0:

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_420f59:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_420f5e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            lea R13,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+264],RAX
            mov QWORD PTR [RSP+160],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_42102a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42102f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_42103f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1654
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42107b:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436160]
            mov EDX,30
.L_42108b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_421090:

            cmp BYTE PTR [RSP+144],0
            je .L_421170
.L_42109e:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+264],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_4210db

            call _ZdlPv@PLT
.L_4210db:

            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],R13
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RBP+64],1
            jmp .L_420b69
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421120:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42112f:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_420e6a

            nop
            nop
            nop
            nop
            nop
            nop
.L_421148:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_421157:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_420d5c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421170:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_421414

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_421343

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_4211ea:

            call .L_41c270
.L_4211ef:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_421427

            mov RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_4214a7

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_4214b6

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_421254:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_421278
.L_421273:

            call _ZdlPv@PLT
.L_421278:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_421287:

            call write@PLT
.L_42128c:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_42109e

            call _ZdlPv@PLT

            jmp .L_42109e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4212b8:

            mov RDI,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RBX+88]
.L_4212c1:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4212c6:

            jmp .L_420d80
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4212d0:

            test RDX,RDX
            je .L_4212f0

            cmp RDX,1
            je .L_4213e5

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
.L_4212f0:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_420e6a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421308:

            test RDX,RDX
            je .L_421330

            cmp RDX,1
            je .L_4213fb

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421330:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_420d5c
.L_421343:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+80],RAX
.L_421359:

            call .L_41c270

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_421458

            mov RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_421485

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_421494

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4213bd:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_421273

            jmp .L_421278
.L_4213e5:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4212f0
.L_4213fb:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_421330
.L_421414:

            mov RDI,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_421422:

            jmp .L_421278
.L_421427:

            test RDX,RDX
            je .L_421445

            cmp RDX,1
            je .L_4214c9

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_421445:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_421254
.L_421458:

            test RDX,RDX
            je .L_421472

            cmp RDX,1
            je .L_4214e2

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_421472:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_4213bd
.L_421485:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_421494:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4213bd
.L_4214a7:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_4214b6:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_421254
.L_4214c9:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_421445
.L_4214e2:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_421472
.L_4214f8:

            call __stack_chk_fail@PLT
.L_4214fd:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
.L_42150b:

            call _Unwind_Resume@PLT
.L_421510:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_421528

            call _ZdlPv@PLT
.L_421528:

            call _ZSt9terminatev@PLT
.L_42152d:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_421541:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
.L_421562:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42157b:

            jmp .L_421510
.L_42157d:

            mov RBP,RAX
            jmp .L_421562
.L_421582:

            jmp .L_42152d
.L_421584:

            jmp .L_421541
.L_421586:

            jmp .L_421510
.L_421588:

            jmp .L_42157d
.L_42158a:

            jmp .L_421510
.L_42158c:

            jmp .L_4214fd
.L_421591:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4215a0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_4215b4:

            mov R13,QWORD PTR [RSP+216]
            mov DWORD PTR [RSP+4],R9D
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov R12,QWORD PTR [RSP+208]
            mov RSI,QWORD PTR [RSP+224]
            mov QWORD PTR [R13],0
            movzx EBX,BYTE PTR [RDI+16]
            test BL,BL
            je .L_421630

            mov BYTE PTR [R12],1
            xor EBX,EBX
.L_4215fb:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_421755

            add RSP,152
.L_42161b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421630:

            mov RBP,RDI
            lea RDI,QWORD PTR [RDI+112]
            mov BYTE PTR [R12],0
            mov QWORD PTR [RSP+24],RSI
            mov DWORD PTR [RSP+16],ECX
            mov R15D,R8D
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+32],RDI
            mov BYTE PTR [RSP+40],0
            call pthread_rwlock_rdlock@PLT

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            jne .L_42175a

            lea RAX,QWORD PTR [RSP+32]
            movdqu XMM0,XMMWORD PTR [R14]
            mov QWORD PTR [RSP+128],RSI
            mov RDI,RBP
            mov QWORD PTR [RSP+88],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+104],RAX
            movzx EAX,BYTE PTR [RSP+4]
            mov DWORD PTR [RSP+96],4294967295
            movaps XMMWORD PTR [RSP+48],XMM0
            mov BYTE PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RSP+82],AL
            lea RAX,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+80],CL
            movdqu XMM0,XMMWORD PTR [RDX]
            mov RSI,RAX
            mov BYTE PTR [RSP+81],R15B
            mov QWORD PTR [RSP+16],RAX
            movaps XMMWORD PTR [RSP+64],XMM0
.L_4216dd:

            call .L_4208c0

            test AL,AL
            je .L_421710

            mov RDX,QWORD PTR [RSP+88]
            cmp RDX,1
            je .L_421715

            cmp RDX,2
            je .L_421728

            mov RSI,QWORD PTR [RSP+16]
            mov RDI,RBP
            call .L_41ccc0
.L_421704:

            cmp BYTE PTR [RSP+112],0
            je .L_421748

            nop
            nop
            nop
            nop
            nop
.L_421710:

            mov BYTE PTR [R12],1
.L_421715:

            mov RDI,QWORD PTR [RSP+8]
            call .L_41cbf0

            jmp .L_4215fb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421728:

            cmp R15B,BYTE PTR [RSP+4]
            mov RDX,QWORD PTR [R14]
            je .L_42174d

            movsxd RCX,DWORD PTR [R14+8]
            mov EBX,EAX
            add RDX,RCX
            mov QWORD PTR [R13],RDX
            jmp .L_421715
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421748:

            mov RDX,QWORD PTR [RSP+120]
.L_42174d:

            mov QWORD PTR [R13],RDX
            mov EBX,EAX
            jmp .L_421715
.L_421755:

            call __stack_chk_fail@PLT
.L_42175a:

            call abort@PLT
.L_42175f:

            mov RDI,QWORD PTR [RSP+8]
            mov RBX,RAX
            call .L_41cbf0

            mov RDI,RBX
.L_42176f:

            call _Unwind_Resume@PLT
.L_421774:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421780:

            push R15
            push R14
            push R13
            push R12
            mov R13,R9
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,56
.L_421797:

            movdqu XMM0,XMMWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov R12,QWORD PTR [RSP+112]
            movq RAX,XMM0
            mov R15,QWORD PTR [RSP+120]
            movaps XMMWORD PTR [RSP+16],XMM0
            test RAX,RAX
            mov BYTE PTR [R12],0
            je .L_421990
.L_4217cd:

            cmp BYTE PTR [RBX+2],0
            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            jne .L_4218c0

            mov EDI,EDX
            mov ESI,EAX
.L_4217e2:

            test SIL,SIL
            je .L_421820

            mov RSI,QWORD PTR [RBP]
            cmp QWORD PTR [RSP+16],RSI
            je .L_421820
.L_4217f2:

            xor EAX,EAX
.L_4217f4:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4219e7

            add RSP,56
.L_42180c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421820:

            test DIL,DIL
            jne .L_4218d0
.L_421829:

            cmp ECX,1
            je .L_421836

            test AL,AL
            je .L_4219a8
.L_421836:

            cmp R8D,3
            mov R14D,1
            je .L_4218f6

            cmp R8D,2
            je .L_4218f0
.L_421850:

            test DL,DL
            jne .L_4218f0

            test R13,R13
            jne .L_421a26

            mov ESI,1
            mov RDI,RBX
            call .L_41dc90

            lea RDX,QWORD PTR [RSP+16]
            sub RSP,8
.L_421877:

            movzx R9D,BYTE PTR [RBX+2]
            push R15
            mov R8D,1
            mov RSI,RBP
            mov RDI,RAX
            lea RCX,QWORD PTR [RSP+24]
            xor R9D,1
            push RCX
            push R12
            movzx R9D,R9B
            mov ECX,R14D
            call .L_4215a0

            movzx EDX,BYTE PTR [R12]
            add RSP,32
.L_4218ab:

            xor EDX,1
            and AL,DL
            je .L_4217f2

            jmp .L_4217f4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4218c0:

            mov EDI,EAX
            mov ESI,EDX
            jmp .L_4217e2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4218d0:

            movsxd RDI,DWORD PTR [RSP+24]
            movsxd RSI,DWORD PTR [RBP+8]
            add RDI,QWORD PTR [RSP+16]
            add RSI,QWORD PTR [RBP]
            cmp RDI,RSI
            jne .L_4217f2

            jmp .L_421829
.L_4218f0:

            mov R8D,1
.L_4218f6:

            mov ESI,R8D
            mov RDI,RBX
            call .L_41dc90

            lea RDX,QWORD PTR [RSP+16]
            sub RSP,8
.L_42190a:

            movzx R9D,BYTE PTR [RBX+2]
            push R15
            xor R8D,R8D
            lea RCX,QWORD PTR [RSP+24]
            xor R9D,1
            push RCX
            push R12
            movzx R9D,R9B
            mov ECX,R14D
.L_421927:

            mov RSI,RBP
            mov RDI,RAX
            call .L_4215a0

            add RSP,32
.L_421936:

            cmp BYTE PTR [R12],1
            je .L_4217f2

            test AL,AL
            je .L_4217f2

            cmp BYTE PTR [RBX+2],0
            mov RDX,QWORD PTR [RBP]
            mov RAX,RDX
            je .L_4219c0
.L_421956:

            cmp QWORD PTR [RSP+8],RAX
            jne .L_4217f2

            test R13,R13
            je .L_421a82
.L_42196a:

            movzx EAX,BYTE PTR [RBX+2]
            mov RCX,QWORD PTR [RSP+8]
            test AL,AL
            jne .L_4219d0

            sub RCX,RDX
            mov QWORD PTR [R13],RDX
            mov EAX,1
            mov DWORD PTR [R13+8],ECX
            jmp .L_4217f4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421990:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RSP+16],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RSP+24],EAX
            jmp .L_4217cd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4219a8:

            cmp R8D,2
            je .L_4219ec

            xor R14D,R14D
            cmp R8D,3
            jne .L_421850

            jmp .L_4218f6
.L_4219c0:

            movsxd RAX,DWORD PTR [RBP+8]
            add RAX,RDX
            jmp .L_421956
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219d0:

            movsxd RSI,DWORD PTR [RBP+8]
            mov QWORD PTR [R13],RCX
            add RDX,RSI
            sub RDX,RCX
            mov DWORD PTR [R13+8],EDX
            jmp .L_4217f4
.L_4219e7:

            call __stack_chk_fail@PLT
.L_4219ec:

            mov ESI,1
            mov RDI,RBX
            call .L_41dc90

            movzx R9D,BYTE PTR [RBX+2]
            lea RDX,QWORD PTR [RSP+16]
            sub RSP,8
.L_421a07:

            push R15
            xor R8D,R8D
            lea RCX,QWORD PTR [RSP+24]
            xor R9D,1
            push RCX
            movzx R9D,R9B
            push R12
            mov ECX,1
            jmp .L_421927
.L_421a26:

            mov ESI,R8D
            mov RDI,RBX
            call .L_41dc90

            lea RDX,QWORD PTR [RSP+16]
            sub RSP,8
            movzx R9D,BYTE PTR [RBX+2]
            push R15
            xor R8D,R8D
            mov RSI,RBP
            mov RDI,RAX
            lea RCX,QWORD PTR [RSP+24]
            xor R9D,1
            push RCX
            push R12
            movzx R9D,R9B
            mov ECX,R14D
            call .L_4215a0

            add RSP,32
            cmp BYTE PTR [R12],1
            je .L_4217f2

            test AL,AL
            je .L_4217f2

            mov RDX,QWORD PTR [RBP]
            jmp .L_42196a
.L_421a82:

            mov EAX,1
            jmp .L_4217f4
.L_421a8c:

            nop
            nop
            nop
            nop
.L_421a90:

            push R15
            push R14
            xor R14D,R14D
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,312
.L_421aa4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+16],0
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            je .L_421af8
.L_421ac6:

            mov RCX,QWORD PTR [RSP+296]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_4223bd

            add RSP,312
.L_421ae7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421af8:

            lea RAX,QWORD PTR [RSP+112]
            mov R13,RDI
            lea RDI,QWORD PTR [RDI+112]
            mov R15,RSI
            mov DWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+80],RDI
            mov BYTE PTR [RSP+88],0
            mov QWORD PTR [RSP+136],RAX
            mov QWORD PTR [RSP+144],RAX
            call pthread_rwlock_rdlock@PLT

            test EAX,EAX
            jne .L_4223c2

            lea RAX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+160]
            mov RDI,R13
            mov QWORD PTR [RSP+160],0
            mov DWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov DWORD PTR [RSP+184],0
            mov BYTE PTR [RSP+193],0
            mov BYTE PTR [RSP+194],0
            mov QWORD PTR [RSP+200],0
            mov DWORD PTR [RSP+208],4294967295
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+216],RAX
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+232],0
            mov QWORD PTR [RSP+240],0
            mov BYTE PTR [RSP+192],1
.L_421bf2:

            call .L_4208c0
.L_421bf7:

            test AL,AL
            mov R14D,EAX
            je .L_421e4a

            mov R12,QWORD PTR [RSP+200]
            cmp R12,1
            je .L_4220e8

            cmp R12,2
            je .L_421e70

            mov RAX,QWORD PTR [R15]
            lea RDI,QWORD PTR [R13+24]
            mov QWORD PTR [R15+8],0
            mov BYTE PTR [RAX],0
            mov QWORD PTR [RSP+72],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+52],EAX
            jne .L_4223c2

            mov R10D,DWORD PTR [RSP+12]
            mov RSI,QWORD PTR [RSP+128]
            test R10D,R10D
            jle .L_4222f2

            mov RAX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+48],0
            add RAX,8
            mov QWORD PTR [RSP+24],RAX
.L_421c72:

            test RSI,RSI
            je .L_422260

            mov RAX,RSI
            mov RBX,QWORD PTR [RSP+24]
            jmp .L_421c94
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421c88:

            mov RBX,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_421ca3
.L_421c94:

            cmp R12,QWORD PTR [RAX+32]
            jbe .L_421c88

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_421c94
.L_421ca3:

            cmp RBX,QWORD PTR [RSP+24]
            je .L_421cb4

            cmp R12,QWORD PTR [RBX+32]
            jae .L_421eb0
.L_421cb4:

            mov EDI,48
.L_421cb9:

            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],R12
            mov DWORD PTR [RAX+40],0
            mov RSI,RBX
            mov RBP,RAX
            call .L_4233c0

            test RDX,RDX
            je .L_422120

            cmp QWORD PTR [RSP+24],RDX
            je .L_421cf6

            test RAX,RAX
            je .L_421ec0
.L_421cf6:

            mov EDI,1
.L_421cfb:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,RBP
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RSP+152],1
.L_421d11:

            mov R9D,DWORD PTR [RBP+40]
            mov RSI,QWORD PTR [RSP+128]
            test R9D,R9D
            jg .L_421ef8

            test RSI,RSI
            je .L_422270
.L_421d2f:

            mov RBP,QWORD PTR [RSP+24]
            jmp .L_421d4c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421d40:

            mov RBP,RSI
            mov RSI,QWORD PTR [RSI+16]
            test RSI,RSI
            je .L_421d5b
.L_421d4c:

            cmp R12,QWORD PTR [RSI+32]
            jbe .L_421d40

            mov RSI,QWORD PTR [RSI+24]
            test RSI,RSI
            jne .L_421d4c
.L_421d5b:

            cmp RBP,QWORD PTR [RSP+24]
            je .L_421d68

            cmp R12,QWORD PTR [RBP+32]
            jae .L_421dc8
.L_421d68:

            mov EDI,48
            mov RBX,RBP
            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],R12
            mov DWORD PTR [RAX+40],0
            mov RSI,RBX
            mov RBP,RAX
            call .L_4233c0

            test RDX,RDX
            je .L_422140

            cmp QWORD PTR [RSP+24],RDX
            je .L_421dad

            test RAX,RAX
            je .L_421ed8
.L_421dad:

            mov EDI,1
.L_421db2:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,RBP
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RSP+152],1
.L_421dc8:

            add DWORD PTR [RBP+40],1
            mov EDX,256
            mov RSI,R12
            mov RDI,R13
            call .L_41f490

            test RAX,RAX
            je .L_421e35

            cmp RAX,1
            je .L_421dfb

            cmp RAX,2
            je .L_421ef0

            test BYTE PTR [RAX+13],16
            jne .L_421ef0
.L_421dfb:

            xor EBX,EBX
            jmp .L_421e20
          .byte 0x90
.L_421e00:

            cmp RAX,2
            je .L_421e78

            jbe .L_421e11

            mov R8D,DWORD PTR [RAX+8]
            test R8D,R8D
            jg .L_421e78
.L_421e11:

            add EBX,1
            cmp EBX,256
            je .L_421ef0
.L_421e20:

            mov EDX,EBX
            mov RSI,R12
            mov RDI,R13
            call .L_41f490

            test RAX,RAX
            mov RBP,RAX
            jne .L_421e00
.L_421e35:

            xor R14D,R14D
.L_421e38:

            mov RDI,QWORD PTR [RSP+72]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_4223c2
.L_421e4a:

            mov RDI,QWORD PTR [RSP+40]
            call .L_41cbf0

            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+16]
            call .L_422b10

            jmp .L_421ac6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421e70:

            xor R14D,R14D
            jmp .L_421e4a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421e78:

            mov RSI,QWORD PTR [R15+8]
            movsx R8D,BL
            mov ECX,1
            xor EDX,EDX
            mov RDI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            add DWORD PTR [RSP+48],1
            mov RSI,QWORD PTR [RSP+128]
            mov R12,RBP
            mov EAX,DWORD PTR [RSP+48]
            cmp DWORD PTR [RSP+12],EAX
            jne .L_421c72

            jmp .L_421ef8
          .byte 0x90
.L_421eb0:

            mov ECX,DWORD PTR [RBX+40]
            test ECX,ECX
            jle .L_421d2f

            jmp .L_421ef8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421ec0:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBP+32],RAX
            setb DIL
            jmp .L_421cfb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421ed8:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBP+32],RAX
            setb DIL
            jmp .L_421db2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421ef0:

            mov RSI,QWORD PTR [RSP+128]
.L_421ef8:

            mov RBX,QWORD PTR [RSP+16]
            mov RDI,RBX
            lea R15,QWORD PTR [RBX+8]
            call .L_422b10

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+144],R15
            mov QWORD PTR [RSP+152],0
            mov R12,QWORD PTR [RSP+200]
            mov QWORD PTR [RAX+8],0
            mov RAX,QWORD PTR [RAX]
            mov BYTE PTR [RAX],0
.L_421f4c:

            mov RAX,QWORD PTR [RSP+128]
            mov RBX,R15
            test RAX,RAX
            mov RDX,RAX
            jne .L_421f74

            jmp .L_421f8f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421f68:

            mov RBX,RDX
            mov RDX,QWORD PTR [RDX+16]
.L_421f6f:

            test RDX,RDX
            je .L_421f80
.L_421f74:

            cmp R12,QWORD PTR [RDX+32]
            jbe .L_421f68

            mov RDX,QWORD PTR [RDX+24]
            jmp .L_421f6f
.L_421f80:

            cmp RBX,R15
            je .L_421f8f

            cmp R12,QWORD PTR [RBX+32]
            jae .L_422280
.L_421f8f:

            mov EDI,48
            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],R12
            mov DWORD PTR [RAX+40],0
            mov RSI,RBX
            mov RBP,RAX
            call .L_4233c0

            test RDX,RDX
            je .L_422290

            cmp R15,RDX
            je .L_421fcf

            test RAX,RAX
            je .L_4222cc
.L_421fcf:

            mov EDI,1
.L_421fd4:

            mov RCX,R15
            mov RSI,RBP
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RSP+152],1
.L_421fe8:

            mov EDI,DWORD PTR [RBP+40]
            test EDI,EDI
            jg .L_42218f

            mov RAX,QWORD PTR [RSP+128]
            test RAX,RAX
            je .L_4222c4
.L_422004:

            mov RBP,R15
            jmp .L_42201c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422010:

            mov RBP,RAX
            mov RAX,QWORD PTR [RAX+16]
.L_422017:

            test RAX,RAX
            je .L_422030
.L_42201c:

            cmp R12,QWORD PTR [RAX+32]
            jbe .L_422010

            mov RAX,QWORD PTR [RAX+24]
            jmp .L_422017
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422030:

            cmp RBP,R15
            je .L_42203b

            cmp R12,QWORD PTR [RBP+32]
            jae .L_422097
.L_42203b:

            mov EDI,48
            mov RBX,RBP
            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],R12
            mov DWORD PTR [RAX+40],0
            mov RSI,RBX
            mov RBP,RAX
            call .L_4233c0

            test RDX,RDX
            je .L_4222aa

            cmp R15,RDX
            je .L_42207e

            test RAX,RAX
            je .L_4222df
.L_42207e:

            mov EDI,1
.L_422083:

            mov RCX,R15
            mov RSI,RBP
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RSP+152],1
.L_422097:

            add DWORD PTR [RBP+40],1
            mov EBX,255
            jmp .L_4220cb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4220a8:

            cmp RAX,2
            je .L_422160

            jbe .L_4220bf

            mov ESI,DWORD PTR [RAX+8]
            test ESI,ESI
            jg .L_422160
.L_4220bf:

            sub EBX,1
            cmp EBX,-1
            je .L_421e38
.L_4220cb:

            mov EDX,EBX
            mov RSI,R12
            mov RDI,R13
            call .L_41f490
.L_4220d8:

            test RAX,RAX
            mov RBP,RAX
            jne .L_4220a8

            jmp .L_421e35
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4220e8:

            mov RDX,QWORD PTR [R15+8]
            lea RCX,QWORD PTR [RIP+.L_4369d8]
            xor R8D,R8D
            xor ESI,ESI
            mov RDI,R15
.L_4220fb:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            mov RDI,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RIP+.L_4369d8]
            xor R8D,R8D
            xor ESI,ESI
            mov RDX,QWORD PTR [RDI+8]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_42211a:

            jmp .L_421e4a
          .byte 0x90
.L_422120:

            mov RDI,RBP
            mov QWORD PTR [RSP+56],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+56]
            mov RBP,RAX
            jmp .L_421d11
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422140:

            mov RDI,RBP
            mov QWORD PTR [RSP+56],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+56]
            mov RBP,RAX
            jmp .L_421dc8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422160:

            mov RDI,QWORD PTR [RSP+32]
            movsx R8D,BL
            mov ECX,1
            xor EDX,EDX
            mov RSI,QWORD PTR [RDI+8]
.L_422174:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            add DWORD PTR [RSP+52],1
            mov R12,RBP
            mov EAX,DWORD PTR [RSP+52]
            cmp DWORD PTR [RSP+12],EAX
            jne .L_421f4c
.L_42218f:

            mov R15,QWORD PTR [RSP+32]
            lea RBX,QWORD PTR [RSP+256]
            lea RSI,QWORD PTR [RSP+96]
            mov RDI,RBX
            mov RAX,QWORD PTR [R15]
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [R15+8]
            mov DWORD PTR [RSP+104],EAX
            call .L_415280
.L_4221b9:

            mov RSI,QWORD PTR [RSP+256]
            mov RDI,QWORD PTR [R15]
            lea RCX,QWORD PTR [RBX+16]
            mov RDX,QWORD PTR [RSP+264]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_422346

            mov RDI,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+272]
            add RDI,16
            cmp RAX,RDI
            je .L_422380

            mov R9,QWORD PTR [RSP+32]
            test RAX,RAX
            mov RDI,QWORD PTR [R9+16]
            mov QWORD PTR [R9],RSI
            mov QWORD PTR [R9+8],RDX
            mov QWORD PTR [R9+16],RCX
            je .L_422390

            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDI
.L_422223:

            mov QWORD PTR [RSP+264],0
            mov BYTE PTR [RAX],0
            add RBX,16
            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,RBX
            je .L_422248

            call _ZdlPv@PLT
.L_422248:

            mov RAX,QWORD PTR [RSP+32]
            cmp QWORD PTR [RAX+8],0
            setne R14B
            jmp .L_421e38
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422260:

            mov RBX,QWORD PTR [RSP+24]
            jmp .L_421cb4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422270:

            mov RBP,QWORD PTR [RSP+24]
            jmp .L_421d68
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422280:

            mov EDX,DWORD PTR [RBX+40]
            test EDX,EDX
            jle .L_422004

            jmp .L_42218f
.L_422290:

            mov RDI,RBP
            mov QWORD PTR [RSP+24],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov RBP,RAX
            jmp .L_421fe8
.L_4222aa:

            mov RDI,RBP
            mov QWORD PTR [RSP+24],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov RBP,RAX
            jmp .L_422097
.L_4222c4:

            mov RBP,R15
            jmp .L_42203b
.L_4222cc:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBP+32],RAX
            setb DIL
            jmp .L_421fd4
.L_4222df:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBP+32],RAX
            setb DIL
            jmp .L_422083
.L_4222f2:

            mov RBX,QWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_422b10

            mov RAX,RBX
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+152],0
            add RAX,8
            mov QWORD PTR [RSP+136],RAX
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX+8],0
            mov RAX,QWORD PTR [RAX]
            mov BYTE PTR [RAX],0
            jmp .L_42218f
.L_422346:

            test RDX,RDX
            je .L_422366

            cmp RDX,1
            je .L_4223a1

            call memcpy@PLT

            mov RAX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+264]
            mov RDI,QWORD PTR [RAX]
.L_422366:

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_422223
.L_422380:

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX],RSI
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
.L_422390:

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+256],RAX
            jmp .L_422223
.L_4223a1:

            movzx EAX,BYTE PTR [RSP+272]
            mov BYTE PTR [RDI],AL
            mov RAX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+264]
            mov RDI,QWORD PTR [RAX]
            jmp .L_422366
.L_4223bd:

            call __stack_chk_fail@PLT
.L_4223c2:

            call abort@PLT
.L_4223c7:

            mov RBX,RAX
.L_4223ca:

            mov RDI,QWORD PTR [RSP+40]
            call .L_41cbf0

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+128]
            call .L_422b10

            mov RDI,RBX
.L_4223e9:

            call _Unwind_Resume@PLT
.L_4223ee:

            lea RDI,QWORD PTR [RSP+72]
            mov RBX,RAX
            call .L_40c0f0

            jmp .L_4223ca
.L_4223fd:

            nop
            nop
            nop
.L_422400:

            push R14
            push R13
            mov R14D,ECX
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            add RDI,40
            mov R13,RDX
            sub RSP,16
.L_42241c:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_4224ca

            mov RBP,QWORD PTR [RBX+104]
            test RBP,RBP
            je .L_422488
.L_422446:

            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_4224ca

            mov RDX,R13
            mov ECX,R14D
            mov RSI,R12
            mov RDI,RBP
.L_42245f:

            call .L_421a90
.L_422464:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            jne .L_4224cf

            add RSP,16
.L_422478:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422488:

            mov EDI,368
.L_42248d:

            call _Znwm@PLT
.L_422492:

            mov RBP,RAX
            mov RAX,QWORD PTR [RBX+112]
            mov EDX,1
            mov RSI,RBX
            mov RDI,RBP
            mov RCX,RAX
            shr RCX,63
            add RCX,RAX
            sar RCX,1
.L_4224b1:

            call .L_41cd00
.L_4224b6:

            lea RAX,QWORD PTR [RIP+.L_41e0b0]
            mov QWORD PTR [RBX+104],RBP
            mov QWORD PTR [RBX+120],RAX
            jmp .L_422446
.L_4224ca:

            call abort@PLT
.L_4224cf:

            call __stack_chk_fail@PLT
.L_4224d4:

            mov RBX,RAX
.L_4224d7:

            mov RDI,RSP
            call .L_40c0f0

            mov RDI,RBX
.L_4224e2:

            call _Unwind_Resume@PLT
.L_4224e7:

            mov ESI,368
            mov RDI,RBP
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_4224d7
.L_4224f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422500:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            push RBX
.L_42250d:

            xor EBX,EBX
            sub RSP,328
            mov QWORD PTR [RBP-312],RDI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+16],0
            je .L_422556
.L_422532:

            mov RCX,QWORD PTR [RBP-56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_422976

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_422555:

            ret 
.L_422556:

            lea RDI,QWORD PTR [RDI+112]
            mov BYTE PTR [RBP-296],0
            mov QWORD PTR [RBP-304],RDI
            call pthread_rwlock_rdlock@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_42297b

            lea R12,QWORD PTR [RBP-144]
            mov RDI,QWORD PTR [RBP-312]
            lea RAX,QWORD PTR [RBP-304]
            mov QWORD PTR [RBP-144],0
            mov DWORD PTR [RBP-136],0
            mov RSI,R12
            mov QWORD PTR [RBP-128],0
            mov DWORD PTR [RBP-120],0
            mov BYTE PTR [RBP-112],0
            mov BYTE PTR [RBP-111],0
            mov BYTE PTR [RBP-110],0
            mov QWORD PTR [RBP-104],0
            mov DWORD PTR [RBP-96],4294967295
            mov QWORD PTR [RBP-352],RAX
            mov QWORD PTR [RBP-88],RAX
            mov BYTE PTR [RBP-80],0
            mov QWORD PTR [RBP-72],0
            mov QWORD PTR [RBP-64],0
.L_4225ed:

            call .L_4208c0

            test AL,AL
            je .L_4225fd

            cmp QWORD PTR [RBP-104],2
            ja .L_42260e
.L_4225fd:

            mov RDI,QWORD PTR [RBP-352]
            call .L_41cbf0

            jmp .L_422532
.L_42260e:

            movabs RAX,4611686019492741120
            lea RSI,QWORD PTR [RIP+_ZNSt3tr18__detail12__prime_listE]
            mov QWORD PTR [RBP-168],0
            mov QWORD PTR [RBP-160],RAX
            mov EDI,303
.L_422636:

            mov RAX,RDI
            sar RAX,1
            lea RCX,QWORD PTR [RSI+RAX*8]
            cmp QWORD PTR [RCX],9
            ja .L_422667

            jmp .L_4228a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422650:

            mov RDX,RAX
            sar RDX,1
            lea RCX,QWORD PTR [RSI+RDX*8]
            cmp QWORD PTR [RCX],9
            jbe .L_4228a6

            mov RAX,RDX
.L_422667:

            test RAX,RAX
            jne .L_422650
.L_42266c:

            mov RDI,QWORD PTR [RSI]
            test RDI,RDI
            js .L_422904

            pxor XMM0,XMM0
            cvtsi2ss XMM0,RDI
.L_422681:

            ucomiss XMM0,DWORD PTR [RIP+.L_436294]
            jae .L_4228bf

            cvttss2si RAX,XMM0
            mov QWORD PTR [RBP-152],RAX
.L_42269a:

            mov QWORD PTR [RBP-176],RDI
            call .L_41c170
.L_4226a6:

            mov QWORD PTR [RBP-184],RAX
            lea R14,QWORD PTR [RBP-256]
            lea RAX,QWORD PTR [RBP-192]
            sub RSP,8
            lea RDX,QWORD PTR [R12+40]
            mov QWORD PTR [RBP-288],0
            push 0
            mov RSI,RAX
            mov RDI,R14
            mov QWORD PTR [RBP-280],0
            mov QWORD PTR [RBP-272],0
            mov QWORD PTR [RBP-328],RAX
.L_4226f4:

            call .L_4231a0

            pop RCX
            pop RSI
            mov RSI,QWORD PTR [RBP-280]
            cmp RSI,QWORD PTR [RBP-272]
            je .L_422925

            test RSI,RSI
            je .L_42271b

            mov RAX,QWORD PTR [RBP-104]
            mov QWORD PTR [RSI],RAX
.L_42271b:

            add RSI,8
            mov QWORD PTR [RBP-280],RSI
.L_422726:

            mov RDI,QWORD PTR [RBP-288]
            mov RBX,RSI
            mov QWORD PTR [RBP-344],0
            sub RBX,RDI
            sar RBX,3
            cmp RDI,RSI
            je .L_422885

            mov RAX,QWORD PTR [RBP-328]
            add RAX,16
            mov QWORD PTR [RBP-320],RAX
            lea RAX,QWORD PTR [RBP-224]
            mov QWORD PTR [RBP-336],RAX
            lea RAX,QWORD PTR [RBP-288]
            mov QWORD PTR [RBP-360],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422780:

            mov RAX,QWORD PTR [RBP-344]
            xor EBX,EBX
            mov R12,QWORD PTR [RDI+RAX*8]
            mov RAX,QWORD PTR [RBP-328]
            lea R15,QWORD PTR [RAX+8]
            jmp .L_4227af
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4227a0:

            add EBX,1
            cmp EBX,257
            je .L_422858
.L_4227af:

            mov RDI,QWORD PTR [RBP-312]
            mov EDX,EBX
            mov RSI,R12
.L_4227bb:

            call .L_4205b0

            cmp RAX,2
            mov QWORD PTR [RBP-256],RAX
            jbe .L_4227a0

            mov RDX,QWORD PTR [RBP-176]
            mov RAX,QWORD PTR [RBP-184]
            mov RDI,R15
            mov RSI,QWORD PTR [RBP-320]
            mov R13,QWORD PTR [RAX+RDX*8]
            mov RDX,R14
            call .L_41c340

            cmp R13,RAX
            jne .L_4227a0

            sub RSP,8
            mov RSI,QWORD PTR [RBP-328]
            mov RDI,QWORD PTR [RBP-336]
            push 0
            mov RDX,R14
.L_42280d:

            call .L_4231a0

            mov RSI,QWORD PTR [RBP-280]
            cmp RSI,QWORD PTR [RBP-272]
            pop RAX
            pop RDX
            je .L_4228f0

            test RSI,RSI
            je .L_422837

            mov RAX,QWORD PTR [RBP-256]
            mov QWORD PTR [RSI],RAX
.L_422837:

            add EBX,1
            add RSI,8
            cmp EBX,257
            mov QWORD PTR [RBP-280],RSI
            jne .L_4227af

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422858:

            mov RDI,QWORD PTR [RBP-288]
            mov RBX,QWORD PTR [RBP-280]
            add QWORD PTR [RBP-344],1
            mov RAX,QWORD PTR [RBP-344]
            sub RBX,RDI
            sar RBX,3
            cmp RAX,RBX
            jb .L_422780
.L_422885:

            test RDI,RDI
            je .L_42288f

            call _ZdlPv@PLT
.L_42288f:

            mov RDI,QWORD PTR [RBP-328]
            call .L_4229b0

            jmp .L_4225fd
.L_4228a0:

            mov RDX,RAX
            mov RAX,RDI
.L_4228a6:

            sub RAX,RDX
            lea RSI,QWORD PTR [RCX+8]
            lea RDI,QWORD PTR [RAX-1]
            test RDI,RDI
            jg .L_422636

            jmp .L_42266c
.L_4228bf:

            subss XMM0,DWORD PTR [RIP+.L_436294]
            cvttss2si RAX,XMM0
            mov QWORD PTR [RBP-152],RAX
            movabs RAX,-9223372036854775808
            xor QWORD PTR [RBP-152],RAX
            jmp .L_42269a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4228f0:

            mov RDI,QWORD PTR [RBP-360]
            mov RDX,R14

            call .L_4229e0

            jmp .L_4227a0
.L_422904:

            mov RAX,RDI
            mov RDX,RDI
            pxor XMM0,XMM0
            shr RAX,1
            and EDX,1
            or RAX,RDX
            cvtsi2ss XMM0,RAX
            addss XMM0,XMM0
            jmp .L_422681
.L_422925:

            lea RDX,QWORD PTR [R12+40]
            lea RDI,QWORD PTR [RBP-288]
            call .L_4229e0
.L_422936:

            mov RSI,QWORD PTR [RBP-280]
            jmp .L_422726
.L_422942:

            mov RDI,QWORD PTR [RBP-288]
            mov RBX,RAX
            test RDI,RDI
            je .L_422956

            call _ZdlPv@PLT
.L_422956:

            mov RDI,QWORD PTR [RBP-328]
            call .L_4229b0
.L_422962:

            mov RDI,QWORD PTR [RBP-352]
            call .L_41cbf0

            mov RDI,RBX
.L_422971:

            call _Unwind_Resume@PLT
.L_422976:

            call __stack_chk_fail@PLT
.L_42297b:

            call abort@PLT
.L_422980:

            mov RBX,RAX
            jmp .L_422962
.L_422985:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422990:

            sub RSP,8
            call .L_41dc90

            add RSP,8
            mov RDI,RAX
            jmp .L_422500
.L_4229a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4229b0:

            push RBX
            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI+8]
            call .L_41c120

            mov QWORD PTR [RBX+24],0
            mov RDI,QWORD PTR [RBX+8]
            pop RBX
            jmp _ZdlPv@PLT
.L_4229d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4229e0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_4229f7:

            mov RCX,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            mov RAX,RCX
            sub R14,RBX
            sub RAX,RBX
            sar RAX,3
            test RAX,RAX
            je .L_422ad0

            lea RSI,QWORD PTR [RAX+RAX*1]
            mov R15,-8
            cmp RAX,RSI
            jbe .L_422ae8
.L_422a28:

            mov RDI,R15
            mov QWORD PTR [RSP],RDX
            call _Znwm@PLT

            mov RBX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+8]
            mov R8,R12
            mov RDX,QWORD PTR [RSP]
            mov R13,RAX
            add R15,RAX
            sub R8,RBX
.L_422a4c:

            add R14,R13
            je .L_422a57

            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [R14],RAX
.L_422a57:

            cmp R12,RBX
            je .L_422a7c

            mov RDX,R8
            mov RSI,RBX
            mov RDI,R13
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_422a7c:

            mov R14,RCX
            lea R8,QWORD PTR [R13+R8*1+8]
            sub R14,R12
            cmp RCX,R12
            je .L_422a9d

            mov RDI,R8
            mov RDX,R14
            mov RSI,R12
            call memcpy@PLT

            mov R8,RAX
.L_422a9d:

            add R14,R8
            test RBX,RBX
            je .L_422aad

            mov RDI,RBX
            call _ZdlPv@PLT
.L_422aad:

            mov QWORD PTR [RBP],R13
            mov QWORD PTR [RBP+8],R14
            mov QWORD PTR [RBP+16],R15
            add RSP,24
.L_422abd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422ad0:

            mov ESI,1
.L_422ad5:

            lea R15,QWORD PTR [RSI*8]
            jmp .L_422a28
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422ae8:

            movabs RAX,2305843009213693951
            cmp RSI,RAX
            ja .L_422a28

            test RSI,RSI
            jne .L_422ad5

            mov R8,R14
            xor R15D,R15D
            xor R13D,R13D
            jmp .L_422a4c
.L_422b0e:

            nop
            nop
.L_422b10:

            test RSI,RSI
            je .L_422b48

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_422b1f:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_422b10

            mov RBP,QWORD PTR [RBX+16]
            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            mov RBX,RBP
            jne .L_422b1f

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422b48:

            ret 
.L_422b4a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_422b50:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_422b67:

            mov RCX,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            mov RAX,RCX
            sub R14,RBX
            sub RAX,RBX
            sar RAX,2
            test RAX,RAX
            je .L_422c40

            lea RSI,QWORD PTR [RAX+RAX*1]
            mov R15,-4
            cmp RAX,RSI
            jbe .L_422c58
.L_422b98:

            mov RDI,R15
            mov QWORD PTR [RSP],RDX
            call _Znwm@PLT

            mov RBX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+8]
            mov R8,R12
            mov RDX,QWORD PTR [RSP]
            mov R13,RAX
            add R15,RAX
            sub R8,RBX
.L_422bbc:

            add R14,R13
            je .L_422bc6

            mov EAX,DWORD PTR [RDX]
            mov DWORD PTR [R14],EAX
.L_422bc6:

            cmp R12,RBX
            je .L_422beb

            mov RDX,R8
            mov RSI,RBX
            mov RDI,R13
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_422beb:

            mov R14,RCX
            lea R8,QWORD PTR [R13+R8*1+4]
            sub R14,R12
            cmp RCX,R12
            je .L_422c0c

            mov RDI,R8
            mov RDX,R14
            mov RSI,R12
            call memcpy@PLT

            mov R8,RAX
.L_422c0c:

            add R14,R8
            test RBX,RBX
            je .L_422c1c

            mov RDI,RBX
            call _ZdlPv@PLT
.L_422c1c:

            mov QWORD PTR [RBP],R13
            mov QWORD PTR [RBP+8],R14
            mov QWORD PTR [RBP+16],R15
            add RSP,24
.L_422c2c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422c40:

            mov ESI,1
.L_422c45:

            lea R15,QWORD PTR [RSI*4]
            jmp .L_422b98
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422c58:

            movabs RAX,4611686018427387903
            cmp RSI,RAX
            ja .L_422b98

            test RSI,RSI
            jne .L_422c45

            mov R8,R14
            xor R15D,R15D
            xor R13D,R13D
            jmp .L_422bbc
.L_422c7e:

            nop
            nop
.L_422c80:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov RDI,RSI
            push RBP
            push RBX
            mov R12,RSI
            sub RSP,40
.L_422c97:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
.L_422ca7:

            call .L_41c170
.L_422cac:

            cmp QWORD PTR [R15+16],0
            mov R13,RAX
            je .L_422dc2

            lea RAX,QWORD PTR [RSP+20]
            mov RCX,QWORD PTR [R15+8]
            xor R14D,R14D
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422ce0:

            mov RBX,QWORD PTR [RCX+R14*8]
            lea RBP,QWORD PTR [R14*8]
            test RBX,RBX
            jne .L_422d75

            jmp .L_422d88
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422d00:

            mov ECX,DWORD PTR [RAX+8]
            mov RDI,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RAX+12]
            mov DWORD PTR [RSP+20],0
            lea EDX,DWORD PTR [RCX*4]
            mov RCX,QWORD PTR [RSP]
            mov DWORD PTR [RSP+16],EAX
            lea ESI,DWORD PTR [RDX+3]
            test EDX,EDX
            cmovns ESI,EDX
            mov RDX,QWORD PTR [RSP+8]
            sar ESI,2
            movsxd RSI,ESI
.L_422d33:

            call .L_435430
.L_422d38:

            mov EAX,DWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+20]
            mov RCX,QWORD PTR [R15+8]
            shl RAX,32
            or RAX,RDX
            xor EDX,EDX
            div R12
            lea RDX,QWORD PTR [R13+RDX*8]
.L_422d55:

            mov RSI,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RCX+RBP*1]
            mov RDI,RCX
            mov QWORD PTR [RAX],RSI
            mov RSI,QWORD PTR [RDX]
            mov QWORD PTR [RBX+8],RSI
            mov QWORD PTR [RDX],RBX
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_422d88
.L_422d75:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            jne .L_422d00

            mov RDX,R13
            jmp .L_422d55
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422d88:

            add R14,1
            cmp QWORD PTR [R15+16],R14
            ja .L_422ce0
.L_422d96:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            mov QWORD PTR [R15+16],R12
            mov QWORD PTR [R15+8],R13
            jne .L_422dfd

            add RSP,40
.L_422db7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_422dc2:

            mov RDI,QWORD PTR [R15+8]
            jmp .L_422d96
.L_422dc8:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RSI,R12
            mov RDI,R13
            call .L_41c120

            mov RDI,R13
            call _ZdlPv@PLT

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15+8]
            call .L_41c120

            mov QWORD PTR [R15+24],0
.L_422df8:

            call __cxa_rethrow@PLT
.L_422dfd:

            call __stack_chk_fail@PLT
.L_422e02:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_422e0d:

            call _Unwind_Resume@PLT
.L_422e12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422e20:

            push R14
            push R13
            mov R13,RDX
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            sub RSP,16
.L_422e35:

            mov RDX,QWORD PTR [RDI+24]
            lea RAX,QWORD PTR [RDX+1]
            cmp RAX,QWORD PTR [RDI+40]
            ja .L_422e90
.L_422e43:

            mov EDI,16
.L_422e48:

            call _Znwm@PLT

            mov RBP,RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP],RAX
.L_422e60:

            mov RAX,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RAX+R13*8]
            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [RBP+8],RAX
            mov QWORD PTR [RDX],RBP
            mov RAX,RBP
            add QWORD PTR [RBX+24],1
            add RSP,16
.L_422e7e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422e90:

            test RDX,RDX
            movss XMM5,DWORD PTR [RDI+32]
            js .L_423110

            pxor XMM1,XMM1
            cvtsi2ss XMM1,RDX
.L_422ea7:

            mov RAX,QWORD PTR [RBX+16]
            movss XMM4,DWORD PTR [RIP+.L_436298]
            addss XMM1,XMM4
            test RAX,RAX
            divss XMM1,XMM5
            js .L_4230f0

            pxor XMM2,XMM2
            cvtsi2ss XMM2,RAX
.L_422ecd:

            ucomiss XMM1,XMM2
            jbe .L_423020

            mulss XMM2,DWORD PTR [RBX+36]
            movss XMM3,DWORD PTR [RIP+.L_4362a0]
            movss XMM6,DWORD PTR [RIP+.L_43629c]
            movaps XMM7,XMM3
            maxss XMM2,XMM1
            movaps XMM0,XMM2
            movaps XMM1,XMM2
            andps XMM0,XMM3
            ucomiss XMM6,XMM0
            jbe .L_422f1e

            cvttss2si EAX,XMM2
            pxor XMM0,XMM0
            andnps XMM7,XMM1
            cvtsi2ss XMM0,EAX
            cmpnless XMM2,XMM0
            andps XMM2,XMM4
            addss XMM2,XMM0
            orps XMM2,XMM7
.L_422f1e:

            ucomiss XMM2,DWORD PTR [RIP+.L_436294]
            jae .L_423158

            cvttss2si RDI,XMM2
.L_422f30:

            lea R8,QWORD PTR [RIP+_ZNSt3tr18__detail12__prime_listE]
            mov R9D,303
.L_422f3d:

            mov RDX,R9
            sar RDX,1
            lea RSI,QWORD PTR [R8+RDX*8]
            cmp RDI,QWORD PTR [RSI]
            jbe .L_422f6e

            jmp .L_4230a8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422f58:

            mov RAX,RDX
            sar RAX,1
            lea RSI,QWORD PTR [R8+RAX*8]
            cmp RDI,QWORD PTR [RSI]
            ja .L_4230b0

            mov RDX,RAX
.L_422f6e:

            test RDX,RDX
            jne .L_422f58
.L_422f73:

            mov RDX,QWORD PTR [R8]
            test RDX,RDX
            js .L_4230d0

            pxor XMM0,XMM0
            cvtsi2ss XMM0,RDX
.L_422f88:

            mulss XMM0,XMM5
            movaps XMM1,XMM3
            movaps XMM2,XMM0
            movaps XMM5,XMM0
            andps XMM2,XMM3
            ucomiss XMM6,XMM2
            jbe .L_422fbb

            cvttss2si EAX,XMM0
            pxor XMM2,XMM2
            andnps XMM1,XMM5
            cvtsi2ss XMM2,EAX
            cmpnless XMM0,XMM2
            andps XMM0,XMM4
            addss XMM0,XMM2
            orps XMM0,XMM1
.L_422fbb:

            ucomiss XMM0,DWORD PTR [RIP+.L_436294]
            jae .L_423080

            cvttss2si RDX,XMM0
            mov QWORD PTR [RBX+40],RDX
.L_422fd1:

            mov EDI,16
            mov R14,QWORD PTR [R8]
            mov QWORD PTR [RSP+8],RCX
            call _Znwm@PLT
.L_422fe3:

            mov RCX,QWORD PTR [RSP+8]
            mov RBP,RAX
            mov RAX,QWORD PTR [R12]
            xor EDX,EDX
            mov QWORD PTR [RBP+8],0
            mov RSI,R14
            mov RDI,RBX
            mov QWORD PTR [RBP],RAX
            mov RAX,RCX
            div R14
            mov R13,RDX
.L_42300c:

            call .L_422c80
.L_423011:

            jmp .L_422e60
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423020:

            mulss XMM5,XMM2
            movss XMM3,DWORD PTR [RIP+.L_4362a0]
            movaps XMM2,XMM5
            movaps XMM0,XMM5
            movaps XMM1,XMM5
            andps XMM2,XMM3
            movss XMM5,DWORD PTR [RIP+.L_43629c]
            ucomiss XMM5,XMM2
            jbe .L_423063

            cvttss2si EAX,XMM0
            pxor XMM2,XMM2
            andnps XMM3,XMM0
            cvtsi2ss XMM2,EAX
            cmpnless XMM1,XMM2
            andps XMM1,XMM4
            addss XMM1,XMM2
            orps XMM1,XMM3
.L_423063:

            ucomiss XMM1,DWORD PTR [RIP+.L_436294]
            jae .L_423130

            cvttss2si RAX,XMM1
            mov QWORD PTR [RBX+40],RAX
            jmp .L_422e43
          .byte 0x66
          .byte 0x90
.L_423080:

            subss XMM0,DWORD PTR [RIP+.L_436294]
            movabs RAX,-9223372036854775808
            cvttss2si RDX,XMM0
            mov QWORD PTR [RBX+40],RDX
            xor QWORD PTR [RBX+40],RAX
            jmp .L_422fd1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4230a8:

            mov RAX,RDX
            mov RDX,R9
            nop
            nop
.L_4230b0:

            sub RDX,RAX
            lea R8,QWORD PTR [RSI+8]
            lea R9,QWORD PTR [RDX-1]
            test R9,R9
            jg .L_422f3d

            jmp .L_422f73
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4230d0:

            mov RAX,RDX
            pxor XMM0,XMM0
            shr RAX,1
            and EDX,1
            or RAX,RDX
            cvtsi2ss XMM0,RAX
            addss XMM0,XMM0
            jmp .L_422f88
          .byte 0x66
          .byte 0x90
.L_4230f0:

            mov RDX,RAX
            pxor XMM2,XMM2
            shr RDX,1
            and EAX,1
            or RDX,RAX
            cvtsi2ss XMM2,RDX
            addss XMM2,XMM2
            jmp .L_422ecd
          .byte 0x66
          .byte 0x90
.L_423110:

            mov RAX,RDX
            pxor XMM1,XMM1
            shr RAX,1
            and EDX,1
            or RAX,RDX
            cvtsi2ss XMM1,RAX
            addss XMM1,XMM1
            jmp .L_422ea7
          .byte 0x66
          .byte 0x90
.L_423130:

            subss XMM1,DWORD PTR [RIP+.L_436294]
            cvttss2si RAX,XMM1
            mov QWORD PTR [RBX+40],RAX
            movabs RAX,-9223372036854775808
            xor QWORD PTR [RBX+40],RAX
            jmp .L_422e43
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423158:

            subss XMM2,DWORD PTR [RIP+.L_436294]
            movabs RAX,-9223372036854775808
            cvttss2si RDI,XMM2
            xor RDI,RAX
            jmp .L_422f30
.L_423177:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RDI,RBP
            call _ZdlPv@PLT
.L_423187:

            call __cxa_rethrow@PLT
.L_42318c:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_423197:

            call _Unwind_Resume@PLT
.L_42319c:

            nop
            nop
            nop
            nop
.L_4231a0:

            push R14
            push R13
            xor ECX,ECX
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,16
.L_4231b7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            je .L_423217

            mov EDX,DWORD PTR [RAX+8]
            mov RDI,QWORD PTR [RAX]
            lea RCX,QWORD PTR [RSP+4]
            mov EAX,DWORD PTR [RAX+12]
            mov DWORD PTR [RSP+4],0
            lea R8D,DWORD PTR [RDX*4]
            mov RDX,RSP
            mov DWORD PTR [RSP],EAX
            lea ESI,DWORD PTR [R8+3]
            test R8D,R8D
            cmovns ESI,R8D
            sar ESI,2
            movsxd RSI,ESI
            call .L_435430

            mov ECX,DWORD PTR [RSP]
            mov EAX,DWORD PTR [RSP+4]
            shl RCX,32
            or RCX,RAX
.L_423217:

            xor EDX,EDX
            mov RAX,RCX
            div QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RBP+8]
            lea R10,QWORD PTR [RAX+RDX*8]
            mov RAX,QWORD PTR [R10]
            test RAX,RAX
            je .L_423310

            mov RDI,QWORD PTR [R12]
            mov RSI,QWORD PTR [RAX]
            cmp RDI,RSI
            je .L_423279

            test RDI,RDI
            sete R9B
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423250:

            test RSI,RSI
            je .L_423264

            test R9B,R9B
            jne .L_423264

            mov R8D,DWORD PTR [RDI+8]
            cmp R8D,DWORD PTR [RSI+8]
            je .L_4232b0
.L_423264:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_423310

            mov RSI,QWORD PTR [RAX]
            cmp RSI,RDI
            jne .L_423250
.L_423279:

            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],R10
            mov BYTE PTR [RBX+16],0
.L_423284:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42332b

            add RSP,16
.L_42329f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4232b0:

            mov R14D,DWORD PTR [RSI+12]
            cmp DWORD PTR [RDI+12],R14D
            jne .L_423264

            test R8D,R8D
            jle .L_423279

            mov R11,QWORD PTR [RSI]
            mov R13,QWORD PTR [RDI]
            mov ESI,DWORD PTR [R13]
            cmp DWORD PTR [R11],ESI
            jne .L_423264

            lea ESI,DWORD PTR [R8-1]
            lea R14,QWORD PTR [RSI*4+4]
            mov ESI,4
            jmp .L_4232fc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4232e8:

            mov R8D,DWORD PTR [R13+RSI*1]
            add RSI,4
            cmp R8D,DWORD PTR [R11+RSI*1-4]
            jne .L_423264
.L_4232fc:

            cmp R14,RSI
            jne .L_4232e8

            jmp .L_423279
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423310:

            mov RSI,R12
            mov RDI,RBP
            call .L_422e20

            mov BYTE PTR [RBX+16],1
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],RDX
            jmp .L_423284
.L_42332b:

            call __stack_chk_fail@PLT
.L_423330:

            push RBP
            push RBX
            sub RSP,8
.L_423336:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_423390

            mov R8,QWORD PTR [RSI]
            jmp .L_42335a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423348:

            mov RAX,QWORD PTR [RBX+16]
            mov R9D,1
            test RAX,RAX
            je .L_42336f
.L_423357:

            mov RBX,RAX
.L_42335a:

            mov RCX,QWORD PTR [RBX+32]
            cmp R8,RCX
            jb .L_423348

            mov RAX,QWORD PTR [RBX+24]
            xor R9D,R9D
            test RAX,RAX
            jne .L_423357
.L_42336f:

            test R9B,R9B
            mov R10,RBX
            jne .L_423394
.L_423377:

            xor EDX,EDX
            mov RAX,RBX
            cmp R8,RCX
            cmova RAX,RDX
            cmova RDX,R10
.L_423387:

            add RSP,8
.L_42338b:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_423390:

            lea RBX,QWORD PTR [RDI+8]
.L_423394:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_423387

            mov RBP,RSI
            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R10,RBX
            mov R8,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RAX+32]
            mov RBX,RAX
            jmp .L_423377
.L_4233ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4233c0:

            push R13
            lea RAX,QWORD PTR [RDI+8]
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
.L_4233d4:

            cmp RSI,RAX
            je .L_423458

            mov R13,QWORD PTR [RDX]
            cmp R13,QWORD PTR [RSI+32]
            mov RBX,RSI
            jae .L_423420

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            mov RDX,RAX
            je .L_423414

            mov RDI,RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jbe .L_42346c

            cmp QWORD PTR [RAX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmovne RDX,RBX
.L_423414:

            add RSP,8
.L_423418:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_423420:

            jbe .L_423488

            mov RCX,QWORD PTR [RDI+32]
            xor EAX,EAX
            cmp RCX,RSI
            mov RDX,RCX
            je .L_423414

            mov RDI,RSI
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jae .L_42346c

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RAX,RDX
            cmove RDX,RBX
            jmp .L_423414
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423458:

            cmp QWORD PTR [RDI+40],0
            je .L_42346c

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RDX]
            cmp QWORD PTR [RBX+32],RAX
            jb .L_4234a0
.L_42346c:

            add RSP,8
.L_423470:

            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_423330
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423488:

            add RSP,8
            mov RAX,RSI
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4234a0:

            add RSP,8
            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4234b0:

            lea RAX,QWORD PTR [RDX-1]
            push RBP
            push RBX
.L_4234b6:

            mov RBP,RDX
            mov RBX,RAX
            and EBP,1
            shr RBX,63
            add RBX,RAX
            sar RBX,1
            cmp RSI,RBX
            jge .L_4235b0

            mov R11,RSI
            nop
            nop
            nop
.L_4234d8:

            lea RAX,QWORD PTR [R11+1]
            lea R8,QWORD PTR [RAX+RAX*1]
            shl RAX,3
            lea R9,QWORD PTR [RDI+RAX*1]
            mov R10D,DWORD PTR [R9]
            cmp R10D,DWORD PTR [RDI+RAX*1-4]
            jge .L_4234fd

            sub R8,1
            lea R9,QWORD PTR [RDI+R8*4]
            mov R10D,DWORD PTR [R9]
.L_4234fd:

            cmp R8,RBX
            mov DWORD PTR [RDI+R11*4],R10D
            mov R11,R8
            jl .L_4234d8

            test RBP,RBP
            je .L_423570
.L_42350e:

            lea RAX,QWORD PTR [R8-1]
            mov RDX,RAX
            shr RDX,63
            add RDX,RAX
            sar RDX,1
            cmp R8,RSI
            jle .L_42355d

            mov R10D,DWORD PTR [RDI+RDX*4]
            cmp ECX,R10D
            jg .L_42353f

            jmp .L_42355d
          .byte 0x90
.L_423530:

            mov R10D,DWORD PTR [RDI+RAX*4]
            mov R8,RDX
            mov RDX,RAX
            cmp ECX,R10D
            jle .L_42355d
.L_42353f:

            mov DWORD PTR [RDI+R8*4],R10D
            lea R8,QWORD PTR [RDX-1]
            lea R9,QWORD PTR [RDI+RDX*4]
            mov RAX,R8
            shr RAX,63
            add RAX,R8
            sar RAX,1
            cmp RSI,RDX
            jl .L_423530
.L_42355d:

            mov DWORD PTR [R9],ECX
            pop RBX
.L_423561:

            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423568:

            mov R8,RSI
            nop
            nop
            nop
            nop
            nop
.L_423570:

            lea RAX,QWORD PTR [RDX-2]
            mov RDX,RAX
            shr RDX,63
            add RDX,RAX
            sar RDX,1
            cmp RDX,R8
            je .L_423590

            lea R9,QWORD PTR [RDI+R8*4]
            jmp .L_42350e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423590:

            lea RAX,QWORD PTR [R8+R8*1+2]
            mov EDX,DWORD PTR [RDI+RAX*4-4]
            mov DWORD PTR [RDI+R8*4],EDX
            lea R8,QWORD PTR [RAX-1]
            lea R9,QWORD PTR [RDI+R8*4]
            jmp .L_42350e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4235b0:

            test RBP,RBP
            je .L_423568

            lea R9,QWORD PTR [RDI+RSI*4]
            jmp .L_42355d
.L_4235bb:

            nop
            nop
            nop
            nop
            nop
.L_4235c0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13D,R8D
            push RBP
            push RBX
            sub RSP,696
.L_4235d7:

            movsxd RBX,DWORD PTR [R15+8]
            mov R14,QWORD PTR [RSI+40]
            mov RSI,QWORD PTR [RSI]
            mov QWORD PTR [RSP+32],RDI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+680],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+88],ECX
            mov DWORD PTR [RSP+92],R8D
            add RBX,RSI
            test R8B,R8B
            mov BYTE PTR [RSP+24],DL
            mov BYTE PTR [RSP+63],CL
            mov R12,RSI
            je .L_42361c

            mov R12,RBX
            mov RBX,RSI
.L_42361c:

            mov RAX,QWORD PTR [RSP+32]
            test BYTE PTR [R14+13],16
            mov RAX,QWORD PTR [RAX]
            lea RDI,QWORD PTR [RAX+160]
            mov QWORD PTR [RSP+16],RDI
            jne .L_423860

            mov BYTE PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
.L_423649:

            cmp RBX,R12
            je .L_4238eb

            lea RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+8],R14
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_4236c1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423680:

            mov R14,RAX
            cmp R14,2
            jbe .L_423810
.L_42368d:

            test BYTE PTR [R14+13],16
            je .L_4236b8

            lea RAX,QWORD PTR [RBX-1]
            lea RDX,QWORD PTR [RBX+1]
            test R13B,R13B
            cmove RAX,RDX
            cmp BYTE PTR [RSP+63],0
            mov QWORD PTR [RSP+48],RAX
            jne .L_423ad0

            mov BYTE PTR [RSP+40],1
.L_4236b8:

            cmp RBX,R12
            je .L_4238e0
.L_4236c1:

            cmp QWORD PTR [RSP+8],R14
            jne .L_423828

            cmp BYTE PTR [RSP+24],0
            je .L_423828

            test R13B,R13B
            mov ESI,DWORD PTR [R15+48]
            je .L_423840

            mov RDX,R12
            mov RDI,RBX
            sub RDX,RBX
            call memchr@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_423a06
.L_4236fe:

            movzx EBP,BYTE PTR [RBX]
            add RBX,1
.L_423705:

            mov RCX,QWORD PTR [RSP+16]
            movsxd RAX,EBP
            movzx EDX,BYTE PTR [RCX+RAX*1]
            mov RAX,QWORD PTR [R14+16]
            mov RAX,QWORD PTR [RAX+RDX*8]
            test RAX,RAX
            jne .L_423680

            mov RDI,QWORD PTR [RSP+32]
            mov EDX,EBP
            mov RSI,R14
.L_42372c:

            call .L_4205b0

            test RAX,RAX
            jne .L_423680

            cmp BYTE PTR [RIP+.L_6492b8],0
            je .L_42376f

            mov RAX,QWORD PTR [RSP+80]
            test RAX,RAX
            je .L_42376f

            mov RDX,RBX
            sub RDX,RAX
            mov RAX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RAX+208]
            lea RAX,QWORD PTR [RAX+RAX*4]
            add RAX,RAX
            cmp RDX,RAX
            jb .L_424029
.L_42376f:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+64]
            call .L_41cc10
.L_423783:

            mov RDX,R14
            mov R14,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+72]
            mov RSI,R14
.L_423793:

            call .L_41cc10
.L_423798:

            mov RSI,QWORD PTR [R15+56]
            mov RDI,R14
.L_42379f:

            call .L_41e0e0

            mov RDI,QWORD PTR [RSP+64]
            call .L_41e8c0

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_423d56

            mov RDI,QWORD PTR [RSP+72]
            call .L_41e8c0

            test RAX,RAX
            je .L_423d56

            mov EDX,EBP
            mov RSI,RAX
            mov RDI,R14
            call .L_4205b0
.L_4237dc:

            test RAX,RAX
            mov R14,RAX
            je .L_423af0

            cmp BYTE PTR [RSP+168],0
            je .L_4238d0
.L_4237f6:

            cmp BYTE PTR [RSP+120],0
            je .L_4238c0
.L_423801:

            cmp R14,2
            mov QWORD PTR [RSP+80],RBX
            ja .L_42368d
.L_423810:

            cmp R14,1
            je .L_4239f8
.L_42381a:

            mov QWORD PTR [R15+72],R12
            mov BYTE PTR [RSP+40],1
            jmp .L_423889
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423828:

            test R13B,R13B
            jne .L_4236fe
.L_423831:

            movzx EBP,BYTE PTR [RBX-1]
            sub RBX,1
            jmp .L_423705
          .byte 0x66
          .byte 0x90
.L_423840:

            sub RBX,R12
            mov RDI,R12
            mov RDX,RBX
            call memrchr@PLT

            test RAX,RAX
            je .L_423d76

            lea RBX,QWORD PTR [RAX+1]
            jmp .L_423831
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423860:

            mov EDI,DWORD PTR [RSP+88]
            test DIL,DIL
            jne .L_423880

            mov QWORD PTR [RSP+48],RBX
            mov BYTE PTR [RSP+40],1
            jmp .L_423649
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423880:

            mov QWORD PTR [R15+72],RBX
            mov BYTE PTR [RSP+40],DIL
.L_423889:

            mov RDI,QWORD PTR [RSP+680]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+40]
            jne .L_42456a

            add RSP,696
.L_4238ac:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4238c0:

            mov RDI,QWORD PTR [RSP+64]
            call .L_41c100

            jmp .L_423801
          .byte 0x90
.L_4238d0:

            mov RDI,QWORD PTR [RSP+72]
            call .L_41c100

            jmp .L_4237f6
          .byte 0x90
.L_4238e0:

            mov RAX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [R15]
            mov RAX,QWORD PTR [RAX]
.L_4238eb:

            cmp BYTE PTR [RSP+92],0
            jne .L_423a14
.L_4238f6:

            cmp QWORD PTR [R15+16],RSI
            mov RDX,QWORD PTR [R14+16]
            je .L_423ae2

            movzx EBP,BYTE PTR [RSI-1]
.L_423908:

            movsxd RSI,EBP
            movzx EAX,BYTE PTR [RAX+RSI*1+160]
.L_423913:

            mov RAX,QWORD PTR [RDX+RAX*8]
            test RAX,RAX
            je .L_423a38
.L_423920:

            cmp RAX,2
            je .L_42381a

            jbe .L_4239f8

            test BYTE PTR [RAX+13],16
            je .L_4239f8

            mov R14,QWORD PTR [R15+80]
            mov QWORD PTR [RSP+48],RBX
            mov BYTE PTR [RSP+40],1
            test R14,R14
            je .L_4239f8

            mov RDI,QWORD PTR [RSP+32]
            cmp DWORD PTR [RDI+8],3
            jne .L_4239f8

            mov RDX,QWORD PTR [R14]
            mov QWORD PTR [R14+8],RDX
            mov EDX,DWORD PTR [RAX+8]
            test EDX,EDX
            jle .L_4239f8

            mov QWORD PTR [RSP+8],R15
            xor R13D,R13D
            mov R15,RBX
            xor R12D,R12D
            lea RBP,QWORD PTR [RSP+144]
            mov RBX,RDI
            jmp .L_42399b
.L_42398d:

            add R12D,1
            add R13,4
            cmp DWORD PTR [RAX+8],R12D
            jle .L_4239e0
.L_42399b:

            mov RCX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RBX]
            movsxd RCX,DWORD PTR [RCX+R13*1]
            mov RDX,QWORD PTR [RDX+32]
            lea RCX,QWORD PTR [RDX+RCX*8]
            mov EDX,DWORD PTR [RCX]
            and EDX,7
            cmp EDX,5
            jne .L_42398d

            mov RSI,QWORD PTR [R14+8]
            cmp RSI,QWORD PTR [R14+16]
            mov EDX,DWORD PTR [RCX+4]
            mov DWORD PTR [RSP+144],EDX
            je .L_424250

            test RSI,RSI
            je .L_4239d6

            mov DWORD PTR [RSI],EDX
.L_4239d6:

            add RSI,4
            mov QWORD PTR [R14+8],RSI
            jmp .L_42398d
.L_4239e0:

            mov RBX,R15
            mov R15,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+40],1
            mov QWORD PTR [RSP+48],RBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4239f8:

            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [R15+72],RAX
            jmp .L_423889
.L_423a06:

            mov RAX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [R15]
            mov RBX,R12
            mov RAX,QWORD PTR [RAX]
.L_423a14:

            movsxd RDX,DWORD PTR [R15+8]
            movsxd RDI,DWORD PTR [R15+24]
            add RDI,QWORD PTR [R15+16]
            add RSI,RDX
            mov RDX,QWORD PTR [R14+16]
            cmp RSI,RDI
            je .L_423ae2

            movzx EBP,BYTE PTR [RSI]
            jmp .L_423908
.L_423a38:

            mov RDI,QWORD PTR [RSP+32]
            mov EDX,EBP
            mov RSI,R14
.L_423a42:

            call .L_4205b0

            test RAX,RAX
            jne .L_423920

            mov R13,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [RSP+144]
            mov RDX,R14
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            mov R14,RAX
            mov RSI,R13
            call .L_41cc10
.L_423a73:

            mov RSI,QWORD PTR [R15+56]
            mov RDI,R13
.L_423a7a:

            call .L_41e0e0

            mov RDI,R14
            call .L_41e8c0

            test RAX,RAX
            je .L_424007

            mov RDI,QWORD PTR [RSP+32]
            mov EDX,EBP
            mov RSI,RAX
            call .L_4205b0
.L_423a9f:

            test RAX,RAX
            je .L_423da1

            cmp BYTE PTR [RSP+168],0
            jne .L_423920

            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            call .L_41c100

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_423920
          .byte 0x90
.L_423ad0:

            mov QWORD PTR [R15+72],RAX
            movzx EAX,BYTE PTR [RSP+88]
            mov BYTE PTR [RSP+40],AL
            jmp .L_423889
.L_423ae2:

            movsxd RAX,DWORD PTR [RAX+20]
            mov EBP,256
            jmp .L_423913
.L_423af0:

            lea RBX,QWORD PTR [RSP+288]
            mov BYTE PTR [RSP+288],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+632],0
            xor ESI,ESI
            mov QWORD PTR [RSP+408],R14
            mov QWORD PTR [RSP+624],0
            mov BYTE PTR [RSP+633],0
            mov QWORD PTR [RSP+640],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+648],0
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+296],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+8],RAX
.L_423b8e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_423b93:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+296],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+408],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+304],RAX
            mov QWORD PTR [RSP+352],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+368],16
            mov QWORD PTR [RSP+384],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+392],0
            mov QWORD PTR [RSP+376],RAX
.L_423c64:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_423c69:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_423c79:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1419
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_423cb5:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436238]
            mov EDX,46
.L_423cc5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_423cca:

            cmp BYTE PTR [RSP+288],0
            je .L_424033
.L_423cd8:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+376]
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+408],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_423d15

            call _ZdlPv@PLT
.L_423d15:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+304],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+296],R12
            mov QWORD PTR [RSP+RAX*1+296],RDI
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],R14
            call _ZNSt8ios_baseD2Ev@PLT
.L_423d56:

            cmp BYTE PTR [RSP+168],0
            mov BYTE PTR [R15+64],1
            je .L_423d95
.L_423d65:

            cmp BYTE PTR [RSP+120],0
            je .L_423d89
.L_423d6c:

            mov BYTE PTR [RSP+40],0
            jmp .L_423889
.L_423d76:

            mov RAX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [R15]
            mov RBX,R12
            mov RAX,QWORD PTR [RAX]
            jmp .L_4238f6
.L_423d89:

            mov RDI,QWORD PTR [RSP+64]
            call .L_41c100

            jmp .L_423d6c
.L_423d95:

            mov RDI,QWORD PTR [RSP+72]
            call .L_41c100

            jmp .L_423d65
.L_423da1:

            lea RBX,QWORD PTR [RSP+288]
            mov BYTE PTR [RSP+288],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+632],0
            xor ESI,ESI
            mov QWORD PTR [RSP+408],R14
            mov QWORD PTR [RSP+624],0
            mov BYTE PTR [RSP+633],0
            mov QWORD PTR [RSP+640],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+648],0
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+296],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+8],RAX
.L_423e3f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_423e44:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+296],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+408],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+304],RAX
            mov QWORD PTR [RSP+352],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+368],16
            mov QWORD PTR [RSP+384],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+392],0
            mov QWORD PTR [RSP+376],RAX
.L_423f15:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_423f1a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43619d]
            mov EDX,10
.L_423f2a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1484
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_423f66:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436268]
            mov EDX,41
.L_423f76:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_423f7b:

            cmp BYTE PTR [RSP+288],0
            je .L_42426a
.L_423f89:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+376]
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+408],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_423fc6

            call _ZdlPv@PLT
.L_423fc6:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+304],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+296],R12
            mov QWORD PTR [RSP+RAX*1+296],RDI
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],R14
            call _ZNSt8ios_baseD2Ev@PLT
.L_424007:

            cmp BYTE PTR [RSP+168],0
            mov BYTE PTR [R15+64],1
            jne .L_423d6c

            mov RDI,QWORD PTR [RSP+16]
            call .L_41c100

            jmp .L_423d6c
.L_424029:

            mov BYTE PTR [R15+64],1
            jmp .L_423d6c
.L_424033:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+192]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RSP+208],0
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RSP+344]
            test RAX,RAX
            je .L_42446c

            mov RDX,QWORD PTR [RSP+328]
            mov RSI,QWORD PTR [RSP+336]
            cmp RAX,RDX
            jbe .L_424195

            lea R13,QWORD PTR [RSP+256]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+256],RDX
            mov RDX,RAX
.L_4240b4:

            call .L_41c270
.L_4240b9:

            mov RSI,QWORD PTR [RSP+256]
            mov RDI,QWORD PTR [RSP+192]
            lea RCX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [RSP+264]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_42442a

            lea RDI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+272]
            cmp RAX,RDI
            je .L_424401

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
            je .L_424419

            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDI
.L_42412f:

            mov QWORD PTR [RSP+264],0
            mov BYTE PTR [RAX],0
            add R13,16
            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,R13
            je .L_424154
.L_42414f:

            call _ZdlPv@PLT
.L_424154:

            movsxd RDX,DWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            mov EDI,2
.L_424169:

            call write@PLT
.L_42416e:

            mov RDI,QWORD PTR [RSP+192]
            add RBP,16
            mov BYTE PTR [RSP+288],1
            cmp RDI,RBP
            je .L_423cd8

            call _ZdlPv@PLT

            jmp .L_423cd8
.L_424195:

            lea R13,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+224],RAX
.L_4241ac:

            call .L_41c270
.L_4241b1:

            mov RSI,QWORD PTR [RSP+224]
            mov RDI,QWORD PTR [RSP+192]
            lea RCX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [RSP+232]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_42447d

            lea RDI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+240]
            cmp RAX,RDI
            je .L_4243d8

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
            je .L_4243f0

            mov QWORD PTR [RSP+224],RAX
            mov QWORD PTR [RSP+240],RDI
.L_424227:

            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RAX],0
            add R13,16
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,R13
            jne .L_42414f

            jmp .L_424154
.L_424250:

            mov RDX,RBP
            mov RDI,R14
            mov QWORD PTR [RSP+16],RAX
.L_42425b:

            call .L_422b50
.L_424260:

            mov RAX,QWORD PTR [RSP+16]
            jmp .L_42398d
.L_42426a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBP,QWORD PTR [RSP+192]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RSP+208],0
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RSP+344]
            test RAX,RAX
            je .L_424641

            mov RDX,QWORD PTR [RSP+328]
            mov RSI,QWORD PTR [RSP+336]
            cmp RAX,RDX
            jbe .L_424581

            lea R13,QWORD PTR [RSP+256]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+256],RDX
            mov RDX,RAX
.L_4242eb:

            call .L_41c270
.L_4242f0:

            mov RSI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
            cmp RSI,RAX
            je .L_4247a6

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+272]
            cmp RDI,RCX
            je .L_424778

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RAX
            je .L_424790

            mov QWORD PTR [RSP+256],RDI
            mov QWORD PTR [RSP+272],RCX
.L_424363:

            mov RAX,QWORD PTR [RSP+256]
            mov QWORD PTR [RSP+264],0
            add R13,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,R13
            je .L_424390
.L_42438b:

            call _ZdlPv@PLT
.L_424390:

            movsxd RDX,DWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            mov EDI,2
.L_4243a5:

            call write@PLT
.L_4243aa:

            mov RDI,QWORD PTR [RSP+192]
            add RBP,16
            mov BYTE PTR [RSP+288],1
            cmp RDI,RBP
            je .L_423f89

            call _ZdlPv@PLT

            jmp .L_423f89
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4243d8:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
.L_4243f0:

            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+224],RAX
            jmp .L_424227
.L_424401:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
.L_424419:

            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+256],RAX
            jmp .L_42412f
.L_42442a:

            test RDX,RDX
            je .L_424453

            cmp RDX,1
            jne .L_424749

            movzx EAX,BYTE PTR [RSP+272]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
.L_424453:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_42412f
.L_42446c:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
.L_424473:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_424478:

            jmp .L_424154
.L_42447d:

            test RDX,RDX
            je .L_4244a2

            cmp RDX,1
            jne .L_4244bb

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
.L_4244a2:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+224]
            jmp .L_424227
.L_4244bb:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
            jmp .L_4244a2
.L_4244d2:

            mov RBP,RAX
.L_4244d5:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],R14
            call _ZNSt8ios_baseD2Ev@PLT
.L_4244e6:

            cmp BYTE PTR [RSP+168],0
            jne .L_4244fa

            mov RDI,QWORD PTR [RSP+72]
            call .L_41c100
.L_4244fa:

            mov RBX,RBP
.L_4244fd:

            cmp BYTE PTR [RSP+120],0
            jne .L_42450e

            mov RDI,QWORD PTR [RSP+64]
            call .L_41c100
.L_42450e:

            mov RDI,RBX
.L_424511:

            call _Unwind_Resume@PLT
.L_424516:

            mov RDI,QWORD PTR [RSP+192]
            add RBP,16
            cmp RDI,RBP
            je .L_42452c

            call _ZdlPv@PLT
.L_42452c:

            call _ZSt9terminatev@PLT
.L_424531:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_4244e6
.L_42453f:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+296],R12
            mov QWORD PTR [RSP+RAX*1+296],RDI
            jmp .L_4244d5
.L_42456a:

            call __stack_chk_fail@PLT
.L_42456f:

            mov RDI,RBX
            mov RBP,RAX
            call .L_40bd80

            jmp .L_4244e6
.L_42457f:

            jmp .L_424516
.L_424581:

            lea R13,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+224],RAX
.L_424598:

            call .L_41c270

            mov RSI,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
            cmp RSI,RAX
            je .L_4246a2

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+240]
            cmp RDI,RCX
            je .L_424679

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RAX
            je .L_424691

            mov QWORD PTR [RSP+224],RDI
            mov QWORD PTR [RSP+240],RCX
.L_424610:

            mov RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+232],0
            add R13,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,R13
            jne .L_42438b

            jmp .L_424390
.L_424641:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42464d:

            jmp .L_424390
.L_424652:

            mov RDI,RBX
            mov RBP,RAX
            call .L_40bd80
.L_42465d:

            cmp BYTE PTR [RSP+168],0
            jne .L_424671

            mov RDI,QWORD PTR [RSP+16]
            call .L_41c100
.L_424671:

            mov RDI,RBP
.L_424674:

            call _Unwind_Resume@PLT
.L_424679:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RAX
.L_424691:

            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+224],RAX
            jmp .L_424610
.L_4246a2:

            test RDX,RDX
            je .L_4246c7

            cmp RDX,1
            jne .L_4246d8

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
.L_4246c7:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_424610
.L_4246d8:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
            jmp .L_4246c7
.L_4246ef:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_42465d
.L_424700:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+296],R12
            mov QWORD PTR [RSP+RAX*1+296],RDI
.L_424726:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],R14
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_42465d
.L_42473c:

            mov RBP,RAX
            jmp .L_424726
.L_424741:

            mov RBP,RAX
            jmp .L_42465d
.L_424749:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
            jmp .L_424453
.L_424763:

            jmp .L_424516
.L_424768:

            mov RBP,RAX
            jmp .L_4244e6
.L_424770:

            mov RBX,RAX
            jmp .L_4244fd
.L_424778:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RAX
.L_424790:

            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+256],RAX
            jmp .L_424363
.L_4247a1:

            jmp .L_424516
.L_4247a6:

            test RDX,RDX
            je .L_4247cb

            cmp RDX,1
            jne .L_4247dc

            movzx EAX,BYTE PTR [RSP+272]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
.L_4247cb:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_424363
.L_4247dc:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
            jmp .L_4247cb
.L_4247f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424800:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_42480e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_42482c

            test RDX,RDX
            jne .L_4248b7
.L_42482c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_424880

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_4248b0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_424854:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4248c3

            add RSP,16
.L_424874:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424880:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_424899:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_424854
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4248b0:

            test RBX,RBX
            je .L_424854

            jmp .L_424899
.L_4248b7:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_4248c3:

            call __stack_chk_fail@PLT
.L_4248c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4248d0:

            push R15
            push R14
            lea R15,QWORD PTR [RDI+16]
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_4248e5:

            mov BYTE PTR [RDI+16],0
            mov EAX,DWORD PTR [RSI+12]
            mov QWORD PTR [RDI],R15
            mov QWORD PTR [RDI+8],0
            test EAX,EAX
            jle .L_424962

            mov RBP,RSI
            mov R13,RDX
            mov EBX,2
            lea R14,QWORD PTR [RIP+.L_43633f]
            jmp .L_42492b
          .byte 0x90
.L_424910:

            sub RCX,RAX
            mov RSI,R14
            mov RDI,R12
            xor EAX,EAX
.L_42491b:

            call .L_414ea0
.L_424920:

            mov EAX,EBX
            add RBX,2
            cmp DWORD PTR [RBP+12],EAX
            jle .L_424962
.L_42492b:

            mov RDX,QWORD PTR [R13+RBX*8-16]
            test RDX,RDX
            je .L_424978

            mov RCX,QWORD PTR [R13+RBX*8-8]
            mov RAX,QWORD PTR [RBP+24]
            sub RDX,RAX
            test RCX,RCX
            jne .L_424910

            lea RSI,QWORD PTR [RIP+.L_436338]
            mov RDI,R12
            xor EAX,EAX
            call .L_414ea0

            mov EAX,EBX
            add RBX,2
            cmp DWORD PTR [RBP+12],EAX
            jg .L_42492b
.L_424962:

            add RSP,8
.L_424966:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424978:

            lea RSI,QWORD PTR [RIP+.L_436332]
            mov RDI,R12
            xor EAX,EAX
            call .L_414ea0
.L_424989:

            jmp .L_424920
.L_42498b:

            mov RDI,QWORD PTR [R12]
            mov RBX,RAX
            cmp R15,RDI
            je .L_42499c

            call _ZdlPv@PLT
.L_42499c:

            mov RDI,RBX
.L_42499f:

            call _Unwind_Resume@PLT
.L_4249a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4249b0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4249ba:

            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            je .L_424bc8

            mov RAX,QWORD PTR [RDI]
            mov R13,RDI
            movsxd RBX,DWORD PTR [RAX+12]
            movabs RAX,2305843009213693950
            cmp RBX,RAX
            mov R12,RBX
            ja .L_424bd3

            shl RBX,2
            mov RDI,RBX
            call _Znam@PLT

            mov RDI,RBX
            mov RBP,RAX
            call _Znam@PLT

            mov RBX,RAX
            call .L_435550

            test EAX,EAX
            je .L_424a38

            test R12D,R12D
            jle .L_424a38

            lea EAX,DWORD PTR [R12-1]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_424a20:

            mov DWORD PTR [RBX+RAX*1],2880154539
            mov DWORD PTR [RBP+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_424a20
.L_424a38:

            mov EAX,DWORD PTR [R13+8]
            cmp R12D,EAX
            ja .L_424a68
.L_424a41:

            mov R13D,4294967295
.L_424a47:

            mov RDI,RBP
            call _ZdaPv@PLT

            mov RDI,RBX
            call _ZdaPv@PLT
.L_424a57:

            add RSP,8
.L_424a5b:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424a68:

            movsxd RDX,EAX
            lea R9,QWORD PTR [RBX+4]
            lea R8,QWORD PTR [RIP+.L_436380]
            mov DWORD PTR [RBX],EAX
            mov DWORD PTR [RBP+RDX*4],0
            mov RCX,RBX
            mov RAX,QWORD PTR [R13]
            mov R10D,1
            mov R13D,4294967295
            nop
            nop
            nop
            nop
            nop
.L_424a98:

            mov RSI,QWORD PTR [RAX+32]
            lea RDI,QWORD PTR [RSI+RDX*8]
            mov ESI,DWORD PTR [RDI]
            mov EDX,ESI
            and EDX,7
            movsxd RDX,DWORD PTR [R8+RDX*4]
            add RDX,R8
            jmp RDX
.L_424ab0:

            shr ESI,3
            test ESI,ESI
            jne .L_424b60

            nop
            nop
            nop
            nop
            nop
.L_424ac0:

            movsxd RDX,R10D
            add RCX,4
            lea R9,QWORD PTR [RBX+RDX*4]
            cmp R9,RCX
            je .L_424a47

            movsxd RDX,DWORD PTR [RCX]
            jmp .L_424a98
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ae0:

            movzx ESI,BYTE PTR [RDI+4]
            cmp SIL,BYTE PTR [RDI+5]
            mov EDX,ESI
            jne .L_424a41

            cmp BYTE PTR [RDI+6],0
            je .L_424b02

            sub EDX,97
            cmp DL,25
            jbe .L_424a41
.L_424b02:

            cmp R13D,-1
            je .L_424bc0

            cmp ESI,R13D
            je .L_424ac0

            jmp .L_424a41
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424b20:

            shr ESI,3
            test ESI,ESI
            jne .L_424b90
.L_424b27:

            mov EDX,DWORD PTR [RDI+4]
            test EDX,EDX
            je .L_424ac0

            cmp EDX,R12D
            jae .L_424ac0

            movsxd RSI,EDX
            lea RDI,QWORD PTR [RBP+RSI*4]
            movsxd RSI,DWORD PTR [RDI]
            cmp ESI,R10D
            jae .L_424b4c

            cmp EDX,DWORD PTR [RBX+RSI*4]
            je .L_424ac0
.L_424b4c:

            movsxd RSI,R10D
            mov DWORD PTR [RDI],R10D
            add R10D,1
            mov DWORD PTR [RBX+RSI*4],EDX
            jmp .L_424ac0
          .byte 0x66
          .byte 0x90
.L_424b60:

            cmp ESI,R12D
            jae .L_424ac0

            mov EDX,ESI
            lea RDI,QWORD PTR [RBP+RDX*4]
            movsxd RDX,DWORD PTR [RDI]
            cmp EDX,R10D
            jae .L_424b81

            cmp ESI,DWORD PTR [RBX+RDX*4]
            je .L_424ac0
.L_424b81:

            mov DWORD PTR [RDI],R10D
            mov DWORD PTR [R9],ESI
            add R10D,1
            jmp .L_424ac0
.L_424b90:

            cmp ESI,R12D
            jae .L_424b27

            mov EDX,ESI
            lea R11,QWORD PTR [RBP+RDX*4]
            movsxd RDX,DWORD PTR [R11]
            cmp EDX,R10D
            jae .L_424bad

            cmp ESI,DWORD PTR [RBX+RDX*4]
            je .L_424b27
.L_424bad:

            mov DWORD PTR [R11],R10D
            mov DWORD PTR [R9],ESI
            add R10D,1
            jmp .L_424b27
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424bc0:

            mov R13D,ESI
            jmp .L_424ac0
.L_424bc8:

            mov R13D,4294967295
            jmp .L_424a57
.L_424bd3:

            call __cxa_throw_bad_array_new_length@PLT
.L_424bd8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424be0:

            test EDX,EDX
            jne .L_424bf0

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424bf0:

            push R15
            push R14
            lea RAX,QWORD PTR [R9+24]
            push R13
            push R12
            not ECX
            push RBP
            push RBX
            mov R14,RDI
            mov R10D,1
            mov R12,RSI
            mov R13,R9
            sub RSP,72
.L_424c13:

            mov R15,QWORD PTR [RDI+152]
            mov RDI,-1
            mov DWORD PTR [RSP+20],ECX
            mov QWORD PTR [RSP+8],RAX
            mov DWORD PTR [R15],EDX
            mov DWORD PTR [R15+4],4294967295
            mov QWORD PTR [R15+8],0
            nop
            nop
            nop
.L_424c40:

            lea EBX,DWORD PTR [R10-1]
            movsxd RBP,EBX
            shl RBP,4
            test EDI,EDI
            lea RCX,QWORD PTR [R15+RBP*1]
            js .L_424c5c

            mov RAX,QWORD PTR [RCX+8]
            mov QWORD PTR [R13+RDI*8],RAX
.L_424c5c:

            test EDX,EDX
            je .L_424ea0

            cmp DWORD PTR [R12+4],EDX
            movsxd R9,EDX
            mov EAX,DWORD PTR [R12]
            mov RDI,QWORD PTR [R12+16]
            jbe .L_424cd8

            mov RSI,QWORD PTR [R12+8]
            lea R11,QWORD PTR [RSI+R9*4]
            movsxd RSI,DWORD PTR [R11]
            cmp ESI,EAX
            jae .L_424c95

            shl RSI,4
            cmp DWORD PTR [RDI+RSI*1+8],EDX
            je .L_424ea0
.L_424c95:

            mov DWORD PTR [R11],EAX
            movsxd RSI,DWORD PTR [R12]
            mov RAX,RSI
            shl RSI,4
            add EAX,1
            mov DWORD PTR [RDI+RSI*1+8],EDX
            mov DWORD PTR [R12],EAX
            movsxd RSI,DWORD PTR [R11]
            mov R11,RSI
            shl RSI,4
            add RSI,RDI
            cmp EDX,DWORD PTR [R12+4]
            mov QWORD PTR [RSI],0
            jae .L_424cd8

            cmp R11D,EAX
            jae .L_424cd8

            cmp DWORD PTR [RSI+8],EDX
            je .L_424ce2

            nop
            nop
            nop
            nop
            nop
.L_424cd8:

            cdqe 
            shl RAX,4
            lea RSI,QWORD PTR [RDI+RAX*1]
.L_424ce2:

            mov RAX,QWORD PTR [R14]
            lea R11,QWORD PTR [RIP+.L_4363a0]
            mov RAX,QWORD PTR [RAX+32]
            lea R9,QWORD PTR [RAX+R9*8]
            mov EDI,DWORD PTR [R9]
            mov EAX,EDI
            and EAX,7
            movsxd RAX,DWORD PTR [R11+RAX*4]
            add RAX,R11
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424d08:

            mov RBX,QWORD PTR [R14+168]
            test RBX,RBX
            je .L_424ec0

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R14+168],RAX
            mov RAX,QWORD PTR [RBX+8]
.L_424d26:

            mov DWORD PTR [RBX],EDX
            mov EDI,DWORD PTR [R14+12]
            test EDI,EDI
            jle .L_424d6d

            sub EDI,1
            lea RDX,QWORD PTR [R13+8]
            add RAX,8
            shr EDI,1
            shl RDI,4
            add RDI,QWORD PTR [RSP+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424d50:

            mov R11,QWORD PTR [RDX-8]
            add RDX,16
            add RAX,16
            mov QWORD PTR [RAX-24],R11
            mov R11,QWORD PTR [RDX-16]
            mov QWORD PTR [RAX-16],R11
            cmp RDI,RDX
            jne .L_424d50
.L_424d6d:

            mov QWORD PTR [RSI],RBX
.L_424d70:

            mov EAX,DWORD PTR [R9+4]
            mov DWORD PTR [RCX+4],4294967295
            lea EBX,DWORD PTR [R10+1]
            mov QWORD PTR [RCX+8],0
            mov DWORD PTR [RCX],EAX
            mov EDX,DWORD PTR [R9]
            lea RAX,QWORD PTR [R15+RBP*1+16]
            mov DWORD PTR [RAX+4],4294967295
            mov QWORD PTR [RAX+8],0
            shr EDX,3
            mov DWORD PTR [RAX],EDX
            nop
            nop
            nop
.L_424da8:

            lea EAX,DWORD PTR [RBX-1]
            mov R10D,EBX
            cdqe 
            shl RAX,4
            add RAX,R15
            movsxd RDI,DWORD PTR [RAX+4]
            mov EDX,DWORD PTR [RAX]
            jmp .L_424c40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424dc8:

            mov EAX,DWORD PTR [RSP+20]
            test DWORD PTR [R9+4],EAX
            jne .L_424ea0
.L_424dd6:

            shr EDI,3
            mov DWORD PTR [RCX+4],4294967295
            mov QWORD PTR [RCX+8],0
            mov DWORD PTR [RCX],EDI
            mov EBX,R10D
            jmp .L_424da8
          .byte 0x90
.L_424df0:

            mov EAX,DWORD PTR [R9+4]
            cmp DWORD PTR [R14+12],EAX
            jle .L_424e20

            movsxd RDX,EAX
            mov EBX,R10D
            lea RDX,QWORD PTR [R13+RDX*8]
            mov RSI,QWORD PTR [RDX]
            mov DWORD PTR [RCX],0
            mov DWORD PTR [RCX+4],EAX
            mov QWORD PTR [RCX+8],RSI
            mov EDI,DWORD PTR [R9]
            lea RCX,QWORD PTR [R15+RBP*1+16]
            mov QWORD PTR [RDX],R8
.L_424e20:

            shr EDI,3
            add EBX,1
            mov DWORD PTR [RCX+4],4294967295
            mov DWORD PTR [RCX],EDI
            mov QWORD PTR [RCX+8],0
            jmp .L_424da8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424e40:

            mov RBP,QWORD PTR [R14+168]
            test RBP,RBP
            je .L_424f38

            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [R14+168],RAX
            mov RAX,QWORD PTR [RBP+8]
.L_424e5f:

            mov DWORD PTR [RBP],EDX
            mov ECX,DWORD PTR [R14+12]
            test ECX,ECX
            jle .L_424e9d

            sub ECX,1
            lea RDX,QWORD PTR [R13+8]
            add RAX,8
            shr ECX,1
            shl RCX,4
            add RCX,QWORD PTR [RSP+8]
.L_424e80:

            mov RDI,QWORD PTR [RDX-8]
            add RDX,16
            add RAX,16
            mov QWORD PTR [RAX-24],RDI
            mov RDI,QWORD PTR [RDX-16]
            mov QWORD PTR [RAX-16],RDI
            cmp RDX,RCX
            jne .L_424e80
.L_424e9d:

            mov QWORD PTR [RSI],RBP
.L_424ea0:

            test EBX,EBX
            jne .L_424da8

            add RSP,72
.L_424eac:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ec0:

            mov EDI,16
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+56],R8
            mov DWORD PTR [RSP+52],EDX
            mov DWORD PTR [RSP+48],R10D
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+32],R9
            call _Znwm@PLT

            mov RBX,RAX
            movsxd RAX,DWORD PTR [R14+12]
            movabs RCX,1152921504606846975
            cmp RAX,RCX
            ja .L_424f8a

            lea RDI,QWORD PTR [RAX*8]
            call _Znam@PLT

            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX+8],RAX
            mov R9,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RSP+48]
            mov EDX,DWORD PTR [RSP+52]
            mov R8,QWORD PTR [RSP+56]
            jmp .L_424d26
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424f38:

            mov EDI,16
            mov QWORD PTR [RSP+40],R8
            mov DWORD PTR [RSP+32],EDX
            mov QWORD PTR [RSP+24],RSI
            call _Znwm@PLT

            mov RBP,RAX
            movsxd RAX,DWORD PTR [R14+12]
            movabs RCX,1152921504606846975
            cmp RAX,RCX
            ja .L_424f8a

            lea RDI,QWORD PTR [RAX*8]
            call _Znam@PLT

            mov RSI,QWORD PTR [RSP+24]
            mov QWORD PTR [RBP+8],RAX
            mov EDX,DWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+40]
            jmp .L_424e5f
.L_424f8a:

            call __cxa_throw_bad_array_new_length@PLT
.L_424f8f:

            nop
.L_424f90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,648
.L_424fa1:

            mov QWORD PTR [RSP+112],R9
            mov R9D,DWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+632],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+96],RSI
            test R9D,R9D
            je .L_425570

            movdqu XMM0,XMMWORD PTR [RDX]
            mov RBX,RDI
            movq RAX,XMM0
            movaps XMMWORD PTR [RSP+128],XMM0
            test RAX,RAX
            je .L_4255ba
.L_424fe8:

            mov RDX,QWORD PTR [RSP+96]
            movsxd RSI,DWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RDX]
            movsxd RDX,DWORD PTR [RDX+8]
            cmp RDI,RAX
            jb .L_42713f

            add RSI,RAX
            add RDX,RDI
            cmp RSI,RDX
            jb .L_42713f

            mov R10,QWORD PTR [RBX]
            cmp RDI,RAX
            setne BPL
            movzx R9D,BYTE PTR [R10]
            and BPL,R9B
            jne .L_425570

            movzx EAX,BYTE PTR [R10+1]
            test AL,AL
            jne .L_42559d

            or R9D,ECX
            mov BYTE PTR [RSP+127],R9B
.L_425040:

            mov EDI,DWORD PTR [RSP+704]
            test EDI,EDI
            js .L_425e47

            mov EAX,DWORD PTR [RSP+704]
            mov ESI,DWORD PTR [RSP+704]
            mov BYTE PTR [RBX+16],R8B
            add EAX,EAX
            test ESI,ESI
            mov DWORD PTR [RBX+12],EAX
            jne .L_425ce4

            mov DWORD PTR [RBX+12],2
            mov EDI,16
.L_42507a:

            call _Znam@PLT
.L_42507f:

            movsxd R12,DWORD PTR [RBX+12]
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RBX+136],RAX
            mov BYTE PTR [RBX+144],0
            shl R12,3
            mov RDX,R12
            call memset@PLT

            mov RBP,QWORD PTR [RSP+128]
            mov RCX,RAX
            lea RAX,QWORD PTR [RBX+40]
            xor ESI,ESI
            mov RDI,RCX
            mov DWORD PTR [RBX+40],0
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+24],RBP
            mov RDX,R12
            mov QWORD PTR [RSP+80],RAX
            call memset@PLT

            mov RAX,QWORD PTR [RSP+96]
            mov RCX,QWORD PTR [RAX]
            cmp RBP,RCX
            mov QWORD PTR [RSP+64],RCX
            jb .L_425cad

            xor ESI,ESI
            mov DWORD PTR [RSP+104],4294967295
.L_4250fe:

            lea R13,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [R13+120]
            mov QWORD PTR [RSP+8],RAX
            nop
.L_425110:

            movsxd RDX,DWORD PTR [RSP+136]
            mov RAX,QWORD PTR [RSP+64]
            add RDX,RBP
            cmp RAX,RBP
            je .L_425ae0

            cmp RAX,RDX
            ja .L_425ad0

            cmp BYTE PTR [RAX-1],10
            sete AL
            cmp QWORD PTR [RSP+64],RDX
            movzx EAX,AL
            je .L_425af0
.L_425147:

            mov RDI,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+108],0
            cmp RDI,RDX
            jae .L_42517f

            movzx EDX,BYTE PTR [RDI]
            cmp DL,10
            je .L_425b13

            mov EDI,EDX
            mov DWORD PTR [RSP+108],1
            and EDI,4294967263
            sub EDI,65
            cmp DIL,25
            ja .L_425b16
.L_42517f:

            mov EDX,EAX
            or EAX,32
            or EDX,16
            cmp ESI,DWORD PTR [RSP+108]
            cmove EDX,EAX
            mov RAX,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+120],EDX
            sub RAX,1
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+80]
            mov DWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+16]
            movsxd RAX,DWORD PTR [RAX]
            mov RDI,RAX
            shl RAX,4
            add RAX,RSI
            cmp RSI,RAX
            je .L_425970

            mov R12,RSI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            jmp .L_4254a8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4251e0:

            cmp ECX,5
            je .L_425748

            cmp ECX,1
            je .L_4255d8

            mov RDI,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+240],0
            call _ZNSt8ios_baseC2Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+584],0
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov QWORD PTR [RSP+592],0
            xor ESI,ESI
            mov QWORD PTR [RSP+360],RAX
            mov RAX,QWORD PTR [R15-24]
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],R15
            lea RDI,QWORD PTR [R13+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_425281:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_425286:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R13+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+304],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R13+16]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R13+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_425358:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42535d:

            lea RDI,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [RIP+.L_436347]
            mov EDX,10
.L_42536d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R13+8]
            mov ESI,314
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4253a9:

            lea RDI,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [RIP+.L_436369]
            mov EDX,10
.L_4253b9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [R14]
            lea RDI,QWORD PTR [R13+8]
            and ESI,7
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_436374]
            mov EDX,8
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4253e1:

            cmp BYTE PTR [RSP+240],0
            je .L_4257f0
.L_4253ef:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+328]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+360],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R13+104]
            cmp RDI,RAX
            je .L_42542c

            call _ZdlPv@PLT
.L_42542c:

            mov RAX,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R13+72]
            mov QWORD PTR [RSP+256],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R15-24]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+248],R15
            mov QWORD PTR [RSP+RAX*1+248],RSI
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+360],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+16]
            mov EDI,DWORD PTR [RAX]
.L_42547f:

            mov RAX,QWORD PTR [RBX+168]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBX+168],RBP
.L_425491:

            movsxd RAX,EDI
            add R12,16
            shl RAX,4
            add RAX,RSI
            cmp RAX,R12
            je .L_425968
.L_4254a8:

            mov RBP,QWORD PTR [R12]
            test RBP,RBP
            je .L_425491

            movzx R8D,BYTE PTR [RBX+16]
            test R8B,R8B
            je .L_4254e0

            cmp BYTE PTR [RBX+144],0
            je .L_4254e0

            mov RCX,QWORD PTR [RBX+136]
            mov RDX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RDX]
            cmp QWORD PTR [RCX],RDX
            jb .L_42547f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4254e0:

            mov R10,QWORD PTR [RBX]
            movsxd RDX,DWORD PTR [RBP]
            mov R9,QWORD PTR [R10+32]
            lea R14,QWORD PTR [R9+RDX*8]
            mov EDX,DWORD PTR [R14]
            mov ECX,EDX
            and ECX,7
            cmp ECX,2
            jne .L_4251e0

            cmp BYTE PTR [R14+6],0
            mov R11D,DWORD PTR [RSP+104]
            movzx ECX,BYTE PTR [R14+4]
            mov EAX,R11D
            je .L_425524

            lea R8D,DWORD PTR [R11-65]
            lea EAX,DWORD PTR [R11+32]
            cmp R8D,26
            cmovae EAX,R11D
.L_425524:

            cmp ECX,EAX
            jg .L_42547f

            movzx ECX,BYTE PTR [R14+5]
            cmp EAX,ECX
            jg .L_42547f

            mov RSI,QWORD PTR [RSP+80]
            mov R9,QWORD PTR [RBP+8]
            mov RDI,RBX
            mov R8,QWORD PTR [RSP+64]
            mov ECX,DWORD PTR [RSP+120]
            shr EDX,3
.L_425551:

            call .L_424be0
.L_425556:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+16]
            mov EDI,DWORD PTR [RAX]
            jmp .L_42547f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425570:

            xor EBP,EBP
.L_425572:

            mov RBX,QWORD PTR [RSP+632]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_427397

            add RSP,648
.L_425592:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42559d:

            cmp RSI,RDX
            jne .L_425570

            or R9D,ECX
            mov BYTE PTR [RBX+17],1
            mov QWORD PTR [RBX+32],RSI
            mov BYTE PTR [RSP+127],R9B
            mov R8D,EAX
            jmp .L_425040
.L_4255ba:

            mov RAX,QWORD PTR [RSI]
            mov EDX,DWORD PTR [RSI+8]
            mov QWORD PTR [RSP+128],RAX
            mov DWORD PTR [RSP+136],EDX
            jmp .L_424fe8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4255d8:

            cmp R12,RSI
            jne .L_42547f

            shr EDX,3
            mov EDX,DWORD PTR [R9+RDX*8]
            and EDX,7
            cmp EDX,2
            sete DL
            or R8B,DL
            je .L_42547f

            mov EDI,DWORD PTR [RBX+12]
            mov R9,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBX+136]
            test EDI,EDI
            jle .L_425645

            sub EDI,1
            lea RDX,QWORD PTR [R9+8]
            lea RCX,QWORD PTR [RSI+8]
            shr EDI,1
            shl RDI,4
            lea R9,QWORD PTR [R9+RDI*1+24]
            nop
            nop
            nop
            nop
            nop
            nop
.L_425628:

            mov RDI,QWORD PTR [RDX-8]
            add RDX,16
            add RCX,16
            mov QWORD PTR [RCX-24],RDI
            mov RDI,QWORD PTR [RDX-16]
            mov QWORD PTR [RCX-16],RDI
            cmp R9,RDX
            jne .L_425628
.L_425645:

            mov RDX,QWORD PTR [RBX+168]
            mov QWORD PTR [RBP],RDX
            mov QWORD PTR [RBX+168],RBP
.L_425657:

            add R12,16
            cmp RAX,R12
            je .L_425683
.L_425660:

            mov RDX,QWORD PTR [R12]
            test RDX,RDX
            je .L_425657

            mov RCX,QWORD PTR [RBX+168]
            add R12,16
            cmp RAX,R12
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RBX+168],RDX
            jne .L_425660
.L_425683:

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [RAX],0
            mov EAX,DWORD PTR [R14]
            mov BYTE PTR [RBX+144],1
            mov RDX,QWORD PTR [R10+32]
            shr EAX,3
            mov ECX,EAX
            mov EDX,DWORD PTR [RDX+RCX*8]
            and EDX,7
            cmp EDX,2
            jne .L_4256b0

            mov EAX,DWORD PTR [R14+4]
.L_4256b0:

            mov RCX,QWORD PTR [RSP+24]
            test EAX,EAX
            mov DWORD PTR [RCX],0
            jne .L_425d44
.L_4256c3:

            mov RSI,QWORD PTR [RSP+96]
            movsxd RAX,DWORD PTR [RSI+8]
            add RAX,QWORD PTR [RSI]
            cmp QWORD PTR [RSP+64],RAX
            ja .L_426910

            nop
            nop
            nop
            nop
            nop
            nop
.L_4256e0:

            mov RAX,QWORD PTR [RSP+80]
            mov EAX,DWORD PTR [RAX]
            test EAX,EAX
            je .L_425d88

            mov RSI,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP+104],0
            movsxd RAX,DWORD PTR [RSI+8]
            mov RCX,QWORD PTR [RSI]
            mov RSI,QWORD PTR [RSP+64]
            add RAX,RCX
            cmp RSI,RAX
            je .L_425717

            movzx EAX,BYTE PTR [RSI]
            mov DWORD PTR [RSP+104],EAX
.L_425717:

            mov RSI,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+80]
            add QWORD PTR [RSP+64],1
            mov RBP,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+24],RAX
            mov ESI,DWORD PTR [RSP+108]
            jmp .L_425110
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425748:

            cmp BYTE PTR [RBX+17],0
            je .L_42575d

            mov RDX,QWORD PTR [RSP+72]
            cmp RDX,QWORD PTR [RBX+32]
            jne .L_42547f
.L_42575d:

            mov R9,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RSP+72]
            test R8B,R8B
            mov RDX,QWORD PTR [RBX+136]
            mov R10,QWORD PTR [R9+8]
            mov QWORD PTR [R9+8],RCX
            je .L_425c14

            cmp BYTE PTR [RBX+144],0
            je .L_4257b0

            mov RAX,QWORD PTR [RDX]
            cmp QWORD PTR [R9],RAX
            jb .L_4257b0

            je .L_4257a0
.L_425791:

            mov QWORD PTR [R9],R10
            mov BYTE PTR [RBX+144],1
            jmp .L_42547f
.L_4257a0:

            cmp RCX,QWORD PTR [RDX+8]
            jbe .L_425791

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4257b0:

            mov ECX,DWORD PTR [RBX+12]
            test ECX,ECX
            jle .L_425791

            sub ECX,1
            lea RAX,QWORD PTR [R9+8]
            add RDX,8
            shr ECX,1
            shl RCX,4
            lea R8,QWORD PTR [R9+RCX*1+24]
            nop
            nop
            nop
.L_4257d0:

            mov RCX,QWORD PTR [RAX-8]
            add RAX,16
            add RDX,16
            mov QWORD PTR [RDX-24],RCX
            mov RCX,QWORD PTR [RAX-16]
            mov QWORD PTR [RDX-16],RCX
            cmp R8,RAX
            jne .L_4257d0

            jmp .L_425791
          .byte 0x90
.L_4257f0:

            lea RDI,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RSP+160],0
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            je .L_425b00

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+288]
            cmp RAX,RDX
            jbe .L_425a10

            lea R14,QWORD PTR [RSP+208]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+208],RDX
            mov RDX,RAX
.L_42587a:

            call .L_424800
.L_42587f:

            mov RSI,QWORD PTR [RSP+208]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            cmp RSI,RAX
            je .L_425b85

            mov RAX,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+224]
            add RAX,16
            cmp RDI,RAX
            je .L_425bc2

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_425bda

            mov QWORD PTR [RSP+208],RDI
            mov QWORD PTR [RSP+224],RAX
.L_4258f7:

            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+208]
            cmp RDI,R14
            je .L_42591c
.L_425917:

            call _ZdlPv@PLT
.L_42591c:

            movsxd RDX,DWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+144]
            mov EDI,2
.L_425931:

            call write@PLT
.L_425936:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+240],1
            add RAX,16
            cmp RDI,RAX
            je .L_4253ef

            call _ZdlPv@PLT

            jmp .L_4253ef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425968:

            mov RAX,QWORD PTR [RSP+96]
            mov RCX,QWORD PTR [RAX]
.L_425970:

            mov RAX,QWORD PTR [RSP+24]
            movzx R8D,BYTE PTR [RBX+144]
            mov DWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+96]
            movsxd RBP,DWORD PTR [RAX+8]
            add RBP,RCX
            cmp QWORD PTR [RSP+64],RBP
            ja .L_425df8

            test R8B,R8B
            jne .L_4256e0

            cmp BYTE PTR [RSP+127],0
            jne .L_425b38

            mov ESI,DWORD PTR [RBX+164]
            test ESI,ESI
            js .L_4259d8

            mov RAX,QWORD PTR [RSP+80]
            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            jne .L_4259d8

            mov RCX,QWORD PTR [RSP+64]
            cmp RCX,RBP
            jb .L_4260cd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4259d8:

            mov R9,QWORD PTR [RBX+136]
            mov R8,QWORD PTR [RSP+64]
            mov RDI,RBX
            mov EDX,DWORD PTR [RBX+8]
            mov ECX,DWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+80]
            mov QWORD PTR [R9],R8
.L_4259f6:

            call .L_424be0
.L_4259fb:

            mov RAX,QWORD PTR [RBX+136]
            mov QWORD PTR [RAX],0
            jmp .L_4256e0
          .byte 0x66
          .byte 0x90
.L_425a10:

            lea R14,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+176],RAX
.L_425a27:

            call .L_424800

            mov RSI,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RAX
            je .L_425b48

            mov RAX,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+192]
            add RAX,16
            cmp RDI,RAX
            je .L_425beb

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_425c03

            mov QWORD PTR [RSP+176],RDI
            mov QWORD PTR [RSP+192],RAX
.L_425aa4:

            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,R14
            jne .L_425917

            jmp .L_42591c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425ad0:

            xor EAX,EAX
            jmp .L_425147
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425ae0:

            cmp QWORD PTR [RSP+64],RDX
            mov EAX,5
            jne .L_425147
.L_425af0:

            or EAX,10
            mov DWORD PTR [RSP+108],0
            jmp .L_42517f
.L_425b00:

            mov RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [R13+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_425b0e:

            jmp .L_42591c
.L_425b13:

            or EAX,2
.L_425b16:

            lea EDI,DWORD PTR [RDX-48]
            cmp DIL,9
            setbe DIL
            cmp DL,95
            sete DL
            or EDX,EDI
            movzx EDX,DL
            mov DWORD PTR [RSP+108],EDX
            jmp .L_42517f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425b38:

            cmp QWORD PTR [RSP+64],RCX
            jne .L_4256e0

            jmp .L_4259d8
.L_425b48:

            test RDX,RDX
            je .L_425b6c

            cmp RDX,1
            je .L_425d25

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+184]
            mov RDI,QWORD PTR [RSP+144]
.L_425b6c:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+176]
            jmp .L_425aa4
.L_425b85:

            test RDX,RDX
            je .L_425ba9

            cmp RDX,1
            je .L_425d06

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+216]
            mov RDI,QWORD PTR [RSP+144]
.L_425ba9:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_4258f7
.L_425bc2:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_425bda:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+208],RDI
            jmp .L_4258f7
.L_425beb:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_425c03:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+176],RDI
            jmp .L_425aa4
.L_425c14:

            mov ESI,DWORD PTR [RBX+12]
            test ESI,ESI
            jle .L_425c55

            sub ESI,1
            lea RCX,QWORD PTR [R9+8]
            add RDX,8
            shr ESI,1
            shl RSI,4
            lea RDI,QWORD PTR [R9+RSI*1+24]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425c38:

            mov RSI,QWORD PTR [RCX-8]
            add RCX,16
            add RDX,16
            mov QWORD PTR [RDX-24],RSI
            mov RSI,QWORD PTR [RCX-16]
            mov QWORD PTR [RDX-16],RSI
            cmp RDI,RCX
            jne .L_425c38
.L_425c55:

            mov RDX,QWORD PTR [RBX+168]
            mov QWORD PTR [R9],R10
            mov QWORD PTR [RBP],RDX
            mov QWORD PTR [RBX+168],RBP
.L_425c6a:

            add R12,16
            cmp RAX,R12
            je .L_425c96
.L_425c73:

            mov RDX,QWORD PTR [R12]
            test RDX,RDX
            je .L_425c6a

            mov RCX,QWORD PTR [RBX+168]
            add R12,16
            cmp RAX,R12
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RBX+168],RDX
            jne .L_425c73
.L_425c96:

            mov RAX,QWORD PTR [RSP+24]
            mov BYTE PTR [RBX+144],1
            mov DWORD PTR [RAX],0
            jmp .L_4256c3
.L_425cad:

            movzx EAX,BYTE PTR [RCX-1]
            mov ESI,1
            mov EDX,EAX
            mov DWORD PTR [RSP+104],EAX
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_4250fe

            lea EAX,DWORD PTR [RDX-48]
            cmp AL,9
            setbe SIL
            cmp DL,95
            sete AL
            or ESI,EAX
            movzx ESI,SIL
            jmp .L_4250fe
.L_425ce4:

            cdqe 
            movabs RDX,1152921504606846975
            cmp RAX,RDX
            ja .L_42709f

            lea RDI,QWORD PTR [RAX*8]
            jmp .L_42507a
.L_425d06:

            movzx EAX,BYTE PTR [RSP+224]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+216]
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_425ba9
.L_425d25:

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+184]
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_425b6c
.L_425d44:

            mov RDX,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [R10+32]
            movsxd RCX,DWORD PTR [RDX+8]
            add RCX,QWORD PTR [RDX]
.L_425d54:

            cdqe 
            lea RBP,QWORD PTR [RDI+RAX*8]
            mov EAX,DWORD PTR [RBP]
            mov EDX,EAX
            and EDX,7
            cmp EDX,4
            je .L_4262fc

            jbe .L_4262df

            cmp EDX,5
            je .L_42613d

            cmp EDX,6
            jne .L_42659a
.L_425d83:

            shr EAX,3
            jmp .L_425d54
.L_425d88:

            movzx R8D,BYTE PTR [RBX+144]
.L_425d90:

            test R8B,R8B
            je .L_425570
.L_425d99:

            mov ECX,DWORD PTR [RSP+704]
            test ECX,ECX
            je .L_425dee

            mov RSI,QWORD PTR [RBX+136]
            mov EBX,DWORD PTR [RSP+704]
            mov RDX,QWORD PTR [RSP+112]
            lea ECX,DWORD PTR [RBX-1]
            lea RAX,QWORD PTR [RSI+8]
            add RDX,8
            shl RCX,4
            lea RDI,QWORD PTR [RSI+RCX*1+24]
            nop
            nop
            nop
            nop
            nop
.L_425dd0:

            mov RSI,QWORD PTR [RAX-8]
            mov RCX,QWORD PTR [RAX]
            add RAX,16
            add RDX,16
            sub RCX,RSI
            mov QWORD PTR [RDX-24],RSI
            mov DWORD PTR [RDX-16],ECX
            cmp RDI,RAX
            jne .L_425dd0
.L_425dee:

            mov EBP,1
            jmp .L_425572
.L_425df8:

            mov RAX,QWORD PTR [RSP+80]
            mov EDX,DWORD PTR [RAX]
.L_425dff:

            mov RAX,QWORD PTR [RSP+80]
            movsxd RCX,EDX
            shl RCX,4
            mov RAX,QWORD PTR [RAX+16]
            add RCX,RAX
            cmp RAX,RCX
            je .L_425d90

            nop
            nop
            nop
            nop
            nop
.L_425e20:

            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_425e39

            mov RSI,QWORD PTR [RBX+168]
            mov QWORD PTR [RDX],RSI
            mov QWORD PTR [RBX+168],RDX
.L_425e39:

            add RAX,16
            cmp RCX,RAX
            jne .L_425e20

            jmp .L_425d90
.L_425e47:

            lea R12,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+240],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+584],0
            xor ESI,ESI
            mov QWORD PTR [RSP+360],R15
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov QWORD PTR [RSP+592],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_425ee5:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_425eea:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+304],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_425fbf:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_425fc4:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436347]
            mov EDX,10
.L_425fd5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,431
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_426013:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436354]
            mov EDX,20
.L_426024:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RSP+704]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSolsEi@PLT
.L_42603a:

            cmp BYTE PTR [RSP+240],0
            je .L_426169
.L_426048:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+328]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+360],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_426086

            call _ZdlPv@PLT
.L_426086:

            mov RAX,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+256],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RBX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+RAX*1+248],RBX
            mov QWORD PTR [RSP+360],R15
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_425572
.L_4260cd:

            movzx EAX,BYTE PTR [RCX]
            cmp ESI,EAX
            je .L_4259d8

            mov RDX,RBP
            mov RDI,RCX
            sub RDX,RCX
            call memchr@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_426b38

            movzx EDX,BYTE PTR [RAX]
            mov DWORD PTR [RSP+108],1
            mov EAX,EDX
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_426122

            lea EAX,DWORD PTR [RDX-48]
            cmp AL,9
            setbe AL
            cmp DL,95
            sete DL
            or EAX,EDX
            movzx EAX,AL
            mov DWORD PTR [RSP+108],EAX
.L_426122:

            mov RSI,QWORD PTR [RSP+64]
            lea RDI,QWORD PTR [RSP+128]
.L_42612f:

            call .L_42fc70
.L_426134:

            mov DWORD PTR [RSP+120],EAX
            jmp .L_4259d8
.L_42613d:

            mov QWORD PTR [RSI+8],RCX
            mov RSI,QWORD PTR [RSP+80]
            mov BYTE PTR [RBX+144],1
            movsxd RCX,DWORD PTR [RSI]
            mov RAX,QWORD PTR [RSI+16]
            shl RCX,4
            add RCX,RAX
            cmp RCX,RAX
            jne .L_425e20

            jmp .L_425d99
.L_426169:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RSP+160],0
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            je .L_426cd0

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+288]
            cmp RAX,RDX
            jbe .L_426924

            lea R14,QWORD PTR [RSP+208]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+208],RDX
            mov RDX,RAX
.L_4261f4:

            call .L_424800
.L_4261f9:

            mov RSI,QWORD PTR [RSP+208]
            mov RDI,QWORD PTR [RSP+144]
            lea RCX,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP+216]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_426d8c

            mov RBX,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+224]
            lea RDI,QWORD PTR [RBX+16]
            cmp RAX,RDI
            je .L_426d63

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_426d7b

            mov QWORD PTR [RSP+208],RAX
            mov QWORD PTR [RSP+224],RDI
.L_426274:

            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RAX],0
            add R14,16
            mov RDI,QWORD PTR [RSP+208]
            cmp RDI,R14
            je .L_426299
.L_426294:

            call _ZdlPv@PLT
.L_426299:

            movsxd RDX,DWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+144]
            mov EDI,2
.L_4262ae:

            call write@PLT
.L_4262b3:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+240],1
            add RAX,16
            cmp RDI,RAX
            je .L_426048

            call _ZdlPv@PLT

            jmp .L_426048
.L_4262df:

            cmp EDX,3
            jne .L_42659a

            movsxd RDX,DWORD PTR [RBP+4]
            shr EAX,3
            mov QWORD PTR [RSI+RDX*8],RCX
            mov RDI,QWORD PTR [R10+32]
            jmp .L_425d54
.L_4262fc:

            test DWORD PTR [RBP+4],4294967285
            je .L_425d83

            lea R12,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+240],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+584],0
            xor ESI,ESI
            mov QWORD PTR [RSP+360],R15
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov QWORD PTR [RSP+592],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_4263a7:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4263ac:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+304],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_426481:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_426486:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436347]
            mov EDX,10
.L_426497:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,547
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4264d5:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436308]
            mov EDX,41
.L_4264e6:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RBP+4]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSolsEi@PLT
.L_4264f8:

            cmp BYTE PTR [RSP+240],0
            je .L_4269e4
.L_426506:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+328]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+360],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_426544

            call _ZdlPv@PLT
.L_426544:

            mov RAX,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+256],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RSI,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+RAX*1+248],RSI
            mov QWORD PTR [RSP+360],R15
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [RSP+80]
            movzx R8D,BYTE PTR [RBX+144]
            mov EDX,DWORD PTR [RAX]
            jmp .L_425dff
.L_42659a:

            lea R12,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+240],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+584],0
            xor ESI,ESI
            mov QWORD PTR [RSP+360],R15
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov QWORD PTR [RSP+592],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_426638:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42663d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+304],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_426712:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_426717:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436347]
            mov EDX,10
.L_426728:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,528
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_426766:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4362e0]
            mov EDX,36
.L_426777:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RBP]
            lea RDI,QWORD PTR [R12+8]
            and ESI,7
            call _ZNSolsEi@PLT
.L_42678c:

            cmp BYTE PTR [RSP+240],0
            jne .L_426506

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RSP+160],0
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            je .L_426d4f

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+288]
            cmp RAX,RDX
            jbe .L_426c10

            lea R14,QWORD PTR [RSP+208]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+208],RDX
            mov RDX,RAX
.L_426825:

            call .L_424800
.L_42682a:

            mov RSI,QWORD PTR [RSP+208]
            mov RDI,QWORD PTR [RSP+144]
            lea RCX,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP+216]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_426f75

            mov RDI,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+224]
            add RDI,16
            cmp RAX,RDI
            je .L_426f4c

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_426f64

            mov QWORD PTR [RSP+208],RAX
            mov QWORD PTR [RSP+224],RDI
.L_4268a5:

            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RAX],0
            add R14,16
            mov RDI,QWORD PTR [RSP+208]
            cmp RDI,R14
            je .L_4268ca
.L_4268c5:

            call _ZdlPv@PLT
.L_4268ca:

            movsxd RDX,DWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+144]
            mov EDI,2
.L_4268df:

            call write@PLT
.L_4268e4:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+240],1
            add RAX,16
            cmp RDI,RAX
            je .L_426506

            call _ZdlPv@PLT

            jmp .L_426506
.L_426910:

            mov RAX,QWORD PTR [RSP+80]
            movzx R8D,BYTE PTR [RBX+144]
            mov EDX,DWORD PTR [RAX]
            jmp .L_425dff
.L_426924:

            lea R14,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+176],RAX
.L_42693b:

            call .L_424800
.L_426940:

            mov RSI,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RSP+144]
            lea RCX,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_426d0d

            mov RBX,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+192]
            lea RDI,QWORD PTR [RBX+16]
            cmp RAX,RDI
            je .L_426ce4

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_426cfc

            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+192],RDI
.L_4269bb:

            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RAX],0
            add R14,16
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,R14
            jne .L_426294

            jmp .L_426299
.L_4269e4:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RSP+160],0
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            je .L_4270a4

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+288]
            cmp RAX,RDX
            jbe .L_426b4a

            lea R14,QWORD PTR [RSP+208]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+208],RDX
            mov RDX,RAX
.L_426a6f:

            call .L_424800
.L_426a74:

            mov RSI,QWORD PTR [RSP+208]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            cmp RSI,RAX
            je .L_426e2a

            mov RCX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RSP+224]
            add RCX,16
            cmp RDI,RCX
            je .L_426e01

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RAX
            je .L_426e19

            mov QWORD PTR [RSP+208],RDI
            mov QWORD PTR [RSP+224],RCX
.L_426aec:

            mov RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            add R14,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+208]
            cmp RDI,R14
            je .L_426b19
.L_426b14:

            call _ZdlPv@PLT
.L_426b19:

            movsxd RDX,DWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+144]
            mov EDI,2
.L_426b2e:

            call write@PLT
.L_426b33:

            jmp .L_4268e4
.L_426b38:

            mov QWORD PTR [RSP+64],RBP
            mov DWORD PTR [RSP+108],0
            jmp .L_426122
.L_426b4a:

            lea R14,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+176],RAX
.L_426b61:

            call .L_424800
.L_426b66:

            mov RSI,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RAX
            je .L_426eaa

            mov RCX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RSP+192]
            add RCX,16
            cmp RDI,RCX
            je .L_426e81

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RAX
            je .L_426e99

            mov QWORD PTR [RSP+176],RDI
            mov QWORD PTR [RSP+192],RCX
.L_426bde:

            mov RAX,QWORD PTR [RSP+176]
            mov QWORD PTR [RSP+184],0
            add R14,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,R14
            jne .L_426b14

            jmp .L_426b19
          .byte 0x90
.L_426c10:

            lea R14,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+176],RAX
.L_426c27:

            call .L_424800
.L_426c2c:

            mov RSI,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RSP+144]
            lea RCX,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_426fe0

            mov RDI,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+192]
            add RDI,16
            cmp RAX,RDI
            je .L_426fb7

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_426fcf

            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+192],RDI
.L_426ca7:

            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RAX],0
            add R14,16
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,R14
            jne .L_4268c5

            jmp .L_4268ca
.L_426cd0:

            mov RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [R12+88]
.L_426cda:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_426cdf:

            jmp .L_426299
.L_426ce4:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_426cfc:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+176],RAX
            jmp .L_4269bb
.L_426d0d:

            test RDX,RDX
            je .L_426d36

            cmp RDX,1
            jne .L_42704f

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
.L_426d36:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+176]
            jmp .L_4269bb
.L_426d4f:

            mov RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [R12+88]
.L_426d59:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_426d5e:

            jmp .L_4268ca
.L_426d63:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_426d7b:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+208],RAX
            jmp .L_426274
.L_426d8c:

            test RDX,RDX
            je .L_426db1

            cmp RDX,1
            jne .L_426dea

            movzx EAX,BYTE PTR [RSP+224]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
.L_426db1:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+208]
            jmp .L_426274
.L_426dca:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+144]
            add RAX,16
            cmp RDI,RAX
            je .L_426de5

            call _ZdlPv@PLT
.L_426de5:

            call _ZSt9terminatev@PLT
.L_426dea:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            jmp .L_426db1
.L_426e01:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RAX
.L_426e19:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+208],RAX
            jmp .L_426aec
.L_426e2a:

            test RDX,RDX
            je .L_426e4f

            cmp RDX,1
            jne .L_426e65

            movzx EAX,BYTE PTR [RSP+224]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
.L_426e4f:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_426aec
.L_426e60:

            jmp .L_426dca
.L_426e65:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            jmp .L_426e4f
.L_426e7c:

            jmp .L_426dca
.L_426e81:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RAX
.L_426e99:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+176],RAX
            jmp .L_426bde
.L_426eaa:

            test RDX,RDX
            je .L_426ecf

            cmp RDX,1
            jne .L_426ee0

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
.L_426ecf:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_426bde
.L_426ee0:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            jmp .L_426ecf
.L_426ef7:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
.L_426f07:

            call _Unwind_Resume@PLT
.L_426f0c:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+RAX*1+248],RSI
.L_426f32:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+360],R15
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_426f4c:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_426f64:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+208],RAX
            jmp .L_4268a5
.L_426f75:

            test RDX,RDX
            je .L_426f9e

            cmp RDX,1
            jne .L_42701e

            movzx EAX,BYTE PTR [RSP+224]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
.L_426f9e:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+208]
            jmp .L_4268a5
.L_426fb7:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_426fcf:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+176],RAX
            jmp .L_426ca7
.L_426fe0:

            test RDX,RDX
            je .L_427005

            cmp RDX,1
            jne .L_427038

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
.L_427005:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+176]
            jmp .L_426ca7
.L_42701e:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            jmp .L_426f9e
.L_427038:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            jmp .L_427005
.L_42704f:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            jmp .L_426d36
.L_427069:

            mov RBX,RAX
            mov RDI,R12
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42707c:

            jmp .L_426ef7
.L_427081:

            jmp .L_426f0c
.L_427086:

            mov RBX,RAX
            jmp .L_426f32
.L_42708e:

            jmp .L_426dca
.L_427093:

            jmp .L_426dca
.L_427098:

            jmp .L_426dca
.L_42709d:

            jmp .L_427086
.L_42709f:

            call __cxa_throw_bad_array_new_length@PLT
.L_4270a4:

            mov RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [R12+88]
.L_4270ae:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4270b3:

            jmp .L_426b19
.L_4270b8:

            jmp .L_427069
.L_4270ba:

            mov RBX,RAX
            mov RDI,R13
            call .L_40bd80

            mov RDI,RBX
.L_4270c8:

            call _Unwind_Resume@PLT
.L_4270cd:

            lea RDI,QWORD PTR [R13+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4270e1:

            lea RDI,QWORD PTR [R13+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R15-24]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+248],R15
            mov QWORD PTR [RSP+RAX*1+248],RSI
.L_427106:

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R13+120]
            mov QWORD PTR [RSP+360],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_427126:

            mov RBX,RAX
            jmp .L_427106
.L_42712b:

            jmp .L_427069
.L_427130:

            jmp .L_426ef7
.L_427135:

            jmp .L_426f0c
.L_42713a:

            jmp .L_427086
.L_42713f:

            lea R12,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+240],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+584],0
            xor ESI,ESI
            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+360],R15
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+592],0
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],RBP
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RDI],R13
.L_4271d8:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4271dd:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+256],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_42729e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4272a3:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436347]
            mov EDX,10
.L_4272b4:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,411
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4272f2:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4362b0]
            mov EDX,40
.L_427303:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RSI,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSo9_M_insertIPKvEERSoT_@PLT

            lea RSI,QWORD PTR [RIP+.L_436352]
            mov EDX,1
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RSP+136]
            mov RDI,RBX
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435733]
            mov EDX,1
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov R15,QWORD PTR [RSP+96]
            mov RDI,RBX
            mov RSI,QWORD PTR [R15]
            call _ZNSo9_M_insertIPKvEERSoT_@PLT

            lea RSI,QWORD PTR [RIP+.L_436352]
            mov EDX,1
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [R15+8]
            mov RDI,RBX
            call _ZNSolsEi@PLT
.L_42738a:

            mov RDI,R12
            call .L_410170

            call abort@PLT
.L_427397:

            call __stack_chk_fail@PLT
.L_42739c:

            mov RDI,R12
            call .L_410170

            call abort@PLT
.L_4273a9:

            jmp .L_426ef7
.L_4273ae:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+248],RBP
            mov QWORD PTR [RSP+RAX*1+248],R13
            jmp .L_426f32
.L_4273d4:

            jmp .L_427086
.L_4273d9:

            jmp .L_426dca
.L_4273de:

            jmp .L_426dca
.L_4273e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4273f0:

            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_4273f7:

            mov RDI,QWORD PTR [RDI+136]
            test RDI,RDI
            je .L_427408

            call _ZdaPv@PLT
.L_427408:

            mov RDI,QWORD PTR [R12+152]
            test RDI,RDI
            je .L_42741a

            call _ZdaPv@PLT
.L_42741a:

            mov RBX,QWORD PTR [R12+168]
            test RBX,RBX
            je .L_427456

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427430:

            mov RDI,QWORD PTR [RBX+8]
            mov RBP,QWORD PTR [RBX]
            test RDI,RDI
            je .L_427441

            call _ZdaPv@PLT
.L_427441:

            mov RDI,RBX
            mov ESI,16
            mov RBX,RBP
            call _ZdlPvm@PLT

            test RBP,RBP
            jne .L_427430
.L_427456:

            lea RDI,QWORD PTR [R12+88]
            call .L_427740

            pop RBX
.L_427461:

            lea RDI,QWORD PTR [R12+40]
            pop RBP
            pop R12
            jmp .L_427740
.L_42746e:

            nop
            nop
.L_427470:

            push R13
            push R12
            lea R12,QWORD PTR [RDI+40]
            push RBP
            push RBX
            mov RBX,RDI
            lea R13,QWORD PTR [RBX+88]
            mov RDI,R12
            mov RBP,RSI
            sub RSP,8
.L_42748b:

            call .L_4276e0
.L_427490:

            mov RDI,R13
.L_427493:

            call .L_4276e0
.L_427498:

            mov QWORD PTR [RBX],RBP
            mov EAX,DWORD PTR [RBP+4]
            mov RDI,R12
            mov DWORD PTR [RBX+12],0
            mov BYTE PTR [RBX+16],0
            mov BYTE PTR [RBX+17],0
            mov QWORD PTR [RBX+24],0
            mov DWORD PTR [RBX+8],EAX
            mov QWORD PTR [RBX+32],0
            mov ESI,DWORD PTR [RBP+12]
.L_4274c6:

            call .L_427770

            mov RAX,QWORD PTR [RBX]
            mov RDI,R13
            mov ESI,DWORD PTR [RAX+12]
            call .L_427770

            mov RAX,QWORD PTR [RBX]
            mov EBP,DWORD PTR [RAX+12]
            movabs RAX,576460752303423487
            add EBP,EBP
            mov DWORD PTR [RBX+160],EBP
            movsxd RBP,EBP
            cmp RBP,RAX
            ja .L_42756f

            mov RDI,RBP
            shl RDI,4
            call _Znam@PLT

            xor ECX,ECX
            test RBP,RBP
            mov RDX,RAX
            je .L_427532

            nop
.L_427510:

            add RCX,1
            mov DWORD PTR [RDX],0
            mov DWORD PTR [RDX+4],4294967295
            mov QWORD PTR [RDX+8],0
            add RDX,16
            cmp RCX,RBP
            jne .L_427510
.L_427532:

            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+136],0
            mov RDI,RBX
            mov BYTE PTR [RBX+144],0
            mov QWORD PTR [RBX+168],0
            call .L_4249b0

            mov DWORD PTR [RBX+164],EAX
            add RSP,8
.L_427568:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42756f:

            call __cxa_throw_bad_array_new_length@PLT
.L_427574:

            mov RDI,R13
            mov RBX,RAX
            call .L_427740
.L_42757f:

            mov RDI,R12
            call .L_427740

            mov RDI,RBX
.L_42758a:

            call _Unwind_Resume@PLT
.L_42758f:

            mov RBX,RAX
            jmp .L_42757f
.L_427594:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4275a0:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R14,RSI
            push RBX
.L_4275b0:

            lea RBX,QWORD PTR [RBP-240]
            mov R15,RDX
            mov R12D,ECX
            mov R13,R9
            sub RSP,232
            mov DWORD PTR [RBP-260],R8D
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RSI
            xor ESI,ESI
            mov RSI,RDI
            mov RDI,RBX
.L_4275e3:

            call .L_427470
.L_4275e8:

            cmp DWORD PTR [RBP-260],2
            mov QWORD PTR [RBP-256],0
            mov DWORD PTR [RBP-248],0
            je .L_4276a0

            xor ECX,ECX
            cmp R12D,1
            sete CL
.L_427613:

            mov ESI,DWORD PTR [RBP-260]
            mov EDX,DWORD PTR [RBP+16]
            xor R8D,R8D
            mov R9,R13
            mov RDI,RBX
            test ESI,ESI
            mov RSI,R14
            setne R8B
            sub RSP,8
            push RDX
            mov RDX,R15
.L_427636:

            call .L_424f90
.L_42763b:

            mov R12D,EAX
            test R12B,R12B
            pop RAX
            pop RDX
            je .L_42764e

            cmp DWORD PTR [RBP-260],2
            je .L_427680
.L_42764e:

            mov RDI,RBX
            call .L_4273f0

            mov RCX,QWORD PTR [RBP-56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_4276c3

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_427676:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427680:

            movsxd RDX,DWORD PTR [R14+8]
            movsxd RAX,DWORD PTR [R13+8]
            add RDX,QWORD PTR [R14]
            add RAX,QWORD PTR [R13]
            cmp RDX,RAX
            sete R12B
            jmp .L_42764e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4276a0:

            mov EDI,DWORD PTR [RBP+16]
            mov ECX,1
            test EDI,EDI
            jne .L_427613

            mov DWORD PTR [RBP+16],1
            lea R13,QWORD PTR [RBP-256]
            jmp .L_427613
.L_4276c3:

            call __stack_chk_fail@PLT
.L_4276c8:

            mov R15,RAX
            mov RDI,RBX
            call .L_4273f0

            mov RDI,R15
.L_4276d6:

            call _Unwind_Resume@PLT
.L_4276db:

            nop
            nop
            nop
            nop
            nop
.L_4276e0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],0
            mov QWORD PTR [RDI+32],0
.L_427710:

            call .L_435550
.L_427715:

            test EAX,EAX
            setne BYTE PTR [RBX+40]
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_427722:

            mov RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            test RDI,RDI
            je .L_427733

            call _ZdlPv@PLT
.L_427733:

            mov RDI,RBP
.L_427736:

            call _Unwind_Resume@PLT
.L_42773b:

            nop
            nop
            nop
            nop
            nop
.L_427740:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_427752

            call _ZdaPv@PLT
.L_427752:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_427768

            pop RBX
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427768:

            pop RBX
            ret 
.L_42776a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_427770:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,24
.L_427783:

            cmp DWORD PTR [RDI+4],ESI
            jge .L_427850

            movsxd R13,ESI
            movabs RAX,2305843009213693950
            cmp R13,RAX
            ja .L_427895

            lea RDI,QWORD PTR [R13*4]
            call _Znam@PLT

            mov R14,QWORD PTR [RBX+8]
            mov R15,RAX
            test R14,R14
            je .L_42781f

            movsxd R8,DWORD PTR [RBX+4]
            mov RSI,R14
            mov RDI,RAX
            lea R12,QWORD PTR [R8*4]
            mov DWORD PTR [RSP+4],R8D
            mov QWORD PTR [RSP+8],R8
            mov RDX,R12
            call memmove@PLT

            cmp BYTE PTR [RBX+40],0
            je .L_427817

            mov ECX,DWORD PTR [RSP+4]
            cmp ECX,EBP
            jge .L_427817

            lea EAX,DWORD PTR [RBP-1]
            mov R8,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [R15+R12*1]
            sub EAX,ECX
            add RAX,R8
            lea RAX,QWORD PTR [R15+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
.L_427808:

            mov DWORD PTR [RDX],2880154539
            add RDX,4
            cmp RAX,RDX
            jne .L_427808
.L_427817:

            mov RDI,R14
            call _ZdaPv@PLT
.L_42781f:

            mov RDX,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],R15
            mov RAX,RDX
            sub RAX,RDI
            sar RAX,4
            cmp R13,RAX
            ja .L_427870

            jae .L_427850

            shl R13,4
            add R13,RDI
            mov QWORD PTR [RBX+24],R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427850:

            cmp DWORD PTR [RBX],EBP
            mov DWORD PTR [RBX+4],EBP
            jle .L_427859

            mov DWORD PTR [RBX],EBP
.L_427859:

            add RSP,24
.L_42785d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427870:

            mov RCX,R13
            sub RCX,RAX
            je .L_427850

            mov RSI,QWORD PTR [RBX+32]
            sub RSI,RDX
            sar RSI,4
            cmp RCX,RSI
            ja .L_4278a0

            shl RCX,4
            add RDX,RCX
            mov QWORD PTR [RBX+24],RDX
            jmp .L_427850
.L_427895:

            call __cxa_throw_bad_array_new_length@PLT

            nop
            nop
            nop
            nop
            nop
            nop
.L_4278a0:

            movabs RSI,1152921504606846975
            mov R8,RSI
            sub R8,RAX
            cmp RCX,R8
            ja .L_42794c

            cmp RAX,RCX
            cmovae RCX,RAX
            add RAX,RCX
            jb .L_42793b

            cmp RAX,RSI
            ja .L_42793b

            test RAX,RAX
            je .L_427944

            shl RAX,4
            mov R12,RAX
.L_4278d6:

            mov RDI,R12
            call _Znwm@PLT

            mov RDX,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBX+16]
            mov R14,RAX
            add R12,RAX
.L_4278ec:

            cmp RDI,RDX
            je .L_427919

            mov RSI,R14
            mov RCX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427900:

            test RSI,RSI
            je .L_42790c

            movdqu XMM0,XMMWORD PTR [RCX]
            movups XMMWORD PTR [RSI],XMM0
.L_42790c:

            add RCX,16
            add RSI,16
            cmp RCX,RDX
            jne .L_427900
.L_427919:

            test RDI,RDI
            je .L_427923

            call _ZdlPv@PLT
.L_427923:

            shl R13,4
            mov QWORD PTR [RBX+16],R14
            mov QWORD PTR [RBX+32],R12
            add R14,R13
            mov QWORD PTR [RBX+24],R14
            jmp .L_427850
.L_42793b:

            mov R12,-16
            jmp .L_4278d6
.L_427944:

            xor R12D,R12D
            xor R14D,R14D
            jmp .L_4278ec
.L_42794c:

            lea RDI,QWORD PTR [RIP+.L_435d20]
            call _ZSt20__throw_length_errorPKc@PLT
.L_427958:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427960:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_42796e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_42798c

            test RDX,RDX
            jne .L_427a17
.L_42798c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_4279e0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_427a10

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_4279b4:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_427a23

            add RSP,16
.L_4279d4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4279e0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_4279f9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_4279b4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427a10:

            test RBX,RBX
            je .L_4279b4

            jmp .L_4279f9
.L_427a17:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_427a23:

            call __stack_chk_fail@PLT
.L_427a28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a30:

            cmp DWORD PTR [RDI+4],ESI
            mov EAX,1
            jbe .L_427a77

            mov RDX,QWORD PTR [RDI+8]
            movsxd RAX,ESI
            mov R8D,DWORD PTR [RDI]
            mov R9,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDX+RAX*4]
            mov EAX,DWORD PTR [RCX]
            cmp EAX,R8D
            jae .L_427a65

            movsxd RDX,EAX
            xor EAX,EAX
            cmp ESI,DWORD PTR [R9+RDX*4]
            je .L_427a77

            mov EAX,1
            je .L_427a77
.L_427a65:

            mov DWORD PTR [RCX],R8D
            movsxd RAX,DWORD PTR [RDI]
            mov DWORD PTR [R9+RAX*4],ESI
            add DWORD PTR [RDI],1
            mov EAX,1
.L_427a77:

            ret 
.L_427a79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a80:

            ret 
.L_427a82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,664
.L_427aa1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+648],RAX
            xor EAX,EAX
            cmp ECX,1
            setne CL
            cmp R8D,2
            setne AL
            and CL,AL
            mov BYTE PTR [RSP+54],CL
            jne .L_427dc0

            mov EAX,DWORD PTR [RSP+720]
            mov R13D,2
            lea R15,QWORD PTR [RSP+176]
            add EAX,EAX
            cmp EAX,2
            mov DWORD PTR [RSP+60],EAX
            cmovge R13D,EAX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427af8:

            mov QWORD PTR [R15+RAX*8],0
            add RAX,1
            cmp R13D,EAX
            jg .L_427af8

            lea R14,QWORD PTR [RSP+256]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_427b18:

            mov QWORD PTR [R14+RAX*8],0
            add RAX,1
            cmp R13D,EAX
            jg .L_427b18

            movdqu XMM0,XMMWORD PTR [RDX]
            movq RAX,XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            test RAX,RAX
            je .L_427da0

            cmp BYTE PTR [RDI],0
            mov R12,QWORD PTR [RSI]
            je .L_427b80
.L_427b48:

            cmp QWORD PTR [RSP+96],R12
            je .L_427b80
.L_427b4f:

            mov RDI,QWORD PTR [RSP+648]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+54]
            jne .L_4284e1

            add RSP,664
.L_427b72:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427b80:

            movsxd RAX,DWORD PTR [RSI+8]
            cmp BYTE PTR [RDI+1],0
            lea RSI,QWORD PTR [R12+RAX*1]
            mov QWORD PTR [RSP],RSI
            je .L_427ba7

            movsxd RAX,DWORD PTR [RSP+104]
            add RAX,QWORD PTR [RSP+96]
            cmp RSI,RAX
            jne .L_427b4f

            mov R8D,2
.L_427ba7:

            mov RAX,QWORD PTR [RDI+424]
            cmp QWORD PTR [RSP],R12
            mov RBX,QWORD PTR [RDI+432]
            mov QWORD PTR [RSP+256],R12
            mov QWORD PTR [RSP+176],R12
            mov QWORD PTR [RSP+16],RAX
            mov EAX,DWORD PTR [RDI+28]
            mov DWORD PTR [RSP+92],EAX
            lea RAX,QWORD PTR [RDI+160]
            mov R11D,DWORD PTR [RBX]
            mov QWORD PTR [RSP+8],RAX
            jbe .L_42844e

            lea RAX,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP+56],R13D
            mov QWORD PTR [RSP+40],R14
            mov BYTE PTR [RSP+55],0
            mov EDX,DWORD PTR [RSP+60]
            mov R13D,R11D
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+72],R9
            mov R14,R15
            jmp .L_427c7f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427c18:

            mov EAX,DWORD PTR [RSP+92]
            mov EBX,EBP
            shr EBX,16
            imul EBX,EAX
            movsxd RBX,EBX
            add RBX,QWORD PTR [RSP+16]
            cmp R8D,2
            mov R15D,DWORD PTR [RBX]
            je .L_427c58

            cmp R13D,48
            je .L_427c58

            mov R11D,EBP
            and R11D,64
            jne .L_427ce0

            test R15B,63
            jne .L_427ce0

            nop
            nop
            nop
            nop
            nop
            nop
.L_427c58:

            test EBP,32640
            mov R13D,R15D
            je .L_427c71

            cmp DWORD PTR [RSP+720],1
            jg .L_428010
.L_427c71:

            add R12,1
            cmp R12,QWORD PTR [RSP]
            je .L_428053
.L_427c7f:

            movzx EAX,BYTE PTR [R12]
            mov RSI,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RSI+RAX*1]
            mov EBP,DWORD PTR [RBX+RAX*4+4]
            mov EBX,EBP
            and EBX,63
            je .L_427c18

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R12
            mov DWORD PTR [RSP+48],R8D
            mov DWORD PTR [RSP+28],EDX
.L_427ca9:

            call .L_42fc70

            not EAX
            mov EDX,DWORD PTR [RSP+28]
            mov R8D,DWORD PTR [RSP+48]
            test EAX,EBX
            je .L_427c18

            cmp R8D,2
            je .L_427d30

            cmp R13D,48
            je .L_427d30

            mov R11D,EBP
            mov R15D,48
            xor EBX,EBX
            and R11D,64
            nop
            nop
            nop
            nop
.L_427ce0:

            mov ECX,R13D
            and ECX,63
            je .L_4280f0

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R12
            mov DWORD PTR [RSP+68],R8D
            mov DWORD PTR [RSP+64],EDX
            mov DWORD PTR [RSP+48],ECX
            mov DWORD PTR [RSP+28],R11D
            call .L_42fc70
.L_427d0b:

            mov ECX,DWORD PTR [RSP+48]
            not EAX
            mov R11D,DWORD PTR [RSP+28]
            mov EDX,DWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+68]
            test EAX,ECX
            je .L_4280f0
.L_427d27:

            test RBX,RBX
            jne .L_427c58
.L_427d30:

            mov R9,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+40]
.L_427d3a:

            cmp BYTE PTR [RSP+55],0
            je .L_427b4f
.L_427d45:

            mov EAX,DWORD PTR [RSP+720]
            test EAX,EAX
            jle .L_427d8d

            mov EAX,DWORD PTR [RSP+720]
            lea RDI,QWORD PTR [R14+8]
            lea ESI,DWORD PTR [RAX-1]
            xor EAX,EAX
            add RSI,1
            shl RSI,4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427d70:

            mov RCX,QWORD PTR [R14+RAX*1]
            mov RDX,QWORD PTR [RDI+RAX*1]
            sub RDX,RCX
            mov QWORD PTR [R9+RAX*1],RCX
            mov DWORD PTR [R9+RAX*1+8],EDX
            add RAX,16
            cmp RAX,RSI
            jne .L_427d70
.L_427d8d:

            mov BYTE PTR [RSP+54],1
            jmp .L_427b4f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427da0:

            mov RAX,QWORD PTR [RSI]
            cmp BYTE PTR [RDI],0
            mov R12,QWORD PTR [RSI]
            mov QWORD PTR [RSP+96],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RSP+104],EAX
            je .L_427b80

            jmp .L_427b48
.L_427dc0:

            lea R14,QWORD PTR [RSP+256]
            mov BYTE PTR [RSP+256],0
            lea RBP,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R14+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+600],0
            xor ESI,ESI
            mov QWORD PTR [RSP+376],RBP
            mov QWORD PTR [RSP+592],0
            mov BYTE PTR [RSP+601],0
            mov QWORD PTR [RSP+608],0
            mov RAX,QWORD PTR [RBX-24]
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+624],0
            mov QWORD PTR [RSP+632],0
            mov QWORD PTR [RSP+264],RBX
            lea RDI,QWORD PTR [R14+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_427e58:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_427e5d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R14+72]
            lea R12,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+288],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],RAX
            add RAX,40
            mov QWORD PTR [RSP+272],R12
            mov QWORD PTR [RSP+376],RAX
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [R14+104]
            lea RSI,QWORD PTR [R14+16]
            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+272],R13
            mov DWORD PTR [RSP+336],16
            mov QWORD PTR [RSP+344],RAX
            mov QWORD PTR [RSP+352],0
            mov BYTE PTR [RSP+360],0
.L_427f1a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_427f1f:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_4363f1]
            mov EDX,14
.L_427f2f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R14+8]
            mov ESI,212
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_427f6b:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_4363c0]
            mov EDX,48
.L_427f7b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_427f80:

            cmp BYTE PTR [RSP+256],0
            je .L_428190
.L_427f8e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+344]
            mov QWORD PTR [RSP+272],R13
            mov QWORD PTR [RSP+264],RAX
            add RAX,40
            mov QWORD PTR [RSP+376],RAX
            lea RAX,QWORD PTR [R14+104]
            cmp RDI,RAX
            je .L_427fc7

            call _ZdlPv@PLT
.L_427fc7:

            lea RDI,QWORD PTR [R14+72]
            mov QWORD PTR [RSP+272],R12
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBX-24]
            mov RDI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],RBX
            mov QWORD PTR [RSP+RAX*1+264],RDI
            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+376],RBP
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RSP+54],0
            jmp .L_427b4f
          .byte 0x66
          .byte 0x90
.L_428010:

            cmp EDX,2
            jle .L_427c71

            mov R9D,DWORD PTR [RSP+56]
            mov ECX,2
            mov ESI,32
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428030:

            mov EAX,ESI
            shl EAX,CL
            test EAX,EBP
            je .L_42803c

            mov QWORD PTR [R14+RCX*8],R12
.L_42803c:

            add RCX,1
            cmp R9D,ECX
            jg .L_428030

            add R12,1
            cmp R12,QWORD PTR [RSP]
            jne .L_427c7f
.L_428053:

            mov EBX,DWORD PTR [RBX]
            mov R15,R14
            mov R13D,DWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+40]
            cmp EBX,48
            je .L_427d3a
.L_428070:

            mov EBP,EBX
            and EBP,63
            jne .L_428409
.L_42807b:

            cmp DWORD PTR [RSP+720],1
            jle .L_428180

            test EBX,32640
            je .L_428180

            cmp DWORD PTR [RSP+60],2
            jle .L_4280e1

            mov ECX,2
            mov EDX,32
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4280b0:

            mov EAX,EDX
            shl EAX,CL
            test EAX,EBX
            je .L_4280bc

            mov QWORD PTR [R15+RCX*8],R12
.L_4280bc:

            add RCX,1
            cmp R13D,ECX
            jg .L_4280b0
.L_4280c5:

            mov EAX,2
            nop
            nop
            nop
            nop
            nop
            nop
.L_4280d0:

            mov RDX,QWORD PTR [R15+RAX*8]
            mov QWORD PTR [R14+RAX*8],RDX
            add RAX,1
            cmp R13D,EAX
            jg .L_4280d0
.L_4280e1:

            mov QWORD PTR [RSP+264],R12
            jmp .L_427d45
          .byte 0x66
          .byte 0x90
.L_4280f0:

            cmp EDX,2
            jle .L_428110

            mov R10,QWORD PTR [RSP+40]
            mov EAX,2
            nop
.L_428100:

            mov RCX,QWORD PTR [R14+RAX*8]
            mov QWORD PTR [R10+RAX*8],RCX
            add RAX,1
            cmp EDX,EAX
            jg .L_428100
.L_428110:

            cmp DWORD PTR [RSP+720],1
            jle .L_428123

            test R13D,32640
            jne .L_428148
.L_428123:

            test R8D,R8D
            mov QWORD PTR [RSP+264],R12
            jne .L_428139

            test R11D,R11D
            jne .L_42843f
.L_428139:

            mov BYTE PTR [RSP+55],1
            jmp .L_427d27
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428148:

            cmp EDX,2
            jle .L_428123

            mov R9D,DWORD PTR [RSP+56]
            mov R10,QWORD PTR [RSP+40]
            mov ECX,2
            mov ESI,32
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428168:

            mov EAX,ESI
            shl EAX,CL
            test EAX,R13D
            je .L_428175

            mov QWORD PTR [R10+RCX*8],R12
.L_428175:

            add RCX,1
            cmp R9D,ECX
            jg .L_428168

            jmp .L_428123
.L_428180:

            cmp DWORD PTR [RSP+60],2
            jg .L_4280c5

            jmp .L_4280e1
.L_428190:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RSP+128],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+112],RAX
            mov RAX,QWORD PTR [RSP+312]
            test RAX,RAX
            je .L_42842d

            mov RDX,QWORD PTR [RSP+296]
            mov RSI,QWORD PTR [RSP+304]
            cmp RAX,RDX
            jbe .L_4282b0

            lea R15,QWORD PTR [RSP+176]
            lea RDX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+176],RDX
            mov RDX,RAX
.L_428210:

            call .L_427960

            mov RSI,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+112]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RAX
            je .L_4283d2

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+192]
            add RCX,16
            cmp RDI,RCX
            je .L_428463

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+120],RDX
            mov QWORD PTR [RSP+128],RAX
            je .L_428475

            mov QWORD PTR [RSP+176],RDI
            mov QWORD PTR [RSP+192],RCX
.L_428283:

            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RDI],0
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,RAX
            jne .L_42835a

            jmp .L_42835f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4282b0:

            lea R15,QWORD PTR [RSP+144]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+144],RAX
            call .L_427960
.L_4282cc:

            mov RSI,QWORD PTR [RSP+144]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+112]
            mov RDX,QWORD PTR [RSP+152]
            cmp RSI,RAX
            je .L_42839b

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+160]
            add RCX,16
            cmp RDI,RCX
            je .L_428486

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+120],RDX
            mov QWORD PTR [RSP+128],RAX
            je .L_428498

            mov QWORD PTR [RSP+144],RDI
            mov QWORD PTR [RSP+160],RCX
.L_42833a:

            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RDI],0
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+144]
            cmp RDI,RAX
            je .L_42835f
.L_42835a:

            call _ZdlPv@PLT
.L_42835f:

            movsxd RDX,DWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            mov EDI,2
.L_42836e:

            call write@PLT
.L_428373:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+256],1
            add RAX,16
            cmp RDI,RAX
            je .L_427f8e

            call _ZdlPv@PLT

            jmp .L_427f8e
.L_42839b:

            test RDX,RDX
            je .L_4283bc

            cmp RDX,1
            je .L_4284a9

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+112]
.L_4283bc:

            mov QWORD PTR [RSP+120],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_42833a
.L_4283d2:

            test RDX,RDX
            je .L_4283f3

            cmp RDX,1
            je .L_4284c5

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+184]
            mov RDI,QWORD PTR [RSP+112]
.L_4283f3:

            mov QWORD PTR [RSP+120],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+176]
            jmp .L_428283
.L_428409:

            lea RDI,QWORD PTR [RSP+96]
            mov RSI,R12
            mov QWORD PTR [RSP],R9
.L_428415:

            call .L_42fc70
.L_42841a:

            not EAX
            mov R9,QWORD PTR [RSP]
            test EAX,EBP
            jne .L_427d3a

            jmp .L_42807b
.L_42842d:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [R14+88]
.L_428435:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42843a:

            jmp .L_42835f
.L_42843f:

            mov R9,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+40]
            jmp .L_427d45
.L_42844e:

            mov EBX,DWORD PTR [RBX]
            mov BYTE PTR [RSP+55],0
            cmp EBX,48
            jne .L_428070

            jmp .L_427b4f
.L_428463:

            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+120],RDX
            mov QWORD PTR [RSP+128],RAX
.L_428475:

            lea RDI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+176],RDI
            jmp .L_428283
.L_428486:

            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+120],RDX
            mov QWORD PTR [RSP+128],RAX
.L_428498:

            lea RDI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+144],RDI
            jmp .L_42833a
.L_4284a9:

            movzx EAX,BYTE PTR [RSP+160]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_4283bc
.L_4284c5:

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+184]
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_4283f3
.L_4284e1:

            call __stack_chk_fail@PLT
.L_4284e6:

            mov RDI,QWORD PTR [RSP+344]
            mov R15,RAX
            lea RAX,QWORD PTR [R14+104]
            mov QWORD PTR [RSP+272],R13
            cmp RDI,RAX
            je .L_428507

            call _ZdlPv@PLT
.L_428507:

            lea RDI,QWORD PTR [R14+72]
            mov QWORD PTR [RSP+272],R12
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBX-24]
            mov RDI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],RBX
            mov RBX,R15
            mov QWORD PTR [RSP+RAX*1+264],RDI
.L_428536:

            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+376],RBP
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_42854a:

            call _Unwind_Resume@PLT
.L_42854f:

            lea RDI,QWORD PTR [R14+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_428563:

            mov RBX,RAX
            jmp .L_428536
.L_428568:

            mov RBX,RAX
            mov RDI,R14
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42857b:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_428592

            call _ZdlPv@PLT
.L_428592:

            call _ZSt9terminatev@PLT
.L_428597:

            jmp .L_42857b
.L_428599:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4285a0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_4285b4:

            movzx R12D,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test R12B,R12B
            jne .L_428870

            mov EDX,DWORD PTR [RDI+4]
            mov BYTE PTR [RDI+3],1
            test EDX,EDX
            je .L_42887c

            mov EAX,DWORD PTR [RDI+16]
            lea EBX,DWORD PTR [RAX+2]
            cmp EBX,64999
            mov DWORD PTR [RSP+12],EBX
            mov R14D,EBX
            jg .L_42887c

            mov RDX,QWORD PTR [R15+112]
            mov EAX,DWORD PTR [RDI+20]
            lea EDI,DWORD PTR [RAX*4+4]
            lea RAX,QWORD PTR [RDX+3]
            test RDX,RDX
            cmovns RAX,RDX
            movsxd RCX,EDI
            mov DWORD PTR [RSP+8],EDI
            sar RAX,2
            cqo 
            idiv RCX
            movsxd RDX,EBX
            cmp RAX,RDX
            jl .L_42887c

            movsxd RBX,DWORD PTR [R15+12]
            movabs RAX,1152921504606846975
            cmp RBX,RAX
            mov RBP,RBX
            ja .L_428c69

            lea RDI,QWORD PTR [RBX*8]
            shl RBX,2
.L_428658:

            call _Znam@PLT

            mov RDI,RBX
            mov R13,RAX
            call _Znam@PLT

            mov RDX,RBX
            mov ESI,255
            mov RDI,RAX
            mov QWORD PTR [RSP],RAX
            call memset@PLT

            mov EDI,DWORD PTR [RSP+8]
            imul EDI,R14D
            movsxd RDI,EDI
            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+24],RAX
            mov DWORD PTR [RSP+68],EBP
            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+72],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+80],RAX
            call .L_435550
.L_4286b4:

            test EAX,EAX
            setne BYTE PTR [RSP+88]
            je .L_4286f7

            test EBP,EBP
            jle .L_4286f7

            lea EAX,DWORD PTR [RBP-1]
            mov RSI,QWORD PTR [RSP+80]
            mov RCX,QWORD PTR [RSP+72]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4286e0:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_4286e0
.L_4286f7:

            mov RDI,RBX
            mov DWORD PTR [RSP+64],0
            mov DWORD PTR [RSP+100],EBP
.L_428706:

            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+104],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+112],RAX
            call .L_435550
.L_428722:

            test EAX,EAX
            setne BYTE PTR [RSP+120]
            je .L_428767

            test EBP,EBP
            jle .L_428767

            lea EAX,DWORD PTR [RBP-1]
            mov RSI,QWORD PTR [RSP+112]
            mov RCX,QWORD PTR [RSP+104]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428750:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RAX,RDX
            jne .L_428750
.L_428767:

            movsxd RSI,DWORD PTR [R15+4]
            mov DWORD PTR [RSP+96],0
            test ESI,ESI
            jne .L_428ba8
.L_42877b:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RAX+RSI*4],0
            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+32],RAX
            movsxd RAX,DWORD PTR [RSP+64]
            shl RAX,2
            test RAX,RAX
            je .L_428c5e

            lea RAX,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP+40],1
            mov BYTE PTR [RSP+47],R12B
            mov QWORD PTR [RSP+16],RAX
.L_4287b9:

            mov RAX,QWORD PTR [RSP+32]
            mov EBP,DWORD PTR [RSP+8]
            movsxd RCX,DWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP]
            imul EBP,DWORD PTR [RAX+RCX*4]
            mov EAX,DWORD PTR [R15+20]
            mov RSI,RCX
            movsxd RBP,EBP
            add RBP,QWORD PTR [RSP+24]
            test EAX,EAX
            jle .L_4287fc

            mov EAX,1
            nop
            nop
            nop
.L_4287e8:

            mov DWORD PTR [RBP+RAX*4],48
            mov EDX,EAX
            add RAX,1
            cmp DWORD PTR [R15+20],EDX
            jg .L_4287e8
.L_4287fc:

            mov DWORD PTR [RBP],48
            lea RBX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [R15+32]
            mov DWORD PTR [RSP+96],0
            mov DWORD PTR [R13],ESI
            xor R10D,R10D
            mov DWORD PTR [R13+4],0
            mov BYTE PTR [RSP+46],0
            mov R14D,1
            xor R11D,R11D
            mov QWORD PTR [RSP+48],RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428840:

            lea RBX,QWORD PTR [RAX+RCX*8]
            movsxd RDX,R11D
            shl RDX,3
            mov ESI,DWORD PTR [RBX]
            lea R12,QWORD PTR [R13+RDX*1]
            mov ECX,ESI
            and ECX,7
            cmp ECX,6
            ja .L_428904

            lea RDI,QWORD PTR [RIP+.L_436400]
            movsxd RCX,DWORD PTR [RDI+RCX*4]
            add RCX,RDI
            jmp RCX
.L_428870:

            cmp QWORD PTR [RDI+432],0
            setne R12B
.L_42887c:

            mov RBX,QWORD PTR [RSP+136]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_428c64

            add RSP,152
.L_42889d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4288b0:

            mov ECX,DWORD PTR [RBX+4]
            cmp ECX,9
            jg .L_4288c2

            mov EDX,32
            shl EDX,CL
            or R10D,EDX
.L_4288c2:

            shr ESI,3
            xor EDX,EDX
            test ESI,ESI
            jne .L_42892d
.L_4288cb:

            mov DWORD PTR [R12],EDX
            mov DWORD PTR [R12+4],R10D
.L_4288d4:

            movsxd RDX,R11D
            lea RDX,QWORD PTR [R13+RDX*8]
            mov R10D,DWORD PTR [RDX+4]
            movsxd RCX,DWORD PTR [RDX]
            jmp .L_428840
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4288f0:

            cmp BYTE PTR [RSP+46],0
            jne .L_428ac8

            mov DWORD PTR [RBP],R10D
            mov BYTE PTR [RSP+46],1
.L_428904:

            test R11D,R11D
            je .L_428bc0

            mov R14D,R11D
            mov RAX,QWORD PTR [R15+32]
            sub R11D,1
            jmp .L_4288d4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428920:

            shr ESI,3
            or R10D,DWORD PTR [RBX+4]
            xor EDX,EDX
            test ESI,ESI
            je .L_4288cb
.L_42892d:

            mov RDI,QWORD PTR [RSP+16]
            call .L_427a30

            test AL,AL
            je .L_428ac8

            mov EDX,DWORD PTR [RBX]
            mov RAX,QWORD PTR [R15+32]
            shr EDX,3
            jmp .L_4288cb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428950:

            mov RAX,QWORD PTR [RSP]
            shr ESI,3
            lea RAX,QWORD PTR [RAX+RSI*4]
            mov R14D,DWORD PTR [RAX]
            cmp R14D,-1
            je .L_428b30
.L_428968:

            mov EAX,R10D
            movzx EDI,BYTE PTR [RBX+4]
            movzx R8D,BYTE PTR [RBX+5]
            or EAX,64
            cmp BYTE PTR [RSP+46],0
            cmovne R10D,EAX
            cmp R8D,EDI
            jl .L_428a20

            mov R9D,R14D
            mov EAX,EDI
            mov R12,QWORD PTR [R15+416]
            shl R9D,16
            or R9D,R10D
            jmp .L_4289b1

            nop
            nop
.L_4289a0:

            cmp EDX,R9D
            jne .L_428ac8
.L_4289a9:

            add EAX,1
            cmp R8D,EAX
            jl .L_428a20
.L_4289b1:

            cdqe 
            movzx EDX,BYTE PTR [R15+RAX*1+160]
            lea RCX,QWORD PTR [RBP+RDX*4]
            movzx EAX,BYTE PTR [R12+RDX*1]
            mov EDX,DWORD PTR [RCX+4]
            mov ESI,EDX
            and ESI,48
            cmp ESI,48
            jne .L_4289a0

            mov DWORD PTR [RCX+4],R9D
            jmp .L_4289a9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4289e0:

            shr ESI,3
            test ESI,ESI
            jne .L_428aa8
.L_4289eb:

            mov ESI,DWORD PTR [RBX+4]
            test ESI,ESI
            jne .L_428b60
.L_4289f6:

            mov DWORD PTR [R12],ESI
            mov DWORD PTR [R12+4],R10D
            lea RDX,QWORD PTR [R13+RDX*1+8]
            mov EAX,DWORD PTR [RBX]
            add R14D,1
            mov DWORD PTR [RDX+4],R10D
            lea R11D,DWORD PTR [R14-1]
            shr EAX,3
            mov DWORD PTR [RDX],EAX
            mov RAX,QWORD PTR [R15+32]
            jmp .L_4288d4
.L_428a20:

            cmp BYTE PTR [RBX+6],0
            je .L_428904

            cmp EDI,97
            mov EAX,97
            cmovl EDI,EAX
            mov EAX,122
            sub EDI,32
            cmp R8D,122
            cmovg R8D,EAX
            sub R8D,32
            cmp EDI,R8D
            jg .L_428904

            shl R14D,16
            mov R12,QWORD PTR [R15+416]
            or R10D,R14D
            jmp .L_428a79
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428a68:

            cmp EAX,R10D
            jne .L_428ac8
.L_428a6d:

            add EDI,1
            cmp R8D,EDI
            jl .L_428904
.L_428a79:

            movsxd RDI,EDI
            movzx EAX,BYTE PTR [R15+RDI*1+160]
            lea RDX,QWORD PTR [RBP+RAX*4]
            movzx EDI,BYTE PTR [R12+RAX*1]
            mov EAX,DWORD PTR [RDX+4]
            mov ECX,EAX
            and ECX,48
            cmp ECX,48
            jne .L_428a68

            mov DWORD PTR [RDX+4],R10D
            jmp .L_428a6d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428aa8:

            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+56],RDX
            call .L_427a30

            test AL,AL
            mov RDX,QWORD PTR [RSP+56]
            jne .L_4289eb

            nop
            nop
            nop
            nop
.L_428ac8:

            mov RDI,R13
            movzx R12D,BYTE PTR [RSP+47]
            call _ZdaPv@PLT

            mov RDI,QWORD PTR [RSP]
            call _ZdaPv@PLT

            mov RDI,QWORD PTR [RSP+24]
            call _ZdaPv@PLT
.L_428ae9:

            mov RDI,QWORD PTR [RSP+104]
            test RDI,RDI
            je .L_428af8

            call _ZdaPv@PLT
.L_428af8:

            mov RDI,QWORD PTR [RSP+112]
            test RDI,RDI
            je .L_428b07

            call _ZdaPv@PLT
.L_428b07:

            mov RDI,QWORD PTR [RSP+72]
            test RDI,RDI
            je .L_428b16

            call _ZdaPv@PLT
.L_428b16:

            mov RDI,QWORD PTR [RSP+80]
            test RDI,RDI
            je .L_42887c

            call _ZdaPv@PLT

            jmp .L_42887c
          .byte 0x66
          .byte 0x90
.L_428b30:

            mov ESI,DWORD PTR [RSP+40]
            cmp DWORD PTR [RSP+12],ESI
            jle .L_428ac8

            mov DWORD PTR [RAX],ESI
            lea R12D,DWORD PTR [RSI+1]
            mov ESI,DWORD PTR [RBX]
            shr ESI,3
            test ESI,ESI
            jne .L_428b88

            mov R14D,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+40],R12D
            jmp .L_428968
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428b60:

            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+56],RDX
            call .L_427a30

            test AL,AL
            je .L_428ac8

            mov ESI,DWORD PTR [RBX+4]
            mov RDX,QWORD PTR [RSP+56]
            jmp .L_4289f6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428b88:

            mov RDI,QWORD PTR [RSP+48]
            call .L_427a30

            mov R14D,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+40],R12D
            jmp .L_428968
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428ba8:

            lea RDI,QWORD PTR [RSP+64]
            call .L_427a30

            movsxd RSI,DWORD PTR [R15+4]
            jmp .L_42877b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428bc0:

            movsxd RDX,DWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            add QWORD PTR [RSP+32],4
            mov RBX,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [RAX+RDX*4]
            cmp RBX,RAX
            jne .L_4287b9

            mov EBX,DWORD PTR [RSP+40]
            imul EBX,DWORD PTR [RSP+8]
.L_428beb:

            movsxd RBX,EBX
            mov RDI,RBX
.L_428bf1:

            call _Znam@PLT
.L_428bf6:

            mov R14,QWORD PTR [RSP+24]
            mov RDX,RBX
            mov RDI,RAX
            mov RBP,RAX
            mov R12D,1
            mov RSI,R14
            call memcpy@PLT

            mov RDI,R14
            call _ZdaPv@PLT

            movsxd RAX,DWORD PTR [R15+4]
            mov R14,QWORD PTR [RSP]
            mov RDI,R13
            mov ESI,DWORD PTR [RSP+8]
            mov ECX,DWORD PTR [R14+RAX*4]
            sub QWORD PTR [R15+112],RBX
            mov DWORD PTR [R15+28],ESI
            mov QWORD PTR [R15+424],RBP
            imul ECX,ESI
            movsxd RAX,ECX
            add RAX,RBP
            mov QWORD PTR [R15+432],RAX
            call _ZdaPv@PLT

            mov RDI,R14
            call _ZdaPv@PLT

            jmp .L_428ae9
.L_428c5e:

            mov EBX,DWORD PTR [RSP+8]
            jmp .L_428beb
.L_428c64:

            call __stack_chk_fail@PLT
.L_428c69:

            call __cxa_throw_bad_array_new_length@PLT
.L_428c6e:

            mov RBX,RAX
.L_428c71:

            lea RDI,QWORD PTR [RSP+64]
            call .L_428ca0

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_428c83:

            lea RDI,QWORD PTR [RSP+96]
            mov RBX,RAX
            call .L_428ca0

            jmp .L_428c71
.L_428c92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428ca0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_428cb2

            call _ZdaPv@PLT
.L_428cb2:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_428cc8

            pop RBX
            jmp _ZdaPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428cc8:

            pop RBX
            ret 
.L_428cca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_428cd0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,32
.L_428cdc:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test EDX,EDX
            jle .L_428d68

            lea EAX,DWORD PTR [RDX-1]
            mov R12,RDI
            mov RBX,RSI
            mov R13,RSP
            lea RAX,QWORD PTR [RAX+RAX*2]
            shl RAX,4
            lea R14,QWORD PTR [RSI+RAX*1+48]
            jmp .L_428d19
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428d10:

            add RBX,48
            cmp RBX,R14
            je .L_428d68
.L_428d19:

            mov RDI,QWORD PTR [RBX]
            xor EAX,EAX
            mov RBP,RBX
            test RDI,RDI
            mov QWORD PTR [RSP],RDI
            je .L_428d2f

            call strlen@PLT
.L_428d2f:

            mov RSI,R12
            mov RDI,R13
            mov DWORD PTR [RSP+8],EAX
            call .L_4143c0

            test AL,AL
            je .L_428d10
.L_428d42:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_428d6c

            add RSP,32
.L_428d59:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428d68:

            xor EBP,EBP
            jmp .L_428d42
.L_428d6c:

            call __stack_chk_fail@PLT
.L_428d71:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428d80:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RBX,RSI
            mov ESI,DWORD PTR [RSI+8]
            mov RDI,QWORD PTR [RBX]
            mov R12,RDX
            call .L_414230

            test EAX,EAX
            je .L_428dd0

            mov RSI,QWORD PTR [RBX]
            mov RDI,RBP
            call .L_414030

            cmp EAX,1
            je .L_428dc0
.L_428dac:

            movsxd RDX,EAX
            sub DWORD PTR [RBX+8],EAX
            add QWORD PTR [RBX],RDX
.L_428db5:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428dc0:

            cmp DWORD PTR [RBP],65533
            jne .L_428dac

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428dd0:

            mov DWORD PTR [R12],12
            mov QWORD PTR [R12+8],0
            mov EAX,4294967295
            mov DWORD PTR [R12+16],0
            jmp .L_428db5
.L_428df1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428e00:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            sub RSP,48
.L_428e0b:

            movdqu XMM0,XMMWORD PTR [RDI]
            lea RBP,QWORD PTR [RSP+16]
            lea RBX,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            jmp .L_428e42
.L_428e30:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_428d80

            test EAX,EAX
            js .L_428e70
.L_428e42:

            mov EAX,DWORD PTR [RSP+24]
            test EAX,EAX
            jg .L_428e30

            mov EAX,1
.L_428e4f:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_428e74

            add RSP,48
.L_428e63:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428e70:

            xor EAX,EAX
            jmp .L_428e4f
.L_428e74:

            call __stack_chk_fail@PLT
.L_428e79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428e80:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov EDX,ESI
            mov EBX,ESI
            mov RBP,RDI
            call .L_40e780

            lea EAX,DWORD PTR [RBX-97]
            cmp EAX,25
            ja .L_428ea0

            test R12B,R12B
            jne .L_428ea8
.L_428ea0:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428ea8:

            lea ESI,DWORD PTR [RBX-32]
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            mov EDX,ESI
            jmp .L_40e780
.L_428eb9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428ec0:

            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            je .L_428f40

            mov RDX,QWORD PTR [RDI]
            movzx R8D,BYTE PTR [RDX]
            lea R9D,DWORD PTR [R8-48]
            cmp R9D,9
            ja .L_428f40

            cmp EAX,1
            jle .L_428ef0

            cmp R8B,48
            jne .L_428ef0

            movzx ECX,BYTE PTR [RDX+1]
            sub ECX,48
            cmp ECX,9
            jbe .L_428f40

            nop
.L_428ef0:

            test EAX,EAX
            jle .L_428f48

            lea ECX,DWORD PTR [R8-48]
            cmp ECX,9
            ja .L_428f48

            add RDX,1
            xor ECX,ECX
            jmp .L_428f22
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428f08:

            movzx R8D,BYTE PTR [RDX]
            lea R9D,DWORD PTR [R8-48]
            cmp R9D,9
            ja .L_428f37

            add RDX,1
            cmp ECX,99999999
            jg .L_428f40
.L_428f22:

            sub EAX,1
            lea ECX,DWORD PTR [RCX+RCX*4]
            mov QWORD PTR [RDI],RDX
            test EAX,EAX
            mov DWORD PTR [RDI+8],EAX
            lea ECX,DWORD PTR [R8+RCX*2-48]
            jne .L_428f08
.L_428f37:

            mov DWORD PTR [RSI],ECX
            mov EAX,1
            ret 
          .byte 0x90
.L_428f40:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428f48:

            xor ECX,ECX
            jmp .L_428f37
.L_428f4c:

            nop
            nop
            nop
            nop
.L_428f50:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_428f5e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_428f7c

            test RDX,RDX
            jne .L_429007
.L_428f7c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_428fd0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_429000

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_428fa4:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_429013

            add RSP,16
.L_428fc4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428fd0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_428fe9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_428fa4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429000:

            test RBX,RBX
            je .L_428fa4

            jmp .L_428fe9
.L_429007:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_429013:

            call __stack_chk_fail@PLT
.L_429018:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429020:

            mov DWORD PTR [RDI],ESI
            and ESI,32
            cmp ESI,1
            movdqu XMM0,XMMWORD PTR [RDX]
            sbb EAX,EAX
            mov QWORD PTR [RDI+24],RCX
            mov QWORD PTR [RDI+32],0
            and EAX,1113856
            mov DWORD PTR [RDI+40],0
            add EAX,255
            movups XMMWORD PTR [RDI+8],XMM0
            mov DWORD PTR [RDI+44],EAX
            ret 
.L_429053:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429060:

            push R12
            push RBP
            push RBX
.L_429064:

            mov RBX,QWORD PTR [RDI+32]
            test RBX,RBX
            jne .L_429080

            jmp .L_4290ca
          .byte 0x90
.L_429070:

            mov RDI,RBX
            mov RBX,RBP
            call .L_40f010

            test RBP,RBP
            je .L_4290ca
.L_429080:

            cmp BYTE PTR [RBX],22
            mov RBP,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+16],0
            jne .L_429070

            mov R12,QWORD PTR [RBX+32]
            test R12,R12
            je .L_429070

            mov RDI,QWORD PTR [R12]
            lea RAX,QWORD PTR [R12+16]
            cmp RDI,RAX
            je .L_4290ad

            call _ZdlPv@PLT
.L_4290ad:

            mov ESI,32
            mov RDI,R12
            call _ZdlPvm@PLT

            mov RDI,RBX
            mov RBX,RBP
            call .L_40f010

            test RBP,RBP
            jne .L_429080
.L_4290ca:

            pop RBX
.L_4290cb:

            pop RBP
            pop R12
            ret 
.L_4290cf:

            nop
.L_4290d0:

            mov R11D,ESI
            mov RAX,RDI
            test R11D,R11D
            jle .L_42911e
.L_4290db:

            mov R8D,R11D
            sar R8D,1
            movsxd RCX,R8D
            lea R9,QWORD PTR [RCX+RCX*2]
            lea R9,QWORD PTR [RAX+R9*4]
            cmp EDX,DWORD PTR [R9]
            jl .L_429140

            mov R10D,R8D
            mov R8D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429100:

            cmp DWORD PTR [R9+4],EDX
            jge .L_429168

            add R10D,1
            mov R11D,R8D
            lea RCX,QWORD PTR [RCX+RCX*2+3]
            sub R11D,R10D
            test R11D,R11D
            lea RAX,QWORD PTR [RAX+RCX*4]
            jg .L_4290db
.L_42911e:

            movsxd RSI,ESI
            lea RDX,QWORD PTR [RSI+RSI*2]
            lea RDX,QWORD PTR [RDI+RDX*4]
            cmp RAX,RDX
            mov EDX,0
            cmovae RAX,RDX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429140:

            test R8D,R8D
            je .L_42911e
.L_429145:

            mov R10D,R8D
            sar R10D,1
            movsxd RCX,R10D
            lea R9,QWORD PTR [RCX+RCX*2]
            lea R9,QWORD PTR [RAX+R9*4]
            cmp DWORD PTR [R9],EDX
            jle .L_429100

            mov R8D,R10D
            test R8D,R8D
            jne .L_429145

            jmp .L_42911e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429168:

            mov RAX,R9
            ret 
.L_42916c:

            nop
            nop
            nop
            nop
.L_429170:

            mov EAX,DWORD PTR [RDI+8]
            cmp EAX,1
            je .L_4291bb

            jle .L_4291d0

            cmp EAX,1073741824
            je .L_4291b0

            cmp EAX,1073741825
            jne .L_4291d5

            mov EDX,ESI
            sub EDX,DWORD PTR [RDI]
            mov EAX,ESI
            and EDX,1
            jne .L_4291c8
.L_429193:

            mov EDX,ESI
            shr EDX,31
            lea EAX,DWORD PTR [RSI+RDX*1]
            and EAX,1
            sub EAX,EDX
            cmp EAX,1
            je .L_4291c1
.L_4291a5:

            lea EAX,DWORD PTR [RSI-1]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4291b0:

            mov EDX,ESI
            sub EDX,DWORD PTR [RDI]
            mov EAX,ESI
            and EDX,1
            jne .L_4291c8
.L_4291bb:

            test SIL,1
            jne .L_4291a5
.L_4291c1:

            lea EAX,DWORD PTR [RSI+1]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4291c8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4291d0:

            cmp EAX,-1
            je .L_429193
.L_4291d5:

            add EAX,ESI
            ret 
.L_4291d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4291e0:

            mov ESI,DWORD PTR [RIP+.L_4374f4]
            push RBX
            mov EDX,EDI
            mov EBX,EDI
            lea RDI,QWORD PTR [RIP+.L_437500]
            call .L_4290d0

            test RAX,RAX
            je .L_429210

            cmp DWORD PTR [RAX],EBX
            jg .L_429210

            mov ESI,EBX
            mov RDI,RAX
            pop RBX
            jmp .L_429170
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429210:

            mov EAX,EBX
            pop RBX
            ret 
.L_429214:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429220:

            cmp ESI,21
            setg AL
            ret 
.L_429227:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429230:

            movzx EDX,BYTE PTR [RDI]
            mov RAX,RDI
            cmp EDX,2
            je .L_429268

            cmp EDX,5
            je .L_429248
.L_429240:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429248:

            cmp WORD PTR [RDI+6],1
            jbe .L_429240

            mov RAX,QWORD PTR [RDI+8]
            mov EDX,0
            mov RAX,QWORD PTR [RAX]
            cmp BYTE PTR [RAX],2
            cmove RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429268:

            xor EAX,EAX
            ret 
.L_42926b:

            nop
            nop
            nop
            nop
            nop
.L_429270:

            push R12
            push RBP
            push RBX
.L_429274:

            movzx EAX,BYTE PTR [RDI]
            cmp EAX,2
            je .L_429318

            cmp EAX,5
            mov RBX,RDI
            jne .L_4292e0

            cmp WORD PTR [RDI+6],1
            jbe .L_4292e0

            mov R12,QWORD PTR [RDI+8]
            mov RBP,RBX
            mov RDI,QWORD PTR [R12]
            cmp BYTE PTR [RDI],2
            je .L_42930a
.L_42929f:

            call .L_40f010

            movzx EAX,WORD PTR [RBX+6]
            mov QWORD PTR [R12],0
            cmp AX,2
            je .L_429328

            sub EAX,1
            lea RSI,QWORD PTR [R12+8]
            mov RDI,R12
            mov WORD PTR [RBX+6],AX
            movzx EAX,AX
            lea RDX,QWORD PTR [RAX*8]
            call memmove@PLT

            jmp .L_42930a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4292e0:

            movzx R12D,WORD PTR [RBX+2]
            mov RDI,RBX
            call .L_40f010

            mov EDI,40
            call _Znwm@PLT
.L_4292f7:

            mov EDX,R12D
            mov ESI,2
            mov RDI,RAX
            mov RBP,RAX
.L_429305:

            call .L_40c5b0
.L_42930a:

            mov RAX,RBP
            pop RBX
.L_42930e:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429318:

            mov RBP,RDI
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429328:

            mov RBP,QWORD PTR [R12+8]
            mov RDI,RBX
            mov QWORD PTR [R12+8],0
.L_429339:

            call .L_40f010

            jmp .L_42930a
.L_429340:

            mov RBX,RAX
            mov RDI,RBP
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_429358:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429360:

            cmp BYTE PTR [RDI],5
            jne .L_429380
.L_429365:

            movzx EAX,WORD PTR [RDI+6]
            test AX,AX
            je .L_429380

            cmp AX,1
            mov RDI,QWORD PTR [RDI+8]
            jbe .L_429360

            mov RDI,QWORD PTR [RDI]
            cmp BYTE PTR [RDI],5
            je .L_429365
.L_429380:

            movzx EAX,WORD PTR [RDI+2]
            and EAX,1
            mov DWORD PTR [RDX],EAX
            movzx EAX,BYTE PTR [RDI]
            cmp EAX,3
            je .L_4293a0

            cmp EAX,4
            jne .L_4293b0

            mov EAX,DWORD PTR [RDI+24]
            mov DWORD PTR [RSI],EAX
            mov RAX,QWORD PTR [RDI+32]
            ret 
.L_4293a0:

            mov DWORD PTR [RSI],1
            lea RAX,QWORD PTR [RDI+24]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4293b0:

            mov DWORD PTR [RSI],0
            xor EAX,EAX
            ret 
.L_4293b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4293c0:

            push R15
            push R14
            xor EAX,EAX
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
            mov RBX,QWORD PTR [RDI+32]
            test RBX,RBX
            je .L_4293ef

            mov R12,QWORD PTR [RBX+16]
            test R12,R12
            je .L_4293ef

            movzx ECX,BYTE PTR [RBX]
            lea R8D,DWORD PTR [RCX-3]
            cmp R8B,1
            jbe .L_429400
.L_4293ef:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_429400:

            movzx R8D,BYTE PTR [R12]
            lea R9D,DWORD PTR [R8-3]
            cmp R9B,1
            ja .L_4293ef

            movzx R9D,WORD PTR [RBX+2]
            xor R9W,WORD PTR [R12+2]
            and R9D,1
            jne .L_4293ef

            cmp R8B,3
            mov R14D,EDX
            mov R13D,ESI
            mov RBP,RDI
            je .L_4294bd
.L_429433:

            cmp CL,3
            mov ESI,DWORD PTR [RBX+24]
            je .L_4294b3

            test ESI,ESI
            jle .L_429465

            xor R15D,R15D
            nop
            nop
            nop
            nop
            nop
            nop
.L_429448:

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+R15*4]
            call .L_40c5e0

            lea EAX,DWORD PTR [R15+1]
            add R15,1
            cmp DWORD PTR [RBX+24],EAX
            jg .L_429448
.L_429465:

            mov RDI,QWORD PTR [RBX+32]
            mov DWORD PTR [RBX+24],0
            test RDI,RDI
            je .L_42947a

            call _ZdaPv@PLT
.L_42947a:

            mov QWORD PTR [RBX+32],0
.L_429482:

            test R13D,R13D
            js .L_4294a0

            mov BYTE PTR [RBX],3
            mov DWORD PTR [RBX+24],R13D
            mov EAX,1
            mov WORD PTR [RBX+2],R14W
            jmp .L_4293ef
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4294a0:

            mov QWORD PTR [RBP+32],R12
            mov RDI,RBX
            call .L_40f010

            xor EAX,EAX
            jmp .L_4293ef
.L_4294b3:

            mov RDI,R12
            call .L_40c5e0

            jmp .L_429482
.L_4294bd:

            mov ESI,DWORD PTR [R12+24]
            mov BYTE PTR [R12],4
            mov RDI,R12
            mov DWORD PTR [R12+24],0
            mov QWORD PTR [R12+32],0
            call .L_40c5e0

            movzx ECX,BYTE PTR [RBX]
            jmp .L_429433
.L_4294e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4294f0:

            push R13
            push R12
            xor EDX,EDX
            push RBP
            push RBX
            mov RBX,RSI
            mov ESI,4294967295
            mov RBP,RDI
            sub RSP,8
.L_429507:

            call .L_4293c0

            movzx EAX,BYTE PTR [RBX]
            cmp AL,20
            je .L_429538
.L_429513:

            cmp AL,21
            jbe .L_429560
.L_429517:

            mov RAX,QWORD PTR [RBP+32]
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBP+32],RBX
            add RSP,8
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429538:

            mov RDI,QWORD PTR [RBX+32]
            mov EAX,DWORD PTR [RDI+8]
            cmp EAX,1
            je .L_429570

            cmp EAX,2
            jne .L_429560

            mov RAX,QWORD PTR [RDI+40]
            mov EAX,DWORD PTR [RAX+32]
            lea EDX,DWORD PTR [RAX-65]
            cmp EDX,25
            jbe .L_4295b0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429560:

            mov RDI,RBX
            call .L_430900

            mov BYTE PTR [RBX+1],AL
            jmp .L_429517
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429570:

            mov RAX,QWORD PTR [RDI+40]
            mov RDI,RBX
            mov R12D,DWORD PTR [RAX+32]
            call .L_40f010

            mov EDI,40
            call _Znwm@PLT
.L_42958a:

            mov EDX,DWORD PTR [RBP]
            mov ESI,3
            mov RDI,RAX
            mov RBX,RAX
.L_429598:

            call .L_40c5b0
.L_42959d:

            mov DWORD PTR [RBX+24],R12D
.L_4295a1:

            movzx EAX,BYTE PTR [RBX]
            jmp .L_429513
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4295b0:

            lea R12D,DWORD PTR [RAX+32]
            mov ESI,R12D
.L_4295b7:

            call .L_40ce50

            test AL,AL
            je .L_4295a1

            mov RDI,RBX
            call .L_40f010

            mov R13D,DWORD PTR [RBP]
            mov EDI,40
            call _Znwm@PLT
.L_4295d6:

            mov ESI,3
            mov RDI,RAX
            mov RBX,RAX
            or R13D,1
            mov EDX,R13D
.L_4295e8:

            call .L_40c5b0
.L_4295ed:

            jmp .L_42959d
.L_4295ef:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_429602:

            call _Unwind_Resume@PLT
.L_429607:

            jmp .L_4295ef
.L_429609:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429610:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov EDI,40
            mov R12D,ESI
.L_42961f:

            call _Znwm@PLT
.L_429624:

            mov EDX,DWORD PTR [RBP]
            mov ESI,R12D
            mov RDI,RAX
            mov RBX,RAX
.L_429630:

            call .L_40c5b0
.L_429635:

            mov RSI,RBX
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
.L_42963f:

            jmp .L_4294f0
.L_429644:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42965c:

            nop
            nop
            nop
            nop
.L_429660:

            test BYTE PTR [RDI],16
            jne .L_429670

            mov ESI,14
            jmp .L_429610
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429670:

            mov ESI,18
            jmp .L_429610
.L_429677:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429680:

            test SIL,SIL
            jne .L_429690

            mov ESI,17
            jmp .L_429610
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429690:

            mov ESI,16
            jmp .L_429610
.L_42969a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4296a0:

            push RBP
            push RBX
            sub RSP,8
            mov EBP,DWORD PTR [RDI]
            test BPL,16
            jne .L_4296c0

            add RSP,8
            mov ESI,15
            pop RBX
            pop RBP
            jmp .L_429610
          .byte 0x66
          .byte 0x90
.L_4296c0:

            mov EAX,EBP
            mov RBX,RDI
            mov ESI,19
            or AH,128
            mov DWORD PTR [RDI],EAX
            call .L_429610

            mov DWORD PTR [RBX],EBP
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4296dd:

            nop
            nop
            nop
.L_4296e0:

            push R12
            push RBP
            push RBX
.L_4296e4:

            mov EBP,DWORD PTR [RDI]
            test BPL,8
            je .L_4296f4

            test EBP,2048
            je .L_429760
.L_4296f4:

            mov RBX,RDI
            mov EDI,40
.L_4296fc:

            call _Znwm@PLT
.L_429701:

            mov EDX,EBP
            mov ESI,20
            mov RDI,RAX
            and EDX,4294967294
            mov R12,RAX
.L_429711:

            call .L_40c5b0
.L_429716:

            mov EDI,64
.L_42971b:

            call _Znwm@PLT
.L_429720:

            mov RDI,RAX
            mov RBP,RAX
.L_429726:

            call .L_40ce10
.L_42972b:

            mov RDI,RBP
            mov EDX,9
            xor ESI,ESI
            mov QWORD PTR [R12+32],RBP
.L_42973a:

            call .L_40e780

            mov RDI,QWORD PTR [R12+32]
            mov EDX,DWORD PTR [RBX+44]
            mov ESI,11
            call .L_40e780

            mov RSI,R12
            mov RDI,RBX
            pop RBX
.L_429758:

            pop RBP
            pop R12
            jmp .L_4294f0
.L_429760:

            pop RBX
            pop RBP
            pop R12
            mov ESI,12
            jmp .L_429610
.L_42976e:

            mov RBX,RAX
            mov RDI,R12
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_429786:

            mov RBX,RAX
            mov RDI,RBP
            mov ESI,64
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42979e:

            nop
            nop
.L_4297a0:

            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,40
            sub RSP,8
.L_4297ae:

            call _Znwm@PLT
.L_4297b3:

            mov EDX,DWORD PTR [RBP]
            mov ESI,22
            mov RDI,RAX
            mov RBX,RAX
.L_4297c1:

            call .L_40c5b0
.L_4297c6:

            mov DWORD PTR [RBX+24],4294967295
            add RSP,8
            mov RSI,RBX
            mov RDI,RBP
            pop RBX
            pop RBP
.L_4297d9:

            jmp .L_4294f0
.L_4297de:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4297f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429800:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            sub RSP,8
.L_429815:

            call _Znwm@PLT
.L_42981a:

            mov EDX,DWORD PTR [RBX]
            mov ESI,22
            mov RDI,RAX
            mov RBP,RAX
.L_429827:

            call .L_40c5b0
.L_42982c:

            mov EAX,DWORD PTR [RBX+40]
            add EAX,1
            cmp QWORD PTR [R13],0
            mov DWORD PTR [RBX+40],EAX
            mov DWORD PTR [RBP+24],EAX
            je .L_42986b

            mov EDI,32
.L_429844:

            call _Znwm@PLT
.L_429849:

            movsxd RDX,DWORD PTR [R13+8]
            mov RSI,QWORD PTR [R13]
            mov R12,RAX
            lea RAX,QWORD PTR [RAX+16]
            mov RDI,R12
            mov QWORD PTR [R12],RAX
            add RDX,RSI
.L_429862:

            call .L_428f50
.L_429867:

            mov QWORD PTR [RBP+32],R12
.L_42986b:

            add RSP,8
.L_42986f:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
.L_42987b:

            jmp .L_4294f0
.L_429880:

            mov RBX,RAX
            mov RDI,RBP
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_429898:

            mov RBX,RAX
            mov RDI,R12
            mov ESI,32
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4298b0:

            push R14
            push R13
            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov EBX,DWORD PTR [RDI]
            mov RBP,RDI
            test BL,1
            jne .L_429928
.L_4298c5:

            test BH,8
            je .L_4298d4

            cmp R12D,10
            je .L_4299c0
.L_4298d4:

            mov EDX,EBX
            mov ESI,R12D
            mov RDI,RBP
.L_4298dc:

            call .L_4293c0

            test AL,AL
            je .L_4298f0

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_4298f0:

            mov EDI,40
            call _Znwm@PLT
.L_4298fa:

            mov EDX,DWORD PTR [RBP]
            mov ESI,3
            mov RDI,RAX
            mov RBX,RAX
.L_429908:

            call .L_40c5b0
.L_42990d:

            mov DWORD PTR [RBX+24],R12D
.L_429911:

            mov RSI,RBX
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
.L_42991f:

            jmp .L_4294f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429928:

            mov EDI,ESI
            call .L_4291e0

            cmp EAX,R12D
            je .L_4298c5

            mov EDI,40
            call _Znwm@PLT
.L_42993e:

            mov EDX,EBX
            mov ESI,20
            mov RDI,RAX
            and EDX,4294967294
            mov R13,RAX
.L_42994e:

            call .L_40c5b0
.L_429953:

            mov EDI,64
.L_429958:

            call _Znwm@PLT
.L_42995d:

            mov RDI,RAX
            mov R14,RAX
.L_429963:

            call .L_40ce10
.L_429968:

            mov QWORD PTR [R13+32],R14
            mov EBX,R12D
            nop
.L_429970:

            test DWORD PTR [RBP],2048
            je .L_42997e

            cmp EBX,10
            je .L_42998e
.L_42997e:

            mov RDI,R14
            mov EDX,EBX
            mov ESI,EBX
.L_429985:

            call .L_40e780

            mov R14,QWORD PTR [R13+32]
.L_42998e:

            mov EDI,EBX
            call .L_4291e0

            cmp R12D,EAX
            mov EBX,EAX
            jne .L_429970

            mov ESI,DWORD PTR [RBP+44]
            mov RDI,R14
            call .L_40eb80

            pop RBX
.L_4299a8:

            mov RSI,R13
            mov RDI,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_4294f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4299c0:

            mov EDI,40
            call _Znwm@PLT
.L_4299ca:

            mov EDX,DWORD PTR [RBP]
            mov ESI,1
            mov RDI,RAX
            mov RBX,RAX
.L_4299d8:

            call .L_40c5b0
.L_4299dd:

            jmp .L_429911
.L_4299e2:

            mov RBX,RAX
            mov RDI,R13
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
.L_4299f5:

            call _Unwind_Resume@PLT
.L_4299fa:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_429a12:

            jmp .L_4299fa
.L_429a14:

            mov RBX,RAX
            mov RDI,R14
            mov ESI,64
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_429a2c:

            nop
            nop
            nop
            nop
.L_429a30:

            push RBX
            sub RSP,32
.L_429a35:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            and ESI,128
            je .L_429aa8

            cmp DWORD PTR [RDI+8],1
            mov RBX,RDI
            jle .L_429aa8

            mov RDX,QWORD PTR [RDI]
            cmp BYTE PTR [RDX],92
            jne .L_429a8f

            mov QWORD PTR [RSP],RDX
            mov EDX,DWORD PTR [RIP+.L_4367cc]
            lea RSI,QWORD PTR [RIP+.L_6465c0]
            mov RDI,RSP
            mov DWORD PTR [RSP+8],2
            call .L_428cd0

            test RAX,RAX
            je .L_429a8f

            movsxd RCX,DWORD PTR [RSP+8]
            add QWORD PTR [RBX],RCX
            sub DWORD PTR [RBX+8],ECX
.L_429a8f:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_429aac

            add RSP,32
.L_429aa3:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429aa8:

            xor EAX,EAX
            jmp .L_429a8f
.L_429aac:

            call __stack_chk_fail@PLT
.L_429ab1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429ac0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_429ace:

            mov QWORD PTR [RSI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            mov BYTE PTR [RAX],0
            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            jle .L_429b4e

            lea R13,QWORD PTR [RSP+4]
            mov R12,RDI
            mov RBP,RSI
            xor EBX,EBX
            mov R15,RSP
            movabs R14,9223372036854775807
            nop
            nop
            nop
.L_429b10:

            mov RAX,QWORD PTR [R12]
            mov RSI,R15
            mov RDI,R13
            movzx EAX,BYTE PTR [RAX+RBX*1]
            mov DWORD PTR [RSP],EAX
            call .L_414120

            movsxd RDX,EAX
            mov RAX,R14
            sub RAX,QWORD PTR [RBP+8]
            cmp RDX,RAX
            ja .L_429b6d

            mov RSI,R13
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [R12+8],EAX
            jg .L_429b10
.L_429b4e:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_429b79

            add RSP,24
.L_429b62:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_429b6d:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_429b79:

            call __stack_chk_fail@PLT
.L_429b7e:

            nop
            nop
.L_429b80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_429b91:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            lea EAX,DWORD PTR [RDI-48]
            cmp EAX,9
            jbe .L_429bc8

            lea EAX,DWORD PTR [RDI-65]
            mov EBX,EDI
            cmp EAX,5
            jbe .L_429bf8

            lea EAX,DWORD PTR [RDI-97]
            cmp EAX,5
            ja .L_429c00

            lea EAX,DWORD PTR [RDI-87]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429bc8:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42a0e9

            add RSP,520
.L_429be6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429bf8:

            lea EAX,DWORD PTR [RDI-55]
            jmp .L_429bc8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429c00:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_429c90:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_429c95:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_429d4f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_429d54:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_43646a]
            mov EDX,12
.L_429d64:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,1229
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_429da0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436477]
            mov EDX,14
.L_429db0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,EBX
            call _ZNSolsEi@PLT
.L_429dc0:

            cmp BYTE PTR [RSP+112],0
            je .L_429e40
.L_429dc7:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_429df9

            call _ZdlPv@PLT
.L_429df9:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_429bc8
          .byte 0x90
.L_429e40:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBX,QWORD PTR [RSP+16]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_42a00d

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_429f70

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_429eb4:

            call .L_428f50
.L_429eb9:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42a01e

            lea RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+96]
            cmp RDI,RAX
            je .L_42a07c

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_42a08b

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RAX
.L_429f13:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_429f37
.L_429f32:

            call _ZdlPv@PLT
.L_429f37:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_429f46:

            call write@PLT
.L_429f4b:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov BYTE PTR [RSP+112],1
            cmp RDI,RBX
            je .L_429dc7

            call _ZdlPv@PLT

            jmp .L_429dc7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429f70:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_429f86:

            call .L_428f50

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42a04f

            lea RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+64]
            cmp RDI,RAX
            je .L_42a09e

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_42a0ad

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RAX
.L_429fe5:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_429f32

            jmp .L_429f37
.L_42a00d:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42a019:

            jmp .L_429f37
.L_42a01e:

            test RDX,RDX
            je .L_42a03c

            cmp RDX,1
            je .L_42a0d3

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_42a03c:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_429f13
.L_42a04f:

            test RDX,RDX
            je .L_42a069

            cmp RDX,1
            je .L_42a0c0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_42a069:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_429fe5
.L_42a07c:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_42a08b:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_429f13
.L_42a09e:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_42a0ad:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_429fe5
.L_42a0c0:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42a069
.L_42a0d3:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42a03c
.L_42a0e9:

            call __stack_chk_fail@PLT
.L_42a0ee:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            cmp RDI,RBX
            je .L_42a101

            call _ZdlPv@PLT
.L_42a101:

            call _ZSt9terminatev@PLT
.L_42a106:

            jmp .L_42a0ee
.L_42a108:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
.L_42a116:

            call _Unwind_Resume@PLT
.L_42a11b:

            mov RBX,RAX
.L_42a11e:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42a137:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42a14b:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            jmp .L_42a11e
.L_42a16f:

            nop
.L_42a170:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_42a181:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            jle .L_42a1a4

            mov R15,QWORD PTR [RDI]
            mov RBP,RDI
            cmp BYTE PTR [R15],92
            je .L_42a1e8
.L_42a1a4:

            mov DWORD PTR [RBX],1
            mov QWORD PTR [RBX+8],0
            xor R12D,R12D
            mov DWORD PTR [RBX+16],0
.L_42a1bc:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_42a543

            add RSP,40
.L_42a1d7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a1e8:

            cmp EAX,1
            je .L_42a248

            lea RDX,QWORD PTR [R15+1]
            lea R12,QWORD PTR [RSP+16]
            sub EAX,1
            mov DWORD PTR [RDI+8],EAX
            mov R13,RSI
            mov RSI,RDI
            mov QWORD PTR [RDI],RDX
            mov RDX,RBX
            mov RDI,R12
            mov DWORD PTR [RSP+8],ECX
            call .L_428d80

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+8]
            js .L_42a284

            mov EDI,DWORD PTR [RSP+16]
            lea R14D,DWORD PTR [RDI-48]
            cmp R14D,72
            ja .L_42a355

            lea RSI,QWORD PTR [RIP+.L_4364ac]
            mov EDX,R14D
            movsxd RAX,DWORD PTR [RSI+RDX*4]
            add RAX,RSI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a248:

            mov DWORD PTR [RDX],7
            mov QWORD PTR [RDX+8],0
            xor R12D,R12D
            mov DWORD PTR [RDX+16],0
            jmp .L_42a1bc
.L_42a265:

            mov ESI,DWORD PTR [RBP+8]
            test ESI,ESI
            jne .L_42a393
.L_42a270:

            mov RAX,QWORD PTR [RBP]
.L_42a274:

            sub RAX,R15
            mov DWORD PTR [RBX],2
            mov QWORD PTR [RBX+8],R15
            mov DWORD PTR [RBX+16],EAX
.L_42a284:

            xor R12D,R12D
            jmp .L_42a1bc
.L_42a28c:

            mov DWORD PTR [R13],11
            mov R12D,1
            jmp .L_42a1bc
.L_42a29f:

            mov DWORD PTR [R13],9
            mov R12D,1
            jmp .L_42a1bc
.L_42a2b2:

            mov DWORD PTR [R13],13
            mov R12D,1
            jmp .L_42a1bc
.L_42a2c5:

            mov DWORD PTR [R13],10
            mov R12D,1
            jmp .L_42a1bc
.L_42a2d8:

            mov DWORD PTR [R13],12
            mov R12D,1
            jmp .L_42a1bc
.L_42a2eb:

            mov DWORD PTR [R13],7
            mov R12D,1
            jmp .L_42a1bc
.L_42a2fe:

            mov EDX,DWORD PTR [RBP+8]
            mov RAX,QWORD PTR [RBP]
            test EDX,EDX
            je .L_42a274

            movzx ESI,BYTE PTR [RAX]
            sub ESI,48
            cmp SIL,7
            ja .L_42a274
.L_42a31d:

            test EDX,EDX
            jle .L_42a338

            mov RSI,QWORD PTR [RBP]
            movsx EAX,BYTE PTR [RSI]
            lea EDI,DWORD PTR [RAX-48]
            mov DWORD PTR [RSP+16],EAX
            cmp EDI,7
            jbe .L_42a43b
.L_42a338:

            cmp R14D,ECX
            jg .L_42a270

            mov DWORD PTR [R13],R14D
            mov R12D,1
            jmp .L_42a1bc
.L_42a350:

            mov EDX,DWORD PTR [RBP+8]
            jmp .L_42a31d
.L_42a355:

            cmp EDI,127
            mov DWORD PTR [RSP+8],EDI
            jg .L_42a270

            call __ctype_b_loc@PLT

            movsxd RDX,DWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RAX]
            test BYTE PTR [RCX+RDX*2+1],4
            jne .L_42a270

            cmp R14D,9
            jbe .L_42a270

            mov DWORD PTR [R13],EDX
            mov R12D,1
            jmp .L_42a1bc
.L_42a393:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            mov DWORD PTR [RSP+8],ECX
            call .L_428d80

            test EAX,EAX
            js .L_42a284

            cmp DWORD PTR [RSP+16],123
            je .L_42a482

            mov EAX,DWORD PTR [RBP+8]
            test EAX,EAX
            je .L_42a270

            lea RDI,QWORD PTR [RSP+20]
            mov RDX,RBX
            mov RSI,RBP
            call .L_428d80

            test EAX,EAX
            js .L_42a284

            mov EDI,DWORD PTR [RSP+16]
            mov EAX,EDI
            and EAX,4294967263
            sub EAX,65
            cmp EAX,5
            jbe .L_42a3f8

            lea EAX,DWORD PTR [RDI-48]
            cmp EAX,9
            ja .L_42a270
.L_42a3f8:

            mov EAX,DWORD PTR [RSP+20]
            mov EDX,EAX
            and EDX,4294967263
            sub EDX,65
            cmp EDX,5
            setbe R12B
            sub EAX,48
            cmp EAX,9
            setbe AL
            or R12B,AL
            je .L_42a270

            call .L_429b80

            mov EDI,DWORD PTR [RSP+20]
            mov EBX,EAX
            shl EBX,4
            call .L_429b80

            add EAX,EBX
            mov DWORD PTR [R13],EAX
            jmp .L_42a1bc
.L_42a43b:

            lea R14D,DWORD PTR [RAX+R14*8-48]
            lea RAX,QWORD PTR [RSI+1]
            mov QWORD PTR [RBP],RAX
            lea EAX,DWORD PTR [RDX-1]
            test EAX,EAX
            mov DWORD PTR [RBP+8],EAX
            je .L_42a338

            movsx EAX,BYTE PTR [RSI+1]
            lea EDI,DWORD PTR [RAX-48]
            mov DWORD PTR [RSP+16],EAX
            cmp EDI,7
            ja .L_42a338

            add RSI,2
            sub EDX,2
            lea R14D,DWORD PTR [RAX+R14*8-48]
            mov QWORD PTR [RBP],RSI
            mov DWORD PTR [RBP+8],EDX
            jmp .L_42a338
.L_42a482:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_428d80

            test EAX,EAX
            js .L_42a284

            mov ECX,DWORD PTR [RSP+8]
            xor R14D,R14D
            xor R8D,R8D
.L_42a4a2:

            mov EDI,DWORD PTR [RSP+16]
            mov EAX,EDI
            and EAX,4294967263
            sub EAX,65
            cmp EAX,5
            jbe .L_42a4e0

            lea EAX,DWORD PTR [RDI-48]
            cmp EAX,9
            jbe .L_42a4e0

            cmp EDI,125
            jne .L_42a270

            test R14D,R14D
            je .L_42a270

            mov DWORD PTR [R13],R8D
            mov R12D,1
            jmp .L_42a1bc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a4e0:

            shl R8D,4
            mov DWORD PTR [RSP+12],ECX
            add R14D,1
            mov DWORD PTR [RSP+8],R8D
            call .L_429b80

            mov R8D,DWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+12]
            add R8D,EAX
            cmp R8D,ECX
            jg .L_42a270

            mov EDX,DWORD PTR [RBP+8]
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+8],R8D
            test EDX,EDX
            je .L_42a270

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_428d80

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+12]
            jns .L_42a4a2

            jmp .L_42a284
.L_42a543:

            call __stack_chk_fail@PLT
.L_42a548:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a550:

            cmp DWORD PTR [RSI+8],0
            mov RAX,RSI
            je .L_42a588

            mov RSI,RDX
            jle .L_42a566

            mov RDX,QWORD PTR [RAX]
            cmp BYTE PTR [RDX],92
            je .L_42a5a0
.L_42a566:

            sub RSP,8
            mov RDI,RSI
            mov RDX,R8
            mov RSI,RAX
            call .L_428d80

            not EAX
            add RSP,8
            shr EAX,31
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a588:

            mov RAX,QWORD PTR [RCX]
            mov DWORD PTR [R8],5
            mov QWORD PTR [R8+8],RAX
            mov EAX,DWORD PTR [RCX+8]
            mov DWORD PTR [R8+16],EAX
            xor EAX,EAX
            ret 
.L_42a5a0:

            mov ECX,DWORD PTR [RDI+44]
            mov RDX,R8
            mov RDI,RAX
            jmp .L_42a170
.L_42a5ae:

            nop
            nop
.L_42a5b0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov R12,RDI
            mov RBX,RSI
            mov RBP,R8
            sub RSP,8
            mov R14,QWORD PTR [RSI]
            call .L_42a550

            test AL,AL
            je .L_42a650

            mov EDX,DWORD PTR [RBX+8]
            cmp EDX,1
            jle .L_42a5e9

            mov RCX,QWORD PTR [RBX]
            cmp BYTE PTR [RCX],45
            je .L_42a600
.L_42a5e9:

            mov EDX,DWORD PTR [R15]
            mov DWORD PTR [R15+4],EDX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_42a600:

            cmp BYTE PTR [RCX+1],93
            je .L_42a5e9

            sub EDX,1
            add RCX,1
            mov R8,RBP
            mov DWORD PTR [RBX+8],EDX
            lea RDX,QWORD PTR [R15+4]
            mov QWORD PTR [RBX],RCX
            mov RSI,RBX
            mov RCX,R13
            mov RDI,R12
            call .L_42a550

            test AL,AL
            je .L_42a650

            mov ESI,DWORD PTR [R15]
            cmp DWORD PTR [R15+4],ESI
            jge .L_42a652

            mov RAX,QWORD PTR [RBX]
            mov DWORD PTR [RBP],4
            mov QWORD PTR [RBP+8],R14
            sub RAX,R14
            mov DWORD PTR [RBP+16],EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a650:

            xor EAX,EAX
.L_42a652:

            add RSP,8
.L_42a656:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a661:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a670:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,552
.L_42a684:

            mov EBX,DWORD PTR [RDI]
            movdqu XMM0,XMMWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            test BH,2
            movaps XMMWORD PTR [RSP+16],XMM0
            je .L_42a6be

            mov EAX,DWORD PTR [RSP+24]
            cmp EAX,1
            jle .L_42a6be

            mov RDX,QWORD PTR [RSP+16]
            cmp BYTE PTR [RDX],40
            je .L_42aa80
.L_42a6be:

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R13
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov QWORD PTR [RSP+496],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42a756:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42a75b:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_42a818:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42a81d:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43646a]
            mov EDX,12
.L_42a82d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1801
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42a869:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436420]
            mov EDX,38
.L_42a879:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42a87e:

            cmp BYTE PTR [RSP+144],0
            je .L_42a940
.L_42a88c:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_42a8c1

            call _ZdlPv@PLT
.L_42a8c1:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RSP+RAX*1+152],RCX
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [R12+24]
            mov DWORD PTR [RAX],1
            xor EAX,EAX
.L_42a912:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42af17

            add RSP,552
.L_42a930:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a940:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_42abe0

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            ja .L_42ab30

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+8],RCX
.L_42a9b7:

            call .L_428f50
.L_42a9bc:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42ac78

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_42ace0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42acef

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_42aa1a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_42aa3e
.L_42aa39:

            call _ZdlPv@PLT
.L_42aa3e:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_42aa4d:

            call write@PLT
.L_42aa52:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_42a88c

            call _ZdlPv@PLT

            jmp .L_42a88c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42aa80:

            cmp BYTE PTR [RDX+1],63
            jne .L_42a6be

            sub EAX,2
            mov R15,RSI
            lea RSI,QWORD PTR [RDX+2]
            xor R14D,R14D
            cmp EAX,2
            mov DWORD PTR [RSP+24],EAX
            mov QWORD PTR [RSP+16],RSI
            mov BYTE PTR [RSP],0
            jle .L_42aab3

            cmp BYTE PTR [RDX+2],80
            je .L_42ae29
.L_42aab3:

            lea R13,QWORD PTR [RSP+16]
            lea RBP,QWORD PTR [RSP+32]
.L_42aabd:

            test EAX,EAX
            mov RDX,QWORD PTR [R12+24]
            je .L_42ab08

            mov RSI,R13
            mov RDI,RBP
.L_42aacc:

            call .L_428d80
.L_42aad1:

            test EAX,EAX
            js .L_42ab20

            mov EAX,DWORD PTR [RSP+32]
            cmp EAX,85
            je .L_42ad08

            jg .L_42abf8

            cmp EAX,45
            je .L_42ad20

            cmp EAX,58
            je .L_42ad40

            cmp EAX,41
            je .L_42ad50
.L_42ab03:

            mov RDX,QWORD PTR [R12+24]
.L_42ab08:

            mov RCX,QWORD PTR [R15]
            mov RAX,QWORD PTR [RSP+16]
            mov DWORD PTR [RDX],11
            sub RAX,RCX
            mov QWORD PTR [RDX+8],RCX
            mov DWORD PTR [RDX+16],EAX
.L_42ab20:

            xor EAX,EAX
            jmp .L_42a912
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ab30:

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RSP+128]
            mov RDI,RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_42ab4d:

            call .L_428f50

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42ac38

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_42acb8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42acc7

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_42abb6:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            jne .L_42aa39

            jmp .L_42aa3e
          .byte 0x66
          .byte 0x90
.L_42abe0:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42abed:

            jmp .L_42aa3e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42abf8:

            cmp EAX,109
            je .L_42ad98

            cmp EAX,115
            je .L_42ad80

            cmp EAX,105
            jne .L_42ab03

            test R14B,R14B
            je .L_42add0

            and EBX,4294967294
            mov BYTE PTR [RSP],R14B
            nop
            nop
            nop
            nop
            nop
.L_42ac28:

            mov EAX,DWORD PTR [RSP+24]
            jmp .L_42aabd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ac38:

            test RDX,RDX
            je .L_42ac60

            cmp RDX,1
            je .L_42ae10

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ac60:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_42abb6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ac78:

            test RDX,RDX
            je .L_42aca0

            cmp RDX,1
            je .L_42adf0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aca0:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42aa1a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42acb8:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42acc7:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_42abb6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ace0:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42acef:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42aa1a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ad08:

            test R14B,R14B
            je .L_42adb0

            and EBX,4294967231
            mov BYTE PTR [RSP],R14B
            jmp .L_42ac28
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ad20:

            test R14B,R14B
            jne .L_42ab03

            mov BYTE PTR [RSP],0
            mov R14D,1
            jmp .L_42ac28
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ad40:

            mov RDI,R12
.L_42ad43:

            call .L_4297a0

            test AL,AL
            je .L_42ab20
.L_42ad50:

            cmp BYTE PTR [RSP],1
            je .L_42ad5f

            test R14B,R14B
            jne .L_42ab03
.L_42ad5f:

            mov RAX,QWORD PTR [RSP+16]
            mov DWORD PTR [R12],EBX
            mov QWORD PTR [R15],RAX
            mov EAX,DWORD PTR [RSP+24]
            mov DWORD PTR [R15+8],EAX
            mov EAX,1
            jmp .L_42a912
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ad80:

            test R14B,R14B
            je .L_42adc0

            and EBX,4294967287
            mov BYTE PTR [RSP],R14B
            jmp .L_42ac28
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ad98:

            test R14B,R14B
            je .L_42ade0

            or EBX,16
            mov BYTE PTR [RSP],R14B
            jmp .L_42ac28
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42adb0:

            or EBX,64
            mov BYTE PTR [RSP],1
            jmp .L_42ac28
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42adc0:

            or EBX,8
            mov BYTE PTR [RSP],1
            jmp .L_42ac28
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42add0:

            or EBX,1
            mov BYTE PTR [RSP],1
            jmp .L_42ac28
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ade0:

            and EBX,4294967279
            mov BYTE PTR [RSP],1
            jmp .L_42ac28
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42adf0:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42aca0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ae10:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42ac60
.L_42ae29:

            cmp BYTE PTR [RDX+3],60
            jne .L_42aab3

            lea RDI,QWORD PTR [RSP+16]
            mov EDX,2
            mov ESI,62
            call .L_414470

            cdqe 
            cmp QWORD PTR [RIP+.L_435df0],RAX
            mov RBX,RAX
            je .L_42aedc

            mov RBP,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R12+24]
            lea R13,QWORD PTR [RSP+32]
            mov RDI,R13
            lea RAX,QWORD PTR [RBP+2]
            mov QWORD PTR [RSP+32],RAX
            lea EAX,DWORD PTR [RBX-2]
            mov DWORD PTR [RSP+40],EAX
            call .L_428e00

            test AL,AL
            je .L_42ab20

            mov EDI,DWORD PTR [RSP+40]
            add EBX,3
            sub RBP,2
            test EDI,EDI
            je .L_42aec3

            mov R8,QWORD PTR [RSP+32]
            xor EAX,EAX
.L_42ae9e:

            cmp EDI,EAX
            jle .L_42af1c

            movsx ECX,BYTE PTR [R8+RAX*1]
            mov EDX,ECX
            sub ECX,48
            cmp ECX,9
            jbe .L_42af11

            mov ECX,EDX
            and ECX,4294967263
            sub ECX,65
            cmp CL,25
            jbe .L_42af11

            cmp DL,95
            je .L_42af11
.L_42aec3:

            mov RAX,QWORD PTR [R12+24]
            mov DWORD PTR [RAX],13
            mov QWORD PTR [RAX+8],RBP
            mov DWORD PTR [RAX+16],EBX
            xor EAX,EAX
            jmp .L_42a912
.L_42aedc:

            mov RSI,QWORD PTR [R12+24]
            mov RDI,R15
            call .L_428e00

            test AL,AL
            je .L_42ab20

            mov RAX,QWORD PTR [R12+24]
            mov RDX,QWORD PTR [R15]
            mov QWORD PTR [RAX+8],RDX
            mov EDX,DWORD PTR [R15+8]
            mov DWORD PTR [RAX],13
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            jmp .L_42a912
.L_42af11:

            add RAX,1
            jmp .L_42ae9e
.L_42af17:

            call __stack_chk_fail@PLT
.L_42af1c:

            mov RSI,R13
            mov RDI,R12
            call .L_429800

            test AL,AL
            je .L_42ab20

            mov RSI,QWORD PTR [R15]
            movsxd RDX,EBX
            add RDX,RBP
            sub RDX,RSI
            sub DWORD PTR [R15+8],EDX
            movsxd RDI,EDX
            add RSI,RDI
            mov QWORD PTR [R15],RSI
            jmp .L_42a912
.L_42af4d:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42af61:

            lea RDI,QWORD PTR [RBX+16]
            mov R12,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RSP+RAX*1+152],RCX
.L_42af88:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R12
            call _Unwind_Resume@PLT
.L_42afa1:

            mov R12,RAX
            jmp .L_42af88
.L_42afa6:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42afb9:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_42afd0

            call _ZdlPv@PLT
.L_42afd0:

            call _ZSt9terminatev@PLT
.L_42afd5:

            jmp .L_42afb9
.L_42afd7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42afe0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_42aff1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp ECX,11
            jne .L_42b260

            lea RBX,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R12
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42b09c:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42b0a1:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+128],R13
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+200],RAX
            mov QWORD PTR [RSP+208],0
            mov BYTE PTR [RSP+216],0
.L_42b15b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42b160:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43646a]
            mov EDX,12
.L_42b170:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,322
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42b1ac:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436448]
            mov EDX,33
.L_42b1bc:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42b1c1:

            cmp BYTE PTR [RSP+112],0
            je .L_42b2f0
.L_42b1cc:

            mov RDI,QWORD PTR [RSP+200]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],R13
            cmp RDI,RAX
            je .L_42b1f7

            call _ZdlPv@PLT
.L_42b1f7:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],RBP
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R12
            call _ZNSt8ios_baseD2Ev@PLT
.L_42b235:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42b629

            add RSP,520
.L_42b253:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42b260:

            mov R13,RDI
            mov EBX,ESI
            mov EBP,EDX
            mov R12D,ECX
.L_42b26a:

            call .L_40e780

            test AL,AL
            je .L_42b235

            mov R15D,DWORD PTR [RIP+.L_4374f4]
            lea R14,QWORD PTR [RIP+.L_437500]
            add R12D,1
.L_42b285:

            cmp EBX,EBP
            jg .L_42b235
.L_42b289:

            mov EDX,EBX
            mov ESI,R15D
            mov RDI,R14
            call .L_4290d0

            test RAX,RAX
            je .L_42b235

            mov EDX,DWORD PTR [RAX]
            cmp EDX,EBX
            jle .L_42b2b0

            mov EBX,EDX
            cmp EBX,EBP
            jle .L_42b289

            jmp .L_42b235
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b2b0:

            mov ECX,DWORD PTR [RAX+8]
            cmp DWORD PTR [RAX+4],EBP
            mov EDX,EBP
            cmovle EDX,DWORD PTR [RAX+4]
            cmp ECX,-1
            je .L_42b420

            cmp ECX,1
            je .L_42b3f8

            add EBX,ECX
            add EDX,ECX
.L_42b2d2:

            mov ESI,EBX
            mov ECX,R12D
            mov RDI,R13
            mov QWORD PTR [RSP],RAX
            call .L_42afe0
.L_42b2e3:

            mov RAX,QWORD PTR [RSP]
            mov EBX,DWORD PTR [RAX+4]
            add EBX,1
            jmp .L_42b285
          .byte 0x90
.L_42b2f0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_42b580

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_42b450

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_42b369:

            call .L_428f50

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42b598

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_42b530

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_42b53f

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RAX
.L_42b3cc:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_42b4e8

            jmp .L_42b4ed
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b3f8:

            mov ESI,EBX
            shr ESI,31
            lea ECX,DWORD PTR [RBX+RSI*1]
            and ECX,1
            sub ECX,ESI
            cmp ECX,1
            sete CL
            movzx ECX,CL
            sub EBX,ECX
            mov ECX,EDX
            and ECX,1
            cmp ECX,1
            adc EDX,0
            jmp .L_42b2d2
.L_42b420:

            mov ECX,EBX
            mov ESI,EDX
            and ECX,1
            cmp ECX,1
            sbb EBX,0
            shr ESI,31
            lea ECX,DWORD PTR [RDX+RSI*1]
            and ECX,1
            sub ECX,ESI
            cmp ECX,1
            sete CL
            movzx ECX,CL
            add EDX,ECX
            jmp .L_42b2d2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b450:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
            call .L_428f50
.L_42b46b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42b5d0

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_42b558

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_42b567

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RAX
.L_42b4c9:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_42b4ed
.L_42b4e8:

            call _ZdlPv@PLT
.L_42b4ed:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_42b4fc:

            call write@PLT
.L_42b501:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_42b1cc

            call _ZdlPv@PLT

            jmp .L_42b1cc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b530:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_42b53f:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42b3cc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b558:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_42b567:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_42b4c9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b580:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
.L_42b588:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42b58d:

            jmp .L_42b4ed
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b598:

            test RDX,RDX
            je .L_42b5b8

            cmp RDX,1
            je .L_42b616

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b5b8:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42b3cc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b5d0:

            test RDX,RDX
            je .L_42b5f0

            cmp RDX,1
            je .L_42b603

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b5f0:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42b4c9
.L_42b603:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42b5f0
.L_42b616:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42b5b8
.L_42b629:

            call __stack_chk_fail@PLT
.L_42b62e:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],RBP
            mov QWORD PTR [RSP+RAX*1+120],RCX
.L_42b64f:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_42b663:

            call _Unwind_Resume@PLT
.L_42b668:

            mov R13,RAX
            jmp .L_42b64f
.L_42b66d:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_42b684

            call _ZdlPv@PLT
.L_42b684:

            call _ZSt9terminatev@PLT
.L_42b689:

            jmp .L_42b66d
.L_42b68b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42b69e:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42b6b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b6c0:

            push R14
            push R13
            mov R13D,ECX
            push R12
            push RBP
            mov EBP,ECX
            push RBX
            mov R14,RDI
            mov EBX,EDX
            mov R12D,ECX
            and EBP,4
            and R13D,2048
.L_42b6df:

            test EBP,EBP
            je .L_42b700

            test R13D,R13D
            jne .L_42b700
.L_42b6e8:

            and R12D,1
            jne .L_42b728

            mov EDX,EBX
            mov RDI,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_40e780
.L_42b700:

            cmp ESI,10
            jg .L_42b6e8

            cmp EBX,9
            jle .L_42b6e8

            cmp ESI,10
            jne .L_42b740
.L_42b70f:

            cmp EBX,10
            mov ESI,11
            jne .L_42b6df

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b728:

            mov EDX,EBX
            mov RDI,R14
            xor ECX,ECX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_42afe0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b740:

            mov ECX,R12D
            mov EDX,9
            mov RDI,R14
            call .L_42b6c0

            jmp .L_42b70f
.L_42b752:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b760:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            xor EBX,EBX
            mov RBP,RDI
            sub RSP,552
.L_42b776:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            cmp EAX,5
            jne .L_42b7c3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b798:

            cmp EBX,3
            jg .L_42b7a8

            movsxd RAX,EBX
            add EBX,1
            mov QWORD PTR [RSP+RAX*8+16],RBP
.L_42b7a8:

            movzx EAX,WORD PTR [RBP+6]
            mov RBP,QWORD PTR [RBP+8]
            cmp AX,1
            jbe .L_42b7ba

            mov RBP,QWORD PTR [RBP]
.L_42b7ba:

            movzx EAX,BYTE PTR [RBP]
            cmp EAX,5
            je .L_42b798
.L_42b7c3:

            cmp EAX,3
            je .L_42b900

            cmp EAX,4
            je .L_42b8c8
.L_42b7d5:

            lea R12,QWORD PTR [RSP+144]
            sub EBX,1
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            movsxd RBX,EBX
            lea R13,QWORD PTR [R12+120]
            jmp .L_42b804
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b7f8:

            mov RDI,QWORD PTR [R15]
            cmp BYTE PTR [RDI],2
            je .L_42b826
.L_42b800:

            sub RBX,1
.L_42b804:

            cmp RBX,-1
            je .L_42b870

            mov RBP,QWORD PTR [RSP+RBX*8+16]
            cmp WORD PTR [RBP+6],1
            mov R15,QWORD PTR [RBP+8]
            ja .L_42b7f8

            mov RDI,R15
            lea R15,QWORD PTR [RBP+8]
            cmp BYTE PTR [RDI],2
            jne .L_42b800
.L_42b826:

            call .L_40f010

            movzx EAX,WORD PTR [RBP+6]
            mov QWORD PTR [R15],0
            cmp AX,1
            jbe .L_42b910

            cmp AX,2
            jne .L_42b8a0

            mov RAX,QWORD PTR [R15+8]
            mov RDI,RBP
            mov QWORD PTR [R15+8],0
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            call .L_40caa0

            mov RAX,QWORD PTR [RSP]
            mov RDI,RAX
            call .L_40f010
.L_42b86d:

            jmp .L_42b800
          .byte 0x90
.L_42b870:

            mov RAX,QWORD PTR [RSP+536]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42be9a

            add RSP,552
.L_42b88e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b8a0:

            sub EAX,1
            lea RSI,QWORD PTR [R15+8]
            mov RDI,R15
            mov WORD PTR [RBP+6],AX
            movzx EAX,AX
            lea RDX,QWORD PTR [RAX*8]
            call memmove@PLT

            jmp .L_42b800
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b8c8:

            movsxd RAX,DWORD PTR [RBP+24]
            mov RDI,QWORD PTR [RBP+32]
            cmp EAX,ESI
            jg .L_42bb80

            test RDI,RDI
            je .L_42b8e2

            call _ZdaPv@PLT
.L_42b8e2:

            mov QWORD PTR [RBP+32],0
            mov DWORD PTR [RBP+24],0
            mov BYTE PTR [RBP],2
            jmp .L_42b7d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b900:

            mov DWORD PTR [RBP+24],0
            mov BYTE PTR [RBP],2
            jmp .L_42b7d5
.L_42b910:

            mov RDI,R13
            mov BYTE PTR [RSP+144],0
            call _ZNSt8ios_baseC2Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42b998:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42b99d:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            lea RAX,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            mov RDI,R13
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_42ba5c:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42ba61:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_43646a]
            mov EDX,12
.L_42ba72:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,759
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42bab0:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436486]
            mov EDX,10
.L_42bac1:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,WORD PTR [RBP+6]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSolsEi@PLT
.L_42bad4:

            cmp BYTE PTR [RSP+144],0
            je .L_42bbb0
.L_42bae2:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+64]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_42bb1f

            call _ZdlPv@PLT
.L_42bb1f:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,R13
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+RAX*1+152],RCX
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov QWORD PTR [RBP+8],0
            mov BYTE PTR [RBP],2
            jmp .L_42b800
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bb80:

            lea EDX,DWORD PTR [RAX-1]
            cmp EDX,ESI
            jne .L_42bceb

            test RDI,RDI
            mov R12D,DWORD PTR [RDI+RAX*4-4]
            je .L_42bb9a

            call _ZdaPv@PLT
.L_42bb9a:

            mov QWORD PTR [RBP+32],0
            mov DWORD PTR [RBP+24],R12D
            mov BYTE PTR [RBP],3
            jmp .L_42b7d5
          .byte 0x90
.L_42bbb0:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_42bdb9

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            ja .L_42bd0b

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+8],RCX
.L_42bc28:

            call .L_428f50
.L_42bc2d:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42bdcc

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_42be2a

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42be39

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_42bc8b:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_42bcaf
.L_42bcaa:

            call _ZdlPv@PLT
.L_42bcaf:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_42bcbe:

            call write@PLT
.L_42bcc3:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_42bae2

            call _ZdlPv@PLT

            jmp .L_42bae2
.L_42bceb:

            sub EAX,ESI
            movsxd RSI,ESI
            mov DWORD PTR [RBP+24],EAX
            cdqe 
            lea RSI,QWORD PTR [RDI+RSI*4]
            lea RDX,QWORD PTR [RAX*4]
            call memmove@PLT

            jmp .L_42b7d5
.L_42bd0b:

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RSP+128]
            mov RDI,RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_42bd28:

            call .L_428f50

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42bdfd

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_42be4c

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42be5b

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_42bd91:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            jne .L_42bcaa

            jmp .L_42bcaf
.L_42bdb9:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [R12+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42bdc7:

            jmp .L_42bcaf
.L_42bdcc:

            test RDX,RDX
            je .L_42bdea

            cmp RDX,1
            je .L_42be84

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_42bdea:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42bc8b
.L_42bdfd:

            test RDX,RDX
            je .L_42be17

            cmp RDX,1
            je .L_42be6e

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_42be17:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_42bd91
.L_42be2a:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42be39:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42bc8b
.L_42be4c:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42be5b:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_42bd91
.L_42be6e:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42be17
.L_42be84:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42bdea
.L_42be9a:

            call __stack_chk_fail@PLT
.L_42be9f:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_42beb6

            call _ZdlPv@PLT
.L_42beb6:

            call _ZSt9terminatev@PLT
.L_42bebb:

            jmp .L_42be9f
.L_42bebd:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+RAX*1+152],RCX
.L_42beec:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_42bf01:

            call _Unwind_Resume@PLT
.L_42bf06:

            mov RBX,RAX
            mov RDI,R12
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42bf19:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42bf2e:

            mov RBX,RAX
            jmp .L_42beec
.L_42bf33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bf40:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RBX,QWORD PTR [RDI+32]
            test RBX,RBX
            je .L_42bf80

            mov QWORD PTR [RDI+32],0
            mov RDI,RBX
            call .L_40d020

            mov QWORD PTR [RBP+24],RAX
            mov RSI,QWORD PTR [RBX+32]
            lea RDI,QWORD PTR [RBX+16]
            call .L_4117e0

            mov ESI,64
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_42bf80:

            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
.L_42bf8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42bf90:

            test RSI,RSI
            je .L_42bfa2

            cmp BYTE PTR [RSI],20
            mov QWORD PTR [RSI+16],0
            je .L_42bfb0
.L_42bfa2:

            mov RAX,RSI
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bfb0:

            mov RDI,RSI
            jmp .L_42bf40
.L_42bfb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bfc0:

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42c058

            cmp BYTE PTR [RAX],21
            ja .L_42c058

            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_42bfe6:

            mov R13D,DWORD PTR [RDI]
            mov EDI,40
            mov EAX,R13D
            xor EAX,64
            test CL,CL
            cmovne R13D,EAX
.L_42bffa:

            call _Znwm@PLT
.L_42bfff:

            mov EDX,R13D
            mov ESI,R12D
            mov RDI,RAX
            mov RBX,RAX
.L_42c00b:

            call .L_40c5b0
.L_42c010:

            mov EAX,1
            mov WORD PTR [RBX+6],AX
            mov RAX,QWORD PTR [RBP+32]
            mov RDX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBX+16],RDX
            cmp BYTE PTR [RAX],20
            mov QWORD PTR [RAX+16],0
            je .L_42c078
.L_42c032:

            mov RDI,RBX
            mov QWORD PTR [RBX+8],RAX
.L_42c039:

            call .L_430900

            mov QWORD PTR [RBP+32],RBX
            mov BYTE PTR [RBX+1],AL
            add RSP,8
.L_42c049:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c058:

            mov RAX,QWORD PTR [RDI+24]
            mov RCX,QWORD PTR [RDX]
            mov QWORD PTR [RAX+8],RCX
            mov EDX,DWORD PTR [RDX+8]
            mov DWORD PTR [RAX],8
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c078:

            mov RDI,RAX
            call .L_42bf40

            jmp .L_42c032
.L_42c082:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42c09a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c0a0:

            cmp EDX,-1
            je .L_42c0c8

            cmp EDX,ESI
            jge .L_42c0c8
.L_42c0a9:

            mov RAX,QWORD PTR [RDI+24]
            mov RDX,QWORD PTR [RCX]
            mov QWORD PTR [RAX+8],RDX
            mov EDX,DWORD PTR [RCX+8]
            mov DWORD PTR [RAX],9
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c0c8:

            cmp ESI,1000
            setg AL
            cmp EDX,1000
            setg R9B
            or AL,R9B
            jne .L_42c0a9

            mov R9,QWORD PTR [RDI+32]
            test R9,R9
            je .L_42c190

            cmp BYTE PTR [R9],21
            ja .L_42c190

            push R14
.L_42c0f9:

            push R13
            mov R13,RDI
            push R12
            push RBP
            mov EBP,ESI
            push RBX
.L_42c104:

            mov R14D,DWORD PTR [RDI]
            mov EDI,40
            mov EBX,EDX
            mov EAX,R14D
            xor EAX,64
            test R8B,R8B
            cmovne R14D,EAX
.L_42c11b:

            call _Znwm@PLT
.L_42c120:

            mov EDX,R14D
            mov ESI,10
            mov RDI,RAX
            mov R12,RAX
.L_42c12e:

            call .L_40c5b0
.L_42c133:

            mov EAX,1
            mov DWORD PTR [R12+28],EBP
            mov DWORD PTR [R12+24],EBX
            mov WORD PTR [R12+6],AX
            mov RAX,QWORD PTR [R13+32]
            mov RDX,QWORD PTR [RAX+16]
            mov QWORD PTR [R12+16],RDX
            cmp BYTE PTR [RAX],20
            mov QWORD PTR [RAX+16],0
            je .L_42c1b0
.L_42c162:

            mov RDI,R12
            mov QWORD PTR [R12+8],RAX
.L_42c16a:

            call .L_430900

            mov QWORD PTR [R13+32],R12
            mov BYTE PTR [R12+1],AL
            mov EAX,1
            pop RBX
.L_42c17e:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c190:

            mov RDX,QWORD PTR [RDI+24]
            mov RSI,QWORD PTR [RCX]
            mov QWORD PTR [RDX+8],RSI
            mov ECX,DWORD PTR [RCX+8]
            mov DWORD PTR [RDX],8
            mov DWORD PTR [RDX+16],ECX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c1b0:

            mov RDI,RAX
            call .L_42bf40

            jmp .L_42c162
.L_42c1ba:

            mov RBX,RAX
            mov RDI,R12
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42c1d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c1e0:

            push R15
            push R14
            mov R9,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_42c1f1:

            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_42c3c8

            movzx R8D,BYTE PTR [RDI]
            cmp R8B,21
            ja .L_42c3d8

            mov RCX,RDI
            xor EBX,EBX
            jmp .L_42c22d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c218:

            add EBX,1
            test RAX,RAX
            je .L_42c248
.L_42c220:

            movzx R8D,BYTE PTR [RAX]
            mov RCX,RAX
            cmp R8B,21
            ja .L_42c248
.L_42c22d:

            cmp ESI,R8D
            mov RAX,QWORD PTR [RCX+16]
            jne .L_42c218

            movzx EDX,WORD PTR [RCX+6]
            add EBX,EDX
            test RAX,RAX
            jne .L_42c220

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c248:

            cmp QWORD PTR [RDI+16],RAX
            je .L_42c39f

            movsxd RDI,EBX
            shl RDI,3
.L_42c259:

            mov R14,R9
            mov DWORD PTR [RSP+32],ESI
            mov QWORD PTR [RSP+40],R9
            call _Znam@PLT

            mov R15,QWORD PTR [R14+32]
            mov QWORD PTR [RSP+24],RAX
            test R15,R15
            je .L_42c3c0

            movzx EDX,BYTE PTR [R15]
            mov EBP,EBX
            cmp DL,21
            mov EAX,EDX
            jbe .L_42c2cf

            jmp .L_42c3c0

            nop
            nop
.L_42c290:

            mov RSI,QWORD PTR [RSP+24]
            sub EBP,1
            cmp AL,20
            movsxd RDX,EBP
            mov QWORD PTR [R15+16],0
            lea R13,QWORD PTR [RSI+RDX*8]
            je .L_42c3b0
.L_42c2af:

            test R12,R12
            mov QWORD PTR [R13],R15
            je .L_42c360
.L_42c2bc:

            movzx EDX,BYTE PTR [R12]
            mov R15,R12
            cmp DL,21
            mov EAX,EDX
            ja .L_42c360
.L_42c2cf:

            cmp DWORD PTR [RSP+32],EDX
            mov R12,QWORD PTR [R15+16]
            jne .L_42c290

            movzx EAX,WORD PTR [R15+6]
            lea RDX,QWORD PTR [R15+8]
            cmp AX,1
            jbe .L_42c2ec

            mov RDX,QWORD PTR [R15+8]
.L_42c2ec:

            mov DWORD PTR [RSP+36],EAX
            sub EAX,1
            cmp EAX,-1
            je .L_42c34a

            mov R13D,EAX
            cdqe 
            not R13
            lea R14,QWORD PTR [RDX+RAX*8]
            movsxd RAX,EBP
            lea RCX,QWORD PTR [R13*8]
            xor R13D,R13D
            mov QWORD PTR [RSP+16],RCX
            mov RCX,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RCX+RAX*8]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_42c328:

            mov RDI,QWORD PTR [R14+R13*1]
            call .L_40fa90

            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSI+R13*1-8],RAX
            sub R13,8
            cmp R13,QWORD PTR [RSP+16]
            jne .L_42c328

            sub EBP,DWORD PTR [RSP+36]
.L_42c34a:

            mov RDI,R15
            call .L_40f010

            test R12,R12
            jne .L_42c2bc

            nop
            nop
            nop
            nop
            nop
.L_42c360:

            mov R14,QWORD PTR [RSP+40]
            mov R15,QWORD PTR [RSP+24]
            mov EDX,EBX
            mov EDI,DWORD PTR [RSP+32]
            mov R8D,1
            mov ECX,DWORD PTR [R14]
            mov RSI,R15
            call .L_40d640

            mov RDI,R15
            mov RBX,RAX
            call _ZdaPv@PLT

            mov RDI,RBX
            call .L_430900

            mov QWORD PTR [RBX+16],R12
            mov BYTE PTR [RBX+1],AL
            mov QWORD PTR [R14+32],RBX
.L_42c39f:

            add RSP,56
.L_42c3a3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42c3b0:

            mov RDI,R15
            call .L_42bf40

            mov R15,RAX
            jmp .L_42c2af
.L_42c3c0:

            xor R12D,R12D
            jmp .L_42c360
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c3c8:

            xor EDI,EDI
            xor EBX,EBX
            jmp .L_42c259
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c3d8:

            xor EAX,EAX
            xor EBX,EBX
            jmp .L_42c248
.L_42c3e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c3f0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42c407

            cmp BYTE PTR [RAX],21
            jbe .L_42c42e
.L_42c407:

            mov EDI,40
.L_42c40c:

            call _Znwm@PLT
.L_42c411:

            mov EDX,DWORD PTR [RBX]
            mov ESI,2
            mov RDI,RAX
            mov RBP,RAX
.L_42c41e:

            call .L_40c5b0
.L_42c423:

            mov RSI,RBP
            mov RDI,RBX
.L_42c429:

            call .L_4294f0
.L_42c42e:

            add RSP,8
            mov RDI,RBX
            mov ESI,5
            pop RBX
            pop RBP
            jmp .L_42c1e0
.L_42c441:

            mov RBX,RAX
            mov RDI,RBP
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42c459:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c460:

            push R15
            push R14
            xor EDX,EDX
            push R13
            push R12
            mov ESI,4294967295
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_42c478:

            call .L_4293c0

            mov RDI,RBX
            call .L_42c3f0

            mov RBP,QWORD PTR [RBX+32]
            test RBP,RBP
            je .L_42c49e

            mov R12,QWORD PTR [RBP+16]
            test R12,R12
            je .L_42c49e

            cmp BYTE PTR [R12],23
            je .L_42c4c0
.L_42c49e:

            add RSP,24
            mov RDI,RBX
            mov ESI,23
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_429610
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c4c0:

            movzx EAX,BYTE PTR [RBP]
            mov R14,QWORD PTR [R12+16]
            lea EDX,DWORD PTR [RAX-12]
            and EDX,247
            sete R13B
            cmp AL,3
            sete DL
            or R13B,DL
            je .L_42c500

            test R14,R14
            je .L_42c500

            movzx EDX,BYTE PTR [R14]
            cmp DL,12
            je .L_42c5b1

            cmp DL,20
            je .L_42c5c8

            cmp DL,3
            je .L_42c528
.L_42c500:

            mov QWORD PTR [RBP+16],R14
            mov R13D,1
            mov QWORD PTR [R12+16],RBP
            mov QWORD PTR [RBX+32],R12
.L_42c513:

            add RSP,24
.L_42c517:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c528:

            mov EAX,DWORD PTR [R14+24]
            mov EDI,64
            mov BYTE PTR [R14],20
            mov QWORD PTR [R14+24],0
            mov DWORD PTR [RSP+12],EAX
            call _Znwm@PLT
.L_42c546:

            mov RDI,RAX
            mov R15,RAX
.L_42c54c:

            call .L_40ce10
.L_42c551:

            movzx EDX,WORD PTR [R14+2]
            mov ESI,DWORD PTR [RSP+12]
            mov RDI,R15
            mov QWORD PTR [R14+32],R15
            and EDX,1
.L_42c564:

            call .L_428e80

            movzx EDX,BYTE PTR [RBP]
            mov EAX,EDX
.L_42c56f:

            cmp EDX,3
            mov R15,QWORD PTR [R14+32]
            je .L_42c5e0

            cmp EDX,20
            je .L_42c5fc
.L_42c57d:

            cmp AL,12
            je .L_42c5d0

            cmp DWORD PTR [R15+8],1114112
            jne .L_42c5b1
.L_42c58b:

            mov RSI,QWORD PTR [R15+32]
            lea RDI,QWORD PTR [R15+16]
            call .L_4117e0

            mov ESI,64
            mov RDI,R15
            call _ZdlPvm@PLT
.L_42c5a5:

            mov QWORD PTR [R14+32],0
            mov BYTE PTR [R14],12
.L_42c5b1:

            mov QWORD PTR [RBX+32],R12
            mov RDI,RBP
            call .L_40f010

            jmp .L_42c513
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c5c8:

            movzx EDX,AL
            jmp .L_42c56f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c5d0:

            test R15,R15
            je .L_42c5a5

            jmp .L_42c58b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c5e0:

            movzx EDX,WORD PTR [RBP+2]
            mov ESI,DWORD PTR [RBP+24]
            mov RDI,R15
            and EDX,1
            call .L_428e80

            movzx EAX,BYTE PTR [RBP]
            mov R15,QWORD PTR [R14+32]
            jmp .L_42c57d
.L_42c5fc:

            mov RSI,QWORD PTR [RBP+32]
            mov RDI,R15
            call .L_40ea60

            movzx EAX,BYTE PTR [RBP]
            mov R15,QWORD PTR [R14+32]
            jmp .L_42c57d
.L_42c615:

            mov RBX,RAX
            mov RDI,R15
            mov ESI,64
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42c62d:

            nop
            nop
            nop
.L_42c630:

            push RBX
            mov RBX,RDI
            call .L_42c460

            mov RDI,QWORD PTR [RBX+32]
            mov RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RBX+32],RAX
            call .L_40f010

            mov RDI,RBX
            mov ESI,6
            pop RBX
            jmp .L_42c1e0
.L_42c658:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c660:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            call .L_42c630

            mov R12,QWORD PTR [RBX+32]
            test R12,R12
            je .L_42c685

            mov RBP,QWORD PTR [R12+16]
            test RBP,RBP
            je .L_42c685

            cmp BYTE PTR [RBP],22
            je .L_42c6a8
.L_42c685:

            mov RAX,QWORD PTR [RBX+24]
            mov RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RAX+8],RDX
            mov EDX,DWORD PTR [RBX+16]
            mov DWORD PTR [RAX],6
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c6a8:

            mov RAX,QWORD PTR [RBP+16]
            mov EDX,DWORD PTR [RBP+24]
            mov QWORD PTR [RBX+32],RAX
            movzx EAX,WORD PTR [RBP+2]
            test EDX,EDX
            mov DWORD PTR [RBX],EAX
            jle .L_42c700

            mov EAX,1
            mov BYTE PTR [RBP],11
            mov WORD PTR [RBP+6],AX
            cmp BYTE PTR [R12],20
            mov QWORD PTR [R12+16],0
            je .L_42c710
.L_42c6da:

            mov QWORD PTR [RBP+8],R12
            mov RDI,RBP
            call .L_430900

            mov BYTE PTR [RBP+1],AL
.L_42c6e9:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_42c6f0:

            pop RBP
            pop R12
            jmp .L_4294f0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c700:

            mov RDI,RBP
            mov RBP,R12
            call .L_40f010

            jmp .L_42c6e9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c710:

            mov RDI,R12
            call .L_42bf40

            mov R12,RAX
            jmp .L_42c6da
.L_42c71d:

            nop
            nop
            nop
.L_42c720:

            push RBX
            mov RBX,RDI
            call .L_42c630

            mov RAX,QWORD PTR [RBX+32]
            test RAX,RAX
            je .L_42c74e

            cmp QWORD PTR [RAX+16],0
            jne .L_42c760

            mov QWORD PTR [RBX+32],0
            cmp BYTE PTR [RAX],20
            mov QWORD PTR [RAX+16],0
            je .L_42c750
.L_42c74e:

            pop RBX
            ret 
.L_42c750:

            pop RBX
            mov RDI,RAX
            jmp .L_42bf40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c760:

            mov RAX,QWORD PTR [RBX+24]
            mov RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RAX+8],RDX
            mov EDX,DWORD PTR [RBX+16]
            mov DWORD PTR [RAX],6
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            pop RBX
            ret 
.L_42c77c:

            nop
            nop
            nop
            nop
.L_42c780:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            sub RSP,696
.L_42c794:

            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+680],RSI
            xor ESI,ESI
            test ECX,ECX
            mov QWORD PTR [RSP+16],RDI
            mov DWORD PTR [RSP+88],EDX
            mov DWORD PTR [RSP+32],ECX
            jle .L_42cd2b

            xor EBX,EBX
            test R12D,R12D
            js .L_42c874

            mov EAX,ECX
            xor R14D,R14D
            xor R15D,R15D
            sub EAX,1
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+8],0
            mov DWORD PTR [RSP+56],EAX
            lea RAX,QWORD PTR [RSP+288]
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+96],RAX
            lea RAX,QWORD PTR [RSP+124]
            mov QWORD PTR [RSP+104],RAX
.L_42c813:

            cmp R12D,R14D
            mov EBP,R14D
            mov DWORD PTR [RSP+124],0
            mov DWORD PTR [RSP+128],0
            jg .L_42d407

            cmp R15D,R14D
            je .L_42c86b

            mov QWORD PTR [RSP+24],0
.L_42c840:

            lea EAX,DWORD PTR [R15+1]
            cmp EAX,EBP
            jne .L_42d020

            mov RCX,QWORD PTR [RSP+16]
            movsxd RAX,R15D
            mov RDX,QWORD PTR [RCX+RAX*8]
            movsxd RAX,EBX
            add EBX,1
            mov QWORD PTR [RCX+RAX*8],RDX
.L_42c862:

            cmp R12D,EBP
            jg .L_42d373
.L_42c86b:

            add R14,1
            cmp R12D,R14D
            jge .L_42c813
.L_42c874:

            movsxd RAX,EBX
            xor R12D,R12D
            xor EBP,EBP
            add RAX,1
            mov DWORD PTR [RSP+24],0
            xor R15D,R15D
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSP+32]
            mov R13,R12
            sub EAX,1
            mov DWORD PTR [RSP+48],EAX
            lea RAX,QWORD PTR [RSP+288]
            mov QWORD PTR [RSP+56],RAX
            mov RAX,QWORD PTR [RSP+16]
            add RAX,8
            mov QWORD PTR [RSP+64],RAX
.L_42c8b9:

            cmp EBX,EBP
            mov R14D,EBP
            jg .L_42d398

            cmp R15D,EBP
            je .L_42c916

            mov QWORD PTR [RSP+32],0
.L_42c8d2:

            movsxd RAX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            movsxd R12,R15D
            lea R10,QWORD PTR [RSI+R12*8]
            mov RCX,RAX
            lea RDX,QWORD PTR [RSI+RAX*8]
            lea EAX,DWORD PTR [R15+1]
            add ECX,1
            cmp EAX,R14D
            mov QWORD PTR [RSP+40],RDX
            mov DWORD PTR [RSP+24],ECX
            jne .L_42d160

            mov RAX,QWORD PTR [R10]
            mov QWORD PTR [RDX],RAX
.L_42c909:

            cmp EBX,R14D
            cmovg R13,QWORD PTR [RSP+32]
            cmovg R15D,R14D
.L_42c916:

            add RBP,1
            cmp RBP,QWORD PTR [RSP+8]
            jne .L_42c8b9

            lea RBX,QWORD PTR [RSP+288]
            xor R13D,R13D
            xor R12D,R12D
            xor EBP,EBP
            lea RAX,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+48],RAX
            jmp .L_42c979
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c940:

            mov RCX,QWORD PTR [RSP+16]
            movsxd RBP,EBP
            movsxd RAX,R12D
            add R12D,1
            mov RDX,QWORD PTR [RCX+RBP*8]
            mov QWORD PTR [RCX+RAX*8],RDX
.L_42c957:

            mov ECX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+24],ECX
            jg .L_42d318
.L_42c965:

            lea EBP,DWORD PTR [R13+1]
            mov EAX,EBP
.L_42c96b:

            add R13,1
            cmp DWORD PTR [RSP+24],EAX
            jl .L_42ccf8
.L_42c979:

            cmp DWORD PTR [RSP+24],R13D
            mov DWORD PTR [RSP+32],R13D
            jg .L_42d2f0

            cmp EBP,R13D
            je .L_42c965
.L_42c98e:

            lea EAX,DWORD PTR [RBP+1]
            cmp EAX,DWORD PTR [RSP+32]
            je .L_42c940

            lea RAX,QWORD PTR [RSP+128]
            mov RDI,RAX
            mov QWORD PTR [RSP+40],RAX
.L_42c9a7:

            call .L_40ce10
.L_42c9ac:

            cmp EBP,DWORD PTR [RSP+32]
            jge .L_42cf10

            mov RCX,QWORD PTR [RSP+16]
            movsxd RDX,EBP
            lea RAX,QWORD PTR [RCX+RDX*8]
            mov QWORD PTR [RSP+8],RAX
            lea EAX,DWORD PTR [R13-1]
            sub EAX,EBP
            add RAX,RDX
            lea RAX,QWORD PTR [RCX+RAX*8+8]
            mov QWORD PTR [RSP+56],RAX
            jmp .L_42ccbf

            nop
.L_42c9e0:

            mov R15,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+288],0
            mov RDI,R15
            call _ZNSt8ios_baseC2Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+632],0
            mov QWORD PTR [RSP+624],0
            mov BYTE PTR [RSP+633],0
            mov QWORD PTR [RSP+640],0
            xor ESI,ESI
            mov QWORD PTR [RSP+408],RAX
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov QWORD PTR [RSP+648],0
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RAX-24]
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42ca74:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42ca79:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+296],RAX
            add RAX,40
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+408],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+304],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            mov RDI,R15
            mov DWORD PTR [RSP+368],16
            mov QWORD PTR [RSP+384],0
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+392],0
            mov QWORD PTR [RSP+376],RAX
.L_42cb35:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42cb3a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43646a]
            mov EDX,12
.L_42cb4a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,962
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42cb86:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436491]
            mov EDX,20
.L_42cb96:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,BYTE PTR [R14]
            lea RDI,QWORD PTR [RBX+8]
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435733]
            mov EDX,1
            mov RDI,RAX
            mov R15,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RBP,QWORD PTR [RSP+256]
            mov RSI,R14
            mov RDI,RBP
            call .L_4350e0
.L_42cbd2:

            mov RDX,QWORD PTR [RSP+264]
            mov RSI,QWORD PTR [RSP+256]
            mov RDI,R15
.L_42cbe5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42cbea:

            mov RDI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_42cc00

            call _ZdlPv@PLT
.L_42cc00:

            cmp BYTE PTR [RSP+288],0
            je .L_42cdb0
.L_42cc0e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+376]
            mov QWORD PTR [RSP+296],RAX
            add RAX,40
            mov QWORD PTR [RSP+408],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_42cc4e

            call _ZdlPv@PLT
.L_42cc4e:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+304],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+RAX*1+296],RCX
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+408],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_42cca1:

            mov RDI,R14
.L_42cca4:

            call .L_40f010

            add QWORD PTR [RSP+8],8
            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+56],RAX
            je .L_42cf10
.L_42ccbf:

            mov RAX,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RAX]
            movzx EAX,BYTE PTR [R14]
            cmp EAX,20
            je .L_42cd60

            cmp EAX,3
            jne .L_42c9e0

            mov ESI,DWORD PTR [R14+24]
            movzx ECX,WORD PTR [R14+2]
            mov RDI,QWORD PTR [RSP+40]
            mov EDX,ESI
            call .L_42b6c0

            jmp .L_42cca1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ccf8:

            test R12D,R12D
            je .L_42cd2b

            mov EBP,1
            xor EBX,EBX
            nop
            nop
            nop
            nop
.L_42cd08:

            mov RAX,QWORD PTR [RSP+16]
            cmp R12D,EBP
            mov RDI,QWORD PTR [RAX+RBP*8-8]
            jg .L_42d2c8

            mov RAX,QWORD PTR [RSP+16]
            lea R12D,DWORD PTR [RBX+1]
            movsxd RBX,EBX
            mov QWORD PTR [RAX+RBX*8],RDI
.L_42cd2b:

            mov RCX,QWORD PTR [RSP+680]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_42d4d5

            add RSP,696
.L_42cd4c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cd60:

            mov R15,QWORD PTR [R14+24]
            movsxd RAX,DWORD PTR [R15+16]
            mov RBP,QWORD PTR [R15+8]
            shl RAX,3
            test RAX,RAX
            je .L_42cca1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cd80:

            mov EDX,DWORD PTR [RBP+4]
            mov ESI,DWORD PTR [RBP]
            mov RDI,QWORD PTR [RSP+40]
            call .L_40e780
.L_42cd90:

            movsxd RDX,DWORD PTR [R15+16]
            mov RAX,QWORD PTR [R15+8]
            add RBP,8
            lea RAX,QWORD PTR [RAX+RDX*8]
            cmp RBP,RAX
            jne .L_42cd80

            jmp .L_42cca1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cdb0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea R15,QWORD PTR [RSP+192]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RSP+208],0
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RSP+344]
            test RAX,RAX
            je .L_42d220

            mov RDX,QWORD PTR [RSP+328]
            mov RSI,QWORD PTR [RSP+336]
            cmp RAX,RDX
            jbe .L_42cf60

            lea RDX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+256],RDX
            mov RDX,RAX
.L_42ce29:

            call .L_428f50
.L_42ce2e:

            mov RSI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
            cmp RSI,RAX
            je .L_42d238

            lea RAX,QWORD PTR [R15+16]
            mov RCX,QWORD PTR [RSP+272]
            cmp RDI,RAX
            je .L_42d130

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
            je .L_42d148

            mov QWORD PTR [RSP+256],RDI
            mov QWORD PTR [RSP+272],RAX
.L_42cea1:

            mov QWORD PTR [RSP+264],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,RBP
            je .L_42cec6
.L_42cec1:

            call _ZdlPv@PLT
.L_42cec6:

            movsxd RDX,DWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            mov EDI,2
.L_42cedb:

            call write@PLT
.L_42cee0:

            mov RDI,QWORD PTR [RSP+192]
            add R15,16
            mov BYTE PTR [RSP+288],1
            cmp RDI,R15
            je .L_42cc0e

            call _ZdlPv@PLT

            jmp .L_42cc0e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cf10:

            mov R14,QWORD PTR [RSP+40]
            mov RDI,R14
.L_42cf18:

            call .L_40d020

            mov RCX,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [RSP+88]
            lea EBP,DWORD PTR [R12+1]
            mov RDI,RAX
            movsxd R12,R12D
            lea R12,QWORD PTR [RCX+R12*8]
            call .L_40ca50
.L_42cf3a:

            mov RSI,QWORD PTR [RSP+160]
            mov RDI,R14
            mov QWORD PTR [R12],RAX
            add RDI,16
            mov R12D,EBP
            call .L_4117e0

            jmp .L_42c957
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cf60:

            lea RBP,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+224],RAX
.L_42cf77:

            call .L_428f50
.L_42cf7c:

            mov RSI,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
            cmp RSI,RAX
            je .L_42d280

            lea RAX,QWORD PTR [R15+16]
            mov RCX,QWORD PTR [RSP+240]
            cmp RDI,RAX
            je .L_42d100

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
            je .L_42d118

            mov QWORD PTR [RSP+224],RDI
            mov QWORD PTR [RSP+240],RAX
.L_42cfef:

            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,RBP
            jne .L_42cec1

            jmp .L_42cec6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d020:

            mov EDX,DWORD PTR [RSP+40]
            mov ESI,DWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
.L_42d02d:

            call .L_40c960

            cmp R15D,EBP
            mov QWORD PTR [RSP+288],RAX
            movsxd RAX,R15D
            mov QWORD PTR [RSP+72],RAX
            jge .L_42d093

            lea EDX,DWORD PTR [R14-1]
            mov RSI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+92],EBP
            mov EBP,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+80],EBX
            sub EDX,R15D
            add RDX,RAX
            lea R13,QWORD PTR [RSI+RAX*8]
            lea RAX,QWORD PTR [RSI+RDX*8+8]
            mov RBX,R13
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d078:

            mov RDI,QWORD PTR [RBX]
            mov ESI,EBP
            add RBX,8
            call .L_42b760

            cmp RBX,R13
            jne .L_42d078

            mov EBX,DWORD PTR [RSP+80]
            mov EBP,DWORD PTR [RSP+92]
.L_42d093:

            mov RCX,QWORD PTR [RSP+72]
            mov RAX,QWORD PTR [RSP+16]
            mov ESI,EBP
            mov EDX,DWORD PTR [RSP+88]
            sub ESI,R15D
            lea R13,QWORD PTR [RAX+RCX*8]
            mov ECX,DWORD PTR [RSP+56]
            mov RDI,R13
            call .L_42c780

            mov EDX,DWORD PTR [RSP+88]
            mov RDI,R13
            mov ESI,EAX
            lea R13D,DWORD PTR [RBX+1]
            movsxd RBX,EBX
            call .L_40d690

            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov ESI,2
            mov EDX,DWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+64]
            lea RBX,QWORD PTR [RAX+RBX*8]
            call .L_40d6c0

            mov QWORD PTR [RBX],RAX
            mov EBX,R13D
            jmp .L_42c862
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d100:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
.L_42d118:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+224],RDI
            jmp .L_42cfef
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d130:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
.L_42d148:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+256],RDI
            jmp .L_42cea1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d160:

            mov RDI,R13
            mov QWORD PTR [RSP+72],R10
            call .L_40fa90

            cmp R15D,R14D
            mov QWORD PTR [RSP+288],RAX
            mov R10,QWORD PTR [RSP+72]
            jge .L_42d1be

            lea EAX,DWORD PTR [RBP-1]
            mov DWORD PTR [RSP+72],EBX
            mov QWORD PTR [RSP+80],R10
            mov RBX,R10
            sub EAX,R15D
            add R12,RAX
            mov RAX,QWORD PTR [RSP+64]
            lea R12,QWORD PTR [RAX+R12*8]
            nop
            nop
            nop
.L_42d1a0:

            mov RDI,QWORD PTR [RBX]
            add RBX,8
            call .L_429270

            mov QWORD PTR [RBX-8],RAX
            cmp RBX,R12
            jne .L_42d1a0

            mov EBX,DWORD PTR [RSP+72]
            mov R10,QWORD PTR [RSP+80]
.L_42d1be:

            mov R12D,DWORD PTR [RSP+88]
            mov ECX,DWORD PTR [RSP+48]
            mov ESI,R14D
            mov RDI,R10
            sub ESI,R15D
            mov QWORD PTR [RSP+72],R10
            mov EDX,R12D
            call .L_42c780

            mov R10,QWORD PTR [RSP+72]
            mov EDX,R12D
            mov ESI,EAX
            mov RDI,R10
            call .L_40d690

            mov RDI,QWORD PTR [RSP+56]
            mov EDX,R12D
            mov ESI,2
            mov QWORD PTR [RSP+296],RAX
            call .L_40d6c0
.L_42d209:

            mov RDX,QWORD PTR [RSP+40]
            mov QWORD PTR [RDX],RAX
            jmp .L_42c909
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d220:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,R15
.L_42d227:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42d22c:

            jmp .L_42cec6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d238:

            test RDX,RDX
            je .L_42d261

            cmp RDX,1
            jne .L_42d350

            movzx EAX,BYTE PTR [RSP+272]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+264]
            mov RDI,QWORD PTR [RSP+192]
.L_42d261:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+256]
            jmp .L_42cea1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d280:

            test RDX,RDX
            je .L_42d2a9

            cmp RDX,1
            jne .L_42d336

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RSP+192]
.L_42d2a9:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+224]
            jmp .L_42cfef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d2c8:

            cmp BYTE PTR [RDI],2
            je .L_42d3f0
.L_42d2d1:

            mov RCX,QWORD PTR [RSP+16]
            movsxd RAX,EBX
            add EBX,1
            mov QWORD PTR [RCX+RAX*8],RDI
.L_42d2e0:

            add RBP,1
            jmp .L_42cd08
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d2f0:

            mov RAX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RAX+R13*8]
            movzx EDX,BYTE PTR [RAX]
            cmp EDX,3
            je .L_42d36a

            cmp EDX,20
            je .L_42d36a

            cmp EBP,DWORD PTR [RSP+32]
            jne .L_42c98e

            jmp .L_42d321
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d318:

            mov RAX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RAX+R13*8]
.L_42d321:

            mov RCX,QWORD PTR [RSP+16]
            movsxd RDX,R12D
            add R12D,1
            mov QWORD PTR [RCX+RDX*8],RAX
            jmp .L_42c965
.L_42d336:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RSP+192]
            jmp .L_42d2a9
.L_42d350:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+264]
            mov RDI,QWORD PTR [RSP+192]
            jmp .L_42d261
.L_42d36a:

            lea EAX,DWORD PTR [R13+1]
            jmp .L_42c96b
.L_42d373:

            mov EAX,DWORD PTR [RSP+124]
            mov R15D,EBP
            mov DWORD PTR [RSP+8],EAX
            mov EAX,DWORD PTR [RSP+128]
            mov DWORD PTR [RSP+40],EAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+48],RAX
            jmp .L_42c86b
.L_42d398:

            mov RAX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RAX+RBP*8]
            mov QWORD PTR [RSP+32],RAX
            movzx EAX,BYTE PTR [RAX]
            cmp EAX,2
            je .L_42d43f

            cmp EAX,5
            je .L_42d44d
.L_42d3bb:

            test R13,R13
            je .L_42d3d5

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R13
.L_42d3c8:

            call .L_40e4f0

            test AL,AL
            jne .L_42c916
.L_42d3d5:

            cmp R15D,R14D
            jne .L_42c8d2

            mov R13,QWORD PTR [RSP+32]
            jmp .L_42c916

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d3f0:

            mov RAX,QWORD PTR [RAX+RBP*8]
            cmp BYTE PTR [RAX],2
            jne .L_42d2d1

            call .L_40f010

            jmp .L_42d2e0
.L_42d407:

            mov RAX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+96]
            mov RSI,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RAX+R14*8]
            call .L_429360

            mov QWORD PTR [RSP+24],RAX
            mov EAX,DWORD PTR [RSP+40]
            cmp DWORD PTR [RSP+128],EAX
            je .L_42d47a
.L_42d431:

            cmp R15D,EBP
            jne .L_42c840

            jmp .L_42c862
.L_42d43f:

            mov QWORD PTR [RSP+32],0
            jmp .L_42d3bb
.L_42d44d:

            mov RAX,QWORD PTR [RSP+32]
            cmp WORD PTR [RAX+6],1
            jbe .L_42d3bb

            mov RAX,QWORD PTR [RAX+8]
            mov ECX,0
            mov RAX,QWORD PTR [RAX]
            cmp BYTE PTR [RAX],2
            cmovne RCX,RAX
            mov QWORD PTR [RSP+32],RCX
            jmp .L_42d3bb
.L_42d47a:

            mov ECX,DWORD PTR [RSP+8]
            test ECX,ECX
            jle .L_42d431

            mov EAX,DWORD PTR [RSP+124]
            test EAX,EAX
            jle .L_42d431

            mov RDI,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+48]
            mov EDX,DWORD PTR [R8]
            cmp DWORD PTR [RDI],EDX
            jne .L_42d431

            lea EDX,DWORD PTR [RAX-1]
            sub ECX,1
            mov EAX,1
            add RCX,1
            add RDX,1
            jmp .L_42d4c3
.L_42d4b0:

            cmp RAX,RDX
            je .L_42d4cb

            mov ESI,DWORD PTR [R8+RAX*4]
            add RAX,1
            cmp ESI,DWORD PTR [RDI+RAX*4-4]
            jne .L_42d4cb
.L_42d4c3:

            cmp RAX,RCX
            mov R9D,EAX
            jne .L_42d4b0
.L_42d4cb:

            mov DWORD PTR [RSP+8],R9D
            jmp .L_42c86b
.L_42d4d5:

            call __stack_chk_fail@PLT
.L_42d4da:

            mov RDI,QWORD PTR [RSP+192]
            add R15,16
            cmp RDI,R15
            je .L_42d4f0

            call _ZdlPv@PLT
.L_42d4f0:

            call _ZSt9terminatev@PLT
.L_42d4f5:

            mov RBP,RAX
.L_42d4f8:

            mov RDI,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+160]
            add RDI,16
            call .L_4117e0

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42d516:

            mov RDI,QWORD PTR [RSP+256]
            add RBP,16
            mov R12,RAX
            cmp RDI,RBP
            je .L_42d52f

            call _ZdlPv@PLT
.L_42d52f:

            mov RBP,R12
.L_42d532:

            mov RDI,RBX
            call .L_40bd80

            jmp .L_42d4f8
.L_42d53c:

            mov RBP,RAX
            jmp .L_42d532
.L_42d541:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_42d4f8
.L_42d54f:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+RAX*1+296],RCX
.L_42d57d:

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_42d4f8
.L_42d59a:

            mov RBP,RAX
            jmp .L_42d57d
.L_42d59f:

            jmp .L_42d4da
.L_42d5a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d5b0:

            mov ECX,8
            jmp .L_42c780
.L_42d5ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42d5c0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R12D,ECX
            push RBX
            mov RBX,RSI
            sub RSP,80
.L_42d5d5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp EDX,1
            je .L_42d6e0

            mov ESI,ECX
            and ESI,1
            jne .L_42d750

            mov EDX,DWORD PTR [RBX+24]
            test EDX,EDX
            jle .L_42d650

            mov RCX,QWORD PTR [RBX+16]
            xor EBP,EBP
            jmp .L_42d623
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d610:

            movzx ESI,WORD PTR [RAX+2]
            lea EAX,DWORD PTR [RBP+1]
            add RBP,1
            add ESI,1
            cmp DWORD PTR [RBX+24],EAX
            jle .L_42d650
.L_42d623:

            lea R14,QWORD PTR [RBP*4]
            lea RAX,QWORD PTR [RCX+R14*1]
            movzx EDX,WORD PTR [RAX]
            cmp EDX,ESI
            jle .L_42d610

            mov ECX,R12D
            sub EDX,1
            mov RDI,R13
.L_42d63f:

            call .L_42b6c0

            mov RCX,QWORD PTR [RBX+16]
            lea RAX,QWORD PTR [RCX+R14*1]
            jmp .L_42d610
          .byte 0x66
          .byte 0x90
.L_42d650:

            mov EAX,DWORD PTR [RBX+40]
            test EAX,EAX
            jle .L_42d6a8

            mov RCX,QWORD PTR [RBX+32]
            xor EBP,EBP
            jmp .L_42d672
          .byte 0x90
.L_42d660:

            mov ESI,DWORD PTR [RAX+4]
            lea EAX,DWORD PTR [RBP+1]
            add RBP,1
            add ESI,1
            cmp DWORD PTR [RBX+40],EAX
            jle .L_42d6a0
.L_42d672:

            lea R14,QWORD PTR [RBP*8]
            lea RAX,QWORD PTR [RCX+R14*1]
            mov EDX,DWORD PTR [RAX]
            cmp EDX,ESI
            jle .L_42d660

            mov ECX,R12D
            sub EDX,1
            mov RDI,R13
            call .L_42b6c0

            mov RCX,QWORD PTR [RBX+32]
            lea RAX,QWORD PTR [RCX+R14*1]
            jmp .L_42d660
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d6a0:

            cmp ESI,1114111
            jg .L_42d6b8
.L_42d6a8:

            mov ECX,R12D
            mov EDX,1114111
            mov RDI,R13
            call .L_42b6c0
.L_42d6b8:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42d7bc

            add RSP,80
.L_42d6d0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d6e0:

            mov ESI,DWORD PTR [RSI+24]
            xor R14D,R14D
            xor EBP,EBP
            test ESI,ESI
            jle .L_42d715

            nop
            nop
            nop
            nop
.L_42d6f0:

            mov RAX,QWORD PTR [RBX+16]
            mov ECX,R12D
            mov RDI,R13
            add EBP,1
            add RAX,R14
            add R14,4
            movzx EDX,WORD PTR [RAX+2]
            movzx ESI,WORD PTR [RAX]
            call .L_42b6c0

            cmp DWORD PTR [RBX+24],EBP
            jg .L_42d6f0
.L_42d715:

            mov ECX,DWORD PTR [RBX+40]
            xor R14D,R14D
            xor EBP,EBP
            test ECX,ECX
            jle .L_42d6b8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d728:

            mov RAX,QWORD PTR [RBX+32]
            mov ECX,R12D
            mov RDI,R13
            add EBP,1
            add RAX,R14
            add R14,8
            mov EDX,DWORD PTR [RAX+4]
            mov ESI,DWORD PTR [RAX]
            call .L_42b6c0

            cmp DWORD PTR [RBX+40],EBP
            jg .L_42d728

            jmp .L_42d6b8
.L_42d750:

            mov RBP,RSP
            mov RDI,RBP
            call .L_40ce10
.L_42d75b:

            mov ECX,R12D
            mov EDX,1
            mov RSI,RBX
            mov RDI,RBP
.L_42d769:

            call .L_42d5c0

            test R12B,4
            je .L_42d7a8

            and R12D,2048
            jne .L_42d7a8
.L_42d77d:

            mov RDI,RBP
            call .L_40ece0

            mov RSI,RBP
            mov RDI,R13
            call .L_40ea60

            mov RSI,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBP+16]
            call .L_4117e0

            jmp .L_42d6b8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d7a8:

            mov EDX,10
            mov ESI,10
            mov RDI,RBP
            call .L_40e780
.L_42d7ba:

            jmp .L_42d77d
.L_42d7bc:

            call __stack_chk_fail@PLT
.L_42d7c1:

            mov RSI,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call .L_4117e0

            mov RDI,RBX
.L_42d7d5:

            call _Unwind_Resume@PLT
.L_42d7da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42d7e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,88
.L_42d7f1:

            mov EDX,DWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp EDX,1
            jle .L_42d920

            mov RAX,QWORD PTR [RDI]
            mov RBX,RDI
            cmp BYTE PTR [RAX],92
            jne .L_42d920

            mov R14,RCX
            movsx ECX,BYTE PTR [RAX+1]
            mov R12D,ESI
            mov ESI,ECX
            mov DWORD PTR [RSP+12],ECX
            and ESI,4294967263
            cmp SIL,80
            jne .L_42d920

            xor R13D,R13D
            cmp ECX,80
            mov RSI,RBX
            setne R13B
            add RAX,2
            sub EDX,2
            movdqu XMM0,XMMWORD PTR [RDI]
            lea R13D,DWORD PTR [R13+R13*1-1]
            mov DWORD PTR [RDI+8],EDX
            mov QWORD PTR [RDI],RAX
            lea RDI,QWORD PTR [RSP+12]
            mov RDX,R14
            mov QWORD PTR [RSP+32],0
            mov DWORD PTR [RSP+40],0
            movaps XMMWORD PTR [RSP+16],XMM0
            call .L_428d80

            test EAX,EAX
            je .L_42d985

            cmp DWORD PTR [RSP+12],123
            je .L_42d990

            mov RDX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RBX]
            lea R15,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RDX+2]
            mov RCX,RAX
            sub RCX,RSI
            mov QWORD PTR [RSP+32],RSI
            mov EDI,ECX
            mov DWORD PTR [RSP+40],ECX
.L_42d8b4:

            sub RAX,RDX
            test EDI,EDI
            mov DWORD PTR [RSP+24],EAX
            jle .L_42d8dc

            mov RAX,QWORD PTR [RSP+32]
            cmp BYTE PTR [RAX],94
            jne .L_42d8dc

            add RAX,1
            sub EDI,1
            neg R13D
            mov QWORD PTR [RSP+32],RAX
            mov DWORD PTR [RSP+40],EDI
.L_42d8dc:

            lea RAX,QWORD PTR [RIP+.L_4364a6]
            lea RSI,QWORD PTR [RSP+48]
            mov RDI,R15
            mov DWORD PTR [RSP+56],3
            mov QWORD PTR [RSP+48],RAX
            call .L_4143c0

            test AL,AL
            lea RSI,QWORD PTR [RIP+.L_6492e0]
            je .L_42d950
.L_42d908:

            mov ECX,R12D
            mov EDX,R13D
            mov RDI,RBP
            call .L_42d5c0

            xor EAX,EAX
            jmp .L_42d925
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d920:

            mov EAX,2
.L_42d925:

            mov RDI,QWORD PTR [RSP+72]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42da06

            add RSP,88
.L_42d93d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d950:

            mov EDX,DWORD PTR [RIP+.L_4382a0]
            lea RSI,QWORD PTR [RIP+.L_646760]
            mov RDI,R15
            call .L_428cd0

            test RAX,RAX
            mov RSI,RAX
            jne .L_42d908
.L_42d96d:

            mov RAX,QWORD PTR [RSP+16]
            mov DWORD PTR [R14],4
            mov QWORD PTR [R14+8],RAX
            mov EAX,DWORD PTR [RSP+24]
            mov DWORD PTR [R14+16],EAX
.L_42d985:

            mov EAX,1
            jmp .L_42d925
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d990:

            xor EDX,EDX
            mov ESI,125
            mov RDI,RBX
            call .L_414470

            movsxd RDX,EAX
            cmp RDX,QWORD PTR [RIP+.L_435df0]
            je .L_42d9f0

            mov RDX,QWORD PTR [RBX]
            mov DWORD PTR [RSP+40],EAX
            add EAX,1
            sub DWORD PTR [RBX+8],EAX
            movsxd RCX,EAX
            lea R15,QWORD PTR [RSP+32]
            mov RSI,R14
            mov QWORD PTR [RSP+32],RDX
            add RDX,RCX
            mov RDI,R15
            mov QWORD PTR [RBX],RDX
            call .L_428e00

            test AL,AL
            je .L_42d985

            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RSP+40]
            jmp .L_42d8b4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d9f0:

            lea RDI,QWORD PTR [RSP+16]
            mov RSI,R14
            call .L_428e00

            test AL,AL
            je .L_42d985

            jmp .L_42d96d
.L_42da06:

            call __stack_chk_fail@PLT
.L_42da0b:

            nop
            nop
            nop
            nop
            nop
.L_42da10:

            test ESI,1024
            je .L_42da20

            jmp .L_42d7e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42da20:

            mov EAX,2
            ret 
.L_42da26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42da30:

            push R15
            push R14
            push R13
            push R12
            mov R12,RCX
            push RBP
            push RBX
            sub RSP,104
.L_42da41:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI+8]
            movdqu XMM0,XMMWORD PTR [RSI]
            test EAX,EAX
            movaps XMMWORD PTR [RSP+48],XMM0
            je .L_42da6c

            mov RBX,RSI
            mov RAX,QWORD PTR [RSI]
            cmp BYTE PTR [RAX],91
            je .L_42dab0
.L_42da6c:

            mov DWORD PTR [R12],1
            mov QWORD PTR [R12+8],0
            xor EAX,EAX
            mov DWORD PTR [R12+16],0
.L_42da88:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42de45

            add RSP,104
.L_42daa0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42dab0:

            mov R15D,DWORD PTR [RDI]
            mov RBP,RDI
            mov EDI,40
            mov R14,RDX
.L_42dabe:

            call _Znwm@PLT
.L_42dac3:

            and R15D,4294967294
            mov ESI,20
            mov RDI,RAX
            mov EDX,R15D
            mov R13,RAX
.L_42dad5:

            call .L_40c5b0
.L_42dada:

            mov EDI,64
.L_42dadf:

            call _Znwm@PLT
.L_42dae4:

            mov RDI,RAX
            mov R15,RAX
.L_42daea:

            call .L_40ce10
.L_42daef:

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R13+32],R15
            mov BYTE PTR [RSP+19],0
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov EDX,DWORD PTR [RBX+8]
            lea ECX,DWORD PTR [RDX-1]
            test ECX,ECX
            mov DWORD PTR [RBX+8],ECX
            jle .L_42dc75

            cmp BYTE PTR [RAX+1],94
            je .L_42ddd0
.L_42db1d:

            mov RAX,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RSP+48]
            mov ESI,1
            lea R15,QWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RBP]
            mov QWORD PTR [RSP+8],RDI
            movzx EDX,BYTE PTR [RAX]
            cmp DL,45
            jne .L_42db45

            test SIL,SIL
            je .L_42dbb5
.L_42db45:

            cmp ECX,2
            jle .L_42db53

            cmp DL,91
            je .L_42dcf0
.L_42db53:

            cmp DWORD PTR [RBX+8],2
            jle .L_42db62

            cmp BYTE PTR [RAX],92
            je .L_42dca0
.L_42db62:

            mov ESI,R8D
            mov RDI,RBX
.L_42db68:

            call .L_429a30

            test RAX,RAX
            je .L_42dc30

            mov EDX,DWORD PTR [RAX+8]
            mov RDI,QWORD PTR [R13+32]
            mov RSI,RAX
            mov ECX,DWORD PTR [RBP]
            call .L_42d5c0
.L_42db88:

            mov ECX,DWORD PTR [RBX+8]
            test ECX,ECX
            jle .L_42dc75
.L_42db93:

            mov RAX,QWORD PTR [RBX]
            movzx EDX,BYTE PTR [RAX]
            mov RSI,RAX
            cmp DL,93
            je .L_42dda0

            xor ESI,ESI
            cmp DL,45
            mov R8D,DWORD PTR [RBP]
            jne .L_42db45

            test SIL,SIL
            jne .L_42db45
.L_42dbb5:

            mov EDX,R8D
            and EDX,512
            jne .L_42db53

            cmp ECX,1
            je .L_42dbce

            cmp BYTE PTR [RAX+1],93
            je .L_42db53

            lea EDX,DWORD PTR [RCX-1]
.L_42dbce:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea RSI,QWORD PTR [RSP+64]
            lea RDI,QWORD PTR [RSP+44]
            add RAX,1
            movaps XMMWORD PTR [RSP+64],XMM0
            mov DWORD PTR [RSP+72],EDX
            mov RDX,R12
            mov QWORD PTR [RSP+64],RAX
            call .L_428d80

            test EAX,EAX
            js .L_42dc18

            mov RDX,QWORD PTR [RBX]
            add EAX,1
            mov DWORD PTR [R12],4
            mov DWORD PTR [R12+16],EAX
            mov QWORD PTR [R12+8],RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dc18:

            mov RDI,R13
            call .L_40f010

            xor EAX,EAX
            jmp .L_42da88
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dc30:

            mov RCX,QWORD PTR [RSP+8]
            mov R8,R12
            mov RDX,R15
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP+64],0
            call .L_42a5b0

            test AL,AL
            je .L_42dc18

            mov ECX,DWORD PTR [RBP]
            mov RDI,QWORD PTR [R13+32]
            mov EDX,DWORD PTR [RSP+68]
            mov ESI,DWORD PTR [RSP+64]
            or ECX,4
            call .L_42b6c0

            mov ECX,DWORD PTR [RBX+8]
            test ECX,ECX
            jg .L_42db93
.L_42dc75:

            test ECX,ECX
            jne .L_42dd9d

            mov RAX,QWORD PTR [RSP+48]
            mov DWORD PTR [R12],5
            mov QWORD PTR [R12+8],RAX
            mov EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [R12+16],EAX
            jmp .L_42dc18
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dca0:

            movzx EAX,BYTE PTR [RAX+1]
            and EAX,4294967263
            cmp AL,80
            jne .L_42db62

            test R8D,1024
            je .L_42db62

            mov RDX,QWORD PTR [R13+32]
            mov RCX,R12
            mov ESI,R8D
            mov RDI,RBX
            call .L_42d7e0

            test EAX,EAX
            je .L_42db88

            cmp EAX,1
            je .L_42dc18

            mov R8D,DWORD PTR [RBP]
            jmp .L_42db62
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dcf0:

            cmp BYTE PTR [RAX+1],58
            jne .L_42db53

            movsxd RCX,ECX
            lea RDX,QWORD PTR [RAX+2]
            lea RSI,QWORD PTR [RAX+RCX*1-2]
            cmp RDX,RSI
            ja .L_42db53

            lea RCX,QWORD PTR [RSI+1]
            jmp .L_42dd25
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dd18:

            add RDX,1
            cmp RCX,RDX
            je .L_42db53
.L_42dd25:

            cmp BYTE PTR [RDX],58
            jne .L_42dd18

            cmp BYTE PTR [RDX+1],93
            jne .L_42dd18

            cmp RDX,RSI
            ja .L_42db53

            mov RSI,QWORD PTR [R13+32]
            add RDX,2
            mov RDI,R15
            sub RDX,RAX
            mov DWORD PTR [RSP+20],R8D
            mov QWORD PTR [RSP+64],RAX
            mov DWORD PTR [RSP+72],EDX
            mov EDX,DWORD PTR [RIP+.L_436740]
            mov QWORD PTR [RSP+24],RSI
            lea RSI,QWORD PTR [RIP+.L_646080]
            call .L_428cd0

            test RAX,RAX
            mov R8D,DWORD PTR [RSP+20]
            je .L_42de1b

            movsxd RCX,DWORD PTR [RSP+72]
            mov EDX,DWORD PTR [RAX+8]
            mov RSI,RAX
            add QWORD PTR [RBX],RCX
            sub DWORD PTR [RBX+8],ECX
            mov ECX,R8D
            mov RDI,QWORD PTR [RSP+24]
            call .L_42d5c0

            jmp .L_42db88
.L_42dd9d:

            mov RSI,QWORD PTR [RBX]
.L_42dda0:

            add RSI,1
            sub ECX,1
            cmp BYTE PTR [RSP+19],0
            mov QWORD PTR [RBX],RSI
            mov DWORD PTR [RBX+8],ECX
            mov RDI,QWORD PTR [R13+32]
            jne .L_42de10
.L_42ddb8:

            mov ESI,DWORD PTR [RBP+44]
            call .L_40eb80

            mov QWORD PTR [R14],R13
            mov EAX,1
            jmp .L_42da88
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ddd0:

            add RAX,2
            lea ECX,DWORD PTR [RDX-2]
            mov QWORD PTR [RBX],RAX
            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [RBX+8],ECX
            test AL,4
            je .L_42dde9

            test AH,8
            je .L_42ddfe
.L_42dde9:

            mov EDX,10
            mov ESI,10
            mov RDI,R15
            call .L_40e780

            mov ECX,DWORD PTR [RBX+8]
.L_42ddfe:

            test ECX,ECX
            mov BYTE PTR [RSP+19],1
            jg .L_42db1d

            jmp .L_42dc75
.L_42de10:

            call .L_40ece0

            mov RDI,QWORD PTR [R13+32]
            jmp .L_42ddb8
.L_42de1b:

            mov RAX,QWORD PTR [RSP+64]
            mov DWORD PTR [R12],4
            mov RDI,R13
            mov QWORD PTR [R12+8],RAX
            mov EAX,DWORD PTR [RSP+72]
            mov DWORD PTR [R12+16],EAX
            call .L_40f010

            xor EAX,EAX
            jmp .L_42da88
.L_42de45:

            call __stack_chk_fail@PLT
.L_42de4a:

            mov RBX,RAX
            mov RDI,R15
            mov ESI,64
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42de62:

            mov RBX,RAX
            mov RDI,R13
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42de7a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42de80:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov R13D,ESI
            sub RSP,200
.L_42de97:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+96]
            test RDX,RDX
            mov DWORD PTR [RSP+128],ESI
            movdqu XMM0,XMMWORD PTR [RDI]
            cmove R12,RAX
            and ESI,32
            mov DWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+104],0
            mov DWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+152],R12
            movups XMMWORD PTR [RSP+136],XMM0
            mov QWORD PTR [RSP+160],0
            mov DWORD PTR [RSP+168],0
            je .L_42e000

            mov EDI,32
            lea RBP,QWORD PTR [RSP+128]
            movaps XMMWORD PTR [RSP+48],XMM0
            mov DWORD PTR [RSP+172],255
.L_42df30:

            call _Znwm@PLT

            mov R14,RAX
            lea RBX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [R14+8],0
            mov BYTE PTR [R14+16],0
            mov RSI,R14
            mov QWORD PTR [R14],RAX
            mov RDI,RBX
            lea RBP,QWORD PTR [RSP+128]
            call .L_429ac0

            mov RBX,QWORD PTR [R12+24]
            test RBX,RBX
            je .L_42df8c

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_42df7f

            call _ZdlPv@PLT
.L_42df7f:

            mov ESI,32
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_42df8c:

            mov RAX,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [R14]
            and R13D,2
            mov QWORD PTR [R12+24],R14
            mov EDX,EAX
            mov QWORD PTR [RSP+48],RCX
            mov DWORD PTR [RSP+56],EAX
            jne .L_42e01a
.L_42dfa9:

            lea RAX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+128]
            lea R14,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+80]
            lea RBX,QWORD PTR [RIP+.L_4365d0]
            xor R10D,R10D
            xor R11D,R11D
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dfd8:

            test EDX,EDX
            jle .L_42e160
.L_42dfe0:

            mov RDI,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RDI]
            sub EAX,36
            cmp AL,88
            ja .L_42e390

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RBX+RAX*4]
            add RAX,RBX
            jmp RAX
          .byte 0x90
.L_42e000:

            and R13D,2
            mov DWORD PTR [RSP+172],1114111
            movaps XMMWORD PTR [RSP+48],XMM0
            mov EDX,DWORD PTR [RSP+56]
            je .L_42dfa9
.L_42e01a:

            test EDX,EDX
            lea RBP,QWORD PTR [RSP+128]
            jle .L_42e160

            lea RBX,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+80]
            lea RBP,QWORD PTR [RSP+128]
            jmp .L_42e05c
          .byte 0x66
          .byte 0x90
.L_42e040:

            mov ESI,DWORD PTR [RSP+80]
            mov RDI,RBP
            call .L_4298b0

            test AL,AL
            je .L_42e06e

            mov EAX,DWORD PTR [RSP+56]
            test EAX,EAX
            jle .L_42e160
.L_42e05c:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,R13
            call .L_428d80

            test EAX,EAX
            jns .L_42e040
.L_42e06e:

            xor R12D,R12D
.L_42e071:

            mov RDI,RBP
            call .L_429060

            mov RBX,QWORD PTR [RSP+120]
            test RBX,RBX
            je .L_42e0a1

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_42e094

            call _ZdlPv@PLT
.L_42e094:

            mov ESI,32
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_42e0a1:

            mov RCX,QWORD PTR [RSP+184]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_42e7ef

            add RSP,200
.L_42e0c2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e0d0:

            mov ESI,8
.L_42e0d5:

            mov ECX,DWORD PTR [RSP+128]
            lea RAX,QWORD PTR [RDI+1]
            lea R8D,DWORD PTR [RDX-1]
            movdqa XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+48],RAX
            mov DWORD PTR [RSP+56],R8D
            and ECX,512
            movaps XMMWORD PTR [RSP+80],XMM0
            je .L_42e12c

            xor ECX,ECX
            test R8D,R8D
            je .L_42e123

            cmp BYTE PTR [RDI+1],63
            jne .L_42e123

            lea RAX,QWORD PTR [RDI+2]
            sub EDX,2
            mov ECX,1
            mov DWORD PTR [RSP+56],EDX
            mov QWORD PTR [RSP+48],RAX
.L_42e123:

            test R10D,R10D
            jg .L_42e6b4
.L_42e12c:

            sub RAX,RDI
            mov RDX,R13
            mov RDI,RBP
            mov DWORD PTR [RSP+88],EAX
            call .L_42bfc0

            test AL,AL
            je .L_42e06e

            mov EDX,DWORD PTR [RSP+56]
            mov R11,QWORD PTR [RSP+80]
            mov R10D,DWORD PTR [RSP+88]
            test EDX,EDX
            jg .L_42dfe0

            nop
            nop
            nop
            nop
.L_42e160:

            mov RDI,RBP
            call .L_42c720

            mov R12,RAX
            jmp .L_42e071
.L_42e170:

            mov ESI,7
            jmp .L_42e0d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e180:

            mov RDI,RBP
            call .L_42c660

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e190:

            test AL,AL
            je .L_42e06e

            mov EAX,DWORD PTR [RSP+56]
            add QWORD PTR [RSP+48],1
            xor R10D,R10D
            xor R11D,R11D
            lea EDX,DWORD PTR [RAX-1]
            mov DWORD PTR [RSP+56],EDX
            jmp .L_42dfd8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e1b8:

            mov EAX,DWORD PTR [RSP+128]
            test AH,2
            je .L_42e1d3

            cmp EDX,1
            je .L_42e1d3

            cmp BYTE PTR [RDI+1],63
            je .L_42e652
.L_42e1d3:

            test AH,16
            je .L_42e3b8

            mov RDI,RBP
            call .L_4297a0

            jmp .L_42e190
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e1f0:

            mov RDI,RBP
            call .L_4296a0

            jmp .L_42e190
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e200:

            mov RDI,RBP
            call .L_42c460

            jmp .L_42e190
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e210:

            movdqa XMM0,XMMWORD PTR [RSP+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            cmp BYTE PTR [RDI],123
            je .L_42e578
.L_42e229:

            mov ESI,123
            mov RDI,RBP
            call .L_4298b0

            jmp .L_42e190
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e240:

            mov RDI,RBP
            call .L_429660

            jmp .L_42e190
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e250:

            mov ESI,DWORD PTR [RSP+128]
            test ESI,256
            je .L_42e280

            cmp EDX,1
            je .L_42e280

            movzx EAX,BYTE PTR [RDI+1]
            mov ECX,EAX
            and ECX,4294967263
            cmp CL,66
            je .L_42e490

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e280:

            test ESI,512
            jne .L_42e3e0

            cmp EDX,1
            je .L_42e2a0

            movzx EAX,BYTE PTR [RDI+1]
.L_42e295:

            and EAX,4294967263
            cmp AL,80
            je .L_42e4c0
.L_42e2a0:

            mov RDI,R14
            call .L_429a30

            test RAX,RAX
            mov R15,RAX
            je .L_42e550

            mov EAX,DWORD PTR [RSP+128]
            mov EDI,40
            and EAX,4294967294
            mov DWORD PTR [RSP+8],EAX
            call _Znwm@PLT
.L_42e2cc:

            mov EDX,DWORD PTR [RSP+8]
            mov ESI,20
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
.L_42e2dd:

            call .L_40c5b0
.L_42e2e2:

            mov EDI,64
.L_42e2e7:

            call _Znwm@PLT
.L_42e2ec:

            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
.L_42e2f4:

            call .L_40ce10
.L_42e2f9:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R15
            mov EDX,DWORD PTR [R15+8]
            mov ECX,DWORD PTR [RSP+128]
            mov QWORD PTR [RAX+32],RDI
.L_42e315:

            call .L_42d5c0

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_4294f0

            jmp .L_42e356
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e330:

            mov RCX,R12
            mov RDX,R13
            mov RSI,R14
            mov RDI,RBP
            call .L_42da30

            test AL,AL
            je .L_42e06e

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,RBP
            call .L_4294f0
.L_42e356:

            test AL,AL
            je .L_42e06e

            mov EDX,DWORD PTR [RSP+56]
.L_42e362:

            xor R10D,R10D
            xor R11D,R11D
            jmp .L_42dfd8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e370:

            mov ESI,9
            jmp .L_42e0d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e380:

            mov RDI,RBP
            call .L_4296e0

            jmp .L_42e190
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e390:

            mov RDX,R12
            mov RSI,R14
            mov RDI,R13
            call .L_428d80

            test EAX,EAX
            js .L_42e06e
.L_42e3a6:

            mov ESI,DWORD PTR [RSP+80]
            mov RDI,RBP
            call .L_4298b0

            jmp .L_42e356
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e3b8:

            mov RSI,R13
            mov RDI,RBP
            mov QWORD PTR [RSP+80],0
            mov DWORD PTR [RSP+88],0
            call .L_429800

            jmp .L_42e190
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e3e0:

            cmp EDX,1
            je .L_42e2a0

            movzx EAX,BYTE PTR [RDI+1]
            cmp AL,65
            je .L_42e662

            cmp AL,122
            je .L_42e6a2

            cmp AL,67
            je .L_42e6ce

            cmp AL,81
            jne .L_42e295

            sub EDX,2
            add RDI,2
            test EDX,EDX
            mov QWORD PTR [RSP+48],RDI
            mov DWORD PTR [RSP+56],EDX
            jne .L_42e466

            jmp .L_42e362
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e430:

            mov RDX,R12
            mov RSI,R14
            mov RDI,R13
            call .L_428d80

            test EAX,EAX
            js .L_42e06e

            mov ESI,DWORD PTR [RSP+80]
            mov RDI,RBP
            call .L_4298b0

            test AL,AL
            je .L_42e06e

            mov EDX,DWORD PTR [RSP+56]
            test EDX,EDX
            jle .L_42e362
.L_42e466:

            cmp EDX,1
            je .L_42e430

            mov RAX,QWORD PTR [RSP+48]
            cmp BYTE PTR [RAX],92
            jne .L_42e430

            cmp BYTE PTR [RAX+1],69
            jne .L_42e430

            add RAX,2
            sub EDX,2
            mov QWORD PTR [RSP+48],RAX
            mov DWORD PTR [RSP+56],EDX
            jmp .L_42e362
.L_42e490:

            xor ESI,ESI
            cmp AL,98
            mov RDI,RBP
            sete SIL
            call .L_429680
.L_42e4a0:

            test AL,AL
            je .L_42e06e

            mov EAX,DWORD PTR [RSP+56]
            add QWORD PTR [RSP+48],2
            lea EDX,DWORD PTR [RAX-2]
            mov DWORD PTR [RSP+56],EDX
            jmp .L_42e362
          .byte 0x66
          .byte 0x90
.L_42e4c0:

            and ESI,4294967294
            mov EDI,40
            mov DWORD PTR [RSP+8],ESI
            call _Znwm@PLT
.L_42e4d1:

            mov EDX,DWORD PTR [RSP+8]
            mov ESI,20
            mov RDI,RAX
            mov R15,RAX
.L_42e4e0:

            call .L_40c5b0
.L_42e4e5:

            mov EDI,64
.L_42e4ea:

            call _Znwm@PLT
.L_42e4ef:

            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
.L_42e4f7:

            call .L_40ce10
.L_42e4fc:

            mov ESI,DWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+8]
            test ESI,1024
            mov QWORD PTR [R15+32],RDX
            je .L_42e533

            mov RCX,R12
            mov RDI,R14
.L_42e51a:

            call .L_42d7e0

            cmp EAX,1
            je .L_42e6e0

            jb .L_42e674

            cmp EAX,2
            jne .L_42e53b
.L_42e533:

            mov RDI,R15
            call .L_40f010
.L_42e53b:

            mov ESI,DWORD PTR [RSP+128]
            jmp .L_42e2a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e550:

            mov ECX,DWORD PTR [RSP+172]
            mov RDX,R12
            mov RSI,R13
            mov RDI,R14
            call .L_42a170

            test AL,AL
            jne .L_42e3a6

            jmp .L_42e06e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e578:

            mov RSI,QWORD PTR [RSP+24]
            add RDI,1
            sub EDX,1
            mov QWORD PTR [RSP+80],RDI
            mov RDI,R13
            mov DWORD PTR [RSP+88],EDX
            call .L_428ec0

            test AL,AL
            mov R15D,EAX
            je .L_42e229

            mov ESI,DWORD PTR [RSP+88]
            test ESI,ESI
            je .L_42e229

            mov RDI,QWORD PTR [RSP+80]
            cmp BYTE PTR [RDI],44
            je .L_42e6ed

            mov EAX,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+44],EAX
.L_42e5c2:

            cmp BYTE PTR [RDI],125
            jne .L_42e229

            mov R8D,DWORD PTR [RSP+128]
            lea RAX,QWORD PTR [RDI+1]
            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+80],RAX
            mov DWORD PTR [RSP+88],ECX
            and R8D,512
            mov QWORD PTR [RSP+48],RAX
            mov DWORD PTR [RSP+56],ECX
            je .L_42e688

            test ECX,ECX
            mov RDX,RAX
            jle .L_42e609

            cmp BYTE PTR [RAX],63
            je .L_42e68d
.L_42e609:

            xor R15D,R15D
.L_42e60c:

            test R10D,R10D
            jg .L_42e740

            movzx R8D,R15B
.L_42e619:

            sub RDX,QWORD PTR [RSP+64]
            mov ESI,DWORD PTR [RSP+40]
            lea RCX,QWORD PTR [RSP+64]
            mov RDI,RBP
            mov DWORD PTR [RSP+72],EDX
            mov EDX,DWORD PTR [RSP+44]
            call .L_42c0a0

            test AL,AL
            je .L_42e06e

            mov R11,QWORD PTR [RSP+64]
            mov R10D,DWORD PTR [RSP+72]
            mov EDX,DWORD PTR [RSP+56]
            jmp .L_42dfd8
.L_42e652:

            mov RSI,R14
            mov RDI,RBP
            call .L_42a670

            jmp .L_42e356
.L_42e662:

            mov ESI,18
            mov RDI,RBP
            call .L_429610

            jmp .L_42e4a0
.L_42e674:

            mov RSI,R15
            mov RDI,RBP
            call .L_4294f0

            jmp .L_42e356
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e688:

            mov RDX,RAX
            jmp .L_42e619
.L_42e68d:

            lea RDX,QWORD PTR [RDI+2]
            sub ESI,2
            mov DWORD PTR [RSP+56],ESI
            mov QWORD PTR [RSP+48],RDX
            jmp .L_42e60c
.L_42e6a2:

            mov ESI,19
            mov RDI,RBP
            call .L_429610

            jmp .L_42e4a0
.L_42e6b4:

            sub RAX,R11
            mov DWORD PTR [R12],10
            mov QWORD PTR [R12+8],R11
            mov DWORD PTR [R12+16],EAX
            jmp .L_42e06e
.L_42e6ce:

            mov ESI,13
            mov RDI,RBP
            call .L_429610

            jmp .L_42e4a0
.L_42e6e0:

            mov RDI,R15
            call .L_40f010
.L_42e6e8:

            jmp .L_42e06e
.L_42e6ed:

            sub ESI,1
            lea RAX,QWORD PTR [RDI+1]
            test ESI,ESI
            mov DWORD PTR [RSP+88],ESI
            mov QWORD PTR [RSP+80],RAX
            je .L_42e229

            cmp BYTE PTR [RDI+1],125
            je .L_42e75a

            lea RSI,QWORD PTR [RSP+44]
            mov RDI,R13
            call .L_428ec0

            test AL,AL
            je .L_42e229

            mov ESI,DWORD PTR [RSP+88]
            test ESI,ESI
            je .L_42e229

            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42e5c2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e740:

            sub RDX,R11
            mov DWORD PTR [R12],10
            mov QWORD PTR [R12+8],R11
            mov DWORD PTR [R12+16],EDX
            jmp .L_42e06e
.L_42e75a:

            mov DWORD PTR [RSP+44],4294967295
            mov RDI,RAX
            jmp .L_42e5c2
.L_42e76a:

            mov ESI,40
            mov RDI,R15
            mov RBX,RAX
            call _ZdlPvm@PLT
.L_42e77a:

            mov RDI,RBP
            call .L_429060

            mov RBP,QWORD PTR [RSP+120]
            test RBP,RBP
            je .L_42e7ab

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_42e79e

            call _ZdlPv@PLT
.L_42e79e:

            mov ESI,32
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_42e7ab:

            mov RDI,RBX
.L_42e7ae:

            call _Unwind_Resume@PLT
.L_42e7b3:

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,64
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_42e77a
.L_42e7c7:

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,40
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_42e77a
.L_42e7db:

            mov RDI,QWORD PTR [RSP+16]
            mov ESI,64
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_42e77a
.L_42e7ef:

            call __stack_chk_fail@PLT
.L_42e7f4:

            mov RBX,RAX
            jmp .L_42e77a
.L_42e7f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e800:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_42e80e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_42e82c

            test RDX,RDX
            jne .L_42e8b7
.L_42e82c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_42e880

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_42e8b0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_42e854:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42e8c3

            add RSP,16
.L_42e874:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e880:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_42e899:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_42e854
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e8b0:

            test RBX,RBX
            je .L_42e854

            jmp .L_42e899
.L_42e8b7:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_42e8c3:

            call __stack_chk_fail@PLT
.L_42e8c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e8d0:

            push R15
            push R14
            mov EDX,1
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_42e8e6:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI]
            mov ECX,EAX
            and ECX,7
            shl RDX,CL
            test DL,151
            jne .L_42e93e

            test DL,72
            mov RBX,RSI
            je .L_42e970

            mov RDI,QWORD PTR [RDI+32]
            mov ESI,1
            jmp .L_42e925
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e920:

            test DL,72
            je .L_42e970
.L_42e925:

            shr EAX,3
            mov RDX,RSI
            lea RBX,QWORD PTR [RDI+RAX*8]
            mov EAX,DWORD PTR [RBX]
            mov ECX,EAX
            and ECX,7
            shl RDX,CL
            test DL,151
            je .L_42e920
.L_42e93e:

            xor EAX,EAX
.L_42e940:

            mov RSI,QWORD PTR [RSP+504]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42ee70

            add RSP,520
.L_42e95e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e970:

            and EDX,32
            jne .L_42ebc0

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42ea09:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42ea0e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            lea R14,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],RAX
            add RAX,40
            mov QWORD PTR [RSP+128],R14
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBP+104]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+128],R15
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+200],RAX
            mov QWORD PTR [RSP+208],0
            mov BYTE PTR [RSP+216],0
.L_42eac8:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42eacd:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436947]
            mov EDX,11
.L_42eadd:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,242
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42eb19:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436928]
            mov EDX,30
.L_42eb29:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RBX]
            lea RDI,QWORD PTR [RBP+8]
            and ESI,7
            call _ZNSolsEi@PLT
.L_42eb3c:

            cmp BYTE PTR [RSP+112],0
            je .L_42ebd0
.L_42eb47:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+128],R15
            mov QWORD PTR [RSP+120],RAX
            add RAX,40
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_42eb7d

            call _ZdlPv@PLT
.L_42eb7d:

            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],R14
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RBX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RBX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_42e940
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ebc0:

            mov EAX,1
            jmp .L_42e940
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ebd0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBX,QWORD PTR [RSP+16]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_42eddf

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_42ecd0

            lea RDI,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_42ec41:

            call .L_42e800

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            add RAX,16
            cmp RSI,RAX
            je .L_42edf0

            lea RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_42ed9b

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_42edaa

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_42eca0:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_42ed61

            jmp .L_42ed66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ecd0:

            lea RDI,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+48],RAX
            call .L_42e800
.L_42ece8:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            add RAX,16
            cmp RSI,RAX
            je .L_42ee1d

            lea RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RSP+64]
            cmp RDI,RCX
            je .L_42edbd

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_42edcc

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_42ed42:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_42ed66
.L_42ed61:

            call _ZdlPv@PLT
.L_42ed66:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_42ed75:

            call write@PLT
.L_42ed7a:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov BYTE PTR [RSP+112],1
            cmp RDI,RBX
            je .L_42eb47

            call _ZdlPv@PLT

            jmp .L_42eb47
.L_42ed9b:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_42edaa:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42eca0
.L_42edbd:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_42edcc:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_42ed42
.L_42eddf:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,RBX
.L_42ede6:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42edeb:

            jmp .L_42ed66
.L_42edf0:

            test RDX,RDX
            je .L_42ee0a

            cmp RDX,1
            je .L_42ee5d

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_42ee0a:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42eca0
.L_42ee1d:

            test RDX,RDX
            je .L_42ee37

            cmp RDX,1
            je .L_42ee4a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_42ee37:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42ed42
.L_42ee4a:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42ee37
.L_42ee5d:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42ee0a
.L_42ee70:

            call __stack_chk_fail@PLT
.L_42ee75:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
.L_42ee84:

            call _Unwind_Resume@PLT
.L_42ee89:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42ee9c:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            cmp RDI,RBX
            je .L_42eeaf

            call _ZdlPv@PLT
.L_42eeaf:

            call _ZSt9terminatev@PLT
.L_42eeb4:

            jmp .L_42ee9c
.L_42eeb6:

            mov RBX,RAX
.L_42eeb9:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42eed2:

            mov RDI,QWORD PTR [RSP+200]
            mov RBX,RAX
            lea RAX,QWORD PTR [RBP+104]
            mov QWORD PTR [RSP+128],R15
            cmp RDI,RAX
            je .L_42eef3

            call _ZdlPv@PLT
.L_42eef3:

            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],R14
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
            jmp .L_42eeb9
.L_42ef1c:

            nop
            nop
            nop
            nop
.L_42ef20:

            shl ESI,3
            mov DWORD PTR [RDI+4],EDX
            mov DWORD PTR [RDI],ESI
            ret 
.L_42ef29:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ef30:

            lea R8D,DWORD PTR [R8*8+2]
            mov BYTE PTR [RDI+4],SIL
            mov BYTE PTR [RDI+5],DL
            mov BYTE PTR [RDI+6],CL
            mov DWORD PTR [RDI],R8D
            ret 
.L_42ef46:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ef50:

            lea EDX,DWORD PTR [RDX*8+3]
            mov DWORD PTR [RDI+4],ESI
            mov DWORD PTR [RDI],EDX
            ret 
.L_42ef5d:

            nop
            nop
            nop
.L_42ef60:

            lea EDX,DWORD PTR [RDX*8+4]
            mov DWORD PTR [RDI+4],ESI
            mov DWORD PTR [RDI],EDX
            ret 
.L_42ef6d:

            nop
            nop
            nop
.L_42ef70:

            mov EAX,DWORD PTR [RDI]
            mov DWORD PTR [RDI+4],ESI
            and EAX,4294967288
            or EAX,5
            mov DWORD PTR [RDI],EAX
            ret 
.L_42ef7e:

            nop
            nop
.L_42ef80:

            mov EAX,DWORD PTR [RDI]
            and EAX,4294967288
            or EAX,6
            mov DWORD PTR [RDI],EAX
            ret 
.L_42ef8b:

            nop
            nop
            nop
            nop
            nop
.L_42ef90:

            or DWORD PTR [RDI],7
            ret 
.L_42ef94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42efa0:

            push RBX
            lea RDX,QWORD PTR [RIP+.L_4369dc]
            mov RBX,RDI
            sub RSP,16
.L_42efaf:

            mov R9D,DWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,R9D
            and EAX,7
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42efd8:

            mov EDX,R9D
            lea RSI,QWORD PTR [RIP+.L_4369c2]
            xor EAX,EAX
            shr EDX,3
            call .L_414cf0

            nop
            nop
            nop
            nop
.L_42eff0:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_42f103

            add RSP,16
.L_42f00b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f010:

            mov ECX,DWORD PTR [RSI+4]
            mov EDX,R9D
            lea RSI,QWORD PTR [RIP+.L_436956]
            shr EDX,3
            xor EAX,EAX
            call .L_414cf0

            jmp .L_42eff0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f030:

            mov ECX,DWORD PTR [RSI+4]
            mov EDX,R9D
            lea RSI,QWORD PTR [RIP+.L_436965]
            shr EDX,3
            xor EAX,EAX
            call .L_414cf0

            jmp .L_42eff0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f050:

            cmp BYTE PTR [RSI+6],0
            movzx ECX,BYTE PTR [RSI+4]
            lea RAX,QWORD PTR [RIP+.L_4369d8]
            movzx R8D,BYTE PTR [RSI+5]
            lea RDX,QWORD PTR [RIP+.L_436953]
            lea RSI,QWORD PTR [RIP+.L_436979]
            cmove RDX,RAX
            shr R9D,3
            xor EAX,EAX
            call .L_414cf0

            jmp .L_42eff0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f090:

            mov EDX,DWORD PTR [RSI+4]
            mov ECX,R9D
            lea RSI,QWORD PTR [RIP+.L_436992]
            shr ECX,3
            xor EAX,EAX
            call .L_414cf0

            jmp .L_42eff0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f0b0:

            mov EDX,DWORD PTR [RSI+4]
            mov ECX,R9D
            lea RSI,QWORD PTR [RIP+.L_4369a3]
            shr ECX,3
            xor EAX,EAX
            call .L_414cf0

            jmp .L_42eff0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f0d0:

            mov EDX,DWORD PTR [RSI+4]
            lea RSI,QWORD PTR [RIP+.L_4369b8]
            xor EAX,EAX
            call .L_414cf0

            jmp .L_42eff0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f0f0:

            lea RSI,QWORD PTR [RIP+.L_4369cc]
            xor EAX,EAX
            call .L_414cf0

            jmp .L_42eff0
.L_42f103:

            call __stack_chk_fail@PLT
.L_42f108:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f110:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_42f121:

            mov BYTE PTR [RDI+16],0
            mov QWORD PTR [RDI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDI+16]
            mov RBX,QWORD PTR [RDX+16]
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RDI],RAX
            movsxd RAX,DWORD PTR [RDX]
            shl RAX,2
            test RAX,RAX
            je .L_42f298

            lea RAX,QWORD PTR [RSP+32]
            mov R15,RSI
            mov RBP,RDX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_42f1a9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f180:

            and EAX,7
            cmp EAX,1
            ja .L_42f195

            mov EAX,DWORD PTR [R12+4]
            test EAX,EAX
            jne .L_42f248
.L_42f195:

            movsxd RDX,EDX
            add RBX,4
            lea RAX,QWORD PTR [RSI+RDX*4]
            cmp RBX,RAX
            je .L_42f298
.L_42f1a9:

            movsxd RDX,DWORD PTR [RBX]
            mov RAX,QWORD PTR [R15+32]
            mov RDI,QWORD PTR [RSP+8]
            lea R12,QWORD PTR [RAX+RDX*8]
            mov R13,RDX
            mov RSI,R12
.L_42f1bf:

            call .L_42efa0
.L_42f1c4:

            mov RCX,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RIP+.L_4369d1]
            mov EDX,R13D
            mov RDI,R14
            xor EAX,EAX
.L_42f1d8:

            call .L_414ea0
.L_42f1dd:

            mov RDI,QWORD PTR [RSP+32]
            cmp RDI,QWORD PTR [RSP+16]
            je .L_42f1ee

            call _ZdlPv@PLT
.L_42f1ee:

            mov EAX,DWORD PTR [R12]
            mov EDX,DWORD PTR [RBP]
            mov RSI,QWORD PTR [RBP+16]
            mov ECX,EAX
            shr ECX,3
            test ECX,ECX
            je .L_42f180

            cmp ECX,DWORD PTR [RBP+4]
            jae .L_42f180

            mov R8,QWORD PTR [RBP+8]
            mov EDI,ECX
            lea R8,QWORD PTR [R8+RDI*4]
            movsxd RDI,DWORD PTR [R8]
            cmp EDI,EDX
            jae .L_42f229

            cmp ECX,DWORD PTR [RSI+RDI*4]
            je .L_42f180
.L_42f229:

            mov DWORD PTR [R8],EDX
            movsxd RAX,DWORD PTR [RBP]
            mov DWORD PTR [RSI+RAX*4],ECX
            mov EAX,DWORD PTR [RBP]
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBP],EDX
            mov EAX,DWORD PTR [R12]
            jmp .L_42f180
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f248:

            cmp EAX,DWORD PTR [RBP+4]
            jae .L_42f195

            mov RDI,QWORD PTR [RBP+8]
            movsxd RCX,EAX
            lea RDI,QWORD PTR [RDI+RCX*4]
            movsxd RCX,DWORD PTR [RDI]
            cmp ECX,EDX
            jae .L_42f26c

            cmp EAX,DWORD PTR [RSI+RCX*4]
            je .L_42f195
.L_42f26c:

            mov DWORD PTR [RDI],EDX
            movsxd RDX,DWORD PTR [RBP]
            add RBX,4
            mov DWORD PTR [RSI+RDX*4],EAX
            mov EAX,DWORD PTR [RBP]
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBP],EDX
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RSI+RDX*4]
            cmp RBX,RAX
            jne .L_42f1a9

            nop
            nop
            nop
            nop
            nop
            nop
.L_42f298:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_42f2ba

            add RSP,88
.L_42f2af:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42f2ba:

            call __stack_chk_fail@PLT
.L_42f2bf:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+32]
            mov RBX,RAX
            add RDX,16
            cmp RDI,RDX
            je .L_42f2da

            call _ZdlPv@PLT
.L_42f2da:

            mov RDI,QWORD PTR [R14]
            cmp QWORD PTR [RSP+24],RDI
            je .L_42f2e9

            call _ZdlPv@PLT
.L_42f2e9:

            mov RDI,RBX
.L_42f2ec:

            call _Unwind_Resume@PLT
.L_42f2f1:

            mov RBX,RAX
            jmp .L_42f2da
.L_42f2f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f300:

            push RBX
.L_42f301:

            mov BYTE PTR [RDI],0
            xor ESI,ESI
            mov BYTE PTR [RDI+1],0
            mov BYTE PTR [RDI+2],0
            mov RBX,RDI
            mov BYTE PTR [RDI+3],0
            mov QWORD PTR [RDI+4],0
            add RDI,40
            mov QWORD PTR [RDI-28],0
            mov QWORD PTR [RDI-20],0
            mov QWORD PTR [RDI-12],0
            mov DWORD PTR [RDI-4],0
            call pthread_rwlock_init@PLT

            test EAX,EAX
            jne .L_42f3b8

            mov QWORD PTR [RBX+96],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+104],0
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+416],0
            mov QWORD PTR [RBX+424],0
            mov QWORD PTR [RBX+432],0
            pop RBX
.L_42f3b7:

            ret 
.L_42f3b8:

            call abort@PLT
.L_42f3bd:

            nop
            nop
            nop
.L_42f3c0:

            push RBX
.L_42f3c1:

            mov RAX,QWORD PTR [RDI+120]
            mov RBX,RDI
            test RAX,RAX
            je .L_42f3ec

            mov RDX,QWORD PTR [RDI+96]
            test RDX,RDX
            je .L_42f3dc

            mov RDI,QWORD PTR [RDI+96]
            call RAX
.L_42f3dc:

            mov RAX,QWORD PTR [RBX+104]
            test RAX,RAX
            je .L_42f3ec

            mov RDI,QWORD PTR [RBX+104]
            call QWORD PTR [RBX+120]
.L_42f3ec:

            mov RDI,QWORD PTR [RBX+424]
            test RDI,RDI
            je .L_42f3fd

            call _ZdaPv@PLT
.L_42f3fd:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_42f40b

            call _ZdaPv@PLT
.L_42f40b:

            mov RDI,QWORD PTR [RBX+416]
            test RDI,RDI
            je .L_42f41c

            call _ZdaPv@PLT
.L_42f41c:

            lea RDI,QWORD PTR [RBX+40]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_42f42b

            pop RBX
.L_42f42a:

            ret 
.L_42f42b:

            call abort@PLT
.L_42f430:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,112
.L_42f43c:

            movsxd RBP,DWORD PTR [RSI+12]
            lea R12,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [R12+16]
            mov DWORD PTR [RSP+4],EBP
            mov QWORD PTR [RSP+32],RAX
            movabs RAX,2305843009213693950
            cmp RBP,RAX
            ja .L_42f623

            mov R14,RBP
            shl RBP,2
            mov RBX,RDI
            mov RDI,RBP
            mov R13,RSI
.L_42f494:

            call _Znam@PLT

            mov RDI,RBP
            mov QWORD PTR [RSP+8],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+16],RAX
            call .L_435550
.L_42f4b0:

            test EAX,EAX
            setne BYTE PTR [RSP+24]
            je .L_42f4f7

            test R14D,R14D
            jle .L_42f4f7

            lea EAX,DWORD PTR [R14-1]
            mov RSI,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f4e0:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_42f4e0
.L_42f4f7:

            mov EAX,DWORD PTR [R13+4]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            jne .L_42f5d8
.L_42f50a:

            lea RBP,QWORD PTR [RSP+64]
            mov R14,RSP
            mov RSI,R13
            mov RDX,R14
            mov RDI,RBP
.L_42f51b:

            call .L_42f110
.L_42f520:

            mov R8,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+32]
            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
.L_42f531:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_42f536:

            lea RDX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX],RDX
            mov RCX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RAX+16]
            cmp RCX,RDX
            je .L_42f610

            mov QWORD PTR [RBX],RCX
            mov RCX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBX+16],RCX
.L_42f558:

            mov RCX,QWORD PTR [RAX+8]
            add RBP,16
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RAX],RDX
            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX+8],0
            mov BYTE PTR [RAX+16],0
            cmp RDI,RBP
            je .L_42f582

            call _ZdlPv@PLT
.L_42f582:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_42f591

            call _ZdaPv@PLT
.L_42f591:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_42f5a0

            call _ZdaPv@PLT
.L_42f5a0:

            mov RDI,QWORD PTR [RSP+32]
            add R12,16
            cmp RDI,R12
            je .L_42f5b3

            call _ZdlPv@PLT
.L_42f5b3:

            mov RSI,QWORD PTR [RSP+104]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_42f61e

            add RSP,112
.L_42f5ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f5d8:

            cmp DWORD PTR [RSP+4],EAX
            jbe .L_42f50a

            mov RDX,QWORD PTR [RSP+8]
            movsxd RCX,EAX
            mov DWORD PTR [RDX+RCX*4],0
            movsxd RCX,DWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RDX+RCX*4],EAX
            add DWORD PTR [RSP],1
            jmp .L_42f50a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f610:

            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_42f558
.L_42f61e:

            call __stack_chk_fail@PLT
.L_42f623:

            call __cxa_throw_bad_array_new_length@PLT
.L_42f628:

            mov RBX,RAX
.L_42f62b:

            mov RDI,QWORD PTR [RSP+32]
            add R12,16
            cmp RDI,R12
            je .L_42f63e

            call _ZdlPv@PLT
.L_42f63e:

            mov RDI,RBX
.L_42f641:

            call _Unwind_Resume@PLT
.L_42f646:

            mov RDI,QWORD PTR [RSP+64]
            add RBP,16
            mov RBX,RAX
            cmp RDI,RBP
            je .L_42f65c

            call _ZdlPv@PLT
.L_42f65c:

            mov RDI,R14
            call .L_428ca0

            jmp .L_42f62b
.L_42f666:

            mov RBX,RAX
            jmp .L_42f65c
.L_42f66b:

            nop
            nop
            nop
            nop
            nop
.L_42f670:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_42f67a:

            movsxd RBX,DWORD PTR [RSI+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movabs RAX,2305843009213693950
            cmp RBX,RAX
            mov DWORD PTR [RSP+4],EBX
            ja .L_42f7a4

            mov R12,RBX
            shl RBX,2
            mov R13,RDI
            mov RDI,RBX
            mov RBP,RSI
.L_42f6b5:

            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+16],RAX
            call .L_435550
.L_42f6d1:

            test EAX,EAX
            setne BYTE PTR [RSP+24]
            je .L_42f717

            test R12D,R12D
            jle .L_42f717

            lea EAX,DWORD PTR [R12-1]
            mov RSI,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f700:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_42f700
.L_42f717:

            mov EAX,DWORD PTR [RBP+8]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            jne .L_42f778
.L_42f725:

            mov RBX,RSP
            mov RSI,RBP
            mov RDI,R13
            mov RDX,RBX
.L_42f731:

            call .L_42f110
.L_42f736:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_42f745

            call _ZdaPv@PLT
.L_42f745:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_42f754

            call _ZdaPv@PLT
.L_42f754:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_42f79f

            add RSP,56
.L_42f76b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f778:

            cmp DWORD PTR [RSP+4],EAX
            jbe .L_42f725

            mov RDX,QWORD PTR [RSP+8]
            movsxd RCX,EAX
            mov DWORD PTR [RDX+RCX*4],0
            movsxd RCX,DWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RDX+RCX*4],EAX
            add DWORD PTR [RSP],1
            jmp .L_42f725
.L_42f79f:

            call __stack_chk_fail@PLT
.L_42f7a4:

            call __cxa_throw_bad_array_new_length@PLT
.L_42f7a9:

            mov RBP,RAX
            mov RDI,RBX
            call .L_428ca0

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42f7bc:

            nop
            nop
            nop
            nop
.L_42f7c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_42f7ce:

            movsxd RBX,DWORD PTR [RDI+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movabs RAX,2305843009213693950
            cmp RBX,RAX
            mov DWORD PTR [RSP+4],EBX
            ja .L_42fc57

            mov R12,RBX
            shl RBX,2
            mov RBP,RDI
            mov RDI,RBX
.L_42f806:

            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+16],RAX
            call .L_435550
.L_42f822:

            test EAX,EAX
            setne BYTE PTR [RSP+24]
            je .L_42f8b8

            test R12D,R12D
            mov RBX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            jle .L_42f867

            lea EAX,DWORD PTR [R12-1]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
.L_42f850:

            mov DWORD PTR [RBX+RAX*1],2880154539
            mov DWORD PTR [RDI+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_42f850
.L_42f867:

            mov EAX,DWORD PTR [RBP+4]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            jne .L_42f8d0
.L_42f875:

            test RDI,RDI
            je .L_42f87f

            call _ZdaPv@PLT
.L_42f87f:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_42f88e

            call _ZdaPv@PLT
.L_42f88e:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42fc5c

            add RSP,56
.L_42f8a6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f8b8:

            mov EAX,DWORD PTR [RBP+4]
            mov RBX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            je .L_42f875
.L_42f8d0:

            cmp DWORD PTR [RSP+4],EAX
            jbe .L_42f9d6

            movsxd RDX,EAX
            mov DWORD PTR [RDI+RDX*4],0
            movsxd RDX,DWORD PTR [RSP]
            mov DWORD PTR [RBX+RDX*4],EAX
            mov EAX,DWORD PTR [RSP]
            lea R11D,DWORD PTR [RAX+1]
            movsxd RAX,R11D
            mov DWORD PTR [RSP],R11D
            shl RAX,2
            test RAX,RAX
            je .L_42f9c4

            mov R9,RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f910:

            movsxd RAX,DWORD PTR [R9]
            mov RSI,QWORD PTR [RBP+32]
            lea R10,QWORD PTR [RSI+RAX*8]
            mov R8D,DWORD PTR [R10]
            mov EDX,R8D
            and R8D,7
            shr EDX,3
            test EDX,EDX
            jne .L_42f945

            jmp .L_42faf0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f938:

            shr EAX,3
            test EAX,EAX
            mov EDX,EAX
            je .L_42faf0
.L_42f945:

            movsxd RAX,EDX
            mov EAX,DWORD PTR [RSI+RAX*8]
            mov ECX,EAX
            and ECX,7
            cmp ECX,6
            je .L_42f938

            shl EDX,3
            or R8D,EDX
            mov EAX,R8D
            mov DWORD PTR [R10],R8D
            shr EAX,3
            cmp EAX,DWORD PTR [RSP+4]
            jae .L_42faf3

            movsxd RDX,EAX
            lea RCX,QWORD PTR [RDI+RDX*4]
            movsxd RDX,DWORD PTR [RCX]
            cmp EDX,R11D
            jae .L_42f986

            cmp EAX,DWORD PTR [RBX+RDX*4]
            je .L_42faf3
.L_42f986:

            mov DWORD PTR [RCX],R11D
            movsxd RDX,DWORD PTR [RSP]
            mov DWORD PTR [RBX+RDX*4],EAX
            mov EAX,DWORD PTR [RSP]
            lea R11D,DWORD PTR [RAX+1]
            mov DWORD PTR [RSP],R11D
            mov R8D,DWORD PTR [R10]
            and R8D,7
            je .L_42fb01

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f9b0:

            movsxd RAX,R11D
            add R9,4
            lea RAX,QWORD PTR [RBX+RAX*4]
            cmp R9,RAX
            jne .L_42f910
.L_42f9c4:

            mov EAX,DWORD PTR [RBP+4]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            je .L_42f875
.L_42f9d6:

            cmp DWORD PTR [RSP+4],EAX
            jbe .L_42f875

            movsxd RDX,EAX
            mov DWORD PTR [RDI+RDX*4],0
            movsxd RDX,DWORD PTR [RSP]
            mov DWORD PTR [RBX+RDX*4],EAX
            mov EAX,DWORD PTR [RSP]
            lea ECX,DWORD PTR [RAX+1]
            movsxd RAX,ECX
            mov DWORD PTR [RSP],ECX
            shl RAX,2
            test RAX,RAX
            je .L_42f875

            mov RSI,RBX
            jmp .L_42fa8d
          .byte 0x90
.L_42fa10:

            test AL,7
            jne .L_42fa70

            movsxd RCX,DWORD PTR [R12+4]
            test ECX,ECX
            mov RDX,RCX
            jne .L_42fb80

            xor ECX,ECX
.L_42fa26:

            mov RDX,QWORD PTR [RBP+32]
            shr EAX,3
            lea R14,QWORD PTR [RDX+RAX*8]
            lea R15,QWORD PTR [RDX+RCX*8]
            mov EAX,DWORD PTR [R14]
            mov EDX,EAX
            and EDX,7
            cmp EDX,2
            jne .L_42fa4e

            shr EAX,3
            cmp R13D,EAX
            je .L_42fbe0
.L_42fa4e:

            mov RSI,R14
            mov RDI,RBP
.L_42fa54:

            call .L_42e8d0

            test AL,AL
            je .L_42fa70

            mov EAX,DWORD PTR [R15]
            mov EDX,EAX
            and EDX,7
            cmp EDX,2
            je .L_42fc20

            nop
            nop
.L_42fa70:

            movsxd RAX,DWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+16]
            add RBX,4
            mov RCX,RAX
            lea RAX,QWORD PTR [RSI+RAX*4]
            cmp RBX,RAX
            je .L_42fbd0
.L_42fa8d:

            movsxd RDX,DWORD PTR [RBX]
            mov RAX,QWORD PTR [RBP+32]
            lea R12,QWORD PTR [RAX+RDX*8]
            mov R13,RDX
            mov EAX,DWORD PTR [R12]
            mov EDX,EAX
            shr EDX,3
            test EDX,EDX
            je .L_42fa10

            cmp EDX,DWORD PTR [RSP+4]
            jae .L_42fa10

            mov R8,QWORD PTR [RSP+8]
            mov EDI,EDX
            lea R8,QWORD PTR [R8+RDI*4]
            movsxd RDI,DWORD PTR [R8]
            cmp EDI,ECX
            jae .L_42fad1

            cmp EDX,DWORD PTR [RSI+RDI*4]
            je .L_42fa10
.L_42fad1:

            mov DWORD PTR [R8],ECX
            movsxd RAX,DWORD PTR [RSP]
            mov DWORD PTR [RSI+RAX*4],EDX
            add DWORD PTR [RSP],1
            mov EAX,DWORD PTR [R12]
            jmp .L_42fa10
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42faf0:

            mov DWORD PTR [R10],R8D
.L_42faf3:

            and R8D,7
            mov R11D,DWORD PTR [RSP]
            jne .L_42f9b0
.L_42fb01:

            mov EAX,DWORD PTR [R10+4]
            test EAX,EAX
            je .L_42fb70

            mov RSI,QWORD PTR [RBP+32]
            jmp .L_42fb19
          .byte 0x90
.L_42fb10:

            mov EAX,EDX
            shr EAX,3
            test EAX,EAX
            je .L_42fb70
.L_42fb19:

            movsxd RDX,EAX
            mov EDX,DWORD PTR [RSI+RDX*8]
            mov ECX,EDX
            and ECX,7
            cmp ECX,6
            je .L_42fb10

            cmp DWORD PTR [RSP+4],EAX
            mov DWORD PTR [R10+4],EAX
            jbe .L_42f9b0

            movsxd RDX,EAX
            lea RCX,QWORD PTR [RDI+RDX*4]
            movsxd RDX,DWORD PTR [RCX]
            cmp EDX,R11D
            jae .L_42fb4f

            cmp DWORD PTR [RBX+RDX*4],EAX
            je .L_42f9b0
.L_42fb4f:

            mov DWORD PTR [RCX],R11D
            movsxd RDX,DWORD PTR [RSP]
            mov DWORD PTR [RBX+RDX*4],EAX
            mov EAX,DWORD PTR [RSP]
            lea R11D,DWORD PTR [RAX+1]
            mov DWORD PTR [RSP],R11D
            jmp .L_42f9b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fb70:

            mov DWORD PTR [R10+4],0
            jmp .L_42f9b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fb80:

            cmp ECX,DWORD PTR [RSP+4]
            jae .L_42fa26

            mov RDI,QWORD PTR [RSP+8]
            mov R9D,DWORD PTR [RSP]
            lea R8,QWORD PTR [RDI+RCX*4]
            movsxd RDI,DWORD PTR [R8]
            cmp EDI,R9D
            jae .L_42fba8

            cmp ECX,DWORD PTR [RSI+RDI*4]
            je .L_42fa26
.L_42fba8:

            mov DWORD PTR [R8],R9D
            movsxd RAX,DWORD PTR [RSP]
            mov DWORD PTR [RSI+RAX*4],EDX
            add DWORD PTR [RSP],1
            mov EAX,DWORD PTR [R12]
            test AL,7
            jne .L_42fa70

            movsxd RCX,DWORD PTR [R12+4]
            jmp .L_42fa26
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42fbd0:

            mov RDI,QWORD PTR [RSP+8]
            jmp .L_42f875
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fbe0:

            cmp BYTE PTR [R14+4],0
            jne .L_42fa4e

            cmp BYTE PTR [R14+5],255
            jne .L_42fa4e

            mov RSI,R15
            mov RDI,RBP
            call .L_42e8d0
.L_42fc01:

            test AL,AL
            je .L_42fa4e
.L_42fc09:

            mov EAX,DWORD PTR [R12]
            and EAX,4294967288
            or EAX,1
            mov DWORD PTR [R12],EAX
            jmp .L_42fa70
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42fc20:

            shr EAX,3
            cmp R13D,EAX
            jne .L_42fa70

            cmp BYTE PTR [R15+4],0
            jne .L_42fa70

            cmp BYTE PTR [R15+5],255
            jne .L_42fa70

            jmp .L_42fc09
.L_42fc44:

            mov RBX,RAX
            mov RDI,RSP
            call .L_428ca0

            mov RDI,RBX
.L_42fc52:

            call _Unwind_Resume@PLT
.L_42fc57:

            call __cxa_throw_bad_array_new_length@PLT
.L_42fc5c:

            call __stack_chk_fail@PLT
.L_42fc61:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fc70:

            mov RDX,QWORD PTR [RDI]
            cmp RSI,RDX
            je .L_42fd10

            xor EAX,EAX
            movsxd RCX,DWORD PTR [RDI+8]
            cmp BYTE PTR [RSI-1],10
            sete AL
            add RCX,RDX
            cmp RSI,RCX
            je .L_42fd60

            movzx ECX,BYTE PTR [RSI]
            jae .L_42fcac
.L_42fc9a:

            cmp CL,10
            je .L_42fd90

            cmp RSI,RDX
            je .L_42fd2a
.L_42fcac:

            movzx EDI,BYTE PTR [RSI-1]
            mov EDX,ECX
            and EDX,4294967263
            sub EDX,65
            mov ESI,EDI
            and ESI,4294967263
            sub ESI,65
            cmp SIL,25
            jbe .L_42fcf0

            lea ESI,DWORD PTR [RDI-48]
            cmp SIL,9
            setbe SIL
            cmp DIL,95
            sete DIL
            or EDI,ESI
            cmp DL,25
            mov ESI,1
            ja .L_42fcfa
.L_42fce5:

            cmp SIL,DIL
            je .L_42fd44
.L_42fcea:

            or EAX,16
            ret 
          .byte 0x66
          .byte 0x90
.L_42fcf0:

            cmp DL,25
            mov EDI,1
            jbe .L_42fd44
.L_42fcfa:

            lea EDX,DWORD PTR [RCX-48]
            cmp DL,9
            setbe SIL
            cmp CL,95
            sete DL
            or ESI,EDX
            jmp .L_42fce5

            nop
            nop
.L_42fd10:

            movsxd RAX,DWORD PTR [RDI+8]
            add RAX,RSI
            cmp RSI,RAX
            je .L_42fd50

            movzx ECX,BYTE PTR [RSI]
            mov EAX,5
            jb .L_42fc9a
.L_42fd2a:

            mov EDX,ECX
            and EDX,4294967263
            sub EDX,65
            cmp DL,25
            jbe .L_42fcea

            lea EDX,DWORD PTR [RCX-48]
            cmp DL,9
            jbe .L_42fcea

            cmp CL,95
            je .L_42fcea
.L_42fd44:

            or EAX,32
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fd50:

            mov EAX,15
            or EAX,32
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fd60:

            movzx ECX,BYTE PTR [RSI-1]
            mov EDI,EAX
            or EDI,10
            mov EDX,ECX
            and EDX,4294967263
            sub EDX,65
            cmp DL,25
            jbe .L_42fd83

            lea EDX,DWORD PTR [RCX-48]
            cmp DL,9
            jbe .L_42fd83

            cmp CL,95
            jne .L_42fda0
.L_42fd83:

            or EAX,26
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fd90:

            or EAX,2
            cmp RSI,RDX
            jne .L_42fcac

            jmp .L_42fd44
          .byte 0x66
          .byte 0x90
.L_42fda0:

            mov EAX,EDI
            jmp .L_42fd44
.L_42fda4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fdb0:

            lea ECX,DWORD PTR [RSI-1]
            cmp ECX,254
            ja .L_42fdd0

            mov EAX,ECX
            mov ESI,1
            sar EAX,5
            shl ESI,CL
            cdqe 
            or DWORD PTR [RDI+RAX*4+128],ESI
.L_42fdd0:

            cmp EDX,255
            ja .L_42fdef

            mov EAX,EDX
            mov ESI,1
            mov ECX,EDX
            sar EAX,5
            shl ESI,CL
            cdqe 
            or DWORD PTR [RDI+RAX*4+128],ESI
.L_42fdef:

            ret 
.L_42fdf1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fe00:

            push RBX
.L_42fe01:

            xor EAX,EAX
            mov RBX,RDI
            xor ECX,ECX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fe10:

            test AL,31
            jne .L_42fe23

            mov EDX,EAX
            sar EDX,5
            movsxd RDX,EDX
            mov EDX,DWORD PTR [RBX+RDX*4+128]
.L_42fe23:

            mov ESI,EDX
            mov BYTE PTR [RBX+RAX*1+160],CL
            add RAX,1
            and ESI,1
            shr EDX,1
            add ECX,ESI
            cmp RAX,256
            jne .L_42fe10

            movzx EAX,BYTE PTR [RBX+415]
            add EAX,1
            mov DWORD PTR [RBX+20],EAX
            movsxd RDI,EAX
            call _Znam@PLT

            xor EDX,EDX
            mov QWORD PTR [RBX+416],RAX
            jmp .L_42fe67
          .byte 0x90
.L_42fe60:

            mov RAX,QWORD PTR [RBX+416]
.L_42fe67:

            movzx ECX,BYTE PTR [RBX+RDX*1+160]
            mov BYTE PTR [RAX+RCX*1],DL
            add RDX,1
            cmp RDX,256
            jne .L_42fe60

            pop RBX
.L_42fe80:

            ret 
.L_42fe81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fe90:

            mov RDI,RSI
            jmp .L_40fa90
.L_42fe98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fea0:

            cmp BYTE PTR [RSI+1],0
            je .L_42feb8

            mov BYTE PTR [RCX],1
            mov RDI,RSI
            jmp .L_40fa90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42feb8:

            xor EAX,EAX
            ret 
.L_42febb:

            nop
            nop
            nop
            nop
            nop
.L_42fec0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_42fece:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_42feec

            test RDX,RDX
            jne .L_42ff77
.L_42feec:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_42ff40

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_42ff70

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_42ff14:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ff83

            add RSP,16
.L_42ff34:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ff40:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_42ff59:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_42ff14
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ff70:

            test RBX,RBX
            je .L_42ff14

            jmp .L_42ff59
.L_42ff77:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_42ff83:

            call __stack_chk_fail@PLT
.L_42ff88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ff90:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,RDI
            mov EDI,40
            mov RBP,RSI
            sub RSP,8
.L_42ffa8:

            call _Znwm@PLT
.L_42ffad:

            mov EDX,R13D
            mov ESI,5
            mov RDI,RAX
            mov RBX,RAX
.L_42ffbb:

            call .L_40c5b0
.L_42ffc0:

            mov EDI,16
.L_42ffc5:

            call _Znam@PLT

            mov EDX,2
            mov QWORD PTR [RAX],R12
            mov QWORD PTR [RAX+8],RBP
            mov QWORD PTR [RBX+8],RAX
            mov WORD PTR [RBX+6],DX
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42ffec:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_430004:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430010:

            push RBP
            push RBX
            sub RSP,8
            mov RAX,QWORD PTR [RDI+24]
            mov EAX,DWORD PTR [RAX+4]
            test EAX,EAX
            je .L_430068

            cmp EAX,1114112
            je .L_430038

            add RSP,8
            pop RBX
            pop RBP
.L_43002e:

            jmp .L_40fa90
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430038:

            movzx EBP,WORD PTR [RDI+2]
            mov EDI,40
            call _Znwm@PLT
.L_430046:

            mov ESI,12
            mov RDI,RAX
            mov RBX,RAX
            mov EDX,EBP
.L_430053:

            call .L_40c5b0
.L_430058:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430068:

            movzx EBP,WORD PTR [RDI+2]
            mov EDI,40
.L_430071:

            call _Znwm@PLT
.L_430076:

            mov ESI,1
            mov RDI,RAX
            mov RBX,RAX
            mov EDX,EBP
.L_430083:

            call .L_40c5b0
.L_430088:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_430092:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_4300a5:

            call _Unwind_Resume@PLT
.L_4300aa:

            jmp .L_430092
.L_4300ac:

            nop
            nop
            nop
            nop
.L_4300b0:

            push R14
            push R13
            mov R13D,EDI
            push R12
            push RBP
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBX
            sub RSP,400
            mov RBX,RSP
            mov BYTE PTR [RSP],0
            lea RDI,QWORD PTR [RBX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+392],RAX
            xor EAX,EAX
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+344],0
            xor ESI,ESI
            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+336],0
            mov BYTE PTR [RSP+345],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+368],0
            mov QWORD PTR [RSP+376],0
            mov QWORD PTR [RSP+8],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R14
.L_43015e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_430163:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+8],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+120],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+80],16
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+104],0
            mov QWORD PTR [RSP+88],RAX
.L_4301f6:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4301fb:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435afd]
            mov EDX,14
.L_43020b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,492
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_430247:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435b0c]
            mov EDX,16
.L_430257:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,R13D
            call _ZNSolsEi@PLT
.L_430268:

            mov RDI,RBX
            call .L_410170

            call abort@PLT
.L_430275:

            mov R13,RAX
.L_430278:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_430289:

            call _Unwind_Resume@PLT
.L_43028e:

            mov RDI,RBX
            call .L_410170

            call abort@PLT
.L_43029b:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
.L_4302aa:

            call _Unwind_Resume@PLT
.L_4302af:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+8],RBP
            mov QWORD PTR [RSP+RAX*1+8],R14
            jmp .L_430278
.L_4302cb:

            nop
            nop
            nop
            nop
            nop
.L_4302d0:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_4302e8:

            lea RBX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+8],RSI
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_430391:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_430396:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_430453:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_430458:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436a50]
            mov EDX,15
.L_430468:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,161
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4304a4:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436a00]
            mov EDX,33
.L_4304b4:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4304b9:

            cmp BYTE PTR [RSP+128],0
            je .L_430570
.L_4304c7:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_4304f5

            call _ZdlPv@PLT
.L_4304f5:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,QWORD PTR [RSP+8]
.L_43053e:

            call .L_40fa90
.L_430543:

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43086e

            add RSP,536
.L_430561:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430570:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_430760

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_4306b0

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_4305e8:

            call .L_42fec0
.L_4305ed:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_430778

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_4307f0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_4307ff

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_43064c:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_430670
.L_43066b:

            call _ZdlPv@PLT
.L_430670:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_43067f:

            call write@PLT
.L_430684:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_4304c7

            call _ZdlPv@PLT

            jmp .L_4304c7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4306b0:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_4306ca:

            call .L_42fec0

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4307b8

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_430818

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_430827

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_43072e:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_43066b

            jmp .L_430670
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430760:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_43076e:

            jmp .L_430670
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430778:

            test RDX,RDX
            je .L_4307a0

            cmp RDX,1
            je .L_430858

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4307a0:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_43064c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4307b8:

            test RDX,RDX
            je .L_4307d8

            cmp RDX,1
            je .L_430840

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4307d8:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_43072e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4307f0:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_4307ff:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_43064c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430818:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_430827:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_43072e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430840:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4307d8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430858:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4307a0
.L_43086e:

            call __stack_chk_fail@PLT
.L_430873:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_43088b

            call _ZdlPv@PLT
.L_43088b:

            call _ZSt9terminatev@PLT
.L_430890:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RDX
.L_4308b7:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_4308cb:

            call _Unwind_Resume@PLT
.L_4308d0:

            jmp .L_430873
.L_4308d2:

            mov R13,RAX
            jmp .L_4308b7
.L_4308d7:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4308eb:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4308fe:

            nop
            nop
.L_430900:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,536
.L_430914:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI],21
            ja .L_430a58

            movzx EAX,BYTE PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_436aa4]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430948:

            xor EAX,EAX
.L_43094a:

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            jne .L_430f98

            add RSP,536
.L_430968:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430978:

            movzx EDX,WORD PTR [RDI+6]
            cmp DX,1
            jbe .L_430e00

            mov RBX,QWORD PTR [RDI+8]
.L_43098a:

            test DX,DX
            je .L_4309c2

            mov RAX,QWORD PTR [RBX]
            cmp BYTE PTR [RAX+1],0
            je .L_430948

            sub EDX,1
            lea RAX,QWORD PTR [RBX+8]
            lea RCX,QWORD PTR [RBX+RDX*8+8]
            jmp .L_4309bd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4309b0:

            mov RDX,QWORD PTR [RAX]
            add RAX,8
            cmp BYTE PTR [RDX+1],0
            je .L_430948
.L_4309bd:

            cmp RAX,RCX
            jne .L_4309b0
.L_4309c2:

            mov EAX,1
            jmp .L_43094a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4309d0:

            cmp WORD PTR [RDI+6],1
            mov RDX,QWORD PTR [RDI+8]
            jbe .L_4309de

            mov RDX,QWORD PTR [RDX]
.L_4309de:

            xor EAX,EAX
            cmp BYTE PTR [RDX+1],0
            je .L_43094a

            movzx ECX,BYTE PTR [RDX]
            mov EAX,1
            cmp CL,9
            ja .L_43094a

            mov EAX,1
            shl RAX,CL
            test EAX,902
            sete AL
            jmp .L_43094a
.L_430a10:

            cmp WORD PTR [RDI+6],1
            mov RAX,QWORD PTR [RDI+8]
            jbe .L_430a1e

            mov RAX,QWORD PTR [RAX]
.L_430a1e:

            cmp BYTE PTR [RAX+1],0
            setne AL
            jmp .L_43094a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430a30:

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_430e20

            mov EDX,DWORD PTR [RAX+8]
.L_430a40:

            test EDX,EDX
            setne AL
            cmp EDX,1114112
            setne DL
            and EAX,EDX
            jmp .L_43094a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430a58:

            lea RBP,QWORD PTR [RSP+128]
            mov BYTE PTR [RSP+128],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_430af1:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_430af6:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+232],0
            mov QWORD PTR [RSP+216],RAX
.L_430bb3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_430bb8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436a50]
            mov EDX,15
.L_430bc8:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,95
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_430c04:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436a28]
            mov EDX,35
.L_430c14:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx EAX,BYTE PTR [RBX]
            lea RSI,QWORD PTR [RSP+31]
            lea RDI,QWORD PTR [RBP+8]
            mov EDX,1
            mov BYTE PTR [RSP+31],AL
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_430c33:

            cmp BYTE PTR [RSP+128],0
            je .L_430cc8
.L_430c41:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+216]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_430c76

            call _ZdlPv@PLT
.L_430c76:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RSI
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_43094a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430cc8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBX,QWORD PTR [RSP+32]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_430e09

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            jbe .L_430e30

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
.L_430d3c:

            call .L_42fec0
.L_430d41:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_430ecd

            lea RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+112]
            cmp RDI,RAX
            je .L_430f2b

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
            je .L_430f3a

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RAX
.L_430d9b:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_430dbf
.L_430dba:

            call _ZdlPv@PLT
.L_430dbf:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_430dce:

            call write@PLT
.L_430dd3:

            mov RDI,QWORD PTR [RSP+32]
            add RBX,16
            mov BYTE PTR [RSP+128],1
            cmp RDI,RBX
            je .L_430c41

            call _ZdlPv@PLT

            jmp .L_430c41
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430e00:

            add RBX,8
            jmp .L_43098a
.L_430e09:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,RBX
.L_430e10:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            jmp .L_430dbf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430e20:

            mov RAX,QWORD PTR [RDI+24]
            mov EDX,DWORD PTR [RAX+4]
            jmp .L_430a40
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430e30:

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+64],RAX
            call .L_42fec0
.L_430e4b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_430efe

            lea RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+80]
            cmp RDI,RAX
            je .L_430f4d

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
            je .L_430f5c

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RAX
.L_430ea5:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            jne .L_430dba

            jmp .L_430dbf
.L_430ecd:

            test RDX,RDX
            je .L_430eeb

            cmp RDX,1
            je .L_430f6f

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
.L_430eeb:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_430d9b
.L_430efe:

            test RDX,RDX
            je .L_430f18

            cmp RDX,1
            je .L_430f85

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
.L_430f18:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_430ea5
.L_430f2b:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
.L_430f3a:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_430d9b
.L_430f4d:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
.L_430f5c:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_430ea5
.L_430f6f:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_430eeb
.L_430f85:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_430f18
.L_430f98:

            call __stack_chk_fail@PLT
.L_430f9d:

            mov RDI,QWORD PTR [RSP+32]
            add RBX,16
            cmp RDI,RBX
            je .L_430fb0

            call _ZdlPv@PLT
.L_430fb0:

            call _ZSt9terminatev@PLT
.L_430fb5:

            jmp .L_430f9d
.L_430fb7:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
.L_430fc5:

            call _Unwind_Resume@PLT
.L_430fca:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_430fde:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RSI
.L_431006:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_43101f:

            mov RBX,RAX
            jmp .L_431006
.L_431024:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431030:

            push R15
            push R14
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov R12,RDI
            mov EBX,ESI
            sub RSP,520
.L_431049:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp EDX,-1
            je .L_4313c8

            mov EAX,EDX
            mov EBP,EDX
            or EAX,ESI
            je .L_431378

            cmp ESI,1
            jne .L_43107f

            cmp EDX,1
            je .L_4315a0
.L_43107f:

            test EBX,EBX
            jg .L_431488

            cmp EBP,EBX
            jg .L_431608
.L_43108f:

            lea R14,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea RDI,QWORD PTR [R14+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+456],0
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R15-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R15
            lea RDI,QWORD PTR [R14+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_43111e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_431123:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R14+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+120],RAX
            add RAX,40
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R14+16]
            lea RDI,QWORD PTR [R14+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [R14+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_4311dd:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4311e2:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_436a50]
            mov EDX,15
.L_4311f2:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R14+8]
            mov ESI,371
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_43122e:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_436a60]
            mov EDX,17
.L_43123e:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+80]
            mov RSI,R12
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_4350e0
.L_431258:

            mov RDX,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [R14+8]
.L_431266:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_435733]
            mov EDX,1
            mov RDI,RAX
            mov R12,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,EBX
            mov RDI,R12
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435733]
            mov EDX,1
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,EBP
            mov RDI,RBX
            call _ZNSolsEi@PLT
.L_4312ad:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_4312c5

            call _ZdlPv@PLT
.L_4312c5:

            cmp BYTE PTR [RSP+112],0
            je .L_431640
.L_4312d0:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],RAX
            add RAX,40
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [R14+104]
            cmp RDI,RAX
            je .L_43130d

            call _ZdlPv@PLT
.L_43130d:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R14+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R15-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+RAX*1+120],RCX
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+232],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov EDI,40
.L_431357:

            call _Znwm@PLT
.L_43135c:

            mov EDX,R13D
            mov ESI,1
            mov RDI,RAX
            mov R14,RAX
.L_43136a:

            call .L_40c5b0
.L_43136f:

            jmp .L_431395
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431378:

            mov EDI,40
.L_43137d:

            call _Znwm@PLT
.L_431382:

            mov EDX,R13D
            mov ESI,2
            mov RDI,RAX
            mov R14,RAX
.L_431390:

            call .L_40c5b0
.L_431395:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_4318ce

            add RSP,520
.L_4313b6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4313c8:

            test ESI,ESI
            je .L_4315d0

            cmp ESI,1
            je .L_4315b0

            mov EDI,40
.L_4313de:

            call _Znwm@PLT
.L_4313e3:

            mov EDX,R13D
            mov ESI,5
            mov RDI,RAX
            mov R14,RAX
.L_4313f1:

            call .L_40c5b0
.L_4313f6:

            test EBX,EBX
            js .L_4318d3

            test EBX,4294901760
            jne .L_4318d3

            movsxd R15,EBX
            lea RAX,QWORD PTR [R15*8]
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
.L_43141d:

            call _Znam@PLT

            mov RBP,RAX
            mov QWORD PTR [R14+8],RAX
            lea RAX,QWORD PTR [R14+8]
            cmp BX,2
            mov WORD PTR [R14+6],BX
            cmovb RBP,RAX
            lea EAX,DWORD PTR [RBX-2]
            mov R15,RBP
            lea RBX,QWORD PTR [RBP+RAX*8+8]
            nop
            nop
            nop
.L_431448:

            mov RDI,R12
            add R15,8
            call .L_40fa90

            mov QWORD PTR [R15-8],RAX
            cmp RBX,R15
            jne .L_431448

            mov RDI,R12
            call .L_40fa90

            mov RCX,QWORD PTR [RSP+8]
            mov ESI,R13D
            mov RDI,RAX
            lea RBX,QWORD PTR [RBP+RCX*1-8]
            call .L_40c6f0

            mov QWORD PTR [RBX],RAX
            jmp .L_431395
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431488:

            mov EDI,40
            call _Znwm@PLT
.L_431492:

            mov EDX,R13D
            mov ESI,5
            mov RDI,RAX
            mov R14,RAX
.L_4314a0:

            call .L_40c5b0
.L_4314a5:

            test EBX,4294901760
            jne .L_4318d3

            cmp EBX,1
            je .L_4315f0

            movsxd RDI,EBX
            shl RDI,3
.L_4314c1:

            call _Znam@PLT

            cmp BX,1
            mov R15,RAX
            mov QWORD PTR [R14+8],RAX
            mov WORD PTR [R14+6],BX
            jbe .L_4315fa
.L_4314dc:

            lea EAX,DWORD PTR [RBX-1]
            mov DWORD PTR [RSP+8],EBX
            mov RBX,R15
            lea RAX,QWORD PTR [R15+RAX*8+8]
            mov R15,RAX
            nop
            nop
.L_4314f0:

            mov RDI,R12
            add RBX,8
            call .L_40fa90

            mov QWORD PTR [RBX-8],RAX
            cmp R15,RBX
            jne .L_4314f0

            mov EBX,DWORD PTR [RSP+8]
            cmp EBP,EBX
            jle .L_431395

            mov RDI,R12
            lea R15D,DWORD PTR [RBX+1]
            call .L_40fa90

            mov ESI,R13D
            mov RDI,RAX
            call .L_40c7d0

            cmp EBP,R15D
            mov RSI,RAX
            jle .L_43157d

            mov DWORD PTR [RSP+8],EBX
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431540:

            mov RDI,R12
            add R15D,1
            call .L_40fa90

            mov RSI,RBX
            mov EDX,R13D
            mov RDI,RAX
            call .L_42ff90

            mov ESI,R13D
            mov RDI,RAX
            call .L_40c7d0

            cmp EBP,R15D
            mov RBX,RAX
            jg .L_431540

            test R14,R14
            mov RSI,RAX
            mov EBX,DWORD PTR [RSP+8]
            je .L_431768
.L_43157d:

            mov RDI,R14
            mov EDX,R13D
            call .L_42ff90

            mov R14,RAX
.L_43158b:

            test R14,R14
            jne .L_431395

            jmp .L_43108f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4315a0:

            call .L_40fa90

            mov R14,RAX
            jmp .L_431395
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4315b0:

            call .L_40fa90

            mov ESI,R13D
            mov RDI,RAX
            call .L_40c6f0

            mov R14,RAX
            jmp .L_431395
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4315d0:

            call .L_40fa90

            mov ESI,R13D
            mov RDI,RAX
            call .L_40c760

            mov R14,RAX
            jmp .L_431395
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4315f0:

            mov EAX,1
            mov WORD PTR [R14+6],AX
.L_4315fa:

            lea R15,QWORD PTR [R14+8]
            jmp .L_4314dc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431608:

            mov RDI,R12
            lea R15D,DWORD PTR [RBX+1]
            call .L_40fa90

            mov ESI,R13D
            mov RDI,RAX
            call .L_40c7d0
.L_43161f:

            cmp EBP,R15D
            mov RSI,RAX
            jle .L_431768

            mov DWORD PTR [RSP+8],EBX
            xor R14D,R14D
            mov RBX,RAX
            jmp .L_431540
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431640:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            lea RBX,QWORD PTR [RSP+16]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_4317fa

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_431770

            mov RBP,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_4316af:

            call .L_42fec0
.L_4316b4:

            mov RSI,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            cmp RSI,RAX
            je .L_431839

            lea RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_431883

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_431892

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_431709:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_43172d
.L_431728:

            call _ZdlPv@PLT
.L_43172d:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_43173c:

            call write@PLT
.L_431741:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov BYTE PTR [RSP+112],1
            cmp RDI,RBX
            je .L_4312d0

            call _ZdlPv@PLT

            jmp .L_4312d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431768:

            mov R14,RSI
            jmp .L_43158b
.L_431770:

            lea RBP,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+48],RAX
.L_431781:

            call .L_42fec0

            mov RSI,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            cmp RSI,RAX
            je .L_43180b

            lea RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RSP+64]
            cmp RDI,RCX
            je .L_431866

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_431875

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_4317d7:

            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+48]
            cmp RDI,RBP
            jne .L_431728

            jmp .L_43172d
.L_4317fa:

            lea RSI,QWORD PTR [R14+88]
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_431806:

            jmp .L_43172d
.L_43180b:

            test RDX,RDX
            je .L_431829

            cmp RDX,1
            je .L_4318b8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_431829:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4317d7
.L_431839:

            test RDX,RDX
            je .L_431853

            cmp RDX,1
            je .L_4318a5

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_431853:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_431709
.L_431866:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_431875:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_4317d7
.L_431883:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_431892:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_431709
.L_4318a5:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_431853
.L_4318b8:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_431829
.L_4318ce:

            call __stack_chk_fail@PLT
.L_4318d3:

            mov EDI,EBX
.L_4318d5:

            call .L_4300b0
.L_4318da:

            mov RBX,RAX
.L_4318dd:

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+232],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4318fd:

            lea RDI,QWORD PTR [R14+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_431911:

            lea RDI,QWORD PTR [R14+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R15-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+RAX*1+120],RCX
            jmp .L_4318dd
.L_431934:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            cmp RDI,RBX
            je .L_431947

            call _ZdlPv@PLT
.L_431947:

            call _ZSt9terminatev@PLT
.L_43194c:

            mov RBX,RAX
            mov RDI,R14
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_431964:

            jmp .L_43194c
.L_431966:

            jmp .L_431934
.L_431968:

            jmp .L_43194c
.L_43196a:

            jmp .L_43194c
.L_43196c:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+80]
            mov RBX,RAX
            add RDX,16
            cmp RDI,RDX
            je .L_431987

            call _ZdlPv@PLT
.L_431987:

            mov RDI,R14
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_431997:

            mov RBX,RAX
            jmp .L_431987
.L_43199c:

            nop
            nop
            nop
            nop
.L_4319a0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,520
.L_4319b4:

            movzx R13D,BYTE PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp R13B,21
            ja .L_431be0

            lea RDI,QWORD PTR [RIP+.L_436afc]
            movzx ECX,R13B
            mov RBP,R8
            mov EAX,R13D
            movsxd RDX,DWORD PTR [RDI+RCX*4]
            add RDX,RDI
            jmp RDX
          .byte 0x90
.L_4319f0:

            mov RDI,RBP
.L_4319f3:

            call .L_40f010

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431a00:

            mov BYTE PTR [RBX+1],1
            mov RDI,RBX
            call .L_40fa90

            mov R12,RAX
.L_431a0f:

            mov RSI,QWORD PTR [RSP+504]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_432184

            add RSP,520
.L_431a30:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431a40:

            mov RDI,RSI
            call .L_430010

            mov R12,RAX
.L_431a4b:

            mov BYTE PTR [R12+1],1
            jmp .L_431a0f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431a58:

            movzx EAX,WORD PTR [RSI+6]
            lea RCX,QWORD PTR [RSI+8]
            cmp AX,1
            jbe .L_431a6a

            mov RCX,QWORD PTR [RSI+8]
.L_431a6a:

            test AX,AX
            je .L_431a00

            mov RDI,QWORD PTR [RCX]
            cmp RDI,QWORD PTR [RBP]
            jne .L_431e30

            sub EAX,1
            lea RSI,QWORD PTR [RAX*8+8]
            mov EAX,8
            jmp .L_431aa3
          .byte 0x66
          .byte 0x90
.L_431a90:

            mov RDX,QWORD PTR [RCX+RAX*1]
            add RAX,8
            cmp RDX,QWORD PTR [RBP+RAX*1-8]
            jne .L_431e30
.L_431aa3:

            cmp RSI,RAX
            jne .L_431a90

            mov R12D,1
            jmp .L_431ab9
.L_431ab0:

            mov RDI,QWORD PTR [RBP+R12*8]
            add R12,1
.L_431ab9:

            call .L_40f010

            movzx EAX,WORD PTR [RBX+6]
            cmp EAX,R12D
            jg .L_431ab0

            jmp .L_431a00
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431ad0:

            mov R12,QWORD PTR [R8]
            movzx ECX,BYTE PTR [R12]
            cmp CL,2
            je .L_431a0f

            cmp WORD PTR [RSI+6],1
            mov RDX,QWORD PTR [RSI+8]
            jbe .L_431aef

            mov RDX,QWORD PTR [RDX]
.L_431aef:

            cmp R12,RDX
            mov RDI,R12
            je .L_4319f3

            cmp AL,CL
            movzx EBP,WORD PTR [RBX+2]
            jne .L_431b0f

            cmp WORD PTR [R12+2],BP
            je .L_431a0f
.L_431b0f:

            mov EDI,40
            call _Znwm@PLT
.L_431b19:

            movzx EDX,BP
            mov ESI,R13D
            mov RDI,RAX
            mov RBX,RAX
.L_431b25:

            call .L_40c5b0
.L_431b2a:

            mov EAX,1
            mov QWORD PTR [RBX+8],R12
            mov BYTE PTR [RBX+1],1
            mov WORD PTR [RBX+6],AX
            mov R12,RBX
            jmp .L_431a0f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431b48:

            mov R12,QWORD PTR [R8]
            cmp BYTE PTR [R12],2
            je .L_431a0f

            movzx ECX,WORD PTR [RSI+2]
            mov EDX,DWORD PTR [RSI+24]
            mov RDI,R12
            mov ESI,DWORD PTR [RSI+28]
.L_431b63:

            call .L_431030

            mov RDI,R12
            mov RBX,RAX
            mov R12,RBX
            call .L_40f010

            mov BYTE PTR [RBX+1],1
            jmp .L_431a0f

            nop
.L_431b80:

            cmp WORD PTR [RSI+6],1
            mov RBP,QWORD PTR [R8]
            mov RAX,QWORD PTR [RSI+8]
            jbe .L_431b91

            mov RAX,QWORD PTR [RAX]
.L_431b91:

            cmp RBP,RAX
            je .L_4319f0

            movzx R13D,WORD PTR [RBX+2]
            mov EDI,40
            call _Znwm@PLT
.L_431ba9:

            mov ESI,11
            mov RDI,RAX
            mov R12,RAX
            mov EDX,R13D
.L_431bb7:

            call .L_40c5b0
.L_431bbc:

            mov EAX,DWORD PTR [RBX+24]
            mov EDX,1
            mov QWORD PTR [R12+8],RBP
            mov WORD PTR [R12+6],DX
            mov BYTE PTR [R12+1],1
            mov DWORD PTR [R12+24],EAX
            jmp .L_431a0f
          .byte 0x90
.L_431be0:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_431c70:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_431c75:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_431d2f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_431d34:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436a50]
            mov EDX,15
.L_431d44:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,291
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_431d80:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436a72]
            mov EDX,27
.L_431d90:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,BYTE PTR [RBX]
            lea RDI,QWORD PTR [RBP+8]
            call _ZNSolsEi@PLT
.L_431da1:

            cmp BYTE PTR [RSP+112],0
            je .L_431eb0
.L_431dac:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_431dde

            call _ZdlPv@PLT
.L_431dde:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_431e20:

            call .L_40fa90

            mov R12,RAX
            jmp .L_431a0f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431e30:

            movzx R14D,WORD PTR [RBX+2]
            mov EDI,40
            call _Znwm@PLT
.L_431e3f:

            mov ESI,R13D
            mov RDI,RAX
            mov R12,RAX
            mov EDX,R14D
.L_431e4b:

            call .L_40c5b0
.L_431e50:

            movzx R13D,WORD PTR [RBX+6]
            cmp R13W,1
            jbe .L_431ff0

            movzx EDI,R13W
            shl RDI,3
.L_431e68:

            call _Znam@PLT
.L_431e6d:

            movzx EDX,WORD PTR [RBX+6]
            mov QWORD PTR [R12+8],RAX
            mov WORD PTR [R12+6],R13W
.L_431e7c:

            test EDX,EDX
            je .L_431a4b

            sub EDX,1
            lea RSI,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431e98:

            mov RCX,QWORD PTR [RBP+RDX*1]
            mov QWORD PTR [RAX+RDX*1],RCX
            add RDX,8
            cmp RSI,RDX
            jne .L_431e98

            jmp .L_431a4b
          .byte 0x90
.L_431eb0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_432004

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_432018

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_431f29:

            call .L_42fec0
.L_431f2e:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4320b9

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_432117

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_432126

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RAX
.L_431f8c:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_431fb0
.L_431fab:

            call _ZdlPv@PLT
.L_431fb0:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_431fbf:

            call write@PLT
.L_431fc4:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_431dac

            call _ZdlPv@PLT

            jmp .L_431dac
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431ff0:

            movzx EDX,R13W
            mov WORD PTR [R12+6],R13W
            lea RAX,QWORD PTR [R12+8]
            jmp .L_431e7c
.L_432004:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
.L_43200c:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            jmp .L_431fb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432018:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
            call .L_42fec0
.L_432033:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4320ea

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_432139

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_432148

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RAX
.L_432091:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_431fab

            jmp .L_431fb0
.L_4320b9:

            test RDX,RDX
            je .L_4320d7

            cmp RDX,1
            je .L_43216e

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_4320d7:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_431f8c
.L_4320ea:

            test RDX,RDX
            je .L_432104

            cmp RDX,1
            je .L_43215b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_432104:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_432091
.L_432117:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_432126:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_431f8c
.L_432139:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_432148:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_432091
.L_43215b:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_432104
.L_43216e:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_4320d7
.L_432184:

            call __stack_chk_fail@PLT
.L_432189:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_4321a0

            call _ZdlPv@PLT
.L_4321a0:

            call _ZSt9terminatev@PLT
.L_4321a5:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_4321b8:

            call _Unwind_Resume@PLT
.L_4321bd:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4321d0:

            jmp .L_432189
.L_4321d2:

            mov RBX,RAX
            mov RDI,R12
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4321ea:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4321fe:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
.L_432220:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_432239:

            mov RBX,RAX
            jmp .L_432220
.L_43223e:

            jmp .L_4321d2
.L_432240:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_43224b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+1],0
            jne .L_4322c8

            lea RBP,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RIP+.L_6466f0]
            mov RDI,RBP
.L_432270:

            call .L_432a70
.L_432275:

            mov ECX,1
            xor EDX,EDX
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP+16],R12
            mov DWORD PTR [RSP+36],1000000
.L_43228f:

            call .L_433590
.L_432294:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+16],R12
            call .L_4332a0

            mov RAX,QWORD PTR [RSP+8]
.L_4322ab:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_4322cf

            add RSP,48
.L_4322bf:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4322c8:

            call .L_40fa90

            jmp .L_4322ab
.L_4322cf:

            call __stack_chk_fail@PLT
.L_4322d4:

            mov RBX,RAX
            mov RDI,RBP
            mov QWORD PTR [RSP+16],R12
            call .L_4332a0

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4322ec:

            nop
            nop
            nop
            nop
.L_4322f0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RDX,RCX
            mov R12,RDI
            mov RBP,RCX
            sub RSP,520
.L_43230d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
.L_432320:

            call .L_42de80

            test RAX,RAX
            je .L_432646

            mov RBX,RAX
            mov RDI,RAX
            call .L_432240

            mov RDI,RBX
            mov R14,RAX
            call .L_40f010

            test R14,R14
            je .L_4323e8

            lea RBX,QWORD PTR [RSP+112]
            mov RSI,R14
            mov RDI,RBX
            call .L_4350e0

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [R13]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_432698

            lea RCX,QWORD PTR [R13+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_432678

            test RDI,RDI
            mov RCX,QWORD PTR [R13+16]
            mov QWORD PTR [R13],RSI
            mov QWORD PTR [R13+8],RDX
            mov QWORD PTR [R13+16],RAX
            je .L_432684

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_4323b3:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            add RBX,16
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,RBX
            je .L_4323d2

            call _ZdlPv@PLT
.L_4323d2:

            mov RDI,R14
            call .L_40f010
.L_4323da:

            mov EAX,1
            jmp .L_432648
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4323e8:

            lea RBX,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R13
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_432477:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_43247c:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            lea RAX,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_432536:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_43253b:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436a50]
            mov EDX,15
.L_43254b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,28
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_432587:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436a8e]
            mov EDX,19
.L_432597:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            call .L_4143a0
.L_4325a8:

            cmp BYTE PTR [RSP+112],0
            je .L_4326d0
.L_4325b3:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+64]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_4325ec

            call _ZdlPv@PLT
.L_4325ec:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R13
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R14
            call _ZNSt8ios_baseD2Ev@PLT

            test RBP,RBP
            je .L_432646

            mov RAX,QWORD PTR [R12]
            mov DWORD PTR [RBP],1
            mov QWORD PTR [RBP+8],RAX
            mov EAX,DWORD PTR [R12+8]
            mov DWORD PTR [RBP+16],EAX
.L_432646:

            xor EAX,EAX
.L_432648:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4329ad

            add RSP,520
.L_432666:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432678:

            mov QWORD PTR [R13],RSI
            mov QWORD PTR [R13+8],RDX
            mov QWORD PTR [R13+16],RAX
.L_432684:

            lea RDI,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_4323b3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432698:

            test RDX,RDX
            je .L_4326ba

            cmp RDX,1
            jne .L_432810

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [R13]
.L_4326ba:

            mov QWORD PTR [R13+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_4323b3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4326d0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_4328d0

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_432828

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_432746:

            call .L_42fec0
.L_43274b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4328e2

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_432940

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_43294f

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RAX
.L_4327a9:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_4327cd
.L_4327c8:

            call _ZdlPv@PLT
.L_4327cd:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_4327dc:

            call write@PLT
.L_4327e1:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_4325b3

            call _ZdlPv@PLT

            jmp .L_4325b3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432810:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [R13]
            jmp .L_4326ba
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432828:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_432841:

            call .L_42fec0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_432913

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_432962

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_432971

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RAX
.L_4328a4:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_4327c8

            jmp .L_4327cd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4328d0:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4328dd:

            jmp .L_4327cd
.L_4328e2:

            test RDX,RDX
            je .L_432900

            cmp RDX,1
            je .L_432997

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_432900:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4327a9
.L_432913:

            test RDX,RDX
            je .L_43292d

            cmp RDX,1
            je .L_432984

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_43292d:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_4328a4
.L_432940:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_43294f:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_4327a9
.L_432962:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_432971:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4328a4
.L_432984:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_43292d
.L_432997:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_432900
.L_4329ad:

            call __stack_chk_fail@PLT
.L_4329b2:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_4329c9

            call _ZdlPv@PLT
.L_4329c9:

            call _ZSt9terminatev@PLT
.L_4329ce:

            jmp .L_4329b2
.L_4329d0:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
.L_4329de:

            call _Unwind_Resume@PLT
.L_4329e3:

            mov RBP,RAX
.L_4329e6:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4329ff:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_432a13:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R13
            mov QWORD PTR [RSP+RAX*1+120],RCX
            jmp .L_4329e6
.L_432a36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432a40:

            mov RAX,RDX
            ret 
.L_432a44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432a50:

            mov RAX,RSI
            ret 
.L_432a54:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432a60:

            mov RAX,RCX
            ret 
.L_432a64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432a70:

            lea RAX,QWORD PTR [RIP+.L_648da0]
            push R12
            push RBP
            push RBX
.L_432a7b:

            mov RBP,RDI
            mov QWORD PTR [RDI],RAX
            mov EDI,80
.L_432a86:

            call _Znwm@PLT
.L_432a8b:

            mov EDI,64
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov RBX,RAX
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov QWORD PTR [RAX+56],0
            mov QWORD PTR [RAX+64],0
            mov QWORD PTR [RAX+72],0
            mov QWORD PTR [RAX+8],8
.L_432ae2:

            call _Znwm@PLT
.L_432ae7:

            mov RCX,QWORD PTR [RBX+8]
            mov EDI,480
            mov QWORD PTR [RBX],RAX
            lea RDX,QWORD PTR [RCX-1]
            shr RDX,1
            lea R12,QWORD PTR [RAX+RDX*8]
.L_432afe:

            call _Znwm@PLT
.L_432b03:

            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [RBP+8],RBX
            mov BYTE PTR [RBP+16],0
            mov QWORD PTR [RBX+40],R12
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            mov QWORD PTR [RBX+32],RDX
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+64],RDX
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+48],RAX
            pop RBX
.L_432b37:

            pop RBP
            pop R12
            ret 
.L_432b3b:

            mov RBP,RAX
.L_432b3e:

            mov RDI,RBX
            mov ESI,80
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_432b4e:

            call _Unwind_Resume@PLT
.L_432b53:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_432b5b:

            call __cxa_rethrow@PLT
.L_432b60:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBP
            call __cxa_begin_catch@PLT

            mov RDI,QWORD PTR [RBX]
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
.L_432b87:

            call __cxa_rethrow@PLT
.L_432b8c:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            jmp .L_432b3e
.L_432b96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ba0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_432bb1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_432c14

            mov RDX,QWORD PTR [RAX+72]
            sub RDX,QWORD PTR [RAX+40]
            movabs RCX,-6148914691236517205
            sar RDX,3
            lea RSI,QWORD PTR [RDX+RDX*4-5]
            mov RDX,QWORD PTR [RAX+48]
            sub RDX,QWORD PTR [RAX+56]
            sar RDX,4
            imul RDX,RCX
            lea RSI,QWORD PTR [RDX+RSI*2]
            mov RDX,QWORD PTR [RAX+32]
            sub RDX,QWORD PTR [RAX+16]
            mov RAX,RDX
            sar RAX,4
            imul RAX,RCX
            add RSI,RAX
            jne .L_432c40
.L_432c14:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_433212

            add RSP,520
.L_432c32:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432c40:

            lea RBX,QWORD PTR [RSP+112]
            mov RBP,RDI
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_432cd3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_432cd8:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_432d92:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_432d97:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435d3a]
            mov EDX,18
.L_432da7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,147
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_432de3:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_435d4d]
            mov EDX,16
.L_432df3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_432df8:

            cmp BYTE PTR [RSP+112],0
            je .L_432f50
.L_432e03:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_432e35

            call _ZdlPv@PLT
.L_432e35:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            movabs R12,-6148914691236517205
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            nop
            nop
            nop
            nop
            nop
            nop
.L_432e90:

            mov RCX,QWORD PTR [RBX+72]
            mov RAX,RCX
            sub RAX,QWORD PTR [RBX+40]
            sar RAX,3
            lea RSI,QWORD PTR [RAX+RAX*4-5]
            mov RAX,RDX
            sub RAX,RDI
            sar RAX,4
            imul RAX,R12
            lea RSI,QWORD PTR [RAX+RSI*2]
            mov RAX,QWORD PTR [RBX+32]
            sub RAX,QWORD PTR [RBX+16]
            sar RAX,4
            imul RAX,R12
            add RSI,RAX
            je .L_432c14

            cmp RDX,RDI
            je .L_432f00
.L_432ed4:

            mov RDI,QWORD PTR [RDX-8]
            mov ESI,8
            call _ZdlPvm@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            cmp RDX,RDI
            je .L_432f10

            sub RDX,48
            mov QWORD PTR [RBX+48],RDX
            jmp .L_432e90
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432f00:

            mov RDX,QWORD PTR [RCX-8]
            add RDX,480
            jmp .L_432ed4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432f10:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBX+56],RAX
            add RAX,432
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            jmp .L_432e90
          .byte 0x90
.L_432f50:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_433135

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_433090

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RSP+64]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+8],RCX
.L_432fc7:

            call .L_42fec0
.L_432fcc:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_433147

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_4331a5

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4331b4

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_43302a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_43304e
.L_433049:

            call _ZdlPv@PLT
.L_43304e:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_43305d:

            call write@PLT
.L_433062:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_432e03

            call _ZdlPv@PLT

            jmp .L_432e03
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433090:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_4330aa:

            call .L_42fec0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_433178

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_4331c7

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4331d6

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_43310d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_433049

            jmp .L_43304e
.L_433135:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_433142:

            jmp .L_43304e
.L_433147:

            test RDX,RDX
            je .L_433165

            cmp RDX,1
            je .L_4331fc

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_433165:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_43302a
.L_433178:

            test RDX,RDX
            je .L_433192

            cmp RDX,1
            je .L_4331e9

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_433192:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_43310d
.L_4331a5:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4331b4:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_43302a
.L_4331c7:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4331d6:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_43310d
.L_4331e9:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_433192
.L_4331fc:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_433165
.L_433212:

            call __stack_chk_fail@PLT
.L_433217:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_43322e

            call _ZdlPv@PLT
.L_43322e:

            call _ZSt9terminatev@PLT
.L_433233:

            jmp .L_433217
.L_433235:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RCX
.L_433257:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
.L_43326b:

            call _Unwind_Resume@PLT
.L_433270:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40bd80

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_433283:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_433297:

            mov RBP,RAX
            jmp .L_433257
.L_43329c:

            nop
            nop
            nop
            nop
.L_4332a0:

            lea RAX,QWORD PTR [RIP+.L_648da0]
            push R12
            push RBP
            push RBX
.L_4332ab:

            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_432ba0

            mov RBP,QWORD PTR [RBX+8]
            test RBP,RBP
            je .L_433310

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_4332fa

            mov RAX,QWORD PTR [RBP+72]
            mov RBX,QWORD PTR [RBP+40]
            lea R12,QWORD PTR [RAX+8]
            cmp R12,RBX
            jbe .L_4332f5

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4332e0:

            mov RDI,QWORD PTR [RBX]
            add RBX,8
            call _ZdlPv@PLT

            cmp R12,RBX
            ja .L_4332e0

            mov RDI,QWORD PTR [RBP]
.L_4332f5:

            call _ZdlPv@PLT
.L_4332fa:

            pop RBX
.L_4332fb:

            mov RDI,RBP
            mov ESI,80
            pop RBP
            pop R12
            jmp _ZdlPvm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433310:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_433315:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433320:

            push RBX
            mov RBX,RDI
            call .L_4332a0

            mov RDI,RBX
            mov ESI,24
            pop RBX
            jmp _ZdlPvm@PLT
.L_433337:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433340:

            lea RAX,QWORD PTR [RIP+.L_6466f0]
            mov QWORD PTR [RDI],RAX
            jmp .L_4332a0
.L_43334f:

            nop
.L_433350:

            lea RAX,QWORD PTR [RIP+.L_6466f0]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_4332a0

            mov RDI,RBX
            mov ESI,24
            pop RBX
            jmp _ZdlPvm@PLT
.L_433371:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433380:

            mov RCX,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR [RDI+48]
            lea RDX,QWORD PTR [RCX-48]
            cmp RAX,RDX
            je .L_4333c0

            test RAX,RAX
            je .L_4333af

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+32]
            movups XMMWORD PTR [RAX+32],XMM0
.L_4333af:

            add RAX,48
            mov QWORD PTR [RDI+48],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4333c0:

            push R15
.L_4333c2:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_4333d4:

            mov R12,QWORD PTR [RDI+72]
            mov RCX,QWORD PTR [RDI]
            mov RDX,QWORD PTR [RDI+8]
            mov RAX,R12
            sub RAX,RCX
            mov RSI,RDX
            sar RAX,3
            sub RSI,RAX
            cmp RSI,1
            jbe .L_433460
.L_4333f5:

            mov EDI,480
            call _Znwm@PLT

            mov QWORD PTR [R12+8],RAX
            mov RAX,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_433427

            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+32]
            movups XMMWORD PTR [RAX+32],XMM0
.L_433427:

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            add RSP,8
.L_43344e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433460:

            mov RSI,QWORD PTR [RDI+40]
            mov RAX,R12
            sub RAX,RSI
            sar RAX,3
            lea R14,QWORD PTR [RAX+2]
            lea R13,QWORD PTR [RAX+1]
            lea RAX,QWORD PTR [R14+R14*1]
            cmp RDX,RAX
            ja .L_433528

            test RDX,RDX
            je .L_433558

            lea R12,QWORD PTR [RDX+RDX*1+2]
            movabs RAX,2305843009213693951
            cmp R12,RAX
            ja .L_433580
.L_4334a4:

            lea RDI,QWORD PTR [R12*8]
            call _Znwm@PLT

            mov R15,RAX
            mov RAX,R12
            mov RSI,QWORD PTR [RBX+40]
            sub RAX,R14
            shr RAX,1
            lea R14,QWORD PTR [R15+RAX*8]
            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            cmp RDX,RSI
            je .L_4334dd

            sub RDX,RSI
            mov RDI,R14
            call memmove@PLT
.L_4334dd:

            mov RDI,QWORD PTR [RBX]
            shl R13,3
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],R15
            mov QWORD PTR [RBX+8],R12
.L_4334f0:

            mov RAX,QWORD PTR [R14]
            lea R12,QWORD PTR [R14+R13*1-8]
            mov QWORD PTR [RBX+40],R14
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            add RAX,480
            mov QWORD PTR [RBX+32],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBX+56],RAX
            add RAX,480
            mov QWORD PTR [RBX+64],RAX
            jmp .L_4333f5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433528:

            sub RDX,R14
            add R12,8
            shl R13,3
            shr RDX,1
            lea R14,QWORD PTR [RCX+RDX*8]
            mov RDX,R12
            sub RDX,RSI
            cmp RSI,R14
            jbe .L_433568

            cmp RSI,R12
            je .L_4334f0

            mov RDI,R14
            call memmove@PLT

            jmp .L_4334f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433558:

            mov R12D,3
            jmp .L_4334a4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433568:

            cmp RSI,R12
            je .L_4334f0

            mov RDI,R13
            sub RDI,RDX
            add RDI,R14
            call memmove@PLT

            jmp .L_4334f0
.L_433580:

            call _ZSt17__throw_bad_allocv@PLT
.L_433585:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433590:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDX
            sub RSP,568
.L_4335ad:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
.L_4335c0:

            call .L_432ba0

            test RBP,RBP
            je .L_433820

            mov RDI,QWORD PTR [R14+8]
            lea R15,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RBP
            mov DWORD PTR [RSP+24],4294967295
            mov QWORD PTR [RSP+32],RBX
            movabs R13,-6148914691236517205
            mov RSI,R15
            mov QWORD PTR [RSP+56],0
            call .L_433380

            mov RAX,QWORD PTR [R14+8]
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
.L_433614:

            cmp RDI,RBP
            je .L_433753
.L_43361d:

            mov R9D,DWORD PTR [RBP-40]
            mov RBX,QWORD PTR [RBP-48]
            cmp R9D,-1
            jne .L_433770
.L_43362f:

            mov EAX,DWORD PTR [R14+20]
            mov R8,QWORD PTR [R14]
            mov RDX,QWORD PTR [RBP-32]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [R14+20],EAX
            js .L_433bc8

            mov BYTE PTR [RSP+16],0
            mov RCX,R15
            mov RSI,RBX
            mov RDI,R14
            call QWORD PTR [R8+16]

            cmp BYTE PTR [RSP+16],0
            mov QWORD PTR [RBP-24],RAX
            jne .L_4336c5

            movzx EAX,WORD PTR [RBX+6]
            mov DWORD PTR [RBP-40],0
            mov QWORD PTR [RBP-8],0
            cmp AX,1
            je .L_433c30

            mov R9D,0
            ja .L_433c48

            nop
.L_433690:

            mov RAX,QWORD PTR [R14]
            mov RCX,QWORD PTR [RBP-24]
            mov RSI,RBX
            mov RDX,QWORD PTR [RBP-32]
            mov R8,QWORD PTR [RBP-8]
            mov RDI,R14
            call QWORD PTR [RAX+24]

            cmp WORD PTR [RBX+6],1
            jbe .L_4336c5

            mov RDI,QWORD PTR [RBP-8]
            test RDI,RDI
            je .L_4336c5

            mov QWORD PTR [RSP],RAX
            call _ZdaPv@PLT

            mov RAX,QWORD PTR [RSP]
.L_4336c5:

            mov RBX,QWORD PTR [R14+8]
            mov RBP,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            cmp RBP,RDI
            je .L_433be0

            sub RBP,48
            mov QWORD PTR [RBX+48],RBP
.L_4336e2:

            mov RCX,QWORD PTR [RBX+72]
            mov RDX,RCX
            sub RDX,QWORD PTR [RBX+40]
            sar RDX,3
            lea RSI,QWORD PTR [RDX+RDX*4-5]
            mov RDX,RBP
            sub RDX,RDI
            sar RDX,4
            imul RDX,R13
            lea RSI,QWORD PTR [RDX+RSI*2]
            mov RDX,QWORD PTR [RBX+32]
            sub RDX,QWORD PTR [RBX+16]
            sar RDX,4
            imul RDX,R13
            add RSI,RDX
            je .L_433b9c

            cmp RBP,RDI
            mov RDX,RBP
            je .L_433810
.L_43372d:

            mov R8,QWORD PTR [RDX-8]
            mov ESI,DWORD PTR [RDX-40]
            test R8,R8
            je .L_433800

            movsxd R9,ESI
            mov QWORD PTR [R8+R9*8],RAX
.L_433744:

            add ESI,1
            cmp RDI,RBP
            mov DWORD PTR [RDX-40],ESI
            jne .L_43361d
.L_433753:

            mov RBP,QWORD PTR [RCX-8]
            add RBP,480
            mov R9D,DWORD PTR [RBP-40]
            mov RBX,QWORD PTR [RBP-48]
            cmp R9D,-1
            je .L_43362f
.L_433770:

            movzx EAX,WORD PTR [RBX+6]
.L_433774:

            test AX,AX
            je .L_433690

            cmp AX,1
            jbe .L_433c3b

            mov RDX,QWORD PTR [RBX+8]
.L_43378b:

            cmp R9D,EAX
            jge .L_433690

            movsxd RAX,R9D
            test R9D,R9D
            lea RCX,QWORD PTR [RAX*8]
            mov RAX,QWORD PTR [RDX+RAX*8]
            jle .L_4337b8

            test R12B,R12B
            je .L_4337b8

            cmp QWORD PTR [RDX+RCX*1-8],RAX
            je .L_433c70
.L_4337b8:

            mov RDX,QWORD PTR [RBP-24]
            mov RDI,QWORD PTR [R14+8]
            mov RSI,R15
            mov QWORD PTR [RSP+16],RAX
            mov DWORD PTR [RSP+24],4294967295
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+32],RDX
            call .L_433380
.L_4337e3:

            mov RAX,QWORD PTR [R14+8]
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
            jmp .L_433614
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433800:

            mov QWORD PTR [RDX-16],RAX
            jmp .L_433744
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433810:

            mov RSI,QWORD PTR [RCX-8]
            lea RDX,QWORD PTR [RSI+480]
            jmp .L_43372d
.L_433820:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+504],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],R13
            mov QWORD PTR [RSP+496],0
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            mov QWORD PTR [RSP+168],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4338b9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4338be:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+168],R15
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+280],R14
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_43397b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_433980:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435d3a]
            mov EDX,18
.L_433990:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,160
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4339cc:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_435d5e]
            mov EDX,9
.L_4339dc:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4339e1:

            cmp BYTE PTR [RSP+160],0
            jne .L_433b1f

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_433d61

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            ja .L_433ca2

            lea RCX,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+96],RAX
.L_433a65:

            call .L_42fec0
.L_433a6a:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_433d73

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_433dd7

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_433de6

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_433ac8:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_433aec
.L_433ae7:

            call _ZdlPv@PLT
.L_433aec:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_433afb:

            call write@PLT
.L_433b00:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov BYTE PTR [RSP+160],1
            add RAX,16
            cmp RDI,RAX
            je .L_433b1f

            call _ZdlPv@PLT
.L_433b1f:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],R15
            mov QWORD PTR [RSP+280],R14
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_433b54

            call _ZdlPv@PLT
.L_433b54:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+168],R12
            mov QWORD PTR [RSP+RAX*1+168],RCX
            mov QWORD PTR [RSP+280],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,RBX
.L_433b9c:

            mov RCX,QWORD PTR [RSP+552]
            xor RCX,QWORD PTR FS:[40]
            jne .L_433e4d

            add RSP,568
.L_433bba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433bc8:

            mov BYTE PTR [R14+16],1
            mov RSI,RBX
            mov RDI,R14
.L_433bd3:

            call QWORD PTR [R8+40]

            jmp .L_4336c5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433be0:

            mov QWORD PTR [RSP],RAX
            call _ZdlPv@PLT

            mov RDX,QWORD PTR [RBX+72]
            mov RAX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RDX-8]
            mov RDX,QWORD PTR [RDX-8]
            mov QWORD PTR [RBX+72],RCX
            lea RCX,QWORD PTR [RDX+480]
            mov QWORD PTR [RBX+56],RDX
            add RDX,432
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+64],RCX
            mov RBX,QWORD PTR [R14+8]
            mov RBP,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            jmp .L_4336e2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433c30:

            lea RDX,QWORD PTR [RBP-16]
            xor R9D,R9D
            mov QWORD PTR [RBP-8],RDX
.L_433c3b:

            lea RDX,QWORD PTR [RBX+8]
            jmp .L_43378b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433c48:

            lea RDI,QWORD PTR [RAX*8]
            call _Znam@PLT

            mov R9D,DWORD PTR [RBP-40]
            mov QWORD PTR [RBP-8],RAX
            movzx EAX,WORD PTR [RBX+6]
            jmp .L_433774
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433c70:

            mov RAX,QWORD PTR [RBP-8]
            mov RDI,R14
            lea RBX,QWORD PTR [RAX+RCX*1]
            mov RSI,QWORD PTR [RAX+RCX*1-8]
            mov RAX,QWORD PTR [R14]
            call QWORD PTR [RAX+32]
.L_433c86:

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [R14+8]
            add DWORD PTR [RBP-40],1
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
            jmp .L_433614
.L_433ca2:

            lea RCX,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_433cc1:

            call .L_42fec0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_433da4

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+144]
            add RCX,16
            cmp RDI,RCX
            je .L_433df9

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_433e08

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_433d33:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+128]
            add RAX,16
            cmp RDI,RAX
            jne .L_433ae7

            jmp .L_433aec
.L_433d61:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_433d6e:

            jmp .L_433aec
.L_433d73:

            test RDX,RDX
            je .L_433d91

            cmp RDX,1
            je .L_433e37

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_433d91:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_433ac8
.L_433da4:

            test RDX,RDX
            je .L_433dc1

            cmp RDX,1
            je .L_433e1e

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_433dc1:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_433d33
.L_433dd7:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_433de6:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_433ac8
.L_433df9:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_433e08:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_433d33
.L_433e1e:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_433dc1
.L_433e37:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_433d91
.L_433e4d:

            call __stack_chk_fail@PLT
.L_433e52:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_433e69

            call _ZdlPv@PLT
.L_433e69:

            call _ZSt9terminatev@PLT
.L_433e6e:

            jmp .L_433e52
.L_433e70:

            mov RBX,RAX
.L_433e73:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+280],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_433e87:

            call _Unwind_Resume@PLT
.L_433e8c:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_433e9f:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+168],R12
            mov QWORD PTR [RSP+RAX*1+168],RCX
            jmp .L_433e73
.L_433ec9:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_433edd:

            nop
            nop
            nop
.L_433ee0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_433eee:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_433f0c

            test RDX,RDX
            jne .L_433f97
.L_433f0c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_433f60

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_433f90

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_433f34:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_433fa3

            add RSP,16
.L_433f54:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433f60:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_433f79:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_433f34
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433f90:

            test RBX,RBX
            je .L_433f34

            jmp .L_433f79
.L_433f97:

            lea RDI,QWORD PTR [RIP+.L_435668]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_433fa3:

            call __stack_chk_fail@PLT
.L_433fa8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433fb0:

            push RBP
            lea EAX,DWORD PTR [RSI-32]
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,8
.L_433fbe:

            cmp EAX,94
            ja .L_434020

            lea RDI,QWORD PTR [RIP+.L_436b97]
            call strchr@PLT

            test RAX,RAX
            mov RSI,QWORD PTR [RBP+8]
            je .L_434003

            movabs RAX,9223372036854775807
            cmp RSI,RAX
            je .L_434140

            lea RSI,QWORD PTR [RIP+.L_435bcc]
            mov EDX,1
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RSI,QWORD PTR [RBP+8]
.L_434003:

            add RSP,8
.L_434007:

            mov R8D,EBX
            mov RDI,RBP
            pop RBX
            pop RBP
            mov ECX,1
            xor EDX,EDX
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434020:

            cmp ESI,10
            je .L_4340a8

            jle .L_4340e0

            cmp ESI,12
            je .L_434070

            cmp ESI,13
            jne .L_434118

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_434140

            add RSP,8
            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_436b9d]
            pop RBX
            pop RBP
            mov EDX,2
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
          .byte 0x90
.L_434070:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_434140

            add RSP,8
            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_436ba6]
            pop RBX
            pop RBP
            mov EDX,2
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4340a8:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_434140

            add RSP,8
            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_436ba3]
            pop RBX
            pop RBP
            mov EDX,2
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4340e0:

            cmp ESI,9
            jne .L_434118

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_434140

            add RSP,8
            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_436ba0]
            pop RBX
            pop RBP
            mov EDX,2
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434118:

            cmp EBX,255
            mov EDX,EBX
            lea RSI,QWORD PTR [RIP+.L_436ba9]
            jle .L_434130

            lea RSI,QWORD PTR [RIP+.L_436bb0]
.L_434130:

            add RSP,8
            mov RDI,RBP
            xor EAX,EAX
            pop RBX
            pop RBP
            jmp .L_414ea0
.L_434140:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_43414c:

            nop
            nop
            nop
            nop
.L_434150:

            cmp ESI,EDX
            jle .L_434160

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434160:

            push R12
            push RBP
            mov EBP,EDX
            push RBX
            mov EBX,ESI
            mov R12,RDI
            call .L_433fb0

            cmp EBX,EBP
            jl .L_434180

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434180:

            movabs RAX,9223372036854775807
            cmp QWORD PTR [R12+8],RAX
            je .L_4341b3

            lea RSI,QWORD PTR [RIP+.L_436bb7]
            mov RDI,R12
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            pop RBX
            mov ESI,EBP
            mov RDI,R12
            pop RBP
            pop R12
            jmp .L_433fb0
.L_4341b3:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4341bf:

            nop
.L_4341c0:

            test ESI,ESI
            push R12
            mov R12D,EDX
            push RBP
            mov RBP,RDI
            push RBX
.L_4341cc:

            mov EBX,ESI
            je .L_4341ea

            cmp ESI,127
            jg .L_4341ea

            lea RDI,QWORD PTR [RIP+.L_436bb9]
            call strchr@PLT

            test RAX,RAX
            jne .L_434270
.L_4341ea:

            lea EAX,DWORD PTR [RBX-97]
            cmp EAX,25
            ja .L_434260

            test R12B,R12B
            je .L_434260

            mov RSI,QWORD PTR [RBP+8]
            mov R8D,91
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            sub EBX,32
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov RSI,QWORD PTR [RBP+8]
            mov R8D,EBX
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            add EBX,32
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov RSI,QWORD PTR [RBP+8]
            movzx R8D,BL
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov RSI,QWORD PTR [RBP+8]
            mov R8D,93
.L_43424d:

            pop RBX
.L_43424e:

            mov RDI,RBP
            mov ECX,1
            xor EDX,EDX
            pop RBP
            pop R12
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT
.L_434260:

            mov EDX,EBX
            mov ESI,EBX
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            jmp .L_434150
.L_434270:

            mov RSI,QWORD PTR [RBP+8]
            mov R8D,92
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov RSI,QWORD PTR [RBP+8]
            movsx R8D,BL
            jmp .L_43424d
.L_434293:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4342a0:

            push R12
            push RBP
            push RBX
            movzx EAX,BYTE PTR [RSI]
            sub EAX,4
            cmp AL,7
            ja .L_4343e6

            lea RCX,QWORD PTR [RIP+.L_436c60]
            movzx EAX,AL
            mov RBX,RSI
            mov RBP,RDI
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4342d0:

            cmp EDX,2
            mov EBX,3
            jle .L_4342f2
.L_4342da:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4342e8:

            cmp EDX,1
            mov EBX,2
            jg .L_4342da
.L_4342f2:

            mov RDI,QWORD PTR [RBP+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,2
            jbe .L_4343da

            lea RSI,QWORD PTR [RIP+.L_436bc8]
            mov EDX,3
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434330:

            xor EBX,EBX
            test EDX,EDX
            jle .L_4342f2

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434340:

            mov RDI,QWORD PTR [RDI+24]
            movabs R12,9223372036854775807
            cmp QWORD PTR [RDI+8],R12
            je .L_4343da

            lea RSI,QWORD PTR [RIP+.L_436bcc]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            cmp QWORD PTR [RBX+32],0
            je .L_4343d0

            mov RDI,QWORD PTR [RBP+24]
            mov RAX,R12
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,2
            jbe .L_4343da

            lea RSI,QWORD PTR [RIP+.L_436bce]
            mov EDX,3
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBP+24]
            mov RDX,QWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RAX]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RDI,QWORD PTR [RBP+24]
            cmp QWORD PTR [RDI+8],R12
            je .L_4343da

            lea RSI,QWORD PTR [RIP+.L_436bd2]
            mov EBX,5
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov EAX,EBX
            pop RBX
.L_4343c9:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4343d0:

            mov EBX,5
            jmp .L_4342da
.L_4343da:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4343e6:

            xor EBX,EBX
            jmp .L_4342da
.L_4343ed:

            nop
            nop
            nop
.L_4343f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,RDI
            sub RSP,520
.L_434406:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp BYTE PTR [RSI],21
            ja .L_4344f0

            movzx EAX,BYTE PTR [RSI]
            lea RDX,QWORD PTR [RIP+.L_436c80]
            mov R13,RSI
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434440:

            movabs R12,9223372036854775807
            cmp RDX,R12
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_435777]
            mov EDX,1
.L_43445f:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov R14,QWORD PTR [R13+24]
            mov ESI,65534
            mov RDI,R14
            call .L_40cfd0

            test AL,AL
            jne .L_434e6d
.L_43447d:

            movsxd RAX,DWORD PTR [R14+16]
            mov R12,QWORD PTR [R14+8]
            shl RAX,3
            test RAX,RAX
            je .L_4344b7

            nop
            nop
.L_434490:

            mov EDX,DWORD PTR [R12+4]
            mov ESI,DWORD PTR [R12]
            add R12,8
            mov RDI,QWORD PTR [RBX+24]
            call .L_434150

            movsxd RDX,DWORD PTR [R14+16]
            mov RAX,QWORD PTR [R14+8]
            lea RAX,QWORD PTR [RAX+RDX*8]
            cmp R12,RAX
            jne .L_434490
.L_4344b7:

            cmp R14,QWORD PTR [R13+24]
            je .L_4344c5

            mov RDI,R14
            call .L_40cef0
.L_4344c5:

            mov RDI,QWORD PTR [RBX+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_435bb7]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            nop
            nop
.L_4344f0:

            cmp EBP,3
            je .L_434520
.L_4344f5:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_435017

            add RSP,520
.L_434515:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_434520:

            mov RDI,QWORD PTR [RBX+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436181]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434550:

            mov EDX,DWORD PTR [RSI+24]
            test EDX,EDX
            jle .L_434588

            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
.L_434560:

            mov RAX,QWORD PTR [R13+32]
            movzx EDX,WORD PTR [R13+2]
            mov RDI,QWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RAX+R12*4]
            and EDX,1
            call .L_4341c0

            lea EAX,DWORD PTR [R12+1]
            add R12,1
            cmp DWORD PTR [R13+24],EAX
            jg .L_434560
.L_434588:

            cmp EBP,1
            jg .L_4344f0
.L_434591:

            mov RDI,QWORD PTR [RBX+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_435bc1]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_4345ba:

            jmp .L_4344f5
          .byte 0x90
.L_4345c0:

            mov RAX,QWORD PTR [RDI+24]
            mov RSI,QWORD PTR [RAX+8]
            mov RCX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RSI-1]
            add RCX,RDX
            cmp BYTE PTR [RCX],124
            je .L_434ca0

            lea R12,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_43466b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_434670:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            lea RAX,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_43472e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_434733:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bec]
            mov EDX,15
.L_434744:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,178
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_435732]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_434782:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436bfc]
            mov EDX,16
.L_434793:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RSI,QWORD PTR [RBX+24]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSo9_M_insertIPKvEERSoT_@PLT
.L_4347a6:

            cmp BYTE PTR [RSP+112],0
            je .L_434d08
.L_4347b1:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+64]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_4347eb

            call _ZdlPv@PLT
.L_4347eb:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+120],R13
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R14
            call _ZNSt8ios_baseD2Ev@PLT
.L_43482b:

            cmp EBP,2
            jg .L_4344f0

            jmp .L_434591
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434840:

            movzx EDX,WORD PTR [RSI+2]
            mov RDI,QWORD PTR [RDI+24]
            mov ESI,DWORD PTR [RSI+24]
            and EDX,1
.L_43484e:

            call .L_4341c0

            jmp .L_4344f0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434860:

            cmp EBP,3
            jg .L_4344f5

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,3
            jbe .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436be7]
            mov EDX,4
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4348a0:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,17
            jbe .L_43492a
.L_4348b8:

            lea RSI,QWORD PTR [RIP+.L_436bd4]
            mov EDX,18
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0x90
.L_4348d0:

            mov RDI,QWORD PTR [RDI+24]
            movsxd RDX,DWORD PTR [RSI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RDX,RAX
            ja .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c42]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434900:

            mov RAX,QWORD PTR [RSI+24]
            mov RDI,QWORD PTR [RDI+24]
            mov EAX,DWORD PTR [RAX+4]
            mov RDX,QWORD PTR [RDI+8]
            test EAX,EAX
            jne .L_434440

            movabs RAX,9223372036854775807
            sub RAX,RDX
            cmp RAX,17
            ja .L_4348b8
.L_43492a:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434940:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp WORD PTR [RSI+2],0
            jns .L_434c80

            cmp RAX,6
            jbe .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c31]
            mov EDX,7
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434980:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,6
            jbe .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c29]
            mov EDX,7
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0x90
.L_4349b0:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c3c]
            mov EDX,2
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4349e8:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c27]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434a20:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c3f]
            mov EDX,2
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434a58:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c25]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434a90:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c22]
            mov EDX,2
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434ac8:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_4356c6]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434b00:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_435bc1]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
          .byte 0x66
          .byte 0x90
.L_434b30:

            mov ECX,DWORD PTR [RSI+24]
            mov R14,QWORD PTR [RDI+24]
            lea R12,QWORD PTR [RSP+112]
            mov EDX,DWORD PTR [RSI+28]
            cmp ECX,-1
            je .L_434e45

            cmp ECX,EDX
            je .L_434cd8

            lea RSI,QWORD PTR [RIP+.L_436c1a]
            mov RDI,R12
            xor EAX,EAX
            call .L_414cf0
.L_434b61:

            mov RDX,QWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,R14
.L_434b6e:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_434b73:

            mov RDI,QWORD PTR [RSP+112]
            add R12,16
            cmp RDI,R12
            je .L_434b86

            call _ZdlPv@PLT
.L_434b86:

            test BYTE PTR [R13+2],64
            jne .L_434cb8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434b98:

            test EBP,EBP
            jg .L_4344f0

            jmp .L_434591
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434ba8:

            mov RDI,QWORD PTR [RDI+24]
            movabs R12,9223372036854775807
            cmp QWORD PTR [RDI+8],R12
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_43618c]
            mov EDX,1
.L_434bcc:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            test BYTE PTR [R13+2],64
            je .L_434b98
.L_434bd8:

            mov RDI,QWORD PTR [RBX+24]
            cmp QWORD PTR [RDI+8],R12
            je .L_43492a
.L_434be6:

            lea RSI,QWORD PTR [RIP+.L_436c0d]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_434b98
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434c00:

            mov RDI,QWORD PTR [RDI+24]
            movabs R12,9223372036854775807
            cmp QWORD PTR [RDI+8],R12
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c0d]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            test BYTE PTR [R13+2],64
            je .L_434b98

            jmp .L_434bd8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434c40:

            mov RDI,QWORD PTR [RDI+24]
            movabs R12,9223372036854775807
            cmp QWORD PTR [RDI+8],R12
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436352]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            test BYTE PTR [R13+2],64
            je .L_434b98

            jmp .L_434bd8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434c80:

            cmp RAX,1
            jbe .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c39]
            mov EDX,2
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4344f0
.L_434ca0:

            cmp RDX,RSI
            ja .L_4350bf

            mov QWORD PTR [RAX+8],RDX
            mov BYTE PTR [RCX],0
            jmp .L_43482b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434cb8:

            mov RDI,QWORD PTR [RBX+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            jne .L_434be6

            jmp .L_43492a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434cd8:

            lea RSI,QWORD PTR [RIP+.L_436c15]
            mov EDX,ECX
            mov RDI,R12
            xor EAX,EAX
            call .L_414cf0
.L_434ceb:

            mov RDX,QWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,R14
.L_434cf8:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_434cfd:

            jmp .L_434b73
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434d08:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4369d7]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_434f3c

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_434e9c

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_434d82:

            call .L_433ee0
.L_434d87:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_434f7d

            mov RDI,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+96]
            add RDI,16
            cmp RAX,RDI
            je .L_434faa

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_434fb9

            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+96],RDI
.L_434de8:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_434e0c
.L_434e07:

            call _ZdlPv@PLT
.L_434e0c:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_434e1b:

            call write@PLT
.L_434e20:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_4347b1

            call _ZdlPv@PLT

            jmp .L_4347b1
.L_434e45:

            lea RSI,QWORD PTR [RIP+.L_436c0f]
            mov RDI,R12
            xor EAX,EAX
.L_434e51:

            call .L_414cf0
.L_434e56:

            mov RDX,QWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,R14
.L_434e63:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_434e68:

            jmp .L_434b73
.L_434e6d:

            mov RDI,R14
.L_434e70:

            call .L_40cf00

            mov RDI,QWORD PTR [RBX+24]
            mov R14,RAX
            cmp QWORD PTR [RDI+8],R12
            je .L_43492a

            lea RSI,QWORD PTR [RIP+.L_436c25]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_434e97:

            jmp .L_43447d
.L_434e9c:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_434eb2:

            call .L_433ee0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_434f4f

            mov RDI,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+64]
            add RDI,16
            cmp RAX,RDI
            je .L_434fcc

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_434fdb

            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDI
.L_434f14:

            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_434e07

            jmp .L_434e0c
.L_434f3c:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [R12+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_434f4a:

            jmp .L_434e0c
.L_434f4f:

            test RDX,RDX
            je .L_434f6d

            cmp RDX,1
            je .L_435001

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
.L_434f6d:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+48]
            jmp .L_434f14
.L_434f7d:

            test RDX,RDX
            je .L_434f97

            cmp RDX,1
            je .L_434fee

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
.L_434f97:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+80]
            jmp .L_434de8
.L_434faa:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_434fb9:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_434de8
.L_434fcc:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_434fdb:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            mov QWORD PTR [RSP+48],RAX
            jmp .L_434f14
.L_434fee:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_434f97
.L_435001:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            jmp .L_434f6d
.L_435017:

            call __stack_chk_fail@PLT
.L_43501c:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R13
            mov QWORD PTR [RSP+RAX*1+120],RCX
.L_43503e:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+232],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_435053:

            call _Unwind_Resume@PLT
.L_435058:

            mov RBX,RAX
            jmp .L_43503e
.L_43505d:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_435074

            call _ZdlPv@PLT
.L_435074:

            call _ZSt9terminatev@PLT
.L_435079:

            mov RDI,QWORD PTR [RSP+112]
            add R12,16
            mov RBX,RAX
            cmp RDI,R12
            je .L_43508f

            call _ZdlPv@PLT
.L_43508f:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_435097:

            mov RBX,RAX
            mov RDI,R12
            call .L_40bd80

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4350aa:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4350bf:

            lea RSI,QWORD PTR [RIP+.L_435dfe]
            lea RDI,QWORD PTR [RIP+.L_435a10]
            xor ECX,ECX
            or RDX,-1
            xor EAX,EAX
            call _ZSt24__throw_out_of_range_fmtPKcz@PLT
.L_4350da:

            jmp .L_43505d
.L_4350dc:

            jmp .L_435079
.L_4350de:

            jmp .L_435079
.L_4350e0:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+16]
            push RBX
            mov RBP,RDI
            sub RSP,48
.L_4350f6:

            mov QWORD PTR [RDI],R12
            mov QWORD PTR [RDI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_648cd0]
            mov BYTE PTR [RDI+16],0
            mov EDI,80
            mov QWORD PTR [RSP],RAX
.L_435125:

            call _Znwm@PLT
.L_43512a:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],0
            mov EDI,64
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov RBX,RAX
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov QWORD PTR [RAX+56],0
            mov QWORD PTR [RAX+64],0
            mov QWORD PTR [RAX+72],0
            mov QWORD PTR [RAX+8],8
.L_435181:

            call _Znwm@PLT
.L_435186:

            mov RCX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBX],RAX
            mov EDI,512
            lea RDX,QWORD PTR [RCX-1]
            shr RDX,1
            lea R14,QWORD PTR [RAX+RDX*8]
.L_43519d:

            call _Znwm@PLT
.L_4351a2:

            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [RBX+40],R14
            mov QWORD PTR [RBX+72],R14
            mov QWORD PTR [R14],RAX
            mov QWORD PTR [RBX+24],RAX
            lea R14,QWORD PTR [RIP+.L_646730]
            mov QWORD PTR [RBX+32],RDX
            mov QWORD PTR [RBX+64],RDX
            xor ECX,ECX
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+16],RAX
            mov EDX,6
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RSP+8],RBX
            mov RBX,RSP
            mov RSI,R13
            mov RDI,RBX
            mov BYTE PTR [RSP+16],0
            mov QWORD PTR [RSP],R14
            mov QWORD PTR [RSP+24],RBP
            mov DWORD PTR [RSP+20],100000
.L_4351fe:

            call .L_4136c0

            cmp BYTE PTR [RSP+16],0
            je .L_435232

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBP+8]
            cmp RAX,11
            jbe .L_435263

            lea RSI,QWORD PTR [RIP+.L_436c52]
            mov EDX,12
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_435232:

            mov RDI,RBX
            mov QWORD PTR [RSP],R14
            call .L_412370

            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_43525e

            add RSP,48
.L_435255:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_43525e:

            call __stack_chk_fail@PLT
.L_435263:

            lea RDI,QWORD PTR [RIP+.L_4356af]
            call _ZSt20__throw_length_errorPKc@PLT
.L_43526f:

            mov RDI,RBX
            mov R13,RAX
            mov QWORD PTR [RSP],R14
            call .L_412370
.L_43527e:

            mov RDI,QWORD PTR [RBP]
            cmp R12,RDI
            je .L_43528c

            call _ZdlPv@PLT
.L_43528c:

            mov RDI,R13
.L_43528f:

            call _Unwind_Resume@PLT
.L_435294:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_43529c:

            call __cxa_rethrow@PLT
.L_4352a1:

            mov R13,RAX
.L_4352a4:

            mov ESI,80
            mov RDI,RBX
            call _ZdlPvm@PLT

            jmp .L_43527e
.L_4352b3:

            mov R13,RAX
            jmp .L_43527e
.L_4352b8:

            mov R13,RAX
            call __cxa_end_catch@PLT

            mov RDI,R13
            call __cxa_begin_catch@PLT

            mov RDI,QWORD PTR [RBX]
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
.L_4352df:

            call __cxa_rethrow@PLT
.L_4352e4:

            mov R13,RAX
            call __cxa_end_catch@PLT

            jmp .L_4352a4
.L_4352ee:

            nop
            nop
.L_4352f0:

            xor EAX,EAX
            ret 
.L_4352f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435300:

            lea RAX,QWORD PTR [RIP+.L_646730]
            mov QWORD PTR [RDI],RAX
            jmp .L_412370
.L_43530f:

            nop
.L_435310:

            lea RAX,QWORD PTR [RIP+.L_646730]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_412370

            mov RDI,RBX
            mov ESI,32
            pop RBX
            jmp _ZdlPvm@PLT
.L_435331:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435340:

            lea R8D,DWORD PTR [RDX+RSI*4-559038737]
            cmp RSI,3
            mov EAX,R8D
            mov EDX,R8D
            jbe .L_4353c5

            nop
            nop
            nop
            nop
.L_435358:

            add EAX,DWORD PTR [RDI+8]
            mov ECX,DWORD PTR [RDI]
            sub RSI,3
            add EDX,DWORD PTR [RDI+4]
            add RDI,12
            sub ECX,EAX
            add ECX,R8D
            mov R8D,EAX
            add EAX,EDX
            rol R8D,4
            xor ECX,R8D
            mov R8D,ECX
            sub EDX,ECX
            add ECX,EAX
            rol R8D,6
            xor EDX,R8D
            mov R8D,EDX
            sub EAX,EDX
            add EDX,ECX
            rol R8D,8
            xor EAX,R8D
            mov R8D,EAX
            sub ECX,EAX
            add EAX,EDX
            rol R8D,16
            xor ECX,R8D
            mov R8D,ECX
            sub EDX,ECX
            ror R8D,13
            xor EDX,R8D
            lea R8D,DWORD PTR [RCX+RAX*1]
            mov ECX,EDX
            sub EAX,EDX
            rol ECX,4
            add EDX,R8D
            xor EAX,ECX
            cmp RSI,3
            ja .L_435358
.L_4353c5:

            cmp RSI,2
            je .L_4353e3

            cmp RSI,3
            je .L_4353e0

            cmp RSI,1
            je .L_4353e6

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4353e0:

            add EAX,DWORD PTR [RDI+8]
.L_4353e3:

            add EDX,DWORD PTR [RDI+4]
.L_4353e6:

            mov ECX,EDX
            xor EAX,EDX
            rol ECX,14
            sub EAX,ECX
            mov ECX,DWORD PTR [RDI]
            mov ESI,EAX
            rol ESI,11
            add ECX,R8D
            xor ECX,EAX
            sub ECX,ESI
            mov ESI,ECX
            xor EDX,ECX
            ror ESI,7
            sub EDX,ESI
            mov ESI,EDX
            xor EAX,EDX
            rol ESI,16
            sub EAX,ESI
            mov ESI,EAX
            xor ECX,EAX
            rol ESI,4
            sub ECX,ESI
            xor EDX,ECX
            rol ECX,14
            sub EDX,ECX
            xor EAX,EDX
            ror EDX,8
            sub EAX,EDX
            ret 
.L_435427:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435430:

            mov EAX,DWORD PTR [RDX]
            lea R10D,DWORD PTR [RAX+RSI*4-559038737]
            mov EAX,DWORD PTR [RCX]
            mov R9D,R10D
            add EAX,R10D
            cmp RSI,3
            jbe .L_4354cc

            nop
            nop
            nop
            nop
.L_435450:

            add EAX,DWORD PTR [RDI+8]
            mov R8D,DWORD PTR [RDI]
            sub RSI,3
            add R9D,DWORD PTR [RDI+4]
            add RDI,12
            sub R8D,EAX
            add R8D,R10D
            mov R10D,EAX
            add EAX,R9D
            rol R10D,4
            xor R8D,R10D
            mov R10D,R8D
            sub R9D,R8D
            add R8D,EAX
            rol R10D,6
            xor R9D,R10D
            mov R10D,R9D
            sub EAX,R9D
            add R9D,R8D
            rol R10D,8
            xor EAX,R10D
            mov R10D,EAX
            sub R8D,EAX
            add EAX,R9D
            rol R10D,16
            xor R8D,R10D
            mov R10D,R8D
            sub R9D,R8D
            ror R10D,13
            xor R9D,R10D
            lea R10D,DWORD PTR [R8+RAX*1]
            mov R8D,R9D
            sub EAX,R9D
            rol R8D,4
            add R9D,R10D
            xor EAX,R8D
            cmp RSI,3
            ja .L_435450
.L_4354cc:

            cmp RSI,2
            je .L_4354eb

            cmp RSI,3
            je .L_4354e8

            cmp RSI,1
            je .L_4354ef

            mov DWORD PTR [RDX],EAX
            mov DWORD PTR [RCX],R9D
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4354e8:

            add EAX,DWORD PTR [RDI+8]
.L_4354eb:

            add R9D,DWORD PTR [RDI+4]
.L_4354ef:

            mov R8D,DWORD PTR [RDI]
            mov ESI,R9D
            xor EAX,R9D
            rol ESI,14
            sub EAX,ESI
            mov ESI,EAX
            add R8D,R10D
            xor R8D,EAX
            rol ESI,11
            sub R8D,ESI
            mov ESI,R8D
            xor R9D,R8D
            ror ESI,7
            sub R9D,ESI
            mov ESI,R9D
            xor EAX,R9D
            rol ESI,16
            sub EAX,ESI
            mov ESI,EAX
            xor R8D,EAX
            rol ESI,4
            sub R8D,ESI
            xor R9D,R8D
            rol R8D,14
            sub R9D,R8D
            mov ESI,R9D
            xor EAX,R9D
            ror ESI,8
            sub EAX,ESI
            mov DWORD PTR [RDX],EAX
            mov DWORD PTR [RCX],R9D
            ret 
.L_435548:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435550:

            sub RSP,88
.L_435554:

            xor EDX,EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+16],4097
            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            rol RDI,3
            rol RDI,13
            rol RDI,61
            rol RDI,51
            xchg RBX,RBX
            mov QWORD PTR [RSP+8],RDX
            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4355d3

            add RSP,88
.L_4355d2:

            ret 
.L_4355d3:

            call __stack_chk_fail@PLT
.L_4355d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4355e0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_645e70]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_645e78]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 4203232

            test RBP,RBP
            je .L_435636

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435620:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_435620
.L_435636:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_435645:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435650:

            ret 
.L_435652:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435668:
          .string "basic_string::_M_construct null not valid"
.L_435692:
          .string "rb"
.L_435695:
          .string "malloc error!"
.L_4356a3:
          .string "read error!"
.L_4356af:
          .string "basic_string::append"
.L_4356c4:
          .byte 0x2e
          .byte 0x2e
.L_4356c6:
          .string "."
.L_4356c8:
          .string "\\x00"
.L_4356cd:
          .string "re2/re2.cc"
.L_4356d8:
          .string "Unknown encoding "
.L_4356ea:
          .string "requested group "
.L_4356fb:
          .string " in regexp "
.L_435707:
          .string "invalid rewrite pattern: "
.L_435721:
          .string "Error parsing \'"
.L_435731:
          .byte 0x27
.L_435732:
          .byte 0x3a
.L_435733:
          .string " "
.L_435735:
          .string "Error compiling \'"
.L_435747:
          .byte 0x45
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x69
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
.L_43575f:
          .string "\'"
.L_435761:
          .string "Invalid RE2: "
.L_43576f:
          .string "Match "
.L_435776:
          .byte 0x20
.L_435777:
          .string "["
.L_435779:
          .string " used DFA - no match."
.L_43578f:
          .string " used DFA - match"
.L_4357a1:
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x73
          .byte 0x65
.L_4357a9:
          .string " DFA failed."
.L_4357b6:
          .string " DFA inconsistency."
.L_4357ca:
          .string "DFA inconsistency"
.L_4357dc:
          .string " used reverse DFA."
.L_4357ef:
          .string " skipping DFA for OnePass."
.L_43580a:
          .string " skipping DFA for BitState."
.L_435826:
          .string " using OnePass."
.L_435836:
          .string "SearchOnePass inconsistency"
.L_435852:
          .string " using BitState."
.L_435863:
          .string "SearchBitState inconsistency"
.L_435880:
          .string " using NFA."
.L_43588c:
          .string "SearchNFA inconsistency"
.L_4358a4:
          .string "basic_string::replace"
          .zero 6
.L_4358c0:
          .string "Rewrite schema error: \'\\\' not allowed at end."
          .zero 2
.L_4358f0:
          .string "Rewrite schema error: \'\\\' must be followed by a digit or \'\\\'."
          .zero 2
.L_435930:
          .string "Rewrite schema requests %d matches, but the regexp only has %d parenthesized subexpressions."
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x61
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x6f
          .byte 0x20
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x67
          .byte 0x65
          .byte 0x20
          .byte 0x2d
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x20
          .byte 0x66
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
.L_4359b2:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x61
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x6f
          .byte 0x20
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x67
          .byte 0x65
          .byte 0x20
          .byte 0x2d
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x20
          .byte 0x66
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
.L_4359e2:
          .zero 6
.L_4359e8:
          .string "RE2: invalid startpos, endpos pair."
          .zero 4
.L_435a10:
          .string "%s: __pos (which is %zu) > this->size() (which is %zu)"
          .zero 25
.L_435a60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435aa0:
          .string "Unexpected op in Regexp::Equal: "
          .zero 7
.L_435ac8:
          .string "no argument for repetition operator"
.L_435aec:
          .string "unexpected error"
.L_435afd:
          .string "./re2/regexp.h"
.L_435b0c:
          .string "Cannot AllocSub "
.L_435b1d:
          .string "Regexp not destroyed."
.L_435b33:
          .string "vector::reserve"
.L_435b43:
          .string "Bad reference count "
.L_435b58:
          .string "no error"
.L_435b61:
          .string "invalid escape sequence"
.L_435b79:
          .string "invalid character class"
.L_435b91:
          .string "invalid character class range"
.L_435baf:
          .byte 0x6d
          .byte 0x69
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
.L_435bb7:
          .string "]"
.L_435bb9:
          .byte 0x6d
          .byte 0x69
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
.L_435bc1:
          .string ")"
.L_435bc3:
          .byte 0x74
          .byte 0x72
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
.L_435bcc:
          .string "\\"
.L_435bce:
          .string "invalid repetition size"
.L_435be6:
          .string "bad repetition operator"
.L_435bfe:
          .string "invalid perl operator"
.L_435c14:
          .string "invalid UTF-8"
.L_435c22:
          .string "invalid named capture group"
.L_435c3e:
          .string "re2/regexp.cc"
          .zero 4
.L_435c50:
          .string "CaptureNamesWalker::ShortVisit called"
          .zero 2
.L_435c78:
          .string "NamedCapturesWalker::ShortVisit called"
          .zero 1
.L_435ca0:
          .string "NumCapturesWalker::ShortVisit called"
          .zero 3
.L_435cc8:
          .long .L_40d8b0-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d890-.L_435cc8
          .long .L_40d7a0-.L_435cc8
          .long .L_40d860-.L_435cc8
          .long .L_40d860-.L_435cc8
          .long .L_40d870-.L_435cc8
          .long .L_40d870-.L_435cc8
          .long .L_40d870-.L_435cc8
          .long .L_40d768-.L_435cc8
          .long .L_40d840-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d790-.L_435cc8
          .long .L_40d7e0-.L_435cc8
          .long .L_40d7f8-.L_435cc8
          .long .L_40d780-.L_435cc8
.L_435d20:
          .string "vector::_M_default_append"
.L_435d3a:
          .string "./re2/walker-inl.h"
.L_435d4d:
          .string "Stack not empty."
.L_435d5e:
          .byte 0x57
          .byte 0x61
          .byte 0x6c
          .byte 0x6b
          .byte 0x20
          .byte 0x4e
          .byte 0x55
          .byte 0x4c
.L_435d66:
          .string "L"
          .zero 8
.L_435d70:
          .string "N3re26Regexp6WalkerIiEE"
          .zero 8
.L_435d90:
          .string "N3re217NumCapturesWalkerE"
          .zero 6
.L_435db0:
          .string "N3re219NamedCapturesWalkerE"
          .zero 4
.L_435dd0:
          .string "N3re218CaptureNamesWalkerE"
          .zero 5
.L_435df0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_435df8:
          .string "\\%03o"
.L_435dfe:
          .string "basic_string::erase"
.L_435e12:
          .string "re2/bitstate.cc"
.L_435e22:
          .string "Job stack overflow."
.L_435e36:
          .string "Unexpected opcode: "
.L_435e4a:
          .string " arg "
.L_435e50:
          .string "Bad arg in kInstCapture: "
          .zero 2
.L_435e6c:
          .long .L_415e78-.L_435e6c
          .long .L_415e48-.L_435e6c
          .long .L_415df0-.L_435e6c
          .long .L_415f00-.L_435e6c
          .long .L_415db0-.L_435e6c
          .long .L_415d08-.L_435e6c
          .long .L_415f28-.L_435e6c
.L_435e88:
          .long .L_4163c0-.L_435e88
          .long .L_415e3f-.L_435e88
          .long .L_415de8-.L_435e88
          .long .L_416448-.L_435e88
          .long .L_416c70-.L_435e88
          .long .L_415d08-.L_435e88
          .long .L_416e5b-.L_435e88
.L_435ea4:
          .long .L_4163c0-.L_435ea4
          .long .L_416e3d-.L_435ea4
          .long .L_415de8-.L_435ea4
          .long .L_416448-.L_435ea4
          .long .L_416c70-.L_435ea4
          .long .L_415d08-.L_435ea4
          .long .L_416e2d-.L_435ea4
.L_435ec0:
          .long .L_415e78-.L_435ec0
          .long .L_415e3f-.L_435ec0
          .long .L_415de8-.L_435ec0
          .long .L_416e35-.L_435ec0
          .long .L_416c70-.L_435ec0
          .long .L_415d08-.L_435ec0
          .long .L_416e2d-.L_435ec0
.L_435edc:
          .long .L_4163c0-.L_435edc
          .long .L_415e3f-.L_435edc
          .long .L_415de8-.L_435edc
          .long .L_416448-.L_435edc
          .long .L_416c70-.L_435edc
          .long .L_415d08-.L_435edc
          .long .L_416eb4-.L_435edc
.L_435ef8:
          .long .L_4163ba-.L_435ef8
          .long .L_417157-.L_435ef8
          .long .L_415ca7-.L_435ef8
          .long .L_41643e-.L_435ef8
          .long .L_415da6-.L_435ef8
          .long .L_415cfd-.L_435ef8
          .long .L_417164-.L_435ef8
.L_435f14:
          .string "re2/compile.cc"
.L_435f23:
          .string "Compiler::Copy called!"
.L_435f3a:
          .string "No ranges in char class"
.L_435f52:
          .string "Missing case in Compiler: "
.L_435f6d:
          .string "hello, world"
          .zero 6
.L_435f80:
          .long .L_419e80-.L_435f80
          .long .L_419b6b-.L_435f80
          .long .L_419b78-.L_435f80
          .long .L_419c88-.L_435f80
          .long .L_419ce0-.L_435f80
          .long .L_419ca0-.L_435f80
          .long .L_419bd0-.L_435f80
          .long .L_419bb8-.L_435f80
          .long .L_419b88-.L_435f80
          .long .L_419d50-.L_435f80
          .long .L_419e80-.L_435f80
          .long .L_419e10-.L_435f80
          .long .L_419db0-.L_435f80
          .long .L_419c70-.L_435f80
          .long .L_419c50-.L_435f80
          .long .L_419c30-.L_435f80
          .long .L_419c20-.L_435f80
          .long .L_419c10-.L_435f80
          .long .L_419d90-.L_435f80
          .long .L_419d70-.L_435f80
          .long .L_4198f0-.L_435f80
          .long .L_419e28-.L_435f80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435fec:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436070:
          .zero 16
.L_436080:
          .string "N3re26Regexp6WalkerINS_4FragEEE"
.L_4360a0:
          .string "N3re28CompilerE"
.L_4360b0:
          .string "DFA out of memory: prog size %lld mem %lld"
          .zero 5
.L_4360e0:
          .string "DFA memory cache could be too small: "
          .zero 2
.L_436108:
          .string "StateSaver failed to restore state."
          .zero 4
.L_436130:
          .string "Unexpected special state in RunStateOnByte"
          .zero 5
.L_436160:
          .string "Failed to analyze start state."
.L_43617f:
          .string ","
.L_436181:
          .string "|"
.L_436183:
          .string "%s%d"
          .byte 0x5f
.L_436189:
          .byte 0x0
          .byte 0x58
.L_43618b:
          .zero 1
.L_43618c:
          .byte 0x2a
.L_43618d:
          .zero 1
.L_43618e:
          .string "(%p)"
.L_436193:
          .string " flag=%#x"
.L_43619d:
          .string "re2/dfa.cc"
.L_4361a8:
          .string "only room for "
.L_4361b7:
          .string " states."
.L_4361c0:
          .string "DeadState in RunStateOnByte"
.L_4361dc:
          .string "NULL state in RunStateOnByte"
.L_4361f9:
          .string "Text is not inside context."
          .zero 3
.L_436218:
          .long .L_41c8c0-.L_436218
          .long .L_41c8c0-.L_436218
          .long .L_41c8b0-.L_436218
          .long .L_41c880-.L_436218
          .long .L_41c870-.L_436218
          .long .L_41c8b0-.L_436218
          .long .L_41c880-.L_436218
          .zero 4
.L_436238:
          .string "RunStateOnByteUnlocked failed after ResetCache"
          .zero 1
.L_436268:
          .string "RunStateOnByteUnlocked failed after Reset"
          .zero 2
.L_436294:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5f
.L_436298:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
.L_43629c:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
.L_4362a0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4362b0:
          .string "Bad args: context does not contain text "
          .zero 7
.L_4362e0:
          .string "Unexpected opcode in short circuit: "
          .zero 3
.L_436308:
          .string "Unexpected empty-width in short circuit: "
.L_436332:
          .string "(?,?)"
.L_436338:
          .string "(%d,?)"
.L_43633f:
          .string "(%d,%d)"
.L_436347:
          .string "re2/nfa.cc"
.L_436352:
          .string "+"
.L_436354:
          .string "Bad args: nsubmatch="
.L_436369:
          .string "Unhandled "
.L_436374:
          .string " in step"
          .zero 3
.L_436380:
          .long .L_424b20-.L_436380
          .long .L_424b20-.L_436380
          .long .L_424ae0-.L_436380
          .long .L_424ab0-.L_436380
          .long .L_424ab0-.L_436380
          .long .L_424a41-.L_436380
          .long .L_424ab0-.L_436380
          .long .L_424ac0-.L_436380
.L_4363a0:
          .long .L_424d70-.L_4363a0
          .long .L_424d08-.L_4363a0
          .long .L_424e40-.L_4363a0
          .long .L_424df0-.L_4363a0
          .long .L_424dc8-.L_4363a0
          .long .L_424e40-.L_4363a0
          .long .L_424dd6-.L_4363a0
          .long .L_424ea0-.L_4363a0
.L_4363c0:
          .string "Cannot use SearchOnePass for unanchored matches."
.L_4363f1:
          .string "re2/onepass.cc"
.L_436400:
          .long .L_4289e0-.L_436400
          .long .L_4289e0-.L_436400
          .long .L_428950-.L_436400
          .long .L_4288b0-.L_436400
          .long .L_428920-.L_436400
          .long .L_4288f0-.L_436400
          .long .L_4288c2-.L_436400
          .zero 4
.L_436420:
          .string "Bad call to ParseState::ParsePerlFlags"
          .zero 1
.L_436448:
          .string "AddFoldedRange recurses too much."
.L_43646a:
          .string "re2/parse.cc"
.L_436477:
          .string "Bad hex digit "
.L_436486:
          .string "Concat of "
.L_436491:
          .string "RE2: unexpected op: "
.L_4364a6:
          .string "Any"
          .zero 2
.L_4364ac:
          .long .L_42a350-.L_4364ac
          .long .L_42a2fe-.L_4364ac
          .long .L_42a2fe-.L_4364ac
          .long .L_42a2fe-.L_4364ac
          .long .L_42a2fe-.L_4364ac
          .long .L_42a2fe-.L_4364ac
          .long .L_42a2fe-.L_4364ac
          .long .L_42a2fe-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a2eb-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a2d8-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a2c5-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a2b2-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a29f-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a28c-.L_4364ac
          .long .L_42a355-.L_4364ac
          .long .L_42a265-.L_4364ac
.L_4365d0:
          .long .L_42e1f0-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e1b8-.L_4365d0
          .long .L_42e180-.L_4365d0
          .long .L_42e170-.L_4365d0
          .long .L_42e0d0-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e380-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e370-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e330-.L_4365d0
          .long .L_42e250-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e240-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e390-.L_4365d0
          .long .L_42e210-.L_4365d0
          .long .L_42e200-.L_4365d0
          .zero 12
.L_436740:
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436748:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436760:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
.L_436770:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436778:
          .string "\t"
          .byte 0xd
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
.L_436780:
          .string "!"
          .byte 0x2f
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x7e
          .byte 0x0
.L_436790:
          .string " "
          .byte 0x7e
          .byte 0x0
.L_436794:
          .string "a"
          .byte 0x7a
          .byte 0x0
.L_436798:
          .string "!"
          .byte 0x7e
          .byte 0x0
.L_43679c:
          .string "0"
          .byte 0x39
          .byte 0x0
.L_4367a0:
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
.L_4367a8:
          .string "\t"
          .byte 0x9
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
.L_4367b0:
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4367b8:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
.L_4367c0:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
.L_4367cc:
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4367d0:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
.L_4367e0:
          .string "\t"
          .byte 0xa
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
.L_4367ec:
          .string "0"
          .byte 0x39
          .byte 0x0
.L_4367f0:
          .string "[:alnum:]"
.L_4367fa:
          .string "[:^alnum:]"
.L_436805:
          .string "[:alpha:]"
.L_43680f:
          .string "[:^alpha:]"
.L_43681a:
          .string "[:ascii:]"
.L_436824:
          .string "[:^ascii:]"
.L_43682f:
          .string "[:blank:]"
.L_436839:
          .string "[:^blank:]"
.L_436844:
          .string "[:cntrl:]"
.L_43684e:
          .string "[:^cntrl:]"
.L_436859:
          .string "[:digit:]"
.L_436863:
          .string "[:^digit:]"
.L_43686e:
          .string "[:graph:]"
.L_436878:
          .string "[:^graph:]"
.L_436883:
          .string "[:lower:]"
.L_43688d:
          .string "[:^lower:]"
.L_436898:
          .string "[:print:]"
.L_4368a2:
          .string "[:^print:]"
.L_4368ad:
          .string "[:punct:]"
.L_4368b7:
          .string "[:^punct:]"
.L_4368c2:
          .string "[:space:]"
.L_4368cc:
          .string "[:^space:]"
.L_4368d7:
          .string "[:upper:]"
.L_4368e1:
          .string "[:^upper:]"
.L_4368ec:
          .string "[:word:]"
.L_4368f5:
          .string "[:^word:]"
.L_4368ff:
          .string "[:xdigit:]"
.L_43690a:
          .string "[:^xdigit:]"
.L_436916:
          .string "\\d"
.L_436919:
          .string "\\D"
.L_43691c:
          .string "\\s"
.L_43691f:
          .byte 0x5c
.L_436920:
          .string "S"
.L_436922:
          .string "\\w"
.L_436925:
          .string "\\W"
.L_436928:
          .string "Unexpected opcode in IsMatch: "
.L_436947:
          .string "re2/prog.cc"
.L_436953:
          .string "/i"
.L_436956:
          .string "alt -> %d | %d"
.L_436965:
          .string "altmatch -> %d | %d"
.L_436979:
          .string "byte%s [%02x-%02x] -> %d"
.L_436992:
          .string "capture %d -> %d"
.L_4369a3:
          .string "emptywidth %#x -> %d"
.L_4369b8:
          .string "match! %d"
.L_4369c2:
          .string "nop -> %d"
.L_4369cc:
          .string "fail"
.L_4369d1:
          .byte 0x25
          .byte 0x64
          .byte 0x2e
          .byte 0x20
          .byte 0x25
          .byte 0x73
.L_4369d7:
          .byte 0xa
.L_4369d8:
          .zero 4
.L_4369dc:
          .long .L_42f010-.L_4369dc
          .long .L_42f030-.L_4369dc
          .long .L_42f050-.L_4369dc
          .long .L_42f090-.L_4369dc
          .long .L_42f0b0-.L_4369dc
          .long .L_42f0d0-.L_4369dc
          .long .L_42efd8-.L_4369dc
          .long .L_42f0f0-.L_4369dc
          .zero 4
.L_436a00:
          .string "SimplifyWalker::ShortVisit called"
          .zero 6
.L_436a28:
          .string "Case not handled in ComputeSimple: "
          .zero 4
.L_436a50:
          .string "re2/simplify.cc"
.L_436a60:
          .string "Malformed repeat "
.L_436a72:
          .string "Simplify case not handled: "
.L_436a8e:
          .string "Simplify failed on "
          .zero 2
.L_436aa4:
          .long .L_430a58-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_430978-.L_436aa4
          .long .L_430978-.L_436aa4
          .long .L_4309d0-.L_436aa4
          .long .L_4309d0-.L_436aa4
          .long .L_4309d0-.L_436aa4
          .long .L_430948-.L_436aa4
          .long .L_430a10-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_4309c2-.L_436aa4
          .long .L_430a30-.L_436aa4
          .long .L_4309c2-.L_436aa4
.L_436afc:
          .long .L_431be0-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a58-.L_436afc
          .long .L_431a58-.L_436afc
          .long .L_431ad0-.L_436afc
          .long .L_431ad0-.L_436afc
          .long .L_431ad0-.L_436afc
          .long .L_431b48-.L_436afc
          .long .L_431b80-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a00-.L_436afc
          .long .L_431a40-.L_436afc
          .long .L_431a00-.L_436afc
          .zero 12
.L_436b60:
          .string "N3re26Regexp6WalkerIPS0_EE"
          .zero 5
.L_436b80:
          .string "N3re214SimplifyWalkerE"
.L_436b97:
          .string "[]^-\\"
.L_436b9d:
          .string "\\r"
.L_436ba0:
          .string "\\t"
.L_436ba3:
          .string "\\n"
.L_436ba6:
          .string "\\f"
.L_436ba9:
          .string "\\x%02x"
.L_436bb0:
          .string "\\x{%x}"
.L_436bb7:
          .string "-"
.L_436bb9:
          .string "(){}[]*+?|.^$\\"
.L_436bc8:
          .byte 0x28
          .byte 0x3f
.L_436bca:
          .string ":"
.L_436bcc:
          .string "("
.L_436bce:
          .string "?P<"
.L_436bd2:
          .string ">"
.L_436bd4:
          .string "[^\\x00-\\x{10ffff}]"
.L_436be7:
          .string "(?:)"
.L_436bec:
          .string "re2/tostring.cc"
.L_436bfc:
          .string "Bad final char: "
.L_436c0d:
          .string "?"
.L_436c0f:
          .string "{%d,}"
.L_436c15:
          .string "{%d}"
.L_436c1a:
          .string "{%d,%d}"
.L_436c22:
          .byte 0x5c
.L_436c23:
          .string "C"
.L_436c25:
          .string "^"
.L_436c27:
          .string "$"
.L_436c29:
          .string "(?-m:^)"
.L_436c31:
          .string "(?-m:$)"
.L_436c39:
          .string "\\z"
.L_436c3c:
          .string "\\b"
.L_436c3f:
          .string "\\B"
.L_436c42:
          .string "(?HaveMatch:%d)"
.L_436c52:
          .string " [truncated]"
          .zero 1
.L_436c60:
          .long .L_4342e8-.L_436c60
          .long .L_4342e8-.L_436c60
          .long .L_4342d0-.L_436c60
          .long .L_434330-.L_436c60
          .long .L_434330-.L_436c60
          .long .L_434330-.L_436c60
          .long .L_434330-.L_436c60
          .long .L_434340-.L_436c60
.L_436c80:
          .long .L_4344f0-.L_436c80
          .long .L_4348a0-.L_436c80
          .long .L_434860-.L_436c80
          .long .L_434840-.L_436c80
          .long .L_434550-.L_436c80
          .long .L_434588-.L_436c80
          .long .L_4345c0-.L_436c80
          .long .L_434ba8-.L_436c80
          .long .L_434c40-.L_436c80
          .long .L_434c00-.L_436c80
          .long .L_434b30-.L_436c80
          .long .L_434b00-.L_436c80
          .long .L_434ac8-.L_436c80
          .long .L_434a90-.L_436c80
          .long .L_434a58-.L_436c80
          .long .L_4349e8-.L_436c80
          .long .L_4349b0-.L_436c80
          .long .L_434a20-.L_436c80
          .long .L_434980-.L_436c80
          .long .L_434940-.L_436c80
          .long .L_434900-.L_436c80
          .long .L_4348d0-.L_436c80
          .zero 8
.L_436ce0:
          .string "N3re214ToStringWalkerE"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x4a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x89
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xc0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x31
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x88
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x98
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xba
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0xc8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xda
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xea
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x26
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0x2a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xdf
          .byte 0xff
          .byte 0xff
          .byte 0x2b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0xdf
          .byte 0xff
          .byte 0xff
          .byte 0x32
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb6
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x63
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0x64
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x67
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x6d
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x6e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x6f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x70
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x72
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xeb
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xf2
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x80
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x22
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x32
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x79
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x75
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8b
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x5a
          .byte 0xff
          .byte 0xff
          .byte 0x90
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xa0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xaa
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x5a
          .byte 0xff
          .byte 0xff
          .byte 0x21
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4374f4:
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437500:
          .string "A"
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x4a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x89
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x54
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x56
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x59
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x63
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x65
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x69
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x71
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x75
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x83
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x89
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xfc
          .byte 0xff
          .byte 0xff
          .byte 0xbd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x50
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x90
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xba
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0xc3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xda
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xea
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x26
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0x2a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0xdf
          .byte 0xff
          .byte 0xff
          .byte 0x2b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0xdf
          .byte 0xff
          .byte 0xff
          .byte 0x32
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x83
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb6
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x63
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0x64
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x65
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x66
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x67
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6d
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x6e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x6f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x70
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x72
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf2
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0x27
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0x2d
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0x40
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x75
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x5a
          .byte 0xff
          .byte 0xff
          .byte 0x90
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x5a
          .byte 0xff
          .byte 0xff
          .byte 0x21
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0xd8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4382a0:
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4382b0:
          .byte 0x80
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xc9
          .byte 0x16
          .byte 0x1
          .byte 0x0
.L_4382c0:
          .byte 0x91
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0xd0
          .byte 0x5
          .byte 0xea
          .byte 0x5
          .byte 0xf0
          .byte 0x5
          .byte 0xf4
          .byte 0x5
          .byte 0x1d
          .byte 0xfb
          .byte 0x36
          .byte 0xfb
          .byte 0x38
          .byte 0xfb
          .byte 0x3c
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x40
          .byte 0xfb
          .byte 0x41
          .byte 0xfb
          .byte 0x43
          .byte 0xfb
          .byte 0x44
          .byte 0xfb
          .byte 0x46
          .byte 0xfb
          .byte 0x4f
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4382f0:
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xb
          .byte 0x1
          .byte 0x0
.L_438300:
          .byte 0x0
          .byte 0x10
          .byte 0x9f
          .byte 0x10
          .byte 0x60
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
.L_438308:
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x6a
          .byte 0x1
          .byte 0x0
.L_438310:
          .byte 0xa0
          .byte 0xa6
          .byte 0xf7
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438320:
          .byte 0x60
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x22
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x32
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x61
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x74
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x77
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xf1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438440:
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0xb
          .byte 0x6
          .byte 0xd
          .byte 0x6
          .byte 0x1a
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x20
          .byte 0x6
          .byte 0x3f
          .byte 0x6
          .byte 0x41
          .byte 0x6
          .byte 0x4a
          .byte 0x6
          .byte 0x56
          .byte 0x6
          .byte 0x5f
          .byte 0x6
          .byte 0x6a
          .byte 0x6
          .byte 0x6f
          .byte 0x6
          .byte 0x71
          .byte 0x6
          .byte 0xdc
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0x50
          .byte 0x7
          .byte 0x7f
          .byte 0x7
          .byte 0xa0
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa2
          .byte 0x8
          .byte 0xac
          .byte 0x8
          .byte 0xe4
          .byte 0x8
          .byte 0xfe
          .byte 0x8
          .byte 0x50
          .byte 0xfb
          .byte 0xc1
          .byte 0xfb
          .byte 0xd3
          .byte 0xfb
          .byte 0x3d
          .byte 0xfd
          .byte 0x50
          .byte 0xfd
          .byte 0x8f
          .byte 0xfd
          .byte 0x92
          .byte 0xfd
          .byte 0xc7
          .byte 0xfd
          .byte 0xf0
          .byte 0xfd
          .byte 0xfc
          .byte 0xfd
          .byte 0x70
          .byte 0xfe
          .byte 0x74
          .byte 0xfe
          .byte 0x76
          .byte 0xfe
          .byte 0xfc
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4384a0:
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0x11
          .byte 0x1
          .byte 0x0
.L_4384b0:
          .byte 0xe2
          .byte 0x3
          .byte 0xef
          .byte 0x3
          .byte 0x80
          .byte 0x2c
          .byte 0xf3
          .byte 0x2c
          .byte 0xf9
          .byte 0x2c
          .byte 0xff
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4384c0:
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0xf5
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x66
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x84
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xdd
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x71
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9e
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa6
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1c
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xcb
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xce
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x2b
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xb1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xdf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x6b
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x9a
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xe6
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc6
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xe0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf7
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438700:
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xb9
          .byte 0x2
          .byte 0xdf
          .byte 0x2
          .byte 0xe5
          .byte 0x2
          .byte 0xe9
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xff
          .byte 0x2
          .byte 0x74
          .byte 0x3
          .byte 0x74
          .byte 0x3
          .byte 0x7e
          .byte 0x3
          .byte 0x7e
          .byte 0x3
          .byte 0x85
          .byte 0x3
          .byte 0x85
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x89
          .byte 0x5
          .byte 0x89
          .byte 0x5
          .byte 0xc
          .byte 0x6
          .byte 0xc
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1f
          .byte 0x6
          .byte 0x1f
          .byte 0x6
          .byte 0x40
          .byte 0x6
          .byte 0x40
          .byte 0x6
          .byte 0x60
          .byte 0x6
          .byte 0x69
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0x64
          .byte 0x9
          .byte 0x65
          .byte 0x9
          .byte 0x3f
          .byte 0xe
          .byte 0x3f
          .byte 0xe
          .byte 0xd5
          .byte 0xf
          .byte 0xd8
          .byte 0xf
          .byte 0xfb
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0xeb
          .byte 0x16
          .byte 0xed
          .byte 0x16
          .byte 0x35
          .byte 0x17
          .byte 0x36
          .byte 0x17
          .byte 0x2
          .byte 0x18
          .byte 0x3
          .byte 0x18
          .byte 0x5
          .byte 0x18
          .byte 0x5
          .byte 0x18
          .byte 0xd3
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0xe1
          .byte 0x1c
          .byte 0xe1
          .byte 0x1c
          .byte 0xe9
          .byte 0x1c
          .byte 0xec
          .byte 0x1c
          .byte 0xee
          .byte 0x1c
          .byte 0xf3
          .byte 0x1c
          .byte 0xf5
          .byte 0x1c
          .byte 0xf6
          .byte 0x1c
          .byte 0x0
          .byte 0x20
          .byte 0xb
          .byte 0x20
          .byte 0xe
          .byte 0x20
          .byte 0x64
          .byte 0x20
          .byte 0x66
          .byte 0x20
          .byte 0x70
          .byte 0x20
          .byte 0x74
          .byte 0x20
          .byte 0x7e
          .byte 0x20
          .byte 0x80
          .byte 0x20
          .byte 0x8e
          .byte 0x20
          .byte 0xa0
          .byte 0x20
          .byte 0xba
          .byte 0x20
          .byte 0x0
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x2c
          .byte 0x21
          .byte 0x31
          .byte 0x21
          .byte 0x33
          .byte 0x21
          .byte 0x4d
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x5f
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x90
          .byte 0x21
          .byte 0xf3
          .byte 0x23
          .byte 0x0
          .byte 0x24
          .byte 0x26
          .byte 0x24
          .byte 0x40
          .byte 0x24
          .byte 0x4a
          .byte 0x24
          .byte 0x60
          .byte 0x24
          .byte 0xff
          .byte 0x26
          .byte 0x1
          .byte 0x27
          .byte 0xff
          .byte 0x27
          .byte 0x0
          .byte 0x29
          .byte 0x4c
          .byte 0x2b
          .byte 0x50
          .byte 0x2b
          .byte 0x59
          .byte 0x2b
          .byte 0x0
          .byte 0x2e
          .byte 0x3b
          .byte 0x2e
          .byte 0xf0
          .byte 0x2f
          .byte 0xfb
          .byte 0x2f
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x30
          .byte 0x6
          .byte 0x30
          .byte 0x6
          .byte 0x30
          .byte 0x8
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x3c
          .byte 0x30
          .byte 0x3f
          .byte 0x30
          .byte 0x9b
          .byte 0x30
          .byte 0x9c
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfc
          .byte 0x30
          .byte 0x90
          .byte 0x31
          .byte 0x9f
          .byte 0x31
          .byte 0xc0
          .byte 0x31
          .byte 0xe3
          .byte 0x31
          .byte 0x20
          .byte 0x32
          .byte 0x5f
          .byte 0x32
          .byte 0x7f
          .byte 0x32
          .byte 0xcf
          .byte 0x32
          .byte 0x58
          .byte 0x33
          .byte 0xff
          .byte 0x33
          .byte 0xc0
          .byte 0x4d
          .byte 0xff
          .byte 0x4d
          .byte 0x0
          .byte 0xa7
          .byte 0x21
          .byte 0xa7
          .byte 0x88
          .byte 0xa7
          .byte 0x8a
          .byte 0xa7
          .byte 0x30
          .byte 0xa8
          .byte 0x39
          .byte 0xa8
          .byte 0xcf
          .byte 0xa9
          .byte 0xcf
          .byte 0xa9
          .byte 0x3e
          .byte 0xfd
          .byte 0x3f
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0x10
          .byte 0xfe
          .byte 0x19
          .byte 0xfe
          .byte 0x30
          .byte 0xfe
          .byte 0x52
          .byte 0xfe
          .byte 0x54
          .byte 0xfe
          .byte 0x66
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x6b
          .byte 0xfe
          .byte 0xff
          .byte 0xfe
          .byte 0xff
          .byte 0xfe
          .byte 0x1
          .byte 0xff
          .byte 0x20
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x65
          .byte 0xff
          .byte 0x70
          .byte 0xff
          .byte 0x70
          .byte 0xff
          .byte 0x9e
          .byte 0xff
          .byte 0x9f
          .byte 0xff
          .byte 0xe0
          .byte 0xff
          .byte 0xe6
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xee
          .byte 0xff
          .byte 0xf9
          .byte 0xff
          .byte 0xfd
          .byte 0xff
.L_438860:
          .byte 0x40
          .byte 0x17
          .byte 0x53
          .byte 0x17
.L_438864:
          .byte 0xd0
          .byte 0xa4
          .byte 0xff
          .byte 0xa4
.L_438868:
          .byte 0x0
          .byte 0x8
          .byte 0x2d
          .byte 0x8
          .byte 0x30
          .byte 0x8
          .byte 0x3e
          .byte 0x8
.L_438870:
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438880:
          .byte 0x20
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
.L_438890:
          .byte 0x0
          .byte 0x1c
          .byte 0x37
          .byte 0x1c
          .byte 0x3b
          .byte 0x1c
          .byte 0x49
          .byte 0x1c
          .byte 0x4d
          .byte 0x1c
          .byte 0x4f
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4388a0:
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4388c0:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x1
          .byte 0x0
.L_4388f8:
          .byte 0x20
          .byte 0x17
          .byte 0x34
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438900:
          .byte 0x81
          .byte 0xe
          .byte 0x82
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x87
          .byte 0xe
          .byte 0x88
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x94
          .byte 0xe
          .byte 0x97
          .byte 0xe
          .byte 0x99
          .byte 0xe
          .byte 0x9f
          .byte 0xe
          .byte 0xa1
          .byte 0xe
          .byte 0xa3
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xaa
          .byte 0xe
          .byte 0xab
          .byte 0xe
          .byte 0xad
          .byte 0xe
          .byte 0xb9
          .byte 0xe
          .byte 0xbb
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xc0
          .byte 0xe
          .byte 0xc4
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xc8
          .byte 0xe
          .byte 0xcd
          .byte 0xe
          .byte 0xd0
          .byte 0xe
          .byte 0xd9
          .byte 0xe
          .byte 0xdc
          .byte 0xe
          .byte 0xdf
          .byte 0xe
.L_438948:
          .byte 0x0
          .byte 0x1b
          .byte 0x4b
          .byte 0x1b
          .byte 0x50
          .byte 0x1b
          .byte 0x7c
          .byte 0x1b
.L_438950:
          .byte 0x0
          .byte 0xa0
          .byte 0x8c
          .byte 0xa4
          .byte 0x90
          .byte 0xa4
          .byte 0xc6
          .byte 0xa4
.L_438958:
          .byte 0x30
          .byte 0xa9
          .byte 0x53
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
.L_438960:
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438970:
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0x10
          .byte 0x1
          .byte 0x0
.L_438980:
          .byte 0x82
          .byte 0xd
          .byte 0x83
          .byte 0xd
          .byte 0x85
          .byte 0xd
          .byte 0x96
          .byte 0xd
          .byte 0x9a
          .byte 0xd
          .byte 0xb1
          .byte 0xd
          .byte 0xb3
          .byte 0xd
          .byte 0xbb
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xc0
          .byte 0xd
          .byte 0xc6
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xcf
          .byte 0xd
          .byte 0xd4
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd8
          .byte 0xd
          .byte 0xdf
          .byte 0xd
          .byte 0xf2
          .byte 0xd
          .byte 0xf4
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4389b0:
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x18
          .byte 0x4
          .byte 0x18
          .byte 0x4
          .byte 0x18
          .byte 0x6
          .byte 0x18
          .byte 0xe
          .byte 0x18
          .byte 0x10
          .byte 0x18
          .byte 0x19
          .byte 0x18
          .byte 0x20
          .byte 0x18
          .byte 0x77
          .byte 0x18
          .byte 0x80
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4389e0:
          .byte 0x82
          .byte 0xc
          .byte 0x83
          .byte 0xc
          .byte 0x85
          .byte 0xc
          .byte 0x8c
          .byte 0xc
          .byte 0x8e
          .byte 0xc
          .byte 0x90
          .byte 0xc
          .byte 0x92
          .byte 0xc
          .byte 0xa8
          .byte 0xc
          .byte 0xaa
          .byte 0xc
          .byte 0xb3
          .byte 0xc
          .byte 0xb5
          .byte 0xc
          .byte 0xb9
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xc4
          .byte 0xc
          .byte 0xc6
          .byte 0xc
          .byte 0xc8
          .byte 0xc
          .byte 0xca
          .byte 0xc
          .byte 0xcd
          .byte 0xc
          .byte 0xd5
          .byte 0xc
          .byte 0xd6
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xe0
          .byte 0xc
          .byte 0xe3
          .byte 0xc
          .byte 0xe6
          .byte 0xc
          .byte 0xef
          .byte 0xc
          .byte 0xf1
          .byte 0xc
          .byte 0xf2
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438a20:
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x8
          .byte 0x1
          .byte 0x0
.L_438a50:
          .byte 0x40
          .byte 0xa8
          .byte 0x77
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438a58:
          .byte 0x80
          .byte 0xa9
          .byte 0xcd
          .byte 0xa9
          .byte 0xd0
          .byte 0xa9
          .byte 0xd9
          .byte 0xa9
          .byte 0xde
          .byte 0xa9
          .byte 0xdf
          .byte 0xa9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438a80:
          .byte 0x1
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0x10
          .byte 0xa
          .byte 0x13
          .byte 0xa
          .byte 0x28
          .byte 0xa
          .byte 0x2a
          .byte 0xa
          .byte 0x30
          .byte 0xa
          .byte 0x32
          .byte 0xa
          .byte 0x33
          .byte 0xa
          .byte 0x35
          .byte 0xa
          .byte 0x36
          .byte 0xa
          .byte 0x38
          .byte 0xa
          .byte 0x39
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3e
          .byte 0xa
          .byte 0x42
          .byte 0xa
          .byte 0x47
          .byte 0xa
          .byte 0x48
          .byte 0xa
          .byte 0x4b
          .byte 0xa
          .byte 0x4d
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x59
          .byte 0xa
          .byte 0x5c
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x66
          .byte 0xa
          .byte 0x75
          .byte 0xa
.L_438ac0:
          .byte 0xd0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xe8
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0x10
          .byte 0x1
          .byte 0x0
.L_438ad0:
          .byte 0x40
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0x8
          .byte 0x1
          .byte 0x0
.L_438ae0:
          .byte 0x0
          .byte 0x2c
          .byte 0x2e
          .byte 0x2c
          .byte 0x30
          .byte 0x2c
          .byte 0x5e
          .byte 0x2c
.L_438ae8:
          .byte 0x80
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438b00:
          .byte 0x81
          .byte 0x9
          .byte 0x83
          .byte 0x9
          .byte 0x85
          .byte 0x9
          .byte 0x8c
          .byte 0x9
          .byte 0x8f
          .byte 0x9
          .byte 0x90
          .byte 0x9
          .byte 0x93
          .byte 0x9
          .byte 0xa8
          .byte 0x9
          .byte 0xaa
          .byte 0x9
          .byte 0xb0
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb6
          .byte 0x9
          .byte 0xb9
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xc4
          .byte 0x9
          .byte 0xc7
          .byte 0x9
          .byte 0xc8
          .byte 0x9
          .byte 0xcb
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xdc
          .byte 0x9
          .byte 0xdd
          .byte 0x9
          .byte 0xdf
          .byte 0x9
          .byte 0xe3
          .byte 0x9
          .byte 0xe6
          .byte 0x9
          .byte 0xfb
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438b40:
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
.L_438b50:
          .byte 0x80
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x9
          .byte 0x1
          .byte 0x0
.L_438b58:
          .byte 0x0
          .byte 0x14
          .byte 0x7f
          .byte 0x16
          .byte 0xb0
          .byte 0x18
          .byte 0xf5
          .byte 0x18
.L_438b60:
          .byte 0xc0
          .byte 0x7
          .byte 0xfa
          .byte 0x7
.L_438b64:
          .byte 0x0
          .byte 0xa8
          .byte 0x2b
          .byte 0xa8
.L_438b68:
          .byte 0x40
          .byte 0x8
          .byte 0x5b
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
.L_438b70:
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438b90:
          .byte 0x80
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xe0
          .byte 0x17
          .byte 0xe9
          .byte 0x17
          .byte 0xf0
          .byte 0x17
          .byte 0xf9
          .byte 0x17
          .byte 0xe0
          .byte 0x19
          .byte 0xff
          .byte 0x19
.L_438ba0:
          .byte 0x60
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438bc0:
          .byte 0x81
          .byte 0xa
          .byte 0x83
          .byte 0xa
          .byte 0x85
          .byte 0xa
          .byte 0x8d
          .byte 0xa
          .byte 0x8f
          .byte 0xa
          .byte 0x91
          .byte 0xa
          .byte 0x93
          .byte 0xa
          .byte 0xa8
          .byte 0xa
          .byte 0xaa
          .byte 0xa
          .byte 0xb0
          .byte 0xa
          .byte 0xb2
          .byte 0xa
          .byte 0xb3
          .byte 0xa
          .byte 0xb5
          .byte 0xa
          .byte 0xb9
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xc5
          .byte 0xa
          .byte 0xc7
          .byte 0xa
          .byte 0xc9
          .byte 0xa
          .byte 0xcb
          .byte 0xa
          .byte 0xcd
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xe0
          .byte 0xa
          .byte 0xe3
          .byte 0xa
          .byte 0xe6
          .byte 0xa
          .byte 0xf1
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438c00:
          .byte 0x80
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd9
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438c20:
          .byte 0x1
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x5
          .byte 0xb
          .byte 0xc
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0x10
          .byte 0xb
          .byte 0x13
          .byte 0xb
          .byte 0x28
          .byte 0xb
          .byte 0x2a
          .byte 0xb
          .byte 0x30
          .byte 0xb
          .byte 0x32
          .byte 0xb
          .byte 0x33
          .byte 0xb
          .byte 0x35
          .byte 0xb
          .byte 0x39
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x44
          .byte 0xb
          .byte 0x47
          .byte 0xb
          .byte 0x48
          .byte 0xb
          .byte 0x4b
          .byte 0xb
          .byte 0x4d
          .byte 0xb
          .byte 0x56
          .byte 0xb
          .byte 0x57
          .byte 0xb
          .byte 0x5c
          .byte 0xb
          .byte 0x5d
          .byte 0xb
          .byte 0x5f
          .byte 0xb
          .byte 0x63
          .byte 0xb
          .byte 0x66
          .byte 0xb
          .byte 0x77
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438c60:
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x8f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
.L_438c78:
          .byte 0xa0
          .byte 0x13
          .byte 0xf4
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438c80:
          .byte 0x0
          .byte 0x19
          .byte 0x1c
          .byte 0x19
          .byte 0x20
          .byte 0x19
          .byte 0x2b
          .byte 0x19
          .byte 0x30
          .byte 0x19
          .byte 0x3b
          .byte 0x19
          .byte 0x40
          .byte 0x19
          .byte 0x40
          .byte 0x19
          .byte 0x44
          .byte 0x19
          .byte 0x4f
          .byte 0x19
.L_438c94:
          .byte 0x50
          .byte 0x1c
          .byte 0x7f
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438ca0:
          .byte 0x80
          .byte 0x19
          .byte 0xab
          .byte 0x19
          .byte 0xb0
          .byte 0x19
          .byte 0xc9
          .byte 0x19
          .byte 0xd0
          .byte 0x19
          .byte 0xda
          .byte 0x19
          .byte 0xde
          .byte 0x19
          .byte 0xdf
          .byte 0x19
.L_438cb0:
          .byte 0x80
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0x4
          .byte 0x1
          .byte 0x0
.L_438cc0:
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438cd0:
          .byte 0xa1
          .byte 0x30
          .byte 0xfa
          .byte 0x30
          .byte 0xfd
          .byte 0x30
          .byte 0xff
          .byte 0x30
          .byte 0xf0
          .byte 0x31
          .byte 0xff
          .byte 0x31
          .byte 0xd0
          .byte 0x32
          .byte 0xfe
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0x57
          .byte 0x33
          .byte 0x66
          .byte 0xff
          .byte 0x6f
          .byte 0xff
          .byte 0x71
          .byte 0xff
          .byte 0x9d
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438cf0:
          .byte 0x30
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
.L_438cf8:
          .byte 0xa0
          .byte 0x16
          .byte 0xea
          .byte 0x16
          .byte 0xee
          .byte 0x16
          .byte 0xf0
          .byte 0x16
.L_438d00:
          .byte 0x0
          .byte 0x7
          .byte 0xd
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0x4a
          .byte 0x7
          .byte 0x4d
          .byte 0x7
          .byte 0x4f
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438d10:
          .byte 0x0
          .byte 0xaa
          .byte 0x36
          .byte 0xaa
          .byte 0x40
          .byte 0xaa
          .byte 0x4d
          .byte 0xaa
          .byte 0x50
          .byte 0xaa
          .byte 0x59
          .byte 0xaa
          .byte 0x5c
          .byte 0xaa
          .byte 0x5f
          .byte 0xaa
.L_438d20:
          .byte 0x40
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xb
          .byte 0x1
          .byte 0x0
.L_438d30:
          .byte 0x80
          .byte 0x16
          .byte 0x9c
          .byte 0x16
.L_438d34:
          .byte 0x0
          .byte 0xa5
          .byte 0x2b
          .byte 0xa6
.L_438d38:
          .byte 0x80
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xdb
          .byte 0xaa
          .byte 0xdf
          .byte 0xaa
.L_438d40:
          .byte 0x80
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438d50:
          .byte 0x40
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
.L_438d60:
          .byte 0x70
          .byte 0x3
          .byte 0x73
          .byte 0x3
          .byte 0x75
          .byte 0x3
          .byte 0x77
          .byte 0x3
          .byte 0x7a
          .byte 0x3
          .byte 0x7d
          .byte 0x3
          .byte 0x84
          .byte 0x3
          .byte 0x84
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x88
          .byte 0x3
          .byte 0x8a
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8e
          .byte 0x3
          .byte 0xa1
          .byte 0x3
          .byte 0xa3
          .byte 0x3
          .byte 0xe1
          .byte 0x3
          .byte 0xf0
          .byte 0x3
          .byte 0xff
          .byte 0x3
          .byte 0x26
          .byte 0x1d
          .byte 0x2a
          .byte 0x1d
          .byte 0x5d
          .byte 0x1d
          .byte 0x61
          .byte 0x1d
          .byte 0x66
          .byte 0x1d
          .byte 0x6a
          .byte 0x1d
          .byte 0xbf
          .byte 0x1d
          .byte 0xbf
          .byte 0x1d
          .byte 0x0
          .byte 0x1f
          .byte 0x15
          .byte 0x1f
          .byte 0x18
          .byte 0x1f
          .byte 0x1d
          .byte 0x1f
          .byte 0x20
          .byte 0x1f
          .byte 0x45
          .byte 0x1f
          .byte 0x48
          .byte 0x1f
          .byte 0x4d
          .byte 0x1f
          .byte 0x50
          .byte 0x1f
          .byte 0x57
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5f
          .byte 0x1f
          .byte 0x7d
          .byte 0x1f
          .byte 0x80
          .byte 0x1f
          .byte 0xb4
          .byte 0x1f
          .byte 0xb6
          .byte 0x1f
          .byte 0xc4
          .byte 0x1f
          .byte 0xc6
          .byte 0x1f
          .byte 0xd3
          .byte 0x1f
          .byte 0xd6
          .byte 0x1f
          .byte 0xdb
          .byte 0x1f
          .byte 0xdd
          .byte 0x1f
          .byte 0xef
          .byte 0x1f
          .byte 0xf2
          .byte 0x1f
          .byte 0xf4
          .byte 0x1f
          .byte 0xf6
          .byte 0x1f
          .byte 0xfe
          .byte 0x1f
          .byte 0x26
          .byte 0x21
          .byte 0x26
          .byte 0x21
.L_438ddc:
          .byte 0x0
          .byte 0x28
          .byte 0xff
          .byte 0x28
.L_438de0:
          .byte 0x80
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
.L_438df0:
          .byte 0x30
          .byte 0x2d
          .byte 0x67
          .byte 0x2d
          .byte 0x6f
          .byte 0x2d
          .byte 0x70
          .byte 0x2d
          .byte 0x7f
          .byte 0x2d
          .byte 0x7f
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438e00:
          .byte 0x0
          .byte 0xf
          .byte 0x47
          .byte 0xf
          .byte 0x49
          .byte 0xf
          .byte 0x6c
          .byte 0xf
          .byte 0x71
          .byte 0xf
          .byte 0x97
          .byte 0xf
          .byte 0x99
          .byte 0xf
          .byte 0xbc
          .byte 0xf
          .byte 0xbe
          .byte 0xf
          .byte 0xcc
          .byte 0xf
          .byte 0xce
          .byte 0xf
          .byte 0xd4
          .byte 0xf
          .byte 0xd9
          .byte 0xf
          .byte 0xda
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438e20:
          .byte 0x1
          .byte 0xe
          .byte 0x3a
          .byte 0xe
          .byte 0x40
          .byte 0xe
          .byte 0x5b
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438e30:
          .byte 0x0
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x53
          .byte 0x9
          .byte 0x63
          .byte 0x9
          .byte 0x66
          .byte 0x9
          .byte 0x77
          .byte 0x9
          .byte 0x79
          .byte 0x9
          .byte 0x7f
          .byte 0x9
          .byte 0xe0
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438e48:
          .byte 0xc0
          .byte 0x1b
          .byte 0xf3
          .byte 0x1b
          .byte 0xfc
          .byte 0x1b
          .byte 0xff
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438e60:
          .byte 0xa0
          .byte 0x10
          .byte 0xc5
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xd0
          .byte 0x10
          .byte 0xfa
          .byte 0x10
          .byte 0xfc
          .byte 0x10
          .byte 0xff
          .byte 0x10
          .byte 0x0
          .byte 0x2d
          .byte 0x25
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
.L_438e80:
          .byte 0x50
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0x4
          .byte 0x1
          .byte 0x0
.L_438e88:
          .byte 0x80
          .byte 0xa8
          .byte 0xc4
          .byte 0xa8
          .byte 0xce
          .byte 0xa8
          .byte 0xd9
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438ea0:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xb8
          .byte 0x2
          .byte 0xe0
          .byte 0x2
          .byte 0xe4
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0x25
          .byte 0x1d
          .byte 0x2c
          .byte 0x1d
          .byte 0x5c
          .byte 0x1d
          .byte 0x62
          .byte 0x1d
          .byte 0x65
          .byte 0x1d
          .byte 0x6b
          .byte 0x1d
          .byte 0x77
          .byte 0x1d
          .byte 0x79
          .byte 0x1d
          .byte 0xbe
          .byte 0x1d
          .byte 0x0
          .byte 0x1e
          .byte 0xff
          .byte 0x1e
          .byte 0x71
          .byte 0x20
          .byte 0x71
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x90
          .byte 0x20
          .byte 0x9c
          .byte 0x20
          .byte 0x2a
          .byte 0x21
          .byte 0x2b
          .byte 0x21
          .byte 0x32
          .byte 0x21
          .byte 0x32
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x60
          .byte 0x21
          .byte 0x88
          .byte 0x21
          .byte 0x60
          .byte 0x2c
          .byte 0x7f
          .byte 0x2c
          .byte 0x22
          .byte 0xa7
          .byte 0x87
          .byte 0xa7
          .byte 0x8b
          .byte 0xa7
          .byte 0x8e
          .byte 0xa7
          .byte 0x90
          .byte 0xa7
          .byte 0x93
          .byte 0xa7
          .byte 0xa0
          .byte 0xa7
          .byte 0xaa
          .byte 0xa7
          .byte 0xf8
          .byte 0xa7
          .byte 0xff
          .byte 0xa7
          .byte 0x0
          .byte 0xfb
          .byte 0x6
          .byte 0xfb
          .byte 0x21
          .byte 0xff
          .byte 0x3a
          .byte 0xff
          .byte 0x41
          .byte 0xff
          .byte 0x5a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438f20:
          .byte 0xa0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x1
          .byte 0x0
.L_438f30:
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x1
          .byte 0x0
.L_438f40:
          .byte 0x20
          .byte 0x1a
          .byte 0x5e
          .byte 0x1a
          .byte 0x60
          .byte 0x1a
          .byte 0x7c
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x89
          .byte 0x1a
          .byte 0x90
          .byte 0x1a
          .byte 0x99
          .byte 0x1a
          .byte 0xa0
          .byte 0x1a
          .byte 0xad
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438f60:
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x6
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x13
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x17
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x19
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xa
          .byte 0x1
          .byte 0x0
.L_438fa0:
          .byte 0x0
          .byte 0x1a
          .byte 0x1b
          .byte 0x1a
          .byte 0x1e
          .byte 0x1a
          .byte 0x1f
          .byte 0x1a
.L_438fa8:
          .byte 0x0
          .byte 0xa9
          .byte 0x2f
          .byte 0xa9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438fb0:
          .byte 0x50
          .byte 0x19
          .byte 0x6d
          .byte 0x19
          .byte 0x70
          .byte 0x19
          .byte 0x74
          .byte 0x19
.L_438fb8:
          .byte 0xe0
          .byte 0xaa
          .byte 0xf6
          .byte 0xaa
          .byte 0xc0
          .byte 0xab
          .byte 0xed
          .byte 0xab
          .byte 0xf0
          .byte 0xab
          .byte 0xf9
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438fc8:
          .byte 0x60
          .byte 0x17
          .byte 0x6c
          .byte 0x17
          .byte 0x6e
          .byte 0x17
          .byte 0x70
          .byte 0x17
          .byte 0x72
          .byte 0x17
          .byte 0x73
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438fe0:
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
.L_438ff0:
          .byte 0x41
          .byte 0x30
          .byte 0x96
          .byte 0x30
          .byte 0x9d
          .byte 0x30
          .byte 0x9f
          .byte 0x30
.L_438ff8:
          .byte 0xa0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x1
          .byte 0x0
.L_439000:
          .byte 0x2
          .byte 0xd
          .byte 0x3
          .byte 0xd
          .byte 0x5
          .byte 0xd
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xd
          .byte 0x10
          .byte 0xd
          .byte 0x12
          .byte 0xd
          .byte 0x3a
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x44
          .byte 0xd
          .byte 0x46
          .byte 0xd
          .byte 0x48
          .byte 0xd
          .byte 0x4a
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x60
          .byte 0xd
          .byte 0x63
          .byte 0xd
          .byte 0x66
          .byte 0xd
          .byte 0x75
          .byte 0xd
          .byte 0x79
          .byte 0xd
          .byte 0x7f
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439030:
          .byte 0x0
          .byte 0x17
          .byte 0xc
          .byte 0x17
          .byte 0xe
          .byte 0x17
          .byte 0x14
          .byte 0x17
.L_439038:
          .byte 0x80
          .byte 0x1b
          .byte 0xbf
          .byte 0x1b
          .byte 0xc0
          .byte 0x1c
          .byte 0xc7
          .byte 0x1c
.L_439040:
          .byte 0xea
          .byte 0x2
          .byte 0xeb
          .byte 0x2
          .byte 0x5
          .byte 0x31
          .byte 0x2d
          .byte 0x31
          .byte 0xa0
          .byte 0x31
          .byte 0xba
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439060:
          .byte 0x82
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x85
          .byte 0xb
          .byte 0x8a
          .byte 0xb
          .byte 0x8e
          .byte 0xb
          .byte 0x90
          .byte 0xb
          .byte 0x92
          .byte 0xb
          .byte 0x95
          .byte 0xb
          .byte 0x99
          .byte 0xb
          .byte 0x9a
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9e
          .byte 0xb
          .byte 0x9f
          .byte 0xb
          .byte 0xa3
          .byte 0xb
          .byte 0xa4
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xaa
          .byte 0xb
          .byte 0xae
          .byte 0xb
          .byte 0xb9
          .byte 0xb
          .byte 0xbe
          .byte 0xb
          .byte 0xc2
          .byte 0xb
          .byte 0xc6
          .byte 0xb
          .byte 0xc8
          .byte 0xb
          .byte 0xca
          .byte 0xb
          .byte 0xcd
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0xe6
          .byte 0xb
          .byte 0xfa
          .byte 0xb
.L_4390a0:
          .byte 0x31
          .byte 0x5
          .byte 0x56
          .byte 0x5
          .byte 0x59
          .byte 0x5
          .byte 0x5f
          .byte 0x5
          .byte 0x61
          .byte 0x5
          .byte 0x87
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0x13
          .byte 0xfb
          .byte 0x17
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4390c0:
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xd6
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x34
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xfa
          .byte 0x2
          .byte 0x0
.L_4390e0:
          .byte 0x80
          .byte 0x2e
          .byte 0x99
          .byte 0x2e
          .byte 0x9b
          .byte 0x2e
          .byte 0xf3
          .byte 0x2e
          .byte 0x0
          .byte 0x2f
          .byte 0xd5
          .byte 0x2f
          .byte 0x5
          .byte 0x30
          .byte 0x5
          .byte 0x30
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x30
          .byte 0x21
          .byte 0x30
          .byte 0x29
          .byte 0x30
          .byte 0x38
          .byte 0x30
          .byte 0x3b
          .byte 0x30
          .byte 0x0
          .byte 0x34
          .byte 0xb5
          .byte 0x4d
          .byte 0x0
          .byte 0x4e
          .byte 0xcc
          .byte 0x9f
          .byte 0x0
          .byte 0xf9
          .byte 0x6d
          .byte 0xfa
          .byte 0x70
          .byte 0xfa
          .byte 0xd9
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439110:
          .byte 0xa0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbf
          .byte 0x9
          .byte 0x1
          .byte 0x0
.L_439120:
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x69
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x85
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439160:
          .byte 0x0
          .byte 0x3
          .byte 0x6f
          .byte 0x3
          .byte 0x85
          .byte 0x4
          .byte 0x86
          .byte 0x4
          .byte 0x4b
          .byte 0x6
          .byte 0x55
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0x51
          .byte 0x9
          .byte 0x52
          .byte 0x9
          .byte 0xd0
          .byte 0x1c
          .byte 0xd2
          .byte 0x1c
          .byte 0xd4
          .byte 0x1c
          .byte 0xe0
          .byte 0x1c
          .byte 0xe2
          .byte 0x1c
          .byte 0xe8
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xc0
          .byte 0x1d
          .byte 0xe6
          .byte 0x1d
          .byte 0xfc
          .byte 0x1d
          .byte 0xff
          .byte 0x1d
          .byte 0xc
          .byte 0x20
          .byte 0xd
          .byte 0x20
          .byte 0xd0
          .byte 0x20
          .byte 0xf0
          .byte 0x20
          .byte 0x2a
          .byte 0x30
          .byte 0x2d
          .byte 0x30
          .byte 0x99
          .byte 0x30
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0xfe
          .byte 0xf
          .byte 0xfe
          .byte 0x20
          .byte 0xfe
          .byte 0x26
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4391c0:
          .byte 0x0
          .byte 0x12
          .byte 0x48
          .byte 0x12
          .byte 0x4a
          .byte 0x12
          .byte 0x4d
          .byte 0x12
          .byte 0x50
          .byte 0x12
          .byte 0x56
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x5a
          .byte 0x12
          .byte 0x5d
          .byte 0x12
          .byte 0x60
          .byte 0x12
          .byte 0x88
          .byte 0x12
          .byte 0x8a
          .byte 0x12
          .byte 0x8d
          .byte 0x12
          .byte 0x90
          .byte 0x12
          .byte 0xb0
          .byte 0x12
          .byte 0xb2
          .byte 0x12
          .byte 0xb5
          .byte 0x12
          .byte 0xb8
          .byte 0x12
          .byte 0xbe
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc2
          .byte 0x12
          .byte 0xc5
          .byte 0x12
          .byte 0xc8
          .byte 0x12
          .byte 0xd6
          .byte 0x12
          .byte 0xd8
          .byte 0x12
          .byte 0x10
          .byte 0x13
          .byte 0x12
          .byte 0x13
          .byte 0x15
          .byte 0x13
          .byte 0x18
          .byte 0x13
          .byte 0x5a
          .byte 0x13
          .byte 0x5d
          .byte 0x13
          .byte 0x7c
          .byte 0x13
          .byte 0x80
          .byte 0x13
          .byte 0x99
          .byte 0x13
          .byte 0x80
          .byte 0x2d
          .byte 0x96
          .byte 0x2d
          .byte 0xa0
          .byte 0x2d
          .byte 0xa6
          .byte 0x2d
          .byte 0xa8
          .byte 0x2d
          .byte 0xae
          .byte 0x2d
          .byte 0xb0
          .byte 0x2d
          .byte 0xb6
          .byte 0x2d
          .byte 0xb8
          .byte 0x2d
          .byte 0xbe
          .byte 0x2d
          .byte 0xc0
          .byte 0x2d
          .byte 0xc6
          .byte 0x2d
          .byte 0xc8
          .byte 0x2d
          .byte 0xce
          .byte 0x2d
          .byte 0xd0
          .byte 0x2d
          .byte 0xd6
          .byte 0x2d
          .byte 0xd8
          .byte 0x2d
          .byte 0xde
          .byte 0x2d
          .byte 0x1
          .byte 0xab
          .byte 0x6
          .byte 0xab
          .byte 0x9
          .byte 0xab
          .byte 0xe
          .byte 0xab
          .byte 0x11
          .byte 0xab
          .byte 0x16
          .byte 0xab
          .byte 0x20
          .byte 0xab
          .byte 0x26
          .byte 0xab
          .byte 0x28
          .byte 0xab
          .byte 0x2e
          .byte 0xab
.L_439240:
          .byte 0x60
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439260:
          .byte 0x0
          .byte 0x11
          .byte 0xff
          .byte 0x11
          .byte 0x2e
          .byte 0x30
          .byte 0x2f
          .byte 0x30
          .byte 0x31
          .byte 0x31
          .byte 0x8e
          .byte 0x31
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x32
          .byte 0x60
          .byte 0x32
          .byte 0x7e
          .byte 0x32
          .byte 0x60
          .byte 0xa9
          .byte 0x7c
          .byte 0xa9
          .byte 0x0
          .byte 0xac
          .byte 0xa3
          .byte 0xd7
          .byte 0xb0
          .byte 0xd7
          .byte 0xc6
          .byte 0xd7
          .byte 0xcb
          .byte 0xd7
          .byte 0xfb
          .byte 0xd7
          .byte 0xa0
          .byte 0xff
          .byte 0xbe
          .byte 0xff
          .byte 0xc2
          .byte 0xff
          .byte 0xc7
          .byte 0xff
          .byte 0xca
          .byte 0xff
          .byte 0xcf
          .byte 0xff
          .byte 0xd2
          .byte 0xff
          .byte 0xd7
          .byte 0xff
          .byte 0xda
          .byte 0xff
          .byte 0xdc
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4392a0:
          .byte 0x0
          .byte 0x4
          .byte 0x84
          .byte 0x4
          .byte 0x87
          .byte 0x4
          .byte 0x27
          .byte 0x5
          .byte 0x2b
          .byte 0x1d
          .byte 0x2b
          .byte 0x1d
          .byte 0x78
          .byte 0x1d
          .byte 0x78
          .byte 0x1d
          .byte 0xe0
          .byte 0x2d
          .byte 0xff
          .byte 0x2d
          .byte 0x40
          .byte 0xa6
          .byte 0x97
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4392c0:
          .byte 0x1
          .byte 0xc
          .byte 0x3
          .byte 0xc
          .byte 0x5
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xe
          .byte 0xc
          .byte 0x10
          .byte 0xc
          .byte 0x12
          .byte 0xc
          .byte 0x28
          .byte 0xc
          .byte 0x2a
          .byte 0xc
          .byte 0x33
          .byte 0xc
          .byte 0x35
          .byte 0xc
          .byte 0x39
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x44
          .byte 0xc
          .byte 0x46
          .byte 0xc
          .byte 0x48
          .byte 0xc
          .byte 0x4a
          .byte 0xc
          .byte 0x4d
          .byte 0xc
          .byte 0x55
          .byte 0xc
          .byte 0x56
          .byte 0xc
          .byte 0x58
          .byte 0xc
          .byte 0x59
          .byte 0xc
          .byte 0x60
          .byte 0xc
          .byte 0x63
          .byte 0xc
          .byte 0x66
          .byte 0xc
          .byte 0x6f
          .byte 0xc
          .byte 0x78
          .byte 0xc
          .byte 0x7f
          .byte 0xc
.L_4392f8:
          .byte 0x80
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439300:
          .string " "
          .byte 0x20
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x80
          .byte 0x16
          .byte 0x0
          .byte 0x20
          .byte 0xa
          .byte 0x20
          .byte 0x2f
          .byte 0x20
          .byte 0x2f
          .byte 0x20
          .byte 0x5f
          .byte 0x20
          .byte 0x5f
          .byte 0x20
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x30
.L_43931c:
          .byte 0x29
          .byte 0x20
          .byte 0x29
          .byte 0x20
.L_439320:
          .byte 0x0
          .byte 0xd8
          .byte 0xff
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439340:
          .byte 0xbd
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xe
          .byte 0x0
.L_439360:
          .byte 0xad
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xe
          .byte 0x18
          .byte 0xe
          .byte 0x18
          .byte 0xb
          .byte 0x20
          .byte 0xf
          .byte 0x20
          .byte 0x2a
          .byte 0x20
          .byte 0x2e
          .byte 0x20
          .byte 0x60
          .byte 0x20
          .byte 0x64
          .byte 0x20
          .byte 0x66
          .byte 0x20
          .byte 0x6f
          .byte 0x20
          .byte 0xff
          .byte 0xfe
          .byte 0xff
          .byte 0xfe
          .byte 0xf9
          .byte 0xff
          .byte 0xfb
          .byte 0xff
.L_439390:
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4393a0:
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0x10
          .byte 0x0
.L_4393b0:
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xf8
.L_4393b4:
          .string "( ( "
          .zero 7
.L_4393c0:
          .string " "
          .byte 0x20
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x80
          .byte 0x16
          .byte 0x0
          .byte 0x20
          .byte 0xa
          .byte 0x20
          .byte 0x28
          .byte 0x20
          .byte 0x29
          .byte 0x20
          .byte 0x2f
          .byte 0x20
          .byte 0x2f
          .byte 0x20
          .byte 0x5f
          .byte 0x20
          .byte 0x5f
          .byte 0x20
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x30
.L_4393e0:
          .string "$"
          .byte 0x24
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x8f
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0xb
          .byte 0x6
          .byte 0xb
          .byte 0x6
          .byte 0xf2
          .byte 0x9
          .byte 0xf3
          .byte 0x9
          .byte 0xfb
          .byte 0x9
          .byte 0xfb
          .byte 0x9
          .byte 0xf1
          .byte 0xa
          .byte 0xf1
          .byte 0xa
          .byte 0xf9
          .byte 0xb
          .byte 0xf9
          .byte 0xb
          .byte 0x3f
          .byte 0xe
          .byte 0x3f
          .byte 0xe
          .byte 0xdb
          .byte 0x17
          .byte 0xdb
          .byte 0x17
          .byte 0xa0
          .byte 0x20
          .byte 0xba
          .byte 0x20
          .byte 0x38
          .byte 0xa8
          .byte 0x38
          .byte 0xa8
          .byte 0xfc
          .byte 0xfd
          .byte 0xfc
          .byte 0xfd
          .byte 0x69
          .byte 0xfe
          .byte 0x69
          .byte 0xfe
          .byte 0x4
          .byte 0xff
          .byte 0x4
          .byte 0xff
          .byte 0xe0
          .byte 0xff
          .byte 0xe1
          .byte 0xff
          .byte 0xe5
          .byte 0xff
          .byte 0xe6
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439440:
          .byte 0xc1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xf1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4394a0:
          .string "+"
          .byte 0x2b
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xf6
          .byte 0x3
          .byte 0xf6
          .byte 0x3
          .byte 0x6
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x44
          .byte 0x20
          .byte 0x44
          .byte 0x20
          .byte 0x52
          .byte 0x20
          .byte 0x52
          .byte 0x20
          .byte 0x7a
          .byte 0x20
          .byte 0x7c
          .byte 0x20
          .byte 0x8a
          .byte 0x20
          .byte 0x8c
          .byte 0x20
          .byte 0x18
          .byte 0x21
          .byte 0x18
          .byte 0x21
          .byte 0x40
          .byte 0x21
          .byte 0x44
          .byte 0x21
          .byte 0x4b
          .byte 0x21
          .byte 0x4b
          .byte 0x21
          .byte 0x90
          .byte 0x21
          .byte 0x94
          .byte 0x21
          .byte 0x9a
          .byte 0x21
          .byte 0x9b
          .byte 0x21
          .byte 0xa0
          .byte 0x21
          .byte 0xa0
          .byte 0x21
          .byte 0xa3
          .byte 0x21
          .byte 0xa3
          .byte 0x21
          .byte 0xa6
          .byte 0x21
          .byte 0xa6
          .byte 0x21
          .byte 0xae
          .byte 0x21
          .byte 0xae
          .byte 0x21
          .byte 0xce
          .byte 0x21
          .byte 0xcf
          .byte 0x21
          .byte 0xd2
          .byte 0x21
          .byte 0xd2
          .byte 0x21
          .byte 0xd4
          .byte 0x21
          .byte 0xd4
          .byte 0x21
          .byte 0xf4
          .byte 0x21
          .byte 0xff
          .byte 0x22
          .byte 0x20
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x7c
          .byte 0x23
          .byte 0x7c
          .byte 0x23
          .byte 0x9b
          .byte 0x23
          .byte 0xb3
          .byte 0x23
          .byte 0xdc
          .byte 0x23
          .byte 0xe1
          .byte 0x23
          .byte 0xb7
          .byte 0x25
          .byte 0xb7
          .byte 0x25
          .byte 0xc1
          .byte 0x25
          .byte 0xc1
          .byte 0x25
          .byte 0xf8
          .byte 0x25
          .byte 0xff
          .byte 0x25
          .byte 0x6f
          .byte 0x26
          .byte 0x6f
          .byte 0x26
          .byte 0xc0
          .byte 0x27
          .byte 0xc4
          .byte 0x27
          .byte 0xc7
          .byte 0x27
          .byte 0xe5
          .byte 0x27
          .byte 0xf0
          .byte 0x27
          .byte 0xff
          .byte 0x27
          .byte 0x0
          .byte 0x29
          .byte 0x82
          .byte 0x29
          .byte 0x99
          .byte 0x29
          .byte 0xd7
          .byte 0x29
          .byte 0xdc
          .byte 0x29
          .byte 0xfb
          .byte 0x29
          .byte 0xfe
          .byte 0x29
          .byte 0xff
          .byte 0x2a
          .byte 0x30
          .byte 0x2b
          .byte 0x44
          .byte 0x2b
          .byte 0x47
          .byte 0x2b
          .byte 0x4c
          .byte 0x2b
          .byte 0x29
          .byte 0xfb
          .byte 0x29
          .byte 0xfb
          .byte 0x62
          .byte 0xfe
          .byte 0x62
          .byte 0xfe
          .byte 0x64
          .byte 0xfe
          .byte 0x66
          .byte 0xfe
          .byte 0xb
          .byte 0xff
          .byte 0xb
          .byte 0xff
          .byte 0x1c
          .byte 0xff
          .byte 0x1e
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0x5e
          .byte 0xff
          .byte 0x5e
          .byte 0xff
          .byte 0xe2
          .byte 0xff
          .byte 0xe2
          .byte 0xff
          .byte 0xe9
          .byte 0xff
          .byte 0xec
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439580:
          .byte 0x37
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0xf5
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x84
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xdd
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x2b
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xb1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xdf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x6b
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x9a
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xe6
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc6
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xe0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf7
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439700:
          .byte 0xa6
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0x82
          .byte 0x4
          .byte 0x82
          .byte 0x4
          .byte 0xe
          .byte 0x6
          .byte 0xf
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xe9
          .byte 0x6
          .byte 0xe9
          .byte 0x6
          .byte 0xfd
          .byte 0x6
          .byte 0xfe
          .byte 0x6
          .byte 0xf6
          .byte 0x7
          .byte 0xf6
          .byte 0x7
          .byte 0xfa
          .byte 0x9
          .byte 0xfa
          .byte 0x9
          .byte 0x70
          .byte 0xb
          .byte 0x70
          .byte 0xb
          .byte 0xf3
          .byte 0xb
          .byte 0xf8
          .byte 0xb
          .byte 0xfa
          .byte 0xb
          .byte 0xfa
          .byte 0xb
          .byte 0x7f
          .byte 0xc
          .byte 0x7f
          .byte 0xc
          .byte 0x79
          .byte 0xd
          .byte 0x79
          .byte 0xd
          .byte 0x1
          .byte 0xf
          .byte 0x3
          .byte 0xf
          .byte 0x13
          .byte 0xf
          .byte 0x13
          .byte 0xf
          .byte 0x15
          .byte 0xf
          .byte 0x17
          .byte 0xf
          .byte 0x1a
          .byte 0xf
          .byte 0x1f
          .byte 0xf
          .byte 0x34
          .byte 0xf
          .byte 0x34
          .byte 0xf
          .byte 0x36
          .byte 0xf
          .byte 0x36
          .byte 0xf
          .byte 0x38
          .byte 0xf
          .byte 0x38
          .byte 0xf
          .byte 0xbe
          .byte 0xf
          .byte 0xc5
          .byte 0xf
          .byte 0xc7
          .byte 0xf
          .byte 0xcc
          .byte 0xf
          .byte 0xce
          .byte 0xf
          .byte 0xcf
          .byte 0xf
          .byte 0xd5
          .byte 0xf
          .byte 0xd8
          .byte 0xf
          .byte 0x9e
          .byte 0x10
          .byte 0x9f
          .byte 0x10
          .byte 0x90
          .byte 0x13
          .byte 0x99
          .byte 0x13
          .byte 0x40
          .byte 0x19
          .byte 0x40
          .byte 0x19
          .byte 0xde
          .byte 0x19
          .byte 0xff
          .byte 0x19
          .byte 0x61
          .byte 0x1b
          .byte 0x6a
          .byte 0x1b
          .byte 0x74
          .byte 0x1b
          .byte 0x7c
          .byte 0x1b
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x21
          .byte 0x3
          .byte 0x21
          .byte 0x6
          .byte 0x21
          .byte 0x8
          .byte 0x21
          .byte 0x9
          .byte 0x21
          .byte 0x14
          .byte 0x21
          .byte 0x14
          .byte 0x21
          .byte 0x16
          .byte 0x21
          .byte 0x17
          .byte 0x21
          .byte 0x1e
          .byte 0x21
          .byte 0x23
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x3a
          .byte 0x21
          .byte 0x3b
          .byte 0x21
          .byte 0x4a
          .byte 0x21
          .byte 0x4a
          .byte 0x21
          .byte 0x4c
          .byte 0x21
          .byte 0x4d
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x95
          .byte 0x21
          .byte 0x99
          .byte 0x21
          .byte 0x9c
          .byte 0x21
          .byte 0x9f
          .byte 0x21
          .byte 0xa1
          .byte 0x21
          .byte 0xa2
          .byte 0x21
          .byte 0xa4
          .byte 0x21
          .byte 0xa5
          .byte 0x21
          .byte 0xa7
          .byte 0x21
          .byte 0xad
          .byte 0x21
          .byte 0xaf
          .byte 0x21
          .byte 0xcd
          .byte 0x21
          .byte 0xd0
          .byte 0x21
          .byte 0xd1
          .byte 0x21
          .byte 0xd3
          .byte 0x21
          .byte 0xd3
          .byte 0x21
          .byte 0xd5
          .byte 0x21
          .byte 0xf3
          .byte 0x21
          .byte 0x0
          .byte 0x23
          .byte 0x7
          .byte 0x23
          .byte 0xc
          .byte 0x23
          .byte 0x1f
          .byte 0x23
          .byte 0x22
          .byte 0x23
          .byte 0x28
          .byte 0x23
          .byte 0x2b
          .byte 0x23
          .byte 0x7b
          .byte 0x23
          .byte 0x7d
          .byte 0x23
          .byte 0x9a
          .byte 0x23
          .byte 0xb4
          .byte 0x23
          .byte 0xdb
          .byte 0x23
          .byte 0xe2
          .byte 0x23
          .byte 0xf3
          .byte 0x23
          .byte 0x0
          .byte 0x24
          .byte 0x26
          .byte 0x24
          .byte 0x40
          .byte 0x24
          .byte 0x4a
          .byte 0x24
          .byte 0x9c
          .byte 0x24
          .byte 0xe9
          .byte 0x24
          .byte 0x0
          .byte 0x25
          .byte 0xb6
          .byte 0x25
          .byte 0xb8
          .byte 0x25
          .byte 0xc0
          .byte 0x25
          .byte 0xc2
          .byte 0x25
          .byte 0xf7
          .byte 0x25
          .byte 0x0
          .byte 0x26
          .byte 0x6e
          .byte 0x26
          .byte 0x70
          .byte 0x26
          .byte 0xff
          .byte 0x26
          .byte 0x1
          .byte 0x27
          .byte 0x67
          .byte 0x27
          .byte 0x94
          .byte 0x27
          .byte 0xbf
          .byte 0x27
          .byte 0x0
          .byte 0x28
          .byte 0xff
          .byte 0x28
          .byte 0x0
          .byte 0x2b
          .byte 0x2f
          .byte 0x2b
          .byte 0x45
          .byte 0x2b
          .byte 0x46
          .byte 0x2b
          .byte 0x50
          .byte 0x2b
          .byte 0x59
          .byte 0x2b
          .byte 0xe5
          .byte 0x2c
          .byte 0xea
          .byte 0x2c
          .byte 0x80
          .byte 0x2e
          .byte 0x99
          .byte 0x2e
          .byte 0x9b
          .byte 0x2e
          .byte 0xf3
          .byte 0x2e
          .byte 0x0
          .byte 0x2f
          .byte 0xd5
          .byte 0x2f
          .byte 0xf0
          .byte 0x2f
          .byte 0xfb
          .byte 0x2f
          .byte 0x4
          .byte 0x30
          .byte 0x4
          .byte 0x30
          .byte 0x12
          .byte 0x30
          .byte 0x13
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x36
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x3e
          .byte 0x30
          .byte 0x3f
          .byte 0x30
          .byte 0x90
          .byte 0x31
          .byte 0x91
          .byte 0x31
          .byte 0x96
          .byte 0x31
          .byte 0x9f
          .byte 0x31
          .byte 0xc0
          .byte 0x31
          .byte 0xe3
          .byte 0x31
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x32
          .byte 0x2a
          .byte 0x32
          .byte 0x47
          .byte 0x32
          .byte 0x50
          .byte 0x32
          .byte 0x50
          .byte 0x32
          .byte 0x60
          .byte 0x32
          .byte 0x7f
          .byte 0x32
          .byte 0x8a
          .byte 0x32
          .byte 0xb0
          .byte 0x32
          .byte 0xc0
          .byte 0x32
          .byte 0xfe
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0xff
          .byte 0x33
          .byte 0xc0
          .byte 0x4d
          .byte 0xff
          .byte 0x4d
          .byte 0x90
          .byte 0xa4
          .byte 0xc6
          .byte 0xa4
          .byte 0x28
          .byte 0xa8
          .byte 0x2b
          .byte 0xa8
          .byte 0x36
          .byte 0xa8
          .byte 0x37
          .byte 0xa8
          .byte 0x39
          .byte 0xa8
          .byte 0x39
          .byte 0xa8
          .byte 0x77
          .byte 0xaa
          .byte 0x79
          .byte 0xaa
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0xe4
          .byte 0xff
          .byte 0xe4
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xed
          .byte 0xff
          .byte 0xee
          .byte 0xff
          .byte 0xfc
          .byte 0xff
          .byte 0xfd
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4398c0:
          .byte 0x37
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0xf5
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x84
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xdd
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xf1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x2b
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xb1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xdf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x6b
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x9a
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xe6
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc6
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xe0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf7
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xf7
          .byte 0x1
          .byte 0x0
.L_439a80:
          .string "$"
          .byte 0x24
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xc2
          .byte 0x2
          .byte 0xc5
          .byte 0x2
          .byte 0xd2
          .byte 0x2
          .byte 0xdf
          .byte 0x2
          .byte 0xe5
          .byte 0x2
          .byte 0xeb
          .byte 0x2
          .byte 0xed
          .byte 0x2
          .byte 0xed
          .byte 0x2
          .byte 0xef
          .byte 0x2
          .byte 0xff
          .byte 0x2
          .byte 0x75
          .byte 0x3
          .byte 0x75
          .byte 0x3
          .byte 0x84
          .byte 0x3
          .byte 0x85
          .byte 0x3
          .byte 0xf6
          .byte 0x3
          .byte 0xf6
          .byte 0x3
          .byte 0x82
          .byte 0x4
          .byte 0x82
          .byte 0x4
          .byte 0x8f
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0x6
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0xb
          .byte 0x6
          .byte 0xb
          .byte 0x6
          .byte 0xe
          .byte 0x6
          .byte 0xf
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xe9
          .byte 0x6
          .byte 0xe9
          .byte 0x6
          .byte 0xfd
          .byte 0x6
          .byte 0xfe
          .byte 0x6
          .byte 0xf6
          .byte 0x7
          .byte 0xf6
          .byte 0x7
          .byte 0xf2
          .byte 0x9
          .byte 0xf3
          .byte 0x9
          .byte 0xfa
          .byte 0x9
          .byte 0xfb
          .byte 0x9
          .byte 0xf1
          .byte 0xa
          .byte 0xf1
          .byte 0xa
          .byte 0x70
          .byte 0xb
          .byte 0x70
          .byte 0xb
          .byte 0xf3
          .byte 0xb
          .byte 0xfa
          .byte 0xb
          .byte 0x7f
          .byte 0xc
          .byte 0x7f
          .byte 0xc
          .byte 0x79
          .byte 0xd
          .byte 0x79
          .byte 0xd
          .byte 0x3f
          .byte 0xe
          .byte 0x3f
          .byte 0xe
          .byte 0x1
          .byte 0xf
          .byte 0x3
          .byte 0xf
          .byte 0x13
          .byte 0xf
          .byte 0x13
          .byte 0xf
          .byte 0x15
          .byte 0xf
          .byte 0x17
          .byte 0xf
          .byte 0x1a
          .byte 0xf
          .byte 0x1f
          .byte 0xf
          .byte 0x34
          .byte 0xf
          .byte 0x34
          .byte 0xf
          .byte 0x36
          .byte 0xf
          .byte 0x36
          .byte 0xf
          .byte 0x38
          .byte 0xf
          .byte 0x38
          .byte 0xf
          .byte 0xbe
          .byte 0xf
          .byte 0xc5
          .byte 0xf
          .byte 0xc7
          .byte 0xf
          .byte 0xcc
          .byte 0xf
          .byte 0xce
          .byte 0xf
          .byte 0xcf
          .byte 0xf
          .byte 0xd5
          .byte 0xf
          .byte 0xd8
          .byte 0xf
          .byte 0x9e
          .byte 0x10
          .byte 0x9f
          .byte 0x10
          .byte 0x90
          .byte 0x13
          .byte 0x99
          .byte 0x13
          .byte 0xdb
          .byte 0x17
          .byte 0xdb
          .byte 0x17
          .byte 0x40
          .byte 0x19
          .byte 0x40
          .byte 0x19
          .byte 0xde
          .byte 0x19
          .byte 0xff
          .byte 0x19
          .byte 0x61
          .byte 0x1b
          .byte 0x6a
          .byte 0x1b
          .byte 0x74
          .byte 0x1b
          .byte 0x7c
          .byte 0x1b
          .byte 0xbd
          .byte 0x1f
          .byte 0xbd
          .byte 0x1f
          .byte 0xbf
          .byte 0x1f
          .byte 0xc1
          .byte 0x1f
          .byte 0xcd
          .byte 0x1f
          .byte 0xcf
          .byte 0x1f
          .byte 0xdd
          .byte 0x1f
          .byte 0xdf
          .byte 0x1f
          .byte 0xed
          .byte 0x1f
          .byte 0xef
          .byte 0x1f
          .byte 0xfd
          .byte 0x1f
          .byte 0xfe
          .byte 0x1f
          .byte 0x44
          .byte 0x20
          .byte 0x44
          .byte 0x20
          .byte 0x52
          .byte 0x20
          .byte 0x52
          .byte 0x20
          .byte 0x7a
          .byte 0x20
          .byte 0x7c
          .byte 0x20
          .byte 0x8a
          .byte 0x20
          .byte 0x8c
          .byte 0x20
          .byte 0xa0
          .byte 0x20
          .byte 0xba
          .byte 0x20
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x21
          .byte 0x3
          .byte 0x21
          .byte 0x6
          .byte 0x21
          .byte 0x8
          .byte 0x21
          .byte 0x9
          .byte 0x21
          .byte 0x14
          .byte 0x21
          .byte 0x14
          .byte 0x21
          .byte 0x16
          .byte 0x21
          .byte 0x18
          .byte 0x21
          .byte 0x1e
          .byte 0x21
          .byte 0x23
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x3a
          .byte 0x21
          .byte 0x3b
          .byte 0x21
          .byte 0x40
          .byte 0x21
          .byte 0x44
          .byte 0x21
          .byte 0x4a
          .byte 0x21
          .byte 0x4d
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x90
          .byte 0x21
          .byte 0x7
          .byte 0x23
          .byte 0xc
          .byte 0x23
          .byte 0x28
          .byte 0x23
          .byte 0x2b
          .byte 0x23
          .byte 0xf3
          .byte 0x23
          .byte 0x0
          .byte 0x24
          .byte 0x26
          .byte 0x24
          .byte 0x40
          .byte 0x24
          .byte 0x4a
          .byte 0x24
          .byte 0x9c
          .byte 0x24
          .byte 0xe9
          .byte 0x24
          .byte 0x0
          .byte 0x25
          .byte 0xff
          .byte 0x26
          .byte 0x1
          .byte 0x27
          .byte 0x67
          .byte 0x27
          .byte 0x94
          .byte 0x27
          .byte 0xc4
          .byte 0x27
          .byte 0xc7
          .byte 0x27
          .byte 0xe5
          .byte 0x27
          .byte 0xf0
          .byte 0x27
          .byte 0x82
          .byte 0x29
          .byte 0x99
          .byte 0x29
          .byte 0xd7
          .byte 0x29
          .byte 0xdc
          .byte 0x29
          .byte 0xfb
          .byte 0x29
          .byte 0xfe
          .byte 0x29
          .byte 0x4c
          .byte 0x2b
          .byte 0x50
          .byte 0x2b
          .byte 0x59
          .byte 0x2b
          .byte 0xe5
          .byte 0x2c
          .byte 0xea
          .byte 0x2c
          .byte 0x80
          .byte 0x2e
          .byte 0x99
          .byte 0x2e
          .byte 0x9b
          .byte 0x2e
          .byte 0xf3
          .byte 0x2e
          .byte 0x0
          .byte 0x2f
          .byte 0xd5
          .byte 0x2f
          .byte 0xf0
          .byte 0x2f
          .byte 0xfb
          .byte 0x2f
          .byte 0x4
          .byte 0x30
          .byte 0x4
          .byte 0x30
          .byte 0x12
          .byte 0x30
          .byte 0x13
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x36
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x3e
          .byte 0x30
          .byte 0x3f
          .byte 0x30
          .byte 0x9b
          .byte 0x30
          .byte 0x9c
          .byte 0x30
          .byte 0x90
          .byte 0x31
          .byte 0x91
          .byte 0x31
          .byte 0x96
          .byte 0x31
          .byte 0x9f
          .byte 0x31
          .byte 0xc0
          .byte 0x31
          .byte 0xe3
          .byte 0x31
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x32
          .byte 0x2a
          .byte 0x32
          .byte 0x47
          .byte 0x32
          .byte 0x50
          .byte 0x32
          .byte 0x50
          .byte 0x32
          .byte 0x60
          .byte 0x32
          .byte 0x7f
          .byte 0x32
          .byte 0x8a
          .byte 0x32
          .byte 0xb0
          .byte 0x32
          .byte 0xc0
          .byte 0x32
          .byte 0xfe
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0xff
          .byte 0x33
          .byte 0xc0
          .byte 0x4d
          .byte 0xff
          .byte 0x4d
          .byte 0x90
          .byte 0xa4
          .byte 0xc6
          .byte 0xa4
          .byte 0x0
          .byte 0xa7
          .byte 0x16
          .byte 0xa7
          .byte 0x20
          .byte 0xa7
          .byte 0x21
          .byte 0xa7
          .byte 0x89
          .byte 0xa7
          .byte 0x8a
          .byte 0xa7
          .byte 0x28
          .byte 0xa8
          .byte 0x2b
          .byte 0xa8
          .byte 0x36
          .byte 0xa8
          .byte 0x39
          .byte 0xa8
          .byte 0x77
          .byte 0xaa
          .byte 0x79
          .byte 0xaa
          .byte 0x29
          .byte 0xfb
          .byte 0x29
          .byte 0xfb
          .byte 0xb2
          .byte 0xfb
          .byte 0xc1
          .byte 0xfb
          .byte 0xfc
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0x62
          .byte 0xfe
          .byte 0x62
          .byte 0xfe
          .byte 0x64
          .byte 0xfe
          .byte 0x66
          .byte 0xfe
          .byte 0x69
          .byte 0xfe
          .byte 0x69
          .byte 0xfe
          .byte 0x4
          .byte 0xff
          .byte 0x4
          .byte 0xff
          .byte 0xb
          .byte 0xff
          .byte 0xb
          .byte 0xff
          .byte 0x1c
          .byte 0xff
          .byte 0x1e
          .byte 0xff
          .byte 0x3e
          .byte 0xff
          .byte 0x3e
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0x5e
          .byte 0xff
          .byte 0x5e
          .byte 0xff
          .byte 0xe0
          .byte 0xff
          .byte 0xe6
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xee
          .byte 0xff
          .byte 0xfc
          .byte 0xff
          .byte 0xfd
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439cc0:
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbc
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439d40:
          .string "!"
          .byte 0x23
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x7e
          .byte 0x3
          .byte 0x7e
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x5a
          .byte 0x5
          .byte 0x5f
          .byte 0x5
          .byte 0x89
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0xbe
          .byte 0x5
          .byte 0xbe
          .byte 0x5
          .byte 0xc0
          .byte 0x5
          .byte 0xc0
          .byte 0x5
          .byte 0xc3
          .byte 0x5
          .byte 0xc3
          .byte 0x5
          .byte 0xc6
          .byte 0x5
          .byte 0xc6
          .byte 0x5
          .byte 0xf3
          .byte 0x5
          .byte 0xf4
          .byte 0x5
          .byte 0x9
          .byte 0x6
          .byte 0xa
          .byte 0x6
          .byte 0xc
          .byte 0x6
          .byte 0xd
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x1f
          .byte 0x6
          .byte 0x6a
          .byte 0x6
          .byte 0x6d
          .byte 0x6
          .byte 0xd4
          .byte 0x6
          .byte 0xd4
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0xd
          .byte 0x7
          .byte 0xf7
          .byte 0x7
          .byte 0xf9
          .byte 0x7
          .byte 0x30
          .byte 0x8
          .byte 0x3e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x64
          .byte 0x9
          .byte 0x65
          .byte 0x9
          .byte 0x70
          .byte 0x9
          .byte 0x70
          .byte 0x9
          .byte 0xf0
          .byte 0xa
          .byte 0xf0
          .byte 0xa
          .byte 0xf4
          .byte 0xd
          .byte 0xf4
          .byte 0xd
          .byte 0x4f
          .byte 0xe
          .byte 0x4f
          .byte 0xe
          .byte 0x5a
          .byte 0xe
          .byte 0x5b
          .byte 0xe
          .byte 0x4
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x14
          .byte 0xf
          .byte 0x14
          .byte 0xf
          .byte 0x3a
          .byte 0xf
          .byte 0x3d
          .byte 0xf
          .byte 0x85
          .byte 0xf
          .byte 0x85
          .byte 0xf
          .byte 0xd0
          .byte 0xf
          .byte 0xd4
          .byte 0xf
          .byte 0xd9
          .byte 0xf
          .byte 0xda
          .byte 0xf
          .byte 0x4a
          .byte 0x10
          .byte 0x4f
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0x60
          .byte 0x13
          .byte 0x68
          .byte 0x13
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x14
          .byte 0x6d
          .byte 0x16
          .byte 0x6e
          .byte 0x16
          .byte 0x9b
          .byte 0x16
          .byte 0x9c
          .byte 0x16
          .byte 0xeb
          .byte 0x16
          .byte 0xed
          .byte 0x16
          .byte 0x35
          .byte 0x17
          .byte 0x36
          .byte 0x17
          .byte 0xd4
          .byte 0x17
          .byte 0xd6
          .byte 0x17
          .byte 0xd8
          .byte 0x17
          .byte 0xda
          .byte 0x17
          .byte 0x0
          .byte 0x18
          .byte 0xa
          .byte 0x18
          .byte 0x44
          .byte 0x19
          .byte 0x45
          .byte 0x19
          .byte 0x1e
          .byte 0x1a
          .byte 0x1f
          .byte 0x1a
          .byte 0xa0
          .byte 0x1a
          .byte 0xa6
          .byte 0x1a
          .byte 0xa8
          .byte 0x1a
          .byte 0xad
          .byte 0x1a
          .byte 0x5a
          .byte 0x1b
          .byte 0x60
          .byte 0x1b
          .byte 0xfc
          .byte 0x1b
          .byte 0xff
          .byte 0x1b
          .byte 0x3b
          .byte 0x1c
          .byte 0x3f
          .byte 0x1c
          .byte 0x7e
          .byte 0x1c
          .byte 0x7f
          .byte 0x1c
          .byte 0xc0
          .byte 0x1c
          .byte 0xc7
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0x10
          .byte 0x20
          .byte 0x27
          .byte 0x20
          .byte 0x30
          .byte 0x20
          .byte 0x43
          .byte 0x20
          .byte 0x45
          .byte 0x20
          .byte 0x51
          .byte 0x20
          .byte 0x53
          .byte 0x20
          .byte 0x5e
          .byte 0x20
          .byte 0x7d
          .byte 0x20
          .byte 0x7e
          .byte 0x20
          .byte 0x8d
          .byte 0x20
          .byte 0x8e
          .byte 0x20
          .byte 0x8
          .byte 0x23
          .byte 0xb
          .byte 0x23
          .byte 0x29
          .byte 0x23
          .byte 0x2a
          .byte 0x23
          .byte 0x68
          .byte 0x27
          .byte 0x75
          .byte 0x27
          .byte 0xc5
          .byte 0x27
          .byte 0xc6
          .byte 0x27
          .byte 0xe6
          .byte 0x27
          .byte 0xef
          .byte 0x27
          .byte 0x83
          .byte 0x29
          .byte 0x98
          .byte 0x29
          .byte 0xd8
          .byte 0x29
          .byte 0xdb
          .byte 0x29
          .byte 0xfc
          .byte 0x29
          .byte 0xfd
          .byte 0x29
          .byte 0xf9
          .byte 0x2c
          .byte 0xfc
          .byte 0x2c
          .byte 0xfe
          .byte 0x2c
          .byte 0xff
          .byte 0x2c
          .byte 0x70
          .byte 0x2d
          .byte 0x70
          .byte 0x2d
          .byte 0x0
          .byte 0x2e
          .byte 0x2e
          .byte 0x2e
          .byte 0x30
          .byte 0x2e
          .byte 0x3b
          .byte 0x2e
          .byte 0x1
          .byte 0x30
          .byte 0x3
          .byte 0x30
          .byte 0x8
          .byte 0x30
          .byte 0x11
          .byte 0x30
          .byte 0x14
          .byte 0x30
          .byte 0x1f
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x3d
          .byte 0x30
          .byte 0x3d
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfe
          .byte 0xa4
          .byte 0xff
          .byte 0xa4
          .byte 0xd
          .byte 0xa6
          .byte 0xf
          .byte 0xa6
          .byte 0x73
          .byte 0xa6
          .byte 0x73
          .byte 0xa6
          .byte 0x7e
          .byte 0xa6
          .byte 0x7e
          .byte 0xa6
          .byte 0xf2
          .byte 0xa6
          .byte 0xf7
          .byte 0xa6
          .byte 0x74
          .byte 0xa8
          .byte 0x77
          .byte 0xa8
          .byte 0xce
          .byte 0xa8
          .byte 0xcf
          .byte 0xa8
          .byte 0xf8
          .byte 0xa8
          .byte 0xfa
          .byte 0xa8
          .byte 0x2e
          .byte 0xa9
          .byte 0x2f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0xc1
          .byte 0xa9
          .byte 0xcd
          .byte 0xa9
          .byte 0xde
          .byte 0xa9
          .byte 0xdf
          .byte 0xa9
          .byte 0x5c
          .byte 0xaa
          .byte 0x5f
          .byte 0xaa
          .byte 0xde
          .byte 0xaa
          .byte 0xdf
          .byte 0xaa
          .byte 0xf0
          .byte 0xaa
          .byte 0xf1
          .byte 0xaa
          .byte 0xeb
          .byte 0xab
          .byte 0xeb
          .byte 0xab
          .byte 0x3e
          .byte 0xfd
          .byte 0x3f
          .byte 0xfd
          .byte 0x10
          .byte 0xfe
          .byte 0x19
          .byte 0xfe
          .byte 0x30
          .byte 0xfe
          .byte 0x52
          .byte 0xfe
          .byte 0x54
          .byte 0xfe
          .byte 0x61
          .byte 0xfe
          .byte 0x63
          .byte 0xfe
          .byte 0x63
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x6a
          .byte 0xfe
          .byte 0x6b
          .byte 0xfe
          .byte 0x1
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0x5
          .byte 0xff
          .byte 0xa
          .byte 0xff
          .byte 0xc
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0x1a
          .byte 0xff
          .byte 0x1b
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0x20
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0x3d
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0x5f
          .byte 0xff
          .byte 0x65
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439f40:
          .string "^"
          .byte 0x5e
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xc2
          .byte 0x2
          .byte 0xc5
          .byte 0x2
          .byte 0xd2
          .byte 0x2
          .byte 0xdf
          .byte 0x2
          .byte 0xe5
          .byte 0x2
          .byte 0xeb
          .byte 0x2
          .byte 0xed
          .byte 0x2
          .byte 0xed
          .byte 0x2
          .byte 0xef
          .byte 0x2
          .byte 0xff
          .byte 0x2
          .byte 0x75
          .byte 0x3
          .byte 0x75
          .byte 0x3
          .byte 0x84
          .byte 0x3
          .byte 0x85
          .byte 0x3
          .byte 0xbd
          .byte 0x1f
          .byte 0xbd
          .byte 0x1f
          .byte 0xbf
          .byte 0x1f
          .byte 0xc1
          .byte 0x1f
          .byte 0xcd
          .byte 0x1f
          .byte 0xcf
          .byte 0x1f
          .byte 0xdd
          .byte 0x1f
          .byte 0xdf
          .byte 0x1f
          .byte 0xed
          .byte 0x1f
          .byte 0xef
          .byte 0x1f
          .byte 0xfd
          .byte 0x1f
          .byte 0xfe
          .byte 0x1f
          .byte 0x9b
          .byte 0x30
          .byte 0x9c
          .byte 0x30
          .byte 0x0
          .byte 0xa7
          .byte 0x16
          .byte 0xa7
          .byte 0x20
          .byte 0xa7
          .byte 0x21
          .byte 0xa7
          .byte 0x89
          .byte 0xa7
          .byte 0x8a
          .byte 0xa7
          .byte 0xb2
          .byte 0xfb
          .byte 0xc1
          .byte 0xfb
          .byte 0x3e
          .byte 0xff
          .byte 0x3e
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0xe3
          .byte 0xff
          .byte 0xe3
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439fc0:
          .byte 0x7
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7d
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd9
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xc9
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x71
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0xce
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xf1
          .byte 0x1
          .byte 0x0
.L_43a080:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0x60
          .byte 0x6
          .byte 0x69
          .byte 0x6
          .byte 0xf0
          .byte 0x6
          .byte 0xf9
          .byte 0x6
          .byte 0xc0
          .byte 0x7
          .byte 0xc9
          .byte 0x7
          .byte 0x66
          .byte 0x9
          .byte 0x6f
          .byte 0x9
          .byte 0xe6
          .byte 0x9
          .byte 0xef
          .byte 0x9
          .byte 0xf4
          .byte 0x9
          .byte 0xf9
          .byte 0x9
          .byte 0x66
          .byte 0xa
          .byte 0x6f
          .byte 0xa
          .byte 0xe6
          .byte 0xa
          .byte 0xef
          .byte 0xa
          .byte 0x66
          .byte 0xb
          .byte 0x6f
          .byte 0xb
          .byte 0x72
          .byte 0xb
          .byte 0x77
          .byte 0xb
          .byte 0xe6
          .byte 0xb
          .byte 0xf2
          .byte 0xb
          .byte 0x66
          .byte 0xc
          .byte 0x6f
          .byte 0xc
          .byte 0x78
          .byte 0xc
          .byte 0x7e
          .byte 0xc
          .byte 0xe6
          .byte 0xc
          .byte 0xef
          .byte 0xc
          .byte 0x66
          .byte 0xd
          .byte 0x75
          .byte 0xd
          .byte 0x50
          .byte 0xe
          .byte 0x59
          .byte 0xe
          .byte 0xd0
          .byte 0xe
          .byte 0xd9
          .byte 0xe
          .byte 0x20
          .byte 0xf
          .byte 0x33
          .byte 0xf
          .byte 0x40
          .byte 0x10
          .byte 0x49
          .byte 0x10
          .byte 0x90
          .byte 0x10
          .byte 0x99
          .byte 0x10
          .byte 0x69
          .byte 0x13
          .byte 0x7c
          .byte 0x13
          .byte 0xee
          .byte 0x16
          .byte 0xf0
          .byte 0x16
          .byte 0xe0
          .byte 0x17
          .byte 0xe9
          .byte 0x17
          .byte 0xf0
          .byte 0x17
          .byte 0xf9
          .byte 0x17
          .byte 0x10
          .byte 0x18
          .byte 0x19
          .byte 0x18
          .byte 0x46
          .byte 0x19
          .byte 0x4f
          .byte 0x19
          .byte 0xd0
          .byte 0x19
          .byte 0xda
          .byte 0x19
          .byte 0x80
          .byte 0x1a
          .byte 0x89
          .byte 0x1a
          .byte 0x90
          .byte 0x1a
          .byte 0x99
          .byte 0x1a
          .byte 0x50
          .byte 0x1b
          .byte 0x59
          .byte 0x1b
          .byte 0xb0
          .byte 0x1b
          .byte 0xb9
          .byte 0x1b
          .byte 0x40
          .byte 0x1c
          .byte 0x49
          .byte 0x1c
          .byte 0x50
          .byte 0x1c
          .byte 0x59
          .byte 0x1c
          .byte 0x70
          .byte 0x20
          .byte 0x70
          .byte 0x20
          .byte 0x74
          .byte 0x20
          .byte 0x79
          .byte 0x20
          .byte 0x80
          .byte 0x20
          .byte 0x89
          .byte 0x20
          .byte 0x50
          .byte 0x21
          .byte 0x82
          .byte 0x21
          .byte 0x85
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x60
          .byte 0x24
          .byte 0x9b
          .byte 0x24
          .byte 0xea
          .byte 0x24
          .byte 0xff
          .byte 0x24
          .byte 0x76
          .byte 0x27
          .byte 0x93
          .byte 0x27
          .byte 0xfd
          .byte 0x2c
          .byte 0xfd
          .byte 0x2c
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x30
          .byte 0x21
          .byte 0x30
          .byte 0x29
          .byte 0x30
          .byte 0x38
          .byte 0x30
          .byte 0x3a
          .byte 0x30
          .byte 0x92
          .byte 0x31
          .byte 0x95
          .byte 0x31
          .byte 0x20
          .byte 0x32
          .byte 0x29
          .byte 0x32
          .byte 0x48
          .byte 0x32
          .byte 0x4f
          .byte 0x32
          .byte 0x51
          .byte 0x32
          .byte 0x5f
          .byte 0x32
          .byte 0x80
          .byte 0x32
          .byte 0x89
          .byte 0x32
          .byte 0xb1
          .byte 0x32
          .byte 0xbf
          .byte 0x32
          .byte 0x20
          .byte 0xa6
          .byte 0x29
          .byte 0xa6
          .byte 0xe6
          .byte 0xa6
          .byte 0xef
          .byte 0xa6
          .byte 0x30
          .byte 0xa8
          .byte 0x35
          .byte 0xa8
          .byte 0xd0
          .byte 0xa8
          .byte 0xd9
          .byte 0xa8
          .byte 0x0
          .byte 0xa9
          .byte 0x9
          .byte 0xa9
          .byte 0xd0
          .byte 0xa9
          .byte 0xd9
          .byte 0xa9
          .byte 0x50
          .byte 0xaa
          .byte 0x59
          .byte 0xaa
          .byte 0xf0
          .byte 0xab
          .byte 0xf9
          .byte 0xab
          .byte 0x10
          .byte 0xff
          .byte 0x19
          .byte 0xff
.L_43a180:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbf
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x13
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x17
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x19
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xaf
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xe8
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb2
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9e
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa6
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1c
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc2
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xda
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdc
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4e
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x88
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc2
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xcb
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x22
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x32
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x61
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x74
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x77
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xd6
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x34
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xfa
          .byte 0x2
          .byte 0x0
.L_43a520:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xc1
          .byte 0x2
          .byte 0xc6
          .byte 0x2
          .byte 0xd1
          .byte 0x2
          .byte 0xe0
          .byte 0x2
          .byte 0xe4
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xee
          .byte 0x2
          .byte 0xee
          .byte 0x2
          .byte 0x70
          .byte 0x3
          .byte 0x74
          .byte 0x3
          .byte 0x76
          .byte 0x3
          .byte 0x77
          .byte 0x3
          .byte 0x7a
          .byte 0x3
          .byte 0x7d
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x88
          .byte 0x3
          .byte 0x8a
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8e
          .byte 0x3
          .byte 0xa1
          .byte 0x3
          .byte 0xa3
          .byte 0x3
          .byte 0xf5
          .byte 0x3
          .byte 0xf7
          .byte 0x3
          .byte 0x81
          .byte 0x4
          .byte 0x8a
          .byte 0x4
          .byte 0x27
          .byte 0x5
          .byte 0x31
          .byte 0x5
          .byte 0x56
          .byte 0x5
          .byte 0x59
          .byte 0x5
          .byte 0x59
          .byte 0x5
          .byte 0x61
          .byte 0x5
          .byte 0x87
          .byte 0x5
          .byte 0xd0
          .byte 0x5
          .byte 0xea
          .byte 0x5
          .byte 0xf0
          .byte 0x5
          .byte 0xf2
          .byte 0x5
          .byte 0x20
          .byte 0x6
          .byte 0x4a
          .byte 0x6
          .byte 0x6e
          .byte 0x6
          .byte 0x6f
          .byte 0x6
          .byte 0x71
          .byte 0x6
          .byte 0xd3
          .byte 0x6
          .byte 0xd5
          .byte 0x6
          .byte 0xd5
          .byte 0x6
          .byte 0xe5
          .byte 0x6
          .byte 0xe6
          .byte 0x6
          .byte 0xee
          .byte 0x6
          .byte 0xef
          .byte 0x6
          .byte 0xfa
          .byte 0x6
          .byte 0xfc
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0x10
          .byte 0x7
          .byte 0x10
          .byte 0x7
          .byte 0x12
          .byte 0x7
          .byte 0x2f
          .byte 0x7
          .byte 0x4d
          .byte 0x7
          .byte 0xa5
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0xca
          .byte 0x7
          .byte 0xea
          .byte 0x7
          .byte 0xf4
          .byte 0x7
          .byte 0xf5
          .byte 0x7
          .byte 0xfa
          .byte 0x7
          .byte 0xfa
          .byte 0x7
          .byte 0x0
          .byte 0x8
          .byte 0x15
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x24
          .byte 0x8
          .byte 0x24
          .byte 0x8
          .byte 0x28
          .byte 0x8
          .byte 0x28
          .byte 0x8
          .byte 0x40
          .byte 0x8
          .byte 0x58
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa2
          .byte 0x8
          .byte 0xac
          .byte 0x8
          .byte 0x4
          .byte 0x9
          .byte 0x39
          .byte 0x9
          .byte 0x3d
          .byte 0x9
          .byte 0x3d
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x58
          .byte 0x9
          .byte 0x61
          .byte 0x9
          .byte 0x71
          .byte 0x9
          .byte 0x77
          .byte 0x9
          .byte 0x79
          .byte 0x9
          .byte 0x7f
          .byte 0x9
          .byte 0x85
          .byte 0x9
          .byte 0x8c
          .byte 0x9
          .byte 0x8f
          .byte 0x9
          .byte 0x90
          .byte 0x9
          .byte 0x93
          .byte 0x9
          .byte 0xa8
          .byte 0x9
          .byte 0xaa
          .byte 0x9
          .byte 0xb0
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb6
          .byte 0x9
          .byte 0xb9
          .byte 0x9
          .byte 0xbd
          .byte 0x9
          .byte 0xbd
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xdc
          .byte 0x9
          .byte 0xdd
          .byte 0x9
          .byte 0xdf
          .byte 0x9
          .byte 0xe1
          .byte 0x9
          .byte 0xf0
          .byte 0x9
          .byte 0xf1
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0x10
          .byte 0xa
          .byte 0x13
          .byte 0xa
          .byte 0x28
          .byte 0xa
          .byte 0x2a
          .byte 0xa
          .byte 0x30
          .byte 0xa
          .byte 0x32
          .byte 0xa
          .byte 0x33
          .byte 0xa
          .byte 0x35
          .byte 0xa
          .byte 0x36
          .byte 0xa
          .byte 0x38
          .byte 0xa
          .byte 0x39
          .byte 0xa
          .byte 0x59
          .byte 0xa
          .byte 0x5c
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x72
          .byte 0xa
          .byte 0x74
          .byte 0xa
          .byte 0x85
          .byte 0xa
          .byte 0x8d
          .byte 0xa
          .byte 0x8f
          .byte 0xa
          .byte 0x91
          .byte 0xa
          .byte 0x93
          .byte 0xa
          .byte 0xa8
          .byte 0xa
          .byte 0xaa
          .byte 0xa
          .byte 0xb0
          .byte 0xa
          .byte 0xb2
          .byte 0xa
          .byte 0xb3
          .byte 0xa
          .byte 0xb5
          .byte 0xa
          .byte 0xb9
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xe0
          .byte 0xa
          .byte 0xe1
          .byte 0xa
          .byte 0x5
          .byte 0xb
          .byte 0xc
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0x10
          .byte 0xb
          .byte 0x13
          .byte 0xb
          .byte 0x28
          .byte 0xb
          .byte 0x2a
          .byte 0xb
          .byte 0x30
          .byte 0xb
          .byte 0x32
          .byte 0xb
          .byte 0x33
          .byte 0xb
          .byte 0x35
          .byte 0xb
          .byte 0x39
          .byte 0xb
          .byte 0x3d
          .byte 0xb
          .byte 0x3d
          .byte 0xb
          .byte 0x5c
          .byte 0xb
          .byte 0x5d
          .byte 0xb
          .byte 0x5f
          .byte 0xb
          .byte 0x61
          .byte 0xb
          .byte 0x71
          .byte 0xb
          .byte 0x71
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x85
          .byte 0xb
          .byte 0x8a
          .byte 0xb
          .byte 0x8e
          .byte 0xb
          .byte 0x90
          .byte 0xb
          .byte 0x92
          .byte 0xb
          .byte 0x95
          .byte 0xb
          .byte 0x99
          .byte 0xb
          .byte 0x9a
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9e
          .byte 0xb
          .byte 0x9f
          .byte 0xb
          .byte 0xa3
          .byte 0xb
          .byte 0xa4
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xaa
          .byte 0xb
          .byte 0xae
          .byte 0xb
          .byte 0xb9
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0x5
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xe
          .byte 0xc
          .byte 0x10
          .byte 0xc
          .byte 0x12
          .byte 0xc
          .byte 0x28
          .byte 0xc
          .byte 0x2a
          .byte 0xc
          .byte 0x33
          .byte 0xc
          .byte 0x35
          .byte 0xc
          .byte 0x39
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x58
          .byte 0xc
          .byte 0x59
          .byte 0xc
          .byte 0x60
          .byte 0xc
          .byte 0x61
          .byte 0xc
          .byte 0x85
          .byte 0xc
          .byte 0x8c
          .byte 0xc
          .byte 0x8e
          .byte 0xc
          .byte 0x90
          .byte 0xc
          .byte 0x92
          .byte 0xc
          .byte 0xa8
          .byte 0xc
          .byte 0xaa
          .byte 0xc
          .byte 0xb3
          .byte 0xc
          .byte 0xb5
          .byte 0xc
          .byte 0xb9
          .byte 0xc
          .byte 0xbd
          .byte 0xc
          .byte 0xbd
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xe0
          .byte 0xc
          .byte 0xe1
          .byte 0xc
          .byte 0xf1
          .byte 0xc
          .byte 0xf2
          .byte 0xc
          .byte 0x5
          .byte 0xd
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xd
          .byte 0x10
          .byte 0xd
          .byte 0x12
          .byte 0xd
          .byte 0x3a
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x60
          .byte 0xd
          .byte 0x61
          .byte 0xd
          .byte 0x7a
          .byte 0xd
          .byte 0x7f
          .byte 0xd
          .byte 0x85
          .byte 0xd
          .byte 0x96
          .byte 0xd
          .byte 0x9a
          .byte 0xd
          .byte 0xb1
          .byte 0xd
          .byte 0xb3
          .byte 0xd
          .byte 0xbb
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xc0
          .byte 0xd
          .byte 0xc6
          .byte 0xd
          .byte 0x1
          .byte 0xe
          .byte 0x30
          .byte 0xe
          .byte 0x32
          .byte 0xe
          .byte 0x33
          .byte 0xe
          .byte 0x40
          .byte 0xe
          .byte 0x46
          .byte 0xe
          .byte 0x81
          .byte 0xe
          .byte 0x82
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x87
          .byte 0xe
          .byte 0x88
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x94
          .byte 0xe
          .byte 0x97
          .byte 0xe
          .byte 0x99
          .byte 0xe
          .byte 0x9f
          .byte 0xe
          .byte 0xa1
          .byte 0xe
          .byte 0xa3
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xaa
          .byte 0xe
          .byte 0xab
          .byte 0xe
          .byte 0xad
          .byte 0xe
          .byte 0xb0
          .byte 0xe
          .byte 0xb2
          .byte 0xe
          .byte 0xb3
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xc0
          .byte 0xe
          .byte 0xc4
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xdc
          .byte 0xe
          .byte 0xdf
          .byte 0xe
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x40
          .byte 0xf
          .byte 0x47
          .byte 0xf
          .byte 0x49
          .byte 0xf
          .byte 0x6c
          .byte 0xf
          .byte 0x88
          .byte 0xf
          .byte 0x8c
          .byte 0xf
          .byte 0x0
          .byte 0x10
          .byte 0x2a
          .byte 0x10
          .byte 0x3f
          .byte 0x10
          .byte 0x3f
          .byte 0x10
          .byte 0x50
          .byte 0x10
          .byte 0x55
          .byte 0x10
          .byte 0x5a
          .byte 0x10
          .byte 0x5d
          .byte 0x10
          .byte 0x61
          .byte 0x10
          .byte 0x61
          .byte 0x10
          .byte 0x65
          .byte 0x10
          .byte 0x66
          .byte 0x10
          .byte 0x6e
          .byte 0x10
          .byte 0x70
          .byte 0x10
          .byte 0x75
          .byte 0x10
          .byte 0x81
          .byte 0x10
          .byte 0x8e
          .byte 0x10
          .byte 0x8e
          .byte 0x10
          .byte 0xa0
          .byte 0x10
          .byte 0xc5
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xd0
          .byte 0x10
          .byte 0xfa
          .byte 0x10
          .byte 0xfc
          .byte 0x10
          .byte 0x48
          .byte 0x12
          .byte 0x4a
          .byte 0x12
          .byte 0x4d
          .byte 0x12
          .byte 0x50
          .byte 0x12
          .byte 0x56
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x5a
          .byte 0x12
          .byte 0x5d
          .byte 0x12
          .byte 0x60
          .byte 0x12
          .byte 0x88
          .byte 0x12
          .byte 0x8a
          .byte 0x12
          .byte 0x8d
          .byte 0x12
          .byte 0x90
          .byte 0x12
          .byte 0xb0
          .byte 0x12
          .byte 0xb2
          .byte 0x12
          .byte 0xb5
          .byte 0x12
          .byte 0xb8
          .byte 0x12
          .byte 0xbe
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc2
          .byte 0x12
          .byte 0xc5
          .byte 0x12
          .byte 0xc8
          .byte 0x12
          .byte 0xd6
          .byte 0x12
          .byte 0xd8
          .byte 0x12
          .byte 0x10
          .byte 0x13
          .byte 0x12
          .byte 0x13
          .byte 0x15
          .byte 0x13
          .byte 0x18
          .byte 0x13
          .byte 0x5a
          .byte 0x13
          .byte 0x80
          .byte 0x13
          .byte 0x8f
          .byte 0x13
          .byte 0xa0
          .byte 0x13
          .byte 0xf4
          .byte 0x13
          .byte 0x1
          .byte 0x14
          .byte 0x6c
          .byte 0x16
          .byte 0x6f
          .byte 0x16
          .byte 0x7f
          .byte 0x16
          .byte 0x81
          .byte 0x16
          .byte 0x9a
          .byte 0x16
          .byte 0xa0
          .byte 0x16
          .byte 0xea
          .byte 0x16
          .byte 0x0
          .byte 0x17
          .byte 0xc
          .byte 0x17
          .byte 0xe
          .byte 0x17
          .byte 0x11
          .byte 0x17
          .byte 0x20
          .byte 0x17
          .byte 0x31
          .byte 0x17
          .byte 0x40
          .byte 0x17
          .byte 0x51
          .byte 0x17
          .byte 0x60
          .byte 0x17
          .byte 0x6c
          .byte 0x17
          .byte 0x6e
          .byte 0x17
          .byte 0x70
          .byte 0x17
          .byte 0x80
          .byte 0x17
          .byte 0xb3
          .byte 0x17
          .byte 0xd7
          .byte 0x17
          .byte 0xd7
          .byte 0x17
          .byte 0xdc
          .byte 0x17
          .byte 0xdc
          .byte 0x17
          .byte 0x20
          .byte 0x18
          .byte 0x77
          .byte 0x18
          .byte 0x80
          .byte 0x18
          .byte 0xa8
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0xb0
          .byte 0x18
          .byte 0xf5
          .byte 0x18
          .byte 0x0
          .byte 0x19
          .byte 0x1c
          .byte 0x19
          .byte 0x50
          .byte 0x19
          .byte 0x6d
          .byte 0x19
          .byte 0x70
          .byte 0x19
          .byte 0x74
          .byte 0x19
          .byte 0x80
          .byte 0x19
          .byte 0xab
          .byte 0x19
          .byte 0xc1
          .byte 0x19
          .byte 0xc7
          .byte 0x19
          .byte 0x0
          .byte 0x1a
          .byte 0x16
          .byte 0x1a
          .byte 0x20
          .byte 0x1a
          .byte 0x54
          .byte 0x1a
          .byte 0xa7
          .byte 0x1a
          .byte 0xa7
          .byte 0x1a
          .byte 0x5
          .byte 0x1b
          .byte 0x33
          .byte 0x1b
          .byte 0x45
          .byte 0x1b
          .byte 0x4b
          .byte 0x1b
          .byte 0x83
          .byte 0x1b
          .byte 0xa0
          .byte 0x1b
          .byte 0xae
          .byte 0x1b
          .byte 0xaf
          .byte 0x1b
          .byte 0xba
          .byte 0x1b
          .byte 0xe5
          .byte 0x1b
          .byte 0x0
          .byte 0x1c
          .byte 0x23
          .byte 0x1c
          .byte 0x4d
          .byte 0x1c
          .byte 0x4f
          .byte 0x1c
          .byte 0x5a
          .byte 0x1c
          .byte 0x7d
          .byte 0x1c
          .byte 0xe9
          .byte 0x1c
          .byte 0xec
          .byte 0x1c
          .byte 0xee
          .byte 0x1c
          .byte 0xf1
          .byte 0x1c
          .byte 0xf5
          .byte 0x1c
          .byte 0xf6
          .byte 0x1c
          .byte 0x0
          .byte 0x1d
          .byte 0xbf
          .byte 0x1d
          .byte 0x0
          .byte 0x1e
          .byte 0x15
          .byte 0x1f
          .byte 0x18
          .byte 0x1f
          .byte 0x1d
          .byte 0x1f
          .byte 0x20
          .byte 0x1f
          .byte 0x45
          .byte 0x1f
          .byte 0x48
          .byte 0x1f
          .byte 0x4d
          .byte 0x1f
          .byte 0x50
          .byte 0x1f
          .byte 0x57
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5f
          .byte 0x1f
          .byte 0x7d
          .byte 0x1f
          .byte 0x80
          .byte 0x1f
          .byte 0xb4
          .byte 0x1f
          .byte 0xb6
          .byte 0x1f
          .byte 0xbc
          .byte 0x1f
          .byte 0xbe
          .byte 0x1f
          .byte 0xbe
          .byte 0x1f
          .byte 0xc2
          .byte 0x1f
          .byte 0xc4
          .byte 0x1f
          .byte 0xc6
          .byte 0x1f
          .byte 0xcc
          .byte 0x1f
          .byte 0xd0
          .byte 0x1f
          .byte 0xd3
          .byte 0x1f
          .byte 0xd6
          .byte 0x1f
          .byte 0xdb
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xec
          .byte 0x1f
          .byte 0xf2
          .byte 0x1f
          .byte 0xf4
          .byte 0x1f
          .byte 0xf6
          .byte 0x1f
          .byte 0xfc
          .byte 0x1f
          .byte 0x71
          .byte 0x20
          .byte 0x71
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x90
          .byte 0x20
          .byte 0x9c
          .byte 0x20
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0x21
          .byte 0x7
          .byte 0x21
          .byte 0x7
          .byte 0x21
          .byte 0xa
          .byte 0x21
          .byte 0x13
          .byte 0x21
          .byte 0x15
          .byte 0x21
          .byte 0x15
          .byte 0x21
          .byte 0x19
          .byte 0x21
          .byte 0x1d
          .byte 0x21
          .byte 0x24
          .byte 0x21
          .byte 0x24
          .byte 0x21
          .byte 0x26
          .byte 0x21
          .byte 0x26
          .byte 0x21
          .byte 0x28
          .byte 0x21
          .byte 0x28
          .byte 0x21
          .byte 0x2a
          .byte 0x21
          .byte 0x2d
          .byte 0x21
          .byte 0x2f
          .byte 0x21
          .byte 0x39
          .byte 0x21
          .byte 0x3c
          .byte 0x21
          .byte 0x3f
          .byte 0x21
          .byte 0x45
          .byte 0x21
          .byte 0x49
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x83
          .byte 0x21
          .byte 0x84
          .byte 0x21
          .byte 0x0
          .byte 0x2c
          .byte 0x2e
          .byte 0x2c
          .byte 0x30
          .byte 0x2c
          .byte 0x5e
          .byte 0x2c
          .byte 0x60
          .byte 0x2c
          .byte 0xe4
          .byte 0x2c
          .byte 0xeb
          .byte 0x2c
          .byte 0xee
          .byte 0x2c
          .byte 0xf2
          .byte 0x2c
          .byte 0xf3
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x25
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x30
          .byte 0x2d
          .byte 0x67
          .byte 0x2d
          .byte 0x6f
          .byte 0x2d
          .byte 0x6f
          .byte 0x2d
          .byte 0x80
          .byte 0x2d
          .byte 0x96
          .byte 0x2d
          .byte 0xa0
          .byte 0x2d
          .byte 0xa6
          .byte 0x2d
          .byte 0xa8
          .byte 0x2d
          .byte 0xae
          .byte 0x2d
          .byte 0xb0
          .byte 0x2d
          .byte 0xb6
          .byte 0x2d
          .byte 0xb8
          .byte 0x2d
          .byte 0xbe
          .byte 0x2d
          .byte 0xc0
          .byte 0x2d
          .byte 0xc6
          .byte 0x2d
          .byte 0xc8
          .byte 0x2d
          .byte 0xce
          .byte 0x2d
          .byte 0xd0
          .byte 0x2d
          .byte 0xd6
          .byte 0x2d
          .byte 0xd8
          .byte 0x2d
          .byte 0xde
          .byte 0x2d
          .byte 0x2f
          .byte 0x2e
          .byte 0x2f
          .byte 0x2e
          .byte 0x5
          .byte 0x30
          .byte 0x6
          .byte 0x30
          .byte 0x31
          .byte 0x30
          .byte 0x35
          .byte 0x30
          .byte 0x3b
          .byte 0x30
          .byte 0x3c
          .byte 0x30
          .byte 0x41
          .byte 0x30
          .byte 0x96
          .byte 0x30
          .byte 0x9d
          .byte 0x30
          .byte 0x9f
          .byte 0x30
          .byte 0xa1
          .byte 0x30
          .byte 0xfa
          .byte 0x30
          .byte 0xfc
          .byte 0x30
          .byte 0xff
          .byte 0x30
          .byte 0x5
          .byte 0x31
          .byte 0x2d
          .byte 0x31
          .byte 0x31
          .byte 0x31
          .byte 0x8e
          .byte 0x31
          .byte 0xa0
          .byte 0x31
          .byte 0xba
          .byte 0x31
          .byte 0xf0
          .byte 0x31
          .byte 0xff
          .byte 0x31
          .byte 0x0
          .byte 0x34
          .byte 0xb5
          .byte 0x4d
          .byte 0x0
          .byte 0x4e
          .byte 0xcc
          .byte 0x9f
          .byte 0x0
          .byte 0xa0
          .byte 0x8c
          .byte 0xa4
          .byte 0xd0
          .byte 0xa4
          .byte 0xfd
          .byte 0xa4
          .byte 0x0
          .byte 0xa5
          .byte 0xc
          .byte 0xa6
          .byte 0x10
          .byte 0xa6
          .byte 0x1f
          .byte 0xa6
          .byte 0x2a
          .byte 0xa6
          .byte 0x2b
          .byte 0xa6
          .byte 0x40
          .byte 0xa6
          .byte 0x6e
          .byte 0xa6
          .byte 0x7f
          .byte 0xa6
          .byte 0x97
          .byte 0xa6
          .byte 0xa0
          .byte 0xa6
          .byte 0xe5
          .byte 0xa6
          .byte 0x17
          .byte 0xa7
          .byte 0x1f
          .byte 0xa7
          .byte 0x22
          .byte 0xa7
          .byte 0x88
          .byte 0xa7
          .byte 0x8b
          .byte 0xa7
          .byte 0x8e
          .byte 0xa7
          .byte 0x90
          .byte 0xa7
          .byte 0x93
          .byte 0xa7
          .byte 0xa0
          .byte 0xa7
          .byte 0xaa
          .byte 0xa7
          .byte 0xf8
          .byte 0xa7
          .byte 0x1
          .byte 0xa8
          .byte 0x3
          .byte 0xa8
          .byte 0x5
          .byte 0xa8
          .byte 0x7
          .byte 0xa8
          .byte 0xa
          .byte 0xa8
          .byte 0xc
          .byte 0xa8
          .byte 0x22
          .byte 0xa8
          .byte 0x40
          .byte 0xa8
          .byte 0x73
          .byte 0xa8
          .byte 0x82
          .byte 0xa8
          .byte 0xb3
          .byte 0xa8
          .byte 0xf2
          .byte 0xa8
          .byte 0xf7
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0xa
          .byte 0xa9
          .byte 0x25
          .byte 0xa9
          .byte 0x30
          .byte 0xa9
          .byte 0x46
          .byte 0xa9
          .byte 0x60
          .byte 0xa9
          .byte 0x7c
          .byte 0xa9
          .byte 0x84
          .byte 0xa9
          .byte 0xb2
          .byte 0xa9
          .byte 0xcf
          .byte 0xa9
          .byte 0xcf
          .byte 0xa9
          .byte 0x0
          .byte 0xaa
          .byte 0x28
          .byte 0xaa
          .byte 0x40
          .byte 0xaa
          .byte 0x42
          .byte 0xaa
          .byte 0x44
          .byte 0xaa
          .byte 0x4b
          .byte 0xaa
          .byte 0x60
          .byte 0xaa
          .byte 0x76
          .byte 0xaa
          .byte 0x7a
          .byte 0xaa
          .byte 0x7a
          .byte 0xaa
          .byte 0x80
          .byte 0xaa
          .byte 0xaf
          .byte 0xaa
          .byte 0xb1
          .byte 0xaa
          .byte 0xb1
          .byte 0xaa
          .byte 0xb5
          .byte 0xaa
          .byte 0xb6
          .byte 0xaa
          .byte 0xb9
          .byte 0xaa
          .byte 0xbd
          .byte 0xaa
          .byte 0xc0
          .byte 0xaa
          .byte 0xc0
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xdb
          .byte 0xaa
          .byte 0xdd
          .byte 0xaa
          .byte 0xe0
          .byte 0xaa
          .byte 0xea
          .byte 0xaa
          .byte 0xf2
          .byte 0xaa
          .byte 0xf4
          .byte 0xaa
          .byte 0x1
          .byte 0xab
          .byte 0x6
          .byte 0xab
          .byte 0x9
          .byte 0xab
          .byte 0xe
          .byte 0xab
          .byte 0x11
          .byte 0xab
          .byte 0x16
          .byte 0xab
          .byte 0x20
          .byte 0xab
          .byte 0x26
          .byte 0xab
          .byte 0x28
          .byte 0xab
          .byte 0x2e
          .byte 0xab
          .byte 0xc0
          .byte 0xab
          .byte 0xe2
          .byte 0xab
          .byte 0x0
          .byte 0xac
          .byte 0xa3
          .byte 0xd7
          .byte 0xb0
          .byte 0xd7
          .byte 0xc6
          .byte 0xd7
          .byte 0xcb
          .byte 0xd7
          .byte 0xfb
          .byte 0xd7
          .byte 0x0
          .byte 0xf9
          .byte 0x6d
          .byte 0xfa
          .byte 0x70
          .byte 0xfa
          .byte 0xd9
          .byte 0xfa
          .byte 0x0
          .byte 0xfb
          .byte 0x6
          .byte 0xfb
          .byte 0x13
          .byte 0xfb
          .byte 0x17
          .byte 0xfb
          .byte 0x1d
          .byte 0xfb
          .byte 0x1d
          .byte 0xfb
          .byte 0x1f
          .byte 0xfb
          .byte 0x28
          .byte 0xfb
          .byte 0x2a
          .byte 0xfb
          .byte 0x36
          .byte 0xfb
          .byte 0x38
          .byte 0xfb
          .byte 0x3c
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x40
          .byte 0xfb
          .byte 0x41
          .byte 0xfb
          .byte 0x43
          .byte 0xfb
          .byte 0x44
          .byte 0xfb
          .byte 0x46
          .byte 0xfb
          .byte 0xb1
          .byte 0xfb
          .byte 0xd3
          .byte 0xfb
          .byte 0x3d
          .byte 0xfd
          .byte 0x50
          .byte 0xfd
          .byte 0x8f
          .byte 0xfd
          .byte 0x92
          .byte 0xfd
          .byte 0xc7
          .byte 0xfd
          .byte 0xf0
          .byte 0xfd
          .byte 0xfb
          .byte 0xfd
          .byte 0x70
          .byte 0xfe
          .byte 0x74
          .byte 0xfe
          .byte 0x76
          .byte 0xfe
          .byte 0xfc
          .byte 0xfe
          .byte 0x21
          .byte 0xff
          .byte 0x3a
          .byte 0xff
          .byte 0x41
          .byte 0xff
          .byte 0x5a
          .byte 0xff
          .byte 0x66
          .byte 0xff
          .byte 0xbe
          .byte 0xff
          .byte 0xc2
          .byte 0xff
          .byte 0xc7
          .byte 0xff
          .byte 0xca
          .byte 0xff
          .byte 0xcf
          .byte 0xff
          .byte 0xd2
          .byte 0xff
          .byte 0xd7
          .byte 0xff
          .byte 0xda
          .byte 0xff
          .byte 0xdc
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ab00:
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x6
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb3
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x8f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x92
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x65
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x69
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6d
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x85
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0xe
          .byte 0x0
.L_43abc0:
          .byte 0x0
          .byte 0x3
          .byte 0x6f
          .byte 0x3
          .byte 0x83
          .byte 0x4
          .byte 0x89
          .byte 0x4
          .byte 0x91
          .byte 0x5
          .byte 0xbd
          .byte 0x5
          .byte 0xbf
          .byte 0x5
          .byte 0xbf
          .byte 0x5
          .byte 0xc1
          .byte 0x5
          .byte 0xc2
          .byte 0x5
          .byte 0xc4
          .byte 0x5
          .byte 0xc5
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0x10
          .byte 0x6
          .byte 0x1a
          .byte 0x6
          .byte 0x4b
          .byte 0x6
          .byte 0x5f
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0xd6
          .byte 0x6
          .byte 0xdc
          .byte 0x6
          .byte 0xdf
          .byte 0x6
          .byte 0xe4
          .byte 0x6
          .byte 0xe7
          .byte 0x6
          .byte 0xe8
          .byte 0x6
          .byte 0xea
          .byte 0x6
          .byte 0xed
          .byte 0x6
          .byte 0x11
          .byte 0x7
          .byte 0x11
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x4a
          .byte 0x7
          .byte 0xa6
          .byte 0x7
          .byte 0xb0
          .byte 0x7
          .byte 0xeb
          .byte 0x7
          .byte 0xf3
          .byte 0x7
          .byte 0x16
          .byte 0x8
          .byte 0x19
          .byte 0x8
          .byte 0x1b
          .byte 0x8
          .byte 0x23
          .byte 0x8
          .byte 0x25
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x29
          .byte 0x8
          .byte 0x2d
          .byte 0x8
          .byte 0x59
          .byte 0x8
          .byte 0x5b
          .byte 0x8
          .byte 0xe4
          .byte 0x8
          .byte 0xfe
          .byte 0x8
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x9
          .byte 0x3a
          .byte 0x9
          .byte 0x3c
          .byte 0x9
          .byte 0x3e
          .byte 0x9
          .byte 0x4f
          .byte 0x9
          .byte 0x51
          .byte 0x9
          .byte 0x57
          .byte 0x9
          .byte 0x62
          .byte 0x9
          .byte 0x63
          .byte 0x9
          .byte 0x81
          .byte 0x9
          .byte 0x83
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xbe
          .byte 0x9
          .byte 0xc4
          .byte 0x9
          .byte 0xc7
          .byte 0x9
          .byte 0xc8
          .byte 0x9
          .byte 0xcb
          .byte 0x9
          .byte 0xcd
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xe2
          .byte 0x9
          .byte 0xe3
          .byte 0x9
          .byte 0x1
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3e
          .byte 0xa
          .byte 0x42
          .byte 0xa
          .byte 0x47
          .byte 0xa
          .byte 0x48
          .byte 0xa
          .byte 0x4b
          .byte 0xa
          .byte 0x4d
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x70
          .byte 0xa
          .byte 0x71
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x81
          .byte 0xa
          .byte 0x83
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xbe
          .byte 0xa
          .byte 0xc5
          .byte 0xa
          .byte 0xc7
          .byte 0xa
          .byte 0xc9
          .byte 0xa
          .byte 0xcb
          .byte 0xa
          .byte 0xcd
          .byte 0xa
          .byte 0xe2
          .byte 0xa
          .byte 0xe3
          .byte 0xa
          .byte 0x1
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x3e
          .byte 0xb
          .byte 0x44
          .byte 0xb
          .byte 0x47
          .byte 0xb
          .byte 0x48
          .byte 0xb
          .byte 0x4b
          .byte 0xb
          .byte 0x4d
          .byte 0xb
          .byte 0x56
          .byte 0xb
          .byte 0x57
          .byte 0xb
          .byte 0x62
          .byte 0xb
          .byte 0x63
          .byte 0xb
          .byte 0x82
          .byte 0xb
          .byte 0x82
          .byte 0xb
          .byte 0xbe
          .byte 0xb
          .byte 0xc2
          .byte 0xb
          .byte 0xc6
          .byte 0xb
          .byte 0xc8
          .byte 0xb
          .byte 0xca
          .byte 0xb
          .byte 0xcd
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0x1
          .byte 0xc
          .byte 0x3
          .byte 0xc
          .byte 0x3e
          .byte 0xc
          .byte 0x44
          .byte 0xc
          .byte 0x46
          .byte 0xc
          .byte 0x48
          .byte 0xc
          .byte 0x4a
          .byte 0xc
          .byte 0x4d
          .byte 0xc
          .byte 0x55
          .byte 0xc
          .byte 0x56
          .byte 0xc
          .byte 0x62
          .byte 0xc
          .byte 0x63
          .byte 0xc
          .byte 0x82
          .byte 0xc
          .byte 0x83
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xbe
          .byte 0xc
          .byte 0xc4
          .byte 0xc
          .byte 0xc6
          .byte 0xc
          .byte 0xc8
          .byte 0xc
          .byte 0xca
          .byte 0xc
          .byte 0xcd
          .byte 0xc
          .byte 0xd5
          .byte 0xc
          .byte 0xd6
          .byte 0xc
          .byte 0xe2
          .byte 0xc
          .byte 0xe3
          .byte 0xc
          .byte 0x2
          .byte 0xd
          .byte 0x3
          .byte 0xd
          .byte 0x3e
          .byte 0xd
          .byte 0x44
          .byte 0xd
          .byte 0x46
          .byte 0xd
          .byte 0x48
          .byte 0xd
          .byte 0x4a
          .byte 0xd
          .byte 0x4d
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x62
          .byte 0xd
          .byte 0x63
          .byte 0xd
          .byte 0x82
          .byte 0xd
          .byte 0x83
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xcf
          .byte 0xd
          .byte 0xd4
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd8
          .byte 0xd
          .byte 0xdf
          .byte 0xd
          .byte 0xf2
          .byte 0xd
          .byte 0xf3
          .byte 0xd
          .byte 0x31
          .byte 0xe
          .byte 0x31
          .byte 0xe
          .byte 0x34
          .byte 0xe
          .byte 0x3a
          .byte 0xe
          .byte 0x47
          .byte 0xe
          .byte 0x4e
          .byte 0xe
          .byte 0xb1
          .byte 0xe
          .byte 0xb1
          .byte 0xe
          .byte 0xb4
          .byte 0xe
          .byte 0xb9
          .byte 0xe
          .byte 0xbb
          .byte 0xe
          .byte 0xbc
          .byte 0xe
          .byte 0xc8
          .byte 0xe
          .byte 0xcd
          .byte 0xe
          .byte 0x18
          .byte 0xf
          .byte 0x19
          .byte 0xf
          .byte 0x35
          .byte 0xf
          .byte 0x35
          .byte 0xf
          .byte 0x37
          .byte 0xf
          .byte 0x37
          .byte 0xf
          .byte 0x39
          .byte 0xf
          .byte 0x39
          .byte 0xf
          .byte 0x3e
          .byte 0xf
          .byte 0x3f
          .byte 0xf
          .byte 0x71
          .byte 0xf
          .byte 0x84
          .byte 0xf
          .byte 0x86
          .byte 0xf
          .byte 0x87
          .byte 0xf
          .byte 0x8d
          .byte 0xf
          .byte 0x97
          .byte 0xf
          .byte 0x99
          .byte 0xf
          .byte 0xbc
          .byte 0xf
          .byte 0xc6
          .byte 0xf
          .byte 0xc6
          .byte 0xf
          .byte 0x2b
          .byte 0x10
          .byte 0x3e
          .byte 0x10
          .byte 0x56
          .byte 0x10
          .byte 0x59
          .byte 0x10
          .byte 0x5e
          .byte 0x10
          .byte 0x60
          .byte 0x10
          .byte 0x62
          .byte 0x10
          .byte 0x64
          .byte 0x10
          .byte 0x67
          .byte 0x10
          .byte 0x6d
          .byte 0x10
          .byte 0x71
          .byte 0x10
          .byte 0x74
          .byte 0x10
          .byte 0x82
          .byte 0x10
          .byte 0x8d
          .byte 0x10
          .byte 0x8f
          .byte 0x10
          .byte 0x8f
          .byte 0x10
          .byte 0x9a
          .byte 0x10
          .byte 0x9d
          .byte 0x10
          .byte 0x5d
          .byte 0x13
          .byte 0x5f
          .byte 0x13
          .byte 0x12
          .byte 0x17
          .byte 0x14
          .byte 0x17
          .byte 0x32
          .byte 0x17
          .byte 0x34
          .byte 0x17
          .byte 0x52
          .byte 0x17
          .byte 0x53
          .byte 0x17
          .byte 0x72
          .byte 0x17
          .byte 0x73
          .byte 0x17
          .byte 0xb4
          .byte 0x17
          .byte 0xd3
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xb
          .byte 0x18
          .byte 0xd
          .byte 0x18
          .byte 0xa9
          .byte 0x18
          .byte 0xa9
          .byte 0x18
          .byte 0x20
          .byte 0x19
          .byte 0x2b
          .byte 0x19
          .byte 0x30
          .byte 0x19
          .byte 0x3b
          .byte 0x19
          .byte 0xb0
          .byte 0x19
          .byte 0xc0
          .byte 0x19
          .byte 0xc8
          .byte 0x19
          .byte 0xc9
          .byte 0x19
          .byte 0x17
          .byte 0x1a
          .byte 0x1b
          .byte 0x1a
          .byte 0x55
          .byte 0x1a
          .byte 0x5e
          .byte 0x1a
          .byte 0x60
          .byte 0x1a
          .byte 0x7c
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x0
          .byte 0x1b
          .byte 0x4
          .byte 0x1b
          .byte 0x34
          .byte 0x1b
          .byte 0x44
          .byte 0x1b
          .byte 0x6b
          .byte 0x1b
          .byte 0x73
          .byte 0x1b
          .byte 0x80
          .byte 0x1b
          .byte 0x82
          .byte 0x1b
          .byte 0xa1
          .byte 0x1b
          .byte 0xad
          .byte 0x1b
          .byte 0xe6
          .byte 0x1b
          .byte 0xf3
          .byte 0x1b
          .byte 0x24
          .byte 0x1c
          .byte 0x37
          .byte 0x1c
          .byte 0xd0
          .byte 0x1c
          .byte 0xd2
          .byte 0x1c
          .byte 0xd4
          .byte 0x1c
          .byte 0xe8
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xf2
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xc0
          .byte 0x1d
          .byte 0xe6
          .byte 0x1d
          .byte 0xfc
          .byte 0x1d
          .byte 0xff
          .byte 0x1d
          .byte 0xd0
          .byte 0x20
          .byte 0xf0
          .byte 0x20
          .byte 0xef
          .byte 0x2c
          .byte 0xf1
          .byte 0x2c
          .byte 0x7f
          .byte 0x2d
          .byte 0x7f
          .byte 0x2d
          .byte 0xe0
          .byte 0x2d
          .byte 0xff
          .byte 0x2d
          .byte 0x2a
          .byte 0x30
          .byte 0x2f
          .byte 0x30
          .byte 0x99
          .byte 0x30
          .byte 0x9a
          .byte 0x30
          .byte 0x6f
          .byte 0xa6
          .byte 0x72
          .byte 0xa6
          .byte 0x74
          .byte 0xa6
          .byte 0x7d
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0xf0
          .byte 0xa6
          .byte 0xf1
          .byte 0xa6
          .byte 0x2
          .byte 0xa8
          .byte 0x2
          .byte 0xa8
          .byte 0x6
          .byte 0xa8
          .byte 0x6
          .byte 0xa8
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xa8
          .byte 0x23
          .byte 0xa8
          .byte 0x27
          .byte 0xa8
          .byte 0x80
          .byte 0xa8
          .byte 0x81
          .byte 0xa8
          .byte 0xb4
          .byte 0xa8
          .byte 0xc4
          .byte 0xa8
          .byte 0xe0
          .byte 0xa8
          .byte 0xf1
          .byte 0xa8
          .byte 0x26
          .byte 0xa9
          .byte 0x2d
          .byte 0xa9
          .byte 0x47
          .byte 0xa9
          .byte 0x53
          .byte 0xa9
          .byte 0x80
          .byte 0xa9
          .byte 0x83
          .byte 0xa9
          .byte 0xb3
          .byte 0xa9
          .byte 0xc0
          .byte 0xa9
          .byte 0x29
          .byte 0xaa
          .byte 0x36
          .byte 0xaa
          .byte 0x43
          .byte 0xaa
          .byte 0x43
          .byte 0xaa
          .byte 0x4c
          .byte 0xaa
          .byte 0x4d
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
          .byte 0xb0
          .byte 0xaa
          .byte 0xb0
          .byte 0xaa
          .byte 0xb2
          .byte 0xaa
          .byte 0xb4
          .byte 0xaa
          .byte 0xb7
          .byte 0xaa
          .byte 0xb8
          .byte 0xaa
          .byte 0xbe
          .byte 0xaa
          .byte 0xbf
          .byte 0xaa
          .byte 0xc1
          .byte 0xaa
          .byte 0xc1
          .byte 0xaa
          .byte 0xeb
          .byte 0xaa
          .byte 0xef
          .byte 0xaa
          .byte 0xf5
          .byte 0xaa
          .byte 0xf6
          .byte 0xaa
          .byte 0xe3
          .byte 0xab
          .byte 0xea
          .byte 0xab
          .byte 0xec
          .byte 0xab
          .byte 0xed
          .byte 0xab
          .byte 0x1e
          .byte 0xfb
          .byte 0x1e
          .byte 0xfb
          .byte 0x0
          .byte 0xfe
          .byte 0xf
          .byte 0xfe
          .byte 0x20
          .byte 0xfe
          .byte 0x26
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43aea0:
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x6
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x81
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb3
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2b
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2d
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x81
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb5
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x8f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x92
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x69
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x85
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43af80:
          .byte 0x0
          .byte 0x3
          .byte 0x6f
          .byte 0x3
          .byte 0x83
          .byte 0x4
          .byte 0x87
          .byte 0x4
          .byte 0x91
          .byte 0x5
          .byte 0xbd
          .byte 0x5
          .byte 0xbf
          .byte 0x5
          .byte 0xbf
          .byte 0x5
          .byte 0xc1
          .byte 0x5
          .byte 0xc2
          .byte 0x5
          .byte 0xc4
          .byte 0x5
          .byte 0xc5
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0x10
          .byte 0x6
          .byte 0x1a
          .byte 0x6
          .byte 0x4b
          .byte 0x6
          .byte 0x5f
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0xd6
          .byte 0x6
          .byte 0xdc
          .byte 0x6
          .byte 0xdf
          .byte 0x6
          .byte 0xe4
          .byte 0x6
          .byte 0xe7
          .byte 0x6
          .byte 0xe8
          .byte 0x6
          .byte 0xea
          .byte 0x6
          .byte 0xed
          .byte 0x6
          .byte 0x11
          .byte 0x7
          .byte 0x11
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x4a
          .byte 0x7
          .byte 0xa6
          .byte 0x7
          .byte 0xb0
          .byte 0x7
          .byte 0xeb
          .byte 0x7
          .byte 0xf3
          .byte 0x7
          .byte 0x16
          .byte 0x8
          .byte 0x19
          .byte 0x8
          .byte 0x1b
          .byte 0x8
          .byte 0x23
          .byte 0x8
          .byte 0x25
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x29
          .byte 0x8
          .byte 0x2d
          .byte 0x8
          .byte 0x59
          .byte 0x8
          .byte 0x5b
          .byte 0x8
          .byte 0xe4
          .byte 0x8
          .byte 0xfe
          .byte 0x8
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x9
          .byte 0x3a
          .byte 0x9
          .byte 0x3a
          .byte 0x9
          .byte 0x3c
          .byte 0x9
          .byte 0x3c
          .byte 0x9
          .byte 0x41
          .byte 0x9
          .byte 0x48
          .byte 0x9
          .byte 0x4d
          .byte 0x9
          .byte 0x4d
          .byte 0x9
          .byte 0x51
          .byte 0x9
          .byte 0x57
          .byte 0x9
          .byte 0x62
          .byte 0x9
          .byte 0x63
          .byte 0x9
          .byte 0x81
          .byte 0x9
          .byte 0x81
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xc1
          .byte 0x9
          .byte 0xc4
          .byte 0x9
          .byte 0xcd
          .byte 0x9
          .byte 0xcd
          .byte 0x9
          .byte 0xe2
          .byte 0x9
          .byte 0xe3
          .byte 0x9
          .byte 0x1
          .byte 0xa
          .byte 0x2
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x41
          .byte 0xa
          .byte 0x42
          .byte 0xa
          .byte 0x47
          .byte 0xa
          .byte 0x48
          .byte 0xa
          .byte 0x4b
          .byte 0xa
          .byte 0x4d
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x70
          .byte 0xa
          .byte 0x71
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x81
          .byte 0xa
          .byte 0x82
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xc1
          .byte 0xa
          .byte 0xc5
          .byte 0xa
          .byte 0xc7
          .byte 0xa
          .byte 0xc8
          .byte 0xa
          .byte 0xcd
          .byte 0xa
          .byte 0xcd
          .byte 0xa
          .byte 0xe2
          .byte 0xa
          .byte 0xe3
          .byte 0xa
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x3f
          .byte 0xb
          .byte 0x3f
          .byte 0xb
          .byte 0x41
          .byte 0xb
          .byte 0x44
          .byte 0xb
          .byte 0x4d
          .byte 0xb
          .byte 0x4d
          .byte 0xb
          .byte 0x56
          .byte 0xb
          .byte 0x56
          .byte 0xb
          .byte 0x62
          .byte 0xb
          .byte 0x63
          .byte 0xb
          .byte 0x82
          .byte 0xb
          .byte 0x82
          .byte 0xb
          .byte 0xc0
          .byte 0xb
          .byte 0xc0
          .byte 0xb
          .byte 0xcd
          .byte 0xb
          .byte 0xcd
          .byte 0xb
          .byte 0x3e
          .byte 0xc
          .byte 0x40
          .byte 0xc
          .byte 0x46
          .byte 0xc
          .byte 0x48
          .byte 0xc
          .byte 0x4a
          .byte 0xc
          .byte 0x4d
          .byte 0xc
          .byte 0x55
          .byte 0xc
          .byte 0x56
          .byte 0xc
          .byte 0x62
          .byte 0xc
          .byte 0x63
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xbf
          .byte 0xc
          .byte 0xbf
          .byte 0xc
          .byte 0xc6
          .byte 0xc
          .byte 0xc6
          .byte 0xc
          .byte 0xcc
          .byte 0xc
          .byte 0xcd
          .byte 0xc
          .byte 0xe2
          .byte 0xc
          .byte 0xe3
          .byte 0xc
          .byte 0x41
          .byte 0xd
          .byte 0x44
          .byte 0xd
          .byte 0x4d
          .byte 0xd
          .byte 0x4d
          .byte 0xd
          .byte 0x62
          .byte 0xd
          .byte 0x63
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xd2
          .byte 0xd
          .byte 0xd4
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0x31
          .byte 0xe
          .byte 0x31
          .byte 0xe
          .byte 0x34
          .byte 0xe
          .byte 0x3a
          .byte 0xe
          .byte 0x47
          .byte 0xe
          .byte 0x4e
          .byte 0xe
          .byte 0xb1
          .byte 0xe
          .byte 0xb1
          .byte 0xe
          .byte 0xb4
          .byte 0xe
          .byte 0xb9
          .byte 0xe
          .byte 0xbb
          .byte 0xe
          .byte 0xbc
          .byte 0xe
          .byte 0xc8
          .byte 0xe
          .byte 0xcd
          .byte 0xe
          .byte 0x18
          .byte 0xf
          .byte 0x19
          .byte 0xf
          .byte 0x35
          .byte 0xf
          .byte 0x35
          .byte 0xf
          .byte 0x37
          .byte 0xf
          .byte 0x37
          .byte 0xf
          .byte 0x39
          .byte 0xf
          .byte 0x39
          .byte 0xf
          .byte 0x71
          .byte 0xf
          .byte 0x7e
          .byte 0xf
          .byte 0x80
          .byte 0xf
          .byte 0x84
          .byte 0xf
          .byte 0x86
          .byte 0xf
          .byte 0x87
          .byte 0xf
          .byte 0x8d
          .byte 0xf
          .byte 0x97
          .byte 0xf
          .byte 0x99
          .byte 0xf
          .byte 0xbc
          .byte 0xf
          .byte 0xc6
          .byte 0xf
          .byte 0xc6
          .byte 0xf
          .byte 0x2d
          .byte 0x10
          .byte 0x30
          .byte 0x10
          .byte 0x32
          .byte 0x10
          .byte 0x37
          .byte 0x10
          .byte 0x39
          .byte 0x10
          .byte 0x3a
          .byte 0x10
          .byte 0x3d
          .byte 0x10
          .byte 0x3e
          .byte 0x10
          .byte 0x58
          .byte 0x10
          .byte 0x59
          .byte 0x10
          .byte 0x5e
          .byte 0x10
          .byte 0x60
          .byte 0x10
          .byte 0x71
          .byte 0x10
          .byte 0x74
          .byte 0x10
          .byte 0x82
          .byte 0x10
          .byte 0x82
          .byte 0x10
          .byte 0x85
          .byte 0x10
          .byte 0x86
          .byte 0x10
          .byte 0x8d
          .byte 0x10
          .byte 0x8d
          .byte 0x10
          .byte 0x9d
          .byte 0x10
          .byte 0x9d
          .byte 0x10
          .byte 0x5d
          .byte 0x13
          .byte 0x5f
          .byte 0x13
          .byte 0x12
          .byte 0x17
          .byte 0x14
          .byte 0x17
          .byte 0x32
          .byte 0x17
          .byte 0x34
          .byte 0x17
          .byte 0x52
          .byte 0x17
          .byte 0x53
          .byte 0x17
          .byte 0x72
          .byte 0x17
          .byte 0x73
          .byte 0x17
          .byte 0xb4
          .byte 0x17
          .byte 0xb5
          .byte 0x17
          .byte 0xb7
          .byte 0x17
          .byte 0xbd
          .byte 0x17
          .byte 0xc6
          .byte 0x17
          .byte 0xc6
          .byte 0x17
          .byte 0xc9
          .byte 0x17
          .byte 0xd3
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xb
          .byte 0x18
          .byte 0xd
          .byte 0x18
          .byte 0xa9
          .byte 0x18
          .byte 0xa9
          .byte 0x18
          .byte 0x20
          .byte 0x19
          .byte 0x22
          .byte 0x19
          .byte 0x27
          .byte 0x19
          .byte 0x28
          .byte 0x19
          .byte 0x32
          .byte 0x19
          .byte 0x32
          .byte 0x19
          .byte 0x39
          .byte 0x19
          .byte 0x3b
          .byte 0x19
          .byte 0x17
          .byte 0x1a
          .byte 0x18
          .byte 0x1a
          .byte 0x1b
          .byte 0x1a
          .byte 0x1b
          .byte 0x1a
          .byte 0x56
          .byte 0x1a
          .byte 0x56
          .byte 0x1a
          .byte 0x58
          .byte 0x1a
          .byte 0x5e
          .byte 0x1a
          .byte 0x60
          .byte 0x1a
          .byte 0x60
          .byte 0x1a
          .byte 0x62
          .byte 0x1a
          .byte 0x62
          .byte 0x1a
          .byte 0x65
          .byte 0x1a
          .byte 0x6c
          .byte 0x1a
          .byte 0x73
          .byte 0x1a
          .byte 0x7c
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x1b
          .byte 0x34
          .byte 0x1b
          .byte 0x34
          .byte 0x1b
          .byte 0x36
          .byte 0x1b
          .byte 0x3a
          .byte 0x1b
          .byte 0x3c
          .byte 0x1b
          .byte 0x3c
          .byte 0x1b
          .byte 0x42
          .byte 0x1b
          .byte 0x42
          .byte 0x1b
          .byte 0x6b
          .byte 0x1b
          .byte 0x73
          .byte 0x1b
          .byte 0x80
          .byte 0x1b
          .byte 0x81
          .byte 0x1b
          .byte 0xa2
          .byte 0x1b
          .byte 0xa5
          .byte 0x1b
          .byte 0xa8
          .byte 0x1b
          .byte 0xa9
          .byte 0x1b
          .byte 0xab
          .byte 0x1b
          .byte 0xab
          .byte 0x1b
          .byte 0xe6
          .byte 0x1b
          .byte 0xe6
          .byte 0x1b
          .byte 0xe8
          .byte 0x1b
          .byte 0xe9
          .byte 0x1b
          .byte 0xed
          .byte 0x1b
          .byte 0xed
          .byte 0x1b
          .byte 0xef
          .byte 0x1b
          .byte 0xf1
          .byte 0x1b
          .byte 0x2c
          .byte 0x1c
          .byte 0x33
          .byte 0x1c
          .byte 0x36
          .byte 0x1c
          .byte 0x37
          .byte 0x1c
          .byte 0xd0
          .byte 0x1c
          .byte 0xd2
          .byte 0x1c
          .byte 0xd4
          .byte 0x1c
          .byte 0xe0
          .byte 0x1c
          .byte 0xe2
          .byte 0x1c
          .byte 0xe8
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xc0
          .byte 0x1d
          .byte 0xe6
          .byte 0x1d
          .byte 0xfc
          .byte 0x1d
          .byte 0xff
          .byte 0x1d
          .byte 0xd0
          .byte 0x20
          .byte 0xdc
          .byte 0x20
          .byte 0xe1
          .byte 0x20
          .byte 0xe1
          .byte 0x20
          .byte 0xe5
          .byte 0x20
          .byte 0xf0
          .byte 0x20
          .byte 0xef
          .byte 0x2c
          .byte 0xf1
          .byte 0x2c
          .byte 0x7f
          .byte 0x2d
          .byte 0x7f
          .byte 0x2d
          .byte 0xe0
          .byte 0x2d
          .byte 0xff
          .byte 0x2d
          .byte 0x2a
          .byte 0x30
          .byte 0x2d
          .byte 0x30
          .byte 0x99
          .byte 0x30
          .byte 0x9a
          .byte 0x30
          .byte 0x6f
          .byte 0xa6
          .byte 0x6f
          .byte 0xa6
          .byte 0x74
          .byte 0xa6
          .byte 0x7d
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0xf0
          .byte 0xa6
          .byte 0xf1
          .byte 0xa6
          .byte 0x2
          .byte 0xa8
          .byte 0x2
          .byte 0xa8
          .byte 0x6
          .byte 0xa8
          .byte 0x6
          .byte 0xa8
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xa8
          .byte 0x25
          .byte 0xa8
          .byte 0x26
          .byte 0xa8
          .byte 0xc4
          .byte 0xa8
          .byte 0xc4
          .byte 0xa8
          .byte 0xe0
          .byte 0xa8
          .byte 0xf1
          .byte 0xa8
          .byte 0x26
          .byte 0xa9
          .byte 0x2d
          .byte 0xa9
          .byte 0x47
          .byte 0xa9
          .byte 0x51
          .byte 0xa9
          .byte 0x80
          .byte 0xa9
          .byte 0x82
          .byte 0xa9
          .byte 0xb3
          .byte 0xa9
          .byte 0xb3
          .byte 0xa9
          .byte 0xb6
          .byte 0xa9
          .byte 0xb9
          .byte 0xa9
          .byte 0xbc
          .byte 0xa9
          .byte 0xbc
          .byte 0xa9
          .byte 0x29
          .byte 0xaa
          .byte 0x2e
          .byte 0xaa
          .byte 0x31
          .byte 0xaa
          .byte 0x32
          .byte 0xaa
          .byte 0x35
          .byte 0xaa
          .byte 0x36
          .byte 0xaa
          .byte 0x43
          .byte 0xaa
          .byte 0x43
          .byte 0xaa
          .byte 0x4c
          .byte 0xaa
          .byte 0x4c
          .byte 0xaa
          .byte 0xb0
          .byte 0xaa
          .byte 0xb0
          .byte 0xaa
          .byte 0xb2
          .byte 0xaa
          .byte 0xb4
          .byte 0xaa
          .byte 0xb7
          .byte 0xaa
          .byte 0xb8
          .byte 0xaa
          .byte 0xbe
          .byte 0xaa
          .byte 0xbf
          .byte 0xaa
          .byte 0xc1
          .byte 0xaa
          .byte 0xc1
          .byte 0xaa
          .byte 0xec
          .byte 0xaa
          .byte 0xed
          .byte 0xaa
          .byte 0xf6
          .byte 0xaa
          .byte 0xf6
          .byte 0xaa
          .byte 0xe5
          .byte 0xab
          .byte 0xe5
          .byte 0xab
          .byte 0xe8
          .byte 0xab
          .byte 0xe8
          .byte 0xab
          .byte 0xed
          .byte 0xab
          .byte 0xed
          .byte 0xab
          .byte 0x1e
          .byte 0xfb
          .byte 0x1e
          .byte 0xfb
          .byte 0x0
          .byte 0xfe
          .byte 0xf
          .byte 0xfe
          .byte 0x20
          .byte 0xfe
          .byte 0x26
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b2a0:
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb2
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb8
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x2c
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2c
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb3
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb5
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xbf
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xaf
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x65
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x66
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6d
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b320:
          .byte 0x3
          .byte 0x9
          .byte 0x3
          .byte 0x9
          .byte 0x3b
          .byte 0x9
          .byte 0x3b
          .byte 0x9
          .byte 0x3e
          .byte 0x9
          .byte 0x40
          .byte 0x9
          .byte 0x49
          .byte 0x9
          .byte 0x4c
          .byte 0x9
          .byte 0x4e
          .byte 0x9
          .byte 0x4f
          .byte 0x9
          .byte 0x82
          .byte 0x9
          .byte 0x83
          .byte 0x9
          .byte 0xbe
          .byte 0x9
          .byte 0xc0
          .byte 0x9
          .byte 0xc7
          .byte 0x9
          .byte 0xc8
          .byte 0x9
          .byte 0xcb
          .byte 0x9
          .byte 0xcc
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3e
          .byte 0xa
          .byte 0x40
          .byte 0xa
          .byte 0x83
          .byte 0xa
          .byte 0x83
          .byte 0xa
          .byte 0xbe
          .byte 0xa
          .byte 0xc0
          .byte 0xa
          .byte 0xc9
          .byte 0xa
          .byte 0xc9
          .byte 0xa
          .byte 0xcb
          .byte 0xa
          .byte 0xcc
          .byte 0xa
          .byte 0x2
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3e
          .byte 0xb
          .byte 0x3e
          .byte 0xb
          .byte 0x40
          .byte 0xb
          .byte 0x40
          .byte 0xb
          .byte 0x47
          .byte 0xb
          .byte 0x48
          .byte 0xb
          .byte 0x4b
          .byte 0xb
          .byte 0x4c
          .byte 0xb
          .byte 0x57
          .byte 0xb
          .byte 0x57
          .byte 0xb
          .byte 0xbe
          .byte 0xb
          .byte 0xbf
          .byte 0xb
          .byte 0xc1
          .byte 0xb
          .byte 0xc2
          .byte 0xb
          .byte 0xc6
          .byte 0xb
          .byte 0xc8
          .byte 0xb
          .byte 0xca
          .byte 0xb
          .byte 0xcc
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0x1
          .byte 0xc
          .byte 0x3
          .byte 0xc
          .byte 0x41
          .byte 0xc
          .byte 0x44
          .byte 0xc
          .byte 0x82
          .byte 0xc
          .byte 0x83
          .byte 0xc
          .byte 0xbe
          .byte 0xc
          .byte 0xbe
          .byte 0xc
          .byte 0xc0
          .byte 0xc
          .byte 0xc4
          .byte 0xc
          .byte 0xc7
          .byte 0xc
          .byte 0xc8
          .byte 0xc
          .byte 0xca
          .byte 0xc
          .byte 0xcb
          .byte 0xc
          .byte 0xd5
          .byte 0xc
          .byte 0xd6
          .byte 0xc
          .byte 0x2
          .byte 0xd
          .byte 0x3
          .byte 0xd
          .byte 0x3e
          .byte 0xd
          .byte 0x40
          .byte 0xd
          .byte 0x46
          .byte 0xd
          .byte 0x48
          .byte 0xd
          .byte 0x4a
          .byte 0xd
          .byte 0x4c
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x82
          .byte 0xd
          .byte 0x83
          .byte 0xd
          .byte 0xcf
          .byte 0xd
          .byte 0xd1
          .byte 0xd
          .byte 0xd8
          .byte 0xd
          .byte 0xdf
          .byte 0xd
          .byte 0xf2
          .byte 0xd
          .byte 0xf3
          .byte 0xd
          .byte 0x3e
          .byte 0xf
          .byte 0x3f
          .byte 0xf
          .byte 0x7f
          .byte 0xf
          .byte 0x7f
          .byte 0xf
          .byte 0x2b
          .byte 0x10
          .byte 0x2c
          .byte 0x10
          .byte 0x31
          .byte 0x10
          .byte 0x31
          .byte 0x10
          .byte 0x38
          .byte 0x10
          .byte 0x38
          .byte 0x10
          .byte 0x3b
          .byte 0x10
          .byte 0x3c
          .byte 0x10
          .byte 0x56
          .byte 0x10
          .byte 0x57
          .byte 0x10
          .byte 0x62
          .byte 0x10
          .byte 0x64
          .byte 0x10
          .byte 0x67
          .byte 0x10
          .byte 0x6d
          .byte 0x10
          .byte 0x83
          .byte 0x10
          .byte 0x84
          .byte 0x10
          .byte 0x87
          .byte 0x10
          .byte 0x8c
          .byte 0x10
          .byte 0x8f
          .byte 0x10
          .byte 0x8f
          .byte 0x10
          .byte 0x9a
          .byte 0x10
          .byte 0x9c
          .byte 0x10
          .byte 0xb6
          .byte 0x17
          .byte 0xb6
          .byte 0x17
          .byte 0xbe
          .byte 0x17
          .byte 0xc5
          .byte 0x17
          .byte 0xc7
          .byte 0x17
          .byte 0xc8
          .byte 0x17
          .byte 0x23
          .byte 0x19
          .byte 0x26
          .byte 0x19
          .byte 0x29
          .byte 0x19
          .byte 0x2b
          .byte 0x19
          .byte 0x30
          .byte 0x19
          .byte 0x31
          .byte 0x19
          .byte 0x33
          .byte 0x19
          .byte 0x38
          .byte 0x19
          .byte 0xb0
          .byte 0x19
          .byte 0xc0
          .byte 0x19
          .byte 0xc8
          .byte 0x19
          .byte 0xc9
          .byte 0x19
          .byte 0x19
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x55
          .byte 0x1a
          .byte 0x55
          .byte 0x1a
          .byte 0x57
          .byte 0x1a
          .byte 0x57
          .byte 0x1a
          .byte 0x61
          .byte 0x1a
          .byte 0x61
          .byte 0x1a
          .byte 0x63
          .byte 0x1a
          .byte 0x64
          .byte 0x1a
          .byte 0x6d
          .byte 0x1a
          .byte 0x72
          .byte 0x1a
          .byte 0x4
          .byte 0x1b
          .byte 0x4
          .byte 0x1b
          .byte 0x35
          .byte 0x1b
          .byte 0x35
          .byte 0x1b
          .byte 0x3b
          .byte 0x1b
          .byte 0x3b
          .byte 0x1b
          .byte 0x3d
          .byte 0x1b
          .byte 0x41
          .byte 0x1b
          .byte 0x43
          .byte 0x1b
          .byte 0x44
          .byte 0x1b
          .byte 0x82
          .byte 0x1b
          .byte 0x82
          .byte 0x1b
          .byte 0xa1
          .byte 0x1b
          .byte 0xa1
          .byte 0x1b
          .byte 0xa6
          .byte 0x1b
          .byte 0xa7
          .byte 0x1b
          .byte 0xaa
          .byte 0x1b
          .byte 0xaa
          .byte 0x1b
          .byte 0xac
          .byte 0x1b
          .byte 0xad
          .byte 0x1b
          .byte 0xe7
          .byte 0x1b
          .byte 0xe7
          .byte 0x1b
          .byte 0xea
          .byte 0x1b
          .byte 0xec
          .byte 0x1b
          .byte 0xee
          .byte 0x1b
          .byte 0xee
          .byte 0x1b
          .byte 0xf2
          .byte 0x1b
          .byte 0xf3
          .byte 0x1b
          .byte 0x24
          .byte 0x1c
          .byte 0x2b
          .byte 0x1c
          .byte 0x34
          .byte 0x1c
          .byte 0x35
          .byte 0x1c
          .byte 0xe1
          .byte 0x1c
          .byte 0xe1
          .byte 0x1c
          .byte 0xf2
          .byte 0x1c
          .byte 0xf3
          .byte 0x1c
          .byte 0x2e
          .byte 0x30
          .byte 0x2f
          .byte 0x30
          .byte 0x23
          .byte 0xa8
          .byte 0x24
          .byte 0xa8
          .byte 0x27
          .byte 0xa8
          .byte 0x27
          .byte 0xa8
          .byte 0x80
          .byte 0xa8
          .byte 0x81
          .byte 0xa8
          .byte 0xb4
          .byte 0xa8
          .byte 0xc3
          .byte 0xa8
          .byte 0x52
          .byte 0xa9
          .byte 0x53
          .byte 0xa9
          .byte 0x83
          .byte 0xa9
          .byte 0x83
          .byte 0xa9
          .byte 0xb4
          .byte 0xa9
          .byte 0xb5
          .byte 0xa9
          .byte 0xba
          .byte 0xa9
          .byte 0xbb
          .byte 0xa9
          .byte 0xbd
          .byte 0xa9
          .byte 0xc0
          .byte 0xa9
          .byte 0x2f
          .byte 0xaa
          .byte 0x30
          .byte 0xaa
          .byte 0x33
          .byte 0xaa
          .byte 0x34
          .byte 0xaa
          .byte 0x4d
          .byte 0xaa
          .byte 0x4d
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
          .byte 0xeb
          .byte 0xaa
          .byte 0xeb
          .byte 0xaa
          .byte 0xee
          .byte 0xaa
          .byte 0xef
          .byte 0xaa
          .byte 0xf5
          .byte 0xaa
          .byte 0xf5
          .byte 0xaa
          .byte 0xe3
          .byte 0xab
          .byte 0xe4
          .byte 0xab
          .byte 0xe6
          .byte 0xab
          .byte 0xe7
          .byte 0xab
          .byte 0xe9
          .byte 0xab
          .byte 0xea
          .byte 0xab
          .byte 0xec
          .byte 0xab
          .byte 0xec
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b4e0:
          .byte 0xbd
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b520:
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xe
          .byte 0x18
          .byte 0xe
          .byte 0x18
          .byte 0xb
          .byte 0x20
          .byte 0xf
          .byte 0x20
          .byte 0x2a
          .byte 0x20
          .byte 0x2e
          .byte 0x20
          .byte 0x60
          .byte 0x20
          .byte 0x64
          .byte 0x20
          .byte 0x66
          .byte 0x20
          .byte 0x6f
          .byte 0x20
          .byte 0x0
          .byte 0xd8
          .byte 0xff
          .byte 0xf8
          .byte 0xff
          .byte 0xfe
          .byte 0xff
          .byte 0xfe
          .byte 0xf9
          .byte 0xff
          .byte 0xfb
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b560:
          .byte 0x88
          .byte 0x4
          .byte 0x89
          .byte 0x4
          .byte 0xdd
          .byte 0x20
          .byte 0xe0
          .byte 0x20
          .byte 0xe2
          .byte 0x20
          .byte 0xe4
          .byte 0x20
          .byte 0x70
          .byte 0xa6
          .byte 0x72
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b580:
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbc
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b600:
          .string "!"
          .byte 0x23
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x7e
          .byte 0x3
          .byte 0x7e
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x5a
          .byte 0x5
          .byte 0x5f
          .byte 0x5
          .byte 0x89
          .byte 0x5
          .byte 0x89
          .byte 0x5
          .byte 0xc0
          .byte 0x5
          .byte 0xc0
          .byte 0x5
          .byte 0xc3
          .byte 0x5
          .byte 0xc3
          .byte 0x5
          .byte 0xc6
          .byte 0x5
          .byte 0xc6
          .byte 0x5
          .byte 0xf3
          .byte 0x5
          .byte 0xf4
          .byte 0x5
          .byte 0x9
          .byte 0x6
          .byte 0xa
          .byte 0x6
          .byte 0xc
          .byte 0x6
          .byte 0xd
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x1f
          .byte 0x6
          .byte 0x6a
          .byte 0x6
          .byte 0x6d
          .byte 0x6
          .byte 0xd4
          .byte 0x6
          .byte 0xd4
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0xd
          .byte 0x7
          .byte 0xf7
          .byte 0x7
          .byte 0xf9
          .byte 0x7
          .byte 0x30
          .byte 0x8
          .byte 0x3e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x64
          .byte 0x9
          .byte 0x65
          .byte 0x9
          .byte 0x70
          .byte 0x9
          .byte 0x70
          .byte 0x9
          .byte 0xf0
          .byte 0xa
          .byte 0xf0
          .byte 0xa
          .byte 0xf4
          .byte 0xd
          .byte 0xf4
          .byte 0xd
          .byte 0x4f
          .byte 0xe
          .byte 0x4f
          .byte 0xe
          .byte 0x5a
          .byte 0xe
          .byte 0x5b
          .byte 0xe
          .byte 0x4
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x14
          .byte 0xf
          .byte 0x14
          .byte 0xf
          .byte 0x85
          .byte 0xf
          .byte 0x85
          .byte 0xf
          .byte 0xd0
          .byte 0xf
          .byte 0xd4
          .byte 0xf
          .byte 0xd9
          .byte 0xf
          .byte 0xda
          .byte 0xf
          .byte 0x4a
          .byte 0x10
          .byte 0x4f
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0x60
          .byte 0x13
          .byte 0x68
          .byte 0x13
          .byte 0x6d
          .byte 0x16
          .byte 0x6e
          .byte 0x16
          .byte 0xeb
          .byte 0x16
          .byte 0xed
          .byte 0x16
          .byte 0x35
          .byte 0x17
          .byte 0x36
          .byte 0x17
          .byte 0xd4
          .byte 0x17
          .byte 0xd6
          .byte 0x17
          .byte 0xd8
          .byte 0x17
          .byte 0xda
          .byte 0x17
          .byte 0x0
          .byte 0x18
          .byte 0x5
          .byte 0x18
          .byte 0x7
          .byte 0x18
          .byte 0xa
          .byte 0x18
          .byte 0x44
          .byte 0x19
          .byte 0x45
          .byte 0x19
          .byte 0x1e
          .byte 0x1a
          .byte 0x1f
          .byte 0x1a
          .byte 0xa0
          .byte 0x1a
          .byte 0xa6
          .byte 0x1a
          .byte 0xa8
          .byte 0x1a
          .byte 0xad
          .byte 0x1a
          .byte 0x5a
          .byte 0x1b
          .byte 0x60
          .byte 0x1b
          .byte 0xfc
          .byte 0x1b
          .byte 0xff
          .byte 0x1b
          .byte 0x3b
          .byte 0x1c
          .byte 0x3f
          .byte 0x1c
          .byte 0x7e
          .byte 0x1c
          .byte 0x7f
          .byte 0x1c
          .byte 0xc0
          .byte 0x1c
          .byte 0xc7
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0x16
          .byte 0x20
          .byte 0x17
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x27
          .byte 0x20
          .byte 0x30
          .byte 0x20
          .byte 0x38
          .byte 0x20
          .byte 0x3b
          .byte 0x20
          .byte 0x3e
          .byte 0x20
          .byte 0x41
          .byte 0x20
          .byte 0x43
          .byte 0x20
          .byte 0x47
          .byte 0x20
          .byte 0x51
          .byte 0x20
          .byte 0x53
          .byte 0x20
          .byte 0x53
          .byte 0x20
          .byte 0x55
          .byte 0x20
          .byte 0x5e
          .byte 0x20
          .byte 0xf9
          .byte 0x2c
          .byte 0xfc
          .byte 0x2c
          .byte 0xfe
          .byte 0x2c
          .byte 0xff
          .byte 0x2c
          .byte 0x70
          .byte 0x2d
          .byte 0x70
          .byte 0x2d
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x2e
          .byte 0x6
          .byte 0x2e
          .byte 0x8
          .byte 0x2e
          .byte 0xb
          .byte 0x2e
          .byte 0xb
          .byte 0x2e
          .byte 0xe
          .byte 0x2e
          .byte 0x16
          .byte 0x2e
          .byte 0x18
          .byte 0x2e
          .byte 0x19
          .byte 0x2e
          .byte 0x1b
          .byte 0x2e
          .byte 0x1b
          .byte 0x2e
          .byte 0x1e
          .byte 0x2e
          .byte 0x1f
          .byte 0x2e
          .byte 0x2a
          .byte 0x2e
          .byte 0x2e
          .byte 0x2e
          .byte 0x30
          .byte 0x2e
          .byte 0x39
          .byte 0x2e
          .byte 0x1
          .byte 0x30
          .byte 0x3
          .byte 0x30
          .byte 0x3d
          .byte 0x30
          .byte 0x3d
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfe
          .byte 0xa4
          .byte 0xff
          .byte 0xa4
          .byte 0xd
          .byte 0xa6
          .byte 0xf
          .byte 0xa6
          .byte 0x73
          .byte 0xa6
          .byte 0x73
          .byte 0xa6
          .byte 0x7e
          .byte 0xa6
          .byte 0x7e
          .byte 0xa6
          .byte 0xf2
          .byte 0xa6
          .byte 0xf7
          .byte 0xa6
          .byte 0x74
          .byte 0xa8
          .byte 0x77
          .byte 0xa8
          .byte 0xce
          .byte 0xa8
          .byte 0xcf
          .byte 0xa8
          .byte 0xf8
          .byte 0xa8
          .byte 0xfa
          .byte 0xa8
          .byte 0x2e
          .byte 0xa9
          .byte 0x2f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0xc1
          .byte 0xa9
          .byte 0xcd
          .byte 0xa9
          .byte 0xde
          .byte 0xa9
          .byte 0xdf
          .byte 0xa9
          .byte 0x5c
          .byte 0xaa
          .byte 0x5f
          .byte 0xaa
          .byte 0xde
          .byte 0xaa
          .byte 0xdf
          .byte 0xaa
          .byte 0xf0
          .byte 0xaa
          .byte 0xf1
          .byte 0xaa
          .byte 0xeb
          .byte 0xab
          .byte 0xeb
          .byte 0xab
          .byte 0x10
          .byte 0xfe
          .byte 0x16
          .byte 0xfe
          .byte 0x19
          .byte 0xfe
          .byte 0x19
          .byte 0xfe
          .byte 0x30
          .byte 0xfe
          .byte 0x30
          .byte 0xfe
          .byte 0x45
          .byte 0xfe
          .byte 0x46
          .byte 0xfe
          .byte 0x49
          .byte 0xfe
          .byte 0x4c
          .byte 0xfe
          .byte 0x50
          .byte 0xfe
          .byte 0x52
          .byte 0xfe
          .byte 0x54
          .byte 0xfe
          .byte 0x57
          .byte 0xfe
          .byte 0x5f
          .byte 0xfe
          .byte 0x61
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x6a
          .byte 0xfe
          .byte 0x6b
          .byte 0xfe
          .byte 0x1
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0x5
          .byte 0xff
          .byte 0x7
          .byte 0xff
          .byte 0xa
          .byte 0xff
          .byte 0xa
          .byte 0xff
          .byte 0xc
          .byte 0xff
          .byte 0xc
          .byte 0xff
          .byte 0xe
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0x1a
          .byte 0xff
          .byte 0x1b
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0x20
          .byte 0xff
          .byte 0x3c
          .byte 0xff
          .byte 0x3c
          .byte 0xff
          .byte 0x61
          .byte 0xff
          .byte 0x61
          .byte 0xff
          .byte 0x64
          .byte 0xff
          .byte 0x65
          .byte 0xff
.L_43b7e0:
          .byte 0xab
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x18
          .byte 0x20
          .byte 0x18
          .byte 0x20
          .byte 0x1b
          .byte 0x20
          .byte 0x1c
          .byte 0x20
          .byte 0x1f
          .byte 0x20
          .byte 0x1f
          .byte 0x20
          .byte 0x39
          .byte 0x20
          .byte 0x39
          .byte 0x20
          .byte 0x2
          .byte 0x2e
          .byte 0x2
          .byte 0x2e
          .byte 0x4
          .byte 0x2e
          .byte 0x4
          .byte 0x2e
          .byte 0x9
          .byte 0x2e
          .byte 0x9
          .byte 0x2e
          .byte 0xc
          .byte 0x2e
          .byte 0xc
          .byte 0x2e
          .byte 0x1c
          .byte 0x2e
          .byte 0x1c
          .byte 0x2e
          .byte 0x20
          .byte 0x2e
          .byte 0x20
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b820:
          .string ")"
          .byte 0x29
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x3b
          .byte 0xf
          .byte 0x3b
          .byte 0xf
          .byte 0x3d
          .byte 0xf
          .byte 0x3d
          .byte 0xf
          .byte 0x9c
          .byte 0x16
          .byte 0x9c
          .byte 0x16
          .byte 0x46
          .byte 0x20
          .byte 0x46
          .byte 0x20
          .byte 0x7e
          .byte 0x20
          .byte 0x7e
          .byte 0x20
          .byte 0x8e
          .byte 0x20
          .byte 0x8e
          .byte 0x20
          .byte 0x9
          .byte 0x23
          .byte 0x9
          .byte 0x23
          .byte 0xb
          .byte 0x23
          .byte 0xb
          .byte 0x23
          .byte 0x2a
          .byte 0x23
          .byte 0x2a
          .byte 0x23
          .byte 0x69
          .byte 0x27
          .byte 0x69
          .byte 0x27
          .byte 0x6b
          .byte 0x27
          .byte 0x6b
          .byte 0x27
          .byte 0x6d
          .byte 0x27
          .byte 0x6d
          .byte 0x27
          .byte 0x6f
          .byte 0x27
          .byte 0x6f
          .byte 0x27
          .byte 0x71
          .byte 0x27
          .byte 0x71
          .byte 0x27
          .byte 0x73
          .byte 0x27
          .byte 0x73
          .byte 0x27
          .byte 0x75
          .byte 0x27
          .byte 0x75
          .byte 0x27
          .byte 0xc6
          .byte 0x27
          .byte 0xc6
          .byte 0x27
          .byte 0xe7
          .byte 0x27
          .byte 0xe7
          .byte 0x27
          .byte 0xe9
          .byte 0x27
          .byte 0xe9
          .byte 0x27
          .byte 0xeb
          .byte 0x27
          .byte 0xeb
          .byte 0x27
          .byte 0xed
          .byte 0x27
          .byte 0xed
          .byte 0x27
          .byte 0xef
          .byte 0x27
          .byte 0xef
          .byte 0x27
          .byte 0x84
          .byte 0x29
          .byte 0x84
          .byte 0x29
          .byte 0x86
          .byte 0x29
          .byte 0x86
          .byte 0x29
          .byte 0x88
          .byte 0x29
          .byte 0x88
          .byte 0x29
          .byte 0x8a
          .byte 0x29
          .byte 0x8a
          .byte 0x29
          .byte 0x8c
          .byte 0x29
          .byte 0x8c
          .byte 0x29
          .byte 0x8e
          .byte 0x29
          .byte 0x8e
          .byte 0x29
          .byte 0x90
          .byte 0x29
          .byte 0x90
          .byte 0x29
          .byte 0x92
          .byte 0x29
          .byte 0x92
          .byte 0x29
          .byte 0x94
          .byte 0x29
          .byte 0x94
          .byte 0x29
          .byte 0x96
          .byte 0x29
          .byte 0x96
          .byte 0x29
          .byte 0x98
          .byte 0x29
          .byte 0x98
          .byte 0x29
          .byte 0xd9
          .byte 0x29
          .byte 0xd9
          .byte 0x29
          .byte 0xdb
          .byte 0x29
          .byte 0xdb
          .byte 0x29
          .byte 0xfd
          .byte 0x29
          .byte 0xfd
          .byte 0x29
          .byte 0x23
          .byte 0x2e
          .byte 0x23
          .byte 0x2e
          .byte 0x25
          .byte 0x2e
          .byte 0x25
          .byte 0x2e
          .byte 0x27
          .byte 0x2e
          .byte 0x27
          .byte 0x2e
          .byte 0x29
          .byte 0x2e
          .byte 0x29
          .byte 0x2e
          .byte 0x9
          .byte 0x30
          .byte 0x9
          .byte 0x30
          .byte 0xb
          .byte 0x30
          .byte 0xb
          .byte 0x30
          .byte 0xd
          .byte 0x30
          .byte 0xd
          .byte 0x30
          .byte 0xf
          .byte 0x30
          .byte 0xf
          .byte 0x30
          .byte 0x11
          .byte 0x30
          .byte 0x11
          .byte 0x30
          .byte 0x15
          .byte 0x30
          .byte 0x15
          .byte 0x30
          .byte 0x17
          .byte 0x30
          .byte 0x17
          .byte 0x30
          .byte 0x19
          .byte 0x30
          .byte 0x19
          .byte 0x30
          .byte 0x1b
          .byte 0x30
          .byte 0x1b
          .byte 0x30
          .byte 0x1e
          .byte 0x30
          .byte 0x1f
          .byte 0x30
          .byte 0x3f
          .byte 0xfd
          .byte 0x3f
          .byte 0xfd
          .byte 0x18
          .byte 0xfe
          .byte 0x18
          .byte 0xfe
          .byte 0x36
          .byte 0xfe
          .byte 0x36
          .byte 0xfe
          .byte 0x38
          .byte 0xfe
          .byte 0x38
          .byte 0xfe
          .byte 0x3a
          .byte 0xfe
          .byte 0x3a
          .byte 0xfe
          .byte 0x3c
          .byte 0xfe
          .byte 0x3c
          .byte 0xfe
          .byte 0x3e
          .byte 0xfe
          .byte 0x3e
          .byte 0xfe
          .byte 0x40
          .byte 0xfe
          .byte 0x40
          .byte 0xfe
          .byte 0x42
          .byte 0xfe
          .byte 0x42
          .byte 0xfe
          .byte 0x44
          .byte 0xfe
          .byte 0x44
          .byte 0xfe
          .byte 0x48
          .byte 0xfe
          .byte 0x48
          .byte 0xfe
          .byte 0x5a
          .byte 0xfe
          .byte 0x5a
          .byte 0xfe
          .byte 0x5c
          .byte 0xfe
          .byte 0x5c
          .byte 0xfe
          .byte 0x5e
          .byte 0xfe
          .byte 0x5e
          .byte 0xfe
          .byte 0x9
          .byte 0xff
          .byte 0x9
          .byte 0xff
          .byte 0x3d
          .byte 0xff
          .byte 0x3d
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0x60
          .byte 0xff
          .byte 0x60
          .byte 0xff
          .byte 0x63
          .byte 0xff
          .byte 0x63
          .byte 0xff
.L_43b940:
          .string "-"
          .byte 0x2d
          .byte 0x0
          .byte 0x8a
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0xbe
          .byte 0x5
          .byte 0xbe
          .byte 0x5
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x14
          .byte 0x6
          .byte 0x18
          .byte 0x6
          .byte 0x18
          .byte 0x10
          .byte 0x20
          .byte 0x15
          .byte 0x20
          .byte 0x17
          .byte 0x2e
          .byte 0x17
          .byte 0x2e
          .byte 0x1a
          .byte 0x2e
          .byte 0x1a
          .byte 0x2e
          .byte 0x3a
          .byte 0x2e
          .byte 0x3b
          .byte 0x2e
          .byte 0x1c
          .byte 0x30
          .byte 0x1c
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0x31
          .byte 0xfe
          .byte 0x32
          .byte 0xfe
          .byte 0x58
          .byte 0xfe
          .byte 0x58
          .byte 0xfe
          .byte 0x63
          .byte 0xfe
          .byte 0x63
          .byte 0xfe
          .byte 0xd
          .byte 0xff
          .byte 0xd
          .byte 0xff
.L_43b980:
          .byte 0xbb
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0x19
          .byte 0x20
          .byte 0x19
          .byte 0x20
          .byte 0x1d
          .byte 0x20
          .byte 0x1d
          .byte 0x20
          .byte 0x3a
          .byte 0x20
          .byte 0x3a
          .byte 0x20
          .byte 0x3
          .byte 0x2e
          .byte 0x3
          .byte 0x2e
          .byte 0x5
          .byte 0x2e
          .byte 0x5
          .byte 0x2e
          .byte 0xa
          .byte 0x2e
          .byte 0xa
          .byte 0x2e
          .byte 0xd
          .byte 0x2e
          .byte 0xd
          .byte 0x2e
          .byte 0x1d
          .byte 0x2e
          .byte 0x1d
          .byte 0x2e
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b9c0:
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x19
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x68
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x81
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9e
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa6
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xe9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x4
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1c
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x85
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd4
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xed
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xe2
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x1c
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x90
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xd7
          .byte 0x1
          .byte 0x0
.L_43bac0:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x1
          .byte 0x6
          .byte 0x1
          .byte 0x8
          .byte 0x1
          .byte 0x8
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0xe
          .byte 0x1
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x12
          .byte 0x1
          .byte 0x12
          .byte 0x1
          .byte 0x14
          .byte 0x1
          .byte 0x14
          .byte 0x1
          .byte 0x16
          .byte 0x1
          .byte 0x16
          .byte 0x1
          .byte 0x18
          .byte 0x1
          .byte 0x18
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1c
          .byte 0x1
          .byte 0x1c
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x22
          .byte 0x1
          .byte 0x22
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x2c
          .byte 0x1
          .byte 0x2c
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x41
          .byte 0x1
          .byte 0x41
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x45
          .byte 0x1
          .byte 0x45
          .byte 0x1
          .byte 0x47
          .byte 0x1
          .byte 0x47
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4c
          .byte 0x1
          .byte 0x4c
          .byte 0x1
          .byte 0x4e
          .byte 0x1
          .byte 0x4e
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x54
          .byte 0x1
          .byte 0x54
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x58
          .byte 0x1
          .byte 0x58
          .byte 0x1
          .byte 0x5a
          .byte 0x1
          .byte 0x5a
          .byte 0x1
          .byte 0x5c
          .byte 0x1
          .byte 0x5c
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x64
          .byte 0x1
          .byte 0x64
          .byte 0x1
          .byte 0x66
          .byte 0x1
          .byte 0x66
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x6c
          .byte 0x1
          .byte 0x6c
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x70
          .byte 0x1
          .byte 0x70
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x76
          .byte 0x1
          .byte 0x76
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x79
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x82
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x89
          .byte 0x1
          .byte 0x8b
          .byte 0x1
          .byte 0x8e
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x93
          .byte 0x1
          .byte 0x94
          .byte 0x1
          .byte 0x96
          .byte 0x1
          .byte 0x98
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0x9d
          .byte 0x1
          .byte 0x9f
          .byte 0x1
          .byte 0xa0
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0xa4
          .byte 0x1
          .byte 0xa4
          .byte 0x1
          .byte 0xa6
          .byte 0x1
          .byte 0xa7
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0xac
          .byte 0x1
          .byte 0xac
          .byte 0x1
          .byte 0xae
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb3
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb7
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd7
          .byte 0x1
          .byte 0xd7
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xdb
          .byte 0x1
          .byte 0xdb
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe2
          .byte 0x1
          .byte 0xe2
          .byte 0x1
          .byte 0xe4
          .byte 0x1
          .byte 0xe4
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xe8
          .byte 0x1
          .byte 0xe8
          .byte 0x1
          .byte 0xea
          .byte 0x1
          .byte 0xea
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xf8
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0xfe
          .byte 0x1
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x4
          .byte 0x2
          .byte 0x4
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x8
          .byte 0x2
          .byte 0x8
          .byte 0x2
          .byte 0xa
          .byte 0x2
          .byte 0xa
          .byte 0x2
          .byte 0xc
          .byte 0x2
          .byte 0xc
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x12
          .byte 0x2
          .byte 0x12
          .byte 0x2
          .byte 0x14
          .byte 0x2
          .byte 0x14
          .byte 0x2
          .byte 0x16
          .byte 0x2
          .byte 0x16
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0x1c
          .byte 0x2
          .byte 0x1c
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0x20
          .byte 0x2
          .byte 0x20
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x28
          .byte 0x2
          .byte 0x28
          .byte 0x2
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x2
          .byte 0x2c
          .byte 0x2
          .byte 0x2c
          .byte 0x2
          .byte 0x2e
          .byte 0x2
          .byte 0x2e
          .byte 0x2
          .byte 0x30
          .byte 0x2
          .byte 0x30
          .byte 0x2
          .byte 0x32
          .byte 0x2
          .byte 0x32
          .byte 0x2
          .byte 0x3a
          .byte 0x2
          .byte 0x3b
          .byte 0x2
          .byte 0x3d
          .byte 0x2
          .byte 0x3e
          .byte 0x2
          .byte 0x41
          .byte 0x2
          .byte 0x41
          .byte 0x2
          .byte 0x43
          .byte 0x2
          .byte 0x46
          .byte 0x2
          .byte 0x48
          .byte 0x2
          .byte 0x48
          .byte 0x2
          .byte 0x4a
          .byte 0x2
          .byte 0x4a
          .byte 0x2
          .byte 0x4c
          .byte 0x2
          .byte 0x4c
          .byte 0x2
          .byte 0x4e
          .byte 0x2
          .byte 0x4e
          .byte 0x2
          .byte 0x70
          .byte 0x3
          .byte 0x70
          .byte 0x3
          .byte 0x72
          .byte 0x3
          .byte 0x72
          .byte 0x3
          .byte 0x76
          .byte 0x3
          .byte 0x76
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x88
          .byte 0x3
          .byte 0x8a
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8e
          .byte 0x3
          .byte 0x8f
          .byte 0x3
          .byte 0x91
          .byte 0x3
          .byte 0xa1
          .byte 0x3
          .byte 0xa3
          .byte 0x3
          .byte 0xab
          .byte 0x3
          .byte 0xcf
          .byte 0x3
          .byte 0xcf
          .byte 0x3
          .byte 0xd2
          .byte 0x3
          .byte 0xd4
          .byte 0x3
          .byte 0xd8
          .byte 0x3
          .byte 0xd8
          .byte 0x3
          .byte 0xda
          .byte 0x3
          .byte 0xda
          .byte 0x3
          .byte 0xdc
          .byte 0x3
          .byte 0xdc
          .byte 0x3
          .byte 0xde
          .byte 0x3
          .byte 0xde
          .byte 0x3
          .byte 0xe0
          .byte 0x3
          .byte 0xe0
          .byte 0x3
          .byte 0xe2
          .byte 0x3
          .byte 0xe2
          .byte 0x3
          .byte 0xe4
          .byte 0x3
          .byte 0xe4
          .byte 0x3
          .byte 0xe6
          .byte 0x3
          .byte 0xe6
          .byte 0x3
          .byte 0xe8
          .byte 0x3
          .byte 0xe8
          .byte 0x3
          .byte 0xea
          .byte 0x3
          .byte 0xea
          .byte 0x3
          .byte 0xec
          .byte 0x3
          .byte 0xec
          .byte 0x3
          .byte 0xee
          .byte 0x3
          .byte 0xee
          .byte 0x3
          .byte 0xf4
          .byte 0x3
          .byte 0xf4
          .byte 0x3
          .byte 0xf7
          .byte 0x3
          .byte 0xf7
          .byte 0x3
          .byte 0xf9
          .byte 0x3
          .byte 0xfa
          .byte 0x3
          .byte 0xfd
          .byte 0x3
          .byte 0x2f
          .byte 0x4
          .byte 0x60
          .byte 0x4
          .byte 0x60
          .byte 0x4
          .byte 0x62
          .byte 0x4
          .byte 0x62
          .byte 0x4
          .byte 0x64
          .byte 0x4
          .byte 0x64
          .byte 0x4
          .byte 0x66
          .byte 0x4
          .byte 0x66
          .byte 0x4
          .byte 0x68
          .byte 0x4
          .byte 0x68
          .byte 0x4
          .byte 0x6a
          .byte 0x4
          .byte 0x6a
          .byte 0x4
          .byte 0x6c
          .byte 0x4
          .byte 0x6c
          .byte 0x4
          .byte 0x6e
          .byte 0x4
          .byte 0x6e
          .byte 0x4
          .byte 0x70
          .byte 0x4
          .byte 0x70
          .byte 0x4
          .byte 0x72
          .byte 0x4
          .byte 0x72
          .byte 0x4
          .byte 0x74
          .byte 0x4
          .byte 0x74
          .byte 0x4
          .byte 0x76
          .byte 0x4
          .byte 0x76
          .byte 0x4
          .byte 0x78
          .byte 0x4
          .byte 0x78
          .byte 0x4
          .byte 0x7a
          .byte 0x4
          .byte 0x7a
          .byte 0x4
          .byte 0x7c
          .byte 0x4
          .byte 0x7c
          .byte 0x4
          .byte 0x7e
          .byte 0x4
          .byte 0x7e
          .byte 0x4
          .byte 0x80
          .byte 0x4
          .byte 0x80
          .byte 0x4
          .byte 0x8a
          .byte 0x4
          .byte 0x8a
          .byte 0x4
          .byte 0x8c
          .byte 0x4
          .byte 0x8c
          .byte 0x4
          .byte 0x8e
          .byte 0x4
          .byte 0x8e
          .byte 0x4
          .byte 0x90
          .byte 0x4
          .byte 0x90
          .byte 0x4
          .byte 0x92
          .byte 0x4
          .byte 0x92
          .byte 0x4
          .byte 0x94
          .byte 0x4
          .byte 0x94
          .byte 0x4
          .byte 0x96
          .byte 0x4
          .byte 0x96
          .byte 0x4
          .byte 0x98
          .byte 0x4
          .byte 0x98
          .byte 0x4
          .byte 0x9a
          .byte 0x4
          .byte 0x9a
          .byte 0x4
          .byte 0x9c
          .byte 0x4
          .byte 0x9c
          .byte 0x4
          .byte 0x9e
          .byte 0x4
          .byte 0x9e
          .byte 0x4
          .byte 0xa0
          .byte 0x4
          .byte 0xa0
          .byte 0x4
          .byte 0xa2
          .byte 0x4
          .byte 0xa2
          .byte 0x4
          .byte 0xa4
          .byte 0x4
          .byte 0xa4
          .byte 0x4
          .byte 0xa6
          .byte 0x4
          .byte 0xa6
          .byte 0x4
          .byte 0xa8
          .byte 0x4
          .byte 0xa8
          .byte 0x4
          .byte 0xaa
          .byte 0x4
          .byte 0xaa
          .byte 0x4
          .byte 0xac
          .byte 0x4
          .byte 0xac
          .byte 0x4
          .byte 0xae
          .byte 0x4
          .byte 0xae
          .byte 0x4
          .byte 0xb0
          .byte 0x4
          .byte 0xb0
          .byte 0x4
          .byte 0xb2
          .byte 0x4
          .byte 0xb2
          .byte 0x4
          .byte 0xb4
          .byte 0x4
          .byte 0xb4
          .byte 0x4
          .byte 0xb6
          .byte 0x4
          .byte 0xb6
          .byte 0x4
          .byte 0xb8
          .byte 0x4
          .byte 0xb8
          .byte 0x4
          .byte 0xba
          .byte 0x4
          .byte 0xba
          .byte 0x4
          .byte 0xbc
          .byte 0x4
          .byte 0xbc
          .byte 0x4
          .byte 0xbe
          .byte 0x4
          .byte 0xbe
          .byte 0x4
          .byte 0xc0
          .byte 0x4
          .byte 0xc1
          .byte 0x4
          .byte 0xc3
          .byte 0x4
          .byte 0xc3
          .byte 0x4
          .byte 0xc5
          .byte 0x4
          .byte 0xc5
          .byte 0x4
          .byte 0xc7
          .byte 0x4
          .byte 0xc7
          .byte 0x4
          .byte 0xc9
          .byte 0x4
          .byte 0xc9
          .byte 0x4
          .byte 0xcb
          .byte 0x4
          .byte 0xcb
          .byte 0x4
          .byte 0xcd
          .byte 0x4
          .byte 0xcd
          .byte 0x4
          .byte 0xd0
          .byte 0x4
          .byte 0xd0
          .byte 0x4
          .byte 0xd2
          .byte 0x4
          .byte 0xd2
          .byte 0x4
          .byte 0xd4
          .byte 0x4
          .byte 0xd4
          .byte 0x4
          .byte 0xd6
          .byte 0x4
          .byte 0xd6
          .byte 0x4
          .byte 0xd8
          .byte 0x4
          .byte 0xd8
          .byte 0x4
          .byte 0xda
          .byte 0x4
          .byte 0xda
          .byte 0x4
          .byte 0xdc
          .byte 0x4
          .byte 0xdc
          .byte 0x4
          .byte 0xde
          .byte 0x4
          .byte 0xde
          .byte 0x4
          .byte 0xe0
          .byte 0x4
          .byte 0xe0
          .byte 0x4
          .byte 0xe2
          .byte 0x4
          .byte 0xe2
          .byte 0x4
          .byte 0xe4
          .byte 0x4
          .byte 0xe4
          .byte 0x4
          .byte 0xe6
          .byte 0x4
          .byte 0xe6
          .byte 0x4
          .byte 0xe8
          .byte 0x4
          .byte 0xe8
          .byte 0x4
          .byte 0xea
          .byte 0x4
          .byte 0xea
          .byte 0x4
          .byte 0xec
          .byte 0x4
          .byte 0xec
          .byte 0x4
          .byte 0xee
          .byte 0x4
          .byte 0xee
          .byte 0x4
          .byte 0xf0
          .byte 0x4
          .byte 0xf0
          .byte 0x4
          .byte 0xf2
          .byte 0x4
          .byte 0xf2
          .byte 0x4
          .byte 0xf4
          .byte 0x4
          .byte 0xf4
          .byte 0x4
          .byte 0xf6
          .byte 0x4
          .byte 0xf6
          .byte 0x4
          .byte 0xf8
          .byte 0x4
          .byte 0xf8
          .byte 0x4
          .byte 0xfa
          .byte 0x4
          .byte 0xfa
          .byte 0x4
          .byte 0xfc
          .byte 0x4
          .byte 0xfc
          .byte 0x4
          .byte 0xfe
          .byte 0x4
          .byte 0xfe
          .byte 0x4
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x4
          .byte 0x5
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x5
          .byte 0x6
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x5
          .byte 0xc
          .byte 0x5
          .byte 0xc
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0x10
          .byte 0x5
          .byte 0x10
          .byte 0x5
          .byte 0x12
          .byte 0x5
          .byte 0x12
          .byte 0x5
          .byte 0x14
          .byte 0x5
          .byte 0x14
          .byte 0x5
          .byte 0x16
          .byte 0x5
          .byte 0x16
          .byte 0x5
          .byte 0x18
          .byte 0x5
          .byte 0x18
          .byte 0x5
          .byte 0x1a
          .byte 0x5
          .byte 0x1a
          .byte 0x5
          .byte 0x1c
          .byte 0x5
          .byte 0x1c
          .byte 0x5
          .byte 0x1e
          .byte 0x5
          .byte 0x1e
          .byte 0x5
          .byte 0x20
          .byte 0x5
          .byte 0x20
          .byte 0x5
          .byte 0x22
          .byte 0x5
          .byte 0x22
          .byte 0x5
          .byte 0x24
          .byte 0x5
          .byte 0x24
          .byte 0x5
          .byte 0x26
          .byte 0x5
          .byte 0x26
          .byte 0x5
          .byte 0x31
          .byte 0x5
          .byte 0x56
          .byte 0x5
          .byte 0xa0
          .byte 0x10
          .byte 0xc5
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0x1e
          .byte 0x4
          .byte 0x1e
          .byte 0x4
          .byte 0x1e
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x1e
          .byte 0x8
          .byte 0x1e
          .byte 0x8
          .byte 0x1e
          .byte 0xa
          .byte 0x1e
          .byte 0xa
          .byte 0x1e
          .byte 0xc
          .byte 0x1e
          .byte 0xc
          .byte 0x1e
          .byte 0xe
          .byte 0x1e
          .byte 0xe
          .byte 0x1e
          .byte 0x10
          .byte 0x1e
          .byte 0x10
          .byte 0x1e
          .byte 0x12
          .byte 0x1e
          .byte 0x12
          .byte 0x1e
          .byte 0x14
          .byte 0x1e
          .byte 0x14
          .byte 0x1e
          .byte 0x16
          .byte 0x1e
          .byte 0x16
          .byte 0x1e
          .byte 0x18
          .byte 0x1e
          .byte 0x18
          .byte 0x1e
          .byte 0x1a
          .byte 0x1e
          .byte 0x1a
          .byte 0x1e
          .byte 0x1c
          .byte 0x1e
          .byte 0x1c
          .byte 0x1e
          .byte 0x1e
          .byte 0x1e
          .byte 0x1e
          .byte 0x1e
          .byte 0x20
          .byte 0x1e
          .byte 0x20
          .byte 0x1e
          .byte 0x22
          .byte 0x1e
          .byte 0x22
          .byte 0x1e
          .byte 0x24
          .byte 0x1e
          .byte 0x24
          .byte 0x1e
          .byte 0x26
          .byte 0x1e
          .byte 0x26
          .byte 0x1e
          .byte 0x28
          .byte 0x1e
          .byte 0x28
          .byte 0x1e
          .byte 0x2a
          .byte 0x1e
          .byte 0x2a
          .byte 0x1e
          .byte 0x2c
          .byte 0x1e
          .byte 0x2c
          .byte 0x1e
          .byte 0x2e
          .byte 0x1e
          .byte 0x2e
          .byte 0x1e
          .byte 0x30
          .byte 0x1e
          .byte 0x30
          .byte 0x1e
          .byte 0x32
          .byte 0x1e
          .byte 0x32
          .byte 0x1e
          .byte 0x34
          .byte 0x1e
          .byte 0x34
          .byte 0x1e
          .byte 0x36
          .byte 0x1e
          .byte 0x36
          .byte 0x1e
          .byte 0x38
          .byte 0x1e
          .byte 0x38
          .byte 0x1e
          .byte 0x3a
          .byte 0x1e
          .byte 0x3a
          .byte 0x1e
          .byte 0x3c
          .byte 0x1e
          .byte 0x3c
          .byte 0x1e
          .byte 0x3e
          .byte 0x1e
          .byte 0x3e
          .byte 0x1e
          .byte 0x40
          .byte 0x1e
          .byte 0x40
          .byte 0x1e
          .byte 0x42
          .byte 0x1e
          .byte 0x42
          .byte 0x1e
          .byte 0x44
          .byte 0x1e
          .byte 0x44
          .byte 0x1e
          .byte 0x46
          .byte 0x1e
          .byte 0x46
          .byte 0x1e
          .byte 0x48
          .byte 0x1e
          .byte 0x48
          .byte 0x1e
          .byte 0x4a
          .byte 0x1e
          .byte 0x4a
          .byte 0x1e
          .byte 0x4c
          .byte 0x1e
          .byte 0x4c
          .byte 0x1e
          .byte 0x4e
          .byte 0x1e
          .byte 0x4e
          .byte 0x1e
          .byte 0x50
          .byte 0x1e
          .byte 0x50
          .byte 0x1e
          .byte 0x52
          .byte 0x1e
          .byte 0x52
          .byte 0x1e
          .byte 0x54
          .byte 0x1e
          .byte 0x54
          .byte 0x1e
          .byte 0x56
          .byte 0x1e
          .byte 0x56
          .byte 0x1e
          .byte 0x58
          .byte 0x1e
          .byte 0x58
          .byte 0x1e
          .byte 0x5a
          .byte 0x1e
          .byte 0x5a
          .byte 0x1e
          .byte 0x5c
          .byte 0x1e
          .byte 0x5c
          .byte 0x1e
          .byte 0x5e
          .byte 0x1e
          .byte 0x5e
          .byte 0x1e
          .byte 0x60
          .byte 0x1e
          .byte 0x60
          .byte 0x1e
          .byte 0x62
          .byte 0x1e
          .byte 0x62
          .byte 0x1e
          .byte 0x64
          .byte 0x1e
          .byte 0x64
          .byte 0x1e
          .byte 0x66
          .byte 0x1e
          .byte 0x66
          .byte 0x1e
          .byte 0x68
          .byte 0x1e
          .byte 0x68
          .byte 0x1e
          .byte 0x6a
          .byte 0x1e
          .byte 0x6a
          .byte 0x1e
          .byte 0x6c
          .byte 0x1e
          .byte 0x6c
          .byte 0x1e
          .byte 0x6e
          .byte 0x1e
          .byte 0x6e
          .byte 0x1e
          .byte 0x70
          .byte 0x1e
          .byte 0x70
          .byte 0x1e
          .byte 0x72
          .byte 0x1e
          .byte 0x72
          .byte 0x1e
          .byte 0x74
          .byte 0x1e
          .byte 0x74
          .byte 0x1e
          .byte 0x76
          .byte 0x1e
          .byte 0x76
          .byte 0x1e
          .byte 0x78
          .byte 0x1e
          .byte 0x78
          .byte 0x1e
          .byte 0x7a
          .byte 0x1e
          .byte 0x7a
          .byte 0x1e
          .byte 0x7c
          .byte 0x1e
          .byte 0x7c
          .byte 0x1e
          .byte 0x7e
          .byte 0x1e
          .byte 0x7e
          .byte 0x1e
          .byte 0x80
          .byte 0x1e
          .byte 0x80
          .byte 0x1e
          .byte 0x82
          .byte 0x1e
          .byte 0x82
          .byte 0x1e
          .byte 0x84
          .byte 0x1e
          .byte 0x84
          .byte 0x1e
          .byte 0x86
          .byte 0x1e
          .byte 0x86
          .byte 0x1e
          .byte 0x88
          .byte 0x1e
          .byte 0x88
          .byte 0x1e
          .byte 0x8a
          .byte 0x1e
          .byte 0x8a
          .byte 0x1e
          .byte 0x8c
          .byte 0x1e
          .byte 0x8c
          .byte 0x1e
          .byte 0x8e
          .byte 0x1e
          .byte 0x8e
          .byte 0x1e
          .byte 0x90
          .byte 0x1e
          .byte 0x90
          .byte 0x1e
          .byte 0x92
          .byte 0x1e
          .byte 0x92
          .byte 0x1e
          .byte 0x94
          .byte 0x1e
          .byte 0x94
          .byte 0x1e
          .byte 0x9e
          .byte 0x1e
          .byte 0x9e
          .byte 0x1e
          .byte 0xa0
          .byte 0x1e
          .byte 0xa0
          .byte 0x1e
          .byte 0xa2
          .byte 0x1e
          .byte 0xa2
          .byte 0x1e
          .byte 0xa4
          .byte 0x1e
          .byte 0xa4
          .byte 0x1e
          .byte 0xa6
          .byte 0x1e
          .byte 0xa6
          .byte 0x1e
          .byte 0xa8
          .byte 0x1e
          .byte 0xa8
          .byte 0x1e
          .byte 0xaa
          .byte 0x1e
          .byte 0xaa
          .byte 0x1e
          .byte 0xac
          .byte 0x1e
          .byte 0xac
          .byte 0x1e
          .byte 0xae
          .byte 0x1e
          .byte 0xae
          .byte 0x1e
          .byte 0xb0
          .byte 0x1e
          .byte 0xb0
          .byte 0x1e
          .byte 0xb2
          .byte 0x1e
          .byte 0xb2
          .byte 0x1e
          .byte 0xb4
          .byte 0x1e
          .byte 0xb4
          .byte 0x1e
          .byte 0xb6
          .byte 0x1e
          .byte 0xb6
          .byte 0x1e
          .byte 0xb8
          .byte 0x1e
          .byte 0xb8
          .byte 0x1e
          .byte 0xba
          .byte 0x1e
          .byte 0xba
          .byte 0x1e
          .byte 0xbc
          .byte 0x1e
          .byte 0xbc
          .byte 0x1e
          .byte 0xbe
          .byte 0x1e
          .byte 0xbe
          .byte 0x1e
          .byte 0xc0
          .byte 0x1e
          .byte 0xc0
          .byte 0x1e
          .byte 0xc2
          .byte 0x1e
          .byte 0xc2
          .byte 0x1e
          .byte 0xc4
          .byte 0x1e
          .byte 0xc4
          .byte 0x1e
          .byte 0xc6
          .byte 0x1e
          .byte 0xc6
          .byte 0x1e
          .byte 0xc8
          .byte 0x1e
          .byte 0xc8
          .byte 0x1e
          .byte 0xca
          .byte 0x1e
          .byte 0xca
          .byte 0x1e
          .byte 0xcc
          .byte 0x1e
          .byte 0xcc
          .byte 0x1e
          .byte 0xce
          .byte 0x1e
          .byte 0xce
          .byte 0x1e
          .byte 0xd0
          .byte 0x1e
          .byte 0xd0
          .byte 0x1e
          .byte 0xd2
          .byte 0x1e
          .byte 0xd2
          .byte 0x1e
          .byte 0xd4
          .byte 0x1e
          .byte 0xd4
          .byte 0x1e
          .byte 0xd6
          .byte 0x1e
          .byte 0xd6
          .byte 0x1e
          .byte 0xd8
          .byte 0x1e
          .byte 0xd8
          .byte 0x1e
          .byte 0xda
          .byte 0x1e
          .byte 0xda
          .byte 0x1e
          .byte 0xdc
          .byte 0x1e
          .byte 0xdc
          .byte 0x1e
          .byte 0xde
          .byte 0x1e
          .byte 0xde
          .byte 0x1e
          .byte 0xe0
          .byte 0x1e
          .byte 0xe0
          .byte 0x1e
          .byte 0xe2
          .byte 0x1e
          .byte 0xe2
          .byte 0x1e
          .byte 0xe4
          .byte 0x1e
          .byte 0xe4
          .byte 0x1e
          .byte 0xe6
          .byte 0x1e
          .byte 0xe6
          .byte 0x1e
          .byte 0xe8
          .byte 0x1e
          .byte 0xe8
          .byte 0x1e
          .byte 0xea
          .byte 0x1e
          .byte 0xea
          .byte 0x1e
          .byte 0xec
          .byte 0x1e
          .byte 0xec
          .byte 0x1e
          .byte 0xee
          .byte 0x1e
          .byte 0xee
          .byte 0x1e
          .byte 0xf0
          .byte 0x1e
          .byte 0xf0
          .byte 0x1e
          .byte 0xf2
          .byte 0x1e
          .byte 0xf2
          .byte 0x1e
          .byte 0xf4
          .byte 0x1e
          .byte 0xf4
          .byte 0x1e
          .byte 0xf6
          .byte 0x1e
          .byte 0xf6
          .byte 0x1e
          .byte 0xf8
          .byte 0x1e
          .byte 0xf8
          .byte 0x1e
          .byte 0xfa
          .byte 0x1e
          .byte 0xfa
          .byte 0x1e
          .byte 0xfc
          .byte 0x1e
          .byte 0xfc
          .byte 0x1e
          .byte 0xfe
          .byte 0x1e
          .byte 0xfe
          .byte 0x1e
          .byte 0x8
          .byte 0x1f
          .byte 0xf
          .byte 0x1f
          .byte 0x18
          .byte 0x1f
          .byte 0x1d
          .byte 0x1f
          .byte 0x28
          .byte 0x1f
          .byte 0x2f
          .byte 0x1f
          .byte 0x38
          .byte 0x1f
          .byte 0x3f
          .byte 0x1f
          .byte 0x48
          .byte 0x1f
          .byte 0x4d
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5f
          .byte 0x1f
          .byte 0x5f
          .byte 0x1f
          .byte 0x68
          .byte 0x1f
          .byte 0x6f
          .byte 0x1f
          .byte 0xb8
          .byte 0x1f
          .byte 0xbb
          .byte 0x1f
          .byte 0xc8
          .byte 0x1f
          .byte 0xcb
          .byte 0x1f
          .byte 0xd8
          .byte 0x1f
          .byte 0xdb
          .byte 0x1f
          .byte 0xe8
          .byte 0x1f
          .byte 0xec
          .byte 0x1f
          .byte 0xf8
          .byte 0x1f
          .byte 0xfb
          .byte 0x1f
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0x21
          .byte 0x7
          .byte 0x21
          .byte 0x7
          .byte 0x21
          .byte 0xb
          .byte 0x21
          .byte 0xd
          .byte 0x21
          .byte 0x10
          .byte 0x21
          .byte 0x12
          .byte 0x21
          .byte 0x15
          .byte 0x21
          .byte 0x15
          .byte 0x21
          .byte 0x19
          .byte 0x21
          .byte 0x1d
          .byte 0x21
          .byte 0x24
          .byte 0x21
          .byte 0x24
          .byte 0x21
          .byte 0x26
          .byte 0x21
          .byte 0x26
          .byte 0x21
          .byte 0x28
          .byte 0x21
          .byte 0x28
          .byte 0x21
          .byte 0x2a
          .byte 0x21
          .byte 0x2d
          .byte 0x21
          .byte 0x30
          .byte 0x21
          .byte 0x33
          .byte 0x21
          .byte 0x3e
          .byte 0x21
          .byte 0x3f
          .byte 0x21
          .byte 0x45
          .byte 0x21
          .byte 0x45
          .byte 0x21
          .byte 0x83
          .byte 0x21
          .byte 0x83
          .byte 0x21
          .byte 0x0
          .byte 0x2c
          .byte 0x2e
          .byte 0x2c
          .byte 0x60
          .byte 0x2c
          .byte 0x60
          .byte 0x2c
          .byte 0x62
          .byte 0x2c
          .byte 0x64
          .byte 0x2c
          .byte 0x67
          .byte 0x2c
          .byte 0x67
          .byte 0x2c
          .byte 0x69
          .byte 0x2c
          .byte 0x69
          .byte 0x2c
          .byte 0x6b
          .byte 0x2c
          .byte 0x6b
          .byte 0x2c
          .byte 0x6d
          .byte 0x2c
          .byte 0x70
          .byte 0x2c
          .byte 0x72
          .byte 0x2c
          .byte 0x72
          .byte 0x2c
          .byte 0x75
          .byte 0x2c
          .byte 0x75
          .byte 0x2c
          .byte 0x7e
          .byte 0x2c
          .byte 0x80
          .byte 0x2c
          .byte 0x82
          .byte 0x2c
          .byte 0x82
          .byte 0x2c
          .byte 0x84
          .byte 0x2c
          .byte 0x84
          .byte 0x2c
          .byte 0x86
          .byte 0x2c
          .byte 0x86
          .byte 0x2c
          .byte 0x88
          .byte 0x2c
          .byte 0x88
          .byte 0x2c
          .byte 0x8a
          .byte 0x2c
          .byte 0x8a
          .byte 0x2c
          .byte 0x8c
          .byte 0x2c
          .byte 0x8c
          .byte 0x2c
          .byte 0x8e
          .byte 0x2c
          .byte 0x8e
          .byte 0x2c
          .byte 0x90
          .byte 0x2c
          .byte 0x90
          .byte 0x2c
          .byte 0x92
          .byte 0x2c
          .byte 0x92
          .byte 0x2c
          .byte 0x94
          .byte 0x2c
          .byte 0x94
          .byte 0x2c
          .byte 0x96
          .byte 0x2c
          .byte 0x96
          .byte 0x2c
          .byte 0x98
          .byte 0x2c
          .byte 0x98
          .byte 0x2c
          .byte 0x9a
          .byte 0x2c
          .byte 0x9a
          .byte 0x2c
          .byte 0x9c
          .byte 0x2c
          .byte 0x9c
          .byte 0x2c
          .byte 0x9e
          .byte 0x2c
          .byte 0x9e
          .byte 0x2c
          .byte 0xa0
          .byte 0x2c
          .byte 0xa0
          .byte 0x2c
          .byte 0xa2
          .byte 0x2c
          .byte 0xa2
          .byte 0x2c
          .byte 0xa4
          .byte 0x2c
          .byte 0xa4
          .byte 0x2c
          .byte 0xa6
          .byte 0x2c
          .byte 0xa6
          .byte 0x2c
          .byte 0xa8
          .byte 0x2c
          .byte 0xa8
          .byte 0x2c
          .byte 0xaa
          .byte 0x2c
          .byte 0xaa
          .byte 0x2c
          .byte 0xac
          .byte 0x2c
          .byte 0xac
          .byte 0x2c
          .byte 0xae
          .byte 0x2c
          .byte 0xae
          .byte 0x2c
          .byte 0xb0
          .byte 0x2c
          .byte 0xb0
          .byte 0x2c
          .byte 0xb2
          .byte 0x2c
          .byte 0xb2
          .byte 0x2c
          .byte 0xb4
          .byte 0x2c
          .byte 0xb4
          .byte 0x2c
          .byte 0xb6
          .byte 0x2c
          .byte 0xb6
          .byte 0x2c
          .byte 0xb8
          .byte 0x2c
          .byte 0xb8
          .byte 0x2c
          .byte 0xba
          .byte 0x2c
          .byte 0xba
          .byte 0x2c
          .byte 0xbc
          .byte 0x2c
          .byte 0xbc
          .byte 0x2c
          .byte 0xbe
          .byte 0x2c
          .byte 0xbe
          .byte 0x2c
          .byte 0xc0
          .byte 0x2c
          .byte 0xc0
          .byte 0x2c
          .byte 0xc2
          .byte 0x2c
          .byte 0xc2
          .byte 0x2c
          .byte 0xc4
          .byte 0x2c
          .byte 0xc4
          .byte 0x2c
          .byte 0xc6
          .byte 0x2c
          .byte 0xc6
          .byte 0x2c
          .byte 0xc8
          .byte 0x2c
          .byte 0xc8
          .byte 0x2c
          .byte 0xca
          .byte 0x2c
          .byte 0xca
          .byte 0x2c
          .byte 0xcc
          .byte 0x2c
          .byte 0xcc
          .byte 0x2c
          .byte 0xce
          .byte 0x2c
          .byte 0xce
          .byte 0x2c
          .byte 0xd0
          .byte 0x2c
          .byte 0xd0
          .byte 0x2c
          .byte 0xd2
          .byte 0x2c
          .byte 0xd2
          .byte 0x2c
          .byte 0xd4
          .byte 0x2c
          .byte 0xd4
          .byte 0x2c
          .byte 0xd6
          .byte 0x2c
          .byte 0xd6
          .byte 0x2c
          .byte 0xd8
          .byte 0x2c
          .byte 0xd8
          .byte 0x2c
          .byte 0xda
          .byte 0x2c
          .byte 0xda
          .byte 0x2c
          .byte 0xdc
          .byte 0x2c
          .byte 0xdc
          .byte 0x2c
          .byte 0xde
          .byte 0x2c
          .byte 0xde
          .byte 0x2c
          .byte 0xe0
          .byte 0x2c
          .byte 0xe0
          .byte 0x2c
          .byte 0xe2
          .byte 0x2c
          .byte 0xe2
          .byte 0x2c
          .byte 0xeb
          .byte 0x2c
          .byte 0xeb
          .byte 0x2c
          .byte 0xed
          .byte 0x2c
          .byte 0xed
          .byte 0x2c
          .byte 0xf2
          .byte 0x2c
          .byte 0xf2
          .byte 0x2c
          .byte 0x40
          .byte 0xa6
          .byte 0x40
          .byte 0xa6
          .byte 0x42
          .byte 0xa6
          .byte 0x42
          .byte 0xa6
          .byte 0x44
          .byte 0xa6
          .byte 0x44
          .byte 0xa6
          .byte 0x46
          .byte 0xa6
          .byte 0x46
          .byte 0xa6
          .byte 0x48
          .byte 0xa6
          .byte 0x48
          .byte 0xa6
          .byte 0x4a
          .byte 0xa6
          .byte 0x4a
          .byte 0xa6
          .byte 0x4c
          .byte 0xa6
          .byte 0x4c
          .byte 0xa6
          .byte 0x4e
          .byte 0xa6
          .byte 0x4e
          .byte 0xa6
          .byte 0x50
          .byte 0xa6
          .byte 0x50
          .byte 0xa6
          .byte 0x52
          .byte 0xa6
          .byte 0x52
          .byte 0xa6
          .byte 0x54
          .byte 0xa6
          .byte 0x54
          .byte 0xa6
          .byte 0x56
          .byte 0xa6
          .byte 0x56
          .byte 0xa6
          .byte 0x58
          .byte 0xa6
          .byte 0x58
          .byte 0xa6
          .byte 0x5a
          .byte 0xa6
          .byte 0x5a
          .byte 0xa6
          .byte 0x5c
          .byte 0xa6
          .byte 0x5c
          .byte 0xa6
          .byte 0x5e
          .byte 0xa6
          .byte 0x5e
          .byte 0xa6
          .byte 0x60
          .byte 0xa6
          .byte 0x60
          .byte 0xa6
          .byte 0x62
          .byte 0xa6
          .byte 0x62
          .byte 0xa6
          .byte 0x64
          .byte 0xa6
          .byte 0x64
          .byte 0xa6
          .byte 0x66
          .byte 0xa6
          .byte 0x66
          .byte 0xa6
          .byte 0x68
          .byte 0xa6
          .byte 0x68
          .byte 0xa6
          .byte 0x6a
          .byte 0xa6
          .byte 0x6a
          .byte 0xa6
          .byte 0x6c
          .byte 0xa6
          .byte 0x6c
          .byte 0xa6
          .byte 0x80
          .byte 0xa6
          .byte 0x80
          .byte 0xa6
          .byte 0x82
          .byte 0xa6
          .byte 0x82
          .byte 0xa6
          .byte 0x84
          .byte 0xa6
          .byte 0x84
          .byte 0xa6
          .byte 0x86
          .byte 0xa6
          .byte 0x86
          .byte 0xa6
          .byte 0x88
          .byte 0xa6
          .byte 0x88
          .byte 0xa6
          .byte 0x8a
          .byte 0xa6
          .byte 0x8a
          .byte 0xa6
          .byte 0x8c
          .byte 0xa6
          .byte 0x8c
          .byte 0xa6
          .byte 0x8e
          .byte 0xa6
          .byte 0x8e
          .byte 0xa6
          .byte 0x90
          .byte 0xa6
          .byte 0x90
          .byte 0xa6
          .byte 0x92
          .byte 0xa6
          .byte 0x92
          .byte 0xa6
          .byte 0x94
          .byte 0xa6
          .byte 0x94
          .byte 0xa6
          .byte 0x96
          .byte 0xa6
          .byte 0x96
          .byte 0xa6
          .byte 0x22
          .byte 0xa7
          .byte 0x22
          .byte 0xa7
          .byte 0x24
          .byte 0xa7
          .byte 0x24
          .byte 0xa7
          .byte 0x26
          .byte 0xa7
          .byte 0x26
          .byte 0xa7
          .byte 0x28
          .byte 0xa7
          .byte 0x28
          .byte 0xa7
          .byte 0x2a
          .byte 0xa7
          .byte 0x2a
          .byte 0xa7
          .byte 0x2c
          .byte 0xa7
          .byte 0x2c
          .byte 0xa7
          .byte 0x2e
          .byte 0xa7
          .byte 0x2e
          .byte 0xa7
          .byte 0x32
          .byte 0xa7
          .byte 0x32
          .byte 0xa7
          .byte 0x34
          .byte 0xa7
          .byte 0x34
          .byte 0xa7
          .byte 0x36
          .byte 0xa7
          .byte 0x36
          .byte 0xa7
          .byte 0x38
          .byte 0xa7
          .byte 0x38
          .byte 0xa7
          .byte 0x3a
          .byte 0xa7
          .byte 0x3a
          .byte 0xa7
          .byte 0x3c
          .byte 0xa7
          .byte 0x3c
          .byte 0xa7
          .byte 0x3e
          .byte 0xa7
          .byte 0x3e
          .byte 0xa7
          .byte 0x40
          .byte 0xa7
          .byte 0x40
          .byte 0xa7
          .byte 0x42
          .byte 0xa7
          .byte 0x42
          .byte 0xa7
          .byte 0x44
          .byte 0xa7
          .byte 0x44
          .byte 0xa7
          .byte 0x46
          .byte 0xa7
          .byte 0x46
          .byte 0xa7
          .byte 0x48
          .byte 0xa7
          .byte 0x48
          .byte 0xa7
          .byte 0x4a
          .byte 0xa7
          .byte 0x4a
          .byte 0xa7
          .byte 0x4c
          .byte 0xa7
          .byte 0x4c
          .byte 0xa7
          .byte 0x4e
          .byte 0xa7
          .byte 0x4e
          .byte 0xa7
          .byte 0x50
          .byte 0xa7
          .byte 0x50
          .byte 0xa7
          .byte 0x52
          .byte 0xa7
          .byte 0x52
          .byte 0xa7
          .byte 0x54
          .byte 0xa7
          .byte 0x54
          .byte 0xa7
          .byte 0x56
          .byte 0xa7
          .byte 0x56
          .byte 0xa7
          .byte 0x58
          .byte 0xa7
          .byte 0x58
          .byte 0xa7
          .byte 0x5a
          .byte 0xa7
          .byte 0x5a
          .byte 0xa7
          .byte 0x5c
          .byte 0xa7
          .byte 0x5c
          .byte 0xa7
          .byte 0x5e
          .byte 0xa7
          .byte 0x5e
          .byte 0xa7
          .byte 0x60
          .byte 0xa7
          .byte 0x60
          .byte 0xa7
          .byte 0x62
          .byte 0xa7
          .byte 0x62
          .byte 0xa7
          .byte 0x64
          .byte 0xa7
          .byte 0x64
          .byte 0xa7
          .byte 0x66
          .byte 0xa7
          .byte 0x66
          .byte 0xa7
          .byte 0x68
          .byte 0xa7
          .byte 0x68
          .byte 0xa7
          .byte 0x6a
          .byte 0xa7
          .byte 0x6a
          .byte 0xa7
          .byte 0x6c
          .byte 0xa7
          .byte 0x6c
          .byte 0xa7
          .byte 0x6e
          .byte 0xa7
          .byte 0x6e
          .byte 0xa7
          .byte 0x79
          .byte 0xa7
          .byte 0x79
          .byte 0xa7
          .byte 0x7b
          .byte 0xa7
          .byte 0x7b
          .byte 0xa7
          .byte 0x7d
          .byte 0xa7
          .byte 0x7e
          .byte 0xa7
          .byte 0x80
          .byte 0xa7
          .byte 0x80
          .byte 0xa7
          .byte 0x82
          .byte 0xa7
          .byte 0x82
          .byte 0xa7
          .byte 0x84
          .byte 0xa7
          .byte 0x84
          .byte 0xa7
          .byte 0x86
          .byte 0xa7
          .byte 0x86
          .byte 0xa7
          .byte 0x8b
          .byte 0xa7
          .byte 0x8b
          .byte 0xa7
          .byte 0x8d
          .byte 0xa7
          .byte 0x8d
          .byte 0xa7
          .byte 0x90
          .byte 0xa7
          .byte 0x90
          .byte 0xa7
          .byte 0x92
          .byte 0xa7
          .byte 0x92
          .byte 0xa7
          .byte 0xa0
          .byte 0xa7
          .byte 0xa0
          .byte 0xa7
          .byte 0xa2
          .byte 0xa7
          .byte 0xa2
          .byte 0xa7
          .byte 0xa4
          .byte 0xa7
          .byte 0xa4
          .byte 0xa7
          .byte 0xa6
          .byte 0xa7
          .byte 0xa6
          .byte 0xa7
          .byte 0xa8
          .byte 0xa7
          .byte 0xa8
          .byte 0xa7
          .byte 0xaa
          .byte 0xa7
          .byte 0xaa
          .byte 0xa7
          .byte 0x21
          .byte 0xff
          .byte 0x3a
          .byte 0xff
.L_43c3c0:
          .byte 0xc5
          .byte 0x1
          .byte 0xc5
          .byte 0x1
          .byte 0xc8
          .byte 0x1
          .byte 0xc8
          .byte 0x1
          .byte 0xcb
          .byte 0x1
          .byte 0xcb
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0x88
          .byte 0x1f
          .byte 0x8f
          .byte 0x1f
          .byte 0x98
          .byte 0x1f
          .byte 0x9f
          .byte 0x1f
          .byte 0xa8
          .byte 0x1f
          .byte 0xaf
          .byte 0x1f
          .byte 0xbc
          .byte 0x1f
          .byte 0xbc
          .byte 0x1f
          .byte 0xcc
          .byte 0x1f
          .byte 0xcc
          .byte 0x1f
          .byte 0xfc
          .byte 0x1f
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c3f0:
          .string "_"
          .byte 0x5f
          .byte 0x0
          .byte 0x3f
          .byte 0x20
          .byte 0x40
          .byte 0x20
          .byte 0x54
          .byte 0x20
          .byte 0x54
          .byte 0x20
          .byte 0x33
          .byte 0xfe
          .byte 0x34
          .byte 0xfe
          .byte 0x4d
          .byte 0xfe
          .byte 0x4f
          .byte 0xfe
          .byte 0x3f
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c420:
          .byte 0xa0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x66
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd9
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xc9
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xce
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c460:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x60
          .byte 0x6
          .byte 0x69
          .byte 0x6
          .byte 0xf0
          .byte 0x6
          .byte 0xf9
          .byte 0x6
          .byte 0xc0
          .byte 0x7
          .byte 0xc9
          .byte 0x7
          .byte 0x66
          .byte 0x9
          .byte 0x6f
          .byte 0x9
          .byte 0xe6
          .byte 0x9
          .byte 0xef
          .byte 0x9
          .byte 0x66
          .byte 0xa
          .byte 0x6f
          .byte 0xa
          .byte 0xe6
          .byte 0xa
          .byte 0xef
          .byte 0xa
          .byte 0x66
          .byte 0xb
          .byte 0x6f
          .byte 0xb
          .byte 0xe6
          .byte 0xb
          .byte 0xef
          .byte 0xb
          .byte 0x66
          .byte 0xc
          .byte 0x6f
          .byte 0xc
          .byte 0xe6
          .byte 0xc
          .byte 0xef
          .byte 0xc
          .byte 0x66
          .byte 0xd
          .byte 0x6f
          .byte 0xd
          .byte 0x50
          .byte 0xe
          .byte 0x59
          .byte 0xe
          .byte 0xd0
          .byte 0xe
          .byte 0xd9
          .byte 0xe
          .byte 0x20
          .byte 0xf
          .byte 0x29
          .byte 0xf
          .byte 0x40
          .byte 0x10
          .byte 0x49
          .byte 0x10
          .byte 0x90
          .byte 0x10
          .byte 0x99
          .byte 0x10
          .byte 0xe0
          .byte 0x17
          .byte 0xe9
          .byte 0x17
          .byte 0x10
          .byte 0x18
          .byte 0x19
          .byte 0x18
          .byte 0x46
          .byte 0x19
          .byte 0x4f
          .byte 0x19
          .byte 0xd0
          .byte 0x19
          .byte 0xd9
          .byte 0x19
          .byte 0x80
          .byte 0x1a
          .byte 0x89
          .byte 0x1a
          .byte 0x90
          .byte 0x1a
          .byte 0x99
          .byte 0x1a
          .byte 0x50
          .byte 0x1b
          .byte 0x59
          .byte 0x1b
          .byte 0xb0
          .byte 0x1b
          .byte 0xb9
          .byte 0x1b
          .byte 0x40
          .byte 0x1c
          .byte 0x49
          .byte 0x1c
          .byte 0x50
          .byte 0x1c
          .byte 0x59
          .byte 0x1c
          .byte 0x20
          .byte 0xa6
          .byte 0x29
          .byte 0xa6
          .byte 0xd0
          .byte 0xa8
          .byte 0xd9
          .byte 0xa8
          .byte 0x0
          .byte 0xa9
          .byte 0x9
          .byte 0xa9
          .byte 0xd0
          .byte 0xa9
          .byte 0xd9
          .byte 0xa9
          .byte 0x50
          .byte 0xaa
          .byte 0x59
          .byte 0xaa
          .byte 0xf0
          .byte 0xab
          .byte 0xf9
          .byte 0xab
          .byte 0x10
          .byte 0xff
          .byte 0x19
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c4f0:
          .byte 0x93
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c500:
          .byte 0xb0
          .byte 0x2
          .byte 0xc1
          .byte 0x2
          .byte 0xc6
          .byte 0x2
          .byte 0xd1
          .byte 0x2
          .byte 0xe0
          .byte 0x2
          .byte 0xe4
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xee
          .byte 0x2
          .byte 0xee
          .byte 0x2
          .byte 0x74
          .byte 0x3
          .byte 0x74
          .byte 0x3
          .byte 0x7a
          .byte 0x3
          .byte 0x7a
          .byte 0x3
          .byte 0x59
          .byte 0x5
          .byte 0x59
          .byte 0x5
          .byte 0x40
          .byte 0x6
          .byte 0x40
          .byte 0x6
          .byte 0xe5
          .byte 0x6
          .byte 0xe6
          .byte 0x6
          .byte 0xf4
          .byte 0x7
          .byte 0xf5
          .byte 0x7
          .byte 0xfa
          .byte 0x7
          .byte 0xfa
          .byte 0x7
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x24
          .byte 0x8
          .byte 0x24
          .byte 0x8
          .byte 0x28
          .byte 0x8
          .byte 0x28
          .byte 0x8
          .byte 0x71
          .byte 0x9
          .byte 0x71
          .byte 0x9
          .byte 0x46
          .byte 0xe
          .byte 0x46
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xfc
          .byte 0x10
          .byte 0xfc
          .byte 0x10
          .byte 0xd7
          .byte 0x17
          .byte 0xd7
          .byte 0x17
          .byte 0x43
          .byte 0x18
          .byte 0x43
          .byte 0x18
          .byte 0xa7
          .byte 0x1a
          .byte 0xa7
          .byte 0x1a
          .byte 0x78
          .byte 0x1c
          .byte 0x7d
          .byte 0x1c
          .byte 0x2c
          .byte 0x1d
          .byte 0x6a
          .byte 0x1d
          .byte 0x78
          .byte 0x1d
          .byte 0x78
          .byte 0x1d
          .byte 0x9b
          .byte 0x1d
          .byte 0xbf
          .byte 0x1d
          .byte 0x71
          .byte 0x20
          .byte 0x71
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x90
          .byte 0x20
          .byte 0x9c
          .byte 0x20
          .byte 0x7c
          .byte 0x2c
          .byte 0x7d
          .byte 0x2c
          .byte 0x6f
          .byte 0x2d
          .byte 0x6f
          .byte 0x2d
          .byte 0x2f
          .byte 0x2e
          .byte 0x2f
          .byte 0x2e
          .byte 0x5
          .byte 0x30
          .byte 0x5
          .byte 0x30
          .byte 0x31
          .byte 0x30
          .byte 0x35
          .byte 0x30
          .byte 0x3b
          .byte 0x30
          .byte 0x3b
          .byte 0x30
          .byte 0x9d
          .byte 0x30
          .byte 0x9e
          .byte 0x30
          .byte 0xfc
          .byte 0x30
          .byte 0xfe
          .byte 0x30
          .byte 0x15
          .byte 0xa0
          .byte 0x15
          .byte 0xa0
          .byte 0xf8
          .byte 0xa4
          .byte 0xfd
          .byte 0xa4
          .byte 0xc
          .byte 0xa6
          .byte 0xc
          .byte 0xa6
          .byte 0x7f
          .byte 0xa6
          .byte 0x7f
          .byte 0xa6
          .byte 0x17
          .byte 0xa7
          .byte 0x1f
          .byte 0xa7
          .byte 0x70
          .byte 0xa7
          .byte 0x70
          .byte 0xa7
          .byte 0x88
          .byte 0xa7
          .byte 0x88
          .byte 0xa7
          .byte 0xf8
          .byte 0xa7
          .byte 0xf9
          .byte 0xa7
          .byte 0xcf
          .byte 0xa9
          .byte 0xcf
          .byte 0xa9
          .byte 0x70
          .byte 0xaa
          .byte 0x70
          .byte 0xaa
          .byte 0xdd
          .byte 0xaa
          .byte 0xdd
          .byte 0xaa
          .byte 0xf3
          .byte 0xaa
          .byte 0xf4
          .byte 0xaa
          .byte 0x70
          .byte 0xff
          .byte 0x70
          .byte 0xff
          .byte 0x9e
          .byte 0xff
          .byte 0x9f
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c5e0:
          .byte 0x28
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x1a
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x4e
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xea
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x6b
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x86
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd3
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xee
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x22
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc2
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xda
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdc
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xe1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4e
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x88
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x8f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc2
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xcb
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xcb
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c6e0:
          .string "a"
          .byte 0x7a
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x3
          .byte 0x1
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0x11
          .byte 0x1
          .byte 0x11
          .byte 0x1
          .byte 0x13
          .byte 0x1
          .byte 0x13
          .byte 0x1
          .byte 0x15
          .byte 0x1
          .byte 0x15
          .byte 0x1
          .byte 0x17
          .byte 0x1
          .byte 0x17
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x25
          .byte 0x1
          .byte 0x25
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x29
          .byte 0x1
          .byte 0x29
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2f
          .byte 0x1
          .byte 0x2f
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x33
          .byte 0x1
          .byte 0x33
          .byte 0x1
          .byte 0x35
          .byte 0x1
          .byte 0x35
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x38
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x49
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x4d
          .byte 0x1
          .byte 0x4d
          .byte 0x1
          .byte 0x4f
          .byte 0x1
          .byte 0x4f
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x55
          .byte 0x1
          .byte 0x55
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x5d
          .byte 0x1
          .byte 0x5d
          .byte 0x1
          .byte 0x5f
          .byte 0x1
          .byte 0x5f
          .byte 0x1
          .byte 0x61
          .byte 0x1
          .byte 0x61
          .byte 0x1
          .byte 0x63
          .byte 0x1
          .byte 0x63
          .byte 0x1
          .byte 0x65
          .byte 0x1
          .byte 0x65
          .byte 0x1
          .byte 0x67
          .byte 0x1
          .byte 0x67
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x71
          .byte 0x1
          .byte 0x71
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x7a
          .byte 0x1
          .byte 0x7a
          .byte 0x1
          .byte 0x7c
          .byte 0x1
          .byte 0x7c
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x83
          .byte 0x1
          .byte 0x83
          .byte 0x1
          .byte 0x85
          .byte 0x1
          .byte 0x85
          .byte 0x1
          .byte 0x88
          .byte 0x1
          .byte 0x88
          .byte 0x1
          .byte 0x8c
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x95
          .byte 0x1
          .byte 0x95
          .byte 0x1
          .byte 0x99
          .byte 0x1
          .byte 0x9b
          .byte 0x1
          .byte 0x9e
          .byte 0x1
          .byte 0x9e
          .byte 0x1
          .byte 0xa1
          .byte 0x1
          .byte 0xa1
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0xa5
          .byte 0x1
          .byte 0xa5
          .byte 0x1
          .byte 0xa8
          .byte 0x1
          .byte 0xa8
          .byte 0x1
          .byte 0xaa
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb9
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xbd
          .byte 0x1
          .byte 0xbf
          .byte 0x1
          .byte 0xc6
          .byte 0x1
          .byte 0xc6
          .byte 0x1
          .byte 0xc9
          .byte 0x1
          .byte 0xc9
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xce
          .byte 0x1
          .byte 0xce
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd2
          .byte 0x1
          .byte 0xd2
          .byte 0x1
          .byte 0xd4
          .byte 0x1
          .byte 0xd4
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xdd
          .byte 0x1
          .byte 0xdf
          .byte 0x1
          .byte 0xdf
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xe5
          .byte 0x1
          .byte 0xe5
          .byte 0x1
          .byte 0xe7
          .byte 0x1
          .byte 0xe7
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0xed
          .byte 0x1
          .byte 0xed
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0xf0
          .byte 0x1
          .byte 0xf3
          .byte 0x1
          .byte 0xf3
          .byte 0x1
          .byte 0xf5
          .byte 0x1
          .byte 0xf5
          .byte 0x1
          .byte 0xf9
          .byte 0x1
          .byte 0xf9
          .byte 0x1
          .byte 0xfb
          .byte 0x1
          .byte 0xfb
          .byte 0x1
          .byte 0xfd
          .byte 0x1
          .byte 0xfd
          .byte 0x1
          .byte 0xff
          .byte 0x1
          .byte 0xff
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x7
          .byte 0x2
          .byte 0x7
          .byte 0x2
          .byte 0x9
          .byte 0x2
          .byte 0x9
          .byte 0x2
          .byte 0xb
          .byte 0x2
          .byte 0xb
          .byte 0x2
          .byte 0xd
          .byte 0x2
          .byte 0xd
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0x11
          .byte 0x2
          .byte 0x11
          .byte 0x2
          .byte 0x13
          .byte 0x2
          .byte 0x13
          .byte 0x2
          .byte 0x15
          .byte 0x2
          .byte 0x15
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0x19
          .byte 0x2
          .byte 0x19
          .byte 0x2
          .byte 0x1b
          .byte 0x2
          .byte 0x1b
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0x1f
          .byte 0x2
          .byte 0x1f
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x27
          .byte 0x2
          .byte 0x27
          .byte 0x2
          .byte 0x29
          .byte 0x2
          .byte 0x29
          .byte 0x2
          .byte 0x2b
          .byte 0x2
          .byte 0x2b
          .byte 0x2
          .byte 0x2d
          .byte 0x2
          .byte 0x2d
          .byte 0x2
          .byte 0x2f
          .byte 0x2
          .byte 0x2f
          .byte 0x2
          .byte 0x31
          .byte 0x2
          .byte 0x31
          .byte 0x2
          .byte 0x33
          .byte 0x2
          .byte 0x39
          .byte 0x2
          .byte 0x3c
          .byte 0x2
          .byte 0x3c
          .byte 0x2
          .byte 0x3f
          .byte 0x2
          .byte 0x40
          .byte 0x2
          .byte 0x42
          .byte 0x2
          .byte 0x42
          .byte 0x2
          .byte 0x47
          .byte 0x2
          .byte 0x47
          .byte 0x2
          .byte 0x49
          .byte 0x2
          .byte 0x49
          .byte 0x2
          .byte 0x4b
          .byte 0x2
          .byte 0x4b
          .byte 0x2
          .byte 0x4d
          .byte 0x2
          .byte 0x4d
          .byte 0x2
          .byte 0x4f
          .byte 0x2
          .byte 0x93
          .byte 0x2
          .byte 0x95
          .byte 0x2
          .byte 0xaf
          .byte 0x2
          .byte 0x71
          .byte 0x3
          .byte 0x71
          .byte 0x3
          .byte 0x73
          .byte 0x3
          .byte 0x73
          .byte 0x3
          .byte 0x77
          .byte 0x3
          .byte 0x77
          .byte 0x3
          .byte 0x7b
          .byte 0x3
          .byte 0x7d
          .byte 0x3
          .byte 0x90
          .byte 0x3
          .byte 0x90
          .byte 0x3
          .byte 0xac
          .byte 0x3
          .byte 0xce
          .byte 0x3
          .byte 0xd0
          .byte 0x3
          .byte 0xd1
          .byte 0x3
          .byte 0xd5
          .byte 0x3
          .byte 0xd7
          .byte 0x3
          .byte 0xd9
          .byte 0x3
          .byte 0xd9
          .byte 0x3
          .byte 0xdb
          .byte 0x3
          .byte 0xdb
          .byte 0x3
          .byte 0xdd
          .byte 0x3
          .byte 0xdd
          .byte 0x3
          .byte 0xdf
          .byte 0x3
          .byte 0xdf
          .byte 0x3
          .byte 0xe1
          .byte 0x3
          .byte 0xe1
          .byte 0x3
          .byte 0xe3
          .byte 0x3
          .byte 0xe3
          .byte 0x3
          .byte 0xe5
          .byte 0x3
          .byte 0xe5
          .byte 0x3
          .byte 0xe7
          .byte 0x3
          .byte 0xe7
          .byte 0x3
          .byte 0xe9
          .byte 0x3
          .byte 0xe9
          .byte 0x3
          .byte 0xeb
          .byte 0x3
          .byte 0xeb
          .byte 0x3
          .byte 0xed
          .byte 0x3
          .byte 0xed
          .byte 0x3
          .byte 0xef
          .byte 0x3
          .byte 0xf3
          .byte 0x3
          .byte 0xf5
          .byte 0x3
          .byte 0xf5
          .byte 0x3
          .byte 0xf8
          .byte 0x3
          .byte 0xf8
          .byte 0x3
          .byte 0xfb
          .byte 0x3
          .byte 0xfc
          .byte 0x3
          .byte 0x30
          .byte 0x4
          .byte 0x5f
          .byte 0x4
          .byte 0x61
          .byte 0x4
          .byte 0x61
          .byte 0x4
          .byte 0x63
          .byte 0x4
          .byte 0x63
          .byte 0x4
          .byte 0x65
          .byte 0x4
          .byte 0x65
          .byte 0x4
          .byte 0x67
          .byte 0x4
          .byte 0x67
          .byte 0x4
          .byte 0x69
          .byte 0x4
          .byte 0x69
          .byte 0x4
          .byte 0x6b
          .byte 0x4
          .byte 0x6b
          .byte 0x4
          .byte 0x6d
          .byte 0x4
          .byte 0x6d
          .byte 0x4
          .byte 0x6f
          .byte 0x4
          .byte 0x6f
          .byte 0x4
          .byte 0x71
          .byte 0x4
          .byte 0x71
          .byte 0x4
          .byte 0x73
          .byte 0x4
          .byte 0x73
          .byte 0x4
          .byte 0x75
          .byte 0x4
          .byte 0x75
          .byte 0x4
          .byte 0x77
          .byte 0x4
          .byte 0x77
          .byte 0x4
          .byte 0x79
          .byte 0x4
          .byte 0x79
          .byte 0x4
          .byte 0x7b
          .byte 0x4
          .byte 0x7b
          .byte 0x4
          .byte 0x7d
          .byte 0x4
          .byte 0x7d
          .byte 0x4
          .byte 0x7f
          .byte 0x4
          .byte 0x7f
          .byte 0x4
          .byte 0x81
          .byte 0x4
          .byte 0x81
          .byte 0x4
          .byte 0x8b
          .byte 0x4
          .byte 0x8b
          .byte 0x4
          .byte 0x8d
          .byte 0x4
          .byte 0x8d
          .byte 0x4
          .byte 0x8f
          .byte 0x4
          .byte 0x8f
          .byte 0x4
          .byte 0x91
          .byte 0x4
          .byte 0x91
          .byte 0x4
          .byte 0x93
          .byte 0x4
          .byte 0x93
          .byte 0x4
          .byte 0x95
          .byte 0x4
          .byte 0x95
          .byte 0x4
          .byte 0x97
          .byte 0x4
          .byte 0x97
          .byte 0x4
          .byte 0x99
          .byte 0x4
          .byte 0x99
          .byte 0x4
          .byte 0x9b
          .byte 0x4
          .byte 0x9b
          .byte 0x4
          .byte 0x9d
          .byte 0x4
          .byte 0x9d
          .byte 0x4
          .byte 0x9f
          .byte 0x4
          .byte 0x9f
          .byte 0x4
          .byte 0xa1
          .byte 0x4
          .byte 0xa1
          .byte 0x4
          .byte 0xa3
          .byte 0x4
          .byte 0xa3
          .byte 0x4
          .byte 0xa5
          .byte 0x4
          .byte 0xa5
          .byte 0x4
          .byte 0xa7
          .byte 0x4
          .byte 0xa7
          .byte 0x4
          .byte 0xa9
          .byte 0x4
          .byte 0xa9
          .byte 0x4
          .byte 0xab
          .byte 0x4
          .byte 0xab
          .byte 0x4
          .byte 0xad
          .byte 0x4
          .byte 0xad
          .byte 0x4
          .byte 0xaf
          .byte 0x4
          .byte 0xaf
          .byte 0x4
          .byte 0xb1
          .byte 0x4
          .byte 0xb1
          .byte 0x4
          .byte 0xb3
          .byte 0x4
          .byte 0xb3
          .byte 0x4
          .byte 0xb5
          .byte 0x4
          .byte 0xb5
          .byte 0x4
          .byte 0xb7
          .byte 0x4
          .byte 0xb7
          .byte 0x4
          .byte 0xb9
          .byte 0x4
          .byte 0xb9
          .byte 0x4
          .byte 0xbb
          .byte 0x4
          .byte 0xbb
          .byte 0x4
          .byte 0xbd
          .byte 0x4
          .byte 0xbd
          .byte 0x4
          .byte 0xbf
          .byte 0x4
          .byte 0xbf
          .byte 0x4
          .byte 0xc2
          .byte 0x4
          .byte 0xc2
          .byte 0x4
          .byte 0xc4
          .byte 0x4
          .byte 0xc4
          .byte 0x4
          .byte 0xc6
          .byte 0x4
          .byte 0xc6
          .byte 0x4
          .byte 0xc8
          .byte 0x4
          .byte 0xc8
          .byte 0x4
          .byte 0xca
          .byte 0x4
          .byte 0xca
          .byte 0x4
          .byte 0xcc
          .byte 0x4
          .byte 0xcc
          .byte 0x4
          .byte 0xce
          .byte 0x4
          .byte 0xcf
          .byte 0x4
          .byte 0xd1
          .byte 0x4
          .byte 0xd1
          .byte 0x4
          .byte 0xd3
          .byte 0x4
          .byte 0xd3
          .byte 0x4
          .byte 0xd5
          .byte 0x4
          .byte 0xd5
          .byte 0x4
          .byte 0xd7
          .byte 0x4
          .byte 0xd7
          .byte 0x4
          .byte 0xd9
          .byte 0x4
          .byte 0xd9
          .byte 0x4
          .byte 0xdb
          .byte 0x4
          .byte 0xdb
          .byte 0x4
          .byte 0xdd
          .byte 0x4
          .byte 0xdd
          .byte 0x4
          .byte 0xdf
          .byte 0x4
          .byte 0xdf
          .byte 0x4
          .byte 0xe1
          .byte 0x4
          .byte 0xe1
          .byte 0x4
          .byte 0xe3
          .byte 0x4
          .byte 0xe3
          .byte 0x4
          .byte 0xe5
          .byte 0x4
          .byte 0xe5
          .byte 0x4
          .byte 0xe7
          .byte 0x4
          .byte 0xe7
          .byte 0x4
          .byte 0xe9
          .byte 0x4
          .byte 0xe9
          .byte 0x4
          .byte 0xeb
          .byte 0x4
          .byte 0xeb
          .byte 0x4
          .byte 0xed
          .byte 0x4
          .byte 0xed
          .byte 0x4
          .byte 0xef
          .byte 0x4
          .byte 0xef
          .byte 0x4
          .byte 0xf1
          .byte 0x4
          .byte 0xf1
          .byte 0x4
          .byte 0xf3
          .byte 0x4
          .byte 0xf3
          .byte 0x4
          .byte 0xf5
          .byte 0x4
          .byte 0xf5
          .byte 0x4
          .byte 0xf7
          .byte 0x4
          .byte 0xf7
          .byte 0x4
          .byte 0xf9
          .byte 0x4
          .byte 0xf9
          .byte 0x4
          .byte 0xfb
          .byte 0x4
          .byte 0xfb
          .byte 0x4
          .byte 0xfd
          .byte 0x4
          .byte 0xfd
          .byte 0x4
          .byte 0xff
          .byte 0x4
          .byte 0xff
          .byte 0x4
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x5
          .byte 0x3
          .byte 0x5
          .byte 0x3
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x9
          .byte 0x5
          .byte 0x9
          .byte 0x5
          .byte 0xb
          .byte 0x5
          .byte 0xb
          .byte 0x5
          .byte 0xd
          .byte 0x5
          .byte 0xd
          .byte 0x5
          .byte 0xf
          .byte 0x5
          .byte 0xf
          .byte 0x5
          .byte 0x11
          .byte 0x5
          .byte 0x11
          .byte 0x5
          .byte 0x13
          .byte 0x5
          .byte 0x13
          .byte 0x5
          .byte 0x15
          .byte 0x5
          .byte 0x15
          .byte 0x5
          .byte 0x17
          .byte 0x5
          .byte 0x17
          .byte 0x5
          .byte 0x19
          .byte 0x5
          .byte 0x19
          .byte 0x5
          .byte 0x1b
          .byte 0x5
          .byte 0x1b
          .byte 0x5
          .byte 0x1d
          .byte 0x5
          .byte 0x1d
          .byte 0x5
          .byte 0x1f
          .byte 0x5
          .byte 0x1f
          .byte 0x5
          .byte 0x21
          .byte 0x5
          .byte 0x21
          .byte 0x5
          .byte 0x23
          .byte 0x5
          .byte 0x23
          .byte 0x5
          .byte 0x25
          .byte 0x5
          .byte 0x25
          .byte 0x5
          .byte 0x27
          .byte 0x5
          .byte 0x27
          .byte 0x5
          .byte 0x61
          .byte 0x5
          .byte 0x87
          .byte 0x5
          .byte 0x0
          .byte 0x1d
          .byte 0x2b
          .byte 0x1d
          .byte 0x6b
          .byte 0x1d
          .byte 0x77
          .byte 0x1d
          .byte 0x79
          .byte 0x1d
          .byte 0x9a
          .byte 0x1d
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1e
          .byte 0x3
          .byte 0x1e
          .byte 0x3
          .byte 0x1e
          .byte 0x5
          .byte 0x1e
          .byte 0x5
          .byte 0x1e
          .byte 0x7
          .byte 0x1e
          .byte 0x7
          .byte 0x1e
          .byte 0x9
          .byte 0x1e
          .byte 0x9
          .byte 0x1e
          .byte 0xb
          .byte 0x1e
          .byte 0xb
          .byte 0x1e
          .byte 0xd
          .byte 0x1e
          .byte 0xd
          .byte 0x1e
          .byte 0xf
          .byte 0x1e
          .byte 0xf
          .byte 0x1e
          .byte 0x11
          .byte 0x1e
          .byte 0x11
          .byte 0x1e
          .byte 0x13
          .byte 0x1e
          .byte 0x13
          .byte 0x1e
          .byte 0x15
          .byte 0x1e
          .byte 0x15
          .byte 0x1e
          .byte 0x17
          .byte 0x1e
          .byte 0x17
          .byte 0x1e
          .byte 0x19
          .byte 0x1e
          .byte 0x19
          .byte 0x1e
          .byte 0x1b
          .byte 0x1e
          .byte 0x1b
          .byte 0x1e
          .byte 0x1d
          .byte 0x1e
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x1e
          .byte 0x1f
          .byte 0x1e
          .byte 0x21
          .byte 0x1e
          .byte 0x21
          .byte 0x1e
          .byte 0x23
          .byte 0x1e
          .byte 0x23
          .byte 0x1e
          .byte 0x25
          .byte 0x1e
          .byte 0x25
          .byte 0x1e
          .byte 0x27
          .byte 0x1e
          .byte 0x27
          .byte 0x1e
          .byte 0x29
          .byte 0x1e
          .byte 0x29
          .byte 0x1e
          .byte 0x2b
          .byte 0x1e
          .byte 0x2b
          .byte 0x1e
          .byte 0x2d
          .byte 0x1e
          .byte 0x2d
          .byte 0x1e
          .byte 0x2f
          .byte 0x1e
          .byte 0x2f
          .byte 0x1e
          .byte 0x31
          .byte 0x1e
          .byte 0x31
          .byte 0x1e
          .byte 0x33
          .byte 0x1e
          .byte 0x33
          .byte 0x1e
          .byte 0x35
          .byte 0x1e
          .byte 0x35
          .byte 0x1e
          .byte 0x37
          .byte 0x1e
          .byte 0x37
          .byte 0x1e
          .byte 0x39
          .byte 0x1e
          .byte 0x39
          .byte 0x1e
          .byte 0x3b
          .byte 0x1e
          .byte 0x3b
          .byte 0x1e
          .byte 0x3d
          .byte 0x1e
          .byte 0x3d
          .byte 0x1e
          .byte 0x3f
          .byte 0x1e
          .byte 0x3f
          .byte 0x1e
          .byte 0x41
          .byte 0x1e
          .byte 0x41
          .byte 0x1e
          .byte 0x43
          .byte 0x1e
          .byte 0x43
          .byte 0x1e
          .byte 0x45
          .byte 0x1e
          .byte 0x45
          .byte 0x1e
          .byte 0x47
          .byte 0x1e
          .byte 0x47
          .byte 0x1e
          .byte 0x49
          .byte 0x1e
          .byte 0x49
          .byte 0x1e
          .byte 0x4b
          .byte 0x1e
          .byte 0x4b
          .byte 0x1e
          .byte 0x4d
          .byte 0x1e
          .byte 0x4d
          .byte 0x1e
          .byte 0x4f
          .byte 0x1e
          .byte 0x4f
          .byte 0x1e
          .byte 0x51
          .byte 0x1e
          .byte 0x51
          .byte 0x1e
          .byte 0x53
          .byte 0x1e
          .byte 0x53
          .byte 0x1e
          .byte 0x55
          .byte 0x1e
          .byte 0x55
          .byte 0x1e
          .byte 0x57
          .byte 0x1e
          .byte 0x57
          .byte 0x1e
          .byte 0x59
          .byte 0x1e
          .byte 0x59
          .byte 0x1e
          .byte 0x5b
          .byte 0x1e
          .byte 0x5b
          .byte 0x1e
          .byte 0x5d
          .byte 0x1e
          .byte 0x5d
          .byte 0x1e
          .byte 0x5f
          .byte 0x1e
          .byte 0x5f
          .byte 0x1e
          .byte 0x61
          .byte 0x1e
          .byte 0x61
          .byte 0x1e
          .byte 0x63
          .byte 0x1e
          .byte 0x63
          .byte 0x1e
          .byte 0x65
          .byte 0x1e
          .byte 0x65
          .byte 0x1e
          .byte 0x67
          .byte 0x1e
          .byte 0x67
          .byte 0x1e
          .byte 0x69
          .byte 0x1e
          .byte 0x69
          .byte 0x1e
          .byte 0x6b
          .byte 0x1e
          .byte 0x6b
          .byte 0x1e
          .byte 0x6d
          .byte 0x1e
          .byte 0x6d
          .byte 0x1e
          .byte 0x6f
          .byte 0x1e
          .byte 0x6f
          .byte 0x1e
          .byte 0x71
          .byte 0x1e
          .byte 0x71
          .byte 0x1e
          .byte 0x73
          .byte 0x1e
          .byte 0x73
          .byte 0x1e
          .byte 0x75
          .byte 0x1e
          .byte 0x75
          .byte 0x1e
          .byte 0x77
          .byte 0x1e
          .byte 0x77
          .byte 0x1e
          .byte 0x79
          .byte 0x1e
          .byte 0x79
          .byte 0x1e
          .byte 0x7b
          .byte 0x1e
          .byte 0x7b
          .byte 0x1e
          .byte 0x7d
          .byte 0x1e
          .byte 0x7d
          .byte 0x1e
          .byte 0x7f
          .byte 0x1e
          .byte 0x7f
          .byte 0x1e
          .byte 0x81
          .byte 0x1e
          .byte 0x81
          .byte 0x1e
          .byte 0x83
          .byte 0x1e
          .byte 0x83
          .byte 0x1e
          .byte 0x85
          .byte 0x1e
          .byte 0x85
          .byte 0x1e
          .byte 0x87
          .byte 0x1e
          .byte 0x87
          .byte 0x1e
          .byte 0x89
          .byte 0x1e
          .byte 0x89
          .byte 0x1e
          .byte 0x8b
          .byte 0x1e
          .byte 0x8b
          .byte 0x1e
          .byte 0x8d
          .byte 0x1e
          .byte 0x8d
          .byte 0x1e
          .byte 0x8f
          .byte 0x1e
          .byte 0x8f
          .byte 0x1e
          .byte 0x91
          .byte 0x1e
          .byte 0x91
          .byte 0x1e
          .byte 0x93
          .byte 0x1e
          .byte 0x93
          .byte 0x1e
          .byte 0x95
          .byte 0x1e
          .byte 0x9d
          .byte 0x1e
          .byte 0x9f
          .byte 0x1e
          .byte 0x9f
          .byte 0x1e
          .byte 0xa1
          .byte 0x1e
          .byte 0xa1
          .byte 0x1e
          .byte 0xa3
          .byte 0x1e
          .byte 0xa3
          .byte 0x1e
          .byte 0xa5
          .byte 0x1e
          .byte 0xa5
          .byte 0x1e
          .byte 0xa7
          .byte 0x1e
          .byte 0xa7
          .byte 0x1e
          .byte 0xa9
          .byte 0x1e
          .byte 0xa9
          .byte 0x1e
          .byte 0xab
          .byte 0x1e
          .byte 0xab
          .byte 0x1e
          .byte 0xad
          .byte 0x1e
          .byte 0xad
          .byte 0x1e
          .byte 0xaf
          .byte 0x1e
          .byte 0xaf
          .byte 0x1e
          .byte 0xb1
          .byte 0x1e
          .byte 0xb1
          .byte 0x1e
          .byte 0xb3
          .byte 0x1e
          .byte 0xb3
          .byte 0x1e
          .byte 0xb5
          .byte 0x1e
          .byte 0xb5
          .byte 0x1e
          .byte 0xb7
          .byte 0x1e
          .byte 0xb7
          .byte 0x1e
          .byte 0xb9
          .byte 0x1e
          .byte 0xb9
          .byte 0x1e
          .byte 0xbb
          .byte 0x1e
          .byte 0xbb
          .byte 0x1e
          .byte 0xbd
          .byte 0x1e
          .byte 0xbd
          .byte 0x1e
          .byte 0xbf
          .byte 0x1e
          .byte 0xbf
          .byte 0x1e
          .byte 0xc1
          .byte 0x1e
          .byte 0xc1
          .byte 0x1e
          .byte 0xc3
          .byte 0x1e
          .byte 0xc3
          .byte 0x1e
          .byte 0xc5
          .byte 0x1e
          .byte 0xc5
          .byte 0x1e
          .byte 0xc7
          .byte 0x1e
          .byte 0xc7
          .byte 0x1e
          .byte 0xc9
          .byte 0x1e
          .byte 0xc9
          .byte 0x1e
          .byte 0xcb
          .byte 0x1e
          .byte 0xcb
          .byte 0x1e
          .byte 0xcd
          .byte 0x1e
          .byte 0xcd
          .byte 0x1e
          .byte 0xcf
          .byte 0x1e
          .byte 0xcf
          .byte 0x1e
          .byte 0xd1
          .byte 0x1e
          .byte 0xd1
          .byte 0x1e
          .byte 0xd3
          .byte 0x1e
          .byte 0xd3
          .byte 0x1e
          .byte 0xd5
          .byte 0x1e
          .byte 0xd5
          .byte 0x1e
          .byte 0xd7
          .byte 0x1e
          .byte 0xd7
          .byte 0x1e
          .byte 0xd9
          .byte 0x1e
          .byte 0xd9
          .byte 0x1e
          .byte 0xdb
          .byte 0x1e
          .byte 0xdb
          .byte 0x1e
          .byte 0xdd
          .byte 0x1e
          .byte 0xdd
          .byte 0x1e
          .byte 0xdf
          .byte 0x1e
          .byte 0xdf
          .byte 0x1e
          .byte 0xe1
          .byte 0x1e
          .byte 0xe1
          .byte 0x1e
          .byte 0xe3
          .byte 0x1e
          .byte 0xe3
          .byte 0x1e
          .byte 0xe5
          .byte 0x1e
          .byte 0xe5
          .byte 0x1e
          .byte 0xe7
          .byte 0x1e
          .byte 0xe7
          .byte 0x1e
          .byte 0xe9
          .byte 0x1e
          .byte 0xe9
          .byte 0x1e
          .byte 0xeb
          .byte 0x1e
          .byte 0xeb
          .byte 0x1e
          .byte 0xed
          .byte 0x1e
          .byte 0xed
          .byte 0x1e
          .byte 0xef
          .byte 0x1e
          .byte 0xef
          .byte 0x1e
          .byte 0xf1
          .byte 0x1e
          .byte 0xf1
          .byte 0x1e
          .byte 0xf3
          .byte 0x1e
          .byte 0xf3
          .byte 0x1e
          .byte 0xf5
          .byte 0x1e
          .byte 0xf5
          .byte 0x1e
          .byte 0xf7
          .byte 0x1e
          .byte 0xf7
          .byte 0x1e
          .byte 0xf9
          .byte 0x1e
          .byte 0xf9
          .byte 0x1e
          .byte 0xfb
          .byte 0x1e
          .byte 0xfb
          .byte 0x1e
          .byte 0xfd
          .byte 0x1e
          .byte 0xfd
          .byte 0x1e
          .byte 0xff
          .byte 0x1e
          .byte 0x7
          .byte 0x1f
          .byte 0x10
          .byte 0x1f
          .byte 0x15
          .byte 0x1f
          .byte 0x20
          .byte 0x1f
          .byte 0x27
          .byte 0x1f
          .byte 0x30
          .byte 0x1f
          .byte 0x37
          .byte 0x1f
          .byte 0x40
          .byte 0x1f
          .byte 0x45
          .byte 0x1f
          .byte 0x50
          .byte 0x1f
          .byte 0x57
          .byte 0x1f
          .byte 0x60
          .byte 0x1f
          .byte 0x67
          .byte 0x1f
          .byte 0x70
          .byte 0x1f
          .byte 0x7d
          .byte 0x1f
          .byte 0x80
          .byte 0x1f
          .byte 0x87
          .byte 0x1f
          .byte 0x90
          .byte 0x1f
          .byte 0x97
          .byte 0x1f
          .byte 0xa0
          .byte 0x1f
          .byte 0xa7
          .byte 0x1f
          .byte 0xb0
          .byte 0x1f
          .byte 0xb4
          .byte 0x1f
          .byte 0xb6
          .byte 0x1f
          .byte 0xb7
          .byte 0x1f
          .byte 0xbe
          .byte 0x1f
          .byte 0xbe
          .byte 0x1f
          .byte 0xc2
          .byte 0x1f
          .byte 0xc4
          .byte 0x1f
          .byte 0xc6
          .byte 0x1f
          .byte 0xc7
          .byte 0x1f
          .byte 0xd0
          .byte 0x1f
          .byte 0xd3
          .byte 0x1f
          .byte 0xd6
          .byte 0x1f
          .byte 0xd7
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xe7
          .byte 0x1f
          .byte 0xf2
          .byte 0x1f
          .byte 0xf4
          .byte 0x1f
          .byte 0xf6
          .byte 0x1f
          .byte 0xf7
          .byte 0x1f
          .byte 0xa
          .byte 0x21
          .byte 0xa
          .byte 0x21
          .byte 0xe
          .byte 0x21
          .byte 0xf
          .byte 0x21
          .byte 0x13
          .byte 0x21
          .byte 0x13
          .byte 0x21
          .byte 0x2f
          .byte 0x21
          .byte 0x2f
          .byte 0x21
          .byte 0x34
          .byte 0x21
          .byte 0x34
          .byte 0x21
          .byte 0x39
          .byte 0x21
          .byte 0x39
          .byte 0x21
          .byte 0x3c
          .byte 0x21
          .byte 0x3d
          .byte 0x21
          .byte 0x46
          .byte 0x21
          .byte 0x49
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x84
          .byte 0x21
          .byte 0x84
          .byte 0x21
          .byte 0x30
          .byte 0x2c
          .byte 0x5e
          .byte 0x2c
          .byte 0x61
          .byte 0x2c
          .byte 0x61
          .byte 0x2c
          .byte 0x65
          .byte 0x2c
          .byte 0x66
          .byte 0x2c
          .byte 0x68
          .byte 0x2c
          .byte 0x68
          .byte 0x2c
          .byte 0x6a
          .byte 0x2c
          .byte 0x6a
          .byte 0x2c
          .byte 0x6c
          .byte 0x2c
          .byte 0x6c
          .byte 0x2c
          .byte 0x71
          .byte 0x2c
          .byte 0x71
          .byte 0x2c
          .byte 0x73
          .byte 0x2c
          .byte 0x74
          .byte 0x2c
          .byte 0x76
          .byte 0x2c
          .byte 0x7b
          .byte 0x2c
          .byte 0x81
          .byte 0x2c
          .byte 0x81
          .byte 0x2c
          .byte 0x83
          .byte 0x2c
          .byte 0x83
          .byte 0x2c
          .byte 0x85
          .byte 0x2c
          .byte 0x85
          .byte 0x2c
          .byte 0x87
          .byte 0x2c
          .byte 0x87
          .byte 0x2c
          .byte 0x89
          .byte 0x2c
          .byte 0x89
          .byte 0x2c
          .byte 0x8b
          .byte 0x2c
          .byte 0x8b
          .byte 0x2c
          .byte 0x8d
          .byte 0x2c
          .byte 0x8d
          .byte 0x2c
          .byte 0x8f
          .byte 0x2c
          .byte 0x8f
          .byte 0x2c
          .byte 0x91
          .byte 0x2c
          .byte 0x91
          .byte 0x2c
          .byte 0x93
          .byte 0x2c
          .byte 0x93
          .byte 0x2c
          .byte 0x95
          .byte 0x2c
          .byte 0x95
          .byte 0x2c
          .byte 0x97
          .byte 0x2c
          .byte 0x97
          .byte 0x2c
          .byte 0x99
          .byte 0x2c
          .byte 0x99
          .byte 0x2c
          .byte 0x9b
          .byte 0x2c
          .byte 0x9b
          .byte 0x2c
          .byte 0x9d
          .byte 0x2c
          .byte 0x9d
          .byte 0x2c
          .byte 0x9f
          .byte 0x2c
          .byte 0x9f
          .byte 0x2c
          .byte 0xa1
          .byte 0x2c
          .byte 0xa1
          .byte 0x2c
          .byte 0xa3
          .byte 0x2c
          .byte 0xa3
          .byte 0x2c
          .byte 0xa5
          .byte 0x2c
          .byte 0xa5
          .byte 0x2c
          .byte 0xa7
          .byte 0x2c
          .byte 0xa7
          .byte 0x2c
          .byte 0xa9
          .byte 0x2c
          .byte 0xa9
          .byte 0x2c
          .byte 0xab
          .byte 0x2c
          .byte 0xab
          .byte 0x2c
          .byte 0xad
          .byte 0x2c
          .byte 0xad
          .byte 0x2c
          .byte 0xaf
          .byte 0x2c
          .byte 0xaf
          .byte 0x2c
          .byte 0xb1
          .byte 0x2c
          .byte 0xb1
          .byte 0x2c
          .byte 0xb3
          .byte 0x2c
          .byte 0xb3
          .byte 0x2c
          .byte 0xb5
          .byte 0x2c
          .byte 0xb5
          .byte 0x2c
          .byte 0xb7
          .byte 0x2c
          .byte 0xb7
          .byte 0x2c
          .byte 0xb9
          .byte 0x2c
          .byte 0xb9
          .byte 0x2c
          .byte 0xbb
          .byte 0x2c
          .byte 0xbb
          .byte 0x2c
          .byte 0xbd
          .byte 0x2c
          .byte 0xbd
          .byte 0x2c
          .byte 0xbf
          .byte 0x2c
          .byte 0xbf
          .byte 0x2c
          .byte 0xc1
          .byte 0x2c
          .byte 0xc1
          .byte 0x2c
          .byte 0xc3
          .byte 0x2c
          .byte 0xc3
          .byte 0x2c
          .byte 0xc5
          .byte 0x2c
          .byte 0xc5
          .byte 0x2c
          .byte 0xc7
          .byte 0x2c
          .byte 0xc7
          .byte 0x2c
          .byte 0xc9
          .byte 0x2c
          .byte 0xc9
          .byte 0x2c
          .byte 0xcb
          .byte 0x2c
          .byte 0xcb
          .byte 0x2c
          .byte 0xcd
          .byte 0x2c
          .byte 0xcd
          .byte 0x2c
          .byte 0xcf
          .byte 0x2c
          .byte 0xcf
          .byte 0x2c
          .byte 0xd1
          .byte 0x2c
          .byte 0xd1
          .byte 0x2c
          .byte 0xd3
          .byte 0x2c
          .byte 0xd3
          .byte 0x2c
          .byte 0xd5
          .byte 0x2c
          .byte 0xd5
          .byte 0x2c
          .byte 0xd7
          .byte 0x2c
          .byte 0xd7
          .byte 0x2c
          .byte 0xd9
          .byte 0x2c
          .byte 0xd9
          .byte 0x2c
          .byte 0xdb
          .byte 0x2c
          .byte 0xdb
          .byte 0x2c
          .byte 0xdd
          .byte 0x2c
          .byte 0xdd
          .byte 0x2c
          .byte 0xdf
          .byte 0x2c
          .byte 0xdf
          .byte 0x2c
          .byte 0xe1
          .byte 0x2c
          .byte 0xe1
          .byte 0x2c
          .byte 0xe3
          .byte 0x2c
          .byte 0xe4
          .byte 0x2c
          .byte 0xec
          .byte 0x2c
          .byte 0xec
          .byte 0x2c
          .byte 0xee
          .byte 0x2c
          .byte 0xee
          .byte 0x2c
          .byte 0xf3
          .byte 0x2c
          .byte 0xf3
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x25
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x41
          .byte 0xa6
          .byte 0x41
          .byte 0xa6
          .byte 0x43
          .byte 0xa6
          .byte 0x43
          .byte 0xa6
          .byte 0x45
          .byte 0xa6
          .byte 0x45
          .byte 0xa6
          .byte 0x47
          .byte 0xa6
          .byte 0x47
          .byte 0xa6
          .byte 0x49
          .byte 0xa6
          .byte 0x49
          .byte 0xa6
          .byte 0x4b
          .byte 0xa6
          .byte 0x4b
          .byte 0xa6
          .byte 0x4d
          .byte 0xa6
          .byte 0x4d
          .byte 0xa6
          .byte 0x4f
          .byte 0xa6
          .byte 0x4f
          .byte 0xa6
          .byte 0x51
          .byte 0xa6
          .byte 0x51
          .byte 0xa6
          .byte 0x53
          .byte 0xa6
          .byte 0x53
          .byte 0xa6
          .byte 0x55
          .byte 0xa6
          .byte 0x55
          .byte 0xa6
          .byte 0x57
          .byte 0xa6
          .byte 0x57
          .byte 0xa6
          .byte 0x59
          .byte 0xa6
          .byte 0x59
          .byte 0xa6
          .byte 0x5b
          .byte 0xa6
          .byte 0x5b
          .byte 0xa6
          .byte 0x5d
          .byte 0xa6
          .byte 0x5d
          .byte 0xa6
          .byte 0x5f
          .byte 0xa6
          .byte 0x5f
          .byte 0xa6
          .byte 0x61
          .byte 0xa6
          .byte 0x61
          .byte 0xa6
          .byte 0x63
          .byte 0xa6
          .byte 0x63
          .byte 0xa6
          .byte 0x65
          .byte 0xa6
          .byte 0x65
          .byte 0xa6
          .byte 0x67
          .byte 0xa6
          .byte 0x67
          .byte 0xa6
          .byte 0x69
          .byte 0xa6
          .byte 0x69
          .byte 0xa6
          .byte 0x6b
          .byte 0xa6
          .byte 0x6b
          .byte 0xa6
          .byte 0x6d
          .byte 0xa6
          .byte 0x6d
          .byte 0xa6
          .byte 0x81
          .byte 0xa6
          .byte 0x81
          .byte 0xa6
          .byte 0x83
          .byte 0xa6
          .byte 0x83
          .byte 0xa6
          .byte 0x85
          .byte 0xa6
          .byte 0x85
          .byte 0xa6
          .byte 0x87
          .byte 0xa6
          .byte 0x87
          .byte 0xa6
          .byte 0x89
          .byte 0xa6
          .byte 0x89
          .byte 0xa6
          .byte 0x8b
          .byte 0xa6
          .byte 0x8b
          .byte 0xa6
          .byte 0x8d
          .byte 0xa6
          .byte 0x8d
          .byte 0xa6
          .byte 0x8f
          .byte 0xa6
          .byte 0x8f
          .byte 0xa6
          .byte 0x91
          .byte 0xa6
          .byte 0x91
          .byte 0xa6
          .byte 0x93
          .byte 0xa6
          .byte 0x93
          .byte 0xa6
          .byte 0x95
          .byte 0xa6
          .byte 0x95
          .byte 0xa6
          .byte 0x97
          .byte 0xa6
          .byte 0x97
          .byte 0xa6
          .byte 0x23
          .byte 0xa7
          .byte 0x23
          .byte 0xa7
          .byte 0x25
          .byte 0xa7
          .byte 0x25
          .byte 0xa7
          .byte 0x27
          .byte 0xa7
          .byte 0x27
          .byte 0xa7
          .byte 0x29
          .byte 0xa7
          .byte 0x29
          .byte 0xa7
          .byte 0x2b
          .byte 0xa7
          .byte 0x2b
          .byte 0xa7
          .byte 0x2d
          .byte 0xa7
          .byte 0x2d
          .byte 0xa7
          .byte 0x2f
          .byte 0xa7
          .byte 0x31
          .byte 0xa7
          .byte 0x33
          .byte 0xa7
          .byte 0x33
          .byte 0xa7
          .byte 0x35
          .byte 0xa7
          .byte 0x35
          .byte 0xa7
          .byte 0x37
          .byte 0xa7
          .byte 0x37
          .byte 0xa7
          .byte 0x39
          .byte 0xa7
          .byte 0x39
          .byte 0xa7
          .byte 0x3b
          .byte 0xa7
          .byte 0x3b
          .byte 0xa7
          .byte 0x3d
          .byte 0xa7
          .byte 0x3d
          .byte 0xa7
          .byte 0x3f
          .byte 0xa7
          .byte 0x3f
          .byte 0xa7
          .byte 0x41
          .byte 0xa7
          .byte 0x41
          .byte 0xa7
          .byte 0x43
          .byte 0xa7
          .byte 0x43
          .byte 0xa7
          .byte 0x45
          .byte 0xa7
          .byte 0x45
          .byte 0xa7
          .byte 0x47
          .byte 0xa7
          .byte 0x47
          .byte 0xa7
          .byte 0x49
          .byte 0xa7
          .byte 0x49
          .byte 0xa7
          .byte 0x4b
          .byte 0xa7
          .byte 0x4b
          .byte 0xa7
          .byte 0x4d
          .byte 0xa7
          .byte 0x4d
          .byte 0xa7
          .byte 0x4f
          .byte 0xa7
          .byte 0x4f
          .byte 0xa7
          .byte 0x51
          .byte 0xa7
          .byte 0x51
          .byte 0xa7
          .byte 0x53
          .byte 0xa7
          .byte 0x53
          .byte 0xa7
          .byte 0x55
          .byte 0xa7
          .byte 0x55
          .byte 0xa7
          .byte 0x57
          .byte 0xa7
          .byte 0x57
          .byte 0xa7
          .byte 0x59
          .byte 0xa7
          .byte 0x59
          .byte 0xa7
          .byte 0x5b
          .byte 0xa7
          .byte 0x5b
          .byte 0xa7
          .byte 0x5d
          .byte 0xa7
          .byte 0x5d
          .byte 0xa7
          .byte 0x5f
          .byte 0xa7
          .byte 0x5f
          .byte 0xa7
          .byte 0x61
          .byte 0xa7
          .byte 0x61
          .byte 0xa7
          .byte 0x63
          .byte 0xa7
          .byte 0x63
          .byte 0xa7
          .byte 0x65
          .byte 0xa7
          .byte 0x65
          .byte 0xa7
          .byte 0x67
          .byte 0xa7
          .byte 0x67
          .byte 0xa7
          .byte 0x69
          .byte 0xa7
          .byte 0x69
          .byte 0xa7
          .byte 0x6b
          .byte 0xa7
          .byte 0x6b
          .byte 0xa7
          .byte 0x6d
          .byte 0xa7
          .byte 0x6d
          .byte 0xa7
          .byte 0x6f
          .byte 0xa7
          .byte 0x6f
          .byte 0xa7
          .byte 0x71
          .byte 0xa7
          .byte 0x78
          .byte 0xa7
          .byte 0x7a
          .byte 0xa7
          .byte 0x7a
          .byte 0xa7
          .byte 0x7c
          .byte 0xa7
          .byte 0x7c
          .byte 0xa7
          .byte 0x7f
          .byte 0xa7
          .byte 0x7f
          .byte 0xa7
          .byte 0x81
          .byte 0xa7
          .byte 0x81
          .byte 0xa7
          .byte 0x83
          .byte 0xa7
          .byte 0x83
          .byte 0xa7
          .byte 0x85
          .byte 0xa7
          .byte 0x85
          .byte 0xa7
          .byte 0x87
          .byte 0xa7
          .byte 0x87
          .byte 0xa7
          .byte 0x8c
          .byte 0xa7
          .byte 0x8c
          .byte 0xa7
          .byte 0x8e
          .byte 0xa7
          .byte 0x8e
          .byte 0xa7
          .byte 0x91
          .byte 0xa7
          .byte 0x91
          .byte 0xa7
          .byte 0x93
          .byte 0xa7
          .byte 0x93
          .byte 0xa7
          .byte 0xa1
          .byte 0xa7
          .byte 0xa1
          .byte 0xa7
          .byte 0xa3
          .byte 0xa7
          .byte 0xa3
          .byte 0xa7
          .byte 0xa5
          .byte 0xa7
          .byte 0xa5
          .byte 0xa7
          .byte 0xa7
          .byte 0xa7
          .byte 0xa7
          .byte 0xa7
          .byte 0xa9
          .byte 0xa7
          .byte 0xa9
          .byte 0xa7
          .byte 0xfa
          .byte 0xa7
          .byte 0xfa
          .byte 0xa7
          .byte 0x0
          .byte 0xfb
          .byte 0x6
          .byte 0xfb
          .byte 0x13
          .byte 0xfb
          .byte 0x17
          .byte 0xfb
          .byte 0x41
          .byte 0xff
          .byte 0x5a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d000:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbf
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x13
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x17
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x19
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xaf
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xe8
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb2
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x22
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x32
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x61
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x74
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x77
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xd6
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x34
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xfa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d2c0:
          .byte 0xaa
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xbb
          .byte 0x1
          .byte 0xbb
          .byte 0x1
          .byte 0xc0
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0x94
          .byte 0x2
          .byte 0x94
          .byte 0x2
          .byte 0xd0
          .byte 0x5
          .byte 0xea
          .byte 0x5
          .byte 0xf0
          .byte 0x5
          .byte 0xf2
          .byte 0x5
          .byte 0x20
          .byte 0x6
          .byte 0x3f
          .byte 0x6
          .byte 0x41
          .byte 0x6
          .byte 0x4a
          .byte 0x6
          .byte 0x6e
          .byte 0x6
          .byte 0x6f
          .byte 0x6
          .byte 0x71
          .byte 0x6
          .byte 0xd3
          .byte 0x6
          .byte 0xd5
          .byte 0x6
          .byte 0xd5
          .byte 0x6
          .byte 0xee
          .byte 0x6
          .byte 0xef
          .byte 0x6
          .byte 0xfa
          .byte 0x6
          .byte 0xfc
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0x10
          .byte 0x7
          .byte 0x10
          .byte 0x7
          .byte 0x12
          .byte 0x7
          .byte 0x2f
          .byte 0x7
          .byte 0x4d
          .byte 0x7
          .byte 0xa5
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0xca
          .byte 0x7
          .byte 0xea
          .byte 0x7
          .byte 0x0
          .byte 0x8
          .byte 0x15
          .byte 0x8
          .byte 0x40
          .byte 0x8
          .byte 0x58
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa2
          .byte 0x8
          .byte 0xac
          .byte 0x8
          .byte 0x4
          .byte 0x9
          .byte 0x39
          .byte 0x9
          .byte 0x3d
          .byte 0x9
          .byte 0x3d
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x58
          .byte 0x9
          .byte 0x61
          .byte 0x9
          .byte 0x72
          .byte 0x9
          .byte 0x77
          .byte 0x9
          .byte 0x79
          .byte 0x9
          .byte 0x7f
          .byte 0x9
          .byte 0x85
          .byte 0x9
          .byte 0x8c
          .byte 0x9
          .byte 0x8f
          .byte 0x9
          .byte 0x90
          .byte 0x9
          .byte 0x93
          .byte 0x9
          .byte 0xa8
          .byte 0x9
          .byte 0xaa
          .byte 0x9
          .byte 0xb0
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb6
          .byte 0x9
          .byte 0xb9
          .byte 0x9
          .byte 0xbd
          .byte 0x9
          .byte 0xbd
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xdc
          .byte 0x9
          .byte 0xdd
          .byte 0x9
          .byte 0xdf
          .byte 0x9
          .byte 0xe1
          .byte 0x9
          .byte 0xf0
          .byte 0x9
          .byte 0xf1
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0x10
          .byte 0xa
          .byte 0x13
          .byte 0xa
          .byte 0x28
          .byte 0xa
          .byte 0x2a
          .byte 0xa
          .byte 0x30
          .byte 0xa
          .byte 0x32
          .byte 0xa
          .byte 0x33
          .byte 0xa
          .byte 0x35
          .byte 0xa
          .byte 0x36
          .byte 0xa
          .byte 0x38
          .byte 0xa
          .byte 0x39
          .byte 0xa
          .byte 0x59
          .byte 0xa
          .byte 0x5c
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x72
          .byte 0xa
          .byte 0x74
          .byte 0xa
          .byte 0x85
          .byte 0xa
          .byte 0x8d
          .byte 0xa
          .byte 0x8f
          .byte 0xa
          .byte 0x91
          .byte 0xa
          .byte 0x93
          .byte 0xa
          .byte 0xa8
          .byte 0xa
          .byte 0xaa
          .byte 0xa
          .byte 0xb0
          .byte 0xa
          .byte 0xb2
          .byte 0xa
          .byte 0xb3
          .byte 0xa
          .byte 0xb5
          .byte 0xa
          .byte 0xb9
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xe0
          .byte 0xa
          .byte 0xe1
          .byte 0xa
          .byte 0x5
          .byte 0xb
          .byte 0xc
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0x10
          .byte 0xb
          .byte 0x13
          .byte 0xb
          .byte 0x28
          .byte 0xb
          .byte 0x2a
          .byte 0xb
          .byte 0x30
          .byte 0xb
          .byte 0x32
          .byte 0xb
          .byte 0x33
          .byte 0xb
          .byte 0x35
          .byte 0xb
          .byte 0x39
          .byte 0xb
          .byte 0x3d
          .byte 0xb
          .byte 0x3d
          .byte 0xb
          .byte 0x5c
          .byte 0xb
          .byte 0x5d
          .byte 0xb
          .byte 0x5f
          .byte 0xb
          .byte 0x61
          .byte 0xb
          .byte 0x71
          .byte 0xb
          .byte 0x71
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x85
          .byte 0xb
          .byte 0x8a
          .byte 0xb
          .byte 0x8e
          .byte 0xb
          .byte 0x90
          .byte 0xb
          .byte 0x92
          .byte 0xb
          .byte 0x95
          .byte 0xb
          .byte 0x99
          .byte 0xb
          .byte 0x9a
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9e
          .byte 0xb
          .byte 0x9f
          .byte 0xb
          .byte 0xa3
          .byte 0xb
          .byte 0xa4
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xaa
          .byte 0xb
          .byte 0xae
          .byte 0xb
          .byte 0xb9
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0x5
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xe
          .byte 0xc
          .byte 0x10
          .byte 0xc
          .byte 0x12
          .byte 0xc
          .byte 0x28
          .byte 0xc
          .byte 0x2a
          .byte 0xc
          .byte 0x33
          .byte 0xc
          .byte 0x35
          .byte 0xc
          .byte 0x39
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x58
          .byte 0xc
          .byte 0x59
          .byte 0xc
          .byte 0x60
          .byte 0xc
          .byte 0x61
          .byte 0xc
          .byte 0x85
          .byte 0xc
          .byte 0x8c
          .byte 0xc
          .byte 0x8e
          .byte 0xc
          .byte 0x90
          .byte 0xc
          .byte 0x92
          .byte 0xc
          .byte 0xa8
          .byte 0xc
          .byte 0xaa
          .byte 0xc
          .byte 0xb3
          .byte 0xc
          .byte 0xb5
          .byte 0xc
          .byte 0xb9
          .byte 0xc
          .byte 0xbd
          .byte 0xc
          .byte 0xbd
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xe0
          .byte 0xc
          .byte 0xe1
          .byte 0xc
          .byte 0xf1
          .byte 0xc
          .byte 0xf2
          .byte 0xc
          .byte 0x5
          .byte 0xd
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xd
          .byte 0x10
          .byte 0xd
          .byte 0x12
          .byte 0xd
          .byte 0x3a
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x60
          .byte 0xd
          .byte 0x61
          .byte 0xd
          .byte 0x7a
          .byte 0xd
          .byte 0x7f
          .byte 0xd
          .byte 0x85
          .byte 0xd
          .byte 0x96
          .byte 0xd
          .byte 0x9a
          .byte 0xd
          .byte 0xb1
          .byte 0xd
          .byte 0xb3
          .byte 0xd
          .byte 0xbb
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xc0
          .byte 0xd
          .byte 0xc6
          .byte 0xd
          .byte 0x1
          .byte 0xe
          .byte 0x30
          .byte 0xe
          .byte 0x32
          .byte 0xe
          .byte 0x33
          .byte 0xe
          .byte 0x40
          .byte 0xe
          .byte 0x45
          .byte 0xe
          .byte 0x81
          .byte 0xe
          .byte 0x82
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x87
          .byte 0xe
          .byte 0x88
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x94
          .byte 0xe
          .byte 0x97
          .byte 0xe
          .byte 0x99
          .byte 0xe
          .byte 0x9f
          .byte 0xe
          .byte 0xa1
          .byte 0xe
          .byte 0xa3
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xaa
          .byte 0xe
          .byte 0xab
          .byte 0xe
          .byte 0xad
          .byte 0xe
          .byte 0xb0
          .byte 0xe
          .byte 0xb2
          .byte 0xe
          .byte 0xb3
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xc0
          .byte 0xe
          .byte 0xc4
          .byte 0xe
          .byte 0xdc
          .byte 0xe
          .byte 0xdf
          .byte 0xe
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x40
          .byte 0xf
          .byte 0x47
          .byte 0xf
          .byte 0x49
          .byte 0xf
          .byte 0x6c
          .byte 0xf
          .byte 0x88
          .byte 0xf
          .byte 0x8c
          .byte 0xf
          .byte 0x0
          .byte 0x10
          .byte 0x2a
          .byte 0x10
          .byte 0x3f
          .byte 0x10
          .byte 0x3f
          .byte 0x10
          .byte 0x50
          .byte 0x10
          .byte 0x55
          .byte 0x10
          .byte 0x5a
          .byte 0x10
          .byte 0x5d
          .byte 0x10
          .byte 0x61
          .byte 0x10
          .byte 0x61
          .byte 0x10
          .byte 0x65
          .byte 0x10
          .byte 0x66
          .byte 0x10
          .byte 0x6e
          .byte 0x10
          .byte 0x70
          .byte 0x10
          .byte 0x75
          .byte 0x10
          .byte 0x81
          .byte 0x10
          .byte 0x8e
          .byte 0x10
          .byte 0x8e
          .byte 0x10
          .byte 0xd0
          .byte 0x10
          .byte 0xfa
          .byte 0x10
          .byte 0xfd
          .byte 0x10
          .byte 0x48
          .byte 0x12
          .byte 0x4a
          .byte 0x12
          .byte 0x4d
          .byte 0x12
          .byte 0x50
          .byte 0x12
          .byte 0x56
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x5a
          .byte 0x12
          .byte 0x5d
          .byte 0x12
          .byte 0x60
          .byte 0x12
          .byte 0x88
          .byte 0x12
          .byte 0x8a
          .byte 0x12
          .byte 0x8d
          .byte 0x12
          .byte 0x90
          .byte 0x12
          .byte 0xb0
          .byte 0x12
          .byte 0xb2
          .byte 0x12
          .byte 0xb5
          .byte 0x12
          .byte 0xb8
          .byte 0x12
          .byte 0xbe
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc2
          .byte 0x12
          .byte 0xc5
          .byte 0x12
          .byte 0xc8
          .byte 0x12
          .byte 0xd6
          .byte 0x12
          .byte 0xd8
          .byte 0x12
          .byte 0x10
          .byte 0x13
          .byte 0x12
          .byte 0x13
          .byte 0x15
          .byte 0x13
          .byte 0x18
          .byte 0x13
          .byte 0x5a
          .byte 0x13
          .byte 0x80
          .byte 0x13
          .byte 0x8f
          .byte 0x13
          .byte 0xa0
          .byte 0x13
          .byte 0xf4
          .byte 0x13
          .byte 0x1
          .byte 0x14
          .byte 0x6c
          .byte 0x16
          .byte 0x6f
          .byte 0x16
          .byte 0x7f
          .byte 0x16
          .byte 0x81
          .byte 0x16
          .byte 0x9a
          .byte 0x16
          .byte 0xa0
          .byte 0x16
          .byte 0xea
          .byte 0x16
          .byte 0x0
          .byte 0x17
          .byte 0xc
          .byte 0x17
          .byte 0xe
          .byte 0x17
          .byte 0x11
          .byte 0x17
          .byte 0x20
          .byte 0x17
          .byte 0x31
          .byte 0x17
          .byte 0x40
          .byte 0x17
          .byte 0x51
          .byte 0x17
          .byte 0x60
          .byte 0x17
          .byte 0x6c
          .byte 0x17
          .byte 0x6e
          .byte 0x17
          .byte 0x70
          .byte 0x17
          .byte 0x80
          .byte 0x17
          .byte 0xb3
          .byte 0x17
          .byte 0xdc
          .byte 0x17
          .byte 0xdc
          .byte 0x17
          .byte 0x20
          .byte 0x18
          .byte 0x42
          .byte 0x18
          .byte 0x44
          .byte 0x18
          .byte 0x77
          .byte 0x18
          .byte 0x80
          .byte 0x18
          .byte 0xa8
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0xb0
          .byte 0x18
          .byte 0xf5
          .byte 0x18
          .byte 0x0
          .byte 0x19
          .byte 0x1c
          .byte 0x19
          .byte 0x50
          .byte 0x19
          .byte 0x6d
          .byte 0x19
          .byte 0x70
          .byte 0x19
          .byte 0x74
          .byte 0x19
          .byte 0x80
          .byte 0x19
          .byte 0xab
          .byte 0x19
          .byte 0xc1
          .byte 0x19
          .byte 0xc7
          .byte 0x19
          .byte 0x0
          .byte 0x1a
          .byte 0x16
          .byte 0x1a
          .byte 0x20
          .byte 0x1a
          .byte 0x54
          .byte 0x1a
          .byte 0x5
          .byte 0x1b
          .byte 0x33
          .byte 0x1b
          .byte 0x45
          .byte 0x1b
          .byte 0x4b
          .byte 0x1b
          .byte 0x83
          .byte 0x1b
          .byte 0xa0
          .byte 0x1b
          .byte 0xae
          .byte 0x1b
          .byte 0xaf
          .byte 0x1b
          .byte 0xba
          .byte 0x1b
          .byte 0xe5
          .byte 0x1b
          .byte 0x0
          .byte 0x1c
          .byte 0x23
          .byte 0x1c
          .byte 0x4d
          .byte 0x1c
          .byte 0x4f
          .byte 0x1c
          .byte 0x5a
          .byte 0x1c
          .byte 0x77
          .byte 0x1c
          .byte 0xe9
          .byte 0x1c
          .byte 0xec
          .byte 0x1c
          .byte 0xee
          .byte 0x1c
          .byte 0xf1
          .byte 0x1c
          .byte 0xf5
          .byte 0x1c
          .byte 0xf6
          .byte 0x1c
          .byte 0x35
          .byte 0x21
          .byte 0x38
          .byte 0x21
          .byte 0x30
          .byte 0x2d
          .byte 0x67
          .byte 0x2d
          .byte 0x80
          .byte 0x2d
          .byte 0x96
          .byte 0x2d
          .byte 0xa0
          .byte 0x2d
          .byte 0xa6
          .byte 0x2d
          .byte 0xa8
          .byte 0x2d
          .byte 0xae
          .byte 0x2d
          .byte 0xb0
          .byte 0x2d
          .byte 0xb6
          .byte 0x2d
          .byte 0xb8
          .byte 0x2d
          .byte 0xbe
          .byte 0x2d
          .byte 0xc0
          .byte 0x2d
          .byte 0xc6
          .byte 0x2d
          .byte 0xc8
          .byte 0x2d
          .byte 0xce
          .byte 0x2d
          .byte 0xd0
          .byte 0x2d
          .byte 0xd6
          .byte 0x2d
          .byte 0xd8
          .byte 0x2d
          .byte 0xde
          .byte 0x2d
          .byte 0x6
          .byte 0x30
          .byte 0x6
          .byte 0x30
          .byte 0x3c
          .byte 0x30
          .byte 0x3c
          .byte 0x30
          .byte 0x41
          .byte 0x30
          .byte 0x96
          .byte 0x30
          .byte 0x9f
          .byte 0x30
          .byte 0x9f
          .byte 0x30
          .byte 0xa1
          .byte 0x30
          .byte 0xfa
          .byte 0x30
          .byte 0xff
          .byte 0x30
          .byte 0xff
          .byte 0x30
          .byte 0x5
          .byte 0x31
          .byte 0x2d
          .byte 0x31
          .byte 0x31
          .byte 0x31
          .byte 0x8e
          .byte 0x31
          .byte 0xa0
          .byte 0x31
          .byte 0xba
          .byte 0x31
          .byte 0xf0
          .byte 0x31
          .byte 0xff
          .byte 0x31
          .byte 0x0
          .byte 0x34
          .byte 0xb5
          .byte 0x4d
          .byte 0x0
          .byte 0x4e
          .byte 0xcc
          .byte 0x9f
          .byte 0x0
          .byte 0xa0
          .byte 0x14
          .byte 0xa0
          .byte 0x16
          .byte 0xa0
          .byte 0x8c
          .byte 0xa4
          .byte 0xd0
          .byte 0xa4
          .byte 0xf7
          .byte 0xa4
          .byte 0x0
          .byte 0xa5
          .byte 0xb
          .byte 0xa6
          .byte 0x10
          .byte 0xa6
          .byte 0x1f
          .byte 0xa6
          .byte 0x2a
          .byte 0xa6
          .byte 0x2b
          .byte 0xa6
          .byte 0x6e
          .byte 0xa6
          .byte 0x6e
          .byte 0xa6
          .byte 0xa0
          .byte 0xa6
          .byte 0xe5
          .byte 0xa6
          .byte 0xfb
          .byte 0xa7
          .byte 0x1
          .byte 0xa8
          .byte 0x3
          .byte 0xa8
          .byte 0x5
          .byte 0xa8
          .byte 0x7
          .byte 0xa8
          .byte 0xa
          .byte 0xa8
          .byte 0xc
          .byte 0xa8
          .byte 0x22
          .byte 0xa8
          .byte 0x40
          .byte 0xa8
          .byte 0x73
          .byte 0xa8
          .byte 0x82
          .byte 0xa8
          .byte 0xb3
          .byte 0xa8
          .byte 0xf2
          .byte 0xa8
          .byte 0xf7
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0xa
          .byte 0xa9
          .byte 0x25
          .byte 0xa9
          .byte 0x30
          .byte 0xa9
          .byte 0x46
          .byte 0xa9
          .byte 0x60
          .byte 0xa9
          .byte 0x7c
          .byte 0xa9
          .byte 0x84
          .byte 0xa9
          .byte 0xb2
          .byte 0xa9
          .byte 0x0
          .byte 0xaa
          .byte 0x28
          .byte 0xaa
          .byte 0x40
          .byte 0xaa
          .byte 0x42
          .byte 0xaa
          .byte 0x44
          .byte 0xaa
          .byte 0x4b
          .byte 0xaa
          .byte 0x60
          .byte 0xaa
          .byte 0x6f
          .byte 0xaa
          .byte 0x71
          .byte 0xaa
          .byte 0x76
          .byte 0xaa
          .byte 0x7a
          .byte 0xaa
          .byte 0x7a
          .byte 0xaa
          .byte 0x80
          .byte 0xaa
          .byte 0xaf
          .byte 0xaa
          .byte 0xb1
          .byte 0xaa
          .byte 0xb1
          .byte 0xaa
          .byte 0xb5
          .byte 0xaa
          .byte 0xb6
          .byte 0xaa
          .byte 0xb9
          .byte 0xaa
          .byte 0xbd
          .byte 0xaa
          .byte 0xc0
          .byte 0xaa
          .byte 0xc0
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xdb
          .byte 0xaa
          .byte 0xdc
          .byte 0xaa
          .byte 0xe0
          .byte 0xaa
          .byte 0xea
          .byte 0xaa
          .byte 0xf2
          .byte 0xaa
          .byte 0xf2
          .byte 0xaa
          .byte 0x1
          .byte 0xab
          .byte 0x6
          .byte 0xab
          .byte 0x9
          .byte 0xab
          .byte 0xe
          .byte 0xab
          .byte 0x11
          .byte 0xab
          .byte 0x16
          .byte 0xab
          .byte 0x20
          .byte 0xab
          .byte 0x26
          .byte 0xab
          .byte 0x28
          .byte 0xab
          .byte 0x2e
          .byte 0xab
          .byte 0xc0
          .byte 0xab
          .byte 0xe2
          .byte 0xab
          .byte 0x0
          .byte 0xac
          .byte 0xa3
          .byte 0xd7
          .byte 0xb0
          .byte 0xd7
          .byte 0xc6
          .byte 0xd7
          .byte 0xcb
          .byte 0xd7
          .byte 0xfb
          .byte 0xd7
          .byte 0x0
          .byte 0xf9
          .byte 0x6d
          .byte 0xfa
          .byte 0x70
          .byte 0xfa
          .byte 0xd9
          .byte 0xfa
          .byte 0x1d
          .byte 0xfb
          .byte 0x1d
          .byte 0xfb
          .byte 0x1f
          .byte 0xfb
          .byte 0x28
          .byte 0xfb
          .byte 0x2a
          .byte 0xfb
          .byte 0x36
          .byte 0xfb
          .byte 0x38
          .byte 0xfb
          .byte 0x3c
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x40
          .byte 0xfb
          .byte 0x41
          .byte 0xfb
          .byte 0x43
          .byte 0xfb
          .byte 0x44
          .byte 0xfb
          .byte 0x46
          .byte 0xfb
          .byte 0xb1
          .byte 0xfb
          .byte 0xd3
          .byte 0xfb
          .byte 0x3d
          .byte 0xfd
          .byte 0x50
          .byte 0xfd
          .byte 0x8f
          .byte 0xfd
          .byte 0x92
          .byte 0xfd
          .byte 0xc7
          .byte 0xfd
          .byte 0xf0
          .byte 0xfd
          .byte 0xfb
          .byte 0xfd
          .byte 0x70
          .byte 0xfe
          .byte 0x74
          .byte 0xfe
          .byte 0x76
          .byte 0xfe
          .byte 0xfc
          .byte 0xfe
          .byte 0x66
          .byte 0xff
          .byte 0x6f
          .byte 0xff
          .byte 0x71
          .byte 0xff
          .byte 0x9d
          .byte 0xff
          .byte 0xa0
          .byte 0xff
          .byte 0xbe
          .byte 0xff
          .byte 0xc2
          .byte 0xff
          .byte 0xc7
          .byte 0xff
          .byte 0xca
          .byte 0xff
          .byte 0xcf
          .byte 0xff
          .byte 0xd2
          .byte 0xff
          .byte 0xd7
          .byte 0xff
          .byte 0xda
          .byte 0xff
          .byte 0xdc
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d740:
          .byte 0x7
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7d
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x65
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x71
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d7c0:
          .byte 0xb2
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0xf4
          .byte 0x9
          .byte 0xf9
          .byte 0x9
          .byte 0x72
          .byte 0xb
          .byte 0x77
          .byte 0xb
          .byte 0xf0
          .byte 0xb
          .byte 0xf2
          .byte 0xb
          .byte 0x78
          .byte 0xc
          .byte 0x7e
          .byte 0xc
          .byte 0x70
          .byte 0xd
          .byte 0x75
          .byte 0xd
          .byte 0x2a
          .byte 0xf
          .byte 0x33
          .byte 0xf
          .byte 0x69
          .byte 0x13
          .byte 0x7c
          .byte 0x13
          .byte 0xf0
          .byte 0x17
          .byte 0xf9
          .byte 0x17
          .byte 0xda
          .byte 0x19
          .byte 0xda
          .byte 0x19
          .byte 0x70
          .byte 0x20
          .byte 0x70
          .byte 0x20
          .byte 0x74
          .byte 0x20
          .byte 0x79
          .byte 0x20
          .byte 0x80
          .byte 0x20
          .byte 0x89
          .byte 0x20
          .byte 0x50
          .byte 0x21
          .byte 0x5f
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x60
          .byte 0x24
          .byte 0x9b
          .byte 0x24
          .byte 0xea
          .byte 0x24
          .byte 0xff
          .byte 0x24
          .byte 0x76
          .byte 0x27
          .byte 0x93
          .byte 0x27
          .byte 0xfd
          .byte 0x2c
          .byte 0xfd
          .byte 0x2c
          .byte 0x92
          .byte 0x31
          .byte 0x95
          .byte 0x31
          .byte 0x20
          .byte 0x32
          .byte 0x29
          .byte 0x32
          .byte 0x48
          .byte 0x32
          .byte 0x4f
          .byte 0x32
          .byte 0x51
          .byte 0x32
          .byte 0x5f
          .byte 0x32
          .byte 0x80
          .byte 0x32
          .byte 0x89
          .byte 0x32
          .byte 0xb1
          .byte 0x32
          .byte 0xbf
          .byte 0x32
          .byte 0x30
          .byte 0xa8
          .byte 0x35
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d840:
          .byte 0x40
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d870:
          .byte 0xee
          .byte 0x16
          .byte 0xf0
          .byte 0x16
          .byte 0x60
          .byte 0x21
          .byte 0x82
          .byte 0x21
          .byte 0x85
          .byte 0x21
          .byte 0x88
          .byte 0x21
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x30
          .byte 0x21
          .byte 0x30
          .byte 0x29
          .byte 0x30
          .byte 0x38
          .byte 0x30
          .byte 0x3a
          .byte 0x30
          .byte 0xe6
          .byte 0xa6
          .byte 0xef
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d8a0:
          .string "("
          .byte 0x28
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x3a
          .byte 0xf
          .byte 0x3a
          .byte 0xf
          .byte 0x3c
          .byte 0xf
          .byte 0x3c
          .byte 0xf
          .byte 0x9b
          .byte 0x16
          .byte 0x9b
          .byte 0x16
          .byte 0x1a
          .byte 0x20
          .byte 0x1a
          .byte 0x20
          .byte 0x1e
          .byte 0x20
          .byte 0x1e
          .byte 0x20
          .byte 0x45
          .byte 0x20
          .byte 0x45
          .byte 0x20
          .byte 0x7d
          .byte 0x20
          .byte 0x7d
          .byte 0x20
          .byte 0x8d
          .byte 0x20
          .byte 0x8d
          .byte 0x20
          .byte 0x8
          .byte 0x23
          .byte 0x8
          .byte 0x23
          .byte 0xa
          .byte 0x23
          .byte 0xa
          .byte 0x23
          .byte 0x29
          .byte 0x23
          .byte 0x29
          .byte 0x23
          .byte 0x68
          .byte 0x27
          .byte 0x68
          .byte 0x27
          .byte 0x6a
          .byte 0x27
          .byte 0x6a
          .byte 0x27
          .byte 0x6c
          .byte 0x27
          .byte 0x6c
          .byte 0x27
          .byte 0x6e
          .byte 0x27
          .byte 0x6e
          .byte 0x27
          .byte 0x70
          .byte 0x27
          .byte 0x70
          .byte 0x27
          .byte 0x72
          .byte 0x27
          .byte 0x72
          .byte 0x27
          .byte 0x74
          .byte 0x27
          .byte 0x74
          .byte 0x27
          .byte 0xc5
          .byte 0x27
          .byte 0xc5
          .byte 0x27
          .byte 0xe6
          .byte 0x27
          .byte 0xe6
          .byte 0x27
          .byte 0xe8
          .byte 0x27
          .byte 0xe8
          .byte 0x27
          .byte 0xea
          .byte 0x27
          .byte 0xea
          .byte 0x27
          .byte 0xec
          .byte 0x27
          .byte 0xec
          .byte 0x27
          .byte 0xee
          .byte 0x27
          .byte 0xee
          .byte 0x27
          .byte 0x83
          .byte 0x29
          .byte 0x83
          .byte 0x29
          .byte 0x85
          .byte 0x29
          .byte 0x85
          .byte 0x29
          .byte 0x87
          .byte 0x29
          .byte 0x87
          .byte 0x29
          .byte 0x89
          .byte 0x29
          .byte 0x89
          .byte 0x29
          .byte 0x8b
          .byte 0x29
          .byte 0x8b
          .byte 0x29
          .byte 0x8d
          .byte 0x29
          .byte 0x8d
          .byte 0x29
          .byte 0x8f
          .byte 0x29
          .byte 0x8f
          .byte 0x29
          .byte 0x91
          .byte 0x29
          .byte 0x91
          .byte 0x29
          .byte 0x93
          .byte 0x29
          .byte 0x93
          .byte 0x29
          .byte 0x95
          .byte 0x29
          .byte 0x95
          .byte 0x29
          .byte 0x97
          .byte 0x29
          .byte 0x97
          .byte 0x29
          .byte 0xd8
          .byte 0x29
          .byte 0xd8
          .byte 0x29
          .byte 0xda
          .byte 0x29
          .byte 0xda
          .byte 0x29
          .byte 0xfc
          .byte 0x29
          .byte 0xfc
          .byte 0x29
          .byte 0x22
          .byte 0x2e
          .byte 0x22
          .byte 0x2e
          .byte 0x24
          .byte 0x2e
          .byte 0x24
          .byte 0x2e
          .byte 0x26
          .byte 0x2e
          .byte 0x26
          .byte 0x2e
          .byte 0x28
          .byte 0x2e
          .byte 0x28
          .byte 0x2e
          .byte 0x8
          .byte 0x30
          .byte 0x8
          .byte 0x30
          .byte 0xa
          .byte 0x30
          .byte 0xa
          .byte 0x30
          .byte 0xc
          .byte 0x30
          .byte 0xc
          .byte 0x30
          .byte 0xe
          .byte 0x30
          .byte 0xe
          .byte 0x30
          .byte 0x10
          .byte 0x30
          .byte 0x10
          .byte 0x30
          .byte 0x14
          .byte 0x30
          .byte 0x14
          .byte 0x30
          .byte 0x16
          .byte 0x30
          .byte 0x16
          .byte 0x30
          .byte 0x18
          .byte 0x30
          .byte 0x18
          .byte 0x30
          .byte 0x1a
          .byte 0x30
          .byte 0x1a
          .byte 0x30
          .byte 0x1d
          .byte 0x30
          .byte 0x1d
          .byte 0x30
          .byte 0x3e
          .byte 0xfd
          .byte 0x3e
          .byte 0xfd
          .byte 0x17
          .byte 0xfe
          .byte 0x17
          .byte 0xfe
          .byte 0x35
          .byte 0xfe
          .byte 0x35
          .byte 0xfe
          .byte 0x37
          .byte 0xfe
          .byte 0x37
          .byte 0xfe
          .byte 0x39
          .byte 0xfe
          .byte 0x39
          .byte 0xfe
          .byte 0x3b
          .byte 0xfe
          .byte 0x3b
          .byte 0xfe
          .byte 0x3d
          .byte 0xfe
          .byte 0x3d
          .byte 0xfe
          .byte 0x3f
          .byte 0xfe
          .byte 0x3f
          .byte 0xfe
          .byte 0x41
          .byte 0xfe
          .byte 0x41
          .byte 0xfe
          .byte 0x43
          .byte 0xfe
          .byte 0x43
          .byte 0xfe
          .byte 0x47
          .byte 0xfe
          .byte 0x47
          .byte 0xfe
          .byte 0x59
          .byte 0xfe
          .byte 0x59
          .byte 0xfe
          .byte 0x5b
          .byte 0xfe
          .byte 0x5b
          .byte 0xfe
          .byte 0x5d
          .byte 0xfe
          .byte 0x5d
          .byte 0xfe
          .byte 0x8
          .byte 0xff
          .byte 0x8
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x5f
          .byte 0xff
          .byte 0x5f
          .byte 0xff
          .byte 0x62
          .byte 0xff
          .byte 0x62
          .byte 0xff
.L_43d9c8:
          .string "Arabic"
.L_43d9cf:
          .string "Armenian"
.L_43d9d8:
          .string "Avestan"
.L_43d9e0:
          .string "Balinese"
.L_43d9e9:
          .string "Bamum"
.L_43d9ef:
          .string "Batak"
.L_43d9f5:
          .string "Bengali"
.L_43d9fd:
          .string "Bopomofo"
.L_43da06:
          .string "Brahmi"
.L_43da0d:
          .string "Braille"
.L_43da15:
          .string "Buginese"
.L_43da1e:
          .string "Buhid"
.L_43da24:
          .string "Canadian_Aboriginal"
.L_43da38:
          .string "Carian"
.L_43da3f:
          .string "Cc"
.L_43da42:
          .string "Cf"
.L_43da45:
          .string "Chakma"
.L_43da4c:
          .string "Cham"
.L_43da51:
          .string "Cherokee"
.L_43da5a:
          .string "Co"
.L_43da5d:
          .string "Common"
.L_43da64:
          .string "Coptic"
.L_43da6b:
          .string "Cs"
.L_43da6e:
          .string "Cuneiform"
.L_43da78:
          .string "Cypriot"
.L_43da80:
          .string "Cyrillic"
.L_43da89:
          .string "Deseret"
.L_43da91:
          .string "Devanagari"
.L_43da9c:
          .string "Egyptian_Hieroglyphs"
.L_43dab1:
          .string "Ethiopic"
.L_43daba:
          .string "Georgian"
.L_43dac3:
          .string "Glagolitic"
.L_43dace:
          .string "Gothic"
.L_43dad5:
          .string "Greek"
.L_43dadb:
          .string "Gujarati"
.L_43dae4:
          .string "Gurmukhi"
.L_43daed:
          .string "Han"
.L_43daf1:
          .string "Hangul"
.L_43daf8:
          .string "Hanunoo"
.L_43db00:
          .string "Hebrew"
.L_43db07:
          .string "Hiragana"
.L_43db10:
          .string "Imperial_Aramaic"
.L_43db21:
          .string "Inherited"
.L_43db2b:
          .string "Inscriptional_Pahlavi"
.L_43db41:
          .string "Inscriptional_Parthian"
.L_43db58:
          .string "Javanese"
.L_43db61:
          .string "Kaithi"
.L_43db68:
          .string "Kannada"
.L_43db70:
          .string "Katakana"
.L_43db79:
          .string "Kayah_Li"
.L_43db82:
          .string "Kharoshthi"
.L_43db8d:
          .string "Khmer"
.L_43db93:
          .string "Lao"
.L_43db97:
          .string "Latin"
.L_43db9d:
          .string "Lepcha"
.L_43dba4:
          .string "Limbu"
.L_43dbaa:
          .string "Linear_B"
.L_43dbb3:
          .string "Lisu"
.L_43dbb8:
          .string "Ll"
.L_43dbbb:
          .string "Lm"
.L_43dbbe:
          .string "Lo"
.L_43dbc1:
          .string "Lt"
.L_43dbc4:
          .string "Lu"
.L_43dbc7:
          .string "Lycian"
.L_43dbce:
          .string "Lydian"
.L_43dbd5:
          .string "M"
.L_43dbd7:
          .string "Malayalam"
.L_43dbe1:
          .string "Mandaic"
.L_43dbe9:
          .string "Mc"
.L_43dbec:
          .string "Me"
.L_43dbef:
          .string "Meetei_Mayek"
.L_43dbfc:
          .string "Meroitic_Cursive"
.L_43dc0d:
          .string "Meroitic_Hieroglyphs"
.L_43dc22:
          .string "Miao"
.L_43dc27:
          .string "Mn"
.L_43dc2a:
          .string "Mongolian"
.L_43dc34:
          .string "Myanmar"
.L_43dc3c:
          .string "N"
.L_43dc3e:
          .string "Nd"
.L_43dc41:
          .string "New_Tai_Lue"
.L_43dc4d:
          .string "Nko"
.L_43dc51:
          .string "Nl"
.L_43dc54:
          .string "No"
.L_43dc57:
          .string "Ogham"
.L_43dc5d:
          .string "Ol_Chiki"
.L_43dc66:
          .string "Old_Italic"
.L_43dc71:
          .string "Old_Persian"
.L_43dc7d:
          .string "Old_South_Arabian"
.L_43dc8f:
          .string "Old_Turkic"
.L_43dc9a:
          .string "Oriya"
.L_43dca0:
          .string "Osmanya"
.L_43dca8:
          .string "P"
.L_43dcaa:
          .string "Pc"
.L_43dcad:
          .string "Pd"
.L_43dcb0:
          .string "Pe"
.L_43dcb3:
          .string "Pf"
.L_43dcb6:
          .string "Phags_Pa"
.L_43dcbf:
          .string "Phoenician"
.L_43dcca:
          .string "Pi"
.L_43dccd:
          .string "Po"
.L_43dcd0:
          .string "Ps"
.L_43dcd3:
          .string "Rejang"
.L_43dcda:
          .string "Runic"
.L_43dce0:
          .string "Samaritan"
.L_43dcea:
          .string "Saurashtra"
.L_43dcf5:
          .string "Sc"
.L_43dcf8:
          .string "Sharada"
.L_43dd00:
          .string "Shavian"
.L_43dd08:
          .string "Sinhala"
.L_43dd10:
          .string "Sk"
.L_43dd13:
          .string "Sm"
.L_43dd16:
          .string "So"
.L_43dd19:
          .string "Sora_Sompeng"
.L_43dd26:
          .string "Sundanese"
.L_43dd30:
          .string "Syloti_Nagri"
.L_43dd3d:
          .string "Syriac"
.L_43dd44:
          .string "Tagalog"
.L_43dd4c:
          .string "Tagbanwa"
.L_43dd55:
          .string "Tai_Le"
.L_43dd5c:
          .string "Tai_Tham"
.L_43dd65:
          .string "Tai_Viet"
.L_43dd6e:
          .string "Takri"
.L_43dd74:
          .string "Tamil"
.L_43dd7a:
          .string "Telugu"
.L_43dd81:
          .string "Thaana"
.L_43dd88:
          .string "Thai"
.L_43dd8d:
          .string "Tibetan"
.L_43dd95:
          .string "Tifinagh"
.L_43dd9e:
          .string "Ugaritic"
.L_43dda7:
          .string "Vai"
.L_43ddab:
          .string "Yi"
.L_43ddae:
          .string "Z"
.L_43ddb0:
          .string "Zl"
.L_43ddb3:
          .string "Zp"
.L_43ddb6:
          .string "Zs"
#===================================
# end section .rodata
#===================================

#===================================
.section .gcc_except_table ,"a",@progbits
.align 8
#===================================

.L_444478:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44448e-.L_44447c
.L_44447c:
          .uleb128 .L_402b07-.L_4029d0
          .uleb128 .L_402b0c-.L_402b07
          .uleb128 .L_402c4d-.L_4029d0
          .zero 1
          .uleb128 .L_402b33-.L_4029d0
          .uleb128 .L_402b38-.L_402b33
          .uleb128 .L_402c6b-.L_4029d0
          .zero 1
          .uleb128 .L_402b8b-.L_4029d0
          .uleb128 .L_402c6b-.L_402b8b
          .zero 2
.L_44448e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4444ab-.L_444492
.L_444492:
          .uleb128 .L_403013-.L_402fe0
          .uleb128 .L_403031-.L_403013
          .zero 2
          .uleb128 .L_403059-.L_402fe0
          .uleb128 .L_40305e-.L_403059
          .uleb128 .L_4030fc-.L_402fe0
          .zero 1
          .uleb128 .L_4030d0-.L_402fe0
          .uleb128 .L_4030d5-.L_4030d0
          .zero 2
          .uleb128 .L_4030f7-.L_402fe0
          .uleb128 .L_4030fc-.L_4030f7
          .uleb128 .L_4030fc-.L_402fe0
          .zero 1
          .uleb128 .L_403114-.L_402fe0
          .uleb128 .L_403119-.L_403114
          .zero 2
.L_4444ab:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4444c2-.L_4444af
.L_4444af:
          .uleb128 .L_40be96-.L_40bd80
          .uleb128 .L_40be9b-.L_40be96
          .uleb128 .L_40c0e9-.L_40bd80
          .zero 1
          .uleb128 .L_40bf1c-.L_40bd80
          .uleb128 .L_40bf21-.L_40bf1c
          .uleb128 .L_40c0d2-.L_40bd80
          .zero 1
          .uleb128 .L_40bf55-.L_40bd80
          .uleb128 .L_40bfe4-.L_40bf55
          .uleb128 .L_40c0e9-.L_40bd80
          .zero 1
.L_4444c2:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4444d0-.L_4444c6
.L_4444c6:
          .uleb128 .L_403204-.L_403190
          .uleb128 .L_403209-.L_403204
          .uleb128 .L_403232-.L_403190
          .zero 1
          .uleb128 .L_403240-.L_403190
          .uleb128 .L_403245-.L_403240
          .zero 2
.L_4444d0:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4444de-.L_4444d4
.L_4444d4:
          .uleb128 .L_4032c4-.L_403250
          .uleb128 .L_4032c9-.L_4032c4
          .uleb128 .L_4032f2-.L_403250
          .zero 1
          .uleb128 .L_403300-.L_403250
          .uleb128 .L_403305-.L_403300
          .zero 2
.L_4444de:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4444ed-.L_4444e2
.L_4444e2:
          .uleb128 .L_4033a5-.L_403370
          .uleb128 .L_403538-.L_4033a5
          .uleb128 .L_403538-.L_403370
          .zero 1
          .uleb128 .L_40354d-.L_403370
          .uleb128 .L_403552-.L_40354d
          .zero 2
.L_4444ed:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444504-.L_4444f1
.L_4444f1:
          .uleb128 .L_403609-.L_403560
          .uleb128 .L_4036b8-.L_403609
          .uleb128 .L_403b59-.L_403560
          .zero 1
          .uleb128 .L_40381b-.L_403560
          .uleb128 .L_403954-.L_40381b
          .uleb128 .L_403b8a-.L_403560
          .zero 1
          .uleb128 .L_403b85-.L_403560
          .uleb128 .L_403b8a-.L_403b85
          .zero 2
.L_444504:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44451f-.L_444508
.L_444508:
          .uleb128 .L_40c1e9-.L_40c150
          .uleb128 .L_40c1ee-.L_40c1e9
          .uleb128 .L_40c332-.L_40c150
          .zero 1
          .uleb128 .L_40c275-.L_40c150
          .uleb128 .L_40c27a-.L_40c275
          .uleb128 .L_40c2f8-.L_40c150
          .zero 1
          .uleb128 .L_40c290-.L_40c150
          .uleb128 .L_40c2f6-.L_40c290
          .uleb128 .L_40c337-.L_40c150
          .zero 1
          .uleb128 .L_40c32d-.L_40c150
          .uleb128 .L_40c34a-.L_40c32d
          .zero 2
.L_44451f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444553-.L_444523
.L_444523:
          .uleb128 .L_4045c8-.L_404460
          .uleb128 .L_4045cd-.L_4045c8
          .uleb128 .L_404a75-.L_404460
          .zero 1
          .uleb128 .L_404687-.L_404460
          .uleb128 .L_40468c-.L_404687
          .uleb128 .L_404aa5-.L_404460
          .zero 1
          .uleb128 .L_40469c-.L_404460
          .uleb128 .L_4046d8-.L_40469c
          .uleb128 .L_404a91-.L_404460
          .zero 1
          .uleb128 .L_4046e8-.L_404460
          .uleb128 .L_4046f8-.L_4046e8
          .uleb128 .L_404a62-.L_404460
          .zero 1
          .uleb128 .L_4047fa-.L_404460
          .uleb128 .L_4047ff-.L_4047fa
          .uleb128 .L_404a44-.L_404460
          .zero 1
          .uleb128 .L_404890-.L_404460
          .uleb128 .L_404895-.L_404890
          .uleb128 .L_404a60-.L_404460
          .zero 1
          .uleb128 .L_4048d7-.L_404460
          .uleb128 .L_40496f-.L_4048d7
          .uleb128 .L_404a44-.L_404460
          .zero 1
          .uleb128 .L_404a70-.L_404460
          .uleb128 .L_404aa5-.L_404a70
          .zero 2
.L_444553:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4445cf-.L_444557
.L_444557:
          .uleb128 .L_404bb2-.L_404ad0
          .uleb128 .L_404ca3-.L_404bb2
          .zero 2
          .uleb128 .L_404d3e-.L_404ad0
          .uleb128 .L_404d43-.L_404d3e
          .uleb128 .L_405737-.L_404ad0
          .zero 1
          .uleb128 .L_404e14-.L_404ad0
          .uleb128 .L_404e19-.L_404e14
          .uleb128 .L_405735-.L_404ad0
          .zero 1
          .uleb128 .L_404e29-.L_404ad0
          .uleb128 .L_404e65-.L_404e29
          .uleb128 .L_4056c0-.L_404ad0
          .zero 1
          .uleb128 .L_404e75-.L_404ad0
          .uleb128 .L_404ea2-.L_404e75
          .uleb128 .L_4056ad-.L_404ad0
          .zero 1
          .uleb128 .L_404f1f-.L_404ad0
          .uleb128 .L_404f24-.L_404f1f
          .uleb128 .L_405717-.L_404ad0
          .zero 1
          .uleb128 .L_404fad-.L_404ad0
          .uleb128 .L_404fb2-.L_404fad
          .uleb128 .L_40572f-.L_404ad0
          .zero 1
          .uleb128 .L_40508a-.L_404ad0
          .uleb128 .L_40508f-.L_40508a
          .uleb128 .L_405712-.L_404ad0
          .zero 1
          .uleb128 .L_405160-.L_404ad0
          .uleb128 .L_405165-.L_405160
          .uleb128 .L_4056d8-.L_404ad0
          .zero 1
          .uleb128 .L_405175-.L_404ad0
          .uleb128 .L_4051b1-.L_405175
          .uleb128 .L_4056d6-.L_404ad0
          .zero 1
          .uleb128 .L_4051c1-.L_404ad0
          .uleb128 .L_40520f-.L_4051c1
          .uleb128 .L_4056d4-.L_404ad0
          .zero 1
          .uleb128 .L_4052b4-.L_404ad0
          .uleb128 .L_4052b9-.L_4052b4
          .uleb128 .L_4056ad-.L_404ad0
          .zero 1
          .uleb128 .L_4052cf-.L_404ad0
          .uleb128 .L_4052d4-.L_4052cf
          .uleb128 .L_4056d4-.L_404ad0
          .zero 1
          .uleb128 .L_405348-.L_404ad0
          .uleb128 .L_40534d-.L_405348
          .uleb128 .L_405731-.L_404ad0
          .zero 1
          .uleb128 .L_4053d6-.L_404ad0
          .uleb128 .L_4053db-.L_4053d6
          .uleb128 .L_405733-.L_404ad0
          .zero 1
          .uleb128 .L_4053f1-.L_404ad0
          .uleb128 .L_4053f6-.L_4053f1
          .uleb128 .L_405731-.L_404ad0
          .zero 1
          .uleb128 .L_40547f-.L_404ad0
          .uleb128 .L_405484-.L_40547f
          .uleb128 .L_405717-.L_404ad0
          .zero 1
          .uleb128 .L_405503-.L_404ad0
          .uleb128 .L_405508-.L_405503
          .uleb128 .L_405731-.L_404ad0
          .zero 1
          .uleb128 .L_405514-.L_404ad0
          .uleb128 .L_405519-.L_405514
          .uleb128 .L_405717-.L_404ad0
          .zero 1
          .uleb128 .L_4056bb-.L_404ad0
          .uleb128 .L_405745-.L_4056bb
          .zero 2
.L_4445cf:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44467a-.L_4445d4
.L_4445d4:
          .uleb128 .L_405782-.L_405750
          .uleb128 .L_4057c6-.L_405782
          .zero 2
          .uleb128 .L_405963-.L_405750
          .uleb128 .L_405a13-.L_405963
          .uleb128 .L_406aef-.L_405750
          .zero 1
          .uleb128 .L_405b48-.L_405750
          .uleb128 .L_405b4d-.L_405b48
          .uleb128 .L_406b67-.L_405750
          .zero 1
          .uleb128 .L_405c1e-.L_405750
          .uleb128 .L_405c23-.L_405c1e
          .uleb128 .L_406b69-.L_405750
          .zero 1
          .uleb128 .L_405c33-.L_405750
          .uleb128 .L_405c6f-.L_405c33
          .uleb128 .L_406b6b-.L_405750
          .zero 1
          .uleb128 .L_405c7f-.L_405750
          .uleb128 .L_405cad-.L_405c7f
          .uleb128 .L_406b6d-.L_405750
          .zero 1
          .uleb128 .L_405cc1-.L_405750
          .uleb128 .L_405cf0-.L_405cc1
          .uleb128 .L_406ab9-.L_405750
          .zero 1
          .uleb128 .L_405d03-.L_405750
          .uleb128 .L_405d08-.L_405d03
          .uleb128 .L_406ad4-.L_405750
          .zero 1
          .uleb128 .L_405de5-.L_405750
          .uleb128 .L_405dea-.L_405de5
          .uleb128 .L_406aef-.L_405750
          .zero 1
          .uleb128 .L_405f9c-.L_405750
          .uleb128 .L_405fa1-.L_405f9c
          .uleb128 .L_406b62-.L_405750
          .zero 1
          .uleb128 .L_406072-.L_405750
          .uleb128 .L_406077-.L_406072
          .uleb128 .L_406b22-.L_405750
          .zero 1
          .uleb128 .L_406087-.L_405750
          .uleb128 .L_4060c3-.L_406087
          .uleb128 .L_406b11-.L_405750
          .zero 1
          .uleb128 .L_4060d3-.L_405750
          .uleb128 .L_4060fc-.L_4060d3
          .uleb128 .L_406b0c-.L_405750
          .zero 1
          .uleb128 .L_406110-.L_405750
          .uleb128 .L_406129-.L_406110
          .uleb128 .L_406a92-.L_405750
          .zero 1
          .uleb128 .L_4061d4-.L_405750
          .uleb128 .L_4061d9-.L_4061d4
          .uleb128 .L_406aef-.L_405750
          .zero 1
          .uleb128 .L_4061f2-.L_405750
          .uleb128 .L_4061f7-.L_4061f2
          .uleb128 .L_406af7-.L_405750
          .zero 1
          .uleb128 .L_40628a-.L_405750
          .uleb128 .L_40628f-.L_40628a
          .uleb128 .L_406a90-.L_405750
          .zero 1
          .uleb128 .L_40633d-.L_405750
          .uleb128 .L_406342-.L_40633d
          .uleb128 .L_406a75-.L_405750
          .zero 1
          .uleb128 .L_406375-.L_405750
          .uleb128 .L_4063d2-.L_406375
          .zero 2
          .uleb128 .L_40640c-.L_405750
          .uleb128 .L_4064ba-.L_40640c
          .uleb128 .L_406aef-.L_405750
          .zero 1
          .uleb128 .L_4064c3-.L_405750
          .uleb128 .L_4064c8-.L_4064c3
          .uleb128 .L_406a34-.L_405750
          .zero 1
          .uleb128 .L_40650c-.L_405750
          .uleb128 .L_406511-.L_40650c
          .uleb128 .L_406a90-.L_405750
          .zero 1
          .uleb128 .L_406632-.L_405750
          .uleb128 .L_406637-.L_406632
          .uleb128 .L_406ab5-.L_405750
          .zero 1
          .uleb128 .L_4066e5-.L_405750
          .uleb128 .L_4066ea-.L_4066e5
          .uleb128 .L_406ab7-.L_405750
          .zero 1
          .uleb128 .L_406737-.L_405750
          .uleb128 .L_40673c-.L_406737
          .uleb128 .L_406ab5-.L_405750
          .zero 1
          .uleb128 .L_4067e7-.L_405750
          .uleb128 .L_4067ec-.L_4067e7
          .uleb128 .L_406a90-.L_405750
          .zero 1
          .uleb128 .L_4068d3-.L_405750
          .uleb128 .L_4068d8-.L_4068d3
          .uleb128 .L_406ab5-.L_405750
          .zero 1
          .uleb128 .L_406a70-.L_405750
          .uleb128 .L_406a75-.L_406a70
          .zero 2
.L_44467a:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444689-.L_44467e
.L_44467e:
          .uleb128 .L_406c7a-.L_406b70
          .uleb128 .L_406c7f-.L_406c7a
          .uleb128 .L_406ca1-.L_406b70
          .zero 1
          .uleb128 .L_406cd4-.L_406b70
          .uleb128 .L_406cd9-.L_406cd4
          .zero 2
.L_444689:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444698-.L_44468d
.L_44468d:
          .uleb128 .L_406de1-.L_406ce0
          .uleb128 .L_406de6-.L_406de1
          .uleb128 .L_406e08-.L_406ce0
          .zero 1
          .uleb128 .L_406e3b-.L_406ce0
          .uleb128 .L_406e40-.L_406e3b
          .zero 2
.L_444698:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4446a7-.L_44469c
.L_44469c:
          .uleb128 .L_406f2c-.L_406e40
          .uleb128 .L_406f31-.L_406f2c
          .uleb128 .L_406f53-.L_406e40
          .zero 1
          .uleb128 .L_406f86-.L_406e40
          .uleb128 .L_406f8b-.L_406f86
          .zero 2
.L_4446a7:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4446b6-.L_4446ab
.L_4446ab:
          .uleb128 .L_40701e-.L_406f90
          .uleb128 .L_407023-.L_40701e
          .uleb128 .L_40702c-.L_406f90
          .zero 1
          .uleb128 .L_40705f-.L_406f90
          .uleb128 .L_407064-.L_40705f
          .zero 2
.L_4446b6:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444702-.L_4446ba
.L_4446ba:
          .uleb128 .L_407132-.L_407070
          .uleb128 .L_407137-.L_407132
          .uleb128 .L_4076f5-.L_407070
          .zero 1
          .uleb128 .L_4071ed-.L_407070
          .uleb128 .L_4071f2-.L_4071ed
          .uleb128 .L_4077ae-.L_407070
          .zero 1
          .uleb128 .L_4072b3-.L_407070
          .uleb128 .L_4072b8-.L_4072b3
          .uleb128 .L_40776f-.L_407070
          .zero 1
          .uleb128 .L_4072c9-.L_407070
          .uleb128 .L_407307-.L_4072c9
          .uleb128 .L_407760-.L_407070
          .zero 1
          .uleb128 .L_407318-.L_407070
          .uleb128 .L_407340-.L_407318
          .uleb128 .L_40775b-.L_407070
          .zero 1
          .uleb128 .L_40734f-.L_407070
          .uleb128 .L_407368-.L_40734f
          .uleb128 .L_40770a-.L_407070
          .zero 1
          .uleb128 .L_407415-.L_407070
          .uleb128 .L_40741a-.L_407415
          .uleb128 .L_4076f5-.L_407070
          .zero 1
          .uleb128 .L_407433-.L_407070
          .uleb128 .L_407438-.L_407433
          .uleb128 .L_40772a-.L_407070
          .zero 1
          .uleb128 .L_4074bf-.L_407070
          .uleb128 .L_4074c4-.L_4074bf
          .uleb128 .L_40773c-.L_407070
          .zero 1
          .uleb128 .L_407557-.L_407070
          .uleb128 .L_40755c-.L_407557
          .uleb128 .L_407759-.L_407070
          .zero 1
          .uleb128 .L_407596-.L_407070
          .uleb128 .L_407631-.L_407596
          .uleb128 .L_40773c-.L_407070
          .zero 1
          .uleb128 .L_407705-.L_407070
          .uleb128 .L_40770a-.L_407705
          .zero 2
.L_444702:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44493d-.L_444707
.L_444707:
          .uleb128 .L_407889-.L_4077c0
          .uleb128 .L_40788e-.L_407889
          .zero 2
          .uleb128 .L_407a28-.L_4077c0
          .uleb128 .L_407a2d-.L_407a28
          .uleb128 .L_40ab2a-.L_4077c0
          .zero 1
          .uleb128 .L_407afe-.L_4077c0
          .uleb128 .L_407b03-.L_407afe
          .uleb128 .L_40ab4b-.L_4077c0
          .zero 1
          .uleb128 .L_407b13-.L_4077c0
          .uleb128 .L_407b4f-.L_407b13
          .uleb128 .L_40abd8-.L_4077c0
          .zero 1
          .uleb128 .L_407b5f-.L_4077c0
          .uleb128 .L_407b7b-.L_407b5f
          .uleb128 .L_40abec-.L_4077c0
          .zero 1
          .uleb128 .L_407cc4-.L_4077c0
          .uleb128 .L_407cc9-.L_407cc4
          .uleb128 .L_40abba-.L_4077c0
          .zero 1
          .uleb128 .L_407d9a-.L_4077c0
          .uleb128 .L_407d9f-.L_407d9a
          .uleb128 .L_40abf0-.L_4077c0
          .zero 1
          .uleb128 .L_407daf-.L_4077c0
          .uleb128 .L_407deb-.L_407daf
          .uleb128 .L_40abee-.L_4077c0
          .zero 1
          .uleb128 .L_407dfb-.L_4077c0
          .uleb128 .L_407e00-.L_407dfb
          .uleb128 .L_40abb3-.L_4077c0
          .zero 1
          .uleb128 .L_407ea0-.L_4077c0
          .uleb128 .L_407ea5-.L_407ea0
          .uleb128 .L_40accb-.L_4077c0
          .zero 1
          .uleb128 .L_407f5c-.L_4077c0
          .uleb128 .L_407f61-.L_407f5c
          .uleb128 .L_40aca3-.L_4077c0
          .zero 1
          .uleb128 .L_407fff-.L_4077c0
          .uleb128 .L_408004-.L_407fff
          .uleb128 .L_40abb5-.L_4077c0
          .zero 1
          .uleb128 .L_4080bb-.L_4077c0
          .uleb128 .L_4080c0-.L_4080bb
          .uleb128 .L_40acc6-.L_4077c0
          .zero 1
          .uleb128 .L_408132-.L_4077c0
          .uleb128 .L_408137-.L_408132
          .uleb128 .L_40abb5-.L_4077c0
          .zero 1
          .uleb128 .L_40839f-.L_4077c0
          .uleb128 .L_4083a4-.L_40839f
          .uleb128 .L_40ac0b-.L_4077c0
          .zero 1
          .uleb128 .L_408475-.L_4077c0
          .uleb128 .L_40847a-.L_408475
          .uleb128 .L_40ac06-.L_4077c0
          .zero 1
          .uleb128 .L_40848a-.L_4077c0
          .uleb128 .L_4084c6-.L_40848a
          .uleb128 .L_40ac04-.L_4077c0
          .zero 1
          .uleb128 .L_4084d6-.L_4077c0
          .uleb128 .L_40850f-.L_4084d6
          .uleb128 .L_40abff-.L_4077c0
          .zero 1
          .uleb128 .L_408523-.L_4077c0
          .uleb128 .L_40855e-.L_408523
          .uleb128 .L_40abfa-.L_4077c0
          .zero 1
          .uleb128 .L_408573-.L_4077c0
          .uleb128 .L_4085a7-.L_408573
          .uleb128 .L_40abf5-.L_4077c0
          .zero 1
          .uleb128 .L_408694-.L_4077c0
          .uleb128 .L_4086d6-.L_408694
          .zero 2
          .uleb128 .L_4086e1-.L_4077c0
          .uleb128 .L_4086e6-.L_4086e1
          .uleb128 .L_40ac10-.L_4077c0
          .zero 1
          .uleb128 .L_40871a-.L_4077c0
          .uleb128 .L_40871f-.L_40871a
          .zero 2
          .uleb128 .L_40872f-.L_4077c0
          .uleb128 .L_408768-.L_40872f
          .uleb128 .L_40aba7-.L_4077c0
          .zero 1
          .uleb128 .L_40877c-.L_4077c0
          .uleb128 .L_4087b2-.L_40877c
          .uleb128 .L_40aba5-.L_4077c0
          .zero 1
          .uleb128 .L_4087c5-.L_4077c0
          .uleb128 .L_4087f0-.L_4087c5
          .uleb128 .L_40ac94-.L_4077c0
          .zero 1
          .uleb128 .L_40892f-.L_4077c0
          .uleb128 .L_408934-.L_40892f
          .zero 2
          .uleb128 .L_408944-.L_4077c0
          .uleb128 .L_40897d-.L_408944
          .uleb128 .L_40abd6-.L_4077c0
          .zero 1
          .uleb128 .L_408991-.L_4077c0
          .uleb128 .L_4089ca-.L_408991
          .uleb128 .L_40abd4-.L_4077c0
          .zero 1
          .uleb128 .L_4089dd-.L_4077c0
          .uleb128 .L_408a08-.L_4089dd
          .uleb128 .L_40acda-.L_4077c0
          .zero 1
          .uleb128 .L_408a93-.L_4077c0
          .uleb128 .L_408ae7-.L_408a93
          .zero 2
          .uleb128 .L_408af7-.L_4077c0
          .uleb128 .L_408b30-.L_408af7
          .uleb128 .L_40abaf-.L_4077c0
          .zero 1
          .uleb128 .L_408b44-.L_4077c0
          .uleb128 .L_408b7a-.L_408b44
          .uleb128 .L_40abad-.L_4077c0
          .zero 1
          .uleb128 .L_408b8d-.L_4077c0
          .uleb128 .L_408bb8-.L_408b8d
          .uleb128 .L_40aaa5-.L_4077c0
          .zero 1
          .uleb128 .L_408c31-.L_4077c0
          .uleb128 .L_408c36-.L_408c31
          .zero 2
          .uleb128 .L_408c81-.L_4077c0
          .uleb128 .L_408c86-.L_408c81
          .uleb128 .L_40abb5-.L_4077c0
          .zero 1
          .uleb128 .L_408caf-.L_4077c0
          .uleb128 .L_408cb4-.L_408caf
          .uleb128 .L_40accb-.L_4077c0
          .zero 1
          .uleb128 .L_408e78-.L_4077c0
          .uleb128 .L_408e7d-.L_408e78
          .zero 2
          .uleb128 .L_408e8d-.L_4077c0
          .uleb128 .L_408ec6-.L_408e8d
          .uleb128 .L_40ac8f-.L_4077c0
          .zero 1
          .uleb128 .L_408eda-.L_4077c0
          .uleb128 .L_408f13-.L_408eda
          .uleb128 .L_40ac8a-.L_4077c0
          .zero 1
          .uleb128 .L_408f26-.L_4077c0
          .uleb128 .L_408f51-.L_408f26
          .uleb128 .L_40abbf-.L_4077c0
          .zero 1
          .uleb128 .L_408fb5-.L_4077c0
          .uleb128 .L_408ff5-.L_408fb5
          .zero 2
          .uleb128 .L_409000-.L_4077c0
          .uleb128 .L_409005-.L_409000
          .uleb128 .L_40ac9e-.L_4077c0
          .zero 1
          .uleb128 .L_40906c-.L_4077c0
          .uleb128 .L_4090e7-.L_40906c
          .zero 2
          .uleb128 .L_4090f7-.L_4077c0
          .uleb128 .L_409130-.L_4090f7
          .uleb128 .L_40ab82-.L_4077c0
          .zero 1
          .uleb128 .L_409144-.L_4077c0
          .uleb128 .L_40917a-.L_409144
          .uleb128 .L_40abd2-.L_4077c0
          .zero 1
          .uleb128 .L_40918d-.L_4077c0
          .uleb128 .L_4091b8-.L_40918d
          .uleb128 .L_40abcd-.L_4077c0
          .zero 1
          .uleb128 .L_40921a-.L_4077c0
          .uleb128 .L_40921f-.L_40921a
          .uleb128 .L_40accb-.L_4077c0
          .zero 1
          .uleb128 .L_4092da-.L_4077c0
          .uleb128 .L_4092df-.L_4092da
          .uleb128 .L_40acb7-.L_4077c0
          .zero 1
          .uleb128 .L_4093b0-.L_4077c0
          .uleb128 .L_4093b5-.L_4093b0
          .uleb128 .L_40acb2-.L_4077c0
          .zero 1
          .uleb128 .L_4093c5-.L_4077c0
          .uleb128 .L_409401-.L_4093c5
          .uleb128 .L_40acad-.L_4077c0
          .zero 1
          .uleb128 .L_409411-.L_4077c0
          .uleb128 .L_40944a-.L_409411
          .uleb128 .L_40aca8-.L_4077c0
          .zero 1
          .uleb128 .L_40945e-.L_4077c0
          .uleb128 .L_409499-.L_40945e
          .uleb128 .L_40acc1-.L_4077c0
          .zero 1
          .uleb128 .L_4094ae-.L_4077c0
          .uleb128 .L_4094e2-.L_4094ae
          .uleb128 .L_40acbc-.L_4077c0
          .zero 1
          .uleb128 .L_4095ce-.L_4077c0
          .uleb128 .L_40960e-.L_4095ce
          .zero 2
          .uleb128 .L_409619-.L_4077c0
          .uleb128 .L_40961e-.L_409619
          .uleb128 .L_40ac99-.L_4077c0
          .zero 1
          .uleb128 .L_4096bd-.L_4077c0
          .uleb128 .L_4096c2-.L_4096bd
          .zero 2
          .uleb128 .L_4096d2-.L_4077c0
          .uleb128 .L_40970b-.L_4096d2
          .uleb128 .L_40abb1-.L_4077c0
          .zero 1
          .uleb128 .L_40971f-.L_4077c0
          .uleb128 .L_409755-.L_40971f
          .uleb128 .L_40acd5-.L_4077c0
          .zero 1
          .uleb128 .L_409768-.L_4077c0
          .uleb128 .L_409793-.L_409768
          .uleb128 .L_40acd0-.L_4077c0
          .zero 1
          .uleb128 .L_409855-.L_4077c0
          .uleb128 .L_40985a-.L_409855
          .zero 2
          .uleb128 .L_40986a-.L_4077c0
          .uleb128 .L_4098a3-.L_40986a
          .uleb128 .L_40ac7b-.L_4077c0
          .zero 1
          .uleb128 .L_4098b7-.L_4077c0
          .uleb128 .L_4098ed-.L_4098b7
          .uleb128 .L_40ac76-.L_4077c0
          .zero 1
          .uleb128 .L_409900-.L_4077c0
          .uleb128 .L_40992b-.L_409900
          .uleb128 .L_40ac71-.L_4077c0
          .zero 1
          .uleb128 .L_409a18-.L_4077c0
          .uleb128 .L_409a1d-.L_409a18
          .uleb128 .L_40ac85-.L_4077c0
          .zero 1
          .uleb128 .L_409aee-.L_4077c0
          .uleb128 .L_409af3-.L_409aee
          .uleb128 .L_40ac80-.L_4077c0
          .zero 1
          .uleb128 .L_409b03-.L_4077c0
          .uleb128 .L_409b3f-.L_409b03
          .uleb128 .L_40ac67-.L_4077c0
          .zero 1
          .uleb128 .L_409b4f-.L_4077c0
          .uleb128 .L_409b88-.L_409b4f
          .uleb128 .L_40ac62-.L_4077c0
          .zero 1
          .uleb128 .L_409b9c-.L_4077c0
          .uleb128 .L_409bd4-.L_409b9c
          .uleb128 .L_40ac5d-.L_4077c0
          .zero 1
          .uleb128 .L_409be9-.L_4077c0
          .uleb128 .L_409c1d-.L_409be9
          .uleb128 .L_40ac58-.L_4077c0
          .zero 1
          .uleb128 .L_409cff-.L_4077c0
          .uleb128 .L_409d04-.L_409cff
          .zero 2
          .uleb128 .L_409d14-.L_4077c0
          .uleb128 .L_409d4d-.L_409d14
          .uleb128 .L_40abab-.L_4077c0
          .zero 1
          .uleb128 .L_409d61-.L_4077c0
          .uleb128 .L_409d9c-.L_409d61
          .uleb128 .L_40aba9-.L_4077c0
          .zero 1
          .uleb128 .L_409db1-.L_4077c0
          .uleb128 .L_409de0-.L_409db1
          .uleb128 .L_40ac6c-.L_4077c0
          .zero 1
          .uleb128 .L_409efd-.L_4077c0
          .uleb128 .L_409f02-.L_409efd
          .uleb128 .L_40ac53-.L_4077c0
          .zero 1
          .uleb128 .L_409fc6-.L_4077c0
          .uleb128 .L_409fcb-.L_409fc6
          .uleb128 .L_40ac15-.L_4077c0
          .zero 1
          .uleb128 .L_40a00e-.L_4077c0
          .uleb128 .L_40a013-.L_40a00e
          .zero 2
          .uleb128 .L_40a023-.L_4077c0
          .uleb128 .L_40a05c-.L_40a023
          .uleb128 .L_40abcb-.L_4077c0
          .zero 1
          .uleb128 .L_40a070-.L_4077c0
          .uleb128 .L_40a0a6-.L_40a070
          .uleb128 .L_40abc9-.L_4077c0
          .zero 1
          .uleb128 .L_40a0b9-.L_4077c0
          .uleb128 .L_40a0e4-.L_40a0b9
          .uleb128 .L_40abc4-.L_4077c0
          .zero 1
          .uleb128 .L_40a170-.L_4077c0
          .uleb128 .L_40a175-.L_40a170
          .uleb128 .L_40aba0-.L_4077c0
          .zero 1
          .uleb128 .L_40a239-.L_4077c0
          .uleb128 .L_40a23e-.L_40a239
          .uleb128 .L_40acdf-.L_4077c0
          .zero 1
          .uleb128 .L_40a2f1-.L_4077c0
          .uleb128 .L_40a2f6-.L_40a2f1
          .uleb128 .L_40ab0a-.L_4077c0
          .zero 1
          .uleb128 .L_40a3ba-.L_4077c0
          .uleb128 .L_40a3bf-.L_40a3ba
          .uleb128 .L_40ab84-.L_4077c0
          .zero 1
          .uleb128 .L_40a417-.L_4077c0
          .uleb128 .L_40a41c-.L_40a417
          .zero 2
          .uleb128 .L_40a427-.L_4077c0
          .uleb128 .L_40a42c-.L_40a427
          .uleb128 .L_40ac34-.L_4077c0
          .zero 1
          .uleb128 .L_40a445-.L_4077c0
          .uleb128 .L_40a44a-.L_40a445
          .uleb128 .L_40ac53-.L_4077c0
          .zero 1
          .uleb128 .L_40a511-.L_4077c0
          .uleb128 .L_40a516-.L_40a511
          .uleb128 .L_40aba0-.L_4077c0
          .zero 1
          .uleb128 .L_40a5e2-.L_4077c0
          .uleb128 .L_40a5e7-.L_40a5e2
          .uleb128 .L_40ab0a-.L_4077c0
          .zero 1
          .uleb128 .L_40a6a3-.L_4077c0
          .uleb128 .L_40a6a8-.L_40a6a3
          .uleb128 .L_40ac53-.L_4077c0
          .zero 1
          .uleb128 .L_40a6b6-.L_4077c0
          .uleb128 .L_40a6bb-.L_40a6b6
          .uleb128 .L_40aba0-.L_4077c0
          .zero 1
          .uleb128 .L_40a74b-.L_4077c0
          .uleb128 .L_40a750-.L_40a74b
          .zero 2
          .uleb128 .L_40a760-.L_4077c0
          .uleb128 .L_40a799-.L_40a760
          .uleb128 .L_40ab7a-.L_4077c0
          .zero 1
          .uleb128 .L_40a7ad-.L_4077c0
          .uleb128 .L_40a7e3-.L_40a7ad
          .uleb128 .L_40ab72-.L_4077c0
          .zero 1
          .uleb128 .L_40a7f6-.L_4077c0
          .uleb128 .L_40a821-.L_40a7f6
          .uleb128 .L_40ab08-.L_4077c0
          .zero 1
          .uleb128 .L_40a997-.L_4077c0
          .uleb128 .L_40a99c-.L_40a997
          .uleb128 .L_40ab0a-.L_4077c0
          .zero 1
          .uleb128 .L_40aae9-.L_4077c0
          .uleb128 .L_40abec-.L_40aae9
          .zero 2
.L_44493d:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44497c-.L_444941
.L_444941:
          .uleb128 .L_40add8-.L_40acf0
          .uleb128 .L_40addd-.L_40add8
          .zero 2
          .uleb128 .L_40aed9-.L_40acf0
          .uleb128 .L_40aede-.L_40aed9
          .uleb128 .L_40b527-.L_40acf0
          .zero 1
          .uleb128 .L_40af9b-.L_40acf0
          .uleb128 .L_40afa0-.L_40af9b
          .uleb128 .L_40b4e6-.L_40acf0
          .zero 1
          .uleb128 .L_40afb0-.L_40acf0
          .uleb128 .L_40afec-.L_40afb0
          .uleb128 .L_40b4d2-.L_40acf0
          .zero 1
          .uleb128 .L_40affc-.L_40acf0
          .uleb128 .L_40b018-.L_40affc
          .uleb128 .L_40b4bd-.L_40acf0
          .zero 1
          .uleb128 .L_40b0b3-.L_40acf0
          .uleb128 .L_40b1a9-.L_40b0b3
          .zero 2
          .uleb128 .L_40b270-.L_40acf0
          .uleb128 .L_40b275-.L_40b270
          .uleb128 .L_40b4a5-.L_40acf0
          .zero 1
          .uleb128 .L_40b302-.L_40acf0
          .uleb128 .L_40b307-.L_40b302
          .uleb128 .L_40b4d0-.L_40acf0
          .zero 1
          .uleb128 .L_40b341-.L_40acf0
          .uleb128 .L_40b3d8-.L_40b341
          .uleb128 .L_40b4a5-.L_40acf0
          .zero 1
          .uleb128 .L_40b4cb-.L_40acf0
          .uleb128 .L_40b527-.L_40b4cb
          .zero 2
.L_44497c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444996-.L_444980
.L_444980:
          .uleb128 .L_40b6fd-.L_40b640
          .uleb128 .L_40b702-.L_40b6fd
          .zero 2
          .uleb128 .L_40b733-.L_40b640
          .uleb128 .L_40b78f-.L_40b733
          .uleb128 .L_40b796-.L_40b640
          .zero 1
          .uleb128 .L_40b7af-.L_40b640
          .uleb128 .L_40b7b4-.L_40b7af
          .zero 2
          .uleb128 .L_40b7cc-.L_40b640
          .uleb128 .L_40b7d1-.L_40b7cc
          .uleb128 .L_40b796-.L_40b640
          .zero 1
.L_444996:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4449ac-.L_44499a
.L_44499a:
          .uleb128 .L_40b8db-.L_40b7e0
          .uleb128 .L_40bae3-.L_40b8db
          .uleb128 .L_40bae3-.L_40b7e0
          .zero 1
          .uleb128 .L_40bb05-.L_40b7e0
          .uleb128 .L_40bb0a-.L_40bb05
          .zero 2
          .uleb128 .L_40bb16-.L_40b7e0
          .uleb128 .L_40bb27-.L_40bb16
          .uleb128 .L_40bae3-.L_40b7e0
          .zero 1
.L_4449ac:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4449b0-.L_4449b0
.L_4449b0:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4449cf-.L_4449b4
.L_4449b4:
          .uleb128 .L_41019e-.L_410170
          .uleb128 .L_4101a3-.L_41019e
          .zero 2
          .uleb128 .L_4101ec-.L_410170
          .uleb128 .L_4101f1-.L_4101ec
          .uleb128 .L_410425-.L_410170
          .zero 1
          .uleb128 .L_410272-.L_410170
          .uleb128 .L_410277-.L_410272
          .uleb128 .L_410442-.L_410170
          .zero 1
          .uleb128 .L_4102c2-.L_410170
          .uleb128 .L_41038c-.L_4102c2
          .uleb128 .L_410425-.L_410170
          .zero 1
          .uleb128 .L_41043d-.L_410170
          .uleb128 .L_410442-.L_41043d
          .zero 2
.L_4449cf:
          .zero 1
.L_4449d0:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4449f6-.L_4449d4
.L_4449d4:
          .uleb128 .L_40cbda-.L_40cb90
          .uleb128 .L_40cbdf-.L_40cbda
          .zero 2
          .uleb128 .L_40cc52-.L_40cb90
          .uleb128 .L_40cc57-.L_40cc52
          .uleb128 .L_40cda8-.L_40cb90
          .zero 1
          .uleb128 .L_40cc64-.L_40cb90
          .uleb128 .L_40cc69-.L_40cc64
          .uleb128 .L_40cdd2-.L_40cb90
          .zero 1
          .uleb128 .L_40cca4-.L_40cb90
          .uleb128 .L_40cda8-.L_40cca4
          .uleb128 .L_40cda8-.L_40cb90
          .zero 1
          .uleb128 .L_40cdc1-.L_40cb90
          .uleb128 .L_40cdc6-.L_40cdc1
          .zero 2
          .uleb128 .L_40cdcd-.L_40cb90
          .uleb128 .L_40cdd2-.L_40cdcd
          .uleb128 .L_40cda8-.L_40cb90
          .zero 1
.L_4449f6:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444a1c-.L_4449fa
.L_4449fa:
          .uleb128 .L_40d16e-.L_40d0c0
          .uleb128 .L_40d173-.L_40d16e
          .uleb128 .L_40d285-.L_40d0c0
          .zero 1
          .uleb128 .L_40d206-.L_40d0c0
          .uleb128 .L_40d20b-.L_40d206
          .uleb128 .L_40d2bf-.L_40d0c0
          .zero 1
          .uleb128 .L_40d21b-.L_40d0c0
          .uleb128 .L_40d257-.L_40d21b
          .uleb128 .L_40d2ab-.L_40d0c0
          .zero 1
          .uleb128 .L_40d267-.L_40d0c0
          .uleb128 .L_40d278-.L_40d267
          .uleb128 .L_40d29e-.L_40d0c0
          .zero 1
          .uleb128 .L_40d299-.L_40d0c0
          .uleb128 .L_40d29e-.L_40d299
          .zero 2
          .uleb128 .L_40d2ba-.L_40d0c0
          .uleb128 .L_40d2bf-.L_40d2ba
          .zero 2
.L_444a1c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444a50-.L_444a20
.L_444a20:
          .uleb128 .L_410510-.L_410450
          .uleb128 .L_410515-.L_410510
          .uleb128 .L_410a42-.L_410450
          .zero 1
          .uleb128 .L_4105d2-.L_410450
          .uleb128 .L_4105d7-.L_4105d2
          .uleb128 .L_410a00-.L_410450
          .zero 1
          .uleb128 .L_4105e7-.L_410450
          .uleb128 .L_410623-.L_4105e7
          .uleb128 .L_410a47-.L_410450
          .zero 1
          .uleb128 .L_410633-.L_410450
          .uleb128 .L_410638-.L_410633
          .uleb128 .L_410a5b-.L_410450
          .zero 1
          .uleb128 .L_410760-.L_410450
          .uleb128 .L_410765-.L_410760
          .uleb128 .L_410a40-.L_410450
          .zero 1
          .uleb128 .L_4107f7-.L_410450
          .uleb128 .L_4107fc-.L_4107f7
          .uleb128 .L_4109e3-.L_410450
          .zero 1
          .uleb128 .L_410842-.L_410450
          .uleb128 .L_4108de-.L_410842
          .uleb128 .L_410a40-.L_410450
          .zero 1
          .uleb128 .L_410a3b-.L_410450
          .uleb128 .L_410a6e-.L_410a3b
          .zero 2
.L_444a50:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444a84-.L_444a54
.L_444a54:
          .uleb128 .L_410b30-.L_410a70
          .uleb128 .L_410b35-.L_410b30
          .uleb128 .L_411062-.L_410a70
          .zero 1
          .uleb128 .L_410bf2-.L_410a70
          .uleb128 .L_410bf7-.L_410bf2
          .uleb128 .L_411020-.L_410a70
          .zero 1
          .uleb128 .L_410c07-.L_410a70
          .uleb128 .L_410c43-.L_410c07
          .uleb128 .L_411067-.L_410a70
          .zero 1
          .uleb128 .L_410c53-.L_410a70
          .uleb128 .L_410c58-.L_410c53
          .uleb128 .L_41107b-.L_410a70
          .zero 1
          .uleb128 .L_410d80-.L_410a70
          .uleb128 .L_410d85-.L_410d80
          .uleb128 .L_411060-.L_410a70
          .zero 1
          .uleb128 .L_410e17-.L_410a70
          .uleb128 .L_410e1c-.L_410e17
          .uleb128 .L_411003-.L_410a70
          .zero 1
          .uleb128 .L_410e62-.L_410a70
          .uleb128 .L_410efe-.L_410e62
          .uleb128 .L_411060-.L_410a70
          .zero 1
          .uleb128 .L_41105b-.L_410a70
          .uleb128 .L_41108e-.L_41105b
          .zero 2
.L_444a84:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444ab8-.L_444a88
.L_444a88:
          .uleb128 .L_411150-.L_411090
          .uleb128 .L_411155-.L_411150
          .uleb128 .L_411682-.L_411090
          .zero 1
          .uleb128 .L_411212-.L_411090
          .uleb128 .L_411217-.L_411212
          .uleb128 .L_411640-.L_411090
          .zero 1
          .uleb128 .L_411227-.L_411090
          .uleb128 .L_411263-.L_411227
          .uleb128 .L_411687-.L_411090
          .zero 1
          .uleb128 .L_411273-.L_411090
          .uleb128 .L_411278-.L_411273
          .uleb128 .L_41169b-.L_411090
          .zero 1
          .uleb128 .L_4113a0-.L_411090
          .uleb128 .L_4113a5-.L_4113a0
          .uleb128 .L_411680-.L_411090
          .zero 1
          .uleb128 .L_411437-.L_411090
          .uleb128 .L_41143c-.L_411437
          .uleb128 .L_411623-.L_411090
          .zero 1
          .uleb128 .L_411482-.L_411090
          .uleb128 .L_41151e-.L_411482
          .uleb128 .L_411680-.L_411090
          .zero 1
          .uleb128 .L_41167b-.L_411090
          .uleb128 .L_4116ae-.L_41167b
          .zero 2
.L_444ab8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444aec-.L_444abc
.L_444abc:
          .uleb128 .L_40d940-.L_40d6f0
          .uleb128 .L_40d945-.L_40d940
          .uleb128 .L_40ddcd-.L_40d6f0
          .zero 1
          .uleb128 .L_40d9ff-.L_40d6f0
          .uleb128 .L_40da04-.L_40d9ff
          .uleb128 .L_40ddfd-.L_40d6f0
          .zero 1
          .uleb128 .L_40da14-.L_40d6f0
          .uleb128 .L_40da50-.L_40da14
          .uleb128 .L_40dde9-.L_40d6f0
          .zero 1
          .uleb128 .L_40da60-.L_40d6f0
          .uleb128 .L_40da71-.L_40da60
          .uleb128 .L_40ddba-.L_40d6f0
          .zero 1
          .uleb128 .L_40db64-.L_40d6f0
          .uleb128 .L_40db69-.L_40db64
          .uleb128 .L_40dda0-.L_40d6f0
          .zero 1
          .uleb128 .L_40dbf9-.L_40d6f0
          .uleb128 .L_40dbfe-.L_40dbf9
          .uleb128 .L_40ddb8-.L_40d6f0
          .zero 1
          .uleb128 .L_40dc35-.L_40d6f0
          .uleb128 .L_40dccb-.L_40dc35
          .uleb128 .L_40dda0-.L_40d6f0
          .zero 1
          .uleb128 .L_40ddc8-.L_40d6f0
          .uleb128 .L_40ddfd-.L_40ddc8
          .zero 2
.L_444aec:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_444b18-.L_444aef
.L_444aef:
          .byte 0x1
          .uleb128 .L_444b11-.L_444af1
.L_444af1:
          .uleb128 .L_4116c6-.L_4116b0
          .uleb128 .L_4116cb-.L_4116c6
          .zero 2
          .uleb128 .L_411722-.L_4116b0
          .uleb128 .L_411727-.L_411722
          .uleb128 .L_41177b-.L_4116b0
          .zero 1
          .uleb128 .L_41173e-.L_4116b0
          .uleb128 .L_411743-.L_41173e
          .uleb128 .L_411793-.L_4116b0
          .byte 0x1
          .uleb128 .L_41178e-.L_4116b0
          .uleb128 .L_411793-.L_41178e
          .zero 2
          .uleb128 .L_41179b-.L_4116b0
          .uleb128 .L_4117a0-.L_41179b
          .uleb128 .L_4117a0-.L_4116b0
          .byte 0x1
          .uleb128 .L_4117c7-.L_4116b0
          .uleb128 .L_4117cc-.L_4117c7
          .uleb128 .L_4117cc-.L_4116b0
          .zero 1
.L_444b11:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444b18:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444b41-.L_444b1c
.L_444b1c:
          .uleb128 .L_40df40-.L_40de30
          .uleb128 .L_40df45-.L_40df40
          .uleb128 .L_40e458-.L_40de30
          .zero 1
          .uleb128 .L_40dfff-.L_40de30
          .uleb128 .L_40e004-.L_40dfff
          .uleb128 .L_40e489-.L_40de30
          .zero 1
          .uleb128 .L_40e014-.L_40de30
          .uleb128 .L_40e050-.L_40e014
          .uleb128 .L_40e4aa-.L_40de30
          .zero 1
          .uleb128 .L_40e1e5-.L_40de30
          .uleb128 .L_40e1ea-.L_40e1e5
          .uleb128 .L_40e487-.L_40de30
          .zero 1
          .uleb128 .L_40e27b-.L_40de30
          .uleb128 .L_40e280-.L_40e27b
          .uleb128 .L_40e46e-.L_40de30
          .zero 1
          .uleb128 .L_40e2c1-.L_40de30
          .uleb128 .L_40e35d-.L_40e2c1
          .uleb128 .L_40e487-.L_40de30
          .zero 1
.L_444b41:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444b55-.L_444b45
.L_444b45:
          .uleb128 .L_40e558-.L_40e4f0
          .uleb128 .L_40e55d-.L_40e558
          .zero 2
          .uleb128 .L_40e5d9-.L_40e4f0
          .uleb128 .L_40e74b-.L_40e5d9
          .uleb128 .L_40e764-.L_40e4f0
          .zero 1
          .uleb128 .L_40e779-.L_40e4f0
          .uleb128 .L_40e77e-.L_40e779
          .zero 2
.L_444b55:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444b89-.L_444b59
.L_444b59:
          .uleb128 .L_411db3-.L_411c90
          .uleb128 .L_411db8-.L_411db3
          .uleb128 .L_412366-.L_411c90
          .zero 1
          .uleb128 .L_411e72-.L_411c90
          .uleb128 .L_411e77-.L_411e72
          .uleb128 .L_412304-.L_411c90
          .zero 1
          .uleb128 .L_411e87-.L_411c90
          .uleb128 .L_411ec3-.L_411e87
          .uleb128 .L_412352-.L_411c90
          .zero 1
          .uleb128 .L_411ed3-.L_411c90
          .uleb128 .L_411ed8-.L_411ed3
          .uleb128 .L_41233f-.L_411c90
          .zero 1
          .uleb128 .L_412096-.L_411c90
          .uleb128 .L_41209b-.L_412096
          .uleb128 .L_4122e6-.L_411c90
          .zero 1
          .uleb128 .L_41212c-.L_411c90
          .uleb128 .L_412131-.L_41212c
          .uleb128 .L_412302-.L_411c90
          .zero 1
          .uleb128 .L_412179-.L_411c90
          .uleb128 .L_412211-.L_412179
          .uleb128 .L_4122e6-.L_411c90
          .zero 1
          .uleb128 .L_41233a-.L_411c90
          .uleb128 .L_412366-.L_41233a
          .zero 2
.L_444b89:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444b8d-.L_444b8d
.L_444b8d:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444b9d-.L_444b91
.L_444b91:
          .uleb128 .L_40ed84-.L_40ece0
          .uleb128 .L_40ef3c-.L_40ed84
          .uleb128 .L_40ef3c-.L_40ece0
          .zero 1
          .uleb128 .L_40ef51-.L_40ece0
          .uleb128 .L_40ef56-.L_40ef51
          .zero 2
.L_444b9d:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444bd6-.L_444ba1
.L_444ba1:
          .uleb128 .L_40f28e-.L_40f180
          .uleb128 .L_40f293-.L_40f28e
          .zero 2
          .uleb128 .L_40f32a-.L_40f180
          .uleb128 .L_40f32f-.L_40f32a
          .uleb128 .L_40f8ef-.L_40f180
          .zero 1
          .uleb128 .L_40f3f0-.L_40f180
          .uleb128 .L_40f3f5-.L_40f3f0
          .uleb128 .L_40f8a6-.L_40f180
          .zero 1
          .uleb128 .L_40f406-.L_40f180
          .uleb128 .L_40f444-.L_40f406
          .uleb128 .L_40f891-.L_40f180
          .zero 1
          .uleb128 .L_40f455-.L_40f180
          .uleb128 .L_40f468-.L_40f455
          .uleb128 .L_40f87e-.L_40f180
          .zero 1
          .uleb128 .L_40f60b-.L_40f180
          .uleb128 .L_40f6bb-.L_40f60b
          .uleb128 .L_40f8f4-.L_40f180
          .zero 1
          .uleb128 .L_40f74d-.L_40f180
          .uleb128 .L_40f752-.L_40f74d
          .uleb128 .L_40f85c-.L_40f180
          .zero 1
          .uleb128 .L_40f78a-.L_40f180
          .uleb128 .L_40f78f-.L_40f78a
          .uleb128 .L_40f8f4-.L_40f180
          .zero 1
          .uleb128 .L_40f88c-.L_40f180
          .uleb128 .L_40f8ef-.L_40f88c
          .zero 2
.L_444bd6:
          .zero 2
.L_444bd8:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_444bfc-.L_444bdb
.L_444bdb:
          .byte 0x1
          .uleb128 .L_444bf3-.L_444bdd
.L_444bdd:
          .uleb128 .L_412fe5-.L_412e20
          .uleb128 .L_413031-.L_412fe5
          .zero 2
          .uleb128 .L_413055-.L_412e20
          .uleb128 .L_41305a-.L_413055
          .uleb128 .L_41319d-.L_412e20
          .byte 0x1
          .uleb128 .L_4131ad-.L_412e20
          .uleb128 .L_4131b2-.L_4131ad
          .uleb128 .L_4131b2-.L_412e20
          .zero 1
          .uleb128 .L_4131bd-.L_412e20
          .uleb128 .L_4131c2-.L_4131bd
          .zero 2
.L_444bf3:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444bfc:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444c3c-.L_444c00
.L_444c00:
          .uleb128 .L_4136ef-.L_4136c0
          .uleb128 .L_413785-.L_4136ef
          .zero 2
          .uleb128 .L_413999-.L_4136c0
          .uleb128 .L_41399e-.L_413999
          .uleb128 .L_413fc0-.L_4136c0
          .zero 1
          .uleb128 .L_413a5b-.L_4136c0
          .uleb128 .L_413a60-.L_413a5b
          .uleb128 .L_413fdc-.L_4136c0
          .zero 1
          .uleb128 .L_413a70-.L_4136c0
          .uleb128 .L_413aac-.L_413a70
          .uleb128 .L_414006-.L_4136c0
          .zero 1
          .uleb128 .L_413abc-.L_4136c0
          .uleb128 .L_413ac1-.L_413abc
          .uleb128 .L_41401a-.L_4136c0
          .zero 1
          .uleb128 .L_413b45-.L_4136c0
          .uleb128 .L_413b4a-.L_413b45
          .uleb128 .L_413fbe-.L_4136c0
          .zero 1
          .uleb128 .L_413bdb-.L_4136c0
          .uleb128 .L_413be0-.L_413bdb
          .uleb128 .L_413fa2-.L_4136c0
          .zero 1
          .uleb128 .L_413cb3-.L_4136c0
          .uleb128 .L_413dad-.L_413cb3
          .zero 2
          .uleb128 .L_413e1f-.L_4136c0
          .uleb128 .L_413ebd-.L_413e1f
          .uleb128 .L_413fbe-.L_4136c0
          .zero 1
          .uleb128 .L_413ec7-.L_4136c0
          .uleb128 .L_41402d-.L_413ec7
          .zero 2
.L_444c3c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444c4d-.L_444c40
.L_444c40:
          .uleb128 .L_40ff48-.L_40ff20
          .uleb128 .L_40ff4d-.L_40ff48
          .zero 2
          .uleb128 .L_40ff67-.L_40ff20
          .uleb128 .L_40ff6c-.L_40ff67
          .uleb128 .L_40ff9e-.L_40ff20
          .zero 1
          .uleb128 .L_40ffb0-.L_40ff20
          .uleb128 .L_40ffb5-.L_40ffb0
          .zero 2
.L_444c4d:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444c5f-.L_444c51
.L_444c51:
          .uleb128 .L_40ffe8-.L_40ffc0
          .uleb128 .L_40ffed-.L_40ffe8
          .zero 2
          .uleb128 .L_41000f-.L_40ffc0
          .uleb128 .L_410014-.L_41000f
          .uleb128 .L_41004f-.L_40ffc0
          .zero 1
          .uleb128 .L_41005d-.L_40ffc0
          .uleb128 .L_410062-.L_41005d
          .zero 2
.L_444c5f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444c71-.L_444c63
.L_444c63:
          .uleb128 .L_410098-.L_410070
          .uleb128 .L_41009d-.L_410098
          .zero 2
          .uleb128 .L_4100bf-.L_410070
          .uleb128 .L_4100c4-.L_4100bf
          .uleb128 .L_4100ff-.L_410070
          .zero 1
          .uleb128 .L_41010d-.L_410070
          .uleb128 .L_410112-.L_41010d
          .zero 2
.L_444c71:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444c80-.L_444c75
.L_444c75:
          .uleb128 .L_414d9c-.L_414cf0
          .uleb128 .L_414da1-.L_414d9c
          .uleb128 .L_414dc5-.L_414cf0
          .zero 1
          .uleb128 .L_414dd8-.L_414cf0
          .uleb128 .L_414ddd-.L_414dd8
          .zero 2
.L_444c80:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444c93-.L_444c84
.L_444c84:
          .uleb128 .L_4152b1-.L_415280
          .uleb128 .L_4152b6-.L_4152b1
          .zero 2
          .uleb128 .L_41537d-.L_415280
          .uleb128 .L_4153b0-.L_41537d
          .uleb128 .L_4153b0-.L_415280
          .zero 1
          .uleb128 .L_4153c8-.L_415280
          .uleb128 .L_4153cd-.L_4153c8
          .zero 2
.L_444c93:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444ccb-.L_444c97
.L_444c97:
          .uleb128 .L_41559a-.L_415550
          .uleb128 .L_41559f-.L_41559a
          .zero 2
          .uleb128 .L_41568f-.L_415550
          .uleb128 .L_415694-.L_41568f
          .uleb128 .L_415b65-.L_415550
          .zero 1
          .uleb128 .L_41574e-.L_415550
          .uleb128 .L_415753-.L_41574e
          .uleb128 .L_415b81-.L_415550
          .zero 1
          .uleb128 .L_415763-.L_415550
          .uleb128 .L_41579f-.L_415763
          .uleb128 .L_415b20-.L_415550
          .zero 1
          .uleb128 .L_4157af-.L_415550
          .uleb128 .L_4157b4-.L_4157af
          .uleb128 .L_415b34-.L_415550
          .zero 1
          .uleb128 .L_4158aa-.L_415550
          .uleb128 .L_415954-.L_4158aa
          .uleb128 .L_415b63-.L_415550
          .zero 1
          .uleb128 .L_4159e5-.L_415550
          .uleb128 .L_4159ea-.L_4159e5
          .uleb128 .L_415b47-.L_415550
          .zero 1
          .uleb128 .L_415a90-.L_415550
          .uleb128 .L_415a95-.L_415a90
          .uleb128 .L_415b63-.L_415550
          .zero 1
          .uleb128 .L_415b16-.L_415550
          .uleb128 .L_415b81-.L_415b16
          .zero 2
.L_444ccb:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444d76-.L_444cd0
.L_444cd0:
          .uleb128 .L_415c9d-.L_415c60
          .uleb128 .L_415e6e-.L_415c9d
          .zero 2
          .uleb128 .L_41600d-.L_415c60
          .uleb128 .L_416012-.L_41600d
          .uleb128 .L_4171da-.L_415c60
          .zero 1
          .uleb128 .L_4160e3-.L_415c60
          .uleb128 .L_4160e8-.L_4160e3
          .uleb128 .L_4171fb-.L_415c60
          .zero 1
          .uleb128 .L_4160f8-.L_415c60
          .uleb128 .L_416134-.L_4160f8
          .uleb128 .L_417269-.L_415c60
          .zero 1
          .uleb128 .L_416144-.L_415c60
          .uleb128 .L_41617b-.L_416144
          .uleb128 .L_41721d-.L_415c60
          .zero 1
          .uleb128 .L_4162a6-.L_415c60
          .uleb128 .L_4162ab-.L_4162a6
          .uleb128 .L_417248-.L_415c60
          .zero 1
          .uleb128 .L_41634d-.L_415c60
          .uleb128 .L_4163d0-.L_41634d
          .zero 2
          .uleb128 .L_416575-.L_415c60
          .uleb128 .L_41657a-.L_416575
          .uleb128 .L_417264-.L_415c60
          .zero 1
          .uleb128 .L_41664b-.L_415c60
          .uleb128 .L_416650-.L_41664b
          .uleb128 .L_41727a-.L_415c60
          .zero 1
          .uleb128 .L_416660-.L_415c60
          .uleb128 .L_41669c-.L_416660
          .uleb128 .L_41724e-.L_415c60
          .zero 1
          .uleb128 .L_4166ac-.L_415c60
          .uleb128 .L_4166bd-.L_4166ac
          .uleb128 .L_417262-.L_415c60
          .zero 1
          .uleb128 .L_4167ed-.L_415c60
          .uleb128 .L_4167f2-.L_4167ed
          .uleb128 .L_41726f-.L_415c60
          .zero 1
          .uleb128 .L_4168c3-.L_415c60
          .uleb128 .L_4168c8-.L_4168c3
          .uleb128 .L_417274-.L_415c60
          .zero 1
          .uleb128 .L_4168d8-.L_415c60
          .uleb128 .L_416914-.L_4168d8
          .uleb128 .L_417276-.L_415c60
          .zero 1
          .uleb128 .L_416924-.L_415c60
          .uleb128 .L_416935-.L_416924
          .uleb128 .L_417278-.L_415c60
          .zero 1
          .uleb128 .L_4169b0-.L_415c60
          .uleb128 .L_4169b5-.L_4169b0
          .uleb128 .L_41724a-.L_415c60
          .zero 1
          .uleb128 .L_416a39-.L_415c60
          .uleb128 .L_416a3e-.L_416a39
          .uleb128 .L_41724c-.L_415c60
          .zero 1
          .uleb128 .L_416a91-.L_415c60
          .uleb128 .L_416a96-.L_416a91
          .uleb128 .L_417248-.L_415c60
          .zero 1
          .uleb128 .L_416b1a-.L_415c60
          .uleb128 .L_416b1f-.L_416b1a
          .uleb128 .L_41726b-.L_415c60
          .zero 1
          .uleb128 .L_416bbe-.L_415c60
          .uleb128 .L_416bc3-.L_416bbe
          .uleb128 .L_417230-.L_415c60
          .zero 1
          .uleb128 .L_416c5c-.L_415c60
          .uleb128 .L_416c61-.L_416c5c
          .uleb128 .L_41726d-.L_415c60
          .zero 1
          .uleb128 .L_416c9d-.L_415c60
          .uleb128 .L_416ca2-.L_416c9d
          .zero 2
          .uleb128 .L_416cce-.L_415c60
          .uleb128 .L_416cd3-.L_416cce
          .uleb128 .L_41724a-.L_415c60
          .zero 1
          .uleb128 .L_416d72-.L_415c60
          .uleb128 .L_416d77-.L_416d72
          .uleb128 .L_417230-.L_415c60
          .zero 1
          .uleb128 .L_416ec7-.L_415c60
          .uleb128 .L_416ecc-.L_416ec7
          .uleb128 .L_417248-.L_415c60
          .zero 1
          .uleb128 .L_416f40-.L_415c60
          .uleb128 .L_416f45-.L_416f40
          .uleb128 .L_41724a-.L_415c60
          .zero 1
          .uleb128 .L_416f51-.L_415c60
          .uleb128 .L_416f56-.L_416f51
          .uleb128 .L_417230-.L_415c60
          .zero 1
          .uleb128 .L_4170e4-.L_415c60
          .uleb128 .L_417262-.L_4170e4
          .zero 2
.L_444d76:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444d85-.L_444d7a
.L_444d7a:
          .uleb128 .L_4175a8-.L_4174b0
          .uleb128 .L_4175ad-.L_4175a8
          .uleb128 .L_41762b-.L_4174b0
          .zero 1
          .uleb128 .L_417639-.L_4174b0
          .uleb128 .L_41763e-.L_417639
          .zero 2
.L_444d85:
          .zero 3
.L_444d88:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444dbc-.L_444d8c
.L_444d8c:
          .uleb128 .L_418a51-.L_418990
          .uleb128 .L_418a56-.L_418a51
          .uleb128 .L_418f92-.L_418990
          .zero 1
          .uleb128 .L_418b13-.L_418990
          .uleb128 .L_418b18-.L_418b13
          .uleb128 .L_418f50-.L_418990
          .zero 1
          .uleb128 .L_418b28-.L_418990
          .uleb128 .L_418b64-.L_418b28
          .uleb128 .L_418f97-.L_418990
          .zero 1
          .uleb128 .L_418b74-.L_418990
          .uleb128 .L_418b79-.L_418b74
          .uleb128 .L_418fab-.L_418990
          .zero 1
          .uleb128 .L_418ca8-.L_418990
          .uleb128 .L_418cad-.L_418ca8
          .uleb128 .L_418f90-.L_418990
          .zero 1
          .uleb128 .L_418d3f-.L_418990
          .uleb128 .L_418d44-.L_418d3f
          .uleb128 .L_418f33-.L_418990
          .zero 1
          .uleb128 .L_418d8a-.L_418990
          .uleb128 .L_418e2e-.L_418d8a
          .uleb128 .L_418f90-.L_418990
          .zero 1
          .uleb128 .L_418f8b-.L_418990
          .uleb128 .L_418fbe-.L_418f8b
          .zero 2
.L_444dbc:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444df0-.L_444dc0
.L_444dc0:
          .uleb128 .L_41ac93-.L_41ab60
          .uleb128 .L_41ac98-.L_41ac93
          .uleb128 .L_41b257-.L_41ab60
          .zero 1
          .uleb128 .L_41ad52-.L_41ab60
          .uleb128 .L_41ad57-.L_41ad52
          .uleb128 .L_41b1f5-.L_41ab60
          .zero 1
          .uleb128 .L_41ad67-.L_41ab60
          .uleb128 .L_41ada3-.L_41ad67
          .uleb128 .L_41b243-.L_41ab60
          .zero 1
          .uleb128 .L_41adb3-.L_41ab60
          .uleb128 .L_41adb8-.L_41adb3
          .uleb128 .L_41b230-.L_41ab60
          .zero 1
          .uleb128 .L_41af87-.L_41ab60
          .uleb128 .L_41af8c-.L_41af87
          .uleb128 .L_41b1d7-.L_41ab60
          .zero 1
          .uleb128 .L_41b01d-.L_41ab60
          .uleb128 .L_41b022-.L_41b01d
          .uleb128 .L_41b1f3-.L_41ab60
          .zero 1
          .uleb128 .L_41b06a-.L_41ab60
          .uleb128 .L_41b102-.L_41b06a
          .uleb128 .L_41b1d7-.L_41ab60
          .zero 1
          .uleb128 .L_41b22b-.L_41ab60
          .uleb128 .L_41b257-.L_41b22b
          .zero 2
.L_444df0:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444df4-.L_444df4
.L_444df4:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_444e34-.L_444df7
.L_444df7:
          .byte 0x1
          .uleb128 .L_444e2b-.L_444df9
.L_444df9:
          .uleb128 .L_419096-.L_419080
          .uleb128 .L_41909b-.L_419096
          .zero 2
          .uleb128 .L_4190f2-.L_419080
          .uleb128 .L_4190f7-.L_4190f2
          .uleb128 .L_4191eb-.L_419080
          .zero 1
          .uleb128 .L_41910f-.L_419080
          .uleb128 .L_419114-.L_41910f
          .uleb128 .L_419235-.L_419080
          .byte 0x1
          .uleb128 .L_419181-.L_419080
          .uleb128 .L_419186-.L_419181
          .uleb128 .L_419230-.L_419080
          .zero 1
          .uleb128 .L_41918c-.L_419080
          .uleb128 .L_419191-.L_41918c
          .uleb128 .L_419203-.L_419080
          .zero 1
          .uleb128 .L_4191cb-.L_419080
          .uleb128 .L_4191df-.L_4191cb
          .uleb128 .L_419230-.L_419080
          .zero 1
          .uleb128 .L_4191fe-.L_419080
          .uleb128 .L_419230-.L_4191fe
          .zero 2
          .uleb128 .L_41923d-.L_419080
          .uleb128 .L_419242-.L_41923d
          .uleb128 .L_419242-.L_419080
          .byte 0x1
          .uleb128 .L_41926b-.L_419080
          .uleb128 .L_419270-.L_41926b
          .uleb128 .L_419270-.L_419080
          .zero 1
.L_444e2b:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444e34:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444ead-.L_444e38
.L_444e38:
          .uleb128 .L_419885-.L_4197a0
          .uleb128 .L_41988a-.L_419885
          .zero 2
          .uleb128 .L_41999a-.L_4197a0
          .uleb128 .L_41999f-.L_41999a
          .uleb128 .L_41a6ad-.L_4197a0
          .zero 1
          .uleb128 .L_419a74-.L_4197a0
          .uleb128 .L_419a79-.L_419a74
          .uleb128 .L_41a6ab-.L_4197a0
          .zero 1
          .uleb128 .L_419a8a-.L_4197a0
          .uleb128 .L_419ac8-.L_419a8a
          .uleb128 .L_41a6a9-.L_4197a0
          .zero 1
          .uleb128 .L_419ad9-.L_4197a0
          .uleb128 .L_419ade-.L_419ad9
          .uleb128 .L_41a6a7-.L_4197a0
          .zero 1
          .uleb128 .L_419b7b-.L_4197a0
          .uleb128 .L_419e62-.L_419b7b
          .zero 2
          .uleb128 .L_419f19-.L_4197a0
          .uleb128 .L_419f1e-.L_419f19
          .uleb128 .L_41a670-.L_4197a0
          .zero 1
          .uleb128 .L_419ff3-.L_4197a0
          .uleb128 .L_419ff8-.L_419ff3
          .uleb128 .L_41a635-.L_4197a0
          .zero 1
          .uleb128 .L_41a009-.L_4197a0
          .uleb128 .L_41a047-.L_41a009
          .uleb128 .L_41a688-.L_4197a0
          .zero 1
          .uleb128 .L_41a058-.L_4197a0
          .uleb128 .L_41a06b-.L_41a058
          .uleb128 .L_41a675-.L_4197a0
          .zero 1
          .uleb128 .L_41a0ee-.L_4197a0
          .uleb128 .L_41a0f3-.L_41a0ee
          .uleb128 .L_41a633-.L_4197a0
          .zero 1
          .uleb128 .L_41a189-.L_4197a0
          .uleb128 .L_41a18e-.L_41a189
          .uleb128 .L_41a61b-.L_4197a0
          .zero 1
          .uleb128 .L_41a1e3-.L_4197a0
          .uleb128 .L_41a1e8-.L_41a1e3
          .zero 2
          .uleb128 .L_41a262-.L_4197a0
          .uleb128 .L_41a267-.L_41a262
          .uleb128 .L_41a6a2-.L_4197a0
          .zero 1
          .uleb128 .L_41a2ff-.L_4197a0
          .uleb128 .L_41a304-.L_41a2ff
          .uleb128 .L_41a69d-.L_4197a0
          .zero 1
          .uleb128 .L_41a31f-.L_4197a0
          .uleb128 .L_41a324-.L_41a31f
          .uleb128 .L_41a633-.L_4197a0
          .zero 1
          .uleb128 .L_41a3bf-.L_4197a0
          .uleb128 .L_41a3c4-.L_41a3bf
          .uleb128 .L_41a6a2-.L_4197a0
          .zero 1
          .uleb128 .L_41a45a-.L_4197a0
          .uleb128 .L_41a45f-.L_41a45a
          .uleb128 .L_41a633-.L_4197a0
          .zero 1
          .uleb128 .L_41a512-.L_4197a0
          .uleb128 .L_41a517-.L_41a512
          .uleb128 .L_41a6a2-.L_4197a0
          .zero 1
          .uleb128 .L_41a66b-.L_4197a0
          .uleb128 .L_41a69d-.L_41a66b
          .zero 2
.L_444ead:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444eeb-.L_444eb1
.L_444eb1:
          .uleb128 .L_41b708-.L_41b6d0
          .uleb128 .L_41b9c6-.L_41b708
          .zero 2
          .uleb128 .L_41bb58-.L_41b6d0
          .uleb128 .L_41bb5d-.L_41bb58
          .uleb128 .L_41c086-.L_41b6d0
          .zero 1
          .uleb128 .L_41bc1a-.L_41b6d0
          .uleb128 .L_41bc1f-.L_41bc1a
          .uleb128 .L_41c0b5-.L_41b6d0
          .zero 1
          .uleb128 .L_41bc2f-.L_41b6d0
          .uleb128 .L_41bc6b-.L_41bc2f
          .uleb128 .L_41c0de-.L_41b6d0
          .zero 1
          .uleb128 .L_41bc7b-.L_41b6d0
          .uleb128 .L_41bc80-.L_41bc7b
          .uleb128 .L_41c0a2-.L_41b6d0
          .zero 1
          .uleb128 .L_41bd96-.L_41b6d0
          .uleb128 .L_41bd9b-.L_41bd96
          .uleb128 .L_41c068-.L_41b6d0
          .zero 1
          .uleb128 .L_41be2c-.L_41b6d0
          .uleb128 .L_41be31-.L_41be2c
          .uleb128 .L_41c084-.L_41b6d0
          .zero 1
          .uleb128 .L_41be70-.L_41b6d0
          .uleb128 .L_41be9d-.L_41be70
          .zero 2
          .uleb128 .L_41bed7-.L_41b6d0
          .uleb128 .L_41bf84-.L_41bed7
          .uleb128 .L_41c068-.L_41b6d0
          .zero 1
          .uleb128 .L_41c09d-.L_41b6d0
          .uleb128 .L_41c0f2-.L_41c09d
          .zero 2
.L_444eeb:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444eff-.L_444eef
.L_444eef:
          .uleb128 .L_41a6e3-.L_41a6b0
          .uleb128 .L_41a6e8-.L_41a6e3
          .zero 2
          .uleb128 .L_41a750-.L_41a6b0
          .uleb128 .L_41a876-.L_41a750
          .uleb128 .L_41a8b4-.L_41a6b0
          .zero 1
          .uleb128 .L_41a8c2-.L_41a6b0
          .uleb128 .L_41a8c7-.L_41a8c2
          .zero 2
.L_444eff:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444f12-.L_444f03
.L_444f03:
          .uleb128 .L_41a92a-.L_41a8f0
          .uleb128 .L_41a92f-.L_41a92a
          .zero 2
          .uleb128 .L_41a932-.L_41a8f0
          .uleb128 .L_41aa79-.L_41a932
          .uleb128 .L_41aaff-.L_41a8f0
          .zero 1
          .uleb128 .L_41ab0d-.L_41a8f0
          .uleb128 .L_41ab12-.L_41ab0d
          .zero 2
.L_444f12:
          .zero 2
.L_444f14:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444f22-.L_444f18
.L_444f18:
          .uleb128 .L_41c4e8-.L_41c480
          .uleb128 .L_41c51d-.L_41c4e8
          .uleb128 .L_41c53a-.L_41c480
          .zero 1
          .uleb128 .L_41c550-.L_41c480
          .uleb128 .L_41c555-.L_41c550
          .zero 2
.L_444f22:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444f31-.L_444f26
.L_444f26:
          .uleb128 .L_41c5ca-.L_41c560
          .uleb128 .L_41c650-.L_41c5ca
          .uleb128 .L_41c711-.L_41c560
          .zero 1
          .uleb128 .L_41c6c2-.L_41c560
          .uleb128 .L_41c72e-.L_41c6c2
          .zero 2
.L_444f31:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444fd8-.L_444f36
.L_444f36:
          .uleb128 .L_41ce3c-.L_41cd00
          .uleb128 .L_41ce41-.L_41ce3c
          .uleb128 .L_41dc85-.L_41cd00
          .zero 1
          .uleb128 .L_41cfba-.L_41cd00
          .uleb128 .L_41cfbf-.L_41cfba
          .uleb128 .L_41db88-.L_41cd00
          .zero 1
          .uleb128 .L_41d094-.L_41cd00
          .uleb128 .L_41d099-.L_41d094
          .uleb128 .L_41dbe0-.L_41cd00
          .zero 1
          .uleb128 .L_41d0aa-.L_41cd00
          .uleb128 .L_41d0e8-.L_41d0aa
          .uleb128 .L_41dc03-.L_41cd00
          .zero 1
          .uleb128 .L_41d106-.L_41cd00
          .uleb128 .L_41d10b-.L_41d106
          .uleb128 .L_41dc12-.L_41cd00
          .zero 1
          .uleb128 .L_41d120-.L_41cd00
          .uleb128 .L_41d125-.L_41d120
          .uleb128 .L_41dc29-.L_41cd00
          .zero 1
          .uleb128 .L_41d289-.L_41cd00
          .uleb128 .L_41d28e-.L_41d289
          .uleb128 .L_41dc61-.L_41cd00
          .zero 1
          .uleb128 .L_41d2bb-.L_41cd00
          .uleb128 .L_41d2d7-.L_41d2bb
          .uleb128 .L_41dc6e-.L_41cd00
          .zero 1
          .uleb128 .L_41d33b-.L_41cd00
          .uleb128 .L_41d340-.L_41d33b
          .uleb128 .L_41dc61-.L_41cd00
          .zero 1
          .uleb128 .L_41d368-.L_41cd00
          .uleb128 .L_41d382-.L_41d368
          .uleb128 .L_41dc44-.L_41cd00
          .zero 1
          .uleb128 .L_41d3f5-.L_41cd00
          .uleb128 .L_41d3fa-.L_41d3f5
          .uleb128 .L_41dc61-.L_41cd00
          .zero 1
          .uleb128 .L_41d4a6-.L_41cd00
          .uleb128 .L_41d4ab-.L_41d4a6
          .uleb128 .L_41dc80-.L_41cd00
          .zero 1
          .uleb128 .L_41d580-.L_41cd00
          .uleb128 .L_41d585-.L_41d580
          .uleb128 .L_41dc70-.L_41cd00
          .zero 1
          .uleb128 .L_41d596-.L_41cd00
          .uleb128 .L_41d5d4-.L_41d596
          .uleb128 .L_41dc75-.L_41cd00
          .zero 1
          .uleb128 .L_41d5f2-.L_41cd00
          .uleb128 .L_41d5f7-.L_41d5f2
          .uleb128 .L_41dc77-.L_41cd00
          .zero 1
          .uleb128 .L_41d60c-.L_41cd00
          .uleb128 .L_41d611-.L_41d60c
          .uleb128 .L_41dc79-.L_41cd00
          .zero 1
          .uleb128 .L_41d6a2-.L_41cd00
          .uleb128 .L_41d6a7-.L_41d6a2
          .uleb128 .L_41dbde-.L_41cd00
          .zero 1
          .uleb128 .L_41d72a-.L_41cd00
          .uleb128 .L_41d72f-.L_41d72a
          .uleb128 .L_41db70-.L_41cd00
          .zero 1
          .uleb128 .L_41d7a6-.L_41cd00
          .uleb128 .L_41d84e-.L_41d7a6
          .uleb128 .L_41dbdc-.L_41cd00
          .zero 1
          .uleb128 .L_41d8d1-.L_41cd00
          .uleb128 .L_41d8d6-.L_41d8d1
          .uleb128 .L_41dbda-.L_41cd00
          .zero 1
          .uleb128 .L_41d90c-.L_41cd00
          .uleb128 .L_41d911-.L_41d90c
          .uleb128 .L_41dbde-.L_41cd00
          .zero 1
          .uleb128 .L_41da0e-.L_41cd00
          .uleb128 .L_41da13-.L_41da0e
          .uleb128 .L_41dbdc-.L_41cd00
          .zero 1
          .uleb128 .L_41da40-.L_41cd00
          .uleb128 .L_41da45-.L_41da40
          .uleb128 .L_41dbde-.L_41cd00
          .zero 1
          .uleb128 .L_41dbd5-.L_41cd00
          .uleb128 .L_41dbda-.L_41dbd5
          .zero 2
          .uleb128 .L_41dc24-.L_41cd00
          .uleb128 .L_41dc29-.L_41dc24
          .uleb128 .L_41dc44-.L_41cd00
          .zero 1
          .uleb128 .L_41dc69-.L_41cd00
          .uleb128 .L_41dc6e-.L_41dc69
          .uleb128 .L_41dc6e-.L_41cd00
          .zero 1
          .uleb128 .L_41dc7b-.L_41cd00
          .uleb128 .L_41dc80-.L_41dc7b
          .uleb128 .L_41dc61-.L_41cd00
          .zero 1
.L_444fd8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444fed-.L_444fdc
.L_444fdc:
          .uleb128 .L_41dd4f-.L_41dc90
          .uleb128 .L_41dd54-.L_41dd4f
          .uleb128 .L_41ddc3-.L_41dc90
          .zero 1
          .uleb128 .L_41dd62-.L_41dc90
          .uleb128 .L_41dd67-.L_41dd62
          .uleb128 .L_41dda3-.L_41dc90
          .zero 1
          .uleb128 .L_41ddbe-.L_41dc90
          .uleb128 .L_41ddc3-.L_41ddbe
          .zero 2
.L_444fed:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445003-.L_444ff1
.L_444ff1:
          .uleb128 .L_41de84-.L_41ddd0
          .uleb128 .L_41df60-.L_41de84
          .uleb128 .L_41dfc2-.L_41ddd0
          .zero 1
          .uleb128 .L_41dfd6-.L_41ddd0
          .uleb128 .L_41dfdb-.L_41dfd6
          .zero 2
          .uleb128 .L_41dfe2-.L_41ddd0
          .uleb128 .L_41dfe7-.L_41dfe2
          .uleb128 .L_41dfc2-.L_41ddd0
          .zero 1
.L_445003:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445007-.L_445007
.L_445007:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44503f-.L_44500b
.L_44500b:
          .uleb128 .L_41e15b-.L_41e0e0
          .uleb128 .L_41e160-.L_41e15b
          .zero 2
          .uleb128 .L_41e230-.L_41e0e0
          .uleb128 .L_41e235-.L_41e230
          .uleb128 .L_41e743-.L_41e0e0
          .zero 1
          .uleb128 .L_41e2ef-.L_41e0e0
          .uleb128 .L_41e2f4-.L_41e2ef
          .uleb128 .L_41e708-.L_41e0e0
          .zero 1
          .uleb128 .L_41e304-.L_41e0e0
          .uleb128 .L_41e340-.L_41e304
          .uleb128 .L_41e6f4-.L_41e0e0
          .zero 1
          .uleb128 .L_41e350-.L_41e0e0
          .uleb128 .L_41e38e-.L_41e350
          .uleb128 .L_41e6c3-.L_41e0e0
          .zero 1
          .uleb128 .L_41e485-.L_41e0e0
          .uleb128 .L_41e48a-.L_41e485
          .uleb128 .L_41e6d6-.L_41e0e0
          .zero 1
          .uleb128 .L_41e51b-.L_41e0e0
          .uleb128 .L_41e520-.L_41e51b
          .uleb128 .L_41e6f2-.L_41e0e0
          .zero 1
          .uleb128 .L_41e55b-.L_41e0e0
          .uleb128 .L_41e5f3-.L_41e55b
          .uleb128 .L_41e6d6-.L_41e0e0
          .zero 1
          .uleb128 .L_41e6d1-.L_41e0e0
          .uleb128 .L_41e743-.L_41e6d1
          .zero 2
.L_44503f:
          .zero 1
.L_445040:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_445060-.L_445043
.L_445043:
          .byte 0x1
          .uleb128 .L_44505a-.L_445045
.L_445045:
          .uleb128 .L_422ca7-.L_422c80
          .uleb128 .L_422cac-.L_422ca7
          .zero 2
          .uleb128 .L_422d33-.L_422c80
          .uleb128 .L_422d38-.L_422d33
          .uleb128 .L_422dc8-.L_422c80
          .byte 0x1
          .uleb128 .L_422df8-.L_422c80
          .uleb128 .L_422dfd-.L_422df8
          .uleb128 .L_422e02-.L_422c80
          .zero 1
          .uleb128 .L_422e0d-.L_422c80
          .uleb128 .L_422e12-.L_422e0d
          .zero 2
.L_44505a:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445060:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_445084-.L_445063
.L_445063:
          .byte 0x1
          .uleb128 .L_44507b-.L_445065
.L_445065:
          .uleb128 .L_422e48-.L_422e20
          .uleb128 .L_422fe3-.L_422e48
          .zero 2
          .uleb128 .L_42300c-.L_422e20
          .uleb128 .L_423011-.L_42300c
          .uleb128 .L_423177-.L_422e20
          .byte 0x1
          .uleb128 .L_423187-.L_422e20
          .uleb128 .L_42318c-.L_423187
          .uleb128 .L_42318c-.L_422e20
          .zero 1
          .uleb128 .L_423197-.L_422e20
          .uleb128 .L_42319c-.L_423197
          .zero 2
.L_44507b:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445084:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4450be-.L_445088
.L_445088:
          .uleb128 .L_41e942-.L_41e8c0
          .uleb128 .L_41e947-.L_41e942
          .uleb128 .L_41ee84-.L_41e8c0
          .zero 1
          .uleb128 .L_41ea01-.L_41e8c0
          .uleb128 .L_41ea06-.L_41ea01
          .uleb128 .L_41ef10-.L_41e8c0
          .zero 1
          .uleb128 .L_41eac3-.L_41e8c0
          .uleb128 .L_41eac8-.L_41eac3
          .uleb128 .L_41eed2-.L_41e8c0
          .zero 1
          .uleb128 .L_41ead8-.L_41e8c0
          .uleb128 .L_41eb14-.L_41ead8
          .uleb128 .L_41eec4-.L_41e8c0
          .zero 1
          .uleb128 .L_41eb24-.L_41e8c0
          .uleb128 .L_41eb29-.L_41eb24
          .uleb128 .L_41eeb7-.L_41e8c0
          .zero 1
          .uleb128 .L_41ec3a-.L_41e8c0
          .uleb128 .L_41ec3f-.L_41ec3a
          .uleb128 .L_41eeb5-.L_41e8c0
          .zero 1
          .uleb128 .L_41ecd0-.L_41e8c0
          .uleb128 .L_41ecd5-.L_41ecd0
          .uleb128 .L_41ee99-.L_41e8c0
          .zero 1
          .uleb128 .L_41ed17-.L_41e8c0
          .uleb128 .L_41edaf-.L_41ed17
          .uleb128 .L_41eeb5-.L_41e8c0
          .zero 1
          .uleb128 .L_41ee94-.L_41e8c0
          .uleb128 .L_41ee99-.L_41ee94
          .zero 2
.L_4450be:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445158-.L_4450c3
.L_4450c3:
          .uleb128 .L_41f572-.L_41f490
          .uleb128 .L_41f577-.L_41f572
          .uleb128 .L_420546-.L_41f490
          .zero 1
          .uleb128 .L_41f639-.L_41f490
          .uleb128 .L_41f63e-.L_41f639
          .uleb128 .L_420591-.L_41f490
          .zero 1
          .uleb128 .L_41f64e-.L_41f490
          .uleb128 .L_41f68a-.L_41f64e
          .uleb128 .L_420593-.L_41f490
          .zero 1
          .uleb128 .L_41f69a-.L_41f490
          .uleb128 .L_41f69f-.L_41f69a
          .uleb128 .L_420544-.L_41f490
          .zero 1
          .uleb128 .L_41f83b-.L_41f490
          .uleb128 .L_41f840-.L_41f83b
          .zero 2
          .uleb128 .L_41f8ef-.L_41f490
          .uleb128 .L_41f8f4-.L_41f8ef
          .uleb128 .L_420564-.L_41f490
          .zero 1
          .uleb128 .L_41f986-.L_41f490
          .uleb128 .L_41f98b-.L_41f986
          .uleb128 .L_420562-.L_41f490
          .zero 1
          .uleb128 .L_41fa6d-.L_41f490
          .uleb128 .L_41fa72-.L_41fa6d
          .uleb128 .L_42059f-.L_41f490
          .zero 1
          .uleb128 .L_41fb34-.L_41f490
          .uleb128 .L_41fb39-.L_41fb34
          .uleb128 .L_42059d-.L_41f490
          .zero 1
          .uleb128 .L_41fb49-.L_41f490
          .uleb128 .L_41fb85-.L_41fb49
          .uleb128 .L_420598-.L_41f490
          .zero 1
          .uleb128 .L_41fb95-.L_41f490
          .uleb128 .L_41fb9a-.L_41fb95
          .uleb128 .L_420540-.L_41f490
          .zero 1
          .uleb128 .L_41fc22-.L_41f490
          .uleb128 .L_41fc27-.L_41fc22
          .uleb128 .L_42053e-.L_41f490
          .zero 1
          .uleb128 .L_41fcbf-.L_41f490
          .uleb128 .L_41fcc4-.L_41fcbf
          .uleb128 .L_4205a1-.L_41f490
          .zero 1
          .uleb128 .L_41fd81-.L_41f490
          .uleb128 .L_41fd86-.L_41fd81
          .uleb128 .L_420564-.L_41f490
          .zero 1
          .uleb128 .L_41fe2e-.L_41f490
          .uleb128 .L_41fe33-.L_41fe2e
          .uleb128 .L_42053e-.L_41f490
          .zero 1
          .uleb128 .L_41fec9-.L_41f490
          .uleb128 .L_41fece-.L_41fec9
          .uleb128 .L_420564-.L_41f490
          .zero 1
          .uleb128 .L_420002-.L_41f490
          .uleb128 .L_420007-.L_420002
          .uleb128 .L_42058f-.L_41f490
          .zero 1
          .uleb128 .L_4200c9-.L_41f490
          .uleb128 .L_4200ce-.L_4200c9
          .uleb128 .L_420566-.L_41f490
          .zero 1
          .uleb128 .L_4200de-.L_41f490
          .uleb128 .L_42011a-.L_4200de
          .uleb128 .L_42050d-.L_41f490
          .zero 1
          .uleb128 .L_42012a-.L_41f490
          .uleb128 .L_42012f-.L_42012a
          .uleb128 .L_4204fa-.L_41f490
          .zero 1
          .uleb128 .L_4201b7-.L_41f490
          .uleb128 .L_4201bc-.L_4201b7
          .uleb128 .L_420521-.L_41f490
          .zero 1
          .uleb128 .L_420259-.L_41f490
          .uleb128 .L_42025e-.L_420259
          .uleb128 .L_420542-.L_41f490
          .zero 1
          .uleb128 .L_42026c-.L_41f490
          .uleb128 .L_420271-.L_42026c
          .uleb128 .L_42053e-.L_41f490
          .zero 1
          .uleb128 .L_420390-.L_41f490
          .uleb128 .L_42042f-.L_420390
          .uleb128 .L_420521-.L_41f490
          .zero 1
          .uleb128 .L_420508-.L_41f490
          .uleb128 .L_420562-.L_420508
          .zero 2
.L_445158:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445165-.L_44515c
.L_44515c:
          .uleb128 .L_4205eb-.L_4205b0
          .uleb128 .L_4205f0-.L_4205eb
          .uleb128 .L_420626-.L_4205b0
          .zero 1
          .uleb128 .L_420634-.L_4205b0
          .uleb128 .L_420639-.L_420634
          .zero 2
.L_445165:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4451f0-.L_44516a
.L_44516a:
          .uleb128 .L_42372c-.L_4235c0
          .uleb128 .L_423783-.L_42372c
          .zero 2
          .uleb128 .L_423793-.L_4235c0
          .uleb128 .L_423798-.L_423793
          .uleb128 .L_424770-.L_4235c0
          .zero 1
          .uleb128 .L_42379f-.L_4235c0
          .uleb128 .L_4237dc-.L_42379f
          .uleb128 .L_424768-.L_4235c0
          .zero 1
          .uleb128 .L_423a42-.L_4235c0
          .uleb128 .L_423a73-.L_423a42
          .zero 2
          .uleb128 .L_423a7a-.L_4235c0
          .uleb128 .L_423a9f-.L_423a7a
          .uleb128 .L_424741-.L_4235c0
          .zero 1
          .uleb128 .L_423b8e-.L_4235c0
          .uleb128 .L_423b93-.L_423b8e
          .uleb128 .L_4244d2-.L_4235c0
          .zero 1
          .uleb128 .L_423c64-.L_4235c0
          .uleb128 .L_423c69-.L_423c64
          .uleb128 .L_42453f-.L_4235c0
          .zero 1
          .uleb128 .L_423c79-.L_4235c0
          .uleb128 .L_423cb5-.L_423c79
          .uleb128 .L_424531-.L_4235c0
          .zero 1
          .uleb128 .L_423cc5-.L_4235c0
          .uleb128 .L_423cca-.L_423cc5
          .uleb128 .L_42456f-.L_4235c0
          .zero 1
          .uleb128 .L_423e3f-.L_4235c0
          .uleb128 .L_423e44-.L_423e3f
          .uleb128 .L_42473c-.L_4235c0
          .zero 1
          .uleb128 .L_423f15-.L_4235c0
          .uleb128 .L_423f1a-.L_423f15
          .uleb128 .L_424700-.L_4235c0
          .zero 1
          .uleb128 .L_423f2a-.L_4235c0
          .uleb128 .L_423f66-.L_423f2a
          .uleb128 .L_4246ef-.L_4235c0
          .zero 1
          .uleb128 .L_423f76-.L_4235c0
          .uleb128 .L_423f7b-.L_423f76
          .uleb128 .L_424652-.L_4235c0
          .zero 1
          .uleb128 .L_4240b4-.L_4235c0
          .uleb128 .L_4240b9-.L_4240b4
          .uleb128 .L_4247a1-.L_4235c0
          .zero 1
          .uleb128 .L_424169-.L_4235c0
          .uleb128 .L_42416e-.L_424169
          .uleb128 .L_424763-.L_4235c0
          .zero 1
          .uleb128 .L_4241ac-.L_4235c0
          .uleb128 .L_4241b1-.L_4241ac
          .uleb128 .L_4247a1-.L_4235c0
          .zero 1
          .uleb128 .L_42425b-.L_4235c0
          .uleb128 .L_424260-.L_42425b
          .zero 2
          .uleb128 .L_4242eb-.L_4235c0
          .uleb128 .L_4242f0-.L_4242eb
          .uleb128 .L_42457f-.L_4235c0
          .zero 1
          .uleb128 .L_4243a5-.L_4235c0
          .uleb128 .L_4243aa-.L_4243a5
          .uleb128 .L_424516-.L_4235c0
          .zero 1
          .uleb128 .L_424473-.L_4235c0
          .uleb128 .L_424478-.L_424473
          .uleb128 .L_4247a1-.L_4235c0
          .zero 1
          .uleb128 .L_424511-.L_4235c0
          .uleb128 .L_424516-.L_424511
          .zero 2
          .uleb128 .L_424598-.L_4235c0
          .uleb128 .L_42464d-.L_424598
          .uleb128 .L_42457f-.L_4235c0
          .zero 1
          .uleb128 .L_424674-.L_4235c0
          .uleb128 .L_424679-.L_424674
          .zero 2
.L_4451f0:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4451ff-.L_4451f4
.L_4451f4:
          .uleb128 .L_4207e1-.L_420720
          .uleb128 .L_420837-.L_4207e1
          .uleb128 .L_4208a4-.L_420720
          .zero 1
          .uleb128 .L_4208b4-.L_420720
          .uleb128 .L_4208b9-.L_4208b4
          .zero 2
.L_4451ff:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445268-.L_445203
.L_445203:
          .uleb128 .L_4209a3-.L_4208c0
          .uleb128 .L_4209a8-.L_4209a3
          .uleb128 .L_42157d-.L_4208c0
          .zero 1
          .uleb128 .L_420a74-.L_4208c0
          .uleb128 .L_420a79-.L_420a74
          .uleb128 .L_421584-.L_4208c0
          .zero 1
          .uleb128 .L_420a89-.L_4208c0
          .uleb128 .L_420ac5-.L_420a89
          .uleb128 .L_421582-.L_4208c0
          .zero 1
          .uleb128 .L_420ad5-.L_4208c0
          .uleb128 .L_420ada-.L_420ad5
          .uleb128 .L_42158c-.L_4208c0
          .zero 1
          .uleb128 .L_420c1d-.L_4208c0
          .uleb128 .L_420c43-.L_420c1d
          .zero 2
          .uleb128 .L_420cf2-.L_4208c0
          .uleb128 .L_420cf7-.L_420cf2
          .uleb128 .L_42158a-.L_4208c0
          .zero 1
          .uleb128 .L_420d8f-.L_4208c0
          .uleb128 .L_420d94-.L_420d8f
          .uleb128 .L_421586-.L_4208c0
          .zero 1
          .uleb128 .L_420e06-.L_4208c0
          .uleb128 .L_420e0b-.L_420e06
          .uleb128 .L_42158a-.L_4208c0
          .zero 1
          .uleb128 .L_420f59-.L_4208c0
          .uleb128 .L_420f5e-.L_420f59
          .uleb128 .L_421588-.L_4208c0
          .zero 1
          .uleb128 .L_42102a-.L_4208c0
          .uleb128 .L_42102f-.L_42102a
          .uleb128 .L_421541-.L_4208c0
          .zero 1
          .uleb128 .L_42103f-.L_4208c0
          .uleb128 .L_42107b-.L_42103f
          .uleb128 .L_42152d-.L_4208c0
          .zero 1
          .uleb128 .L_42108b-.L_4208c0
          .uleb128 .L_421090-.L_42108b
          .uleb128 .L_4214fd-.L_4208c0
          .zero 1
          .uleb128 .L_4211ea-.L_4208c0
          .uleb128 .L_4211ef-.L_4211ea
          .uleb128 .L_42157b-.L_4208c0
          .zero 1
          .uleb128 .L_421287-.L_4208c0
          .uleb128 .L_42128c-.L_421287
          .uleb128 .L_421510-.L_4208c0
          .zero 1
          .uleb128 .L_4212c1-.L_4208c0
          .uleb128 .L_4212c6-.L_4212c1
          .uleb128 .L_42158a-.L_4208c0
          .zero 1
          .uleb128 .L_421359-.L_4208c0
          .uleb128 .L_421422-.L_421359
          .uleb128 .L_42157b-.L_4208c0
          .zero 1
          .uleb128 .L_42150b-.L_4208c0
          .uleb128 .L_42157b-.L_42150b
          .zero 2
.L_445268:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445277-.L_44526c
.L_44526c:
          .uleb128 .L_4216dd-.L_4215a0
          .uleb128 .L_421704-.L_4216dd
          .uleb128 .L_42175f-.L_4215a0
          .zero 1
          .uleb128 .L_42176f-.L_4215a0
          .uleb128 .L_421774-.L_42176f
          .zero 2
.L_445277:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445299-.L_44527b
.L_44527b:
          .uleb128 .L_421bf2-.L_421a90
          .uleb128 .L_421bf7-.L_421bf2
          .uleb128 .L_4223c7-.L_421a90
          .zero 1
          .uleb128 .L_421cb9-.L_421a90
          .uleb128 .L_4220d8-.L_421cb9
          .uleb128 .L_4223ee-.L_421a90
          .zero 1
          .uleb128 .L_4220fb-.L_421a90
          .uleb128 .L_42211a-.L_4220fb
          .uleb128 .L_4223c7-.L_421a90
          .zero 1
          .uleb128 .L_422174-.L_421a90
          .uleb128 .L_4221b9-.L_422174
          .uleb128 .L_4223ee-.L_421a90
          .zero 1
          .uleb128 .L_4223e9-.L_421a90
          .uleb128 .L_4223ee-.L_4223e9
          .zero 2
.L_445299:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4452b2-.L_44529d
.L_44529d:
          .uleb128 .L_42245f-.L_422400
          .uleb128 .L_422464-.L_42245f
          .zero 2
          .uleb128 .L_42248d-.L_422400
          .uleb128 .L_422492-.L_42248d
          .uleb128 .L_4224d4-.L_422400
          .zero 1
          .uleb128 .L_4224b1-.L_422400
          .uleb128 .L_4224b6-.L_4224b1
          .uleb128 .L_4224e7-.L_422400
          .zero 1
          .uleb128 .L_4224e2-.L_422400
          .uleb128 .L_4224e7-.L_4224e2
          .zero 2
.L_4452b2:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4452c9-.L_4452b6
.L_4452b6:
          .uleb128 .L_4225ed-.L_422500
          .uleb128 .L_4226a6-.L_4225ed
          .uleb128 .L_422980-.L_422500
          .zero 1
          .uleb128 .L_4226f4-.L_422500
          .uleb128 .L_422936-.L_4226f4
          .uleb128 .L_422942-.L_422500
          .zero 1
          .uleb128 .L_422971-.L_422500
          .uleb128 .L_422976-.L_422971
          .zero 2
.L_4452c9:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4452d7-.L_4452cd
.L_4452cd:
          .uleb128 .L_42491b-.L_4248d0
          .uleb128 .L_424989-.L_42491b
          .uleb128 .L_42498b-.L_4248d0
          .zero 1
          .uleb128 .L_42499f-.L_4248d0
          .uleb128 .L_4249a4-.L_42499f
          .zero 2
.L_4452d7:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4453cf-.L_4452dc
.L_4452dc:
          .uleb128 .L_42507a-.L_424f90
          .uleb128 .L_42507f-.L_42507a
          .zero 2
          .uleb128 .L_425281-.L_424f90
          .uleb128 .L_425286-.L_425281
          .uleb128 .L_427126-.L_424f90
          .zero 1
          .uleb128 .L_425358-.L_424f90
          .uleb128 .L_42535d-.L_425358
          .uleb128 .L_4270e1-.L_424f90
          .zero 1
          .uleb128 .L_42536d-.L_424f90
          .uleb128 .L_4253a9-.L_42536d
          .uleb128 .L_4270cd-.L_424f90
          .zero 1
          .uleb128 .L_4253b9-.L_424f90
          .uleb128 .L_4253e1-.L_4253b9
          .uleb128 .L_4270ba-.L_424f90
          .zero 1
          .uleb128 .L_425551-.L_424f90
          .uleb128 .L_425556-.L_425551
          .zero 2
          .uleb128 .L_42587a-.L_424f90
          .uleb128 .L_42587f-.L_42587a
          .uleb128 .L_427093-.L_424f90
          .zero 1
          .uleb128 .L_425931-.L_424f90
          .uleb128 .L_425936-.L_425931
          .uleb128 .L_42708e-.L_424f90
          .zero 1
          .uleb128 .L_4259f6-.L_424f90
          .uleb128 .L_4259fb-.L_4259f6
          .zero 2
          .uleb128 .L_425a27-.L_424f90
          .uleb128 .L_425b0e-.L_425a27
          .uleb128 .L_427093-.L_424f90
          .zero 1
          .uleb128 .L_425ee5-.L_424f90
          .uleb128 .L_425eea-.L_425ee5
          .uleb128 .L_42713a-.L_424f90
          .zero 1
          .uleb128 .L_425fbf-.L_424f90
          .uleb128 .L_425fc4-.L_425fbf
          .uleb128 .L_427135-.L_424f90
          .zero 1
          .uleb128 .L_425fd5-.L_424f90
          .uleb128 .L_426013-.L_425fd5
          .uleb128 .L_427130-.L_424f90
          .zero 1
          .uleb128 .L_426024-.L_424f90
          .uleb128 .L_42603a-.L_426024
          .uleb128 .L_42712b-.L_424f90
          .zero 1
          .uleb128 .L_42612f-.L_424f90
          .uleb128 .L_426134-.L_42612f
          .zero 2
          .uleb128 .L_4261f4-.L_424f90
          .uleb128 .L_4261f9-.L_4261f4
          .uleb128 .L_426dca-.L_424f90
          .zero 1
          .uleb128 .L_4262ae-.L_424f90
          .uleb128 .L_4262b3-.L_4262ae
          .uleb128 .L_4273d9-.L_424f90
          .zero 1
          .uleb128 .L_4263a7-.L_424f90
          .uleb128 .L_4263ac-.L_4263a7
          .uleb128 .L_42709d-.L_424f90
          .zero 1
          .uleb128 .L_426481-.L_424f90
          .uleb128 .L_426486-.L_426481
          .uleb128 .L_426f0c-.L_424f90
          .zero 1
          .uleb128 .L_426497-.L_424f90
          .uleb128 .L_4264d5-.L_426497
          .uleb128 .L_426ef7-.L_424f90
          .zero 1
          .uleb128 .L_4264e6-.L_424f90
          .uleb128 .L_4264f8-.L_4264e6
          .uleb128 .L_4270b8-.L_424f90
          .zero 1
          .uleb128 .L_426638-.L_424f90
          .uleb128 .L_42663d-.L_426638
          .uleb128 .L_427086-.L_424f90
          .zero 1
          .uleb128 .L_426712-.L_424f90
          .uleb128 .L_426717-.L_426712
          .uleb128 .L_427081-.L_424f90
          .zero 1
          .uleb128 .L_426728-.L_424f90
          .uleb128 .L_426766-.L_426728
          .uleb128 .L_42707c-.L_424f90
          .zero 1
          .uleb128 .L_426777-.L_424f90
          .uleb128 .L_42678c-.L_426777
          .uleb128 .L_427069-.L_424f90
          .zero 1
          .uleb128 .L_426825-.L_424f90
          .uleb128 .L_42682a-.L_426825
          .uleb128 .L_426e7c-.L_424f90
          .zero 1
          .uleb128 .L_4268df-.L_424f90
          .uleb128 .L_4268e4-.L_4268df
          .uleb128 .L_427098-.L_424f90
          .zero 1
          .uleb128 .L_42693b-.L_424f90
          .uleb128 .L_426940-.L_42693b
          .uleb128 .L_426dca-.L_424f90
          .zero 1
          .uleb128 .L_426a6f-.L_424f90
          .uleb128 .L_426a74-.L_426a6f
          .uleb128 .L_426e60-.L_424f90
          .zero 1
          .uleb128 .L_426b2e-.L_424f90
          .uleb128 .L_426b33-.L_426b2e
          .uleb128 .L_4273de-.L_424f90
          .zero 1
          .uleb128 .L_426b61-.L_424f90
          .uleb128 .L_426b66-.L_426b61
          .uleb128 .L_426e60-.L_424f90
          .zero 1
          .uleb128 .L_426c27-.L_424f90
          .uleb128 .L_426c2c-.L_426c27
          .uleb128 .L_426e7c-.L_424f90
          .zero 1
          .uleb128 .L_426cda-.L_424f90
          .uleb128 .L_426cdf-.L_426cda
          .uleb128 .L_426dca-.L_424f90
          .zero 1
          .uleb128 .L_426d59-.L_424f90
          .uleb128 .L_426d5e-.L_426d59
          .uleb128 .L_426e7c-.L_424f90
          .zero 1
          .uleb128 .L_426f07-.L_424f90
          .uleb128 .L_4270a4-.L_426f07
          .zero 2
          .uleb128 .L_4270ae-.L_424f90
          .uleb128 .L_4270b3-.L_4270ae
          .uleb128 .L_426e60-.L_424f90
          .zero 1
          .uleb128 .L_4270c8-.L_424f90
          .uleb128 .L_427126-.L_4270c8
          .zero 2
          .uleb128 .L_4271d8-.L_424f90
          .uleb128 .L_4271dd-.L_4271d8
          .uleb128 .L_4273d4-.L_424f90
          .zero 1
          .uleb128 .L_42729e-.L_424f90
          .uleb128 .L_4272a3-.L_42729e
          .uleb128 .L_4273ae-.L_424f90
          .zero 1
          .uleb128 .L_4272b4-.L_424f90
          .uleb128 .L_4272f2-.L_4272b4
          .uleb128 .L_4273a9-.L_424f90
          .zero 1
          .uleb128 .L_427303-.L_424f90
          .uleb128 .L_42738a-.L_427303
          .uleb128 .L_42739c-.L_424f90
          .zero 1
.L_4453cf:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4453db-.L_4453d3
.L_4453d3:
          .uleb128 .L_427710-.L_4276e0
          .uleb128 .L_427715-.L_427710
          .uleb128 .L_427722-.L_4276e0
          .zero 1
          .uleb128 .L_427736-.L_4276e0
          .uleb128 .L_42773b-.L_427736
          .zero 2
.L_4453db:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4453f3-.L_4453df
.L_4453df:
          .uleb128 .L_42748b-.L_427470
          .uleb128 .L_427490-.L_42748b
          .zero 2
          .uleb128 .L_427493-.L_427470
          .uleb128 .L_427498-.L_427493
          .uleb128 .L_42758f-.L_427470
          .zero 1
          .uleb128 .L_4274c6-.L_427470
          .uleb128 .L_427574-.L_4274c6
          .uleb128 .L_427574-.L_427470
          .zero 1
          .uleb128 .L_42758a-.L_427470
          .uleb128 .L_42758f-.L_42758a
          .zero 2
.L_4453f3:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445406-.L_4453f7
.L_4453f7:
          .uleb128 .L_4275e3-.L_4275a0
          .uleb128 .L_4275e8-.L_4275e3
          .zero 2
          .uleb128 .L_427636-.L_4275a0
          .uleb128 .L_42763b-.L_427636
          .uleb128 .L_4276c8-.L_4275a0
          .zero 1
          .uleb128 .L_4276d6-.L_4275a0
          .uleb128 .L_4276db-.L_4276d6
          .zero 2
.L_445406:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445444-.L_44540a
.L_44540a:
          .uleb128 .L_427ca9-.L_427a90
          .uleb128 .L_427d0b-.L_427ca9
          .zero 2
          .uleb128 .L_427e58-.L_427a90
          .uleb128 .L_427e5d-.L_427e58
          .uleb128 .L_428563-.L_427a90
          .zero 1
          .uleb128 .L_427f1a-.L_427a90
          .uleb128 .L_427f1f-.L_427f1a
          .uleb128 .L_4284e6-.L_427a90
          .zero 1
          .uleb128 .L_427f2f-.L_427a90
          .uleb128 .L_427f6b-.L_427f2f
          .uleb128 .L_42854f-.L_427a90
          .zero 1
          .uleb128 .L_427f7b-.L_427a90
          .uleb128 .L_427f80-.L_427f7b
          .uleb128 .L_428568-.L_427a90
          .zero 1
          .uleb128 .L_428210-.L_427a90
          .uleb128 .L_4282cc-.L_428210
          .uleb128 .L_428597-.L_427a90
          .zero 1
          .uleb128 .L_42836e-.L_427a90
          .uleb128 .L_428373-.L_42836e
          .uleb128 .L_42857b-.L_427a90
          .zero 1
          .uleb128 .L_428415-.L_427a90
          .uleb128 .L_42841a-.L_428415
          .zero 2
          .uleb128 .L_428435-.L_427a90
          .uleb128 .L_42843a-.L_428435
          .uleb128 .L_428597-.L_427a90
          .zero 1
          .uleb128 .L_42854a-.L_427a90
          .uleb128 .L_42857b-.L_42854a
          .zero 2
.L_445444:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44545e-.L_445448
.L_445448:
          .uleb128 .L_428658-.L_4285a0
          .uleb128 .L_4286b4-.L_428658
          .zero 2
          .uleb128 .L_428706-.L_4285a0
          .uleb128 .L_428722-.L_428706
          .uleb128 .L_428c6e-.L_4285a0
          .zero 1
          .uleb128 .L_428bf1-.L_4285a0
          .uleb128 .L_428bf6-.L_428bf1
          .uleb128 .L_428c83-.L_4285a0
          .zero 1
          .uleb128 .L_428c69-.L_4285a0
          .uleb128 .L_428c83-.L_428c69
          .zero 2
.L_44545e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445462-.L_445462
.L_445462:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445475-.L_445466
.L_445466:
          .uleb128 .L_42929f-.L_429270
          .uleb128 .L_4292f7-.L_42929f
          .zero 2
          .uleb128 .L_429305-.L_429270
          .uleb128 .L_42930a-.L_429305
          .uleb128 .L_429340-.L_429270
          .zero 1
          .uleb128 .L_429339-.L_429270
          .uleb128 .L_429358-.L_429339
          .zero 2
.L_445475:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445494-.L_445479
.L_445479:
          .uleb128 .L_429507-.L_4294f0
          .uleb128 .L_42958a-.L_429507
          .zero 2
          .uleb128 .L_429598-.L_4294f0
          .uleb128 .L_42959d-.L_429598
          .uleb128 .L_4295ef-.L_4294f0
          .zero 1
          .uleb128 .L_4295b7-.L_4294f0
          .uleb128 .L_4295d6-.L_4295b7
          .zero 2
          .uleb128 .L_4295e8-.L_4294f0
          .uleb128 .L_4295ed-.L_4295e8
          .uleb128 .L_429607-.L_4294f0
          .zero 1
          .uleb128 .L_429602-.L_4294f0
          .uleb128 .L_429607-.L_429602
          .zero 2
.L_445494:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4454a4-.L_445498
.L_445498:
          .uleb128 .L_42961f-.L_429610
          .uleb128 .L_429624-.L_42961f
          .zero 2
          .uleb128 .L_429630-.L_429610
          .uleb128 .L_429635-.L_429630
          .uleb128 .L_429644-.L_429610
          .zero 1
          .uleb128 .L_42963f-.L_429610
          .uleb128 .L_42965c-.L_42963f
          .zero 2
.L_4454a4:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4454be-.L_4454a8
.L_4454a8:
          .uleb128 .L_4296fc-.L_4296e0
          .uleb128 .L_429701-.L_4296fc
          .zero 2
          .uleb128 .L_429711-.L_4296e0
          .uleb128 .L_429716-.L_429711
          .uleb128 .L_42976e-.L_4296e0
          .zero 1
          .uleb128 .L_42971b-.L_4296e0
          .uleb128 .L_429720-.L_42971b
          .zero 2
          .uleb128 .L_429726-.L_4296e0
          .uleb128 .L_42972b-.L_429726
          .uleb128 .L_429786-.L_4296e0
          .zero 1
          .uleb128 .L_42973a-.L_4296e0
          .uleb128 .L_42979e-.L_42973a
          .zero 2
.L_4454be:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4454ce-.L_4454c2
.L_4454c2:
          .uleb128 .L_4297ae-.L_4297a0
          .uleb128 .L_4297b3-.L_4297ae
          .zero 2
          .uleb128 .L_4297c1-.L_4297a0
          .uleb128 .L_4297c6-.L_4297c1
          .uleb128 .L_4297de-.L_4297a0
          .zero 1
          .uleb128 .L_4297d9-.L_4297a0
          .uleb128 .L_4297f6-.L_4297d9
          .zero 2
.L_4454ce:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4454e8-.L_4454d2
.L_4454d2:
          .uleb128 .L_429815-.L_429800
          .uleb128 .L_42981a-.L_429815
          .zero 2
          .uleb128 .L_429827-.L_429800
          .uleb128 .L_42982c-.L_429827
          .uleb128 .L_429880-.L_429800
          .zero 1
          .uleb128 .L_429844-.L_429800
          .uleb128 .L_429849-.L_429844
          .zero 2
          .uleb128 .L_429862-.L_429800
          .uleb128 .L_429867-.L_429862
          .uleb128 .L_429898-.L_429800
          .zero 1
          .uleb128 .L_42987b-.L_429800
          .uleb128 .L_4298b0-.L_42987b
          .zero 2
.L_4454e8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44551a-.L_4454ec
.L_4454ec:
          .uleb128 .L_4298dc-.L_4298b0
          .uleb128 .L_4298fa-.L_4298dc
          .zero 2
          .uleb128 .L_429908-.L_4298b0
          .uleb128 .L_42990d-.L_429908
          .uleb128 .L_4299fa-.L_4298b0
          .zero 1
          .uleb128 .L_42991f-.L_4298b0
          .uleb128 .L_42993e-.L_42991f
          .zero 2
          .uleb128 .L_42994e-.L_4298b0
          .uleb128 .L_429953-.L_42994e
          .uleb128 .L_4299e2-.L_4298b0
          .zero 1
          .uleb128 .L_429958-.L_4298b0
          .uleb128 .L_42995d-.L_429958
          .zero 2
          .uleb128 .L_429963-.L_4298b0
          .uleb128 .L_429968-.L_429963
          .uleb128 .L_429a14-.L_4298b0
          .zero 1
          .uleb128 .L_429985-.L_4298b0
          .uleb128 .L_4299ca-.L_429985
          .zero 2
          .uleb128 .L_4299d8-.L_4298b0
          .uleb128 .L_4299dd-.L_4299d8
          .uleb128 .L_429a12-.L_4298b0
          .zero 1
          .uleb128 .L_4299f5-.L_4298b0
          .uleb128 .L_429a2c-.L_4299f5
          .zero 2
.L_44551a:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44554e-.L_44551e
.L_44551e:
          .uleb128 .L_429c90-.L_429b80
          .uleb128 .L_429c95-.L_429c90
          .uleb128 .L_42a11b-.L_429b80
          .zero 1
          .uleb128 .L_429d4f-.L_429b80
          .uleb128 .L_429d54-.L_429d4f
          .uleb128 .L_42a14b-.L_429b80
          .zero 1
          .uleb128 .L_429d64-.L_429b80
          .uleb128 .L_429da0-.L_429d64
          .uleb128 .L_42a137-.L_429b80
          .zero 1
          .uleb128 .L_429db0-.L_429b80
          .uleb128 .L_429dc0-.L_429db0
          .uleb128 .L_42a108-.L_429b80
          .zero 1
          .uleb128 .L_429eb4-.L_429b80
          .uleb128 .L_429eb9-.L_429eb4
          .uleb128 .L_42a0ee-.L_429b80
          .zero 1
          .uleb128 .L_429f46-.L_429b80
          .uleb128 .L_429f4b-.L_429f46
          .uleb128 .L_42a106-.L_429b80
          .zero 1
          .uleb128 .L_429f86-.L_429b80
          .uleb128 .L_42a019-.L_429f86
          .uleb128 .L_42a0ee-.L_429b80
          .zero 1
          .uleb128 .L_42a116-.L_429b80
          .uleb128 .L_42a14b-.L_42a116
          .zero 2
.L_44554e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445588-.L_445552
.L_445552:
          .uleb128 .L_42a756-.L_42a670
          .uleb128 .L_42a75b-.L_42a756
          .uleb128 .L_42afa1-.L_42a670
          .zero 1
          .uleb128 .L_42a818-.L_42a670
          .uleb128 .L_42a81d-.L_42a818
          .uleb128 .L_42af61-.L_42a670
          .zero 1
          .uleb128 .L_42a82d-.L_42a670
          .uleb128 .L_42a869-.L_42a82d
          .uleb128 .L_42af4d-.L_42a670
          .zero 1
          .uleb128 .L_42a879-.L_42a670
          .uleb128 .L_42a87e-.L_42a879
          .uleb128 .L_42afa6-.L_42a670
          .zero 1
          .uleb128 .L_42a9b7-.L_42a670
          .uleb128 .L_42a9bc-.L_42a9b7
          .uleb128 .L_42afd5-.L_42a670
          .zero 1
          .uleb128 .L_42aa4d-.L_42a670
          .uleb128 .L_42aa52-.L_42aa4d
          .uleb128 .L_42afb9-.L_42a670
          .zero 1
          .uleb128 .L_42aacc-.L_42a670
          .uleb128 .L_42aad1-.L_42aacc
          .zero 2
          .uleb128 .L_42ab4d-.L_42a670
          .uleb128 .L_42abed-.L_42ab4d
          .uleb128 .L_42afd5-.L_42a670
          .zero 1
          .uleb128 .L_42ad43-.L_42a670
          .uleb128 .L_42afb9-.L_42ad43
          .zero 2
.L_445588:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4455c1-.L_44558c
.L_44558c:
          .uleb128 .L_42b09c-.L_42afe0
          .uleb128 .L_42b0a1-.L_42b09c
          .uleb128 .L_42b668-.L_42afe0
          .zero 1
          .uleb128 .L_42b15b-.L_42afe0
          .uleb128 .L_42b160-.L_42b15b
          .uleb128 .L_42b62e-.L_42afe0
          .zero 1
          .uleb128 .L_42b170-.L_42afe0
          .uleb128 .L_42b1ac-.L_42b170
          .uleb128 .L_42b69e-.L_42afe0
          .zero 1
          .uleb128 .L_42b1bc-.L_42afe0
          .uleb128 .L_42b1c1-.L_42b1bc
          .uleb128 .L_42b68b-.L_42afe0
          .zero 1
          .uleb128 .L_42b26a-.L_42afe0
          .uleb128 .L_42b2e3-.L_42b26a
          .zero 2
          .uleb128 .L_42b369-.L_42afe0
          .uleb128 .L_42b46b-.L_42b369
          .uleb128 .L_42b689-.L_42afe0
          .zero 1
          .uleb128 .L_42b4fc-.L_42afe0
          .uleb128 .L_42b501-.L_42b4fc
          .uleb128 .L_42b66d-.L_42afe0
          .zero 1
          .uleb128 .L_42b588-.L_42afe0
          .uleb128 .L_42b58d-.L_42b588
          .uleb128 .L_42b689-.L_42afe0
          .zero 1
          .uleb128 .L_42b663-.L_42afe0
          .uleb128 .L_42b6b2-.L_42b663
          .zero 2
.L_4455c1:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4455fa-.L_4455c5
.L_4455c5:
          .uleb128 .L_42b826-.L_42b760
          .uleb128 .L_42b86d-.L_42b826
          .zero 2
          .uleb128 .L_42b998-.L_42b760
          .uleb128 .L_42b99d-.L_42b998
          .uleb128 .L_42bf2e-.L_42b760
          .zero 1
          .uleb128 .L_42ba5c-.L_42b760
          .uleb128 .L_42ba61-.L_42ba5c
          .uleb128 .L_42bebd-.L_42b760
          .zero 1
          .uleb128 .L_42ba72-.L_42b760
          .uleb128 .L_42bab0-.L_42ba72
          .uleb128 .L_42bf19-.L_42b760
          .zero 1
          .uleb128 .L_42bac1-.L_42b760
          .uleb128 .L_42bad4-.L_42bac1
          .uleb128 .L_42bf06-.L_42b760
          .zero 1
          .uleb128 .L_42bc28-.L_42b760
          .uleb128 .L_42bc2d-.L_42bc28
          .uleb128 .L_42bebb-.L_42b760
          .zero 1
          .uleb128 .L_42bcbe-.L_42b760
          .uleb128 .L_42bcc3-.L_42bcbe
          .uleb128 .L_42be9f-.L_42b760
          .zero 1
          .uleb128 .L_42bd28-.L_42b760
          .uleb128 .L_42bdc7-.L_42bd28
          .uleb128 .L_42bebb-.L_42b760
          .zero 1
          .uleb128 .L_42bf01-.L_42b760
          .uleb128 .L_42bf2e-.L_42bf01
          .zero 2
.L_4455fa:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44560b-.L_4455fe
.L_4455fe:
          .uleb128 .L_42bffa-.L_42bfc0
          .uleb128 .L_42bfff-.L_42bffa
          .zero 2
          .uleb128 .L_42c00b-.L_42bfc0
          .uleb128 .L_42c010-.L_42c00b
          .uleb128 .L_42c082-.L_42bfc0
          .zero 1
          .uleb128 .L_42c039-.L_42bfc0
          .uleb128 .L_42c09a-.L_42c039
          .zero 2
.L_44560b:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44561e-.L_44560f
.L_44560f:
          .uleb128 .L_42c11b-.L_42c0a0
          .uleb128 .L_42c120-.L_42c11b
          .zero 2
          .uleb128 .L_42c12e-.L_42c0a0
          .uleb128 .L_42c133-.L_42c12e
          .uleb128 .L_42c1ba-.L_42c0a0
          .zero 1
          .uleb128 .L_42c16a-.L_42c0a0
          .uleb128 .L_42c1d2-.L_42c16a
          .zero 2
.L_44561e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44562e-.L_445622
.L_445622:
          .uleb128 .L_42c40c-.L_42c3f0
          .uleb128 .L_42c411-.L_42c40c
          .zero 2
          .uleb128 .L_42c41e-.L_42c3f0
          .uleb128 .L_42c423-.L_42c41e
          .uleb128 .L_42c441-.L_42c3f0
          .zero 1
          .uleb128 .L_42c429-.L_42c3f0
          .uleb128 .L_42c459-.L_42c429
          .zero 2
.L_44562e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445643-.L_445632
.L_445632:
          .uleb128 .L_42c478-.L_42c460
          .uleb128 .L_42c546-.L_42c478
          .zero 2
          .uleb128 .L_42c54c-.L_42c460
          .uleb128 .L_42c551-.L_42c54c
          .uleb128 .L_42c615-.L_42c460
          .zero 1
          .uleb128 .L_42c564-.L_42c460
          .uleb128 .L_42c62d-.L_42c564
          .zero 2
.L_445643:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44569b-.L_445647
.L_445647:
          .uleb128 .L_42c9a7-.L_42c780
          .uleb128 .L_42c9ac-.L_42c9a7
          .zero 2
          .uleb128 .L_42ca74-.L_42c780
          .uleb128 .L_42ca79-.L_42ca74
          .uleb128 .L_42d59a-.L_42c780
          .zero 1
          .uleb128 .L_42cb35-.L_42c780
          .uleb128 .L_42cb3a-.L_42cb35
          .uleb128 .L_42d54f-.L_42c780
          .zero 1
          .uleb128 .L_42cb4a-.L_42c780
          .uleb128 .L_42cb86-.L_42cb4a
          .uleb128 .L_42d541-.L_42c780
          .zero 1
          .uleb128 .L_42cb96-.L_42c780
          .uleb128 .L_42cbd2-.L_42cb96
          .uleb128 .L_42d53c-.L_42c780
          .zero 1
          .uleb128 .L_42cbe5-.L_42c780
          .uleb128 .L_42cbea-.L_42cbe5
          .uleb128 .L_42d516-.L_42c780
          .zero 1
          .uleb128 .L_42cca4-.L_42c780
          .uleb128 .L_42cd90-.L_42cca4
          .uleb128 .L_42d4f5-.L_42c780
          .zero 1
          .uleb128 .L_42ce29-.L_42c780
          .uleb128 .L_42ce2e-.L_42ce29
          .uleb128 .L_42d59f-.L_42c780
          .zero 1
          .uleb128 .L_42cedb-.L_42c780
          .uleb128 .L_42cee0-.L_42cedb
          .uleb128 .L_42d4da-.L_42c780
          .zero 1
          .uleb128 .L_42cf18-.L_42c780
          .uleb128 .L_42cf3a-.L_42cf18
          .uleb128 .L_42d4f5-.L_42c780
          .zero 1
          .uleb128 .L_42cf77-.L_42c780
          .uleb128 .L_42cf7c-.L_42cf77
          .uleb128 .L_42d59f-.L_42c780
          .zero 1
          .uleb128 .L_42d02d-.L_42c780
          .uleb128 .L_42d209-.L_42d02d
          .zero 2
          .uleb128 .L_42d227-.L_42c780
          .uleb128 .L_42d22c-.L_42d227
          .uleb128 .L_42d59f-.L_42c780
          .zero 1
          .uleb128 .L_42d3c8-.L_42c780
          .uleb128 .L_42d516-.L_42d3c8
          .zero 2
.L_44569b:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4456af-.L_44569f
.L_44569f:
          .uleb128 .L_42d63f-.L_42d5c0
          .uleb128 .L_42d75b-.L_42d63f
          .zero 2
          .uleb128 .L_42d769-.L_42d5c0
          .uleb128 .L_42d7ba-.L_42d769
          .uleb128 .L_42d7c1-.L_42d5c0
          .zero 1
          .uleb128 .L_42d7d5-.L_42d5c0
          .uleb128 .L_42d7da-.L_42d7d5
          .zero 2
.L_4456af:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4456cf-.L_4456b3
.L_4456b3:
          .uleb128 .L_42dabe-.L_42da30
          .uleb128 .L_42dac3-.L_42dabe
          .zero 2
          .uleb128 .L_42dad5-.L_42da30
          .uleb128 .L_42dada-.L_42dad5
          .uleb128 .L_42de62-.L_42da30
          .zero 1
          .uleb128 .L_42dadf-.L_42da30
          .uleb128 .L_42dae4-.L_42dadf
          .zero 2
          .uleb128 .L_42daea-.L_42da30
          .uleb128 .L_42daef-.L_42daea
          .uleb128 .L_42de4a-.L_42da30
          .zero 1
          .uleb128 .L_42db68-.L_42da30
          .uleb128 .L_42de7a-.L_42db68
          .zero 2
.L_4456cf:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445711-.L_4456d3
.L_4456d3:
          .uleb128 .L_42df30-.L_42de80
          .uleb128 .L_42e2cc-.L_42df30
          .uleb128 .L_42e7f4-.L_42de80
          .zero 1
          .uleb128 .L_42e2dd-.L_42de80
          .uleb128 .L_42e2e2-.L_42e2dd
          .uleb128 .L_42e7c7-.L_42de80
          .zero 1
          .uleb128 .L_42e2e7-.L_42de80
          .uleb128 .L_42e2ec-.L_42e2e7
          .uleb128 .L_42e7f4-.L_42de80
          .zero 1
          .uleb128 .L_42e2f4-.L_42de80
          .uleb128 .L_42e2f9-.L_42e2f4
          .uleb128 .L_42e7db-.L_42de80
          .zero 1
          .uleb128 .L_42e315-.L_42de80
          .uleb128 .L_42e4d1-.L_42e315
          .uleb128 .L_42e7f4-.L_42de80
          .zero 1
          .uleb128 .L_42e4e0-.L_42de80
          .uleb128 .L_42e4e5-.L_42e4e0
          .uleb128 .L_42e76a-.L_42de80
          .zero 1
          .uleb128 .L_42e4ea-.L_42de80
          .uleb128 .L_42e4ef-.L_42e4ea
          .uleb128 .L_42e7f4-.L_42de80
          .zero 1
          .uleb128 .L_42e4f7-.L_42de80
          .uleb128 .L_42e4fc-.L_42e4f7
          .uleb128 .L_42e7b3-.L_42de80
          .zero 1
          .uleb128 .L_42e51a-.L_42de80
          .uleb128 .L_42e6e8-.L_42e51a
          .uleb128 .L_42e7f4-.L_42de80
          .zero 1
          .uleb128 .L_42e7ae-.L_42de80
          .uleb128 .L_42e7b3-.L_42e7ae
          .zero 2
.L_445711:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445745-.L_445715
.L_445715:
          .uleb128 .L_42ea09-.L_42e8d0
          .uleb128 .L_42ea0e-.L_42ea09
          .uleb128 .L_42eeb6-.L_42e8d0
          .zero 1
          .uleb128 .L_42eac8-.L_42e8d0
          .uleb128 .L_42eacd-.L_42eac8
          .uleb128 .L_42eed2-.L_42e8d0
          .zero 1
          .uleb128 .L_42eadd-.L_42e8d0
          .uleb128 .L_42eb19-.L_42eadd
          .uleb128 .L_42ee75-.L_42e8d0
          .zero 1
          .uleb128 .L_42eb29-.L_42e8d0
          .uleb128 .L_42eb3c-.L_42eb29
          .uleb128 .L_42ee89-.L_42e8d0
          .zero 1
          .uleb128 .L_42ec41-.L_42e8d0
          .uleb128 .L_42ece8-.L_42ec41
          .uleb128 .L_42eeb4-.L_42e8d0
          .zero 1
          .uleb128 .L_42ed75-.L_42e8d0
          .uleb128 .L_42ed7a-.L_42ed75
          .uleb128 .L_42ee9c-.L_42e8d0
          .zero 1
          .uleb128 .L_42ede6-.L_42e8d0
          .uleb128 .L_42edeb-.L_42ede6
          .uleb128 .L_42eeb4-.L_42e8d0
          .zero 1
          .uleb128 .L_42ee84-.L_42e8d0
          .uleb128 .L_42eed2-.L_42ee84
          .zero 2
.L_445745:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44575a-.L_445749
.L_445749:
          .uleb128 .L_42f1bf-.L_42f110
          .uleb128 .L_42f1c4-.L_42f1bf
          .uleb128 .L_42f2f1-.L_42f110
          .zero 1
          .uleb128 .L_42f1d8-.L_42f110
          .uleb128 .L_42f1dd-.L_42f1d8
          .uleb128 .L_42f2bf-.L_42f110
          .zero 1
          .uleb128 .L_42f2ec-.L_42f110
          .uleb128 .L_42f2f1-.L_42f2ec
          .zero 2
.L_44575a:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44575e-.L_44575e
.L_44575e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44577e-.L_445762
.L_445762:
          .uleb128 .L_42f494-.L_42f430
          .uleb128 .L_42f4b0-.L_42f494
          .uleb128 .L_42f628-.L_42f430
          .zero 1
          .uleb128 .L_42f51b-.L_42f430
          .uleb128 .L_42f520-.L_42f51b
          .uleb128 .L_42f666-.L_42f430
          .zero 1
          .uleb128 .L_42f531-.L_42f430
          .uleb128 .L_42f536-.L_42f531
          .uleb128 .L_42f646-.L_42f430
          .zero 1
          .uleb128 .L_42f623-.L_42f430
          .uleb128 .L_42f628-.L_42f623
          .uleb128 .L_42f628-.L_42f430
          .zero 1
          .uleb128 .L_42f641-.L_42f430
          .uleb128 .L_42f646-.L_42f641
          .zero 2
.L_44577e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445791-.L_445782
.L_445782:
          .uleb128 .L_42f6b5-.L_42f670
          .uleb128 .L_42f6d1-.L_42f6b5
          .zero 2
          .uleb128 .L_42f731-.L_42f670
          .uleb128 .L_42f736-.L_42f731
          .uleb128 .L_42f7a9-.L_42f670
          .zero 1
          .uleb128 .L_42f7a4-.L_42f670
          .uleb128 .L_42f7bc-.L_42f7a4
          .zero 2
.L_445791:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4457a5-.L_445795
.L_445795:
          .uleb128 .L_42f806-.L_42f7c0
          .uleb128 .L_42f822-.L_42f806
          .zero 2
          .uleb128 .L_42fa54-.L_42f7c0
          .uleb128 .L_42fc01-.L_42fa54
          .uleb128 .L_42fc44-.L_42f7c0
          .zero 1
          .uleb128 .L_42fc52-.L_42f7c0
          .uleb128 .L_42fc5c-.L_42fc52
          .zero 2
.L_4457a5:
          .zero 3
.L_4457a8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4457b8-.L_4457ac
.L_4457ac:
          .uleb128 .L_42ffa8-.L_42ff90
          .uleb128 .L_42ffad-.L_42ffa8
          .zero 2
          .uleb128 .L_42ffbb-.L_42ff90
          .uleb128 .L_42ffc0-.L_42ffbb
          .uleb128 .L_42ffec-.L_42ff90
          .zero 1
          .uleb128 .L_42ffc5-.L_42ff90
          .uleb128 .L_430004-.L_42ffc5
          .zero 2
.L_4457b8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4457d3-.L_4457bc
.L_4457bc:
          .uleb128 .L_43002e-.L_430010
          .uleb128 .L_430046-.L_43002e
          .zero 2
          .uleb128 .L_430053-.L_430010
          .uleb128 .L_430058-.L_430053
          .uleb128 .L_430092-.L_430010
          .zero 1
          .uleb128 .L_430071-.L_430010
          .uleb128 .L_430076-.L_430071
          .zero 2
          .uleb128 .L_430083-.L_430010
          .uleb128 .L_430088-.L_430083
          .uleb128 .L_4300aa-.L_430010
          .zero 1
          .uleb128 .L_4300a5-.L_430010
          .uleb128 .L_4300aa-.L_4300a5
          .zero 2
.L_4457d3:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4457f9-.L_4457d7
.L_4457d7:
          .uleb128 .L_43015e-.L_4300b0
          .uleb128 .L_430163-.L_43015e
          .uleb128 .L_430275-.L_4300b0
          .zero 1
          .uleb128 .L_4301f6-.L_4300b0
          .uleb128 .L_4301fb-.L_4301f6
          .uleb128 .L_4302af-.L_4300b0
          .zero 1
          .uleb128 .L_43020b-.L_4300b0
          .uleb128 .L_430247-.L_43020b
          .uleb128 .L_43029b-.L_4300b0
          .zero 1
          .uleb128 .L_430257-.L_4300b0
          .uleb128 .L_430268-.L_430257
          .uleb128 .L_43028e-.L_4300b0
          .zero 1
          .uleb128 .L_430289-.L_4300b0
          .uleb128 .L_43028e-.L_430289
          .zero 2
          .uleb128 .L_4302aa-.L_4300b0
          .uleb128 .L_4302af-.L_4302aa
          .zero 2
.L_4457f9:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445832-.L_4457fd
.L_4457fd:
          .uleb128 .L_430391-.L_4302d0
          .uleb128 .L_430396-.L_430391
          .uleb128 .L_4308d2-.L_4302d0
          .zero 1
          .uleb128 .L_430453-.L_4302d0
          .uleb128 .L_430458-.L_430453
          .uleb128 .L_430890-.L_4302d0
          .zero 1
          .uleb128 .L_430468-.L_4302d0
          .uleb128 .L_4304a4-.L_430468
          .uleb128 .L_4308d7-.L_4302d0
          .zero 1
          .uleb128 .L_4304b4-.L_4302d0
          .uleb128 .L_4304b9-.L_4304b4
          .uleb128 .L_4308eb-.L_4302d0
          .zero 1
          .uleb128 .L_43053e-.L_4302d0
          .uleb128 .L_430543-.L_43053e
          .zero 2
          .uleb128 .L_4305e8-.L_4302d0
          .uleb128 .L_4305ed-.L_4305e8
          .uleb128 .L_4308d0-.L_4302d0
          .zero 1
          .uleb128 .L_43067f-.L_4302d0
          .uleb128 .L_430684-.L_43067f
          .uleb128 .L_430873-.L_4302d0
          .zero 1
          .uleb128 .L_4306ca-.L_4302d0
          .uleb128 .L_43076e-.L_4306ca
          .uleb128 .L_4308d0-.L_4302d0
          .zero 1
          .uleb128 .L_4308cb-.L_4302d0
          .uleb128 .L_4308fe-.L_4308cb
          .zero 2
.L_445832:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445865-.L_445836
.L_445836:
          .uleb128 .L_430af1-.L_430900
          .uleb128 .L_430af6-.L_430af1
          .uleb128 .L_43101f-.L_430900
          .zero 1
          .uleb128 .L_430bb3-.L_430900
          .uleb128 .L_430bb8-.L_430bb3
          .uleb128 .L_430fde-.L_430900
          .zero 1
          .uleb128 .L_430bc8-.L_430900
          .uleb128 .L_430c04-.L_430bc8
          .uleb128 .L_430fca-.L_430900
          .zero 1
          .uleb128 .L_430c14-.L_430900
          .uleb128 .L_430c33-.L_430c14
          .uleb128 .L_430fb7-.L_430900
          .zero 1
          .uleb128 .L_430d3c-.L_430900
          .uleb128 .L_430d41-.L_430d3c
          .uleb128 .L_430fb5-.L_430900
          .zero 1
          .uleb128 .L_430dce-.L_430900
          .uleb128 .L_430dd3-.L_430dce
          .uleb128 .L_430f9d-.L_430900
          .zero 1
          .uleb128 .L_430e10-.L_430900
          .uleb128 .L_430e4b-.L_430e10
          .uleb128 .L_430fb5-.L_430900
          .zero 1
          .uleb128 .L_430fc5-.L_430900
          .uleb128 .L_43101f-.L_430fc5
          .zero 2
.L_445865:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4458d2-.L_445869
.L_445869:
          .uleb128 .L_43111e-.L_431030
          .uleb128 .L_431123-.L_43111e
          .uleb128 .L_4318da-.L_431030
          .zero 1
          .uleb128 .L_4311dd-.L_431030
          .uleb128 .L_4311e2-.L_4311dd
          .uleb128 .L_431911-.L_431030
          .zero 1
          .uleb128 .L_4311f2-.L_431030
          .uleb128 .L_43122e-.L_4311f2
          .uleb128 .L_4318fd-.L_431030
          .zero 1
          .uleb128 .L_43123e-.L_431030
          .uleb128 .L_431258-.L_43123e
          .uleb128 .L_431997-.L_431030
          .zero 1
          .uleb128 .L_431266-.L_431030
          .uleb128 .L_4312ad-.L_431266
          .uleb128 .L_43196c-.L_431030
          .zero 1
          .uleb128 .L_431357-.L_431030
          .uleb128 .L_43135c-.L_431357
          .zero 2
          .uleb128 .L_43136a-.L_431030
          .uleb128 .L_43136f-.L_43136a
          .uleb128 .L_431964-.L_431030
          .zero 1
          .uleb128 .L_43137d-.L_431030
          .uleb128 .L_431382-.L_43137d
          .zero 2
          .uleb128 .L_431390-.L_431030
          .uleb128 .L_431395-.L_431390
          .uleb128 .L_43196a-.L_431030
          .zero 1
          .uleb128 .L_4313de-.L_431030
          .uleb128 .L_4313e3-.L_4313de
          .zero 2
          .uleb128 .L_4313f1-.L_431030
          .uleb128 .L_4313f6-.L_4313f1
          .uleb128 .L_431968-.L_431030
          .zero 1
          .uleb128 .L_43141d-.L_431030
          .uleb128 .L_431492-.L_43141d
          .zero 2
          .uleb128 .L_4314a0-.L_431030
          .uleb128 .L_4314a5-.L_4314a0
          .uleb128 .L_43194c-.L_431030
          .zero 1
          .uleb128 .L_4314c1-.L_431030
          .uleb128 .L_43161f-.L_4314c1
          .zero 2
          .uleb128 .L_4316af-.L_431030
          .uleb128 .L_4316b4-.L_4316af
          .uleb128 .L_431934-.L_431030
          .zero 1
          .uleb128 .L_43173c-.L_431030
          .uleb128 .L_431741-.L_43173c
          .uleb128 .L_431966-.L_431030
          .zero 1
          .uleb128 .L_431781-.L_431030
          .uleb128 .L_431806-.L_431781
          .uleb128 .L_431934-.L_431030
          .zero 1
          .uleb128 .L_4318d5-.L_431030
          .uleb128 .L_431997-.L_4318d5
          .zero 2
.L_4458d2:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44592c-.L_4458d6
.L_4458d6:
          .uleb128 .L_4319f3-.L_4319a0
          .uleb128 .L_431b19-.L_4319f3
          .zero 2
          .uleb128 .L_431b25-.L_4319a0
          .uleb128 .L_431b2a-.L_431b25
          .uleb128 .L_4321a5-.L_4319a0
          .zero 1
          .uleb128 .L_431b63-.L_4319a0
          .uleb128 .L_431ba9-.L_431b63
          .zero 2
          .uleb128 .L_431bb7-.L_4319a0
          .uleb128 .L_431bbc-.L_431bb7
          .uleb128 .L_43223e-.L_4319a0
          .zero 1
          .uleb128 .L_431c70-.L_4319a0
          .uleb128 .L_431c75-.L_431c70
          .uleb128 .L_432239-.L_4319a0
          .zero 1
          .uleb128 .L_431d2f-.L_4319a0
          .uleb128 .L_431d34-.L_431d2f
          .uleb128 .L_4321fe-.L_4319a0
          .zero 1
          .uleb128 .L_431d44-.L_4319a0
          .uleb128 .L_431d80-.L_431d44
          .uleb128 .L_4321ea-.L_4319a0
          .zero 1
          .uleb128 .L_431d90-.L_4319a0
          .uleb128 .L_431da1-.L_431d90
          .uleb128 .L_4321bd-.L_4319a0
          .zero 1
          .uleb128 .L_431e20-.L_4319a0
          .uleb128 .L_431e3f-.L_431e20
          .zero 2
          .uleb128 .L_431e4b-.L_4319a0
          .uleb128 .L_431e50-.L_431e4b
          .uleb128 .L_4321d2-.L_4319a0
          .zero 1
          .uleb128 .L_431e68-.L_4319a0
          .uleb128 .L_431e6d-.L_431e68
          .zero 2
          .uleb128 .L_431f29-.L_4319a0
          .uleb128 .L_431f2e-.L_431f29
          .uleb128 .L_4321d0-.L_4319a0
          .zero 1
          .uleb128 .L_431fbf-.L_4319a0
          .uleb128 .L_431fc4-.L_431fbf
          .uleb128 .L_432189-.L_4319a0
          .zero 1
          .uleb128 .L_43200c-.L_4319a0
          .uleb128 .L_432033-.L_43200c
          .uleb128 .L_4321d0-.L_4319a0
          .zero 1
          .uleb128 .L_4321b8-.L_4319a0
          .uleb128 .L_432239-.L_4321b8
          .zero 2
.L_44592c:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_445958-.L_44592f
.L_44592f:
          .byte 0x1
          .uleb128 .L_445951-.L_445931
.L_445931:
          .uleb128 .L_432a86-.L_432a70
          .uleb128 .L_432a8b-.L_432a86
          .zero 2
          .uleb128 .L_432ae2-.L_432a70
          .uleb128 .L_432ae7-.L_432ae2
          .uleb128 .L_432b3b-.L_432a70
          .zero 1
          .uleb128 .L_432afe-.L_432a70
          .uleb128 .L_432b03-.L_432afe
          .uleb128 .L_432b53-.L_432a70
          .byte 0x1
          .uleb128 .L_432b4e-.L_432a70
          .uleb128 .L_432b53-.L_432b4e
          .zero 2
          .uleb128 .L_432b5b-.L_432a70
          .uleb128 .L_432b60-.L_432b5b
          .uleb128 .L_432b60-.L_432a70
          .byte 0x1
          .uleb128 .L_432b87-.L_432a70
          .uleb128 .L_432b8c-.L_432b87
          .uleb128 .L_432b8c-.L_432a70
          .zero 1
.L_445951:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445958:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44598c-.L_44595c
.L_44595c:
          .uleb128 .L_432cd3-.L_432ba0
          .uleb128 .L_432cd8-.L_432cd3
          .uleb128 .L_433297-.L_432ba0
          .zero 1
          .uleb128 .L_432d92-.L_432ba0
          .uleb128 .L_432d97-.L_432d92
          .uleb128 .L_433235-.L_432ba0
          .zero 1
          .uleb128 .L_432da7-.L_432ba0
          .uleb128 .L_432de3-.L_432da7
          .uleb128 .L_433283-.L_432ba0
          .zero 1
          .uleb128 .L_432df3-.L_432ba0
          .uleb128 .L_432df8-.L_432df3
          .uleb128 .L_433270-.L_432ba0
          .zero 1
          .uleb128 .L_432fc7-.L_432ba0
          .uleb128 .L_432fcc-.L_432fc7
          .uleb128 .L_433217-.L_432ba0
          .zero 1
          .uleb128 .L_43305d-.L_432ba0
          .uleb128 .L_433062-.L_43305d
          .uleb128 .L_433233-.L_432ba0
          .zero 1
          .uleb128 .L_4330aa-.L_432ba0
          .uleb128 .L_433142-.L_4330aa
          .uleb128 .L_433217-.L_432ba0
          .zero 1
          .uleb128 .L_43326b-.L_432ba0
          .uleb128 .L_433297-.L_43326b
          .zero 2
.L_44598c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445990-.L_445990
.L_445990:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4459cf-.L_445994
.L_445994:
          .uleb128 .L_4335c0-.L_433590
          .uleb128 .L_4337e3-.L_4335c0
          .zero 2
          .uleb128 .L_4338b9-.L_433590
          .uleb128 .L_4338be-.L_4338b9
          .uleb128 .L_433e70-.L_433590
          .zero 1
          .uleb128 .L_43397b-.L_433590
          .uleb128 .L_433980-.L_43397b
          .uleb128 .L_433e9f-.L_433590
          .zero 1
          .uleb128 .L_433990-.L_433590
          .uleb128 .L_4339cc-.L_433990
          .uleb128 .L_433ec9-.L_433590
          .zero 1
          .uleb128 .L_4339dc-.L_433590
          .uleb128 .L_4339e1-.L_4339dc
          .uleb128 .L_433e8c-.L_433590
          .zero 1
          .uleb128 .L_433a65-.L_433590
          .uleb128 .L_433a6a-.L_433a65
          .uleb128 .L_433e52-.L_433590
          .zero 1
          .uleb128 .L_433afb-.L_433590
          .uleb128 .L_433b00-.L_433afb
          .uleb128 .L_433e6e-.L_433590
          .zero 1
          .uleb128 .L_433bd3-.L_433590
          .uleb128 .L_433c86-.L_433bd3
          .zero 2
          .uleb128 .L_433cc1-.L_433590
          .uleb128 .L_433d6e-.L_433cc1
          .uleb128 .L_433e52-.L_433590
          .zero 1
          .uleb128 .L_433e87-.L_433590
          .uleb128 .L_433edd-.L_433e87
          .zero 2
.L_4459cf:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4459e1-.L_4459d3
.L_4459d3:
          .uleb128 .L_432270-.L_432240
          .uleb128 .L_432275-.L_432270
          .zero 2
          .uleb128 .L_43228f-.L_432240
          .uleb128 .L_432294-.L_43228f
          .uleb128 .L_4322d4-.L_432240
          .zero 1
          .uleb128 .L_4322c8-.L_432240
          .uleb128 .L_4322ec-.L_4322c8
          .zero 2
.L_4459e1:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445a1a-.L_4459e5
.L_4459e5:
          .uleb128 .L_432320-.L_4322f0
          .uleb128 .L_4323da-.L_432320
          .zero 2
          .uleb128 .L_432477-.L_4322f0
          .uleb128 .L_43247c-.L_432477
          .uleb128 .L_4329e3-.L_4322f0
          .zero 1
          .uleb128 .L_432536-.L_4322f0
          .uleb128 .L_43253b-.L_432536
          .uleb128 .L_432a13-.L_4322f0
          .zero 1
          .uleb128 .L_43254b-.L_4322f0
          .uleb128 .L_432587-.L_43254b
          .uleb128 .L_4329ff-.L_4322f0
          .zero 1
          .uleb128 .L_432597-.L_4322f0
          .uleb128 .L_4325a8-.L_432597
          .uleb128 .L_4329d0-.L_4322f0
          .zero 1
          .uleb128 .L_432746-.L_4322f0
          .uleb128 .L_43274b-.L_432746
          .uleb128 .L_4329b2-.L_4322f0
          .zero 1
          .uleb128 .L_4327dc-.L_4322f0
          .uleb128 .L_4327e1-.L_4327dc
          .uleb128 .L_4329ce-.L_4322f0
          .zero 1
          .uleb128 .L_432841-.L_4322f0
          .uleb128 .L_4328dd-.L_432841
          .uleb128 .L_4329b2-.L_4322f0
          .zero 1
          .uleb128 .L_4329de-.L_4322f0
          .uleb128 .L_432a13-.L_4329de
          .zero 2
.L_445a1a:
          .zero 2
.L_445a1c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445a7e-.L_445a20
.L_445a20:
          .uleb128 .L_43445f-.L_4343f0
          .uleb128 .L_4345ba-.L_43445f
          .zero 2
          .uleb128 .L_43466b-.L_4343f0
          .uleb128 .L_434670-.L_43466b
          .uleb128 .L_435058-.L_4343f0
          .zero 1
          .uleb128 .L_43472e-.L_4343f0
          .uleb128 .L_434733-.L_43472e
          .uleb128 .L_43501c-.L_4343f0
          .zero 1
          .uleb128 .L_434744-.L_4343f0
          .uleb128 .L_434782-.L_434744
          .uleb128 .L_4350aa-.L_4343f0
          .zero 1
          .uleb128 .L_434793-.L_4343f0
          .uleb128 .L_4347a6-.L_434793
          .uleb128 .L_435097-.L_4343f0
          .zero 1
          .uleb128 .L_43484e-.L_4343f0
          .uleb128 .L_434b61-.L_43484e
          .zero 2
          .uleb128 .L_434b6e-.L_4343f0
          .uleb128 .L_434b73-.L_434b6e
          .uleb128 .L_4350dc-.L_4343f0
          .zero 1
          .uleb128 .L_434bcc-.L_4343f0
          .uleb128 .L_434ceb-.L_434bcc
          .zero 2
          .uleb128 .L_434cf8-.L_4343f0
          .uleb128 .L_434cfd-.L_434cf8
          .uleb128 .L_435079-.L_4343f0
          .zero 1
          .uleb128 .L_434d82-.L_4343f0
          .uleb128 .L_434d87-.L_434d82
          .uleb128 .L_43505d-.L_4343f0
          .zero 1
          .uleb128 .L_434e1b-.L_4343f0
          .uleb128 .L_434e20-.L_434e1b
          .uleb128 .L_4350da-.L_4343f0
          .zero 1
          .uleb128 .L_434e51-.L_4343f0
          .uleb128 .L_434e56-.L_434e51
          .zero 2
          .uleb128 .L_434e63-.L_4343f0
          .uleb128 .L_434e68-.L_434e63
          .uleb128 .L_4350de-.L_4343f0
          .zero 1
          .uleb128 .L_434e70-.L_4343f0
          .uleb128 .L_434e97-.L_434e70
          .zero 2
          .uleb128 .L_434eb2-.L_4343f0
          .uleb128 .L_434f4a-.L_434eb2
          .uleb128 .L_43505d-.L_4343f0
          .zero 1
          .uleb128 .L_435053-.L_4343f0
          .uleb128 .L_4350da-.L_435053
          .zero 2
.L_445a7e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x30
          .byte 0xa3
          .byte 0x2
          .byte 0x5
          .byte 0xd6
          .byte 0xd
          .byte 0x0
          .byte 0xe2
          .byte 0x3
          .byte 0x5
          .byte 0xf4
          .byte 0xc
          .byte 0x0
          .byte 0xf7
          .byte 0x3
          .byte 0x3c
          .byte 0xc2
          .byte 0xd
          .byte 0x0
          .byte 0xc3
          .byte 0x4
          .byte 0x5
          .byte 0xaf
          .byte 0xd
          .byte 0x0
          .byte 0x86
          .byte 0x8
          .byte 0x5
          .byte 0xd6
          .byte 0xc
          .byte 0x0
          .byte 0x9c
          .byte 0x9
          .byte 0x5
          .byte 0xf2
          .byte 0xc
          .byte 0x0
          .byte 0xe9
          .byte 0x9
          .byte 0x98
          .byte 0x1
          .byte 0xd6
          .byte 0xc
          .byte 0x0
          .byte 0xaa
          .byte 0xd
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x3b
          .byte 0x2f
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x6
          .byte 0x5
          .byte 0xfe
          .byte 0x11
          .byte 0x0
          .byte 0xbb
          .byte 0x8
          .byte 0x5
          .byte 0x9a
          .byte 0x12
          .byte 0x0
          .byte 0xd0
          .byte 0x8
          .byte 0x3c
          .byte 0xc4
          .byte 0x12
          .byte 0x0
          .byte 0x9c
          .byte 0x9
          .byte 0x5
          .byte 0xd8
          .byte 0x12
          .byte 0x0
          .byte 0xa2
          .byte 0xa
          .byte 0x5
          .byte 0xfc
          .byte 0x11
          .byte 0x0
          .byte 0xb8
          .byte 0xb
          .byte 0x5
          .byte 0xe0
          .byte 0x11
          .byte 0x0
          .byte 0xa9
          .byte 0xd
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0xe
          .byte 0x9e
          .byte 0x1
          .byte 0xfc
          .byte 0x11
          .byte 0x0
          .byte 0x85
          .byte 0x10
          .byte 0xe6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445af8:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_445b2c-.L_445afb
.L_445afb:
          .byte 0x1
          .uleb128 .L_445b25-.L_445afd
.L_445afd:
          .uleb128 .L_435125-.L_4350e0
          .uleb128 .L_43512a-.L_435125
          .uleb128 .L_4352b3-.L_4350e0
          .zero 1
          .uleb128 .L_435181-.L_4350e0
          .uleb128 .L_435186-.L_435181
          .uleb128 .L_4352a1-.L_4350e0
          .zero 1
          .uleb128 .L_43519d-.L_4350e0
          .uleb128 .L_4351a2-.L_43519d
          .uleb128 .L_435294-.L_4350e0
          .byte 0x1
          .uleb128 .L_4351fe-.L_4350e0
          .uleb128 .L_43526f-.L_4351fe
          .uleb128 .L_43526f-.L_4350e0
          .zero 1
          .uleb128 .L_43528f-.L_4350e0
          .uleb128 .L_435294-.L_43528f
          .zero 2
          .uleb128 .L_43529c-.L_4350e0
          .uleb128 .L_4352a1-.L_43529c
          .uleb128 .L_4352b8-.L_4350e0
          .byte 0x1
          .uleb128 .L_4352df-.L_4350e0
          .uleb128 .L_4352e4-.L_4352df
          .uleb128 .L_4352e4-.L_4350e0
          .zero 1
.L_445b25:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445b2c:
#===================================
# end section .gcc_except_table
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_645e70:
          .quad .L_4029c0
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_645e78:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x8c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_645e90:
          .quad .L_412410
          .quad .L_412420
          .quad .L_410120
          .quad .L_410160
          .quad .L_410150
          .quad .L_411090
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x8c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_645ed0:
          .quad .L_412450
          .quad .L_4124a0
          .quad .L_412e20
          .quad .L_410160
          .quad .L_410150
          .quad .L_410a70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x8c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_645f10:
          .quad .L_4124f0
          .quad .L_412540
          .quad .L_413340
          .quad .L_410160
          .quad .L_410150
          .quad .L_410450
.L_645f40:
          .quad .L_435b58
          .quad .L_435aec
          .quad .L_435b61
          .quad .L_435b79
          .quad .L_435b91
          .quad .L_435baf
          .quad .L_435bb9
          .quad .L_435bc3
          .quad .L_435ac8
          .quad .L_435bce
          .quad .L_435be6
          .quad .L_435bfe
          .quad .L_435c14
          .quad .L_435c22
          .zero 8
          .quad .L_648d10
.L_645fc0:
          .quad .L_419000
          .quad .L_419060
          .quad .L_417650
          .quad .L_4197a0
          .quad .L_418990
          .quad .L_417640
          .zero 16
.L_646000:
          .quad .L_420640
          .zero 8
          .quad .L_420650
          .zero 8
          .quad .L_420660
          .zero 8
          .quad .L_420670
          .zero 8
          .quad .L_420690
          .zero 8
          .quad .L_4206a0
          .zero 8
          .quad .L_4206c0
          .zero 8
          .quad .L_4206e0
          .zero 8
.L_646080:
          .quad .L_4367f0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367c0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367fa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367c0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436805
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367b8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43680f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367b8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43681a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367b0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436824
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367b0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43682f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367a8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436839
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367a8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436844
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367a0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43684e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367a0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436859
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43679c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436863
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43679c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43686e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436798
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436878
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436798
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436883
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436794
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43688d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436794
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436898
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436790
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368a2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436790
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368ad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436780
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368b7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436780
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368c2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436778
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368cc
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436778
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368d7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436770
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368e1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436770
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368ec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436760
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368f5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436760
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4368ff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436748
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43690a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436748
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6465c0:
          .quad .L_436916
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367ec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436919
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367ec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43691c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367e0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43691f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367e0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436922
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367d0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436925
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4367d0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x8d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6466f0:
          .quad .L_433340
          .quad .L_433350
          .quad .L_42fea0
          .quad .L_4319a0
          .quad .L_42fe90
          .quad .L_4302d0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x8d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_646730:
          .quad .L_435300
          .quad .L_435310
          .quad .L_4342a0
          .quad .L_4343f0
          .quad .L_410150
          .quad .L_4352f0
.L_646760:
          .quad .L_43d9c8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438440
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438320
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d9cf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390a0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d9d8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4382f0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d9e0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438948
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d9e9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438310
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438308
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d9ef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e48
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d9f5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b00
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d9fd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439040
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da06
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438970
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da0d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ddc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438fa0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438860
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436c23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b520
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b4e0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b58
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da38
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ff8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da3f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439390
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da42
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439360
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439340
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4384a0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4393b0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4393a0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438700
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4384c0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4384b0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439320
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a20
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4392a0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da89
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438960
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e30
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438870
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dab1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4391c0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43daba
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e60
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dac3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ae0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dace
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438cf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dad5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dadb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438bc0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dae4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a80
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43daed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390e0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390c0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43daf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439260
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43daf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4388f8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db00
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4382c0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db07
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ff0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438fe0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ad0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439160
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439120
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ba0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db41
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a58
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ae8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4389e0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438cd0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438cc0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438fa8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f60
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db8d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b90
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_435d66
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a520
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a180
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438900
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ea0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438890
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dba4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c80
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbaa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4388c0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438864
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c6e0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c5e0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbbb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c500
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c4f0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbbe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d2c0
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d000
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbc1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c3c0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43bac0
          .byte 0x40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b9c0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d40
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438880
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43abc0
          .byte 0xb4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ab00
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439000
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b320
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b2a0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b560
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438fb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439110
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc0d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c60
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc27
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43af80
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43aea0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4389b0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438300
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a080
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439fc0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c460
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c420
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc41
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ca0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d870
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d840
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d7c0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d740
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc66
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439240
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4388a0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c20
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dca0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438cb0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dca8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439d40
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439cc0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcaa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c3f0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b940
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b820
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b980
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcb6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b7e0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dccd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b600
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b580
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d8a0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438958
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438cf8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_436920
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439a80
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4398c0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dce0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438868
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4393e0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c00
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd00
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd08
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438980
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439f40
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4394a0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439440
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439700
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439580
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ac0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd26
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439038
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d00
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439030
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438fc8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438fb0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f40
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d38
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4382b0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439060
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4392c0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4392f8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd8d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e00
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438df0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438de0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dda7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddab
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438950
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4393c0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4393b4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43931c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddb6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439300
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
#-----------------------------------
.align 16
.weak _ZTVSt9basic_iosIcSt11char_traitsIcEE_copy
.type _ZTVSt9basic_iosIcSt11char_traitsIcEE_copy, @object
#-----------------------------------
_ZTVSt9basic_iosIcSt11char_traitsIcEE_copy:
          .zero 32
#-----------------------------------
.align 16
.weak _ZTVSt15basic_streambufIcSt11char_traitsIcEE_copy
.type _ZTVSt15basic_streambufIcSt11char_traitsIcEE_copy, @object
#-----------------------------------
_ZTVSt15basic_streambufIcSt11char_traitsIcEE_copy:
          .zero 128
#-----------------------------------
.align 16
.weak _ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy
.type _ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy, @object
#-----------------------------------
_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy:
          .zero 80
#-----------------------------------
.align 16
.weak _ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy
.type _ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy, @object
#-----------------------------------
_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy:
          .zero 48
#-----------------------------------
.align 16
.globl _ZNSt3tr18__detail12__prime_listE_copy
.type _ZNSt3tr18__detail12__prime_listE_copy, @object
#-----------------------------------
_ZNSt3tr18__detail12__prime_listE_copy:
          .zero 2440
#-----------------------------------
.align 8
.weak _ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE_copy
.type _ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE_copy, @object
#-----------------------------------
_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE_copy:
          .zero 128
          .quad _ZTVN10__cxxabiv117__class_type_infoE+16
          .quad .L_435d70
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_435d90
          .byte 0x68
          .byte 0x8c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_435db0
          .byte 0x68
          .byte 0x8c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_435dd0
          .byte 0x68
          .byte 0x8c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x8c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_648cd0:
          .zero 16
          .quad .L_410140
          .quad .L_410160
          .quad .L_410150
          .quad __cxa_pure_virtual
          .quad _ZTVN10__cxxabiv117__class_type_infoE+16
          .quad .L_436080
.L_648d10:
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_4360a0
          .byte 0x0
          .byte 0x8d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_648d38:
          .zero 16
          .quad .L_41ab30
          .quad .L_41ab50
          .quad .L_41ab40
          .quad __cxa_pure_virtual
          .quad _ZTVN10__cxxabiv117__class_type_infoE+16
          .quad .L_436b60
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_436b80
          .byte 0x68
          .byte 0x8d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x8d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_648da0:
          .zero 16
          .quad .L_432a40
          .quad .L_432a60
          .quad .L_432a50
          .quad __cxa_pure_virtual
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_436ce0
          .byte 0x68
          .byte 0x8c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 16
.L_6492b0:
          .quad __gxx_personality_v0
.L_6492b8:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6492c0:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x10
          .byte 0x0
.L_6492c8:
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6492e0:
          .quad .L_4364a6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6492c8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6492c0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_649310:
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

.L_649320:
          .zero 32
.L_649340:
          .zero 8
.L_649348:
          .zero 8
.L_649350:
          .zero 8
.L_649358:
          .zero 8
.L_649360:
          .zero 64
.L_6493a0:
          .zero 40
.L_6493c8:
          .zero 8
#===================================
# end section .bss
#===================================
