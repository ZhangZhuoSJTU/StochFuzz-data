#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 8
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

.L_4010d0:

            push R15
            push R14
            mov EAX,EDX
            push R13
            push R12
            mov R15,RCX
            push RBP
            push RBX
            mov R12,RDI
            mov RBP,RSI
            xor R13D,R13D
            sub RSP,24
.L_4010ec:

            mov QWORD PTR [RSP+8],RAX
.L_4010f1:

            cmp QWORD PTR [RSP+8],R13
            je .L_4011b3

            test R15,R15
            je .L_4011ab

            mov RAX,QWORD PTR [R15+8]
            lea RBX,QWORD PTR [R13*8]
            mov RCX,QWORD PTR [RAX+R13*8]
            mov EAX,DWORD PTR [RCX+40]
            cmp EAX,2
            jne .L_40114e

            mov RAX,QWORD PTR [RCX+48]
            cmp WORD PTR [RAX],0
            jne .L_401155

            cmp WORD PTR [RAX+2],-1
            jne .L_401155

            xor R14D,R14D
.L_401131:

            mov ESI,R14D
            mov RDI,RBP
            call .L_405660

            test EAX,EAX
            je .L_40116b

            inc R14D
            cmp R14D,256
            jne .L_401131

            jmp .L_4011ab
.L_40114e:

            cmp EAX,256
            je .L_40116f
.L_401155:

            lea RDX,QWORD PTR [RIP+.L_42f450]
            mov ESI,2
            mov RDI,R12
            xor EAX,EAX
            call .L_421420
.L_40116b:

            xor EAX,EAX
            jmp .L_4011b8
.L_40116f:

            xor R14D,R14D
.L_401172:

            mov RAX,QWORD PTR [R15+8]
            mov RDI,RBP
            mov RAX,QWORD PTR [RAX+RBX*1]
            mov RAX,QWORD PTR [RAX+48]
            movzx ESI,WORD PTR [RAX+R14*1]
            imul ESI,ESI,65281
            add ESI,8388608
            shr ESI,24
            call .L_405660

            test EAX,EAX
            je .L_40116b

            add R14,2
            cmp R14,512
            jne .L_401172
.L_4011ab:

            inc R13
            jmp .L_4010f1
.L_4011b3:

            mov EAX,1
.L_4011b8:

            add RSP,24
.L_4011bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4011c7:

            mov R8D,EDX
            mov ECX,1
.L_4011cf:

            test R8D,R8D
            je .L_4011e7

            imul ECX,ESI
            mov EAX,ECX
            mul ESI
            jo .L_4011e2

            dec R8D
            jmp .L_4011cf
.L_4011e2:

            or ESI,4294967295
            jmp .L_4011fc
.L_4011e7:

            mov ESI,ECX
            xor EDX,EDX
            imul ESI,EDI
            mov EAX,ESI
            div EDI
            cmp ECX,EAX
            mov EAX,4294967295
            cmovne ESI,EAX
.L_4011fc:

            mov EAX,ESI
            ret 
.L_4011ff:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_40120b:

            mov RAX,QWORD PTR [RSI]
            movsd XMM0,QWORD PTR [RAX]
            call .L_4059c0

            test EAX,EAX
            jne .L_401222
.L_40121b:

            xor EAX,EAX
            jmp .L_401350
.L_401222:

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+8]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+16]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+24]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+32]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+40]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+48]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+56]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+64]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP+8]
            test RAX,RAX
            je .L_401317

            movsd XMM0,QWORD PTR [RAX]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+8]
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            mov RAX,QWORD PTR [RBP+8]
            movsd XMM0,QWORD PTR [RAX+16]
            jmp .L_401340
.L_401317:

            xorps XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            xorps XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_40121b

            xorps XMM0,XMM0
.L_401340:

            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_401350:

            pop RDX
.L_401351:

            pop RBX
            pop RBP
            ret 
.L_401354:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_40135e:

            mov RBP,QWORD PTR [RCX+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov R12D,DWORD PTR [RBP+20]
            test R12D,R12D
            je .L_401398

            mov RDI,QWORD PTR [RDI+40]
            lea RDX,QWORD PTR [RIP+.L_42f4d0]
            mov ESI,13
            xor R12D,R12D
            call .L_421420

            jmp .L_401473
.L_401398:

            xorps XMM0,XMM0
            mov R13D,EDX
            mov RBX,RSI
            xor EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            mov RDX,QWORD PTR [RBP+8]
            mov ECX,DWORD PTR [RDX+12]
.L_4013ae:

            cmp ECX,EAX
            jbe .L_4013bf

            mov ESI,DWORD PTR [RDX+RAX*4+20]
            mov BYTE PTR [RSP+RAX*1],SIL
            inc RAX
            jmp .L_4013ae
.L_4013bf:

            mov RDX,RSP
            mov ESI,16
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_401473

            movzx ESI,R13B
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_401473

            xor ESI,ESI
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_401473

            xor ESI,ESI
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_401473

            xor ESI,ESI
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_401473

            dec R13B
            jne .L_40144f

            xor R13D,R13D
.L_40141e:

            cmp DWORD PTR [RBP+16],R13D
            jbe .L_401462

            mov RDX,QWORD PTR [RBP]
            mov EAX,R13D
            mov RDI,RBX
            movzx ESI,WORD PTR [RDX+RAX*2]
            imul ESI,ESI,65281
            add ESI,8388608
            shr ESI,24
            call .L_405660

            test EAX,EAX
            je .L_401473

            inc R13D
            jmp .L_40141e
.L_40144f:

            mov ESI,DWORD PTR [RBP+16]
            mov RDX,QWORD PTR [RBP]
            mov RDI,RBX
            call .L_405740

            test EAX,EAX
            je .L_401473
.L_401462:

            mov RDI,RBX
            xor R12D,R12D
            call .L_4062c0

            test EAX,EAX
            setne R12B
.L_401473:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            je .L_40148b

            call __stack_chk_fail@PLT
.L_40148b:

            add RSP,40
.L_40148f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_401496:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4014a4:

            test RSI,RSI
            jne .L_4014c8

            lea RCX,QWORD PTR [RIP+.L_42f7e0]
            lea RSI,QWORD PTR [RIP+.L_42f6ef]
            lea RDI,QWORD PTR [RIP+.L_42f6fa]
            mov EDX,2025
            call __assert_fail@PLT
.L_4014c8:

            mov RAX,QWORD PTR [RSI+8]
            mov R15,RDI
            mov RBP,RSI
            xor EBX,EBX
            mov RAX,QWORD PTR [RAX]
            mov R14D,DWORD PTR [RAX+40]
.L_4014db:

            cmp EBX,DWORD PTR [RBP]
            jae .L_401515

            mov R13D,EBX
            xor R12D,R12D
            shl R13,3
.L_4014ea:

            cmp R14D,R12D
            jle .L_401511

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,R15
            mov RAX,QWORD PTR [RAX+R13*1]
            mov RAX,QWORD PTR [RAX+48]
            movzx ESI,WORD PTR [RAX+R12*2]
            inc R12
            call .L_4056b0

            test EAX,EAX
            jne .L_4014ea

            jmp .L_40151a
.L_401511:

            inc EBX
            jmp .L_4014db
.L_401515:

            mov EAX,1
.L_40151a:

            pop RDX
.L_40151b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_401526:

            push R15
            push R14
            mov R15D,R8D
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            movsxd R12,ECX
            mov ECX,32
            mov R14,R12
            xor EBP,EBP
            sub RSP,168
.L_40154a:

            lea RBX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RDI,RBX

            rep stosd DWORD PTR [RDI]
.L_401570:

            cmp RBP,R12
            je .L_4015a4

            xor EDX,EDX
            mov ESI,R15D
            mov RDI,R13
            call .L_422570

            test RAX,RAX
            mov QWORD PTR [RBX+RBP*8],RAX
            je .L_4015c8

            mov RDX,QWORD PTR [RAX+48]
            mov RDI,QWORD PTR [RSP]
            mov ESI,R15D
            inc RBP
            call .L_405070

            test EAX,EAX
            jne .L_401570

            jmp .L_4015c8
.L_4015a4:

            mov RDX,RBX
            mov ESI,R14D
            mov RDI,R13
            call .L_42af10

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,RAX
            mov ESI,1
            call .L_42bb10

            test EAX,EAX
            jne .L_4015cc
.L_4015c8:

            xor EBP,EBP
            jmp .L_4015fa
.L_4015cc:

            xor R12D,R12D
.L_4015cf:

            cmp R12,RBP
            je .L_4015e2

            mov RDI,QWORD PTR [RBX+R12*8]
            inc R12
            call .L_422930

            jmp .L_4015cf
.L_4015e2:

            mov EAX,1
            jmp .L_401601
.L_4015e9:

            mov RDI,QWORD PTR [RBX+RBP*8]
            test RDI,RDI
            je .L_4015f7

            call .L_422930
.L_4015f7:

            inc RBP
.L_4015fa:

            cmp RBP,R12
            jne .L_4015e9

            xor EAX,EAX
.L_401601:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            je .L_401619

            call __stack_chk_fail@PLT
.L_401619:

            add RSP,168
.L_401620:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40162b:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov ESI,256
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,184
.L_401647:

            lea RBX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+20],ECX
            mov ECX,32
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            mov RDI,RBX
            mov QWORD PTR [RSP+24],RDX

            rep stosd DWORD PTR [RDI]

            mov RDI,RBP
            call .L_4210b0

            test RAX,RAX
            je .L_401783

            mov R15,RAX
            movsxd RAX,DWORD PTR [RSP+20]
            xor R13D,R13D
            mov QWORD PTR [RSP+8],RAX
.L_401693:

            cmp R13,QWORD PTR [RSP+8]
            je .L_4016ba

            xor EDX,EDX
            mov ESI,256
            mov RDI,RBP
            call .L_422570

            mov QWORD PTR [RBX+R13*8],RAX
            inc R13
            test RAX,RAX
            jne .L_401693

            jmp .L_401756
.L_4016ba:

            xor R12D,R12D
.L_4016bd:

            cmp R12,R13
            je .L_401707

            mov ECX,1
            mov EDX,256
            mov RSI,R15
            mov RDI,R14
            call QWORD PTR [R14+280]

            dec EAX
            jne .L_401756

            mov RAX,QWORD PTR [RBX+R12*8]
            mov RSI,QWORD PTR [RAX+48]
            xor EAX,EAX
.L_4016e7:

            movzx EDX,BYTE PTR [R15+RAX*1]
            mov ECX,EDX
            shl ECX,8
            or EDX,ECX
            mov WORD PTR [RSI+RAX*2],DX
            inc RAX
            cmp RAX,256
            jne .L_4016e7

            inc R12
            jmp .L_4016bd
.L_401707:

            mov RSI,R15
            mov RDI,RBP
            call .L_421170

            mov ESI,DWORD PTR [RSP+20]
            mov RDX,RBX
            mov RDI,RBP
            call .L_42af10

            mov RDI,QWORD PTR [RSP+24]
            mov RDX,RAX
            mov ESI,1
            call .L_42bb10

            test EAX,EAX
            je .L_401753

            xor EBP,EBP
.L_401739:

            cmp R12,RBP
            je .L_40174c

            mov RDI,QWORD PTR [RBX+RBP*8]
            inc RBP
            call .L_422930

            jmp .L_401739
.L_40174c:

            mov EAX,1
            jmp .L_401785
.L_401753:

            xor R15D,R15D
.L_401756:

            xor R13D,R13D
.L_401759:

            cmp R13,QWORD PTR [RSP+8]
            je .L_401773

            mov RDI,QWORD PTR [RBX+R13*8]
            test RDI,RDI
            je .L_40176e

            call .L_422930
.L_40176e:

            inc R13
            jmp .L_401759
.L_401773:

            test R15,R15
            je .L_401783

            mov RSI,R15
            mov RDI,RBP
            call .L_421170
.L_401783:

            xor EAX,EAX
.L_401785:

            mov RBX,QWORD PTR [RSP+168]
            xor RBX,QWORD PTR FS:[40]
            je .L_40179d

            call __stack_chk_fail@PLT
.L_40179d:

            add RSP,184
.L_4017a4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4017af:

            push R15
            push R14
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_4017c3:

            mov DWORD PTR [RSP+4],ESI
            mov ESI,24
            mov QWORD PTR [RSP+8],RCX
            call .L_4210e0

            test RAX,RAX
            je .L_40181f

            mov R15,RAX
            mov EAX,DWORD PTR [RSP+4]
            mov EDX,8
            mov DWORD PTR [R15+12],R13D
            mov RDI,RBX
            mov DWORD PTR [R15+8],EAX
            mov ESI,EAX
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R15+16],RAX
            je .L_40181f

            mov RBP,QWORD PTR [RSP+8]
            xor R12D,R12D
            jmp .L_401880
.L_40180c:

            mov RDI,RBX
            call .L_421170

            mov RSI,R15
            mov RDI,RBX
            call .L_421170
.L_40181f:

            xor R15D,R15D
            jmp .L_401922
.L_401827:

            xor EDX,EDX
            cmp R13D,256
            jne .L_4018e6
.L_401836:

            mov RAX,QWORD PTR [R15+16]
            lea R8,QWORD PTR [RDX+RDX*1]
            mov ESI,EDX
            shl ESI,8
            mov RDI,QWORD PTR [RBP]
            mov QWORD PTR [RSP+16],RDX
            or ESI,EDX
            add R8,QWORD PTR [RAX+R14*1]
            movzx ESI,SI
            mov QWORD PTR [RSP+24],R8
            call .L_423770

            mov RDX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+24]
            inc RDX
            mov WORD PTR [R8],AX
            cmp RDX,256
            jne .L_401836
.L_401879:

            inc R12D
            add RBP,8
.L_401880:

            cmp R12D,DWORD PTR [RSP+4]
            jge .L_401922

            mov R14,RBP
            sub R14,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [R15+16]
            mov EDX,2
            mov ESI,R13D
            mov RDI,RBX
            add R8,R14
            mov QWORD PTR [RSP+16],R8
            call .L_421110

            mov R8,QWORD PTR [RSP+16]
            mov QWORD PTR [R8],RAX
            mov RAX,QWORD PTR [R15+16]
            cmp QWORD PTR [RAX+R14*1],0
            jne .L_401827

            xor EBP,EBP
.L_4018c8:

            cmp R12D,EBP
            mov RSI,QWORD PTR [R15+16]
            jle .L_40180c

            mov RSI,QWORD PTR [RSI+RBP*8]
            mov RDI,RBX
            inc RBP
            call .L_421170

            jmp .L_4018c8
.L_4018e6:

            mov RAX,QWORD PTR [R15+16]
            lea R8,QWORD PTR [RDX+RDX*1]
            mov RDI,QWORD PTR [RBP]
            mov ESI,EDX
            mov QWORD PTR [RSP+16],RDX
            add R8,QWORD PTR [RAX+R14*1]
            mov QWORD PTR [RSP+24],R8
            call .L_423770

            mov RDX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+24]
            inc RDX
            mov WORD PTR [R8],AX
            cmp R13D,EDX
            jg .L_4018e6

            jmp .L_401879
.L_401922:

            add RSP,40
.L_401926:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_401934:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,ESI
            mov EBP,EDX
            xor EDX,EDX
            sub RSP,216
.L_40194a:

            lea RCX,QWORD PTR [RSP+52]
            lea RSI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+72],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+88],0
            call .L_40c890

            test EAX,EAX
            jne .L_401992
.L_40198b:

            xor EAX,EAX
            jmp .L_401f1f
.L_401992:

            lea RCX,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+64]
            xor EDX,EDX
            mov EDI,EBP
            call .L_40c890

            test EAX,EAX
            je .L_40198b

            mov EAX,DWORD PTR [RSP+52]
            cmp DWORD PTR [RBX+8],EAX
            jne .L_40198b

            mov EAX,DWORD PTR [RSP+48]
            cmp DWORD PTR [RBX+12],EAX
            jne .L_40198b

            lea RBP,QWORD PTR [RSP+160]
            mov RDI,QWORD PTR [RSP+56]
            mov RDX,RBX
            mov RSI,RBP
            call .L_42b980

            mov R9,QWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+48]
            xor EDX,EDX
.L_4019df:

            cmp R8D,EDX
            jle .L_401a4a

            movzx EDI,WORD PTR [RBP+RDX*2]
            movzx EAX,WORD PTR [R9+RDX*2]
            mov ESI,EAX
            sub EAX,EDI
            mov ECX,EDI
            mov EDI,EAX
            sar EDI,31
            xor EAX,EDI
            sub EAX,EDI
            cmp EAX,61440
            jg .L_401a4a

            inc RDX
            cmp SI,CX
            je .L_4019df

            jmp .L_401a54
.L_401a0e:

            call .L_42a220

            xor EBP,EBP
            mov R13,RAX
.L_401a18:

            cmp DWORD PTR [RSP+48],EBP
            ja .L_401b66
.L_401a22:

            mov RAX,QWORD PTR [RSP+80]
            cmp DWORD PTR [RAX+8],1668052340
            je .L_401bcd

            mov RDI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_42f888]
            mov ESI,3
            xor EAX,EAX
            call .L_421420
.L_401a4a:

            mov EAX,1
            jmp .L_401f1f
.L_401a54:

            lea R13,QWORD PTR [RSP+88]
            lea R12,QWORD PTR [RSP+72]
            mov ECX,1668052340
            mov EDX,1668707188
            xor EAX,EAX
            mov R8D,1668707188
            push R13
.L_401a72:

            mov R9,R12
            mov ESI,3
            mov RDI,RBX
            lea RBP,QWORD PTR [RSP+88]
            push RBP
            call .L_42a0b0

            test EAX,EAX
            pop RDX
            pop RCX
.L_401a8c:

            jne .L_401ab1

            xor EAX,EAX
            mov R9,RBP
            mov R8,R12
            mov ECX,1668052340
            mov EDX,1668707188
            mov ESI,2
            mov RDI,RBX
            call .L_42a0b0

            test EAX,EAX
            je .L_401acb
.L_401ab1:

            mov RDI,QWORD PTR [RSP+72]
            test RDI,RDI
            jne .L_401b0c

            mov ECX,DWORD PTR [RSP+52]
            mov RDX,QWORD PTR [RSP+56]
            xor EAX,EAX
            jmp .L_401b54
.L_401acb:

            xor EAX,EAX
            mov R9,R13
            mov R8,RBP
            mov ECX,1668707188
            mov EDX,1668052340
            mov ESI,2
            mov RDI,RBX
            call .L_42a0b0

            test EAX,EAX
            jne .L_401ab1

            mov RCX,RBP
            mov EDX,1668052340
            mov ESI,1
            mov RDI,RBX
            call .L_42a0b0

            test EAX,EAX
            jne .L_401ab1

            jmp .L_40198b
.L_401b0c:

            call .L_42a220

            xor EBX,EBX
            mov RBP,RAX
.L_401b16:

            cmp DWORD PTR [RSP+52],EBX
            jbe .L_401b39

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RBP+RBX*8]
            movzx ESI,WORD PTR [RAX+RBX*2]
            call .L_423770

            mov WORD PTR [RSP+RBX*2+96],AX
            inc RBX
            jmp .L_401b16
.L_401b39:

            mov RDI,QWORD PTR [RSP+88]
            test RDI,RDI
            jne .L_401a0e

            mov ECX,DWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+64]
            xor EAX,EAX
            jmp .L_401bb4
.L_401b54:

            cmp ECX,EAX
            jbe .L_401b39

            mov SI,WORD PTR [RDX+RAX*2]
            mov WORD PTR [RSP+RAX*2+96],SI
            inc RAX
            jmp .L_401b54
.L_401b66:

            mov EBX,EBP
            mov RDI,QWORD PTR [R13+RBX*8]
            call .L_422d60

            mov R12,RAX
            mov RDX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RBX+RBX*1]
            test R12,R12
            jne .L_401b91

            mov AX,WORD PTR [RDX+RAX*1]
            mov WORD PTR [RSP+RBX*2+128],AX
            jmp .L_401bad
.L_401b91:

            movzx ESI,WORD PTR [RDX+RAX*1]
            mov RDI,R12
            call .L_423770

            mov RDI,R12
            mov WORD PTR [RSP+RBX*2+128],AX
            call .L_422930
.L_401bad:

            inc EBP
            jmp .L_401a18
.L_401bb4:

            cmp ECX,EAX
            jbe .L_401a22

            mov SI,WORD PTR [RDX+RAX*2]
            mov WORD PTR [RSP+RAX*2+128],SI
            inc RAX
            jmp .L_401bb4
.L_401bcd:

            mov ECX,DWORD PTR [RSP+52]
            mov RBP,QWORD PTR [RAX+48]
            cmp ECX,4
            mov R12,QWORD PTR [RBP+8]
            jne .L_401d5c

            movzx EAX,WORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [R12+52]
            cvtsi2sd XMM0,RAX
            movzx EAX,WORD PTR [RSP+98]
            mulsd XMM1,XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+56]
            divsd XMM1,XMM2
            cvtsi2sd XMM3,RAX
            movzx EAX,WORD PTR [RSP+100]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM1
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+60]
            cvtsi2sd XMM3,RAX
            movzx EAX,WORD PTR [RSP+102]
            mulsd XMM0,XMM3
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+64]
            cvtsi2sd XMM3,RAX
            mulsd XMM0,XMM3
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            call trunc@PLT

            cvttsd2si EBX,XMM0
            movsd XMM0,QWORD PTR [RSP]
            call trunc@PLT

            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call trunc@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            call trunc@PLT

            cvtsi2sd XMM4,EBX
            movsd XMM1,QWORD PTR [RSP+40]
            subsd XMM1,XMM4
            xorps XMM4,XMM4
            ucomisd XMM1,XMM4
            jp .L_401a4a

            jne .L_401a4a

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP]
            cvttsd2si EDX,XMM3
            cvtsi2sd XMM1,EDX
            subsd XMM5,XMM1
            ucomisd XMM5,XMM4
            jp .L_401a4a

            jne .L_401a4a

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+8]
            cvttsd2si EAX,XMM2
            cvtsi2sd XMM1,EAX
            subsd XMM6,XMM1
            ucomisd XMM6,XMM4
            jp .L_401a4a

            jne .L_401a4a

            cvttsd2si ECX,XMM0
            movsd XMM7,QWORD PTR [RSP+16]
            cvtsi2sd XMM0,ECX
            subsd XMM7,XMM0
            ucomisd XMM7,XMM4
            jp .L_401a4a

            jne .L_401a4a

            imul EBX,DWORD PTR [R12+96]
            imul EDX,DWORD PTR [R12+92]
            imul ECX,DWORD PTR [R12+84]
            imul EAX,DWORD PTR [R12+88]
            add EDX,EBX
            lea EBX,DWORD PTR [RDX+RCX*1]
            add EAX,EBX
            jmp .L_401ef4
.L_401d5c:

            cmp ECX,3
            jne .L_401e79

            movzx EAX,WORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [R12+52]
            cvtsi2sd XMM0,RAX
            movzx EAX,WORD PTR [RSP+98]
            mulsd XMM1,XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+56]
            divsd XMM1,XMM2
            cvtsi2sd XMM3,RAX
            movzx EAX,WORD PTR [RSP+100]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+60]
            cvtsi2sd XMM3,RAX
            mulsd XMM0,XMM3
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call trunc@PLT

            cvttsd2si EBX,XMM0
            movsd XMM0,QWORD PTR [RSP]
            call trunc@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call trunc@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            cvtsi2sd XMM3,EBX
            subsd XMM1,XMM3
            xorps XMM3,XMM3
            ucomisd XMM1,XMM3
            jp .L_401a4a

            jne .L_401a4a

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP]
            cvttsd2si EDX,XMM2
            cvtsi2sd XMM1,EDX
            subsd XMM5,XMM1
            ucomisd XMM5,XMM3
            jp .L_401a4a

            jne .L_401a4a

            cvttsd2si EAX,XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            cvtsi2sd XMM0,EAX
            subsd XMM6,XMM0
            ucomisd XMM6,XMM3
            jp .L_401a4a

            jne .L_401a4a

            imul EBX,DWORD PTR [R12+92]
            imul EDX,DWORD PTR [R12+88]
            imul EAX,DWORD PTR [R12+84]
            add EBX,EDX
            add EAX,EBX
            jmp .L_401ef4
.L_401e79:

            cmp ECX,1
            jne .L_401ed7

            movzx EAX,WORD PTR [RSP+96]
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [R12+52]
            cvtsi2sd XMM0,RAX
            mulsd XMM1,XMM0
            divsd XMM1,QWORD PTR [RIP+.L_42df30]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call trunc@PLT

            cvttsd2si EAX,XMM0
            movsd XMM1,QWORD PTR [RSP]
            cvtsi2sd XMM0,EAX
            subsd XMM1,XMM0
            xorps XMM0,XMM0
            ucomisd XMM1,XMM0
            jp .L_401a4a

            jne .L_401a4a

            imul EAX,DWORD PTR [R12+84]
            jmp .L_401ef4
.L_401ed7:

            mov RDI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_42f8b8]
            xor EAX,EAX
            mov ESI,3
            call .L_421420

            mov EAX,1
            jmp .L_401f1f
.L_401ef4:

            mov ECX,DWORD PTR [RSP+48]
            xor EDX,EDX
            cdqe 
.L_401efc:

            cmp ECX,EDX
            jle .L_401a4a

            mov R8W,WORD PTR [RSP+RDX*2+128]
            mov RSI,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RAX+RDX*1]
            inc RDX
            mov WORD PTR [RSI+RDI*2],R8W
            jmp .L_401efc
.L_401f1f:

            mov RSI,QWORD PTR [RSP+200]
            xor RSI,QWORD PTR FS:[40]
            je .L_401f37

            call __stack_chk_fail@PLT
.L_401f37:

            add RSP,216
.L_401f3e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_401f45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_401f54:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_42d544]
            call fopen@PLT

            test RAX,RAX
            je .L_401fd8

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_401ff8

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_401fe2

            mov RSI,RBP
            mov RDI,R12
            call .L_402100

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_401fd2:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_401fd8:

            mov EDI,1
            call exit@PLT
.L_401fe2:

            lea RDI,QWORD PTR [RIP+.L_42d555]
            call puts@PLT

            mov EDI,3
            call exit@PLT
.L_401ff8:

            lea RDI,QWORD PTR [RIP+.L_42d547]
            call puts@PLT

            mov EDI,2
            call exit@PLT
.L_40200e:

            nop
            nop
.L_402040:

            ret 
.L_402042:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402050:

            push RBP
            mov EAX,OFFSET .L_641c18
            cmp RAX,OFFSET .L_641c18
            mov RBP,RSP
            je .L_402078

            mov EAX,0
            test RAX,RAX
            je .L_402078

            pop RBP
            mov EDI,OFFSET .L_641c18
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402078:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402080:

            mov ESI,OFFSET .L_641c18
            push RBP
            sub RSI,OFFSET .L_641c18
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_4020b8

            mov EAX,0
            test RAX,RAX
            je .L_4020b8

            pop RBP
            mov EDI,OFFSET .L_641c18
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4020b8:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4020f0:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_402080
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402100:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            push RBX
            sub RSP,24
.L_402111:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            call .L_404220

            test RAX,RAX
            je .L_402219

            mov RBX,RAX
            call .L_412490

            test RAX,RAX
            mov R15,RAX
            mov RDI,RBX
            je .L_402280

            call .L_403530

            mov EDI,EAX
            mov R13D,EAX
            call .L_40ccf0

            mov R14D,EAX
            lea EAX,DWORD PTR [RAX*8]
            mov ECX,263193
            mov RDX,R15
            mov RDI,RBX
            mov R12D,EAX
            or EAX,1
            or R12D,655360
            cmp R13D,1281450528
            cmovne R12D,EAX
            xor R9D,R9D
            xor R8D,R8D
            mov ESI,R12D
            call .L_40f9f0

            mov RDI,RBX
            mov R13,RAX
            call .L_403ea0

            mov RDI,R15
            call .L_403ea0

            test R13,R13
            je .L_402219

            and R12D,1
            mov EAX,R14D
            mov RBX,RSP
            jne .L_402240

            lea RAX,QWORD PTR [RAX*8+22]
            shr RAX,4
            shl RAX,4
            sub RSP,RAX
            test R14D,R14D
            mov RSI,RSP
            je .L_4021fd

            lea EDX,DWORD PTR [R14-1]
            movsd XMM0,QWORD PTR [RIP+.L_42d568]
            mov RAX,RSI
            lea RDX,QWORD PTR [RSI+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4021f0:

            movsd QWORD PTR [RAX],XMM0
            add RAX,8
            cmp RDX,RAX
            jne .L_4021f0
.L_4021fd:

            lea RDX,QWORD PTR [RBP-60]
            mov RDI,R13
            mov ECX,1
            call .L_40edf0

            mov RDI,R13
            mov RSP,RBX
            call .L_40e980
.L_402219:

            xor EAX,EAX
            mov RCX,QWORD PTR [RBP-56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_402287

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_402238:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402240:

            add RAX,15
            shr RAX,4
            shl RAX,4
            sub RSP,RAX
            test R14D,R14D
            mov RSI,RSP
            je .L_4021fd

            lea EDX,DWORD PTR [R14-1]
            mov RAX,RSP
            lea RDX,QWORD PTR [RSP+RDX*1+1]
            nop
            nop
            nop
            nop
            nop
.L_402268:

            mov BYTE PTR [RAX],128
            add RAX,1
            cmp RAX,RDX
            jne .L_402268

            jmp .L_4021fd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402280:

            call .L_403ea0

            jmp .L_402219
.L_402287:

            call __stack_chk_fail@PLT
.L_40228c:

            nop
            nop
            nop
            nop
.L_402290:

            mov EAX,ECX
            mov RCX,QWORD PTR [RDI]
            imul EDX,EAX
            add DWORD PTR [RCX],EDX
            ret 
.L_40229b:

            nop
            nop
            nop
            nop
            nop
.L_4022a0:

            mov RAX,QWORD PTR [RDI]
            mov DWORD PTR [RAX],ESI
            mov EAX,1
            ret 
.L_4022ab:

            nop
            nop
            nop
            nop
            nop
.L_4022b0:

            mov RAX,QWORD PTR [RDI]
            mov EAX,DWORD PTR [RAX]
            ret 
.L_4022b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4022c0:

            mov RAX,QWORD PTR [RDI]
            add ESI,DWORD PTR [RAX]
            cmp ESI,DWORD PTR [RDI+16]
            mov DWORD PTR [RAX],ESI
            jbe .L_4022cf

            mov DWORD PTR [RDI+16],ESI
.L_4022cf:

            mov EAX,1
            ret 
.L_4022d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4022e0:

            mov RDX,QWORD PTR [RDI]
            xor EAX,EAX
            test RDX,RDX
            je .L_4022ed

            mov EAX,DWORD PTR [RDX+12]
.L_4022ed:

            ret 
.L_4022ef:

            nop
.L_4022f0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            mov RSI,QWORD PTR [RBX]
            call .L_421170

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            call .L_421170

            mov EAX,1
            pop RBX
            ret 
.L_402313:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402320:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI]
            mov RDI,QWORD PTR [RDI+8]
            mov EAX,DWORD PTR [RBP+16]
            test EAX,EAX
            je .L_402349

            mov RSI,QWORD PTR [RBP]
            test RSI,RSI
            je .L_402349

            call .L_421170

            mov RDI,QWORD PTR [RBX+8]
.L_402349:

            mov RSI,RBP
            call .L_421170

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            call .L_421170

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_402369:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402370:

            push RBX
            sub RSP,64
.L_402375:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_40244a

            test ESI,ESI
            js .L_40242b

            movsxd RAX,ESI
            lea RBX,QWORD PTR [RDI+RAX*8]
            mov RSI,QWORD PTR [RBX+2136]
            test RSI,RSI
            je .L_402407

            mov EAX,DWORD PTR [RDI+RAX*4+1736]
            test EAX,EAX
            jne .L_402420

            mov RAX,QWORD PTR [RBX+2936]
            test RAX,RAX
            je .L_402407

            movdqu XMM0,XMMWORD PTR [RAX]
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov RAX,QWORD PTR [RAX+48]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+40],RAX
            mov EAX,DWORD PTR [RDI+72]
            mov RDI,RSP
            mov DWORD PTR [RSP+48],EAX
            call QWORD PTR [RSP+32]

            mov QWORD PTR [RBX+2136],0
.L_402407:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_402469

            add RSP,64
.L_40241b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402420:

            mov RDI,QWORD PTR [RDI+8]
            call .L_421170

            jmp .L_402407
.L_40242b:

            lea RCX,QWORD PTR [RIP+.L_42d930]
            lea RSI,QWORD PTR [RIP+.L_42d570]
            lea RDI,QWORD PTR [RIP+.L_42d58e]
            mov EDX,593
            call __assert_fail@PLT
.L_40244a:

            lea RCX,QWORD PTR [RIP+.L_42d930]
            lea RSI,QWORD PTR [RIP+.L_42d570]
            lea RDI,QWORD PTR [RIP+.L_42d579]
            mov EDX,592
            call __assert_fail@PLT
.L_402469:

            call __stack_chk_fail@PLT
.L_40246e:

            nop
            nop
.L_402470:

            push R12
            push RBP
            xor EAX,EAX
            push RBX
            mov RBP,QWORD PTR [RDI]
            test RBP,RBP
            je .L_4024a1

            mov R12,RDI
            mov EDI,DWORD PTR [RBP+12]
            mov EAX,DWORD PTR [RBP+8]
            mov EBX,ESI
            mov RSI,RDX
            mov EDX,EAX
            lea ECX,DWORD PTR [RDI+RBX*1]
            sub EDX,EDI
            cmp ECX,EAX
            cmova EBX,EDX
            test EBX,EBX
            jne .L_4024b0
.L_40249c:

            mov EAX,1
.L_4024a1:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4024b0:

            add RDI,QWORD PTR [RBP]
            mov EDX,EBX
            call memmove@PLT

            add EBX,DWORD PTR [RBP+12]
            cmp EBX,DWORD PTR [R12+16]
            mov DWORD PTR [RBP+12],EBX
            jbe .L_40249c

            mov DWORD PTR [R12+16],EBX
            jmp .L_40249c
.L_4024cf:

            nop
.L_4024d0:

            push R12
            push RBP
            mov R8,RSI
            push RBX
            mov RBP,QWORD PTR [RDI]
            mov EBX,EDX
            imul EBX,ECX
            mov ESI,DWORD PTR [RBP+12]
            mov EAX,DWORD PTR [RBP+8]
            lea EDX,DWORD PTR [RSI+RBX*1]
            cmp EDX,EAX
            ja .L_402510

            add RSI,QWORD PTR [RBP]
            mov EDX,EBX
            mov RDI,R8
            mov R12D,ECX
            call memmove@PLT

            add DWORD PTR [RBP+12],EBX
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402510:

            mov RDI,QWORD PTR [RDI+8]
            sub EAX,ESI
            lea RDX,QWORD PTR [RIP+.L_42d6f8]
            mov ECX,EAX
            mov R8D,EBX
            xor EAX,EAX
            mov ESI,5
            call .L_421420

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_402535:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402540:

            push R12
            mov R12,RDI
            mov RDI,RSI
            mov ESI,EDX
            mov EDX,ECX
            mov RCX,QWORD PTR [R12]
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RSI
            call fread@PLT

            cmp EBX,EAX
            je .L_402587

            mov RCX,RAX
            mov RDI,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RIP+.L_42d740]
            imul EBX,EBP
            xor EAX,EAX
            mov ESI,1
            imul ECX,EBP
            mov R8D,EBX
            call .L_421420

            xor EAX,EAX
.L_402587:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40258c:

            nop
            nop
            nop
            nop
.L_402590:

            mov RAX,QWORD PTR [RDI]
            cmp DWORD PTR [RAX+8],ESI
            jb .L_4025a8

            mov DWORD PTR [RAX+12],ESI
            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4025a8:

            sub RSP,8
            mov RDI,QWORD PTR [RDI+8]
            lea RDX,QWORD PTR [RIP+.L_42d778]
            xor EAX,EAX
            mov ESI,6
            call .L_421420

            xor EAX,EAX
            add RSP,8
            ret 
.L_4025ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4025d0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call fclose@PLT

            xor EDX,EDX
            test EAX,EAX
            jne .L_4025f3

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            call .L_421170

            mov EDX,1
.L_4025f3:

            mov EAX,EDX
            pop RBX
            ret 
.L_4025f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402600:

            test ESI,ESI
            jne .L_402610

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402610:

            sub RSP,8
            add DWORD PTR [RDI+16],ESI
            mov RCX,QWORD PTR [RDI]
            mov R8,RDX
            mov ESI,ESI
            mov EDX,1
            mov RDI,R8
            call fwrite@PLT

            cmp RAX,1
            sete AL
            add RSP,8
            movzx EAX,AL
            ret 
.L_40263b:

            nop
            nop
            nop
            nop
            nop
.L_402640:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call ftell@PLT

            cmp RAX,-1
            je .L_402658

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402658:

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_42d7a8]
            xor EAX,EAX
            mov ESI,1
            call .L_421420

            xor EAX,EAX
            pop RBX
            ret 
.L_402673:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402680:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            xor EDX,EDX
            mov ESI,ESI
            call fseek@PLT

            test EAX,EAX
            mov EDX,1
            je .L_4026b2

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_42d7d0]
            mov ESI,1
            xor EAX,EAX
            call .L_421420

            xor EDX,EDX
.L_4026b2:

            mov EAX,EDX
            pop RBX
            ret 
.L_4026b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4026c0:

            mov R10D,DWORD PTR [RDI+132]
            test R10D,R10D
            je .L_402780

            push RBP
            push RBX
            mov RBP,RDX
            mov R9,RDI
            sub RSP,8
.L_4026dc:

            cmp ESI,DWORD PTR [RDI+136]
            je .L_402798

            lea R8D,DWORD PTR [R10-1]
            mov EAX,1
            add R8,1
            jmp .L_402711
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402700:

            lea RCX,QWORD PTR [RAX+1]
            cmp ESI,DWORD PTR [R9+RCX*4+132]
            je .L_402738

            mov RAX,RCX
.L_402711:

            cmp RAX,R8
            jne .L_402700

            cmp R10D,99
            ja .L_402758

            mov DWORD PTR [RDX],R10D
            add DWORD PTR [RDI+132],1
            add RSP,8
.L_40272a:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402738:

            mov EBX,EAX
.L_40273a:

            mov ESI,EBX
            mov RDI,R9
            call .L_402370

            mov DWORD PTR [RBP],EBX
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402758:

            mov RDI,QWORD PTR [R9+8]
            lea RDX,QWORD PTR [RIP+.L_42d597]
            xor EAX,EAX
            mov ECX,100
            mov ESI,2
            call .L_421420

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402780:

            xor R10D,R10D
            mov EAX,1
            mov DWORD PTR [RDX],R10D
            add DWORD PTR [RDI+132],1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402798:

            xor EBX,EBX
            jmp .L_40273a
.L_40279c:

            nop
            nop
            nop
            nop
.L_4027a0:

            push RBP
            push RBX
            mov ESI,320
            mov RBP,RDI
            sub RSP,8
.L_4027ae:

            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_40282c

            mov ESI,4
            mov RDI,RBP
            call .L_4210e0

            test RAX,RAX
            je .L_402840

            mov DWORD PTR [RAX],0
            mov QWORD PTR [RBX],RAX
            lea RAX,QWORD PTR [RIP+.L_402290]
            mov QWORD PTR [RBX+8],RBP
            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+280],RAX
            lea RAX,QWORD PTR [RIP+.L_4022a0]
            mov BYTE PTR [RBX+24],0
            mov QWORD PTR [RBX+288],RAX
            lea RAX,QWORD PTR [RIP+.L_4022f0]
            mov QWORD PTR [RBX+296],RAX
            lea RAX,QWORD PTR [RIP+.L_4022b0]
            mov QWORD PTR [RBX+304],RAX
            lea RAX,QWORD PTR [RIP+.L_4022c0]
            mov QWORD PTR [RBX+312],RAX
.L_40282c:

            add RSP,8
.L_402830:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402840:

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_421170

            jmp .L_40282c
.L_40284f:

            nop
.L_402850:

            test RCX,RCX
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_40285b:

            je .L_402a26

            mov R14,RSI
            mov ESI,320
            mov RBP,RDI
            mov R13D,EDX
            mov R12,RCX
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_402921

            movsx ECX,BYTE PTR [R12]
            cmp CL,114
            je .L_402958

            cmp CL,119
            jne .L_402930

            mov ESI,24
            mov RDI,RBP
            call .L_4210e0

            test RAX,RAX
            mov R12,RAX
            je .L_4029d9

            mov QWORD PTR [RAX],R14
            mov DWORD PTR [RAX+8],R13D
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RBX+20],0
.L_4028c9:

            lea RAX,QWORD PTR [RIP+.L_4024d0]
            mov QWORD PTR [RBX+8],RBP
            mov QWORD PTR [RBX],R12
            mov DWORD PTR [RBX+16],0
            mov BYTE PTR [RBX+24],0
            mov QWORD PTR [RBX+280],RAX
            lea RAX,QWORD PTR [RIP+.L_402590]
            mov QWORD PTR [RBX+288],RAX
            lea RAX,QWORD PTR [RIP+.L_402320]
            mov QWORD PTR [RBX+296],RAX
            lea RAX,QWORD PTR [RIP+.L_4022e0]
            mov QWORD PTR [RBX+304],RAX
            lea RAX,QWORD PTR [RIP+.L_402470]
            mov QWORD PTR [RBX+312],RAX
.L_402921:

            mov RAX,RBX
            pop RBX
.L_402925:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402930:

            lea RDX,QWORD PTR [RIP+.L_42d5c6]
            mov RDI,RBP
            xor EAX,EAX
            xor EBX,EBX
            mov ESI,8
            call .L_421420

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402958:

            mov ESI,24
            mov RDI,RBP
            call .L_4210e0

            test RAX,RAX
            mov R12,RAX
            je .L_4029d9

            test R14,R14
            je .L_4029b8

            mov ESI,R13D
            mov RDI,RBP
            call .L_4210b0

            test RAX,RAX
            mov QWORD PTR [R12],RAX
            je .L_4029f0

            mov EDX,R13D
            mov RSI,R14
            mov RDI,RAX
            call memmove@PLT

            movabs RAX,4294967296
            mov DWORD PTR [R12+8],R13D
            mov QWORD PTR [R12+12],RAX
            mov DWORD PTR [RBX+20],R13D
            jmp .L_4028c9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4029b8:

            lea RDX,QWORD PTR [RIP+.L_42d7f8]
            mov ESI,5
            mov RDI,RBP
            xor EAX,EAX
            call .L_421420

            mov RSI,R12
            mov RDI,RBP
            call .L_421170
.L_4029d9:

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_421170

            jmp .L_402921
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4029f0:

            mov RSI,R12
            mov RDI,RBP
            call .L_421170

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_421170

            lea RDX,QWORD PTR [RIP+.L_42d820]
            mov ECX,R13D
            mov ESI,5
            mov RDI,RBP
            xor EAX,EAX
            call .L_421420

            jmp .L_402921
.L_402a26:

            lea RCX,QWORD PTR [RIP+.L_42d9b0]
            lea RSI,QWORD PTR [RIP+.L_42d570]
            lea RDI,QWORD PTR [RIP+.L_42d5aa]
            mov EDX,243
            call __assert_fail@PLT
.L_402a45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402a50:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_402a5a:

            test RSI,RSI
            je .L_402c11

            test RDX,RDX
            mov R13,RDX
            je .L_402c30

            mov R12,RSI
            mov ESI,320
            mov RBP,RDI
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_402b2e

            movzx EAX,BYTE PTR [R13]
            cmp AL,114
            je .L_402b80

            cmp AL,119
            jne .L_402b40

            lea RSI,QWORD PTR [RIP+.L_42d62a]
            mov RDI,R12
            call fopen@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_402bfa

            mov DWORD PTR [RBX+20],0
.L_402ac2:

            lea RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+8],RBP
            mov QWORD PTR [RBX],R13
            mov DWORD PTR [RBX+16],0
            mov EDX,255
            mov RSI,R12
            call strncpy@PLT

            lea RAX,QWORD PTR [RIP+.L_402540]
            mov BYTE PTR [RBX+279],0
            mov QWORD PTR [RBX+280],RAX
            lea RAX,QWORD PTR [RIP+.L_402680]
            mov QWORD PTR [RBX+288],RAX
            lea RAX,QWORD PTR [RIP+.L_4025d0]
            mov QWORD PTR [RBX+296],RAX
            lea RAX,QWORD PTR [RIP+.L_402640]
            mov QWORD PTR [RBX+304],RAX
            lea RAX,QWORD PTR [RIP+.L_402600]
            mov QWORD PTR [RBX+312],RAX
.L_402b2e:

            add RSP,8
.L_402b32:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402b40:

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_421170

            movsx ECX,BYTE PTR [R13]
            lea RDX,QWORD PTR [RIP+.L_42d5c6]
            mov RDI,RBP
            xor EAX,EAX
            mov ESI,1
            call .L_421420

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402b80:

            lea RSI,QWORD PTR [RIP+.L_42d544]
            mov RDI,R12
            call fopen@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_402bb0

            mov RDI,RAX
            call .L_420f40

            test EAX,EAX
            js .L_402bdb

            mov DWORD PTR [RBX+20],EAX
            jmp .L_402ac2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402bb0:

            mov RSI,RBX
            mov RDI,RBP
            call .L_421170

            lea RDX,QWORD PTR [RIP+.L_42d5f9]
            mov RCX,R12
.L_402bc5:

            mov ESI,1
            mov RDI,RBP
            xor EAX,EAX
            call .L_421420

            xor EBX,EBX
            jmp .L_402b2e
.L_402bdb:

            mov RDI,R13
            call fclose@PLT

            mov RSI,RBX
            mov RDI,RBP
            call .L_421170

            mov RCX,R12
            lea RDX,QWORD PTR [RIP+.L_42d60d]
            jmp .L_402bc5
.L_402bfa:

            mov RSI,RBX
            mov RDI,RBP
            call .L_421170

            mov RCX,R12
            lea RDX,QWORD PTR [RIP+.L_42d62d]
            jmp .L_402bc5
.L_402c11:

            lea RCX,QWORD PTR [RIP+.L_42d990]
            lea RSI,QWORD PTR [RIP+.L_42d570]
            lea RDI,QWORD PTR [RIP+.L_42d5df]
            mov EDX,379
            call __assert_fail@PLT
.L_402c30:

            lea RCX,QWORD PTR [RIP+.L_42d990]
            lea RSI,QWORD PTR [RIP+.L_42d570]
            lea RDI,QWORD PTR [RIP+.L_42d5aa]
            mov EDX,380
            call __assert_fail@PLT
.L_402c4f:

            nop
.L_402c50:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_402c57:

            mov RDI,RSI
            mov RBP,RSI
            call .L_420f40

            test EAX,EAX
            js .L_402ce0

            mov ESI,320
            mov RDI,R12
            mov RBX,RAX
            call .L_4210e0

            test RAX,RAX
            je .L_402cd6

            lea RCX,QWORD PTR [RIP+.L_402540]
            lea RDX,QWORD PTR [RIP+.L_402680]
            lea RSI,QWORD PTR [RIP+.L_402600]
            mov QWORD PTR [RAX+8],R12
            mov QWORD PTR [RAX],RBP
            mov QWORD PTR [RAX+280],RCX
            mov QWORD PTR [RAX+288],RDX
            lea RCX,QWORD PTR [RIP+.L_4025d0]
            lea RDX,QWORD PTR [RIP+.L_402640]
            mov DWORD PTR [RAX+16],0
            mov DWORD PTR [RAX+20],EBX
            mov BYTE PTR [RAX+24],0
            mov QWORD PTR [RAX+296],RCX
            mov QWORD PTR [RAX+304],RDX
            mov QWORD PTR [RAX+312],RSI
.L_402cd6:

            pop RBX
.L_402cd7:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402ce0:

            lea RDX,QWORD PTR [RIP+.L_42d642]
            xor EAX,EAX
            mov ESI,1
            mov RDI,R12
            call .L_421420

            xor EAX,EAX
            jmp .L_402cd6
.L_402cfa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402d00:

            jmp QWORD PTR [RDI+296]
.L_402d06:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402d10:

            test RDI,RDI
            je .L_402d20

            mov RAX,QWORD PTR [RDI]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402d20:

            xor EAX,EAX
            ret 
.L_402d23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402d30:

            push RBP
            push RBX
            mov RBP,RDI
            xor EDI,EDI
            sub RSP,24
.L_402d3b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call time@PLT

            mov ESI,3752
            mov RDI,RBP
            mov QWORD PTR [RSP],RAX
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_402da6

            mov RDI,RSP
            mov QWORD PTR [RAX+8],RBP
            mov DWORD PTR [RAX+132],0
            mov DWORD PTR [RAX+72],34603008
            call gmtime@PLT

            lea RDI,QWORD PTR [RBX+16]
            mov EDX,56
            mov RSI,RAX
            call memmove@PLT

            mov RDI,RBP
            call .L_421620

            mov QWORD PTR [RBX+3744],RAX
.L_402da6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_402dc0

            add RSP,24
.L_402dbd:

            pop RBX
            pop RBP
            ret 
.L_402dc0:

            call __stack_chk_fail@PLT
.L_402dc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402dd0:

            test RDI,RDI
            je .L_402de0

            mov RAX,QWORD PTR [RDI+8]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402de0:

            xor EAX,EAX
            ret 
.L_402de3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402df0:

            test RDI,RDI
            je .L_402dfc

            mov EAX,DWORD PTR [RDI+132]
            ret 
.L_402dfc:

            mov EAX,4294967295
            ret 
.L_402e02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402e10:

            cmp DWORD PTR [RDI+132],ESI
            jb .L_402e1d

            cmp ESI,99
            jbe .L_402e20
.L_402e1d:

            xor EAX,EAX
            ret 
.L_402e20:

            mov ESI,ESI
            mov EAX,DWORD PTR [RDI+RSI*4+136]
            ret 
.L_402e2a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402e30:

            mov R9D,DWORD PTR [RDI+132]
            lea R8D,DWORD PTR [R9-1]
            add R8,1
.L_402e3f:

            test R9D,R9D
            je .L_402e6d

            cmp ESI,DWORD PTR [RDI+136]
            mov EAX,1
            jne .L_402e68

            jmp .L_402e78
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402e58:

            lea RCX,QWORD PTR [RAX+1]
            cmp ESI,DWORD PTR [RDI+RCX*4+132]
            je .L_402e80

            mov RAX,RCX
.L_402e68:

            cmp R8,RAX
            jne .L_402e58
.L_402e6d:

            mov EAX,4294967295
.L_402e72:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402e78:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_402e80:

            test EDX,EDX
            je .L_402e72

            movsxd RCX,EAX
            mov ESI,DWORD PTR [RDI+RCX*4+536]
            test ESI,ESI
            jne .L_402e3f

            ret 
.L_402e94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402ea0:

            mov EAX,DWORD PTR [RDI+132]
            test EAX,EAX
            je .L_402ed2

            cmp ESI,DWORD PTR [RDI+136]
            je .L_402ed8

            lea EDX,DWORD PTR [RAX-1]
            mov EAX,1
            add RDX,1
            jmp .L_402ecd
.L_402ec0:

            add RAX,1
            cmp ESI,DWORD PTR [RDI+RAX*4+132]
            je .L_402ed8
.L_402ecd:

            cmp RDX,RAX
            jne .L_402ec0
.L_402ed2:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402ed8:

            mov EAX,1
            ret 
.L_402ede:

            nop
            nop
.L_402ee0:

            push R15
            push R14
            mov ECX,1
            push R13
            push R12
            mov EDX,128
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,184
.L_402efe:

            mov RBX,QWORD PTR [RDI]
            lea R12,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,1
            je .L_402f58
.L_402f2a:

            xor EAX,EAX
.L_402f2c:

            mov RCX,QWORD PTR [RSP+168]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4031b6

            add RSP,184
.L_402f4a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402f58:

            mov EDI,DWORD PTR [RSP+68]
            call .L_404eb0

            cmp EAX,1633907568
            je .L_402f88

            mov RDI,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RIP+.L_42d848]
            xor EAX,EAX
            mov ESI,11
            call .L_421420

            xor EAX,EAX
            jmp .L_402f2c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402f88:

            mov EDI,DWORD PTR [RSP+44]
            call .L_404eb0

            mov EDI,DWORD PTR [RSP+48]
            mov DWORD PTR [RBP+76],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RSP+52]
            mov DWORD PTR [RBP+80],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RSP+96]
            mov DWORD PTR [RBP+84],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RSP+76]
            mov DWORD PTR [RBP+88],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RSP+80]
            mov DWORD PTR [RBP+92],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RSP+84]
            mov DWORD PTR [RBP+96],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RSP+112]
            mov DWORD PTR [RBP+100],EAX
            call .L_404eb0

            lea RSI,QWORD PTR [R12+56]
            lea RDI,QWORD PTR [RBP+104]
            mov DWORD PTR [RBP+112],EAX
            call .L_404ee0

            mov EAX,DWORD PTR [RSP+40]
            cmp AL,9
            mov DWORD PTR [RSP+16],EAX
            jbe .L_403007

            mov BYTE PTR [RSP+16],9
.L_403007:

            movzx EAX,AH
            mov ECX,9
            mov EDX,EAX
            and EAX,15
            and EDX,4294967280
            cmp AL,9
            cmova EAX,ECX
            cmp DL,144
            mov ECX,4294967184
            cmova EDX,ECX
            or EAX,EDX
            mov BYTE PTR [RSP+17],AL
            xor EAX,EAX
            mov WORD PTR [RSP+18],AX
            mov EDI,DWORD PTR [RSP+16]
            call .L_404eb0

            mov EDI,DWORD PTR [RSP+32]
            mov DWORD PTR [RBP+72],EAX
            call .L_404eb0

            mov R13D,EAX
            mov RAX,QWORD PTR [RBP]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [R12+24]
            mov R14D,DWORD PTR [RAX+20]
            call .L_405eb0

            movdqu XMM0,XMMWORD PTR [RSP+116]
            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RBX
            movups XMMWORD PTR [RBP+116],XMM0
            call .L_405110

            test EAX,EAX
            je .L_402f2a

            mov ECX,DWORD PTR [RSP+12]
            cmp ECX,100
            ja .L_403198

            test ECX,ECX
            mov DWORD PTR [RBP+132],0
            je .L_403188

            cmp R14D,R13D
            cmova R14D,R13D
            lea R13,QWORD PTR [RSP+20]
            xor R12D,R12D
            lea R15,QWORD PTR [R13+4]
            nop
            nop
            nop
            nop
            nop
.L_4030b8:

            mov RSI,R13
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_402f2a

            mov RSI,R15
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_402f2a

            lea RSI,QWORD PTR [R13+8]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_402f2a

            mov EDX,DWORD PTR [RSP+24]
            mov ECX,DWORD PTR [RSP+28]
            mov EAX,EDX
            add EAX,ECX
            jb .L_403179

            cmp EAX,R14D
            ja .L_403179

            mov EAX,DWORD PTR [RBP+132]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov RSI,RAX
            mov EAX,DWORD PTR [RSP+20]
            test ESI,ESI
            mov DWORD PTR [R8+1336],EDX
            mov DWORD PTR [R8+936],ECX
            mov DWORD PTR [R8+136],EAX
            je .L_403170

            lea EDI,DWORD PTR [RSI-1]
            lea RAX,QWORD PTR [RBP+136]
            lea RDI,QWORD PTR [RBP+RDI*4+140]
            jmp .L_403151
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403148:

            add RAX,4
            cmp RAX,RDI
            je .L_403170
.L_403151:

            cmp EDX,DWORD PTR [RAX+1200]
            jne .L_403148

            cmp ECX,DWORD PTR [RAX+800]
            jne .L_403148

            mov R9D,DWORD PTR [RAX]
            mov DWORD PTR [R8+536],R9D
            jmp .L_403148
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403170:

            add ESI,1
            mov DWORD PTR [RBP+132],ESI
.L_403179:

            add R12D,1
            cmp DWORD PTR [RSP+12],R12D
            ja .L_4030b8
.L_403188:

            mov EAX,1
            jmp .L_402f2c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403198:

            mov RDI,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RIP+.L_42d597]
            xor EAX,EAX
            mov ESI,2
            call .L_421420

            xor EAX,EAX
            jmp .L_402f2c
.L_4031b6:

            call __stack_chk_fail@PLT
.L_4031bb:

            nop
            nop
            nop
            nop
            nop
.L_4031c0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,ESI
            sub RSP,160
.L_4031d0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            call .L_404eb0

            mov EDI,1818455411
            mov DWORD PTR [RSP+16],EAX
            lea RBP,QWORD PTR [RSP+16]
            call .L_404eb0

            mov EDI,DWORD PTR [RBX+72]
            mov DWORD PTR [RSP+20],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RBX+76]
            mov DWORD PTR [RSP+24],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RBX+80]
            mov DWORD PTR [RSP+28],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RBX+84]
            mov DWORD PTR [RSP+32],EAX
            call .L_404eb0

            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+36],EAX
            call .L_405fd0

            mov EDI,1633907568
            call .L_404eb0

            mov EDI,1095782476
            mov DWORD PTR [RSP+52],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RBX+92]
            mov DWORD PTR [RSP+56],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RBX+96]
            mov DWORD PTR [RSP+60],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RBX+100]
            mov DWORD PTR [RSP+64],EAX
            call .L_404eb0

            lea RSI,QWORD PTR [RBX+104]
            lea RDI,QWORD PTR [RBP+56]
            mov DWORD PTR [RSP+68],EAX
            call .L_404ee0

            mov EDI,DWORD PTR [RBX+88]
            call .L_404eb0

            mov DWORD PTR [RSP+80],EAX
            call .L_40cfe0

            movsd XMM0,QWORD PTR [RAX]
            call .L_405e40

            mov EDI,EAX
            call .L_404eb0

            mov DWORD PTR [RSP+84],EAX
            call .L_40cfe0

            movsd XMM0,QWORD PTR [RAX+8]
            call .L_405e40

            mov EDI,EAX
            call .L_404eb0

            mov DWORD PTR [RSP+88],EAX
            call .L_40cfe0

            movsd XMM0,QWORD PTR [RAX+16]
            call .L_405e40

            mov EDI,EAX
            call .L_404eb0

            mov EDI,1818455411
            mov DWORD PTR [RSP+92],EAX
            call .L_404eb0

            pxor XMM0,XMM0
            mov DWORD PTR [RSP+96],EAX
            mov RAX,QWORD PTR [RBX]
            mov RDX,RBP
            mov ESI,128
            movups XMMWORD PTR [RSP+116],XMM0
            mov RDI,RAX
            mov QWORD PTR [RBP+116],0
            mov DWORD PTR [RBP+124],0
            movdqu XMM0,XMMWORD PTR [RBX+116]
            movups XMMWORD PTR [RSP+100],XMM0
            call QWORD PTR [RAX+312]

            test EAX,EAX
            je .L_4033e8

            mov ESI,DWORD PTR [RBX+132]
            test ESI,ESI
            je .L_40335f

            lea EDX,DWORD PTR [RSI-1]
            lea RAX,QWORD PTR [RBX+136]
            xor ESI,ESI
            lea RDX,QWORD PTR [RBX+RDX*4+140]
            nop
            nop
            nop
.L_403350:

            cmp DWORD PTR [RAX],1
            sbb ESI,-1
            add RAX,4
            cmp RAX,RDX
            jne .L_403350
.L_40335f:

            mov RDI,QWORD PTR [RBX]
            call .L_4057d0

            test EAX,EAX
            je .L_4033e8

            mov EAX,DWORD PTR [RBX+132]
            mov EBP,1
            lea R12,QWORD PTR [RSP+4]
            test EAX,EAX
            je .L_4033da

            nop
.L_403380:

            mov EDI,DWORD PTR [RBX+RBP*4+132]
            test EDI,EDI
            je .L_4033cc

            call .L_404eb0

            mov EDI,DWORD PTR [RBX+RBP*4+1332]
            mov DWORD PTR [RSP+4],EAX
            call .L_404eb0

            mov EDI,DWORD PTR [RBX+RBP*4+932]
            mov DWORD PTR [RSP+8],EAX
            call .L_404eb0

            mov DWORD PTR [RSP+12],EAX
            mov RAX,QWORD PTR [RBX]
            mov RDX,R12
            mov ESI,12
            mov RDI,RAX
            call QWORD PTR [RAX+312]

            test EAX,EAX
            je .L_4033e8
.L_4033cc:

            mov EAX,EBP
            add RBP,1
            cmp DWORD PTR [RBX+132],EAX
            ja .L_403380
.L_4033da:

            mov EAX,1
            jmp .L_4033ea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4033e8:

            xor EAX,EAX
.L_4033ea:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            jne .L_403409

            add RSP,160
.L_403404:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_403409:

            call __stack_chk_fail@PLT
.L_40340e:

            nop
            nop
.L_403410:

            mov EAX,DWORD PTR [RDI+88]
            ret 
.L_403414:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403420:

            mov DWORD PTR [RDI+88],ESI
            ret 
.L_403424:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403430:

            mov EAX,DWORD PTR [RDI+92]
            ret 
.L_403434:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403440:

            mov DWORD PTR [RDI+92],ESI
            ret 
.L_403444:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403450:

            mov EAX,DWORD PTR [RDI+96]
            ret 
.L_403454:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403460:

            mov DWORD PTR [RDI+96],ESI
            ret 
.L_403464:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403470:

            mov EAX,DWORD PTR [RDI+112]
            ret 
.L_403474:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403480:

            mov EAX,DWORD PTR [RDI+100]
            ret 
.L_403484:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403490:

            mov DWORD PTR [RDI+100],ESI
            ret 
.L_403494:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034a0:

            mov RAX,QWORD PTR [RDI+104]
            mov QWORD PTR [RSI],RAX
            ret 
.L_4034a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034b0:

            mov QWORD PTR [RDI+104],RSI
            ret 
.L_4034b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034c0:

            movdqu XMM0,XMMWORD PTR [RDI+116]
            movups XMMWORD PTR [RSI],XMM0
            ret 
.L_4034c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034d0:

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RDI+116],XMM0
            ret 
.L_4034d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034e0:

            mov RAX,RSI
            lea RSI,QWORD PTR [RDI+16]
            sub RSP,8
            mov EDX,56
            mov RDI,RAX
            call memmove@PLT

            mov EAX,1
            add RSP,8
            ret 
.L_403502:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403510:

            mov EAX,DWORD PTR [RDI+84]
            ret 
.L_403514:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403520:

            mov DWORD PTR [RDI+84],ESI
            ret 
.L_403524:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403530:

            mov EAX,DWORD PTR [RDI+80]
            ret 
.L_403534:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403540:

            mov DWORD PTR [RDI+80],ESI
            ret 
.L_403544:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403550:

            mov EAX,DWORD PTR [RDI+76]
            ret 
.L_403554:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403560:

            mov DWORD PTR [RDI+76],ESI
            ret 
.L_403564:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403570:

            mov EAX,DWORD PTR [RDI+72]
            ret 
.L_403574:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403580:

            mov DWORD PTR [RDI+72],ESI
            ret 
.L_403584:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403590:

            push RBX
            sub RSP,112
.L_403595:

            mulsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            movsd XMM3,QWORD PTR [RIP+.L_42d9e0]
            movsd XMM4,QWORD PTR [RIP+.L_42d9d0]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            movapd XMM2,XMM0
            movapd XMM1,XMM0
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            jbe .L_40360e

            cvttsd2si RAX,XMM0
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_42d9d8]
            andnpd XMM3,XMM0
            cvtsi2sd XMM2,RAX
            movapd XMM5,XMM2
            cmpnlesd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMM4
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            orpd XMM1,XMM3
.L_40360e:

            cvttsd2si RAX,XMM1
            test EAX,EAX
            mov ECX,EAX
            je .L_403694

            mov R8,RSP
            xor R10D,R10D
            mov R11D,3435973837
            mov R9,R8
            jmp .L_403633
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403630:

            mov R10D,EAX
.L_403633:

            mov EAX,ECX
            mul R11D
            shr EDX,3
            lea EAX,DWORD PTR [RDX+RDX*4]
            add EAX,EAX
            sub ECX,EAX
            lea EAX,DWORD PTR [R10+1]
            test EDX,EDX
            setne BL
            mov BYTE PTR [R9],CL
            movsx ESI,CL
            cmp EAX,99
            mov ECX,EDX
            setle DL
            add R9,1
            test BL,DL
            jne .L_403630

            lea EAX,DWORD PTR [R10-1]
            movsxd RDX,R10D
            xor ECX,ECX
            cdqe 
            add RAX,R8
            mov RBX,RAX
            sub RBX,RDX
            mov RDX,RBX
            jmp .L_403687
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403680:

            movsx ESI,BYTE PTR [RAX]
            sub RAX,1
.L_403687:

            shl ECX,4
            add ECX,ESI
            cmp RDX,RAX
            jne .L_403680

            shl ECX,16
.L_403694:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            mov DWORD PTR [RDI+72],ECX
            jne .L_4036ad

            add RSP,112
.L_4036ab:

            pop RBX
            ret 
.L_4036ad:

            call __stack_chk_fail@PLT
.L_4036b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4036c0:

            sub RSP,120

            movzx EDX,WORD PTR [RDI+74]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            test EDX,EDX
            je .L_403770

            mov RCX,RSP
            xor R8D,R8D
            mov RSI,RCX
            jmp .L_4036f3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4036f0:

            movsxd R8,EDI
.L_4036f3:

            mov EDI,EDX
            shr EDX,4
            and EDI,15
            test EDX,EDX
            mov BYTE PTR [RSI],DIL
            movsx EAX,DIL
            lea EDI,DWORD PTR [R8+1]
            setne R10B
            cmp EDI,99
            setle R9B
            add RSI,1
            test R10B,R9B
            jne .L_4036f0

            lea EDX,DWORD PTR [R8-1]
            movsxd RDX,EDX
            add RDX,RCX
            xor ECX,ECX
            mov RSI,RDX
            sub RSI,R8
            jmp .L_403737
.L_403730:

            movsx EAX,BYTE PTR [RDX]
            sub RDX,1
.L_403737:

            lea ECX,DWORD PTR [RCX+RCX*4]
            cmp RSI,RDX
            lea ECX,DWORD PTR [RAX+RCX*2]
            jne .L_403730

            pxor XMM0,XMM0
            cvtsi2sd XMM0,RCX
            divsd XMM0,QWORD PTR [RIP+.L_42d9c8]
.L_403753:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_403776

            add RSP,120

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403770:

            pxor XMM0,XMM0
            jmp .L_403753
.L_403776:

            call __stack_chk_fail@PLT
.L_40377b:

            nop
            nop
            nop
            nop
            nop
.L_403780:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            sub RSP,136
.L_403797:

            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            call .L_4036c0

            mov ECX,DWORD PTR [R13+132]
            movsd QWORD PTR [RSP+16],XMM0
            test ECX,ECX
            je .L_403a48

            lea RAX,QWORD PTR [RSP+48]
            mov R15D,1
            mov QWORD PTR [RSP+24],RAX
            jmp .L_40383b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4037e0:

            mov EAX,DWORD PTR [R13+R15*4+1732]
            test EAX,EAX
            je .L_403938

            mov ESI,DWORD PTR [R13+R15*4+932]
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            cmp EAX,1
            jne .L_403908
.L_40380a:

            mov EAX,DWORD PTR [RBX+16]
            mov RDI,RBX
            sub EAX,EBP
            mov DWORD PTR [R13+R15*4+932],EAX
            call .L_4062c0

            test EAX,EAX
            je .L_403908
.L_403827:

            mov EAX,R15D
            add R15,1
            cmp DWORD PTR [R13+132],EAX
            jbe .L_403a48
.L_40383b:

            mov ESI,DWORD PTR [R13+R15*4+132]
            test ESI,ESI
            je .L_403827

            mov EDX,DWORD PTR [R13+R15*4+532]
            test EDX,EDX
            jne .L_403827

            mov RDX,QWORD PTR [R13+R15*8+2128]
            mov EBP,DWORD PTR [RBX+16]
            test RDX,RDX
            mov DWORD PTR [R13+R15*4+1332],EBP
            jne .L_4037e0

            test EBP,EBP
            je .L_403827

            mov EAX,DWORD PTR [R12+R15*4+932]
            mov ESI,DWORD PTR [R12+R15*4+1332]
            mov DWORD PTR [RSP+8],EAX
            mov RAX,QWORD PTR [R12]
            mov RDI,RAX
            call QWORD PTR [RAX+288]

            test EAX,EAX
            je .L_403908

            mov RDI,QWORD PTR [R13+8]
            mov ESI,DWORD PTR [RSP+8]
            call .L_4210b0

            test RAX,RAX
            mov R14,RAX
            je .L_403908

            mov RAX,QWORD PTR [R12]
            mov ECX,1
            mov EDX,DWORD PTR [RSP+8]
            mov RSI,R14
            mov RDI,RAX
            call QWORD PTR [RAX+280]

            cmp EAX,1
            jne .L_403908

            mov RDX,R14
            mov ESI,DWORD PTR [RSP+8]
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_403908

            mov RDI,QWORD PTR [R13+8]
            mov RSI,R14
            call .L_421170

            mov EAX,DWORD PTR [RBX+16]
            mov RDI,RBX
            sub EAX,EBP
            mov DWORD PTR [R13+R15*4+932],EAX
            call .L_4062c0

            test EAX,EAX
            jne .L_403827
.L_403908:

            xor R14D,R14D
.L_40390b:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_403a80

            add RSP,136
.L_403929:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403938:

            mov RDI,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+8],RDX
            call .L_41b590

            test RAX,RAX
            mov R14,RAX
            je .L_403827

            mov RAX,QWORD PTR [RAX+88]
            mov RDX,QWORD PTR [RSP+8]
            test RAX,RAX
            je .L_403a77

            mov RDI,RDX
            movsd XMM0,QWORD PTR [RSP+16]
            call RAX

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,EAX
.L_403976:

            mov RDI,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+8],RDX
            call .L_41b3c0

            test RAX,RAX
            mov RCX,RAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_403a53

            mov EAX,DWORD PTR [RAX]
            mov RDI,RBX
            mov QWORD PTR [RSP+32],RDX
            mov QWORD PTR [RSP+8],RCX
            mov ESI,EAX
            mov DWORD PTR [RSP+44],EAX
            call .L_406180

            test EAX,EAX
            je .L_403908

            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,RBX
            mov RDI,QWORD PTR [RSP+24]
            movdqu XMM0,XMMWORD PTR [RCX]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+16]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+32]
            movaps XMMWORD PTR [RSP+80],XMM0
            mov RAX,QWORD PTR [RCX+48]
            mov ECX,DWORD PTR [R14]
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+88],RAX
            mov EAX,DWORD PTR [R13+72]
            mov DWORD PTR [RSP+96],EAX
            call QWORD PTR [RSP+64]

            test EAX,EAX
            mov R14D,EAX
            jne .L_40380a

            lea RBX,QWORD PTR [RSP+115]
            mov ESI,DWORD PTR [RSP+44]
            mov RDI,RBX
            call .L_421540

            mov RDI,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RIP+.L_42d65c]
            mov RCX,RBX
            mov ESI,7
            xor EAX,EAX
            call .L_421420

            jmp .L_40390b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403a48:

            mov R14D,1
            jmp .L_40390b
.L_403a53:

            mov ECX,DWORD PTR [R13+R15*4+132]
            mov RDI,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RIP+.L_42d870]
            mov ESI,3
            xor EAX,EAX
            call .L_421420

            jmp .L_403827
.L_403a77:

            mov ESI,DWORD PTR [R14+8]
            jmp .L_403976
.L_403a80:

            call __stack_chk_fail@PLT
.L_403a85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403a90:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov ECX,469
            push RBX
            mov RBX,RDI
            mov RSI,RBX
            sub RSP,3760
.L_403aad:

            mov RBP,RSP
            mov RDI,RBP

            rep movsq 

            mov RDI,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+3752],RAX
            xor EAX,EAX
            call .L_4027a0

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_403b2f

            xor ESI,ESI
            mov RDI,RBX
            mov R12,RAX
            call .L_4031c0

            test EAX,EAX
            jne .L_403b70
.L_403aef:

            mov RDI,R12
            call QWORD PTR [R12+296]

            mov RAX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+8]
            mov RCX,RBX
            mov RSI,RBP
            and RDI,-8
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RBP+3744]
            sub RCX,RDI
            sub RSI,RCX
            add ECX,3752
            shr ECX,3
            mov QWORD PTR [RBX+3744],RAX

            rep movsq 
.L_403b2f:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            xor R13D,R13D
            call .L_4216c0
.L_403b42:

            mov RDX,QWORD PTR [RSP+3752]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_403cae

            add RSP,3760
.L_403b63:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403b70:

            mov RSI,RBP
            mov RDI,RBX
            call .L_403780

            test EAX,EAX
            je .L_403aef

            test R14,R14
            mov R13D,DWORD PTR [R12+16]
            je .L_403c46

            mov EAX,DWORD PTR [RBX+132]
            mov QWORD PTR [RBX],R14
            test EAX,EAX
            je .L_403c20

            lea EDI,DWORD PTR [RAX-1]
            lea RCX,QWORD PTR [RBX+536]
            lea R8,QWORD PTR [RBX+RDI*4+540]
            add RDI,1
            jmp .L_403bc9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403bc0:

            add RCX,4
            cmp RCX,R8
            je .L_403c20
.L_403bc9:

            mov ESI,DWORD PTR [RCX]
            test ESI,ESI
            je .L_403bc0

            cmp ESI,DWORD PTR [RBX+136]
            mov EAX,1
            jne .L_403beb

            jmp .L_403ca7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403be8:

            mov RAX,RDX
.L_403beb:

            cmp RAX,RDI
            je .L_403bc0

            lea RDX,QWORD PTR [RAX+1]
            cmp ESI,DWORD PTR [RBX+RDX*4+132]
            jne .L_403be8
.L_403bfd:

            cdqe 
            lea RAX,QWORD PTR [RBX+RAX*4]
            mov EDX,DWORD PTR [RAX+1336]
            mov DWORD PTR [RCX+800],EDX
            mov EAX,DWORD PTR [RAX+936]
            mov DWORD PTR [RCX+400],EAX
            jmp .L_403bc0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403c20:

            mov ESI,R13D
            mov RDI,RBX
            call .L_4031c0

            test EAX,EAX
            je .L_403aef

            mov RSI,RBP
            mov RDI,RBX
            call .L_403780

            test EAX,EAX
            je .L_403aef
.L_403c46:

            mov RAX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+8]
            mov RSI,RBP
            and RDI,-8
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RBP+3744]
            mov QWORD PTR [RBX+3744],RAX
            mov RAX,RBX
            sub RAX,RDI
            sub RSI,RAX
            add EAX,3752
            shr EAX,3
            mov ECX,EAX

            rep movsq 

            mov RDI,R12
            call QWORD PTR [R12+296]

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            test EAX,EAX
            mov EAX,0
            cmove R13D,EAX
            call .L_4216c0

            jmp .L_403b42
.L_403ca7:

            xor EAX,EAX
            jmp .L_403bfd
.L_403cae:

            call __stack_chk_fail@PLT
.L_403cb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403cc0:

            push RBP
            push RBX
            sub RSP,8
            test RDI,RDI
            je .L_403d01

            mov RBX,RDI
            mov RBP,RSI
            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            call .L_421680

            test EAX,EAX
            jne .L_403cf0

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_403cf0:

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_403a90
.L_403d01:

            lea RCX,QWORD PTR [RIP+.L_42d970]
            lea RSI,QWORD PTR [RIP+.L_42d570]
            lea RDI,QWORD PTR [RIP+.L_42d675]
            mov EDX,1325
            call __assert_fail@PLT
.L_403d20:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            xor EDI,EDI
            mov R13,RSI
            sub RSP,8
.L_403d32:

            test R12,R12
            je .L_403d3c

            mov RDI,QWORD PTR [R12+8]
.L_403d3c:

            lea RDX,QWORD PTR [RIP+.L_42d68f]
            mov RSI,R13
            xor EBX,EBX
            call .L_402a50

            test RAX,RAX
            mov RBP,RAX
            je .L_403d74

            mov RSI,RAX
            mov RDI,R12
            xor EBX,EBX
            call .L_403cc0

            test EAX,EAX
            mov RDI,RBP
            setne BL
            call QWORD PTR [RBP+296]

            and EBX,EAX
            je .L_403d88
.L_403d74:

            add RSP,8
.L_403d78:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403d88:

            mov RDI,R13
            call remove@PLT

            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_403d9d:

            nop
            nop
            nop
.L_403da0:

            push RBP
            push RBX
            mov RBX,RDI
            xor EDI,EDI
            sub RSP,8
            test RBX,RBX
            je .L_403db4

            mov RDI,QWORD PTR [RBX+8]
.L_403db4:

            call .L_402c50

            mov RBP,RAX
            xor EAX,EAX
            test RBP,RBP
            je .L_403de0

            mov RDI,RBX
            mov RSI,RBP
            xor EBX,EBX
            call .L_403cc0

            test EAX,EAX
            mov RDI,RBP
            setne BL
            call QWORD PTR [RBP+296]

            and EAX,EBX
.L_403de0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403de7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403df0:

            push RBP
            push RBX
            mov RBX,RDI
            xor EDI,EDI
            sub RSP,24
.L_403dfb:

            test RBX,RBX
            je .L_403e04

            mov RDI,QWORD PTR [RBX+8]
.L_403e04:

            test RDX,RDX
            je .L_403e73

            test RSI,RSI
            je .L_403e50

            mov EDX,DWORD PTR [RDX]
            lea RCX,QWORD PTR [RIP+.L_42d68f]
            call .L_402850

            mov RBP,RAX
            xor EAX,EAX
            test RBP,RBP
            je .L_403e43

            mov RDI,RBX
            mov RSI,RBP
            xor EBX,EBX
            call .L_403cc0

            test EAX,EAX
            mov RDI,RBP
            setne BL
            call QWORD PTR [RBP+296]

            and EAX,EBX
.L_403e43:

            add RSP,24
.L_403e47:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403e50:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RDX
            call .L_403cc0

            mov RDX,QWORD PTR [RSP+8]
            test EAX,EAX
            mov DWORD PTR [RDX],EAX
            setne AL
            add RSP,24
            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
.L_403e73:

            lea RCX,QWORD PTR [RIP+.L_42d950]
            lea RSI,QWORD PTR [RIP+.L_42d570]
            lea RDI,QWORD PTR [RIP+.L_42d691]
            mov EDX,1413
            call __assert_fail@PLT
.L_403e92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403ea0:

            push R13
            push R12
            xor R12D,R12D
            push RBP
            push RBX
            sub RSP,72
.L_403ead:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_403f88

            mov EDX,DWORD PTR [RDI+3736]
            mov RBX,RDI
            mov R12D,1
            test EDX,EDX
            jne .L_403fb0
.L_403edd:

            mov EAX,DWORD PTR [RBX+132]
            test EAX,EAX
            je .L_403f58

            mov EBP,1
            mov R13,RSP
            nop
.L_403ef0:

            mov RSI,QWORD PTR [RBX+RBP*8+2128]
            test RSI,RSI
            je .L_403f4a

            mov RDX,QWORD PTR [RBX+RBP*8+2928]
            mov RDI,QWORD PTR [RBX+8]
            test RDX,RDX
            je .L_403fd8

            movdqu XMM0,XMMWORD PTR [RDX]
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+16]
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov RAX,QWORD PTR [RDX+48]
            mov QWORD PTR [RSP+40],RDI
            mov RDI,R13
            mov QWORD PTR [RSP+48],RAX
            mov EAX,DWORD PTR [RBX+72]
            mov DWORD PTR [RSP+48],EAX
            call QWORD PTR [RSP+32]
.L_403f4a:

            mov EAX,EBP
            add RBP,1
            cmp DWORD PTR [RBX+132],EAX
            ja .L_403ef0
.L_403f58:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_403f6c

            mov RDI,RAX
            call QWORD PTR [RAX+296]

            and R12D,EAX
.L_403f6c:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_421640

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            call .L_421170
.L_403f88:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_403fe2

            add RSP,72
.L_403f9f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fb0:

            mov RAX,QWORD PTR [RDI]
            mov DWORD PTR [RDI+3736],0
            lea RSI,QWORD PTR [RAX+24]
            call .L_403d20

            and EAX,1
            mov R12D,EAX
            jmp .L_403edd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fd8:

            call .L_421170

            jmp .L_403f4a
.L_403fe2:

            call __stack_chk_fail@PLT
.L_403fe7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403ff0:

            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_404015

            mov QWORD PTR [RAX],RBP
            mov RDI,RAX
            call .L_402ee0

            test EAX,EAX
            je .L_404020
.L_404015:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_404020:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            jmp .L_404015
.L_40402c:

            nop
            nop
            nop
            nop
.L_404030:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov EBP,EDX
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_404057

            test EBP,EBP
            mov QWORD PTR [RAX],R12
            je .L_404060

            mov DWORD PTR [RAX+3736],1
.L_404057:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_404060:

            mov RDI,RAX
            call .L_402ee0

            test EAX,EAX
            jne .L_404057

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            jmp .L_404057
.L_404078:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404080:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_4040cc

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call .L_402a50

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4040ec

            movzx EAX,BYTE PTR [R12]
            and EAX,4294967263
            cmp AL,87
            jne .L_4040e0

            mov DWORD PTR [RBX+3736],1
.L_4040cc:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4040e0:

            mov RDI,RBX
            call .L_402ee0

            test EAX,EAX
            jne .L_4040cc
.L_4040ec:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            jmp .L_4040cc
.L_4040f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404100:

            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_404080
.L_40410d:

            nop
            nop
            nop
.L_404110:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RSI
            sub RSP,8
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_404156

            mov RSI,R12
            mov RDI,RBP
            call .L_402c50

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_404180

            cmp BYTE PTR [R13],119
            je .L_404168

            mov RDI,RBX
            call .L_402ee0

            test EAX,EAX
            je .L_404180
.L_404156:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404168:

            mov DWORD PTR [RBX+3736],1
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_404180:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            jmp .L_404156
.L_40418c:

            nop
            nop
            nop
            nop
.L_404190:

            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_404110
.L_40419d:

            nop
            nop
            nop
.L_4041a0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RSI
            sub RSP,8
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_4041e9

            lea RCX,QWORD PTR [RIP+.L_42d6ae]
            mov EDX,R13D
            mov RSI,R12
            mov RDI,RBP
            call .L_402850

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_404200

            mov RDI,RBX
            call .L_402ee0

            test EAX,EAX
            je .L_404200
.L_4041e9:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404200:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_404218:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404220:

            mov EDX,ESI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_4041a0
.L_40422c:

            nop
            nop
            nop
            nop
.L_404230:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,ESI
            sub RSP,104
.L_404243:

            mov R12,QWORD PTR [RDI]
            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_421680

            test EAX,EAX
            je .L_404501

            mov EDI,DWORD PTR [R13+132]
            mov ECX,EBP
            lea ESI,DWORD PTR [RDI-1]
            add RSI,1
.L_40427e:

            test EDI,EDI
            je .L_4042ae

            cmp ECX,DWORD PTR [R13+136]
            mov EAX,1
            jne .L_4042a9

            jmp .L_4042e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404298:

            lea RDX,QWORD PTR [RAX+1]
            cmp ECX,DWORD PTR [R13+RDX*4+132]
            je .L_4042f0

            mov RAX,RDX
.L_4042a9:

            cmp RSI,RAX
            jne .L_404298
.L_4042ae:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
.L_4042b9:

            call .L_4216c0

            xor EAX,EAX
.L_4042c0:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40457a

            add RSP,104
.L_4042d8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4042e8:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042f0:

            movsxd RBX,EAX
            mov ECX,DWORD PTR [R13+RBX*4+536]
            test ECX,ECX
            jne .L_40427e

            lea R14,QWORD PTR [R13+RBX*8]
            cmp QWORD PTR [R14+2136],0
            je .L_4043ac

            mov RAX,QWORD PTR [R14+2936]
            mov RDI,QWORD PTR [R13+8]
            test RAX,RAX
            je .L_404437

            mov R12D,DWORD PTR [RAX]
            test R12D,R12D
            je .L_404437

            mov ESI,EBP
            call .L_41b590

            test RAX,RAX
            je .L_4042ae

            mov EDX,DWORD PTR [RAX+4]
            mov ECX,20
            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            cmp EDX,20
            cmovbe ECX,EDX
            test EDX,EDX
            je .L_4042b9

            cmp R12D,DWORD PTR [RAX+8]
            je .L_40438b

            mov EDX,1
            nop
            nop
            nop
            nop
            nop
            nop
.L_404378:

            cmp ECX,EDX
            jbe .L_4042b9

            add RDX,1
            cmp R12D,DWORD PTR [RAX+RDX*4+4]
            jne .L_404378
.L_40438b:

            mov EAX,DWORD PTR [R13+RBX*4+1736]
            test EAX,EAX
            jne .L_4042b9
.L_40439b:

            call .L_4216c0

            mov RAX,QWORD PTR [R14+2136]
            jmp .L_4042c0
.L_4043ac:

            lea RAX,QWORD PTR [R13+RBX*4]
            mov EBX,DWORD PTR [RAX+936]
            mov ESI,DWORD PTR [RAX+1336]
            cmp EBX,7
            jbe .L_4042ae

            mov RDI,R12
            call QWORD PTR [R12+288]

            test EAX,EAX
            je .L_4042ae

            mov RDI,QWORD PTR [R13+8]
            mov ESI,EBP
            call .L_41b590

            test RAX,RAX
            mov R15,RAX
            je .L_404508

            mov RDI,R12
            call .L_4060e0

            test EAX,EAX
            je .L_4042ae

            mov EDX,DWORD PTR [R15+4]
            mov ECX,20
            mov RDI,QWORD PTR [R13+8]
            cmp EDX,20
            cmovbe ECX,EDX
            test EDX,EDX
            je .L_404437

            cmp EAX,DWORD PTR [R15+8]
            je .L_404443

            mov EDX,1
            jmp .L_404433
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404428:

            add RDX,1
            cmp EAX,DWORD PTR [R15+RDX*4+4]
            je .L_404443
.L_404433:

            cmp ECX,EDX
            ja .L_404428
.L_404437:

            mov RSI,QWORD PTR [R13+3744]
            jmp .L_4042b9
.L_404443:

            mov ESI,EAX
            sub EBX,8
            call .L_41b3c0

            test RAX,RAX
            je .L_4042ae

            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDI,QWORD PTR [RSP+16]
            mov ECX,EBX
            mov RSI,R12
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            mov RDX,QWORD PTR [RAX+48]
            mov QWORD PTR [R14+2936],RAX
            mov RAX,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+64],RDX
            lea RDX,QWORD PTR [RSP+12]
            mov QWORD PTR [RSP+56],RAX
            mov EAX,DWORD PTR [R13+72]
            mov DWORD PTR [RSP+64],EAX
            call QWORD PTR [RSP+24]

            test RAX,RAX
            mov QWORD PTR [R14+2136],RAX
            je .L_404541

            mov EAX,DWORD PTR [RSP+12]
            cmp DWORD PTR [R15],EAX
            jbe .L_4044f1

            lea RBX,QWORD PTR [RSP+83]
            mov ESI,EBP
            mov RDI,RBX
            call .L_421540

            mov RDI,QWORD PTR [R13+8]
            mov R9D,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RIP+.L_42d898]
            mov R8D,DWORD PTR [R15]
            mov RCX,RBX
            mov ESI,12
            xor EAX,EAX
            call .L_421420
.L_4044f1:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            jmp .L_40439b
.L_404501:

            xor EAX,EAX
            jmp .L_4042c0
.L_404508:

            lea RBX,QWORD PTR [RSP+83]
            mov ESI,EBP
            mov RDI,RBX
            call .L_421540

            mov RDI,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RIP+.L_42d6b0]
            mov ESI,8
            mov RCX,RBX
            xor EAX,EAX
            call .L_421420

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            jmp .L_4042b9
.L_404541:

            lea RBX,QWORD PTR [RSP+83]
            mov ESI,EBP
            mov RDI,RBX
            call .L_421540

            mov RDI,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RIP+.L_42d6cd]
            mov ESI,12
            mov RCX,RBX
            xor EAX,EAX
            call .L_421420

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            jmp .L_4042b9
.L_40457a:

            call __stack_chk_fail@PLT
.L_40457f:

            nop
.L_404580:

            mov R8D,DWORD PTR [RDI+132]
            lea ECX,DWORD PTR [R8-1]
            add RCX,1
.L_40458f:

            test R8D,R8D
            je .L_4045bd

            cmp ESI,DWORD PTR [RDI+136]
            mov EAX,1
            jne .L_4045b8

            jmp .L_4045c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4045a8:

            lea RDX,QWORD PTR [RAX+1]
            cmp DWORD PTR [RDI+RDX*4+132],ESI
            je .L_4045c8

            mov RAX,RDX
.L_4045b8:

            cmp RAX,RCX
            jne .L_4045a8
.L_4045bd:

            xor EAX,EAX
            ret 
.L_4045c0:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4045c8:

            cdqe 
            mov ESI,DWORD PTR [RDI+RAX*4+536]
            test ESI,ESI
            jne .L_40458f

            mov RAX,QWORD PTR [RDI+RAX*8+2936]
            mov EAX,DWORD PTR [RAX]
            ret 
.L_4045e0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,104
.L_4045f6:

            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_421680

            test EAX,EAX
            je .L_404648

            test R12,R12
            je .L_404670

            lea RDX,QWORD PTR [RSP+12]
            mov ESI,EBP
            mov RDI,RBX
            call .L_4026c0

            test EAX,EAX
            jne .L_4046c0
.L_404636:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4216c0

            xor EAX,EAX
.L_404648:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404914

            add RSP,104
.L_404660:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404670:

            mov EAX,DWORD PTR [RBX+132]
            test EAX,EAX
            je .L_4046b1

            cmp EBP,DWORD PTR [RBX+136]
            je .L_404790

            lea EDX,DWORD PTR [RAX-1]
            mov ESI,1
            add RDX,1
            jmp .L_4046ac
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404698:

            lea RAX,QWORD PTR [RSI+1]
            cmp EBP,DWORD PTR [RBX+RAX*4+132]
            je .L_404798

            mov RSI,RAX
.L_4046ac:

            cmp RSI,RDX
            jne .L_404698
.L_4046b1:

            mov DWORD PTR [RSP+12],4294967295
            jmp .L_404636
          .byte 0x66
          .byte 0x90
.L_4046c0:

            movsxd RAX,DWORD PTR [RSP+12]
            mov ESI,EBP
            lea RAX,QWORD PTR [RBX+RAX*4]
            mov DWORD PTR [RAX+1736],0
            mov DWORD PTR [RAX+536],0
            mov RDI,QWORD PTR [RBX+8]
            call .L_41b590

            test RAX,RAX
            mov R14,RAX
            je .L_404890

            mov RDI,RBX
            call .L_4036c0

            mov RAX,QWORD PTR [R14+88]
            test RAX,RAX
            je .L_4048ef

            mov RDI,R12
            call RAX

            mov EDX,DWORD PTR [R14+4]
            mov ECX,20
            cmp EDX,20
            cmovbe ECX,EDX
            test EDX,EDX
            je .L_40474e

            mov R13D,DWORD PTR [R14+8]
            cmp EAX,R13D
            je .L_4047d0

            mov EDX,1
            jmp .L_40474a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404738:

            add RDX,1
            mov R13D,DWORD PTR [R14+RDX*4+4]
            cmp EAX,R13D
            je .L_4047d0
.L_40474a:

            cmp ECX,EDX
            ja .L_404738
.L_40474e:

            lea R12,QWORD PTR [RSP+78]
            mov ESI,EAX
.L_404755:

            lea R13,QWORD PTR [RSP+83]
            mov RDI,R12
            call .L_421540

            mov ESI,EBP
            mov RDI,R13
            call .L_421540

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_42d8d0]
            mov R8,R13
            mov RCX,R12
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_404636
          .byte 0x66
          .byte 0x90
.L_404790:

            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
.L_404798:

            mov RDI,RBX
            mov DWORD PTR [RSP+12],ESI
            call .L_402370

            movsxd RAX,DWORD PTR [RSP+12]
            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            mov DWORD PTR [RBX+RAX*4+136],0
            call .L_4216c0

            mov EAX,1
            jmp .L_404648
          .byte 0x66
          .byte 0x90
.L_4047d0:

            mov RDI,QWORD PTR [RBX+8]
            mov ESI,R13D
            call .L_41b3c0

            test RAX,RAX
            je .L_404907

            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDI,QWORD PTR [RSP+16]
            mov RSI,R12
            movsxd RDX,DWORD PTR [RSP+12]
            movaps XMMWORD PTR [RSP+16],XMM0
            lea R15,QWORD PTR [RBX+RDX*8]
            lea RDX,QWORD PTR [RBX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RAX+16]
            mov QWORD PTR [R15+2936],RAX
            mov DWORD PTR [RDX+136],EBP
            movaps XMMWORD PTR [RSP+32],XMM0
            mov DWORD PTR [RDX+936],0
            mov DWORD PTR [RDX+1336],0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            mov EDX,DWORD PTR [R14]
            movaps XMMWORD PTR [RSP+48],XMM0
            mov RAX,QWORD PTR [RAX+48]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP+56],RAX
            mov EAX,DWORD PTR [RBX+72]
            mov DWORD PTR [RSP+64],EAX
            call QWORD PTR [RSP+40]

            mov QWORD PTR [R15+2136],RAX
            movsxd RAX,DWORD PTR [RSP+12]
            cmp QWORD PTR [RBX+RAX*8+2136],0
            je .L_4048ae

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4216c0

            mov EAX,1
            jmp .L_404648
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404890:

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_42d6e0]
            mov ECX,EBP
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_404636
.L_4048ae:

            lea R12,QWORD PTR [RSP+78]
            mov ESI,R13D
            lea R13,QWORD PTR [RSP+83]
            mov RDI,R12
            call .L_421540

            mov ESI,EBP
            mov RDI,R13
            call .L_421540

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_42d8f8]
            mov R8,R13
            mov RCX,R12
            mov ESI,12
            xor EAX,EAX
            call .L_421420

            jmp .L_404636
.L_4048ef:

            mov EAX,DWORD PTR [R14+4]
            mov R13D,DWORD PTR [R14+8]
            test EAX,EAX
            jne .L_4047d0

            mov EAX,R13D
            jmp .L_40474e
.L_404907:

            lea R12,QWORD PTR [RSP+78]
            mov ESI,R13D
            jmp .L_404755
.L_404914:

            call __stack_chk_fail@PLT
.L_404919:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404920:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,ESI
            mov RBP,RDX
            mov R12D,ECX
            sub RSP,72
.L_404939:

            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call .L_421680

            test EAX,EAX
            je .L_4049ae

            mov EDI,DWORD PTR [R13+132]
            mov ECX,EBX
            lea ESI,DWORD PTR [RDI-1]
            add RSI,1
.L_40496d:

            test EDI,EDI
            je .L_40499e

            cmp ECX,DWORD PTR [R13+136]
            mov EAX,1
            jne .L_404999

            jmp .L_4049d8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404988:

            lea RDX,QWORD PTR [RAX+1]
            cmp DWORD PTR [R13+RDX*4+132],ECX
            je .L_4049e0

            mov RAX,RDX
.L_404999:

            cmp RSI,RAX
            jne .L_404988
.L_40499e:

            mov RDI,QWORD PTR [R13+8]
.L_4049a2:

            mov RSI,QWORD PTR [R13+3744]
            call .L_4216c0
.L_4049ae:

            xor EAX,EAX
.L_4049b0:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_404bfe

            add RSP,72
.L_4049c8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4049d8:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4049e0:

            cdqe 
            mov ECX,DWORD PTR [R13+RAX*4+536]
            test ECX,ECX
            jne .L_40496d

            lea R15,QWORD PTR [R13+RAX*8]
            mov RSI,QWORD PTR [R15+2136]
            test RSI,RSI
            je .L_404a51

            lea R14,QWORD PTR [R13+RAX*4]
            mov EAX,DWORD PTR [R14+1736]
            test EAX,EAX
            je .L_404aa9

            test RBP,RBP
            je .L_404b3e

            mov EAX,DWORD PTR [R14+936]
            mov RDI,RBP
            cmp R12D,EAX
            cmova R12D,EAX
            mov EDX,R12D
            call memmove@PLT
.L_404a39:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4216c0

            mov EAX,R12D
            jmp .L_4049b0
.L_404a51:

            lea RBX,QWORD PTR [R13+RAX*4]
            test RBP,RBP
            mov ESI,DWORD PTR [RBX+1336]
            mov EAX,DWORD PTR [RBX+936]
            je .L_404b5a

            cmp R12D,EAX
            cmova R12D,EAX
            mov RAX,QWORD PTR [R13]
            mov RDI,RAX
            call QWORD PTR [RAX+288]

            test EAX,EAX
            je .L_40499e

            mov RAX,QWORD PTR [R13]
            mov ECX,R12D
            mov EDX,1
            mov RSI,RBP
            mov RDI,RAX
            call QWORD PTR [RAX+280]

            test EAX,EAX
            je .L_40499e

            jmp .L_404a39
.L_404aa9:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4216c0

            mov ESI,EBX
            mov RDI,R13
            call .L_404230

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            mov R14,RAX
            call .L_421680

            test EAX,EAX
            je .L_4049ae

            test R14,R14
            mov RDI,QWORD PTR [R13+8]
            je .L_4049a2

            test RBP,RBP
            je .L_404b75

            lea RCX,QWORD PTR [RIP+.L_42d68f]
            mov RSI,RBP
            mov EDX,R12D
            call .L_402850

            mov RBP,RAX
.L_404b09:

            test RBP,RBP
            mov RDI,QWORD PTR [R13+8]
            je .L_4049a2

            mov ESI,EBX
            mov R12,QWORD PTR [R15+2936]
            call .L_41b590

            test RAX,RAX
            mov RBX,RAX
            jne .L_404b7f
.L_404b2c:

            mov RDI,RBP
            call QWORD PTR [RBP+296]

            mov RDI,QWORD PTR [R13+8]
            jmp .L_4049a2
.L_404b3e:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4216c0

            mov EAX,DWORD PTR [R14+936]
            jmp .L_4049b0
.L_404b5a:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4216c0

            mov EAX,DWORD PTR [RBX+936]
            jmp .L_4049b0
.L_404b75:

            call .L_4027a0

            mov RBP,RAX
            jmp .L_404b09
.L_404b7f:

            test R12,R12
            mov RDI,QWORD PTR [R13+8]
            je .L_4049a2

            movdqu XMM0,XMMWORD PTR [R12]
            movaps XMMWORD PTR [RSP],XMM0
            mov ESI,DWORD PTR [R12]
            movdqu XMM0,XMMWORD PTR [R12+16]
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [R12+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov RAX,QWORD PTR [R12+48]
            mov QWORD PTR [RSP+40],RDI
            mov RDI,RBP
            mov QWORD PTR [RSP+48],RAX
            mov EAX,DWORD PTR [R13+72]
            mov DWORD PTR [RSP+48],EAX
            call .L_406180

            test EAX,EAX
            je .L_404b2c

            mov RDI,RSP
            mov ECX,DWORD PTR [RBX]
            mov RDX,R14
            mov RSI,RBP
            call QWORD PTR [RSP+16]

            test EAX,EAX
            mov RDI,RBP
            jne .L_404c03

            call QWORD PTR [RBP+296]

            mov RDI,QWORD PTR [R13+8]
            jmp .L_4049a2
.L_404bfe:

            call __stack_chk_fail@PLT
.L_404c03:

            call QWORD PTR [RBP+304]

            mov RDI,RBP
            mov EBX,EAX
            call QWORD PTR [RBP+296]

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4216c0

            mov EAX,EBX
            jmp .L_4049b0
.L_404c2b:

            nop
            nop
            nop
            nop
            nop
.L_404c30:

            push R14
            push R13
            mov R13,RDX
            push R12
            push RBP
            mov EBP,ESI
            push RBX
            mov RBX,RDI
            mov R12D,ECX
            sub RSP,32
            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_421680

            test EAX,EAX
            jne .L_404c90
.L_404c6b:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404d49

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404c90:

            lea RDX,QWORD PTR [RSP+20]
            mov ESI,EBP
            mov RDI,RBX
            call .L_4026c0

            test EAX,EAX
            mov DWORD PTR [RSP+12],EAX
            je .L_404d30

            movsxd R14,DWORD PTR [RSP+20]
            mov EDX,R12D
            mov RSI,R13
            lea RAX,QWORD PTR [RBX+R14*4]
            mov DWORD PTR [RAX+1736],1
            mov DWORD PTR [RAX+136],EBP
            mov DWORD PTR [RAX+536],0
            mov RDI,QWORD PTR [RBX+8]
            call .L_421190

            mov QWORD PTR [RBX+R14*8+2136],RAX
            movsxd RAX,DWORD PTR [RSP+20]
            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            mov DWORD PTR [RBX+RAX*4+936],R12D
            call .L_4216c0

            movsxd RDX,DWORD PTR [RSP+20]
            mov EAX,1
            cmp QWORD PTR [RBX+RDX*8+2136],0
            jne .L_404c6b

            mov DWORD PTR [RBX+RDX*4+136],0
            xor EAX,EAX
            jmp .L_404c6b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404d30:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4216c0

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_404c6b
.L_404d49:

            call __stack_chk_fail@PLT
.L_404d4e:

            nop
            nop
.L_404d50:

            push R12
            push RBP
            mov EBP,ESI
            push RBX
            mov RBX,RDI
            mov R12D,EDX
            sub RSP,32
            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_421680

            test EAX,EAX
            jne .L_404da8
.L_404d84:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404e39

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404da8:

            lea RDX,QWORD PTR [RSP+20]
            mov ESI,EBP
            mov RDI,RBX
            call .L_4026c0

            test EAX,EAX
            mov DWORD PTR [RSP+12],EAX
            je .L_404e20

            movsxd RDX,DWORD PTR [RSP+20]
            lea RAX,QWORD PTR [RBX+RDX*4]
            mov DWORD PTR [RAX+1736],0
            mov DWORD PTR [RAX+136],EBP
            mov DWORD PTR [RAX+536],R12D
            mov QWORD PTR [RBX+RDX*8+2136],0
            mov DWORD PTR [RAX+936],0
            mov DWORD PTR [RAX+1336],0
            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4216c0

            mov EAX,1
            jmp .L_404d84
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404e20:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4216c0

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_404d84
.L_404e39:

            call __stack_chk_fail@PLT
.L_404e3e:

            nop
            nop
.L_404e40:

            mov EAX,DWORD PTR [RDI+132]
            test EAX,EAX
            je .L_404e75

            cmp ESI,DWORD PTR [RDI+136]
            je .L_404e80

            lea ECX,DWORD PTR [RAX-1]
            mov EAX,1
            add RCX,1
            jmp .L_404e70
.L_404e60:

            lea RDX,QWORD PTR [RAX+1]
            cmp ESI,DWORD PTR [RDI+RDX*4+132]
            je .L_404e82

            mov RAX,RDX
.L_404e70:

            cmp RAX,RCX
            jne .L_404e60
.L_404e75:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404e80:

            xor EAX,EAX
.L_404e82:

            cdqe 
            mov EAX,DWORD PTR [RDI+RAX*4+536]
            ret 
.L_404e8c:

            nop
            nop
            nop
            nop
.L_404e90:

            mov EAX,EDI
            mov BYTE PTR [RSP-3],DIL
            mov BYTE PTR [RSP-4],AH
            movzx EAX,WORD PTR [RSP-4]
            ret 
.L_404ea1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404eb0:

            mov EAX,EDI
            mov EDX,EDI
            mov ECX,EDI
            shr EDX,16
            movzx EAX,AH
            shr EDI,24
            mov BYTE PTR [RSP-3],DL
            mov BYTE PTR [RSP-2],AL
            mov BYTE PTR [RSP-4],DIL
            mov BYTE PTR [RSP-1],CL
            mov EAX,DWORD PTR [RSP-4]
            ret 
.L_404ed5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404ee0:

            test RDI,RDI
            je .L_404f1c

            movzx EAX,BYTE PTR [RSI]
            mov BYTE PTR [RDI+7],AL
            movzx EAX,BYTE PTR [RSI+1]
            mov BYTE PTR [RDI+6],AL
            movzx EAX,BYTE PTR [RSI+2]
            mov BYTE PTR [RDI+5],AL
            movzx EAX,BYTE PTR [RSI+3]
            mov BYTE PTR [RDI+4],AL
            movzx EAX,BYTE PTR [RSI+4]
            mov BYTE PTR [RDI+3],AL
            movzx EAX,BYTE PTR [RSI+5]
            mov BYTE PTR [RDI+2],AL
            movzx EAX,BYTE PTR [RSI+6]
            mov BYTE PTR [RDI+1],AL
            movzx EAX,BYTE PTR [RSI+7]
            mov BYTE PTR [RDI],AL
            ret 
.L_404f1c:

            lea RCX,QWORD PTR [RIP+.L_42de50]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42d9fc]
            sub RSP,8

            mov EDX,87
            call __assert_fail@PLT
.L_404f3f:

            nop
.L_404f40:

            push RBX
            sub RSP,16
.L_404f45:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_404fab

            mov EDX,1
            mov RBX,RSI
            mov ECX,1
            lea RSI,QWORD PTR [RSP+7]
            call QWORD PTR [RDI+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_404f98
.L_404f79:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_404fca

            add RSP,16
.L_404f8f:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404f98:

            test RBX,RBX
            mov EDX,1
            je .L_404f79

            movzx EAX,BYTE PTR [RSP+7]
            mov BYTE PTR [RBX],AL
            jmp .L_404f79
.L_404fab:

            lea RCX,QWORD PTR [RIP+.L_42de30]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,115
            call __assert_fail@PLT
.L_404fca:

            call __stack_chk_fail@PLT
.L_404fcf:

            nop
.L_404fd0:

            push RBX
            sub RSP,16
.L_404fd5:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_40504c

            mov EDX,2
            mov RBX,RSI
            mov ECX,1
            lea RSI,QWORD PTR [RSP+4]
            call QWORD PTR [RDI+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_405028
.L_405009:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40506b

            add RSP,16
.L_40501f:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405028:

            test RBX,RBX
            mov EDX,1
            je .L_405009

            movzx EAX,WORD PTR [RSP+4]
            movzx ECX,AH
            mov BYTE PTR [RSP+7],AL
            mov BYTE PTR [RSP+6],CL
            movzx EAX,WORD PTR [RSP+6]
            mov WORD PTR [RBX],AX
            jmp .L_405009
.L_40504c:

            lea RCX,QWORD PTR [RIP+.L_42de10]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,128
            call __assert_fail@PLT
.L_40506b:

            call __stack_chk_fail@PLT
.L_405070:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40507a:

            test RDI,RDI
            je .L_4050f0

            test ESI,ESI
            je .L_4050e0

            lea EAX,DWORD PTR [RSI-1]
            mov R12,RDI
            mov RBP,RDX
            mov RBX,RDX
            lea R13,QWORD PTR [RDX+RAX*2+2]
            jmp .L_4050b8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4050a0:

            mov RSI,RBX
            mov RDI,R12
            call .L_404fd0

            test EAX,EAX
            je .L_4050cb
.L_4050af:

            add RBX,2
            cmp RBX,R13
            je .L_4050e0
.L_4050b8:

            test RBP,RBP
            jne .L_4050a0

            xor ESI,ESI
            mov RDI,R12
            call .L_404fd0

            test EAX,EAX
            jne .L_4050af
.L_4050cb:

            add RSP,8
.L_4050cf:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4050e0:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4050f0:

            lea RCX,QWORD PTR [RIP+.L_42ddf0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,141
            call __assert_fail@PLT
.L_40510f:

            nop
.L_405110:

            push RBX
            mov RAX,RDI
            sub RSP,16
.L_405118:

            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_405197

            mov EDX,4
            mov RBX,RSI
            mov ECX,1
            mov RSI,RSP
            mov RDI,RAX
            call QWORD PTR [RAX+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_405168
.L_40514d:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_4051b6

            add RSP,16
.L_405163:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405168:

            test RBX,RBX
            mov EDX,1
            je .L_40514d

            mov EAX,DWORD PTR [RSP]
            mov ECX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr ECX,16
            mov BYTE PTR [RSP+5],CL
            mov ECX,EAX
            shr ECX,24
            mov BYTE PTR [RSP+4],CL
            mov EAX,DWORD PTR [RSP+4]
            mov DWORD PTR [RBX],EAX
            jmp .L_40514d
.L_405197:

            lea RCX,QWORD PTR [RIP+.L_42ddd0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,160
            call __assert_fail@PLT
.L_4051b6:

            call __stack_chk_fail@PLT
.L_4051bb:

            nop
            nop
            nop
            nop
            nop
.L_4051c0:

            push RBX
            sub RSP,16
.L_4051c5:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_40528a

            mov RBX,RSI
            mov ECX,1
            mov RSI,RSP
            mov EDX,4
            call QWORD PTR [RDI+280]

            cmp EAX,1
            je .L_405218
.L_4051f9:

            xor EAX,EAX
.L_4051fb:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4052a9

            add RSP,16
.L_405213:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405218:

            test RBX,RBX
            je .L_405280

            mov EAX,DWORD PTR [RSP]
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            movss XMM1,DWORD PTR [RSP+4]
            movaps XMM0,XMM1
            movss DWORD PTR [RBX],XMM1
            andps XMM0,XMMWORD PTR [RIP+.L_42de70]
            ucomiss XMM0,XMM0
            jp .L_4051f9

            ucomiss XMM0,DWORD PTR [RIP+.L_42de80]
            ja .L_4051f9

            ucomiss XMM0,DWORD PTR [RIP+.L_42de84]
            jae .L_405280

            ucomiss XMM1,DWORD PTR [RIP+.L_42de88]
            jp .L_405270

            je .L_405280
.L_405270:

            ucomiss XMM0,DWORD PTR [RIP+.L_42de84]
            jb .L_4051f9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405280:

            mov EAX,1
            jmp .L_4051fb
.L_40528a:

            lea RCX,QWORD PTR [RIP+.L_42ddb0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,173
            call __assert_fail@PLT
.L_4052a9:

            call __stack_chk_fail@PLT
.L_4052ae:

            nop
            nop
.L_4052b0:

            push R12
            push RBP
            push RBX
            sub RSP,16
.L_4052b8:

            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDX
            xor EDX,EDX
            test RDI,RDI
            je .L_405327

            mov RBP,RSP
            mov R12,RSI
            mov ECX,1
            mov EDX,8
            mov RSI,RBP
            xor EBX,EBX
            call QWORD PTR [RDI+280]

            cmp EAX,1
            je .L_405310
.L_4052ed:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_405346

            add RSP,16
.L_405303:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405310:

            test R12,R12
            mov EBX,1
            je .L_4052ed

            mov RSI,RBP
            mov RDI,R12
            call .L_404ee0

            jmp .L_4052ed
.L_405327:

            lea RCX,QWORD PTR [RIP+.L_42dd90]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,199
            call __assert_fail@PLT
.L_405346:

            call __stack_chk_fail@PLT
.L_40534b:

            nop
            nop
            nop
            nop
            nop
.L_405350:

            push RBX
            sub RSP,16
.L_405355:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_405437

            mov EDX,4
            mov RBX,RSI
            mov ECX,1
            mov RSI,RSP
            call QWORD PTR [RDI+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_4053b0
.L_40538b:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_405432

            add RSP,16
.L_4053a5:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4053b0:

            test RBX,RBX
            mov EDX,1
            je .L_40538b

            mov EAX,DWORD PTR [RSP]
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            js .L_405428

            movsd XMM2,QWORD PTR [RIP+.L_42d9d8]
.L_4053e7:

            cdq 
            pxor XMM0,XMM0
            xor EAX,EDX
            movsd XMM1,QWORD PTR [RIP+.L_42de98]
            sub EAX,EDX
            movzx EDX,AX
            shr EAX,16
            cvtsi2sd XMM0,EDX
            mov EDX,1
            mulsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            addsd XMM0,XMM1
            mulsd XMM0,XMM2
            movsd QWORD PTR [RBX],XMM0
            jmp .L_40538b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405428:

            movsd XMM2,QWORD PTR [RIP+.L_42de90]
            jmp .L_4053e7
.L_405432:

            call __stack_chk_fail@PLT
.L_405437:

            lea RCX,QWORD PTR [RIP+.L_42dd70]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,217
            call __assert_fail@PLT
.L_405456:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405460:

            push RBX
            mov RAX,RDI
            sub RSP,32
.L_405468:

            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_405632

            mov EDX,12
            mov RBX,RSI
            mov ECX,1
            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RAX
            call QWORD PTR [RAX+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_4054c0
.L_4054a3:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40562d

            add RSP,32
.L_4054bd:

            pop RBX
            ret 
          .byte 0x90
.L_4054c0:

            test RBX,RBX
            mov EDX,1
            je .L_4054a3

            mov EAX,DWORD PTR [RSP+12]
            mov EDX,EAX
            mov BYTE PTR [RSP+10],AH
            mov BYTE PTR [RSP+11],AL
            shr EDX,16
            mov BYTE PTR [RSP+9],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+8],DL
            mov EAX,DWORD PTR [RSP+8]
            test EAX,EAX
            js .L_405600

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
.L_4054fc:

            cdq 
            pxor XMM1,XMM1
            xor EAX,EDX
            movsd XMM3,QWORD PTR [RIP+.L_42de98]
            sub EAX,EDX
            movzx EDX,AX
            shr EAX,16
            cvtsi2sd XMM1,EDX
            movapd XMM2,XMM1
            pxor XMM1,XMM1
            mulsd XMM2,XMM3
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [RSP+16]
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            addsd XMM1,XMM2
            mulsd XMM1,XMM0
            movsd QWORD PTR [RBX],XMM1
            js .L_405620

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
.L_405565:

            cdq 
            pxor XMM1,XMM1
            xor EAX,EDX
            sub EAX,EDX
            movzx EDX,AX
            shr EAX,16
            cvtsi2sd XMM1,EDX
            movapd XMM2,XMM1
            pxor XMM1,XMM1
            mulsd XMM2,XMM3
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [RSP+20]
            mov EDX,EAX
            mov BYTE PTR [RSP+2],AH
            mov BYTE PTR [RSP+3],AL
            shr EDX,16
            mov BYTE PTR [RSP+1],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP],DL
            mov EAX,DWORD PTR [RSP]
            test EAX,EAX
            addsd XMM1,XMM2
            mulsd XMM1,XMM0
            movsd QWORD PTR [RBX+8],XMM1
            js .L_405610

            movsd XMM2,QWORD PTR [RIP+.L_42d9d8]
.L_4055c1:

            cdq 
            pxor XMM0,XMM0
            xor EAX,EDX
            sub EAX,EDX
            movzx EDX,AX
            shr EAX,16
            cvtsi2sd XMM0,EDX
            mov EDX,1
            mulsd XMM0,XMM3
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            addsd XMM0,XMM1
            mulsd XMM0,XMM2
            movsd QWORD PTR [RBX+16],XMM0
            jmp .L_4054a3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405600:

            movsd XMM0,QWORD PTR [RIP+.L_42de90]
            jmp .L_4054fc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405610:

            movsd XMM2,QWORD PTR [RIP+.L_42de90]
            jmp .L_4055c1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405620:

            movsd XMM0,QWORD PTR [RIP+.L_42de90]
            jmp .L_405565
.L_40562d:

            call __stack_chk_fail@PLT
.L_405632:

            lea RCX,QWORD PTR [RIP+.L_42dd50]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,234
            call __assert_fail@PLT
.L_405651:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405660:

            sub RSP,24
            test RDI,RDI
            mov BYTE PTR [RSP+12],SIL
            je .L_40568c

            lea RDX,QWORD PTR [RSP+12]
            mov ESI,1
            call QWORD PTR [RDI+312]

            cmp EAX,1
            sete AL
            add RSP,24
            movzx EAX,AL
            ret 
.L_40568c:

            lea RCX,QWORD PTR [RIP+.L_42dd30]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,249
            call __assert_fail@PLT
.L_4056ab:

            nop
            nop
            nop
            nop
            nop
.L_4056b0:

            sub RSP,24
.L_4056b4:

            mov RAX,RDI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_405712

            mov ECX,ESI
            mov BYTE PTR [RSP+7],SIL
            mov RDI,RAX
            mov BYTE PTR [RSP+6],CH
            movzx EDX,WORD PTR [RSP+6]
            mov ESI,2
            mov WORD PTR [RSP+4],DX
            lea RDX,QWORD PTR [RSP+4]
            call QWORD PTR [RAX+312]

            cmp EAX,1
            sete AL
            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_405731

            add RSP,24
.L_405711:

            ret 
.L_405712:

            lea RCX,QWORD PTR [RIP+.L_42dd10]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,261
            call __assert_fail@PLT
.L_405731:

            call __stack_chk_fail@PLT
.L_405736:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405740:

            test RDI,RDI
            push R12
            push RBP
            push RBX
            je .L_405792

            test RDX,RDX
            je .L_4057b1

            test ESI,ESI
            je .L_405788

            lea EAX,DWORD PTR [RSI-1]
            mov RBP,RDI
            mov RBX,RDX
            lea R12,QWORD PTR [RDX+RAX*2+2]
            jmp .L_405771
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405768:

            add RBX,2
            cmp RBX,R12
            je .L_405788
.L_405771:

            movzx ESI,WORD PTR [RBX]
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            jne .L_405768

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405788:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
.L_405792:

            lea RCX,QWORD PTR [RIP+.L_42dcf0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,274
            call __assert_fail@PLT
.L_4057b1:

            lea RCX,QWORD PTR [RIP+.L_42dcf0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da28]
            mov EDX,275
            call __assert_fail@PLT
.L_4057d0:

            sub RSP,24
.L_4057d4:

            mov RAX,RDI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_40583f

            mov EDX,ESI
            mov ECX,ESI
            mov BYTE PTR [RSP+7],SIL
            shr EDX,16
            mov BYTE PTR [RSP+6],CH
            mov RDI,RAX
            mov BYTE PTR [RSP+5],DL
            mov EDX,ESI
            mov ESI,4
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EDX,DWORD PTR [RSP+4]
            mov DWORD PTR [RSP],EDX
            mov RDX,RSP
            call QWORD PTR [RAX+312]

            cmp EAX,1
            sete AL
            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_40585e

            add RSP,24
.L_40583e:

            ret 
.L_40583f:

            lea RCX,QWORD PTR [RIP+.L_42dcd0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,288
            call __assert_fail@PLT
.L_40585e:

            call __stack_chk_fail@PLT
.L_405863:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405870:

            sub RSP,24
.L_405874:

            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RSI
            xor ESI,ESI
            test RDI,RDI
            je .L_4058de

            movd EDX,XMM0
            movd EAX,XMM0
            mov ESI,4
            shr EDX,16
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            mov BYTE PTR [RSP+5],DL
            movd EDX,XMM0
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            mov RDX,RSP
            mov DWORD PTR [RSP],EAX
            call QWORD PTR [RDI+312]

            cmp EAX,1
            sete AL
            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_4058fd

            add RSP,24
.L_4058dd:

            ret 
.L_4058de:

            lea RCX,QWORD PTR [RIP+.L_42dcb0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,302
            call __assert_fail@PLT
.L_4058fd:

            call __stack_chk_fail@PLT
.L_405902:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405910:

            sub RSP,24
.L_405914:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_405993

            movzx EDX,BYTE PTR [RSI]
            mov BYTE PTR [RSP+7],DL
            movzx EDX,BYTE PTR [RSI+1]
            mov BYTE PTR [RSP+6],DL
            movzx EDX,BYTE PTR [RSI+2]
            mov BYTE PTR [RSP+5],DL
            movzx EDX,BYTE PTR [RSI+3]
            mov BYTE PTR [RSP+4],DL
            movzx EDX,BYTE PTR [RSI+4]
            mov BYTE PTR [RSP+3],DL
            movzx EDX,BYTE PTR [RSI+5]
            mov BYTE PTR [RSP+2],DL
            movzx EDX,BYTE PTR [RSI+6]
            mov BYTE PTR [RSP+1],DL
            movzx EDX,BYTE PTR [RSI+7]
            mov ESI,8
            mov BYTE PTR [RSP],DL
            mov RDX,RSP
            call QWORD PTR [RDI+312]

            cmp EAX,1
            sete AL
            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_4059b2

            add RSP,24
.L_405992:

            ret 
.L_405993:

            lea RCX,QWORD PTR [RIP+.L_42dc90]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,316
            call __assert_fail@PLT
.L_4059b2:

            call __stack_chk_fail@PLT
.L_4059b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4059c0:

            sub RSP,24
.L_4059c4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_405aac

            mulsd XMM0,QWORD PTR [RIP+.L_42dea0]
            mov RCX,RDI
            movsd XMM3,QWORD PTR [RIP+.L_42d9e0]
            movsd XMM4,QWORD PTR [RIP+.L_42d9d0]
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            movapd XMM2,XMM0
            movapd XMM1,XMM0
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            ja .L_405a70
.L_405a12:

            cvttsd2si EAX,XMM1
            mov ESI,4
            mov RDI,RCX
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            mov RDX,RSP
            mov DWORD PTR [RSP],EAX
            call QWORD PTR [RCX+312]

            cmp EAX,1
            sete AL
            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_405acb

            add RSP,24
.L_405a65:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405a70:

            cvttsd2si RAX,XMM0
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_42d9d8]
            andnpd XMM3,XMM0
            cvtsi2sd XMM2,RAX
            movapd XMM5,XMM2
            cmpnlesd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMM4
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            orpd XMM1,XMM3
            jmp .L_405a12
.L_405aac:

            lea RCX,QWORD PTR [RIP+.L_42dc70]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,329
            call __assert_fail@PLT
.L_405acb:

            call __stack_chk_fail@PLT
.L_405ad0:

            sub RSP,40
.L_405ad4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_405d08

            test RSI,RSI
            je .L_405ce9

            movsd XMM0,QWORD PTR [RIP+.L_42dea0]
            mov RCX,RDI
            movsd XMM3,QWORD PTR [RSI]
            movsd XMM6,QWORD PTR [RIP+.L_42d568]
            mulsd XMM3,XMM0
            movq XMM2,QWORD PTR [RIP+.L_42d9e0]
            movsd XMM5,QWORD PTR [RIP+.L_42d9d0]
            movapd XMM7,XMM2
            addsd XMM3,XMM6
            movapd XMM4,XMM3
            movapd XMM1,XMM3
            andpd XMM4,XMM2
            ucomisd XMM5,XMM4
            ja .L_405ca8
.L_405b3f:

            cvttsd2si EAX,XMM1
            movapd XMM4,XMM2
            movsd XMM1,QWORD PTR [RSI+8]
            mulsd XMM1,XMM0
            addsd XMM1,XMM6
            movapd XMM3,XMM1
            mov EDX,EAX
            shr EDX,16
            mov BYTE PTR [RSP+10],AH
            mov BYTE PTR [RSP+11],AL
            andpd XMM3,XMM2
            mov BYTE PTR [RSP+9],DL
            mov EDX,EAX
            movapd XMM7,XMM1
            shr EDX,24
            ucomisd XMM5,XMM3
            mov BYTE PTR [RSP+8],DL
            mov EAX,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+12],EAX
            ja .L_405c60
.L_405b8c:

            mulsd XMM0,QWORD PTR [RSI+16]
            cvttsd2si EAX,XMM1
            addsd XMM0,XMM6
            movapd XMM1,XMM0
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            andpd XMM1,XMM2
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            movapd XMM3,XMM0
            ucomisd XMM5,XMM1
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            mov DWORD PTR [RSP+16],EAX
            ja .L_405c20
.L_405bcd:

            cvttsd2si EAX,XMM0
            mov RDI,RCX
            mov ESI,12
            mov EDX,EAX
            mov BYTE PTR [RSP+2],AH
            mov BYTE PTR [RSP+3],AL
            shr EDX,16
            mov BYTE PTR [RSP+1],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP],DL
            mov EAX,DWORD PTR [RSP]
            lea RDX,QWORD PTR [RSP+12]
            mov DWORD PTR [RSP+20],EAX
            call QWORD PTR [RCX+312]

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            jne .L_405d27

            add RSP,40
.L_405c1c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405c20:

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_42d9d8]
            andnpd XMM2,XMM3
            cvtsi2sd XMM1,RAX
            movapd XMM5,XMM1
            cmpnlesd XMM5,XMM0
            movapd XMM0,XMM5
            andpd XMM0,XMM4
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            orpd XMM0,XMM2
            jmp .L_405bcd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405c60:

            cvttsd2si RAX,XMM1
            pxor XMM3,XMM3
            movsd XMM8,QWORD PTR [RIP+.L_42d9d8]
            andnpd XMM4,XMM7
            cvtsi2sd XMM3,RAX
            movapd XMM10,XMM3
            cmpnlesd XMM10,XMM1
            movapd XMM1,XMM10
            andpd XMM1,XMM8
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            orpd XMM1,XMM4
            jmp .L_405b8c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405ca8:

            cvttsd2si RAX,XMM3
            pxor XMM4,XMM4
            movsd XMM8,QWORD PTR [RIP+.L_42d9d8]
            andnpd XMM7,XMM3
            cvtsi2sd XMM4,RAX
            movapd XMM9,XMM4
            cmpnlesd XMM9,XMM3
            movapd XMM1,XMM9
            andpd XMM1,XMM8
            subsd XMM4,XMM1
            movapd XMM1,XMM4
            orpd XMM1,XMM7
            jmp .L_405b3f
.L_405ce9:

            lea RCX,QWORD PTR [RIP+.L_42dc50]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da3f]
            mov EDX,343
            call __assert_fail@PLT
.L_405d08:

            lea RCX,QWORD PTR [RIP+.L_42dc50]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,342
            call __assert_fail@PLT
.L_405d27:

            call __stack_chk_fail@PLT
.L_405d2c:

            nop
            nop
            nop
            nop
.L_405d30:

            pxor XMM0,XMM0
            mov EAX,EDI
            movzx EDI,DIL
            pxor XMM1,XMM1
            movzx EAX,AH
            cvtsi2sd XMM0,EDI
            cvtsi2sd XMM1,EAX
            mulsd XMM0,QWORD PTR [RIP+.L_42dea8]
            addsd XMM0,XMM1
            ret 
.L_405d56:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405d60:

            mulsd XMM0,QWORD PTR [RIP+.L_42dea0]
            movsd XMM3,QWORD PTR [RIP+.L_42d9e0]
            movsd XMM4,QWORD PTR [RIP+.L_42d9d0]
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            movapd XMM2,XMM0
            movapd XMM1,XMM0
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            jbe .L_405dc9

            cvttsd2si RAX,XMM0
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_42d9d8]
            andnpd XMM3,XMM0
            cvtsi2sd XMM2,RAX
            movapd XMM5,XMM2
            cmpnlesd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMM4
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            orpd XMM1,XMM3
.L_405dc9:

            cvttsd2si EAX,XMM1
            sar EAX,8
            ret 
.L_405dd1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405de0:

            test EDI,EDI
            js .L_405e28

            movsd XMM2,QWORD PTR [RIP+.L_42d9d8]
.L_405dec:

            mov EAX,EDI
            pxor XMM1,XMM1
            sar EAX,31
            movsd XMM0,QWORD PTR [RIP+.L_42de98]
            xor EDI,EAX
            sub EDI,EAX
            movzx EAX,DI
            shr EDI,16
            cvtsi2sd XMM1,EAX
            mulsd XMM0,XMM1
            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDI
            addsd XMM1,XMM0
            mulsd XMM1,XMM2
            movapd XMM0,XMM1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405e28:

            movsd XMM2,QWORD PTR [RIP+.L_42de90]
            jmp .L_405dec
.L_405e32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405e40:

            mulsd XMM0,QWORD PTR [RIP+.L_42dea0]
            movsd XMM3,QWORD PTR [RIP+.L_42d9e0]
            movsd XMM4,QWORD PTR [RIP+.L_42d9d0]
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            movapd XMM2,XMM0
            movapd XMM1,XMM0
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            jbe .L_405ea9

            cvttsd2si RAX,XMM0
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_42d9d8]
            andnpd XMM3,XMM0
            cvtsi2sd XMM2,RAX
            movapd XMM5,XMM2
            cmpnlesd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMM4
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            orpd XMM1,XMM3
.L_405ea9:

            cvttsd2si EAX,XMM1
            ret 
.L_405eae:

            nop
            nop
.L_405eb0:

            sub RSP,40
.L_405eb4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_405f8a

            test RDI,RDI
            je .L_405fae

            movzx EAX,WORD PTR [RDI+10]
            movzx EDX,AH
            mov BYTE PTR [RSP+23],AL
            mov BYTE PTR [RSP+22],DL
            movzx EAX,WORD PTR [RSP+22]
            mov DWORD PTR [RSI],EAX
            movzx EAX,WORD PTR [RDI+8]
            movzx EDX,AH
            mov BYTE PTR [RSP+21],AL
            mov BYTE PTR [RSP+20],DL
            movzx EAX,WORD PTR [RSP+20]
            mov DWORD PTR [RSI+4],EAX
            movzx EAX,WORD PTR [RDI+6]
            movzx EDX,AH
            mov BYTE PTR [RSP+19],AL
            mov BYTE PTR [RSP+18],DL
            movzx EAX,WORD PTR [RSP+18]
            mov DWORD PTR [RSI+8],EAX
            movzx EAX,WORD PTR [RDI+4]
            movzx EDX,AH
            mov BYTE PTR [RSP+17],AL
            mov BYTE PTR [RSP+16],DL
            movzx EAX,WORD PTR [RSP+16]
            mov DWORD PTR [RSI+12],EAX
            movzx EAX,WORD PTR [RDI+2]
            movzx EDX,AH
            mov BYTE PTR [RSP+15],AL
            mov BYTE PTR [RSP+14],DL
            movzx EAX,WORD PTR [RSP+14]
            sub EAX,1
            mov DWORD PTR [RSI+16],EAX
            movzx EAX,WORD PTR [RDI]
            mov QWORD PTR [RSI+24],-1
            mov DWORD PTR [RSI+32],0
            movzx EDX,AH
            mov BYTE PTR [RSP+13],AL
            mov BYTE PTR [RSP+12],DL
            movzx EAX,WORD PTR [RSP+12]
            sub EAX,1900
            mov DWORD PTR [RSI+20],EAX
            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_405fa9

            add RSP,40
.L_405f89:

            ret 
.L_405f8a:

            lea RCX,QWORD PTR [RIP+.L_42dc30]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da54]
            mov EDX,398
            call __assert_fail@PLT
.L_405fa9:

            call __stack_chk_fail@PLT
.L_405fae:

            lea RCX,QWORD PTR [RIP+.L_42dc30]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da6a]
            mov EDX,399
            call __assert_fail@PLT
.L_405fcd:

            nop
            nop
            nop
.L_405fd0:

            sub RSP,40
.L_405fd4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_40608f

            test RSI,RSI
            je .L_4060b3

            mov EAX,DWORD PTR [RSI]
            mov BYTE PTR [RSP+22],AH
            mov BYTE PTR [RSP+23],AL
            movzx EAX,WORD PTR [RSP+22]
            mov WORD PTR [RDI+10],AX
            mov EAX,DWORD PTR [RSI+4]
            mov BYTE PTR [RSP+20],AH
            mov BYTE PTR [RSP+21],AL
            movzx EAX,WORD PTR [RSP+20]
            mov WORD PTR [RDI+8],AX
            mov EAX,DWORD PTR [RSI+8]
            mov BYTE PTR [RSP+18],AH
            mov BYTE PTR [RSP+19],AL
            movzx EAX,WORD PTR [RSP+18]
            mov WORD PTR [RDI+6],AX
            mov EAX,DWORD PTR [RSI+12]
            mov BYTE PTR [RSP+16],AH
            mov BYTE PTR [RSP+17],AL
            movzx EAX,WORD PTR [RSP+16]
            mov WORD PTR [RDI+4],AX
            movzx EAX,WORD PTR [RSI+16]
            add EAX,1
            movzx EDX,AH
            mov BYTE PTR [RSP+15],AL
            mov BYTE PTR [RSP+14],DL
            movzx EAX,WORD PTR [RSP+14]
            mov WORD PTR [RDI+2],AX
            mov EAX,DWORD PTR [RSI+20]
            add AX,1900
            movzx EDX,AH
            mov BYTE PTR [RSP+13],AL
            mov BYTE PTR [RSP+12],DL
            movzx EAX,WORD PTR [RSP+12]
            mov WORD PTR [RDI],AX
            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4060ae

            add RSP,40
.L_40608e:

            ret 
.L_40608f:

            lea RCX,QWORD PTR [RIP+.L_42dc10]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da54]
            mov EDX,414
            call __assert_fail@PLT
.L_4060ae:

            call __stack_chk_fail@PLT
.L_4060b3:

            lea RCX,QWORD PTR [RIP+.L_42dc10]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da6a]
            mov EDX,415
            call __assert_fail@PLT
.L_4060d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4060e0:

            sub RSP,40
.L_4060e4:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_40614e

            mov EDX,8
            lea RSI,QWORD PTR [RSP+16]
            mov ECX,1
            call QWORD PTR [RDI+280]

            xor EDX,EDX
            cmp EAX,1
            jne .L_406137

            mov EAX,DWORD PTR [RSP+16]
            mov EDX,EAX
            mov BYTE PTR [RSP+14],AH
            mov BYTE PTR [RSP+15],AL
            shr EDX,16
            mov BYTE PTR [RSP+13],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+12],DL
            mov EDX,DWORD PTR [RSP+12]
.L_406137:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40616d

            add RSP,40
.L_40614d:

            ret 
.L_40614e:

            lea RCX,QWORD PTR [RIP+.L_42dbf0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,430
            call __assert_fail@PLT
.L_40616d:

            call __stack_chk_fail@PLT
.L_406172:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406180:

            sub RSP,40
.L_406184:

            mov RAX,RDI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_4061f1

            mov EDX,ESI
            mov ECX,ESI
            mov BYTE PTR [RSP+15],SIL
            shr EDX,16
            mov BYTE PTR [RSP+14],CH
            mov RDI,RAX
            mov BYTE PTR [RSP+13],DL
            mov EDX,ESI
            mov DWORD PTR [RSP+20],0
            shr EDX,24
            mov ESI,8
            mov BYTE PTR [RSP+12],DL
            mov EDX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+16],EDX
            lea RDX,QWORD PTR [RSP+16]
            call QWORD PTR [RAX+312]

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            jne .L_406210

            add RSP,40
.L_4061f0:

            ret 
.L_4061f1:

            lea RCX,QWORD PTR [RIP+.L_42dbd0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,443
            call __assert_fail@PLT
.L_406210:

            call __stack_chk_fail@PLT
.L_406215:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406220:

            push RBX
            sub RSP,16
.L_406225:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_406299

            mov RBX,RDI
            call QWORD PTR [RDI+304]

            lea EDX,DWORD PTR [RAX+3]
            mov ECX,EAX
            mov EAX,1
            and EDX,4294967292
            sub EDX,ECX
            je .L_406275

            cmp EDX,4
            ja .L_406290

            lea RSI,QWORD PTR [RSP+4]
            mov ECX,1
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,1
            sete AL
            movzx EAX,AL
.L_406275:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_406294

            add RSP,16
.L_406289:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406290:

            xor EAX,EAX
            jmp .L_406275
.L_406294:

            call __stack_chk_fail@PLT
.L_406299:

            lea RCX,QWORD PTR [RIP+.L_42dbb0]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,456
            call __assert_fail@PLT
.L_4062b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4062c0:

            push RBP
            push RBX
            sub RSP,24
.L_4062c6:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_406343

            mov RBP,RDI
            call QWORD PTR [RDI+304]

            lea ESI,DWORD PTR [RAX+3]
            mov EDX,EAX
            mov EAX,1
            and ESI,4294967292
            mov EBX,ESI
            sub EBX,EDX
            je .L_4062fe

            xor EAX,EAX
            cmp EBX,4
            jbe .L_406318
.L_4062fe:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40633e

            add RSP,24
.L_406312:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406318:

            lea R8,QWORD PTR [RSP+4]
            mov EDX,EBX
            xor ESI,ESI
            mov ECX,4
            mov RDI,R8
            call __memset_chk@PLT

            mov ESI,EBX
            mov RDX,RAX
            mov RDI,RBP
            call QWORD PTR [RBP+312]

            jmp .L_4062fe
.L_40633e:

            call __stack_chk_fail@PLT
.L_406343:

            lea RCX,QWORD PTR [RIP+.L_42db90]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,473
            call __assert_fail@PLT
.L_406362:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406370:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,2280
.L_40637c:

            test AL,AL
            mov QWORD PTR [RSP+2112],RDX
            mov QWORD PTR [RSP+2120],RCX
            mov QWORD PTR [RSP+2128],R8
            mov QWORD PTR [RSP+2136],R9
            je .L_4063e0

            movaps XMMWORD PTR [RSP+2144],XMM0
            movaps XMMWORD PTR [RSP+2160],XMM1
            movaps XMMWORD PTR [RSP+2176],XMM2
            movaps XMMWORD PTR [RSP+2192],XMM3
            movaps XMMWORD PTR [RSP+2208],XMM4
            movaps XMMWORD PTR [RSP+2224],XMM5
            movaps XMMWORD PTR [RSP+2240],XMM6
            movaps XMMWORD PTR [RSP+2256],XMM7
.L_4063e0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+2088],RAX
            xor EAX,EAX
            test RBX,RBX
            je .L_4064b0

            test RSI,RSI
            je .L_406491

            lea RAX,QWORD PTR [RSP+2304]
            lea RBP,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+8]
            mov R8,RSI
            mov ECX,2048
            mov EDX,1
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+2096]
            mov ESI,2047
            mov RDI,RBP
            mov DWORD PTR [RSP+8],16
            mov DWORD PTR [RSP+12],48
            mov QWORD PTR [RSP+24],RAX
            call __vsnprintf_chk@PLT

            test EAX,EAX
            js .L_406488

            mov RDX,RBP
            mov ESI,EAX
            mov RDI,RBX
            call QWORD PTR [RBX+312]
.L_406465:

            mov RCX,QWORD PTR [RSP+2088]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40648c

            add RSP,2280
.L_40647f:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406488:

            xor EAX,EAX
            jmp .L_406465
.L_40648c:

            call __stack_chk_fail@PLT
.L_406491:

            lea RCX,QWORD PTR [RIP+.L_42db80]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da82]
            mov EDX,495
            call __assert_fail@PLT
.L_4064b0:

            lea RCX,QWORD PTR [RIP+.L_42db80]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,494
            call __assert_fail@PLT
.L_4064cf:

            nop
.L_4064d0:

            test RDI,RDI
            push RBX
.L_4064d4:

            mov EBX,ESI
            je .L_406520

            mov RAX,QWORD PTR [RIP+.L_641c40]
            mov RCX,RDI
            test RAX,RAX
            jne .L_4064f8

            jmp .L_406550
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4064f0:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_406550
.L_4064f8:

            cmp RCX,RAX
            jne .L_4064f0

            mov RDI,QWORD PTR [RAX+8]
            test RDI,RDI
            jne .L_406547
.L_406506:

            lea RDX,QWORD PTR [RIP+.L_42da97]
            mov ESI,12
            mov RDI,RCX
            xor EAX,EAX
            call .L_421420
.L_40651c:

            xor EAX,EAX
            pop RBX
.L_40651f:

            ret 
.L_406520:

            mov RDI,QWORD PTR [RIP+.L_63e1a8]
            test RDI,RDI
            jne .L_406547

            xor EDI,EDI
            mov ESI,2048
            call .L_4211c0

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RIP+.L_63e1a8],RAX
            je .L_40651c
.L_406547:

            mov ESI,EBX
            pop RBX
            jmp .L_421270
          .byte 0x90
.L_406550:

            mov RDI,QWORD PTR [RIP+.L_63e1a8]
            test RDI,RDI
            je .L_406506

            mov ESI,EBX
            pop RBX
            jmp .L_421270
.L_406564:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406570:

            test RSI,RSI
            je .L_406835

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
.L_406585:

            nop
            nop
            nop
.L_406588:

            cmp DWORD PTR [RBX],1633906800
            jne .L_4067f0

            mov ECX,DWORD PTR [RBX+4]
            cmp ECX,2080
            ja .L_406810

            mov ECX,DWORD PTR [RBX+8]
            cmp ECX,1836350024
            je .L_4066d8

            ja .L_406620

            cmp ECX,1768846408
            je .L_406750

            ja .L_406660

            cmp ECX,1718775112
            je .L_406728

            cmp ECX,1768845384
            jne .L_406600

            mov RSI,RBX
            mov RDI,RBP
            call .L_427a50

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588
.L_4065f2:

            add RSP,8
.L_4065f6:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_406600:

            lea RDX,QWORD PTR [RIP+.L_42dac7]
            mov ESI,8
            mov RDI,RBP
            xor EAX,EAX
            call .L_421420
.L_406616:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 

            nop
.L_406620:

            cmp ECX,1952540488
            je .L_4067a0

            ja .L_406698

            cmp ECX,1869640776
            je .L_406778

            cmp ECX,1885434440
            jne .L_406600

            mov RSI,RBX
            mov RDI,RBP
            call .L_422440

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
.L_406660:

            cmp ECX,1835363656
            je .L_4067c8

            cmp ECX,1836082504
            jne .L_406600

            mov RSI,RBX
            mov RDI,RBP
            call .L_41b3b0

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406698:

            cmp ECX,1954115656
            je .L_406700

            cmp ECX,2053533000
            jne .L_406600

            mov RSI,RBX
            mov RDI,RBP
            call .L_40efe0

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4066d8:

            mov RSI,RBX
            mov RDI,RBP
            call .L_4215a0

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406700:

            mov RSI,RBX
            mov RDI,RBP
            call .L_41b3a0

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406728:

            mov RSI,RBX
            mov RDI,RBP
            call .L_40a860

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406750:

            mov RSI,RBX
            mov RDI,RBP
            call .L_420b80

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406778:

            mov RSI,RBX
            mov RDI,RBP
            call .L_41e140

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4067a0:

            mov RSI,RBX
            mov RDI,RBP
            call .L_41b4f0

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4067c8:

            mov RSI,RBX
            mov RDI,RBP
            call .L_421040

            test EAX,EAX
            je .L_406616

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406588

            jmp .L_4065f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4067f0:

            lea RDX,QWORD PTR [RIP+.L_42dab3]
            mov RDI,RBP
            xor EAX,EAX
            mov ESI,8
            call .L_421420

            add RSP,8
.L_40680a:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_406810:

            lea RDX,QWORD PTR [RIP+.L_42daf0]
            mov RDI,RBP
            xor EAX,EAX
            mov R8D,2080
            mov ESI,8
            call .L_421420

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_406835:

            mov EAX,1
            ret 
.L_40683b:

            nop
            nop
            nop
            nop
            nop
.L_406840:

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_406570
.L_40684a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_406850:

            test RDI,RDI
            lea RAX,QWORD PTR [RIP+.L_63e1a0]
            je .L_406884

            mov RAX,QWORD PTR [RIP+.L_641c40]
            test RAX,RAX
            je .L_40687d

            cmp RDI,RAX
            jne .L_406875

            jmp .L_406890
          .byte 0x90
.L_406870:

            cmp RDI,RAX
            je .L_406884
.L_406875:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_406870
.L_40687d:

            lea RAX,QWORD PTR [RIP+.L_63e1a0]
.L_406884:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406890:

            ret 
.L_406892:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4068a0:

            cmp ESI,14
            ja .L_406902

            test RDI,RDI
            je .L_4068e0

            mov RAX,QWORD PTR [RIP+.L_641c40]
            test RAX,RAX
            jne .L_4068c8

            jmp .L_4068e0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4068c0:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_4068e0
.L_4068c8:

            cmp RDI,RAX
            jne .L_4068c0

            mov ESI,ESI
            add RSI,2
            mov RAX,QWORD PTR [RDI+RSI*8]
            test RAX,RAX
            je .L_4068f6
.L_4068dc:

            ret 
          .byte 0x66
          .byte 0x90
.L_4068e0:

            lea RDI,QWORD PTR [RIP+.L_63e1a0]
            mov ESI,ESI
            add RSI,2
            mov RAX,QWORD PTR [RDI+RSI*8]
            test RAX,RAX
            jne .L_4068dc
.L_4068f6:

            lea RAX,QWORD PTR [RIP+.L_63e1a0]
            mov RAX,QWORD PTR [RAX+RSI*8]
            ret 
.L_406902:

            lea RDX,QWORD PTR [RIP+.L_42db28]
            mov ESI,3
            sub RSP,8

            xor EAX,EAX
            call .L_421420

            lea RCX,QWORD PTR [RIP+.L_42db60]
            lea RSI,QWORD PTR [RIP+.L_42d9f0]
            lea RDI,QWORD PTR [RIP+.L_42dae5]
            mov EDX,695
            call __assert_fail@PLT
.L_406938:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406940:

            push RBX

            xor ESI,ESI
            mov RBX,RDI
            call .L_421040

            mov RDI,RBX
            xor ESI,ESI
            call .L_427a50

            mov RDI,RBX
            xor ESI,ESI
            call .L_41b3a0

            mov RDI,RBX
            xor ESI,ESI
            call .L_41b4f0

            mov RDI,RBX
            xor ESI,ESI
            call .L_40a860

            mov RDI,RBX
            xor ESI,ESI
            call .L_420b80

            mov RDI,RBX
            xor ESI,ESI
            call .L_422440

            mov RDI,RBX
            xor ESI,ESI
            call .L_41b3b0

            mov RDI,RBX
            xor ESI,ESI
            call .L_41e140

            mov RDI,RBX
            xor ESI,ESI
            call .L_40efe0

            mov RDI,RBX
            xor ESI,ESI
            pop RBX

            jmp .L_4215a0
.L_4069b0:

            xor EDI,EDI
            jmp .L_406940
.L_4069b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4069c0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,200
.L_4069cc:

            mov RDX,QWORD PTR [RDI+16]
            movdqu XMM0,XMMWORD PTR [RDI+136]
            mov RBP,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            movups XMMWORD PTR [RSP+136],XMM0
            lea RAX,QWORD PTR [RBP+136]
            mov QWORD PTR [RSP+16],RDX
            movdqu XMM0,XMMWORD PTR [RDI+152]
            movups XMMWORD PTR [RBP+152],XMM0
            mov QWORD PTR [RSP+48],RAX
            movdqu XMM0,XMMWORD PTR [RDI+168]
            movups XMMWORD PTR [RBP+168],XMM0
            call .L_406940

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_406a38

            call .L_421220
.L_406a38:

            lea RDI,QWORD PTR [RIP+.L_641c60]
            mov QWORD PTR [RBX+8],0
            call pthread_mutex_lock@PLT

            mov RDX,QWORD PTR [RIP+.L_641c40]
            cmp RBX,RDX
            je .L_406ad0

            test RDX,RDX
            je .L_406a80

            mov RAX,QWORD PTR [RDX]
            cmp RBX,RAX
            jne .L_406a7b

            jmp .L_406ab8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406a70:

            mov RDX,QWORD PTR [RAX]
            cmp RBX,RDX
            je .L_406ac0

            mov RAX,RDX
.L_406a7b:

            test RAX,RAX
            jne .L_406a70
.L_406a80:

            lea RDI,QWORD PTR [RIP+.L_641c60]
            call pthread_mutex_unlock@PLT

            mov RSI,RBX
            mov RDI,RBP
            call .L_421170

            mov RAX,QWORD PTR [RSP+184]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406adc

            add RSP,200
.L_406ab1:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406ab8:

            mov RAX,RDX
            nop
            nop
            nop
            nop
            nop
.L_406ac0:

            mov RDX,QWORD PTR [RBX]
            mov QWORD PTR [RAX],RDX
            jmp .L_406a80
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406ad0:

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RIP+.L_641c40],RAX
            jmp .L_406a80
.L_406adc:

            call __stack_chk_fail@PLT
.L_406ae1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406af0:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,192
.L_406b05:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            test RDI,RDI
            jne .L_406b31

            jmp .L_406cfc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406b28:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_406b50
.L_406b31:

            cmp DWORD PTR [RDI],1633906800
            jne .L_406b28

            cmp DWORD PTR [RDI+4],2080
            ja .L_406b28

            cmp DWORD PTR [RDI+8],1835363656
            jne .L_406b28

            nop
            nop
            nop
            nop
            nop
.L_406b50:

            mov RBX,RSP
            lea R13,QWORD PTR [RBX+136]
            mov RSI,R13
            call .L_420fa0

            mov RDI,RBX
            mov ESI,184
            mov QWORD PTR [RSP+16],R12
            mov QWORD PTR [RSP+48],R13
            call .L_4210b0

            test RAX,RAX
            mov RBX,RAX
            je .L_406cca

            lea RDI,QWORD PTR [RAX+8]
            mov RCX,RAX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+176],0
            xor EAX,EAX
            lea R14,QWORD PTR [RBX+136]
            and RDI,-8
            sub RCX,RDI
            add ECX,184
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            lea RDI,QWORD PTR [RIP+.L_641c60]
            movdqu XMM0,XMMWORD PTR [RSP+136]
            movups XMMWORD PTR [RBX+136],XMM0
            movdqu XMM0,XMMWORD PTR [R13+16]
            movups XMMWORD PTR [RBX+152],XMM0
            movdqu XMM0,XMMWORD PTR [R13+32]
            movups XMMWORD PTR [RBX+168],XMM0
            call pthread_mutex_lock@PLT

            mov RAX,QWORD PTR [RIP+.L_641c40]
            lea RDI,QWORD PTR [RIP+.L_641c60]
            mov QWORD PTR [RIP+.L_641c40],RBX
            mov QWORD PTR [RBX],RAX
            call pthread_mutex_unlock@PLT

            mov QWORD PTR [RBX+16],R12
            mov QWORD PTR [RBX+48],R14
            mov ESI,176
            mov RDI,RBX
            call .L_4211c0

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_406cf0

            xor ESI,ESI
            mov RDI,RBX
            call .L_421390

            xor ESI,ESI
            mov RDI,RBX
            call .L_40e950

            xor ESI,ESI
            mov RDI,RBX
            call .L_40e780

            xor ESI,ESI
            mov RDI,RBX
            call .L_421330

            xor ESI,ESI
            mov RDI,RBX
            call .L_4279d0

            xor ESI,ESI
            mov RDI,RBX
            call .L_422300

            xor ESI,ESI
            mov RDI,RBX
            call .L_40a730

            xor ESI,ESI
            mov RDI,RBX
            call .L_41b340

            xor ESI,ESI
            mov RDI,RBX
            call .L_41b370

            xor ESI,ESI
            mov RDI,RBX
            call .L_41b410

            xor ESI,ESI
            mov RDI,RBX
            call .L_420860

            xor ESI,ESI
            mov RDI,RBX
            call .L_41e010

            xor ESI,ESI
            mov RDI,RBX
            call .L_40ef00

            xor ESI,ESI
            mov RDI,RBX
            call .L_421560

            mov RSI,RBP
            mov RDI,RBX
            call .L_406570

            test EAX,EAX
            je .L_406cf0
.L_406cca:

            mov RDX,QWORD PTR [RSP+184]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_406d03

            add RSP,192
.L_406ce7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_406cf0:

            mov RDI,RBX
            xor EBX,EBX
            call .L_4069c0

            jmp .L_406cca
.L_406cfc:

            xor EDI,EDI
            jmp .L_406b50
.L_406d03:

            call __stack_chk_fail@PLT
.L_406d08:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406d10:

            test RDI,RDI
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
.L_406d1e:

            lea RBX,QWORD PTR [RIP+.L_63e1a0]
            je .L_406d58

            mov RBX,QWORD PTR [RIP+.L_641c40]
            test RBX,RBX
            je .L_406d51

            cmp RDI,RBX
            jne .L_406d49

            jmp .L_406d58
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406d40:

            cmp RDI,RBX
            je .L_406ed8
.L_406d49:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            jne .L_406d40
.L_406d51:

            lea RBX,QWORD PTR [RIP+.L_63e1a0]
.L_406d58:

            test R14,R14
            je .L_406ec8
.L_406d61:

            mov ESI,184
            call .L_4210b0

            test RAX,RAX
            mov RBP,RAX
            je .L_406eb9

            movdqu XMM0,XMMWORD PTR [RBX+136]
            lea R12,QWORD PTR [RBX+136]
            lea RDI,QWORD PTR [RIP+.L_641c60]
            lea R13,QWORD PTR [RAX+136]
            movups XMMWORD PTR [RAX+136],XMM0
            movdqu XMM0,XMMWORD PTR [R12+16]
            movups XMMWORD PTR [RAX+152],XMM0
            movdqu XMM0,XMMWORD PTR [R12+32]
            movups XMMWORD PTR [RAX+168],XMM0
            call pthread_mutex_lock@PLT

            mov RAX,QWORD PTR [RIP+.L_641c40]
            lea RDI,QWORD PTR [RIP+.L_641c60]
            mov QWORD PTR [RIP+.L_641c40],RBP
            mov QWORD PTR [RBP],RAX
            call pthread_mutex_unlock@PLT

            mov QWORD PTR [RBP+16],R14
            mov QWORD PTR [RBP+48],R13
            mov ESI,176
            mov RDI,RBP
            call .L_4211c0

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_406eaf

            mov RSI,RBX
            mov RDI,RBP
            call .L_421390

            mov RSI,RBX
            mov RDI,RBP
            call .L_40e950

            mov RSI,RBX
            mov RDI,RBP
            call .L_40e780

            mov RSI,RBX
            mov RDI,RBP
            call .L_421330

            mov RSI,RBX
            mov RDI,RBP
            call .L_4279d0

            mov RSI,RBX
            mov RDI,RBP
            call .L_422300

            mov RSI,RBX
            mov RDI,RBP
            call .L_40a730

            mov RSI,RBX
            mov RDI,RBP
            call .L_41b340

            mov RSI,RBX
            mov RDI,RBP
            call .L_41b370

            mov RSI,RBX
            mov RDI,RBP
            call .L_41b410

            mov RSI,RBX
            mov RDI,RBP
            call .L_420860

            mov RSI,RBX
            mov RDI,RBP
            call .L_41e010

            mov RSI,RBX
            mov RDI,RBP
            call .L_40ef00

            mov RSI,RBX
            mov RDI,RBP
            add RBX,24
            call .L_421560

            jmp .L_406ea9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406ea0:

            add RBX,8
            cmp RBX,R12
            je .L_406eb9
.L_406ea9:

            cmp QWORD PTR [RBX],0
            jne .L_406ea0
.L_406eaf:

            mov RDI,RBP
            xor EBP,EBP
            call .L_4069c0
.L_406eb9:

            pop RBX
.L_406eba:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406ec8:

            mov R14,QWORD PTR [RBX+16]
            jmp .L_406d61
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406ed8:

            mov RBX,RDI
            jmp .L_406d58
.L_406ee0:

            test RDI,RDI
            je .L_406ef0

            jmp .L_4069c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406ef0:

            ret 
.L_406ef2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406f00:

            xor ESI,ESI
            jmp .L_4068a0
.L_406f07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406f10:

            push R12
            push RBP
            mov R11,RDX
            push RBX
.L_406f17:

            mov EAX,DWORD PTR [RDI]
            mov EBX,EAX
            mov EDI,EAX
            mov EBP,EAX
            shr EBX,10
            shr EDI,14
            mov R12D,EAX
            shr EBP,3
            shr R12D,13
            and EBX,1
            and EDI,1
            and EBP,15
            and R12D,1
            cmp EBX,EDI
            je .L_406f51

            shr EAX,7
            mov R11D,EAX
            and R11D,7
            imul R11D,ECX
            add R11,RDX
.L_406f51:

            test EBP,EBP
            je .L_406f9a

            lea EAX,DWORD PTR [RBP-1]
            mov ECX,ECX
            xor R9D,R9D
            nop
            nop
            nop
.L_406f60:

            movzx R10D,BYTE PTR [R11]
            mov EDI,EAX
            sub EDI,R9D
            test EBX,EBX
            cmove EDI,R9D
            movsxd RDI,EDI
            mov R8D,R10D
            shl R8D,8
            or R8D,R10D
            test R12D,R12D
            mov R10D,R8D
            not R10D
            cmovne R8D,R10D
            add R9D,1
            add R11,RCX
            cmp EBP,R9D
            mov WORD PTR [RSI+RDI*2],R8W
            jne .L_406f60
.L_406f9a:

            pop RBX
.L_406f9b:

            lea RAX,QWORD PTR [RDX+1]
            pop RBP
            pop R12
            ret 
.L_406fa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406fb0:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_406fef:

            nop
.L_406ff0:

            movzx EAX,BYTE PTR [RDX]
            not EAX
            mov ECX,EAX
            movzx EAX,AL
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+1]
            not EAX
            mov ECX,EAX
            movzx EAX,AL
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            not EAX
            mov ECX,EAX
            movzx EAX,AL
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+3]
            not EAX
            mov ECX,EAX
            movzx EAX,AL
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407043:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407050:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_40708f:

            nop
.L_407090:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4070cf:

            nop
.L_4070d0:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_40710f:

            nop
.L_407110:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_407140:

            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407171:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407180:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4071b0:

            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4071e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071f0:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_407220:

            movzx ECX,BYTE PTR [RDX]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI],AX
            movzx ECX,BYTE PTR [RDX+1]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+2],AX
            movzx ECX,BYTE PTR [RDX+2]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_407277:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407280:

            movzx ECX,BYTE PTR [RDX+1]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI],AX
            movzx ECX,BYTE PTR [RDX+2]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+2],AX
            movzx ECX,BYTE PTR [RDX+3]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4072d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4072e0:

            movzx ECX,WORD PTR [RDX]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI],AX
            movzx ECX,WORD PTR [RDX+2]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+2],AX
            movzx ECX,WORD PTR [RDX+4]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407319:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407320:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_407341:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407350:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or ECX,EAX
            lea RAX,QWORD PTR [RDX+1]
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_40736a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_407370:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or ECX,EAX
            lea RAX,QWORD PTR [RDX+2]
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_40738a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_407390:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or ECX,EAX
            lea RAX,QWORD PTR [RDX+3]
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_4073aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4073b0:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or ECX,EAX
            lea RAX,QWORD PTR [RDX+1]
            not ECX
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_4073cc:

            nop
            nop
            nop
            nop
.L_4073d0:

            push R13
            push R12
            mov R9,RDX
            push RBP
            push RBX
.L_4073d9:

            mov EAX,DWORD PTR [RDI]
            mov EBP,EAX
            mov R10D,EAX
            mov R12D,EAX
            mov R13D,EAX
            shr EBP,3
            shr R12D,13
            shr R13D,11
            shr R10D,10
            and EBP,15
            and R12D,1
            and R13D,1
            and R10D,1
            je .L_407413

            shr EAX,7
            and EAX,7
            imul EAX,ECX
            lea R9,QWORD PTR [RDX+RAX*2]
.L_407413:

            test EBP,EBP
            je .L_407467

            mov ECX,ECX
            lea EAX,DWORD PTR [RBP-1]
            xor R8D,R8D
            lea RBX,QWORD PTR [RCX+RCX*1]
            nop
            nop
            nop
            nop
            nop
.L_407428:

            movzx ECX,WORD PTR [R9]
            mov EDI,EAX
            sub EDI,R8D
            test R10D,R10D
            cmove EDI,R8D
            movsxd RDI,EDI
            mov R11D,ECX
            rol R11W,8
            test R13D,R13D
            cmovne ECX,R11D
            test R12D,R12D
            mov R11D,ECX
            not R11D
            cmovne ECX,R11D
            add R8D,1
            add R9,RBX
            cmp EBP,R8D
            mov WORD PTR [RSI+RDI*2],CX
            jne .L_407428
.L_407467:

            pop RBX
.L_407468:

            lea RAX,QWORD PTR [RDX+2]
            pop RBP
            pop R12
            pop R13
            ret 
.L_407472:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407480:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_4074a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4074b0:

            movzx EAX,WORD PTR [RDX]
            not EAX
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+2]
            not EAX
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            not EAX
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+6]
            not EAX
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_4074db:

            nop
            nop
            nop
            nop
            nop
.L_4074e0:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+6],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407503:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407510:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+6],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407533:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407540:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407563:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407570:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_40758b:

            nop
            nop
            nop
            nop
            nop
.L_407590:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_4075ab:

            nop
            nop
            nop
            nop
            nop
.L_4075b0:

            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_4075cc:

            nop
            nop
            nop
            nop
.L_4075d0:

            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_4075ec:

            nop
            nop
            nop
            nop
.L_4075f0:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+4],AX
            mov WORD PTR [RSI+2],AX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_407603:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407610:

            movzx ECX,WORD PTR [RDX]
            lea RAX,QWORD PTR [RDX+2]
            not ECX
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_407625:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407630:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+4],AX
            mov WORD PTR [RSI+2],AX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407643:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407650:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407663:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407670:

            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            xor ECX,ECX
            movsd XMM0,QWORD PTR [RDX]
            pxor XMM2,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM2,XMM0
            jae .L_4076bb

            ucomisd XMM0,XMM1
            mov ECX,4294967295
            jae .L_4076bb

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd ECX,XMM0
            sar ECX,16
            add CX,32767
.L_4076bb:

            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            lea RAX,QWORD PTR [RDX+8]
            mov WORD PTR [RSI],CX
            ret 
.L_4076cb:

            nop
            nop
            nop
            nop
            nop
.L_4076d0:

            push RBP
            push RBX
.L_4076d2:

            mov R9,RDX
            mov EAX,DWORD PTR [RDI+4]
            mov R10D,EAX
            mov EDI,EAX
            mov R11D,EAX
            shr R10D,10
            shr EDI,14
            mov EBX,EAX
            shr R11D,3
            shr EBX,13
            and R10D,1
            and EDI,1
            and R11D,15
            and EBX,1
            cmp R10D,EDI
            je .L_407714

            shr EAX,7
            mov R9D,EAX
            and R9D,7
            imul R9D,ECX
            add R9,RDX
.L_407714:

            test R11D,R11D
            je .L_407762

            lea EAX,DWORD PTR [R11-1]
            mov ECX,ECX
            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
            nop
.L_407728:

            mov EDI,EAX
            sub EDI,R8D
            test R10D,R10D
            cmove EDI,R8D
            movsxd RDI,EDI
            movzx EDI,WORD PTR [RSI+RDI*2]
            imul EDI,EDI,65281
            add EDI,8388608
            shr EDI,24
            test EBX,EBX
            mov EBP,EDI
            not EBP
            cmovne EDI,EBP
            add R8D,1
            mov BYTE PTR [R9],DIL
            add R9,RCX
            cmp R11D,R8D
            jne .L_407728
.L_407762:

            lea RAX,QWORD PTR [RDX+1]
            pop RBX
.L_407767:

            pop RBP
            ret 
.L_407769:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407770:

            push R12
            push RBP
            mov R8,RDX
            push RBX
.L_407777:

            mov EAX,DWORD PTR [RDI+4]
            mov EBX,EAX
            mov R9D,EAX
            mov EBP,EAX
            mov R12D,EAX
            shr EBX,3
            shr EBP,13
            shr R12D,11
            shr R9D,10
            and EBX,15
            and EBP,1
            and R12D,1
            and R9D,1
            je .L_4077af

            shr EAX,7
            and EAX,7
            imul EAX,ECX
            lea R8,QWORD PTR [RDX+RAX*2]
.L_4077af:

            test EBX,EBX
            je .L_4077fa

            mov ECX,ECX
            lea EAX,DWORD PTR [RBX-1]
            xor EDI,EDI
            lea R11,QWORD PTR [RCX+RCX*1]
            nop
            nop
.L_4077c0:

            mov ECX,EAX
            sub ECX,EDI
            test R9D,R9D
            cmove ECX,EDI
            movsxd RCX,ECX
            movzx ECX,WORD PTR [RSI+RCX*2]
            mov R10D,ECX
            rol R10W,8
            test R12D,R12D
            cmovne ECX,R10D
            test EBP,EBP
            mov R10D,ECX
            not R10D
            cmovne ECX,R10D
            add EDI,1
            mov WORD PTR [R8],CX
            add R8,R11
            cmp EBX,EDI
            jne .L_4077c0
.L_4077fa:

            pop RBX
.L_4077fb:

            lea RAX,QWORD PTR [RDX+2]
            pop RBP
            pop R12
            ret 
.L_407803:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407810:

            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            movzx EAX,WORD PTR [RSI+8]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+4],AL
            movzx EAX,WORD PTR [RSI+10]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+5],AL
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407891:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4078a0:

            movzx EAX,WORD PTR [RSI+10]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+8]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+4],AL
            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+5],AL
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407921:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407930:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+6]
            mov WORD PTR [RDX+6],AX
            movzx EAX,WORD PTR [RSI+8]
            mov WORD PTR [RDX+8],AX
            movzx EAX,WORD PTR [RSI+10]
            mov WORD PTR [RDX+10],AX
            lea RAX,QWORD PTR [RDX+12]
            ret 
.L_407963:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407970:

            movzx EAX,WORD PTR [RSI+10]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+8]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+6]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+6],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+8],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+10],AX
            lea RAX,QWORD PTR [RDX+12]
            ret 
.L_4079a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4079b0:

            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407a07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a10:

            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            not EAX
            mov BYTE PTR [RDX],AL
            movzx ECX,WORD PTR [RSI+2]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            not ECX
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            not ECX
            mov BYTE PTR [RDX+2],CL
            movzx ECX,WORD PTR [RSI+6]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            not ECX
            mov BYTE PTR [RDX+3],CL
            ret 
.L_407a72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a80:

            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407ad7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ae0:

            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407b37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407b40:

            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407b97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ba0:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+6]
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407bc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407bd0:

            movzx EAX,WORD PTR [RSI]
            not EAX
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            not EAX
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            not EAX
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+6]
            not EAX
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407bfb:

            nop
            nop
            nop
            nop
            nop
.L_407c00:

            movzx EAX,WORD PTR [RSI+6]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407c23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c30:

            movzx EAX,WORD PTR [RSI]
            rol AX,8
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            rol AX,8
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            rol AX,8
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+6]
            rol AX,8
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407c63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c70:

            movzx ECX,WORD PTR [RSI]
            mov EAX,4278255361
            shl ECX,8
            sub ECX,-128
            imul RCX,RAX
            shr RCX,40
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx EDI,WORD PTR [RSI+2]
            shl EDI,8
            sub EDI,-128
            imul RDI,RAX
            shr RDI,40
            imul EDI,EDI,65281
            add EDI,8388608
            shr EDI,24
            mov BYTE PTR [RDX+1],DIL
            movzx ESI,WORD PTR [RSI+4]
            shl ESI,8
            lea ECX,DWORD PTR [RSI+128]
            imul RCX,RAX
            lea RAX,QWORD PTR [RDX+3]
            shr RCX,40
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_407ce8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407cf0:

            movzx ECX,WORD PTR [RSI]
            mov EAX,4278255361
            shl ECX,8
            sub ECX,-128
            imul RCX,RAX
            shr RCX,40
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx EDI,WORD PTR [RSI+2]
            shl EDI,8
            sub EDI,-128
            imul RDI,RAX
            shr RDI,40
            imul EDI,EDI,65281
            add EDI,8388608
            shr EDI,24
            mov BYTE PTR [RDX+2],DIL
            movzx ESI,WORD PTR [RSI+4]
            shl ESI,8
            lea ECX,DWORD PTR [RSI+128]
            imul RCX,RAX
            lea RAX,QWORD PTR [RDX+4]
            shr RCX,40
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+3],CL
            ret 
.L_407d69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407d70:

            movzx EDI,WORD PTR [RSI]
            mov EAX,4278255361
            shl EDI,8
            sub EDI,-128
            imul RDI,RAX
            shr RDI,40
            mov WORD PTR [RDX],DI
            movzx EDI,WORD PTR [RSI+2]
            shl EDI,8
            sub EDI,-128
            imul RDI,RAX
            shr RDI,40
            mov WORD PTR [RDX+2],DI
            movzx ESI,WORD PTR [RSI+4]
            shl ESI,8
            lea ECX,DWORD PTR [RSI+128]
            imul RCX,RAX
            lea RAX,QWORD PTR [RDX+6]
            shr RCX,40
            mov WORD PTR [RDX+4],CX
            ret 
.L_407dbd:

            nop
            nop
            nop
.L_407dc0:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+3]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_407e05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407e10:

            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX+2],AL
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_407e28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407e30:

            movzx ECX,WORD PTR [RSI+4]
            lea RAX,QWORD PTR [RDX+3]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_407e75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407e80:

            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX+2],AL
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_407e98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ea0:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407ebb:

            nop
            nop
            nop
            nop
            nop
.L_407ec0:

            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407edb:

            nop
            nop
            nop
            nop
            nop
.L_407ee0:

            movzx EAX,WORD PTR [RSI]
            rol AX,8
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            rol AX,8
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            rol AX,8
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407f07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407f10:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_407f55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407f60:

            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX+2],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407f78:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407f80:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            movzx ECX,WORD PTR [RSI+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+3],CL
            ret 
.L_407fc6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407fd0:

            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407fe9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ff0:

            movzx ECX,WORD PTR [RSI+4]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            movzx ECX,WORD PTR [RSI]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+3],CL
            ret 
.L_408036:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408040:

            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_408059:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408060:

            movzx ECX,WORD PTR [RSI+4]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_4080a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4080b0:

            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX+2],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4080c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4080d0:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_4080eb:

            nop
            nop
            nop
            nop
            nop
.L_4080f0:

            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_40810c:

            nop
            nop
            nop
            nop
.L_408110:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_40812c:

            nop
            nop
            nop
            nop
.L_408130:

            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_40814b:

            nop
            nop
            nop
            nop
            nop
.L_408150:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            ret 
.L_408169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408170:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            not ECX
            movzx ECX,CX
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            ret 
.L_40818e:

            nop
            nop
.L_408190:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            ret 
.L_4081a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4081b0:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            ret 
.L_4081ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4081d0:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_4081db:

            nop
            nop
            nop
            nop
            nop
.L_4081e0:

            movzx EAX,WORD PTR [RSI]
            not EAX
            mov WORD PTR [RDX],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_4081ed:

            nop
            nop
            nop
.L_4081f0:

            movzx EAX,WORD PTR [RSI]
            rol AX,8
            mov WORD PTR [RDX],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_4081ff:

            nop
.L_408200:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_40820b:

            nop
            nop
            nop
            nop
            nop
.L_408210:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+2],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_40821c:

            nop
            nop
            nop
            nop
.L_408220:

            push R13
            push R12
            mov R11,RSI
            push RBP
            push RBX
            sub RSP,8
.L_40822d:

            mov R10D,DWORD PTR [RDI]
            mov EBP,R10D
            mov R13D,R10D
            mov R8D,R10D
            shr EBP,10
            mov EBX,R10D
            shr R13D,14
            shr R8D,3
            mov R9D,EBP
            shr EBX,13
            shr R10D,7
            xor EBP,R13D
            and R8D,15
            and R9D,1
            and EBX,1
            and R10D,7
            and EBP,1
            je .L_408300

            movsxd RAX,R10D
            add RDX,RAX
            test R8D,R8D
            mov R12,RDX
            je .L_4082c0
.L_40827a:

            lea R12D,DWORD PTR [R8-1]
            xor ESI,ESI
.L_408280:

            movzx EDI,BYTE PTR [RDX]
            mov ECX,R12D
            mov EAX,ESI
            sub ECX,ESI
            test R9D,R9D
            cmovne EAX,ECX
            cdqe 
            mov ECX,EDI
            shl ECX,8
            or ECX,EDI
            test EBX,EBX
            mov EDI,ECX
            not EDI
            cmovne ECX,EDI
            add ESI,1
            add RDX,1
            cmp R8D,ESI
            mov WORD PTR [R11+RAX*2],CX
            jg .L_408280

            test EBP,EBP
            mov R12,RDX
            jne .L_4082c0
.L_4082ba:

            movsxd R12,R10D
            add R12,RDX
.L_4082c0:

            test R10D,R10D
            jne .L_4082ea

            and R13D,1
            je .L_4082ea

            movzx EBP,WORD PTR [R11]
            sub R8D,1
            lea RSI,QWORD PTR [R11+2]
            movsxd RBX,R8D
            mov RDI,R11
            lea RDX,QWORD PTR [RBX+RBX*1]
            call memmove@PLT

            mov WORD PTR [RAX+RBX*2],BP
.L_4082ea:

            add RSP,8
.L_4082ee:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408300:

            test R8D,R8D
            jne .L_40827a

            jmp .L_4082ba
.L_40830b:

            nop
            nop
            nop
            nop
            nop
.L_408310:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_408318:

            mov R11D,DWORD PTR [RDI]
            mov R12D,R11D
            mov R13D,R11D
            mov R9D,R11D
            shr R12D,10
            mov EDI,R11D
            mov EBP,R11D
            shr R13D,14
            shr R9D,3
            shr EDI,11
            mov R10D,R12D
            shr EBP,13
            shr R11D,7
            xor R12D,R13D
            and R9D,15
            and EDI,1
            and R10D,1
            and EBP,1
            and R11D,7
            and R12D,1
            je .L_4083f8

            movsxd RAX,R11D
            test R9D,R9D
            lea RBX,QWORD PTR [RDX+RAX*2]
            je .L_4083ba
.L_40836e:

            lea EDX,DWORD PTR [R9-1]
            xor R8D,R8D
            nop
            nop
            nop
.L_408378:

            movzx EAX,WORD PTR [RBX]
            mov ECX,EDX
            sub ECX,R8D
            test R10D,R10D
            cmove ECX,R8D
            movsxd RCX,ECX
            mov R14D,EAX
            rol R14W,8
            test EDI,EDI
            cmovne EAX,R14D
            test EBP,EBP
            mov R14D,EAX
            not R14D
            cmovne EAX,R14D
            add R8D,1
            add RBX,2
            cmp R9D,R8D
            mov WORD PTR [RSI+RCX*2],AX
            jg .L_408378

            test R12D,R12D
            je .L_408404
.L_4083ba:

            test R11D,R11D
            jne .L_4083e9

            and R13D,1
            je .L_4083e9

            movzx R12D,WORD PTR [RSI]
            sub R9D,1
            mov RCX,RSI
            movsxd RBP,R9D
            lea RSI,QWORD PTR [RSI+2]
            mov RDI,RCX
            lea RDX,QWORD PTR [RBP+RBP*1]
            call memmove@PLT

            mov WORD PTR [RAX+RBP*2],R12W
.L_4083e9:

            mov RAX,RBX
            pop RBX
.L_4083ed:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4083f8:

            test R9D,R9D
            mov RBX,RDX
            jne .L_40836e
.L_408404:

            movsxd RAX,R11D
            lea RBX,QWORD PTR [RBX+RAX*2]
            jmp .L_4083ba
.L_40840d:

            nop
            nop
            nop
.L_408410:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,40
.L_408427:

            mov R9D,DWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDI
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            mov EAX,R9D
            mov EDX,R9D
            mov EDI,R9D
            shr EAX,3
            mov ECX,R9D
            shr EDX,10
            and EAX,15
            shr EDI,14
            shr ECX,16
            mov DWORD PTR [RSP+16],EAX
            mov R10D,R9D
            mov EAX,R9D
            mov R11D,R9D
            mov R14D,EDX
            shr R10D,13
            shr EAX,7
            xor EDX,EDI
            shr R11D,12
            and ECX,31
            and EAX,7
            and R14D,1
            and R10D,1
            and EDX,1
            and R11D,1
            cmp ECX,29
            mov DWORD PTR [RSP+20],EDI
            mov DWORD PTR [RSP+12],EAX
            ja .L_4084a4

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_4085f0
.L_4084a4:

            mov EAX,DWORD PTR [RSP+16]
            test EDX,EDX
            cmovne EDX,DWORD PTR [RSP+12]
            test EAX,EAX
            je .L_408580

            mov EDI,EDX
            sub EAX,1
            movsxd RDX,EDX
            mov R13,RAX
            lea R15,QWORD PTR [RBP+RDX*8]
            add RAX,1
            imul EDI,R12D
            xor ESI,ESI
            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_42df30]
            movsd XMM6,QWORD PTR [RIP+.L_42df38]
            movsd XMM5,QWORD PTR [RIP+.L_42df40]
            jmp .L_408560
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408500:

            pxor XMM0,XMM0
            mov EDX,EDI
            cvtsd2ss XMM0,QWORD PTR [RBP+RDX*8]
            cvtss2sd XMM0,XMM0
.L_408510:

            mulsd XMM0,XMM1
            xor EDX,EDX
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_408540

            ucomisd XMM0,XMM4
            mov EDX,4294967295
            jae .L_408540

            subsd XMM0,XMM6
            addsd XMM0,XMM5
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_408540:

            mov R8D,EDX
            test R10D,R10D
            movsxd RCX,ECX
            not R8D
            cmovne EDX,R8D
            add RSI,1
            add EDI,R12D
            cmp RSI,RAX
            mov WORD PTR [RBX+RCX*2],DX
            je .L_408580
.L_408560:

            mov ECX,R13D
            sub ECX,ESI
            test R14D,R14D
            cmove ECX,ESI
            test R11D,R11D
            jne .L_408500

            pxor XMM0,XMM0
            cvtsd2ss XMM0,QWORD PTR [R15+RSI*8]
            cvtss2sd XMM0,XMM0
            jmp .L_408510
.L_408580:

            mov EAX,DWORD PTR [RSP+12]
            test EAX,EAX
            jne .L_40858f

            test BYTE PTR [RSP+20],1
            jne .L_4085c0
.L_40858f:

            and R9D,4096
            lea RAX,QWORD PTR [RBP+8]
            jne .L_4085ab

            mov EAX,DWORD PTR [RSP+16]
            add EAX,DWORD PTR [RSP+12]
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*8]
.L_4085ab:

            add RSP,40
.L_4085af:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4085c0:

            mov EAX,DWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+2]
            movzx R13D,WORD PTR [RBX]
            mov RDI,RBX
            lea R12D,DWORD PTR [RAX-1]
            movsxd R12,R12D
            lea RDX,QWORD PTR [R12+R12*1]
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov WORD PTR [RBX+R12*2],R13W
            mov R9D,DWORD PTR [RAX]
            jmp .L_40858f
          .byte 0x66
          .byte 0x90
.L_4085f0:

            movsd XMM1,QWORD PTR [RIP+.L_42df48]
            jmp .L_4084a4
.L_4085fd:

            nop
            nop
            nop
.L_408600:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,40
.L_408617:

            mov R9D,DWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDI
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            mov EAX,R9D
            mov EDX,R9D
            mov EDI,R9D
            shr EAX,3
            mov ECX,R9D
            shr EDX,10
            and EAX,15
            shr EDI,14
            shr ECX,16
            mov DWORD PTR [RSP+16],EAX
            mov R10D,R9D
            mov EAX,R9D
            mov R11D,R9D
            mov R14D,EDX
            shr R10D,13
            shr EAX,7
            xor EDX,EDI
            shr R11D,12
            and ECX,31
            and EAX,7
            and R14D,1
            and R10D,1
            and EDX,1
            and R11D,1
            cmp ECX,29
            mov DWORD PTR [RSP+20],EDI
            mov DWORD PTR [RSP+12],EAX
            ja .L_408694

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_4087e0
.L_408694:

            mov EAX,DWORD PTR [RSP+16]
            test EDX,EDX
            cmovne EDX,DWORD PTR [RSP+12]
            test EAX,EAX
            je .L_408768

            mov EDI,EDX
            sub EAX,1
            movsxd RDX,EDX
            mov R13,RAX
            lea R15,QWORD PTR [RBP+RDX*4]
            add RAX,1
            imul EDI,R12D
            xor ESI,ESI
            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_42df30]
            movsd XMM6,QWORD PTR [RIP+.L_42df38]
            movsd XMM5,QWORD PTR [RIP+.L_42df40]
            jmp .L_40874c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4086f0:

            mov EDX,EDI
            movss XMM0,DWORD PTR [RBP+RDX*4]
.L_4086f8:

            cvtss2sd XMM0,XMM0
            xor EDX,EDX
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_40872c

            ucomisd XMM0,XMM4
            mov EDX,4294967295
            jae .L_40872c

            subsd XMM0,XMM6
            addsd XMM0,XMM5
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_40872c:

            mov R8D,EDX
            test R10D,R10D
            movsxd RCX,ECX
            not R8D
            cmovne EDX,R8D
            add RSI,1
            add EDI,R12D
            cmp RAX,RSI
            mov WORD PTR [RBX+RCX*2],DX
            je .L_408768
.L_40874c:

            mov ECX,R13D
            sub ECX,ESI
            test R14D,R14D
            cmove ECX,ESI
            test R11D,R11D
            jne .L_4086f0

            movss XMM0,DWORD PTR [R15+RSI*4]
            jmp .L_4086f8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408768:

            mov EAX,DWORD PTR [RSP+12]
            test EAX,EAX
            jne .L_408777

            test BYTE PTR [RSP+20],1
            jne .L_4087a8
.L_408777:

            and R9D,4096
            lea RAX,QWORD PTR [RBP+4]
            jne .L_408793

            mov EAX,DWORD PTR [RSP+16]
            add EAX,DWORD PTR [RSP+12]
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*4]
.L_408793:

            add RSP,40
.L_408797:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4087a8:

            mov EAX,DWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+2]
            movzx R13D,WORD PTR [RBX]
            mov RDI,RBX
            lea R12D,DWORD PTR [RAX-1]
            movsxd R12,R12D
            lea RDX,QWORD PTR [R12+R12*1]
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov WORD PTR [RBX+R12*2],R13W
            mov R9D,DWORD PTR [RAX]
            jmp .L_408777
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4087e0:

            movsd XMM1,QWORD PTR [RIP+.L_42df48]
            jmp .L_408694
.L_4087ed:

            nop
            nop
            nop
.L_4087f0:

            push R15
            push R14
            mov EAX,ECX
            push R13
            push R12
            mov R11,RSI
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,24
.L_408806:

            mov QWORD PTR [RSP+8],RDI
            mov EDI,DWORD PTR [RDI]
            movss XMM1,DWORD PTR [RIP+.L_42df6c]
            mov ECX,EDI
            mov EDX,EDI
            mov ESI,EDI
            shr ECX,7
            shr EDX,10
            shr ESI,14
            and ECX,7
            mov EBX,EDI
            mov R8D,EDI
            mov DWORD PTR [RSP],ECX
            mov ECX,EDI
            mov R9D,EDI
            shr ECX,16
            shr EBX,3
            mov R13D,EDX
            shr R8D,13
            xor EDX,ESI
            shr R9D,12
            and ECX,31
            and EBX,15
            and R13D,1
            and R8D,1
            and EDX,1
            and R9D,1
            cmp ECX,29
            mov DWORD PTR [RSP+4],ESI
            ja .L_408879

            mov ESI,1
            shl RSI,CL
            test ESI,1073217632
            jne .L_408978
.L_408879:

            test EDX,EDX
            cmovne EDX,DWORD PTR [RSP]
            test EBX,EBX
            je .L_408900

            lea R10D,DWORD PTR [RBX-1]
            mov ESI,EDX
            movsxd RDX,EDX
            imul ESI,EAX
            lea R15,QWORD PTR [RBP+RDX*4]
            xor ECX,ECX
            mov R12,R10
            movss XMM2,DWORD PTR [RIP+.L_42df6c]
            add R10,1
            jmp .L_4088e1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4088b0:

            mov R14D,ESI
            movss XMM0,DWORD PTR [RBP+R14*4]
.L_4088ba:

            test R8D,R8D
            divss XMM0,XMM1
            je .L_4088cd

            movaps XMM3,XMM2
            subss XMM3,XMM0
            movaps XMM0,XMM3
.L_4088cd:

            add RCX,1
            movsxd RDX,EDX
            add ESI,EAX
            cmp R10,RCX
            movss DWORD PTR [R11+RDX*4],XMM0
            je .L_408900
.L_4088e1:

            mov EDX,R12D
            sub EDX,ECX
            test R13D,R13D
            cmove EDX,ECX
            test R9D,R9D
            jne .L_4088b0

            movss XMM0,DWORD PTR [R15+RCX*4]
            jmp .L_4088ba
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408900:

            mov EAX,DWORD PTR [RSP]
            test EAX,EAX
            jne .L_40890e

            test BYTE PTR [RSP+4],1
            jne .L_408938
.L_40890e:

            and EDI,4096
            lea RAX,QWORD PTR [RBP+4]
            jne .L_408925

            add EBX,DWORD PTR [RSP]
            movsxd RBX,EBX
            lea RAX,QWORD PTR [RBP+RBX*4]
.L_408925:

            add RSP,24
.L_408929:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408938:

            lea R12D,DWORD PTR [RBX-1]
            lea RSI,QWORD PTR [R11+4]
            mov RDI,R11
            movss XMM0,DWORD PTR [R11]
            movsxd R12,R12D
            movss DWORD PTR [RSP+4],XMM0
            lea RDX,QWORD PTR [R12*4]
            call memmove@PLT

            movss XMM0,DWORD PTR [RSP+4]
            movss DWORD PTR [RAX+R12*4],XMM0
            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RAX]
            jmp .L_40890e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408978:

            movss XMM1,DWORD PTR [RIP+.L_42df68]
            jmp .L_408879
.L_408985:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408990:

            push R15
            push R14
            mov EAX,ECX
            push R13
            push R12
            mov R11,RSI
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,24
.L_4089a6:

            mov QWORD PTR [RSP+8],RDI
            mov EDI,DWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            mov ECX,EDI
            mov EDX,EDI
            mov ESI,EDI
            shr ECX,7
            shr EDX,10
            shr ESI,14
            and ECX,7
            mov EBX,EDI
            mov R8D,EDI
            mov DWORD PTR [RSP],ECX
            mov ECX,EDI
            mov R9D,EDI
            shr ECX,16
            shr EBX,3
            mov R13D,EDX
            shr R8D,13
            xor EDX,ESI
            shr R9D,12
            and ECX,31
            and EBX,15
            and R13D,1
            and R8D,1
            and EDX,1
            and R9D,1
            cmp ECX,29
            mov DWORD PTR [RSP+4],ESI
            ja .L_408a19

            mov ESI,1
            shl RSI,CL
            test ESI,1073217632
            jne .L_408b28
.L_408a19:

            test EDX,EDX
            cmovne EDX,DWORD PTR [RSP]
            test EBX,EBX
            je .L_408ab0

            lea R10D,DWORD PTR [RBX-1]
            mov ESI,EDX
            movsxd RDX,EDX
            imul ESI,EAX
            lea R15,QWORD PTR [RBP+RDX*8]
            xor ECX,ECX
            mov R12,R10
            movsd XMM2,QWORD PTR [RIP+.L_42d9d8]
            add R10,1
            jmp .L_408a87
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408a50:

            mov R14D,ESI
            test R8D,R8D
            movsd XMM0,QWORD PTR [RBP+R14*8]
            divsd XMM0,XMM1
            je .L_408aa6
.L_408a63:

            movapd XMM3,XMM2
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            cvtsd2ss XMM0,XMM3
.L_408a73:

            add RCX,1
            movsxd RDX,EDX
            add ESI,EAX
            cmp R10,RCX
            movss DWORD PTR [R11+RDX*4],XMM0
            je .L_408ab0
.L_408a87:

            mov EDX,R12D
            sub EDX,ECX
            test R13D,R13D
            cmove EDX,ECX
            test R9D,R9D
            jne .L_408a50

            movsd XMM0,QWORD PTR [R15+RCX*8]
            test R8D,R8D
            divsd XMM0,XMM1
            jne .L_408a63
.L_408aa6:

            cvtsd2ss XMM0,XMM0
            jmp .L_408a73
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408ab0:

            mov EAX,DWORD PTR [RSP]
            test EAX,EAX
            jne .L_408abe

            test BYTE PTR [RSP+4],1
            jne .L_408ae8
.L_408abe:

            and EDI,4096
            lea RAX,QWORD PTR [RBP+8]
            jne .L_408ad5

            add EBX,DWORD PTR [RSP]
            movsxd RBX,EBX
            lea RAX,QWORD PTR [RBP+RBX*8]
.L_408ad5:

            add RSP,24
.L_408ad9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408ae8:

            lea R12D,DWORD PTR [RBX-1]
            lea RSI,QWORD PTR [R11+4]
            mov RDI,R11
            movss XMM0,DWORD PTR [R11]
            movsxd R12,R12D
            movss DWORD PTR [RSP+4],XMM0
            lea RDX,QWORD PTR [R12*4]
            call memmove@PLT

            movss XMM0,DWORD PTR [RSP+4]
            movss DWORD PTR [RAX+R12*4],XMM0
            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RAX]
            jmp .L_408abe
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408b28:

            movsd XMM1,QWORD PTR [RIP+.L_42d9c8]
            jmp .L_408a19
.L_408b35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408b40:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_408b4a:

            mov R9D,DWORD PTR [RDI+4]
            mov R11D,R9D
            mov EDI,R9D
            mov R10D,R9D
            shr R11D,10
            mov R13D,R9D
            shr R9D,14
            shr EDI,3
            mov R8D,R11D
            shr R10D,13
            shr R13D,7
            xor R11D,R9D
            and EDI,15
            and R8D,1
            and R10D,1
            and R13D,7
            and R11D,1
            je .L_408c18

            movsxd RBP,R13D
            xor EBX,EBX
            add RBP,RDX
            test EDI,EDI
            je .L_408be2
.L_408b98:

            lea R12D,DWORD PTR [RDI-1]
            xor ECX,ECX
            nop
            nop
.L_408ba0:

            mov EAX,R12D
            sub EAX,ECX
            test R8D,R8D
            cmove EAX,ECX
            cdqe 
            movzx EAX,WORD PTR [RSI+RAX*2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            test R10D,R10D
            mov EBX,EAX
            not EBX
            cmove EBX,EAX
            add ECX,1
            add RBP,1
            cmp EDI,ECX
            mov BYTE PTR [RBP-1],BL
            jg .L_408ba0

            test R11D,R11D
            jne .L_408be2
.L_408bdc:

            movsxd RAX,R13D
            add RBP,RAX
.L_408be2:

            test R13D,R13D
            jne .L_408c07

            and R9D,1
            je .L_408c07

            mov R12,RDX
            lea EDX,DWORD PTR [RDI-1]
            lea RDI,QWORD PTR [R12+1]
            mov RSI,R12
            movsxd RDX,EDX
            call memmove@PLT

            mov BYTE PTR [R12],BL
.L_408c07:

            add RSP,8
.L_408c0b:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408c18:

            test EDI,EDI
            mov RBP,RDX
            jne .L_408b98

            xor EBX,EBX
            jmp .L_408bdc
.L_408c27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408c30:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_408c38:

            mov R9D,DWORD PTR [RDI+4]
            mov R12D,R9D
            mov EDI,R9D
            mov R10D,R9D
            shr R12D,10
            mov R11D,R9D
            mov R14D,R9D
            shr R9D,14
            shr EDI,3
            shr R10D,11
            mov R8D,R12D
            shr R11D,13
            shr R14D,7
            xor R12D,R9D
            and EDI,15
            and R10D,1
            and R8D,1
            and R11D,1
            and R14D,7
            and R12D,1
            je .L_408d10

            movsxd RAX,R14D
            test EDI,EDI
            lea RBP,QWORD PTR [RDX+RAX*2]
            je .L_408d27
.L_408c94:

            lea R13D,DWORD PTR [RDI-1]
            xor ECX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
.L_408ca0:

            mov EAX,R13D
            sub EAX,ECX
            test R8D,R8D
            cmove EAX,ECX
            cdqe 
            movzx EBX,WORD PTR [RSI+RAX*2]
            mov EAX,EBX
            rol AX,8
            test R10D,R10D
            cmovne EBX,EAX
            test R11D,R11D
            mov EAX,EBX
            not EAX
            cmovne EBX,EAX
            add ECX,1
            add RBP,2
            mov WORD PTR [RBP-2],BX
            cmp EDI,ECX
            jg .L_408ca0

            test R12D,R12D
            je .L_408d1d
.L_408cdb:

            test R14D,R14D
            jne .L_408d04

            and R9D,1
            je .L_408d04

            mov R12,RDX
            lea EDX,DWORD PTR [RDI-1]
            lea RDI,QWORD PTR [R12+2]
            mov RSI,R12
            movsxd RDX,EDX
            add RDX,RDX
            call memmove@PLT

            mov WORD PTR [R12],BX
.L_408d04:

            pop RBX
.L_408d05:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_408d10:

            xor EBX,EBX
            test EDI,EDI
            mov RBP,RDX
            jne .L_408c94
.L_408d1d:

            movsxd RAX,R14D
            lea RBP,QWORD PTR [RBP+RAX*2]
            jmp .L_408cdb
.L_408d27:

            xor EBX,EBX
            jmp .L_408cdb
.L_408d2b:

            nop
            nop
            nop
            nop
            nop
.L_408d30:

            push R15
            push R14
            mov R11D,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_408d44:

            mov R8D,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+16],RDI
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            mov EDX,R8D
            mov EAX,R8D
            mov ECX,R8D
            shr EDX,10
            shr EAX,14
            shr ECX,16
            mov EBP,R8D
            mov R9D,R8D
            mov R12D,R8D
            mov R10D,R8D
            shr EBP,3
            mov R14D,EDX
            shr R9D,13
            shr R12D,7
            shr R10D,12
            xor EDX,EAX
            and ECX,31
            and EBP,15
            and R14D,1
            and R9D,1
            and R12D,7
            and R10D,1
            and EDX,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EAX
            ja .L_408dbc

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_408eb0
.L_408dbc:

            test EDX,EDX
            cmovne EDX,R12D
            test EBP,EBP
            je .L_408ec6
.L_408dca:

            lea EAX,DWORD PTR [RBP-1]
            mov EDI,EDX
            movsxd RDX,EDX
            imul EDI,R11D
            lea R15,QWORD PTR [RBX+RDX*8]
            xor ECX,ECX
            mov R13,RAX
            add RAX,1
            jmp .L_408dfb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408de8:

            add RCX,1
            mov EDX,EDI
            add EDI,R11D
            cmp RAX,RCX
            movsd QWORD PTR [RBX+RDX*8],XMM0
            je .L_408e41
.L_408dfb:

            mov EDX,R13D
            pxor XMM0,XMM0
            sub EDX,ECX
            test R14D,R14D
            cmove EDX,ECX
            test R9D,R9D
            movsxd RDX,EDX
            movzx EDX,WORD PTR [RSI+RDX*2]
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM1
            je .L_408e2a

            movapd XMM2,XMM1
            subsd XMM2,XMM0
            movapd XMM0,XMM2
.L_408e2a:

            test R10D,R10D
            jne .L_408de8

            movsd QWORD PTR [R15+RCX*8],XMM0
            add RCX,1
            add EDI,R11D
            cmp RAX,RCX
            jne .L_408dfb
.L_408e41:

            test R12D,R12D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_408e53

            test BYTE PTR [RSP+12],1
            jne .L_408e80
.L_408e53:

            and R8D,4096
            lea RAX,QWORD PTR [RBX+8]
            jne .L_408e6a

            add EBP,R12D
            movsxd RBP,EBP
            lea RAX,QWORD PTR [RBX+RBP*8]
.L_408e6a:

            add RSP,40
.L_408e6e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408e80:

            lea EDX,DWORD PTR [RBP-1]
            lea RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            movsxd RDX,EDX
            shl RDX,3
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBX],XMM0
            mov R8D,DWORD PTR [RAX+4]
            jmp .L_408e53
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408eb0:

            test EDX,EDX
            movsd XMM1,QWORD PTR [RIP+.L_42df48]
            cmovne EDX,R12D
            test EBP,EBP
            jne .L_408dca
.L_408ec6:

            pxor XMM0,XMM0
            jmp .L_408e41
.L_408ecf:

            nop
.L_408ed0:

            push R15
            push R14
            mov R11D,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_408ee4:

            mov R8D,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+16],RDI
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            mov EDX,R8D
            mov EAX,R8D
            mov ECX,R8D
            shr EDX,10
            shr EAX,14
            shr ECX,16
            mov EBP,R8D
            mov R9D,R8D
            mov R12D,R8D
            mov R10D,R8D
            shr EBP,3
            mov R14D,EDX
            shr R9D,13
            shr R12D,7
            shr R10D,12
            xor EDX,EAX
            and ECX,31
            and EBP,15
            and R14D,1
            and R9D,1
            and R12D,7
            and R10D,1
            and EDX,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EAX
            ja .L_408f5c

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_409060
.L_408f5c:

            test EDX,EDX
            cmovne EDX,R12D
            test EBP,EBP
            je .L_409076
.L_408f6a:

            lea EAX,DWORD PTR [RBP-1]
            mov EDI,EDX
            movsxd RDX,EDX
            imul EDI,R11D
            lea R15,QWORD PTR [RBX+RDX*4]
            xor ECX,ECX
            mov R13,RAX
            add RAX,1
            jmp .L_408f9b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408f88:

            add RCX,1
            mov EDX,EDI
            add EDI,R11D
            cmp RAX,RCX
            movss DWORD PTR [RBX+RDX*4],XMM1
            je .L_408fe9
.L_408f9b:

            mov EDX,R13D
            pxor XMM0,XMM0
            sub EDX,ECX
            test R14D,R14D
            cmove EDX,ECX
            test R9D,R9D
            movsxd RDX,EDX
            movzx EDX,WORD PTR [RSI+RDX*2]
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM2
            je .L_408fca

            movapd XMM3,XMM2
            subsd XMM3,XMM0
            movapd XMM0,XMM3
.L_408fca:

            test R10D,R10D
            pxor XMM1,XMM1
            cvtsd2ss XMM1,XMM0
            jne .L_408f88

            add EDI,R11D
            movss DWORD PTR [R15+RCX*4],XMM1
            add RCX,1
            cmp RAX,RCX
            jne .L_408f9b
.L_408fe9:

            test R12D,R12D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_408ffb

            test BYTE PTR [RSP+12],1
            jne .L_409028
.L_408ffb:

            and R8D,4096
            lea RAX,QWORD PTR [RBX+4]
            jne .L_409012

            add EBP,R12D
            movsxd RBP,EBP
            lea RAX,QWORD PTR [RBX+RBP*4]
.L_409012:

            add RSP,40
.L_409016:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409028:

            lea EDX,DWORD PTR [RBP-1]
            lea RDI,QWORD PTR [RBX+4]
            mov RSI,RBX
            movsxd RDX,EDX
            shl RDX,2
            call memmove@PLT

            pxor XMM4,XMM4
            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            cvtsd2ss XMM4,XMM0
            mov R8D,DWORD PTR [RAX+4]
            movss DWORD PTR [RBX],XMM4
            jmp .L_408ffb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409060:

            test EDX,EDX
            movsd XMM2,QWORD PTR [RIP+.L_42df48]
            cmovne EDX,R12D
            test EBP,EBP
            jne .L_408f6a
.L_409076:

            pxor XMM0,XMM0
            jmp .L_408fe9
.L_40907f:

            nop
.L_409080:

            push R15
            push R14
            mov R11D,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_409094:

            mov R8D,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+16],RDI
            movsd XMM2,QWORD PTR [RIP+.L_42d9d8]
            mov EDX,R8D
            mov EAX,R8D
            mov ECX,R8D
            shr EDX,10
            shr EAX,14
            shr ECX,16
            mov EBP,R8D
            mov R9D,R8D
            mov R12D,R8D
            mov R10D,R8D
            shr EBP,3
            mov R14D,EDX
            shr R9D,13
            shr R12D,7
            shr R10D,12
            xor EDX,EAX
            and ECX,31
            and EBP,15
            and R14D,1
            and R9D,1
            and R12D,7
            and R10D,1
            and EDX,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EAX
            ja .L_40910c

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_409208
.L_40910c:

            test EDX,EDX
            cmovne EDX,R12D
            test EBP,EBP
            je .L_40921e
.L_40911a:

            lea EAX,DWORD PTR [RBP-1]
            mov EDI,EDX
            movsxd RDX,EDX
            imul EDI,R11D
            lea R15,QWORD PTR [RBX+RDX*4]
            xor ECX,ECX
            mov R13,RAX
            add RAX,1
            jmp .L_40914b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409138:

            add RCX,1
            mov EDX,EDI
            add EDI,R11D
            cmp RAX,RCX
            movss DWORD PTR [RBX+RDX*4],XMM1
            je .L_409196
.L_40914b:

            mov EDX,R13D
            pxor XMM0,XMM0
            sub EDX,ECX
            test R14D,R14D
            cmove EDX,ECX
            test R9D,R9D
            movsxd RDX,EDX
            cvtss2sd XMM0,DWORD PTR [RSI+RDX*4]
            mulsd XMM0,XMM2
            je .L_409177

            movapd XMM3,XMM2
            subsd XMM3,XMM0
            movapd XMM0,XMM3
.L_409177:

            pxor XMM1,XMM1
            test R10D,R10D
            cvtsd2ss XMM1,XMM0
            jne .L_409138

            add EDI,R11D
            movss DWORD PTR [R15+RCX*4],XMM1
            add RCX,1
            cmp RAX,RCX
            jne .L_40914b
.L_409196:

            test R12D,R12D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_4091a8

            test BYTE PTR [RSP+12],1
            jne .L_4091d0
.L_4091a8:

            and R8D,4096
            lea RAX,QWORD PTR [RBX+4]
            jne .L_4091bf

            add EBP,R12D
            movsxd RBP,EBP
            lea RAX,QWORD PTR [RBX+RBP*4]
.L_4091bf:

            add RSP,40
.L_4091c3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_4091d0:

            lea EDX,DWORD PTR [RBP-1]
            lea RDI,QWORD PTR [RBX+4]
            mov RSI,RBX
            movsxd RDX,EDX
            shl RDX,2
            call memmove@PLT

            pxor XMM4,XMM4
            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            cvtsd2ss XMM4,XMM0
            mov R8D,DWORD PTR [RAX+4]
            movss DWORD PTR [RBX],XMM4
            jmp .L_4091a8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409208:

            test EDX,EDX
            movsd XMM2,QWORD PTR [RIP+.L_42d9c8]
            cmovne EDX,R12D
            test EBP,EBP
            jne .L_40911a
.L_40921e:

            pxor XMM0,XMM0
            jmp .L_409196
.L_409227:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409230:

            push R15
            push R14
            mov R11D,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_409244:

            mov R8D,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+16],RDI
            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            mov EDX,R8D
            mov EAX,R8D
            mov ECX,R8D
            shr EDX,10
            shr EAX,14
            shr ECX,16
            mov EBP,R8D
            mov R9D,R8D
            mov R12D,R8D
            mov R10D,R8D
            shr EBP,3
            mov R14D,EDX
            shr R9D,13
            shr R12D,7
            shr R10D,12
            xor EDX,EAX
            and ECX,31
            and EBP,15
            and R14D,1
            and R9D,1
            and R12D,7
            and R10D,1
            and EDX,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EAX
            ja .L_4092bc

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_4093b0
.L_4092bc:

            test EDX,EDX
            cmovne EDX,R12D
            test EBP,EBP
            je .L_4093c6
.L_4092ca:

            lea EAX,DWORD PTR [RBP-1]
            mov EDI,EDX
            movsxd RDX,EDX
            imul EDI,R11D
            lea R15,QWORD PTR [RBX+RDX*8]
            xor ECX,ECX
            mov R13,RAX
            add RAX,1
            jmp .L_4092fb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4092e8:

            add RCX,1
            mov EDX,EDI
            add EDI,R11D
            cmp RAX,RCX
            movsd QWORD PTR [RBX+RDX*8],XMM0
            je .L_40933e
.L_4092fb:

            mov EDX,R13D
            pxor XMM0,XMM0
            sub EDX,ECX
            test R14D,R14D
            cmove EDX,ECX
            test R9D,R9D
            movsxd RDX,EDX
            cvtss2sd XMM0,DWORD PTR [RSI+RDX*4]
            mulsd XMM0,XMM1
            je .L_409327

            movapd XMM2,XMM1
            subsd XMM2,XMM0
            movapd XMM0,XMM2
.L_409327:

            test R10D,R10D
            jne .L_4092e8

            movsd QWORD PTR [R15+RCX*8],XMM0
            add RCX,1
            add EDI,R11D
            cmp RAX,RCX
            jne .L_4092fb
.L_40933e:

            test R12D,R12D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_409350

            test BYTE PTR [RSP+12],1
            jne .L_409380
.L_409350:

            and R8D,4096
            lea RAX,QWORD PTR [RBX+8]
            jne .L_409367

            add EBP,R12D
            movsxd RBP,EBP
            lea RAX,QWORD PTR [RBX+RBP*8]
.L_409367:

            add RSP,40
.L_40936b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409380:

            lea EDX,DWORD PTR [RBP-1]
            lea RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            movsxd RDX,EDX
            shl RDX,3
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBX],XMM0
            mov R8D,DWORD PTR [RAX+4]
            jmp .L_409350
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4093b0:

            test EDX,EDX
            movsd XMM1,QWORD PTR [RIP+.L_42d9c8]
            cmovne EDX,R12D
            test EBP,EBP
            jne .L_4092ca
.L_4093c6:

            pxor XMM0,XMM0
            jmp .L_40933e
.L_4093cf:

            nop
.L_4093d0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            sub RSP,72
.L_4093e1:

            mov DWORD PTR [RSP+4],ECX
            mov ECX,DWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDX
            movss XMM3,DWORD PTR [RIP+.L_42df6c]
            mov QWORD PTR [RSP+48],RDI
            movss DWORD PTR [RSP+8],XMM3
            mov EAX,ECX
            mov ESI,ECX
            mov EBP,ECX
            shr EAX,3
            shr ESI,14
            mov R12D,ECX
            and EAX,15
            shr EBP,13
            shr R12D,12
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            and EBP,1
            shr EAX,10
            and R12D,1
            mov DWORD PTR [RSP+60],ESI
            mov EDX,EAX
            xor EAX,ESI
            and EDX,1
            and EAX,1
            mov DWORD PTR [RSP+12],EDX
            mov EDX,ECX
            shr ECX,16
            shr EDX,7
            and ECX,31
            and EDX,7
            cmp ECX,29
            mov DWORD PTR [RSP+44],EDX
            ja .L_409465

            mov EDX,1
            shl RDX,CL
            test EDX,1073217632
            jne .L_4095c8
.L_409465:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            test ESI,ESI
            je .L_409528

            mov R15D,DWORD PTR [RSP+4]
            lea ECX,DWORD PTR [RSI-1]
            mov RSI,QWORD PTR [RSP+24]
            xor R14D,R14D
            lea RDI,QWORD PTR [RCX+1]
            mov DWORD PTR [RSP+40],ECX
            imul R15D,EAX
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*2]
            mov QWORD PTR [RSP+16],RDI
            mov QWORD PTR [RSP+32],RAX
            mov EAX,R15D
            mov R15,R14
            mov R14D,R12D
            mov R12D,EBP
            mov EBP,EAX
            jmp .L_4094fb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4094b8:

            mov RAX,QWORD PTR [RSP+24]
            mov ECX,EBP
            movzx EDI,WORD PTR [RAX+RCX*2]
            call .L_41e310
.L_4094c8:

            test R12D,R12D
            divss XMM0,DWORD PTR [RSP+8]
            je .L_4094e2

            movss XMM2,DWORD PTR [RIP+.L_42df6c]
            subss XMM2,XMM0
            movaps XMM0,XMM2
.L_4094e2:

            add R15,1
            add EBP,DWORD PTR [RSP+4]
            cmp QWORD PTR [RSP+16],R15
            movsxd RBX,EBX
            movss DWORD PTR [R13+RBX*4],XMM0
            je .L_409528
.L_4094fb:

            mov EBX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+12]
            sub EBX,R15D
            test EDX,EDX
            cmove EBX,R15D
            test R14D,R14D
            jne .L_4094b8

            mov RAX,QWORD PTR [RSP+32]
            movzx EDI,WORD PTR [RAX+R15*2]
            call .L_41e310

            jmp .L_4094c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409528:

            mov EAX,DWORD PTR [RSP+44]
            test EAX,EAX
            jne .L_409537

            test BYTE PTR [RSP+60],1
            jne .L_409568
.L_409537:

            mov RAX,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RAX]
            test AH,16
            jne .L_4095ab
.L_409543:

            mov EAX,DWORD PTR [RSP+56]
            add EAX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSP+24]
            add RSP,72
.L_409554:

            pop RBX
            pop RBP
            cdqe 
            pop R12
            lea RAX,QWORD PTR [RSI+RAX*2]
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409568:

            mov EAX,DWORD PTR [RSP+56]
            lea RSI,QWORD PTR [R13+4]
            mov RDI,R13
            movss XMM0,DWORD PTR [R13]
            movss DWORD PTR [RSP+4],XMM0
            lea EBX,DWORD PTR [RAX-1]
            movsxd RBX,EBX
            lea RDX,QWORD PTR [RBX*4]
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+48]
            movss XMM0,DWORD PTR [RSP+4]
            movss DWORD PTR [R13+RBX*4],XMM0
            mov EAX,DWORD PTR [RAX]
            test AH,16
            je .L_409543
.L_4095ab:

            mov RAX,QWORD PTR [RSP+24]
            add RSP,72
.L_4095b4:

            pop RBX
            pop RBP
            add RAX,2
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4095c8:

            movss XMM4,DWORD PTR [RIP+.L_42df68]
            movss DWORD PTR [RSP+8],XMM4
            jmp .L_409465
.L_4095db:

            nop
            nop
            nop
            nop
            nop
.L_4095e0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            sub RSP,72
.L_4095f1:

            mov DWORD PTR [RSP+8],ECX
            mov ECX,DWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+48],RDI
            movss XMM4,DWORD PTR [RIP+.L_42df74]
            mov EAX,ECX
            mov ESI,ECX
            mov EBP,ECX
            shr EAX,3
            shr ESI,14
            mov EDX,ECX
            and EAX,15
            mov R12D,ECX
            shr EBP,13
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            shr ECX,16
            shr EAX,10
            shr EDX,7
            shr R12D,12
            mov EDI,EAX
            and ECX,31
            xor EAX,ESI
            and EDI,1
            and EDX,7
            and EBP,1
            and EAX,1
            and R12D,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EDI
            mov DWORD PTR [RSP+60],ESI
            movss DWORD PTR [RSP+4],XMM4
            mov DWORD PTR [RSP+44],EDX
            ja .L_409675

            mov EDX,1
            shl RDX,CL
            test EDX,1073217632
            jne .L_409818
.L_409675:

            mov ECX,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            test ECX,ECX
            je .L_409788

            lea EDX,DWORD PTR [RCX-1]
            mov R15D,DWORD PTR [RSP+8]
            xor R14D,R14D
            lea RDI,QWORD PTR [RDX+1]
            mov DWORD PTR [RSP+40],EDX
            imul R15D,EAX
            cdqe 
            mov QWORD PTR [RSP+16],RDI
            mov RDI,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RDI+RAX*2]
            mov QWORD PTR [RSP+32],RAX
            mov EAX,R15D
            mov R15,R14
            mov R14D,R12D
            mov R12D,EBP
            mov EBP,EAX
            jmp .L_409756
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4096d0:

            mov RAX,QWORD PTR [RSP+24]
            mov EDX,EBP
            movzx EDI,WORD PTR [RAX+RDX*2]
            call .L_41e310
.L_4096e0:

            test R12D,R12D
            je .L_4096f2

            movss XMM3,DWORD PTR [RSP+4]
            subss XMM3,XMM0
            movaps XMM0,XMM3
.L_4096f2:

            mulss XMM0,DWORD PTR [RSP+4]
            xor EDX,EDX
            movsxd RBX,EBX
            pxor XMM2,XMM2
            lea RSI,QWORD PTR [R13+RBX*2]
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM2,XMM0
            jae .L_409744

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov EDX,4294967295
            jae .L_409744

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_409744:

            add R15,1
            add EBP,DWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+16],R15
            mov WORD PTR [RSI],DX
            je .L_409788
.L_409756:

            mov EBX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+12]
            sub EBX,R15D
            test EDX,EDX
            cmove EBX,R15D
            test R14D,R14D
            jne .L_4096d0

            mov RAX,QWORD PTR [RSP+32]
            movzx EDI,WORD PTR [RAX+R15*2]
            call .L_41e310

            jmp .L_4096e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409788:

            mov EAX,DWORD PTR [RSP+44]
            test EAX,EAX
            jne .L_409797

            test BYTE PTR [RSP+60],1
            jne .L_4097c8
.L_409797:

            mov RAX,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RAX]
            test AH,16
            jne .L_4097f9
.L_4097a3:

            mov EAX,DWORD PTR [RSP+56]
            add EAX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSP+24]
            add RSP,72
.L_4097b4:

            pop RBX
            pop RBP
            cdqe 
            pop R12
            lea RAX,QWORD PTR [RSI+RAX*2]
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4097c8:

            mov EAX,DWORD PTR [RSP+56]
            lea RSI,QWORD PTR [R13+2]
            mov RDI,R13
            movzx EBP,WORD PTR [R13]
            lea EBX,DWORD PTR [RAX-1]
            movsxd RBX,EBX
            lea RDX,QWORD PTR [RBX+RBX*1]
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+48]
            mov WORD PTR [R13+RBX*2],BP
            mov EAX,DWORD PTR [RAX]
            test AH,16
            je .L_4097a3
.L_4097f9:

            mov RAX,QWORD PTR [RSP+24]
            add RSP,72
            pop RBX
            pop RBP
            add RAX,2
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409818:

            movss XMM5,DWORD PTR [RIP+.L_42df70]
            movss DWORD PTR [RSP+4],XMM5
            jmp .L_409675
.L_40982b:

            nop
            nop
            nop
            nop
            nop
.L_409830:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            sub RSP,72
.L_409844:

            mov DWORD PTR [RSP],ECX
            mov ECX,DWORD PTR [RDI+4]
            movss XMM3,DWORD PTR [RIP+.L_42df6c]
            mov QWORD PTR [RSP+48],RDI
            movss DWORD PTR [RSP+4],XMM3
            mov EAX,ECX
            mov EDX,ECX
            mov EBP,ECX
            shr EAX,3
            shr EDX,7
            shr EBP,12
            and EAX,15
            and EDX,7
            and EBP,1
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            mov DWORD PTR [RSP+44],EDX
            shr EAX,10
            mov EDX,ECX
            mov EBX,EAX
            shr EDX,14
            and EBX,1
            xor EAX,EDX
            mov DWORD PTR [RSP+60],EDX
            mov DWORD PTR [RSP+16],EBX
            mov EBX,ECX
            shr ECX,16
            shr EBX,13
            and ECX,31
            and EAX,1
            and EBX,1
            cmp ECX,29
            ja .L_4098c0

            mov EDX,1
            shl RDX,CL
            test EDX,1073217632
            jne .L_409a38
.L_4098c0:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            test ESI,ESI
            je .L_409a59
.L_4098d3:

            mov R14D,DWORD PTR [RSP]
            lea EDX,DWORD PTR [RSI-1]
            xor R13D,R13D
            mov QWORD PTR [RSP+24],R12
            lea RCX,QWORD PTR [RDX+1]
            mov DWORD PTR [RSP+20],EDX
            imul R14D,EAX
            cdqe 
            lea RAX,QWORD PTR [R12+RAX*2]
            mov QWORD PTR [RSP+8],RCX
            mov R12,R13
            mov R13D,EBP
            mov EBP,EBX
            mov QWORD PTR [RSP+32],RAX
            jmp .L_409942
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409910:

            mov RDI,QWORD PTR [RSP+24]
            movaps XMM0,XMM1
            mov EAX,R14D
            movss DWORD PTR [RSP+40],XMM1
            add R12,1
            lea RBX,QWORD PTR [RDI+RAX*2]
            call .L_41e350

            add R14D,DWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],R12
            mov WORD PTR [RBX],AX
            movss XMM1,DWORD PTR [RSP+40]
            je .L_4099a2
.L_409942:

            mov EAX,DWORD PTR [RSP+20]
            mov EDX,DWORD PTR [RSP+16]
            movss XMM2,DWORD PTR [RSP+4]
            sub EAX,R12D
            test EDX,EDX
            cmove EAX,R12D
            test EBP,EBP
            cdqe 
            movss XMM1,DWORD PTR [R15+RAX*4]
            mulss XMM1,XMM2
            je .L_409970

            subss XMM2,XMM1
            movaps XMM1,XMM2
.L_409970:

            test R13D,R13D
            jne .L_409910

            movaps XMM0,XMM1
            movss DWORD PTR [RSP+40],XMM1
            call .L_41e350

            mov RDI,QWORD PTR [RSP+32]
            add R14D,DWORD PTR [RSP]
            movss XMM1,DWORD PTR [RSP+40]
            mov WORD PTR [RDI+R12*2],AX
            add R12,1
            cmp QWORD PTR [RSP+8],R12
            jne .L_409942
.L_4099a2:

            mov R12,QWORD PTR [RSP+24]
.L_4099a7:

            mov EAX,DWORD PTR [RSP+44]
            movss DWORD PTR [RSP],XMM1
            test EAX,EAX
            jne .L_4099bb

            test BYTE PTR [RSP+60],1
            jne .L_4099e8
.L_4099bb:

            mov RAX,QWORD PTR [RSP+48]
            test BYTE PTR [RAX+5],16
            jne .L_409a1f
.L_4099c6:

            mov EAX,DWORD PTR [RSP+56]
            add EAX,DWORD PTR [RSP+44]
            add RSP,72
.L_4099d2:

            pop RBX
            pop RBP
            cdqe 
            lea RAX,QWORD PTR [R12+RAX*2]
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4099e8:

            mov EAX,DWORD PTR [RSP+56]
            lea RDI,QWORD PTR [R12+2]
            mov RSI,R12
            lea EDX,DWORD PTR [RAX-1]
            movsxd RDX,EDX
            add RDX,RDX
            call memmove@PLT

            movss XMM1,DWORD PTR [RSP]
            movaps XMM0,XMM1
            call .L_41e350

            mov WORD PTR [R12],AX
            mov RAX,QWORD PTR [RSP+48]
            test BYTE PTR [RAX+5],16
            je .L_4099c6
.L_409a1f:

            add RSP,72
            lea RAX,QWORD PTR [R12+2]
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409a38:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            movss XMM4,DWORD PTR [RIP+.L_42df68]
            movss DWORD PTR [RSP+4],XMM4
            test ESI,ESI
            jne .L_4098d3
.L_409a59:

            pxor XMM1,XMM1
            jmp .L_4099a7
.L_409a62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409a70:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            sub RSP,72
.L_409a84:

            mov DWORD PTR [RSP],ECX
            mov ECX,DWORD PTR [RDI+4]
            movss XMM3,DWORD PTR [RIP+.L_42df74]
            mov QWORD PTR [RSP+48],RDI
            movss DWORD PTR [RSP+4],XMM3
            mov EAX,ECX
            mov EDX,ECX
            mov EBP,ECX
            shr EAX,3
            shr EDX,7
            shr EBP,12
            and EAX,15
            and EDX,7
            and EBP,1
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            mov DWORD PTR [RSP+44],EDX
            shr EAX,10
            mov EDX,ECX
            mov EBX,EAX
            shr EDX,14
            and EBX,1
            xor EAX,EDX
            mov DWORD PTR [RSP+60],EDX
            mov DWORD PTR [RSP+16],EBX
            mov EBX,ECX
            shr ECX,16
            shr EBX,13
            and ECX,31
            and EAX,1
            and EBX,1
            cmp ECX,29
            ja .L_409b00

            mov EDX,1
            shl RDX,CL
            test EDX,1073217632
            jne .L_409c80
.L_409b00:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            test ESI,ESI
            je .L_409ca1
.L_409b13:

            mov R14D,DWORD PTR [RSP]
            lea EDX,DWORD PTR [RSI-1]
            xor R13D,R13D
            mov QWORD PTR [RSP+24],R12
            lea RCX,QWORD PTR [RDX+1]
            mov DWORD PTR [RSP+20],EDX
            imul R14D,EAX
            cdqe 
            lea RAX,QWORD PTR [R12+RAX*2]
            mov QWORD PTR [RSP+8],RCX
            mov R12,R13
            mov R13D,EBP
            mov EBP,EBX
            mov QWORD PTR [RSP+32],RAX
            jmp .L_409b82
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409b50:

            mov RDI,QWORD PTR [RSP+24]
            movaps XMM0,XMM1
            mov EAX,R14D
            movss DWORD PTR [RSP+40],XMM1
            add R12,1
            lea RBX,QWORD PTR [RDI+RAX*2]
            call .L_41e350

            add R14D,DWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],R12
            mov WORD PTR [RBX],AX
            movss XMM1,DWORD PTR [RSP+40]
            je .L_409be9
.L_409b82:

            mov EAX,DWORD PTR [RSP+20]
            mov EDX,DWORD PTR [RSP+16]
            pxor XMM1,XMM1
            movss XMM2,DWORD PTR [RSP+4]
            sub EAX,R12D
            test EDX,EDX
            cmove EAX,R12D
            test EBP,EBP
            cdqe 
            movzx EAX,WORD PTR [R15+RAX*2]
            cvtsi2ss XMM1,EAX
            divss XMM1,XMM2
            je .L_409bb7

            subss XMM2,XMM1
            movaps XMM1,XMM2
.L_409bb7:

            test R13D,R13D
            jne .L_409b50

            movaps XMM0,XMM1
            movss DWORD PTR [RSP+40],XMM1
            call .L_41e350

            mov RDI,QWORD PTR [RSP+32]
            add R14D,DWORD PTR [RSP]
            movss XMM1,DWORD PTR [RSP+40]
            mov WORD PTR [RDI+R12*2],AX
            add R12,1
            cmp QWORD PTR [RSP+8],R12
            jne .L_409b82
.L_409be9:

            mov R12,QWORD PTR [RSP+24]
.L_409bee:

            mov EAX,DWORD PTR [RSP+44]
            movss DWORD PTR [RSP],XMM1
            test EAX,EAX
            jne .L_409c02

            test BYTE PTR [RSP+60],1
            jne .L_409c30
.L_409c02:

            mov RAX,QWORD PTR [RSP+48]
            test BYTE PTR [RAX+5],16
            jne .L_409c67
.L_409c0d:

            mov EAX,DWORD PTR [RSP+56]
            add EAX,DWORD PTR [RSP+44]
            add RSP,72
.L_409c19:

            pop RBX
            pop RBP
            cdqe 
            lea RAX,QWORD PTR [R12+RAX*2]
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409c30:

            mov EAX,DWORD PTR [RSP+56]
            lea RDI,QWORD PTR [R12+2]
            mov RSI,R12
            lea EDX,DWORD PTR [RAX-1]
            movsxd RDX,EDX
            add RDX,RDX
            call memmove@PLT

            movss XMM1,DWORD PTR [RSP]
            movaps XMM0,XMM1
            call .L_41e350

            mov WORD PTR [R12],AX
            mov RAX,QWORD PTR [RSP+48]
            test BYTE PTR [RAX+5],16
            je .L_409c0d
.L_409c67:

            add RSP,72
            lea RAX,QWORD PTR [R12+2]
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409c80:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            movss XMM4,DWORD PTR [RIP+.L_42df70]
            movss DWORD PTR [RSP+4],XMM4
            test ESI,ESI
            jne .L_409b13
.L_409ca1:

            pxor XMM1,XMM1
            jmp .L_409bee
.L_409caa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_409cb0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EBP,ECX
            mov RBX,RDX
            sub RSP,32
.L_409cc0:

            mov RDI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_40af80

            mov EAX,DWORD PTR [R12+4]
            test AH,16
            jne .L_409d38

            pxor XMM0,XMM0
            shr EAX,7
            pxor XMM1,XMM1
            and EAX,7
            pxor XMM2,XMM2
            lea RAX,QWORD PTR [RBX+RAX*4+12]
            cvtsd2ss XMM0,QWORD PTR [RSP]
            movss DWORD PTR [RBX],XMM0
            cvtsd2ss XMM1,QWORD PTR [RSP+8]
            movss DWORD PTR [RBX+4],XMM1
            cvtsd2ss XMM2,QWORD PTR [RSP+16]
            movss DWORD PTR [RBX+8],XMM2
.L_409d18:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_409d6d

            add RSP,32
.L_409d2c:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409d38:

            pxor XMM3,XMM3
            mov EAX,EBP
            pxor XMM4,XMM4
            add EBP,EBP
            pxor XMM5,XMM5
            cvtsd2ss XMM3,QWORD PTR [RSP]
            movss DWORD PTR [RBX],XMM3
            cvtsd2ss XMM4,QWORD PTR [RSP+8]
            movss DWORD PTR [RBX+RAX*4],XMM4
            lea RAX,QWORD PTR [RBX+4]
            cvtsd2ss XMM5,QWORD PTR [RSP+16]
            movss DWORD PTR [RBX+RBP*4],XMM5
            jmp .L_409d18
.L_409d6d:

            call __stack_chk_fail@PLT
.L_409d72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409d80:

            movsd XMM0,QWORD PTR [RDX]
            mov EAX,DWORD PTR [RDI]
            divsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            test AH,16
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RSI],XMM0
            jne .L_409df0

            movsd XMM1,QWORD PTR [RDX+8]
            shr EAX,7
            movsd XMM0,QWORD PTR [RIP+.L_42df50]
            and EAX,7
            movsd XMM2,QWORD PTR [RIP+.L_42df58]
            lea RAX,QWORD PTR [RDX+RAX*8+24]
            addsd XMM1,XMM0
            pxor XMM3,XMM3
            addsd XMM0,QWORD PTR [RDX+16]
            pxor XMM4,XMM4
            divsd XMM1,XMM2
            divsd XMM0,XMM2
            cvtsd2ss XMM3,XMM1
            cvtsd2ss XMM4,XMM0
            movss DWORD PTR [RSI+4],XMM3
            movss DWORD PTR [RSI+8],XMM4
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409df0:

            mov EAX,ECX
            movsd XMM0,QWORD PTR [RIP+.L_42df50]
            movsd XMM1,QWORD PTR [RDX+RAX*8]
            add ECX,ECX
            movsd XMM2,QWORD PTR [RIP+.L_42df58]
            lea RAX,QWORD PTR [RDX+8]
            addsd XMM1,XMM0
            pxor XMM5,XMM5
            addsd XMM0,QWORD PTR [RDX+RCX*8]
            pxor XMM6,XMM6
            divsd XMM1,XMM2
            divsd XMM0,XMM2
            cvtsd2ss XMM5,XMM1
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RSI+4],XMM5
            movss DWORD PTR [RSI+8],XMM6
            ret 
.L_409e39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409e40:

            movss XMM0,DWORD PTR [RDX]
            mov EAX,DWORD PTR [RDI]
            divss XMM0,DWORD PTR [RIP+.L_42df68]
            test AH,16
            movss DWORD PTR [RSI],XMM0
            jne .L_409e98

            movss XMM1,DWORD PTR [RDX+4]
            shr EAX,7
            movss XMM0,DWORD PTR [RIP+.L_42df78]
            and EAX,7
            addss XMM1,XMM0
            movss XMM2,DWORD PTR [RIP+.L_42df7c]
            lea RAX,QWORD PTR [RDX+RAX*4+12]
            divss XMM1,XMM2
            movss DWORD PTR [RSI+4],XMM1
            addss XMM0,DWORD PTR [RDX+8]
            divss XMM0,XMM2
            movss DWORD PTR [RSI+8],XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409e98:

            mov EAX,ECX
            movss XMM0,DWORD PTR [RIP+.L_42df78]
            movss XMM1,DWORD PTR [RDX+RAX*4]
            add ECX,ECX
            addss XMM1,XMM0
            movss XMM2,DWORD PTR [RIP+.L_42df7c]
            lea RAX,QWORD PTR [RDX+4]
            divss XMM1,XMM2
            movss DWORD PTR [RSI+4],XMM1
            addss XMM0,DWORD PTR [RDX+RCX*4]
            divss XMM0,XMM2
            movss DWORD PTR [RSI+8],XMM0
            ret 
.L_409ed1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409ee0:

            movsd XMM0,QWORD PTR [RDX]
            mov EAX,DWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RIP+.L_42df60]
            divsd XMM0,XMM1
            test AH,16
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RSI],XMM0
            jne .L_409f40

            movsd XMM0,QWORD PTR [RDX+8]
            shr EAX,7
            pxor XMM2,XMM2
            and EAX,7
            divsd XMM0,XMM1
            lea RAX,QWORD PTR [RDX+RAX*8+24]
            pxor XMM3,XMM3
            cvtsd2ss XMM2,XMM0
            movsd XMM0,QWORD PTR [RDX+16]
            divsd XMM0,XMM1
            movss DWORD PTR [RSI+4],XMM2
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RSI+8],XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409f40:

            mov EAX,ECX
            pxor XMM4,XMM4
            movsd XMM0,QWORD PTR [RDX+RAX*8]
            add ECX,ECX
            pxor XMM5,XMM5
            lea RAX,QWORD PTR [RDX+8]
            divsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            movsd XMM0,QWORD PTR [RDX+RCX*8]
            divsd XMM0,XMM1
            movss DWORD PTR [RSI+4],XMM4
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RSI+8],XMM5
            ret 
.L_409f75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409f80:

            pxor XMM0,XMM0
            mov EAX,DWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RIP+.L_42df60]
            cvtss2sd XMM0,DWORD PTR [RDX]
            test AH,16
            divsd XMM0,XMM1
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RSI],XMM0
            jne .L_409fe8

            pxor XMM0,XMM0
            shr EAX,7
            pxor XMM2,XMM2
            and EAX,7
            pxor XMM3,XMM3
            lea RAX,QWORD PTR [RDX+RAX*4+12]
            cvtss2sd XMM0,DWORD PTR [RDX+4]
            divsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RSI+4],XMM2
            cvtss2sd XMM0,DWORD PTR [RDX+8]
            divsd XMM0,XMM1
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RSI+8],XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409fe8:

            pxor XMM0,XMM0
            mov EAX,ECX
            pxor XMM4,XMM4
            add ECX,ECX
            pxor XMM5,XMM5
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            lea RAX,QWORD PTR [RDX+4]
            divsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RSI+4],XMM4
            cvtss2sd XMM0,DWORD PTR [RDX+RCX*4]
            divsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RSI+8],XMM5
            ret 
.L_40a025:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a030:

            movss XMM0,DWORD PTR [RIP+.L_42df68]
            mov EAX,DWORD PTR [RDI+4]
            mulss XMM0,DWORD PTR [RSI]
            test AH,16
            movss DWORD PTR [RDX],XMM0
            jne .L_40a0a0

            pxor XMM1,XMM1
            shr EAX,7
            movsd XMM3,QWORD PTR [RIP+.L_42df58]
            and EAX,7
            movsd XMM2,QWORD PTR [RIP+.L_42df50]
            lea RAX,QWORD PTR [RDX+RAX*4+12]
            cvtss2sd XMM1,DWORD PTR [RSI+4]
            pxor XMM4,XMM4
            pxor XMM0,XMM0
            mulsd XMM1,XMM3
            pxor XMM5,XMM5
            subsd XMM1,XMM2
            cvtsd2ss XMM4,XMM1
            movss DWORD PTR [RDX+4],XMM4
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM0,XMM3
            subsd XMM0,XMM2
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RDX+8],XMM5
            ret 
.L_40a0a0:

            pxor XMM1,XMM1
            mov EAX,ECX
            movsd XMM3,QWORD PTR [RIP+.L_42df58]
            add ECX,ECX
            movsd XMM2,QWORD PTR [RIP+.L_42df50]
            cvtss2sd XMM1,DWORD PTR [RSI+4]
            pxor XMM6,XMM6
            pxor XMM0,XMM0
            mulsd XMM1,XMM3
            pxor XMM7,XMM7
            subsd XMM1,XMM2
            cvtsd2ss XMM6,XMM1
            movss DWORD PTR [RDX+RAX*4],XMM6
            lea RAX,QWORD PTR [RDX+4]
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM0,XMM3
            subsd XMM0,XMM2
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RDX+RCX*4],XMM7
            ret 
.L_40a0f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a100:

            pxor XMM2,XMM2
            mov EAX,DWORD PTR [RDI+4]
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            cvtss2sd XMM2,DWORD PTR [RSI]
            test AH,16
            cvtss2sd XMM1,DWORD PTR [RSI+4]
            movsd XMM4,QWORD PTR [RIP+.L_42df58]
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM2,QWORD PTR [RIP+.L_42d9c8]
            mulsd XMM1,XMM4
            mulsd XMM0,XMM4
            movsd XMM3,QWORD PTR [RIP+.L_42df50]
            subsd XMM1,XMM3
            subsd XMM0,XMM3
            movsd QWORD PTR [RDX],XMM2
            jne .L_40a168

            shr EAX,7
            movsd QWORD PTR [RDX+8],XMM1
            and EAX,7
            movsd QWORD PTR [RDX+16],XMM0
            lea RAX,QWORD PTR [RDX+RAX*8+24]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a168:

            mov EAX,ECX
            add ECX,ECX
            movsd QWORD PTR [RDX+RAX*8],XMM1
            lea RAX,QWORD PTR [RDX+8]
            movsd QWORD PTR [RDX+RCX*8],XMM0
            ret 
.L_40a17b:

            nop
            nop
            nop
            nop
            nop
.L_40a180:

            pxor XMM0,XMM0
            mov EAX,DWORD PTR [RDI+4]
            movsd XMM1,QWORD PTR [RIP+.L_42df60]
            cvtss2sd XMM0,DWORD PTR [RSI]
            test AH,16
            mulsd XMM0,XMM1
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            jne .L_40a1e8

            pxor XMM0,XMM0
            shr EAX,7
            pxor XMM2,XMM2
            and EAX,7
            pxor XMM3,XMM3
            lea RAX,QWORD PTR [RDX+RAX*4+12]
            cvtss2sd XMM0,DWORD PTR [RSI+4]
            mulsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RDX+4],XMM2
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM1,XMM0
            cvtsd2ss XMM3,XMM1
            movss DWORD PTR [RDX+8],XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a1e8:

            pxor XMM0,XMM0
            mov EAX,ECX
            pxor XMM4,XMM4
            add ECX,ECX
            pxor XMM5,XMM5
            cvtss2sd XMM0,DWORD PTR [RSI+4]
            mulsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RDX+RAX*4],XMM4
            lea RAX,QWORD PTR [RDX+4]
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM1,XMM0
            cvtsd2ss XMM5,XMM1
            movss DWORD PTR [RDX+RCX*4],XMM5
            ret 
.L_40a225:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a230:

            pxor XMM2,XMM2
            mov EAX,DWORD PTR [RDI+4]
            movsd XMM3,QWORD PTR [RIP+.L_42df60]
            pxor XMM1,XMM1
            cvtss2sd XMM2,DWORD PTR [RSI]
            pxor XMM0,XMM0
            test AH,16
            mulsd XMM2,XMM3
            cvtss2sd XMM1,DWORD PTR [RSI+4]
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
            movsd QWORD PTR [RDX],XMM2
            jne .L_40a280

            shr EAX,7
            movsd QWORD PTR [RDX+8],XMM1
            and EAX,7
            movsd QWORD PTR [RDX+16],XMM0
            lea RAX,QWORD PTR [RDX+RAX*8+24]
            ret 
.L_40a280:

            mov EAX,ECX
            add ECX,ECX
            movsd QWORD PTR [RDX+RAX*8],XMM1
            lea RAX,QWORD PTR [RDX+8]
            movsd QWORD PTR [RDX+RCX*8],XMM0
            ret 
.L_40a293:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a2a0:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RDI,RSI
            sub RSP,40
.L_40a2b0:

            mov RBX,RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test DWORD PTR [RBP],4096
            cvtss2sd XMM0,DWORD PTR [RDX]
            movsd QWORD PTR [RSP],XMM0
            jne .L_40a320

            pxor XMM0,XMM0
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDX+4]
            movsd QWORD PTR [RSP+8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDX+8]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40b3c0

            mov EAX,DWORD PTR [RBP]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*4+12]
.L_40a309:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40a350

            add RSP,40
.L_40a31d:

            pop RBX
            pop RBP
            ret 
.L_40a320:

            pxor XMM0,XMM0
            mov EAX,ECX
            add ECX,ECX
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            movsd QWORD PTR [RSP+8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDX+RCX*4]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40b3c0

            lea RAX,QWORD PTR [RBX+4]
            jmp .L_40a309
.L_40a350:

            call __stack_chk_fail@PLT
.L_40a355:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a360:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            mov RDI,RSI
            sub RSP,40
.L_40a36f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test DWORD PTR [RBP],4096
            jne .L_40a3b8

            mov RSI,RDX
            call .L_40b3c0

            mov EAX,DWORD PTR [RBP]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*8+24]
.L_40a39e:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40a3e9

            add RSP,40
.L_40a3b2:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a3b8:

            movsd XMM0,QWORD PTR [RDX]
            mov EAX,ECX
            add ECX,ECX
            mov RSI,RSP
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RDX+RAX*8]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RDX+RCX*8]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40b3c0

            lea RAX,QWORD PTR [RBX+8]
            jmp .L_40a39e
.L_40a3e9:

            call __stack_chk_fail@PLT
.L_40a3ee:

            nop
            nop
.L_40a3f0:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RDI,RSI
            sub RSP,40
.L_40a400:

            mov RBX,RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test DWORD PTR [RBP],4096
            cvtss2sd XMM0,DWORD PTR [RDX]
            movsd QWORD PTR [RSP],XMM0
            jne .L_40a470

            pxor XMM0,XMM0
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDX+4]
            movsd QWORD PTR [RSP+8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDX+8]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40b170

            mov EAX,DWORD PTR [RBP]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*4+12]
.L_40a459:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40a4a0

            add RSP,40
.L_40a46d:

            pop RBX
            pop RBP
            ret 
.L_40a470:

            pxor XMM0,XMM0
            mov EAX,ECX
            add ECX,ECX
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            movsd QWORD PTR [RSP+8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDX+RCX*4]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40b170

            lea RAX,QWORD PTR [RBX+4]
            jmp .L_40a459
.L_40a4a0:

            call __stack_chk_fail@PLT
.L_40a4a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a4b0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            mov RDI,RSI
            sub RSP,40
.L_40a4bf:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test DWORD PTR [RBP],4096
            jne .L_40a508

            mov RSI,RDX
            call .L_40b170

            mov EAX,DWORD PTR [RBP]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*8+24]
.L_40a4ee:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40a539

            add RSP,40
.L_40a502:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a508:

            movsd XMM0,QWORD PTR [RDX]
            mov EAX,ECX
            add ECX,ECX
            mov RSI,RSP
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RDX+RAX*8]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RDX+RCX*8]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40b170

            lea RAX,QWORD PTR [RBX+8]
            jmp .L_40a4ee
.L_40a539:

            call __stack_chk_fail@PLT
.L_40a53e:

            nop
            nop
.L_40a540:

            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,32
.L_40a54b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+5],16
            jne .L_40a5c0

            mov R12,RDI
            mov RDI,RSP
            call .L_40b570

            mov EAX,DWORD PTR [R12+4]
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            pxor XMM2,XMM2
            shr EAX,7
            cvtsd2ss XMM0,QWORD PTR [RSP]
            movss DWORD PTR [RBX],XMM0
            and EAX,7
            cvtsd2ss XMM1,QWORD PTR [RSP+8]
            movss DWORD PTR [RBX+4],XMM1
            cvtsd2ss XMM2,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RBX+RAX*4+12]
            movss DWORD PTR [RBX+8],XMM2
.L_40a5a7:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40a5ff

            add RSP,32
.L_40a5bb:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40a5c0:

            mov RDI,RSP
            mov EBP,ECX
            call .L_40b570

            pxor XMM3,XMM3
            mov EAX,EBP
            pxor XMM4,XMM4
            add EBP,EBP
            pxor XMM5,XMM5
            cvtsd2ss XMM3,QWORD PTR [RSP]
            movss DWORD PTR [RBX],XMM3
            cvtsd2ss XMM4,QWORD PTR [RSP+8]
            movss DWORD PTR [RBX+RAX*4],XMM4
            lea RAX,QWORD PTR [RBX+4]
            cvtsd2ss XMM5,QWORD PTR [RSP+16]
            movss DWORD PTR [RBX+RBP*4],XMM5
            jmp .L_40a5a7
.L_40a5ff:

            call __stack_chk_fail@PLT
.L_40a604:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a610:

            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,32
.L_40a61b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+5],16
            jne .L_40a668

            mov R12,RDI
            mov RDI,RDX
            call .L_40b570

            mov EAX,DWORD PTR [R12+4]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*8+24]
.L_40a64c:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40a69b

            add RSP,32
.L_40a660:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a668:

            mov RDI,RSP
            mov EBP,ECX
            call .L_40b570

            movsd XMM0,QWORD PTR [RSP]
            mov EAX,EBP
            add EBP,EBP
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+RAX*8],XMM0
            lea RAX,QWORD PTR [RBX+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBX+RBP*8],XMM0
            jmp .L_40a64c
.L_40a69b:

            call __stack_chk_fail@PLT
.L_40a6a0:

            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,32
.L_40a6ab:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+5],16
            jne .L_40a6f8

            mov R12,RDI
            mov RDI,RDX
            call .L_40af80

            mov EAX,DWORD PTR [R12+4]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*8+24]
.L_40a6dc:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40a72b

            add RSP,32
.L_40a6f0:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a6f8:

            mov RDI,RSP
            mov EBP,ECX
            call .L_40af80

            movsd XMM0,QWORD PTR [RSP]
            mov EAX,EBP
            add EBP,EBP
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+RAX*8],XMM0
            lea RAX,QWORD PTR [RBX+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBX+RBP*8],XMM0
            jmp .L_40a6dc
.L_40a72b:

            call __stack_chk_fail@PLT
.L_40a730:

            push R12
            push RBP
            push RBX
            sub RSP,16
.L_40a738:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_40a83b

            test RSI,RSI
            mov R12,RDI
            je .L_40a800

            mov RAX,QWORD PTR [RSI+72]
            mov QWORD PTR [RSP],0
            test RAX,RAX
            je .L_40a81c

            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_40a7cb

            xor EBP,EBP
            jmp .L_40a78c
          .byte 0x66
          .byte 0x90
.L_40a780:

            mov RBX,QWORD PTR [RBX+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_40a7cb
.L_40a78c:

            mov RDI,QWORD PTR [R12+8]
            mov EDX,16
            mov RSI,RBX
            call .L_4212e0

            test RAX,RAX
            je .L_40a7e2

            test RBP,RBP
            mov QWORD PTR [RAX+8],0
            je .L_40a7b4

            mov QWORD PTR [RBP+8],RAX
.L_40a7b4:

            cmp QWORD PTR [RSP],0
            jne .L_40a780

            mov RBX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP],RAX
            mov RBP,RAX
            test RBX,RBX
            jne .L_40a78c
.L_40a7cb:

            mov RDI,QWORD PTR [R12+8]
            mov RSI,RSP
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+72],RAX
.L_40a7e2:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40a85a

            add RSP,16
.L_40a7f6:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a800:

            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641c90]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+72],RAX
            jmp .L_40a7e2
.L_40a81c:

            lea RCX,QWORD PTR [RIP+.L_42def0]
            lea RSI,QWORD PTR [RIP+.L_42deb0]
            lea RDI,QWORD PTR [RIP+.L_42decf]
            mov EDX,3223
            call __assert_fail@PLT
.L_40a83b:

            lea RCX,QWORD PTR [RIP+.L_42df10]
            lea RSI,QWORD PTR [RIP+.L_42deb0]
            lea RDI,QWORD PTR [RIP+.L_42deba]
            mov EDX,3253
            call __assert_fail@PLT
.L_40a85a:

            call __stack_chk_fail@PLT
.L_40a85f:

            nop
.L_40a860:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_40a867:

            mov ESI,7
            mov RBX,RDI
            call .L_4068a0

            test RBP,RBP
            mov R12,RAX
            je .L_40a8b0

            mov ESI,16
            mov RDI,RBX
            call .L_4064d0

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_40a8ab

            mov RAX,QWORD PTR [RBP+24]
            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RDX+8],RAX
            mov QWORD PTR [R12],RDX
            mov EAX,1
.L_40a8ab:

            pop RBX
.L_40a8ac:

            pop RBP
            pop R12
            ret 
.L_40a8b0:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_40a8c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a8d0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,7
            mov R12D,ECX
            sub RSP,8
            call .L_4068a0

            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            jne .L_40a909

            jmp .L_40a928
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a900:

            mov RBX,QWORD PTR [RBX+8]
            test RBX,RBX
            je .L_40a928
.L_40a909:

            mov EDX,R12D
            mov ESI,R13D
            mov EDI,EBP
            call QWORD PTR [RBX]

            test RAX,RAX
            je .L_40a900

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a928:

            test R13D,R13D
            je .L_40a970

            and EBP,4292870143
            test R12D,R12D
            je .L_40a9a0

            cmp R12D,1
            jne .L_40a95d

            lea RDX,QWORD PTR [RIP+.L_63e260]
            lea RCX,QWORD PTR [RDX+112]
.L_40a949:

            mov EAX,DWORD PTR [RDX+4]
            not EAX
            and EAX,EBP
            cmp EAX,DWORD PTR [RDX]
            je .L_40a9c4

            add RDX,16
            cmp RCX,RDX
            jne .L_40a949
.L_40a95d:

            xor EAX,EAX
.L_40a95f:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a970:

            test R12D,R12D
            je .L_40a9d8

            cmp R12D,1
            jne .L_40a95d

            lea RDX,QWORD PTR [RIP+.L_63e660]
            lea RCX,QWORD PTR [RDX+112]
.L_40a986:

            mov EAX,DWORD PTR [RDX+4]
            not EAX
            and EAX,EBP
            cmp EAX,DWORD PTR [RDX]
            je .L_40a9c4

            add RDX,16
            cmp RCX,RDX
            jne .L_40a986

            xor EAX,EAX
            jmp .L_40a95f
          .byte 0x66
          .byte 0x90
.L_40a9a0:

            lea RDX,QWORD PTR [RIP+.L_63e2e0]
            lea RCX,QWORD PTR [RDX+880]
            jmp .L_40a9b9
.L_40a9b0:

            add RDX,16
            cmp RDX,RCX
            je .L_40a95d
.L_40a9b9:

            mov EAX,DWORD PTR [RDX+4]
            not EAX
            and EAX,EBP
            cmp EAX,DWORD PTR [RDX]
            jne .L_40a9b0
.L_40a9c4:

            mov RAX,QWORD PTR [RDX+8]
            add RSP,8
.L_40a9cc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a9d8:

            lea RDX,QWORD PTR [RIP+.L_63e6e0]
            lea RCX,QWORD PTR [RDX+688]
            jmp .L_40a9fd
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a9f0:

            add RDX,16
            cmp RCX,RDX
            je .L_40a95d
.L_40a9fd:

            mov EAX,DWORD PTR [RDX+4]
            not EAX
            and EAX,EBP
            cmp EAX,DWORD PTR [RDX]
            jne .L_40a9f0

            jmp .L_40a9c4
.L_40aa0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40aa10:

            mov EAX,EDI
            shr EAX,22
            and EAX,1
            ret 
.L_40aa19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40aa20:

            and EDI,7
            xor EAX,EAX
            cmp EDI,1
            sete AL
            ret 
.L_40aa2c:

            nop
            nop
            nop
            nop
.L_40aa30:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12D,ESI
            sub RSP,8
            call .L_403530

            mov EBP,EAX
            mov EDI,EAX
            call .L_40c9e0

            mov EDI,EBP
            mov EBX,EAX
            call .L_40ccf0

            xor EDX,EDX
            test R13D,R13D
            setne DL
            shl EAX,3
            add RSP,8
            shl EDX,22
            shl EBX,16
            mov ESI,EDX
            or ESI,R12D
            or EAX,ESI
            or EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40aa7c:

            nop
            nop
            nop
            nop
.L_40aa80:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12D,ESI
            sub RSP,8
            call .L_403510

            mov EBP,EAX
            mov EDI,EAX
            call .L_40c9e0

            mov EDI,EBP
            mov EBX,EAX
            call .L_40ccf0

            xor EDX,EDX
            test R13D,R13D
            setne DL
            shl EAX,3
            add RSP,8
            shl EDX,22
            shl EBX,16
            mov ESI,EDX
            or ESI,R12D
            or EAX,ESI
            or EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40aacc:

            nop
            nop
            nop
            nop
.L_40aad0:

            pxor XMM3,XMM3
            mov EDX,0
            ucomisd XMM0,XMM3
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_40ab00

            ucomisd XMM1,XMM3
            pxor XMM2,XMM2
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_40ab00

            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0x90
.L_40ab00:

            sub RSP,24
.L_40ab04:

            movsd QWORD PTR [RSP+8],XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RIP+.L_42dff8]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42e000]
            ucomisd XMM2,XMM0
            jbe .L_40ab44

            nop
.L_40ab30:

            subsd XMM2,XMM0
            ucomisd XMM2,XMM0
            ja .L_40ab30

            ucomisd XMM3,XMM2
            jbe .L_40ab4a
.L_40ab40:

            addsd XMM2,XMM0
.L_40ab44:

            ucomisd XMM3,XMM2
            ja .L_40ab40
.L_40ab4a:

            movapd XMM0,XMM2
            add RSP,24
.L_40ab52:

            ret 
.L_40ab53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ab60:

            sub RSP,8
.L_40ab64:

            ucomisd XMM0,QWORD PTR [RIP+.L_42e008]
            ja .L_40abb0

            divsd XMM0,QWORD PTR [RIP+.L_42e020]
            mulsd XMM0,QWORD PTR [RIP+.L_42d9c8]
.L_40ab7e:

            addsd XMM0,QWORD PTR [RIP+.L_42e028]
            call log@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_42e030]
            mulsd XMM0,QWORD PTR [RIP+.L_42e038]
            subsd XMM0,QWORD PTR [RIP+.L_42e040]
            add RSP,8
.L_40aba7:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40abb0:

            addsd XMM0,QWORD PTR [RIP+.L_42e010]
            divsd XMM0,QWORD PTR [RIP+.L_42e018]
            movapd XMM1,XMM0
            mulsd XMM1,XMM0
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            jmp .L_40ab7e
.L_40abd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40abe0:

            movsd XMM1,QWORD PTR [RSI]
            movsd XMM2,QWORD PTR [RSI+8]
            movapd XMM3,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            addsd XMM3,XMM2
            addsd XMM3,QWORD PTR [RSI+16]
            movsd QWORD PTR [RDI+16],XMM2
            divsd XMM0,XMM3
            mulsd XMM1,XMM0
            mulsd XMM0,XMM2
            movsd QWORD PTR [RDI],XMM1
            movsd QWORD PTR [RDI+8],XMM0
            ret 
.L_40ac19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ac20:

            movsd XMM3,QWORD PTR [RSI]
            movsd XMM2,QWORD PTR [RSI+8]
            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RSI+16]
            divsd XMM0,XMM2
            movsd QWORD PTR [RDI+8],XMM1
            mulsd XMM0,XMM1
            movsd QWORD PTR [RDI],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            subsd XMM0,XMM3
            subsd XMM0,XMM2
            divsd XMM0,XMM2
            mulsd XMM0,XMM1
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_40ac61:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ac70:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,16
.L_40ac81:

            test RDI,RDI
            je .L_40add0
.L_40ac8a:

            movsd XMM0,QWORD PTR [R12]
            movsd XMM4,QWORD PTR [RIP+.L_42e048]
            divsd XMM0,QWORD PTR [RBX]
            ucomisd XMM4,XMM0
            jb .L_40ada8

            mulsd XMM0,QWORD PTR [RIP+.L_42e050]
            movsd XMM3,QWORD PTR [RIP+.L_42e058]
            addsd XMM3,XMM0
.L_40acba:

            movsd XMM0,QWORD PTR [R12+8]
            divsd XMM0,QWORD PTR [RBX+8]
            ucomisd XMM4,XMM0
            jb .L_40ad78

            mulsd XMM0,QWORD PTR [RIP+.L_42e050]
            movsd XMM2,QWORD PTR [RIP+.L_42e058]
            addsd XMM2,XMM0
.L_40ace4:

            movsd XMM0,QWORD PTR [R12+16]
            divsd XMM0,QWORD PTR [RBX+16]
            ucomisd XMM4,XMM0
            jb .L_40ad50

            mulsd XMM0,QWORD PTR [RIP+.L_42e050]
            addsd XMM0,QWORD PTR [RIP+.L_42e058]
.L_40ad06:

            movsd XMM1,QWORD PTR [RIP+.L_42e018]
            subsd XMM3,XMM2
            mulsd XMM1,XMM2
            subsd XMM2,XMM0
            mulsd XMM3,QWORD PTR [RIP+.L_42e068]
            subsd XMM1,QWORD PTR [RIP+.L_42e010]
            mulsd XMM2,QWORD PTR [RIP+.L_42e070]
            movsd QWORD PTR [RBP+8],XMM3
            movsd QWORD PTR [RBP],XMM1
            movsd QWORD PTR [RBP+16],XMM2
            add RSP,16
.L_40ad45:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ad50:

            movsd XMM1,QWORD PTR [RIP+.L_42e060]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_40ad06
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ad78:

            movsd XMM1,QWORD PTR [RIP+.L_42e060]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM3
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_40ace4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ada8:

            movsd XMM1,QWORD PTR [RIP+.L_42e060]
            movsd QWORD PTR [RSP],XMM4
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM3,XMM0
            jmp .L_40acba
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40add0:

            call .L_40cfe0

            mov RBX,RAX
            jmp .L_40ac8a
.L_40addd:

            nop
            nop
            nop
.L_40ade0:

            sub RSP,24
.L_40ade4:

            test RDI,RDI
            je .L_40aef8
.L_40aded:

            movsd XMM0,QWORD PTR [RIP+.L_42e010]
            movsd XMM1,QWORD PTR [RIP+.L_42e078]
            addsd XMM0,QWORD PTR [RDX]
            movsd XMM2,QWORD PTR [RIP+.L_42e080]
            mulsd XMM1,QWORD PTR [RDX+8]
            mulsd XMM2,QWORD PTR [RDX+16]
            movsd XMM4,QWORD PTR [RIP+.L_42e088]
            divsd XMM0,QWORD PTR [RIP+.L_42e018]
            addsd XMM1,XMM0
            movapd XMM5,XMM0
            subsd XMM5,XMM2
            ucomisd XMM4,XMM1
            movapd XMM2,XMM5
            jb .L_40ae98

            subsd XMM1,QWORD PTR [RIP+.L_42e058]
            ucomisd XMM4,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_42e090]
            mulsd XMM1,QWORD PTR [RDI]
            movsd QWORD PTR [RSI],XMM1
            jb .L_40aeb2
.L_40ae57:

            subsd XMM0,QWORD PTR [RIP+.L_42e058]
            ucomisd XMM4,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_42e090]
            mulsd XMM0,QWORD PTR [RDI+8]
            movsd QWORD PTR [RSI+8],XMM0
            jae .L_40aece
.L_40ae77:

            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RDI+16]
            movsd QWORD PTR [RSI+16],XMM0
            add RSP,24
.L_40ae91:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ae98:

            movapd XMM3,XMM1
            ucomisd XMM4,XMM0
            mulsd XMM3,XMM1
            mulsd XMM1,XMM3
            mulsd XMM1,QWORD PTR [RDI]
            movsd QWORD PTR [RSI],XMM1
            jae .L_40ae57
.L_40aeb2:

            movapd XMM1,XMM0
            ucomisd XMM4,XMM2
            mulsd XMM1,XMM0
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RDI+8]
            movsd QWORD PTR [RSI+8],XMM0
            jb .L_40ae77
.L_40aece:

            subsd XMM2,QWORD PTR [RIP+.L_42e058]
            movsd XMM0,QWORD PTR [RIP+.L_42e090]
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RDI+16]
            movsd QWORD PTR [RSI+16],XMM0
            add RSP,24
.L_40aef0:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aef8:

            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP],RSI
            call .L_40cfe0

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,RAX
            mov RSI,QWORD PTR [RSP]
            jmp .L_40aded
.L_40af17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40af20:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_42dea8]
            movsd XMM2,QWORD PTR [RIP+.L_42df50]
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RSI+2]
            cvtsi2sd XMM1,EAX
            movzx EAX,WORD PTR [RSI+4]
            divsd XMM0,QWORD PTR [RIP+.L_42e098]
            mulsd XMM1,XMM3
            subsd XMM1,XMM2
            movsd QWORD PTR [RDI],XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movsd QWORD PTR [RDI+8],XMM1
            mulsd XMM0,XMM3
            subsd XMM0,XMM2
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_40af7a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40af80:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_42e0a0]
            movsd XMM1,QWORD PTR [RIP+.L_42df50]
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RSI+2]
            divsd XMM0,QWORD PTR [RIP+.L_42df48]
            movsd QWORD PTR [RDI],XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RSI+4]
            divsd XMM0,XMM2
            subsd XMM0,XMM1
            movsd QWORD PTR [RDI+8],XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM2
            subsd XMM0,XMM1
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_40afda:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40afe0:

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RSI]
            ucomisd XMM3,XMM0
            ja .L_40b110

            ucomisd XMM0,QWORD PTR [RIP+.L_42e0b8]
            movsd XMM2,QWORD PTR [RIP+.L_42e0a8]
            jbe .L_40b120
.L_40b008:

            movsd XMM0,QWORD PTR [RSI+8]
            movsd XMM4,QWORD PTR [RIP+.L_42e0c0]
            movsd XMM1,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM4,XMM0
            ja .L_40b039

            ucomisd XMM0,QWORD PTR [RIP+.L_42e0c8]
            jbe .L_40b139

            movsd XMM1,QWORD PTR [RIP+.L_42e0b0]
.L_40b039:

            movsd XMM5,QWORD PTR [RSI+16]
            movsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM4,XMM5
            ja .L_40b062

            ucomisd XMM5,QWORD PTR [RIP+.L_42e0c8]
            jbe .L_40b152

            movsd XMM0,QWORD PTR [RIP+.L_42e0b0]
.L_40b062:

            xor EAX,EAX
            ucomisd XMM3,XMM2
            jae .L_40b079

            ucomisd XMM2,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jb .L_40b0f0
.L_40b079:

            mov WORD PTR [RDI],AX
            xor EAX,EAX
            ucomisd XMM3,XMM1
            jae .L_40b093

            ucomisd XMM1,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jb .L_40b0d0
.L_40b093:

            mov WORD PTR [RDI+2],AX
            xor EAX,EAX
            ucomisd XMM3,XMM0
            jae .L_40b0c9

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jae .L_40b0c9

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_40b0c9:

            mov WORD PTR [RDI+4],AX
            ret 
          .byte 0x66
          .byte 0x90
.L_40b0d0:

            subsd XMM1,QWORD PTR [RIP+.L_42df38]
            addsd XMM1,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM1
            sar EAX,16
            add AX,32767
            jmp .L_40b093
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b0f0:

            subsd XMM2,QWORD PTR [RIP+.L_42df38]
            addsd XMM2,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM2
            sar EAX,16
            add AX,32767
            jmp .L_40b079
.L_40b110:

            movsd XMM2,QWORD PTR [RIP+.L_42d568]
            jmp .L_40b008
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b120:

            movsd XMM2,QWORD PTR [RIP+.L_42e098]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_42d568]
            jmp .L_40b008
.L_40b139:

            addsd XMM0,QWORD PTR [RIP+.L_42df50]
            mulsd XMM0,QWORD PTR [RIP+.L_42e0d0]
            addsd XMM1,XMM0
            jmp .L_40b039
.L_40b152:

            addsd XMM5,QWORD PTR [RIP+.L_42df50]
            movsd XMM4,QWORD PTR [RIP+.L_42e0d0]
            mulsd XMM4,XMM5
            addsd XMM0,XMM4
            jmp .L_40b062
.L_40b16f:

            nop
.L_40b170:

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RSI]
            ucomisd XMM3,XMM0
            ja .L_40b2a0

            ucomisd XMM0,QWORD PTR [RIP+.L_42d9c8]
            movsd XMM2,QWORD PTR [RIP+.L_42e0b0]
            jbe .L_40b2b0
.L_40b198:

            movsd XMM0,QWORD PTR [RSI+8]
            movsd XMM4,QWORD PTR [RIP+.L_42e0c0]
            movsd XMM1,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM4,XMM0
            ja .L_40b1c9

            ucomisd XMM0,QWORD PTR [RIP+.L_42e0d8]
            jbe .L_40b2c9

            movsd XMM1,QWORD PTR [RIP+.L_42e0b0]
.L_40b1c9:

            movsd XMM5,QWORD PTR [RSI+16]
            movsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM4,XMM5
            ja .L_40b1f2

            ucomisd XMM5,QWORD PTR [RIP+.L_42e0d8]
            jbe .L_40b2e2

            movsd XMM0,QWORD PTR [RIP+.L_42e0b0]
.L_40b1f2:

            xor EAX,EAX
            ucomisd XMM3,XMM2
            jae .L_40b209

            ucomisd XMM2,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jb .L_40b280
.L_40b209:

            mov WORD PTR [RDI],AX
            xor EAX,EAX
            ucomisd XMM3,XMM1
            jae .L_40b223

            ucomisd XMM1,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jb .L_40b260
.L_40b223:

            mov WORD PTR [RDI+2],AX
            xor EAX,EAX
            ucomisd XMM3,XMM0
            jae .L_40b259

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jae .L_40b259

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_40b259:

            mov WORD PTR [RDI+4],AX
            ret 
          .byte 0x66
          .byte 0x90
.L_40b260:

            subsd XMM1,QWORD PTR [RIP+.L_42df38]
            addsd XMM1,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM1
            sar EAX,16
            add AX,32767
            jmp .L_40b223
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b280:

            subsd XMM2,QWORD PTR [RIP+.L_42df38]
            addsd XMM2,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM2
            sar EAX,16
            add AX,32767
            jmp .L_40b209
.L_40b2a0:

            movsd XMM2,QWORD PTR [RIP+.L_42d568]
            jmp .L_40b198
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b2b0:

            movsd XMM2,QWORD PTR [RIP+.L_42df48]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_42d568]
            jmp .L_40b198
.L_40b2c9:

            addsd XMM0,QWORD PTR [RIP+.L_42df50]
            mulsd XMM0,QWORD PTR [RIP+.L_42e0a0]
            addsd XMM1,XMM0
            jmp .L_40b1c9
.L_40b2e2:

            addsd XMM5,QWORD PTR [RIP+.L_42df50]
            movsd XMM4,QWORD PTR [RIP+.L_42e0a0]
            mulsd XMM4,XMM5
            addsd XMM0,XMM4
            jmp .L_40b1f2
.L_40b2ff:

            nop
.L_40b300:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
.L_40b30c:

            movsd XMM0,QWORD PTR [RSI]
            movsd XMM1,QWORD PTR [RSI+16]
            movsd QWORD PTR [RDI],XMM0
            movsd XMM0,QWORD PTR [RSI+8]
            mulsd XMM1,XMM1
            mulsd XMM0,XMM0
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42d568]
            call pow@PLT

            movsd XMM1,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            call .L_40aad0

            movsd QWORD PTR [RBP+16],XMM0
            add RSP,8
.L_40b354:

            pop RBX
            pop RBP
            ret 
.L_40b357:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b360:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,24
.L_40b36c:

            movsd XMM0,QWORD PTR [RIP+.L_42e0e0]
            lea RDI,QWORD PTR [RSP+8]
            mov RSI,RSP
            mulsd XMM0,QWORD PTR [RBP+16]
            divsd XMM0,QWORD PTR [RIP+.L_42e0e8]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RBP+8]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+8],XMM1
            movsd QWORD PTR [RBX+16],XMM0
            add RSP,24
.L_40b3b9:

            pop RBX
            pop RBP
            ret 
.L_40b3bc:

            nop
            nop
            nop
            nop
.L_40b3c0:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RSI+8]
            movsd XMM2,QWORD PTR [RSI]
            ucomisd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSI+16]
            jae .L_40b4e0

            movsd XMM5,QWORD PTR [RIP+.L_42df60]
            movsd XMM3,QWORD PTR [RIP+.L_42e0b0]
            ucomisd XMM2,XMM5
            jbe .L_40b540
.L_40b3f6:

            ucomisd XMM1,XMM5
            movsd XMM2,QWORD PTR [RIP+.L_42e0b0]
            jbe .L_40b510
.L_40b408:

            ucomisd XMM4,XMM5
            movsd XMM1,QWORD PTR [RIP+.L_42e0b0]
            ja .L_40b428

            ucomisd XMM0,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_42d568]
            jbe .L_40b528
.L_40b428:

            xor EAX,EAX
            ucomisd XMM0,XMM3
            jae .L_40b43f

            ucomisd XMM3,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jb .L_40b4b8
.L_40b43f:

            mov WORD PTR [RDI],AX
            xor EAX,EAX
            ucomisd XMM0,XMM2
            jae .L_40b459

            ucomisd XMM2,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jb .L_40b498
.L_40b459:

            mov WORD PTR [RDI+2],AX
            xor EAX,EAX
            ucomisd XMM0,XMM1
            jae .L_40b48f

            ucomisd XMM1,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jae .L_40b48f

            subsd XMM1,QWORD PTR [RIP+.L_42df38]
            addsd XMM1,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM1
            sar EAX,16
            add AX,32767
.L_40b48f:

            mov WORD PTR [RDI+4],AX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b498:

            subsd XMM2,QWORD PTR [RIP+.L_42df38]
            addsd XMM2,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM2
            sar EAX,16
            add AX,32767
            jmp .L_40b459
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b4b8:

            subsd XMM3,QWORD PTR [RIP+.L_42df38]
            addsd XMM3,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM3
            sar EAX,16
            add AX,32767
            jmp .L_40b43f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b4e0:

            movsd XMM2,QWORD PTR [RIP+.L_42d568]
            pxor XMM4,XMM4
            pxor XMM1,XMM1
            movapd XMM3,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_42df60]
.L_40b4fc:

            mulsd XMM1,QWORD PTR [RIP+.L_42e0f0]
            addsd XMM2,XMM1
            jmp .L_40b408
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b510:

            ucomisd XMM0,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_42d568]
            ja .L_40b408

            jmp .L_40b4fc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b528:

            mulsd XMM4,QWORD PTR [RIP+.L_42e0f0]
            addsd XMM1,XMM4
            jmp .L_40b428
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b540:

            ucomisd XMM0,XMM2
            jbe .L_40b553

            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            jmp .L_40b3f6
.L_40b553:

            movsd XMM3,QWORD PTR [RIP+.L_42e0f0]
            mulsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_42d568]
            addsd XMM3,XMM2
            jmp .L_40b3f6
.L_40b570:

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,8
            movzx EDI,WORD PTR [RSI]
            add EDI,EDI
            call .L_405de0

            movzx EDI,WORD PTR [RBP+2]
            movsd QWORD PTR [RBX],XMM0
            add EDI,EDI
            call .L_405de0

            movzx EDI,WORD PTR [RBP+4]
            movsd QWORD PTR [RBX+8],XMM0
            add EDI,EDI
            call .L_405de0

            movsd QWORD PTR [RBX+16],XMM0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40b5b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b5c0:

            movsd XMM1,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RDI+8]
            subsd XMM1,QWORD PTR [RSI]
            movsd XMM2,QWORD PTR [RDI+16]
            subsd XMM0,QWORD PTR [RSI+8]
            subsd XMM2,QWORD PTR [RSI+16]
            mulsd XMM1,XMM1
            mulsd XMM0,XMM0
            mulsd XMM2,XMM2
            addsd XMM1,XMM0
            addsd XMM1,XMM2
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42d568]
            jmp pow@PLT
.L_40b601:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b610:

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,120
.L_40b61c:

            movsd XMM3,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            subsd XMM3,QWORD PTR [RSI]
            mov RSI,RBX
            movsd QWORD PTR [RSP+16],XMM3
            call .L_40b300

            lea RDI,QWORD PTR [RSP+80]
            mov RSI,RBP
            call .L_40b300

            movsd XMM2,QWORD PTR [RSP+56]
            mov RSI,RBP
            mov RDI,RBX
            subsd XMM2,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_40b5c0

            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM0
            mulsd XMM3,XMM3
            movsd XMM2,QWORD PTR [RSP+8]
            pxor XMM5,XMM5
            mulsd XMM2,XMM2
            subsd XMM0,XMM3
            pxor XMM4,XMM4
            subsd XMM0,XMM2
            ucomisd XMM5,XMM0
            ja .L_40b6d4

            movsd XMM1,QWORD PTR [RIP+.L_42d568]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call pow@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM4,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
.L_40b6d4:

            movsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+88]
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40b753
.L_40b6ea:

            movsd XMM0,QWORD PTR [RIP+.L_42e0f8]
            movsd XMM6,QWORD PTR [RIP+.L_42d9d8]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_42e100]
            mulsd XMM4,XMM4
            addsd XMM0,XMM6
            addsd XMM1,XMM6
            mulsd XMM0,XMM0
            mulsd XMM1,XMM1
            divsd XMM2,XMM0
            divsd XMM4,XMM1
            movapd XMM0,XMM2
            addsd XMM0,XMM3
            addsd XMM0,XMM4
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40b799
.L_40b738:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM1
            jne .L_40b7ac

            add RSP,120
.L_40b750:

            pop RBX
            pop RBP
            ret 
.L_40b753:

            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_40b6ea
.L_40b799:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40b738
.L_40b7ac:

            call __stack_chk_fail@PLT
.L_40b7b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b7c0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,216
.L_40b7cf:

            movsd XMM0,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_40ab60

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBP]
            call .L_40ab60

            movapd XMM6,XMM0
            lea RDI,QWORD PTR [RSP+144]
            mov RSI,RBX
            subsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM6
            call .L_40b300

            lea RDI,QWORD PTR [RSP+176]
            mov RSI,RBP
            call .L_40b300

            movsd XMM3,QWORD PTR [RSP+184]
            mov RSI,RBP
            movsd XMM0,QWORD PTR [RSP+152]
            mov RDI,RBX
            movapd XMM2,XMM3
            addsd XMM3,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_42d568]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+160]
            addsd XMM0,QWORD PTR [RSP+192]
            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+24],XMM3
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call .L_40b5c0

            movsd XMM1,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM1,QWORD PTR [RBX]
            mulsd XMM0,XMM0
            movapd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM2,XMM4
            mulsd XMM1,XMM1
            movapd XMM4,XMM1
            addsd XMM4,XMM2
            ucomisd XMM0,XMM4
            ja .L_40bc90

            pxor XMM8,XMM8
            movsd QWORD PTR [RSP+136],XMM8
.L_40b8ce:

            movsd XMM1,QWORD PTR [RIP+.L_42e110]
            movapd XMM2,XMM3
            movsd XMM0,QWORD PTR [RIP+.L_42e108]
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
            mulsd XMM2,XMM3
            addsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42e120]
            addsd XMM0,QWORD PTR [RIP+.L_42e118]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            addsd XMM1,XMM0
            divsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM9,XMM0
            ja .L_40bd1a
.L_40b930:

            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+128],XMM8
            subsd XMM0,QWORD PTR [RIP+.L_42e128]
            movsd QWORD PTR [RSP+112],XMM2
            movsd QWORD PTR [RSP+104],XMM3
            movsd QWORD PTR [RSP+120],XMM9
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movapd XMM7,XMM0
            addsd XMM7,XMM0
            movapd XMM6,XMM7
            movsd QWORD PTR [RSP+96],XMM7
            subsd XMM6,QWORD PTR [RIP+.L_42e130]
            movapd XMM0,XMM6
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+56],XMM0
            mulsd XMM6,QWORD PTR [RIP+.L_42e138]
            movapd XMM7,XMM6
            movsd QWORD PTR [RSP+88],XMM6
            subsd XMM7,QWORD PTR [RIP+.L_42e140]
            movapd XMM0,XMM7
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+48],XMM0
            mulsd XMM5,QWORD PTR [RIP+.L_42e148]
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+80],XMM5
            addsd XMM0,QWORD PTR [RIP+.L_42e150]
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+40],XMM0
            mulsd XMM4,QWORD PTR [RIP+.L_42e158]
            movapd XMM7,XMM4
            movsd QWORD PTR [RSP+72],XMM4
            subsd XMM7,QWORD PTR [RIP+.L_42e160]
            movapd XMM0,XMM7
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM12,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RIP+.L_42e168]
            mulsd XMM12,QWORD PTR [RIP+.L_42e170]
            movsd XMM11,QWORD PTR [RSP+48]
            movsd XMM10,QWORD PTR [RSP+40]
            mulsd XMM11,QWORD PTR [RIP+.L_42e178]
            mulsd XMM10,QWORD PTR [RIP+.L_42e180]
            mulsd XMM0,QWORD PTR [RIP+.L_42e188]
            subsd XMM1,XMM12
            addsd XMM1,XMM11
            addsd XMM1,XMM10
            subsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_42e190]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM9,QWORD PTR [RSP+120]
            subsd XMM0,QWORD PTR [RIP+.L_42e198]
            mulsd XMM1,XMM9
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            addsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            subsd XMM1,XMM9
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+40],XMM1
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+64],XMM0
            subsd XMM7,QWORD PTR [RIP+.L_42e1a0]
            movapd XMM0,XMM7
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42e128]
            addsd XMM0,XMM6
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+48],XMM0
            addsd XMM5,QWORD PTR [RIP+.L_42e1a8]
            movapd XMM0,XMM5
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+8],XMM0
            addsd XMM4,QWORD PTR [RIP+.L_42e1b0]
            movapd XMM0,XMM4
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RIP+.L_42e1b8]
            mulsd XMM7,QWORD PTR [RIP+.L_42e1c0]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM6,QWORD PTR [RIP+.L_42e1c8]
            mulsd XMM5,QWORD PTR [RIP+.L_42e1d0]
            mulsd XMM0,QWORD PTR [RIP+.L_42e1d8]
            subsd XMM1,XMM7
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+112]
            movsd XMM8,QWORD PTR [RSP+128]
            mulsd XMM2,XMM3
            subsd XMM1,XMM6
            addsd XMM1,XMM5
            subsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM3
            mulsd XMM0,XMM3
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42e1e0]
            addsd XMM0,XMM3
            divsd XMM3,XMM0
            ucomisd XMM8,XMM3
            sqrtsd XMM4,XMM3
            ja .L_40bce6
.L_40bc0e:

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+136]
            divsd XMM2,QWORD PTR [RSP+24]
            divsd XMM3,QWORD PTR [RSP+40]
            movapd XMM5,XMM2
            movsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM5,XMM2
            mulsd XMM0,XMM0
            mulsd XMM1,XMM4
            addsd XMM0,XMM5
            movapd XMM5,XMM3
            mulsd XMM1,XMM2
            mulsd XMM5,XMM3
            mulsd XMM1,XMM3
            addsd XMM0,XMM5
            addsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40bcd3
.L_40bc66:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM2
            jne .L_40bd58

            add RSP,216
.L_40bc88:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bc90:

            subsd XMM0,XMM1
            pxor XMM8,XMM8
            subsd XMM0,XMM2
            ucomisd XMM8,XMM0
            sqrtsd XMM4,XMM0
            movsd QWORD PTR [RSP+136],XMM4
            jbe .L_40b8ce

            movsd QWORD PTR [RSP+40],XMM8
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+40]
            jmp .L_40b8ce
.L_40bcd3:

            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_40bc66
.L_40bce6:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40bc0e
.L_40bd1a:

            movsd QWORD PTR [RSP+64],XMM8
            movsd QWORD PTR [RSP+56],XMM9
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM3
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+64]
            movsd XMM9,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            jmp .L_40b930
.L_40bd58:

            call __stack_chk_fail@PLT
.L_40bd5d:

            nop
            nop
            nop
.L_40bd60:

            push RBP
            pxor XMM4,XMM4
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,168
.L_40bd73:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            ucomisd XMM4,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+32],XMM1
            jp .L_40bdaa

            jne .L_40bdaa

            ucomisd XMM4,QWORD PTR [RSI]
            jp .L_40bdaa

            pxor XMM1,XMM1
            je .L_40bf97
.L_40bdaa:

            lea RDI,QWORD PTR [RSP+96]
            mov RSI,RBX
            movsd QWORD PTR [RSP+40],XMM4
            call .L_40b300

            lea RDI,QWORD PTR [RSP+128]
            mov RSI,RBP
            call .L_40b300

            movsd XMM0,QWORD PTR [RBP]
            mov RSI,RBP
            mov RDI,RBX
            subsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+136]
            movapd XMM1,XMM0
            subsd XMM1,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+16],XMM1
            call .L_40b5c0

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+16]
            movapd XMM2,XMM6
            mulsd XMM0,XMM0
            movapd XMM1,XMM7
            movsd XMM4,QWORD PTR [RSP+40]
            mulsd XMM2,XMM6
            mulsd XMM1,XMM7
            movapd XMM3,XMM2
            addsd XMM3,XMM1
            ucomisd XMM0,XMM3
            ja .L_40bfc0

            movsd QWORD PTR [RSP+40],XMM4
.L_40be3e:

            movsd XMM0,QWORD PTR [RSP+112]
            movsd QWORD PTR [RSP+48],XMM4
            ucomisd XMM0,QWORD PTR [RIP+.L_42e1f0]
            jbe .L_40be66

            movsd XMM1,QWORD PTR [RIP+.L_42e1f8]
            ucomisd XMM1,XMM0
            ja .L_40bff8
.L_40be66:

            addsd XMM0,QWORD PTR [RIP+.L_42e218]
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_42e220]
            movsd XMM4,QWORD PTR [RSP+48]
            movapd XMM2,XMM0
            andpd XMM2,XMMWORD PTR [RIP+.L_42d9e0]
            addsd XMM2,QWORD PTR [RIP+.L_42e228]
.L_40be9d:

            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM0,QWORD PTR [RIP+.L_42e238]
            movsd XMM5,QWORD PTR [RIP+.L_42e230]
            mulsd XMM0,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_42d9d8]
            mulsd XMM5,XMM1
            movsd XMM7,QWORD PTR [RIP+.L_42e010]
            addsd XMM0,XMM6
            movsd XMM3,QWORD PTR [RIP+.L_42e1e8]
            divsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM7,XMM0
            addsd XMM5,QWORD PTR [RIP+.L_42e240]
            ja .L_40bf09

            movsd XMM3,QWORD PTR [RIP+.L_42e248]
            mulsd XMM3,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_42e250]
            addsd XMM0,XMM6
            divsd XMM3,XMM0
.L_40bf09:

            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42e258]
            addsd XMM1,XMM0
            divsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM7,XMM0
            ja .L_40c04a
.L_40bf37:

            mulsd XMM2,XMM7
            mulsd XMM3,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM2,XMM6
            mulsd XMM0,XMM5
            divsd XMM1,XMM3
            subsd XMM2,XMM7
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,XMM5
            divsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM1,XMM1
            divsd XMM0,XMM2
            mulsd XMM3,XMM3
            mulsd XMM0,XMM0
            addsd XMM1,XMM3
            addsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40c034
.L_40bf97:

            mov RAX,QWORD PTR [RSP+152]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM1
            jne .L_40c09c

            add RSP,168
.L_40bfb9:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40bfc0:

            subsd XMM0,XMM2
            subsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+40],XMM6
            jbe .L_40be3e

            movsd QWORD PTR [RSP+48],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            jmp .L_40be3e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bff8:

            addsd XMM0,QWORD PTR [RIP+.L_42e200]
            divsd XMM0,QWORD PTR [RIP+.L_42dff8]
            call cos@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_42e208]
            movsd XMM4,QWORD PTR [RSP+48]
            movapd XMM2,XMM0
            andpd XMM2,XMMWORD PTR [RIP+.L_42d9e0]
            addsd XMM2,QWORD PTR [RIP+.L_42e210]
            jmp .L_40be9d
.L_40c034:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40bf97
.L_40c04a:

            movsd QWORD PTR [RSP+88],XMM6
            movsd QWORD PTR [RSP+80],XMM4
            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM3
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            jmp .L_40bf37
.L_40c09c:

            call __stack_chk_fail@PLT
.L_40c0a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c0b0:

            sub RSP,136
.L_40c0b7:

            pxor XMM7,XMM7
            movsd XMM6,QWORD PTR [RDI]
            movsd XMM3,QWORD PTR [RDI+8]
            movsd XMM5,QWORD PTR [RDI+16]
            movsd QWORD PTR [RSP+80],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM6
            movapd XMM6,XMM5
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+96],XMM2
            mulsd XMM6,XMM5
            movsd QWORD PTR [RSP+88],XMM1
            addsd XMM0,XMM6
            ucomisd XMM7,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40c7a1
.L_40c103:

            movsd XMM1,QWORD PTR [RSI+8]
            movsd XMM7,QWORD PTR [RSI]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+40],XMM7
            movsd XMM7,QWORD PTR [RSI+16]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM7
            mulsd XMM7,XMM7
            addsd XMM0,XMM7
            movsd QWORD PTR [RSP+24],XMM7
            pxor XMM7,XMM7
            ucomisd XMM7,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40c75b
.L_40c14b:

            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42e260]
            movsd QWORD PTR [RSP+104],XMM6
            movsd QWORD PTR [RSP+72],XMM5
            movsd QWORD PTR [RSP+64],XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_42d568]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+56],XMM2
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+48],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_42e260]
            movapd XMM0,XMM2
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_42e268]
            movsd XMM4,QWORD PTR [RSP+48]
            pxor XMM6,XMM6
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+72]
            divsd XMM4,XMM0
            ucomisd XMM6,XMM4
            sqrtsd XMM1,XMM4
            movsd XMM6,QWORD PTR [RSP+104]
            ja .L_40c71d
.L_40c1d3:

            movsd XMM7,QWORD PTR [RIP+.L_42d9d8]
            movsd XMM2,QWORD PTR [RIP+.L_42d9d8]
            subsd XMM7,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42d568]
            mulsd XMM1,XMM7
            addsd XMM2,XMM1
            mulsd XMM3,XMM2
            movapd XMM0,XMM3
            movapd XMM1,XMM3
            mulsd XMM0,XMM3
            addsd XMM0,XMM6
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+48],XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM0
            ja .L_40c6ef
.L_40c223:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+56],XMM2
            call .L_40aad0

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+56]
            movapd XMM5,XMM0
            pxor XMM7,XMM7
            mulsd XMM1,XMM2
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RSP+24]
            ucomisd XMM7,XMM0
            sqrtsd XMM3,XMM0
            ja .L_40c6c1
.L_40c266:

            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+8],XMM5
            call .L_40aad0

            movsd XMM5,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM4,XMM5
            subsd XMM1,XMM5
            movsd XMM2,QWORD PTR [RSP+48]
            addsd XMM4,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_42d568]
            addsd XMM2,XMM3
            movsd XMM5,QWORD PTR [RIP+.L_42e270]
            movapd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_42d9e0]
            mulsd XMM7,XMM2
            ucomisd XMM5,XMM0
            movsd QWORD PTR [RSP+24],XMM7
            jae .L_40c67c

            movsd XMM0,QWORD PTR [RIP+.L_42e000]
            ucomisd XMM0,XMM4
            jbe .L_40c678

            addsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42e278]
            ucomisd XMM0,XMM1
            mulsd XMM4,QWORD PTR [RIP+.L_42d568]
            movsd QWORD PTR [RSP+8],XMM4
            jb .L_40c69c
.L_40c309:

            addsd XMM1,QWORD PTR [RIP+.L_42e000]
            movsd XMM6,QWORD PTR [RIP+.L_42e0e8]
            movsd QWORD PTR [RSP+16],XMM6
.L_40c31f:

            movsd XMM6,QWORD PTR [RSP+48]
            movapd XMM5,XMM3
            movsd XMM7,QWORD PTR [RSP+40]
            subsd XMM5,XMM6
            mulsd XMM6,XMM3
            subsd XMM7,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+48],XMM5
            pxor XMM5,XMM5
            sqrtsd XMM3,XMM6
            movapd XMM0,XMM6
            ucomisd XMM5,XMM6
            movsd QWORD PTR [RSP+56],XMM7
            ja .L_40c85b
.L_40c35f:

            movsd XMM0,QWORD PTR [RIP+.L_42e0e0]
            movsd QWORD PTR [RSP+120],XMM2
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+64],XMM3
            divsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RIP+.L_42d568]
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+64]
            addsd XMM3,XMM3
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RIP+.L_42e280]
            movsd QWORD PTR [RSP+64],XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_42e0e0]
            divsd XMM0,QWORD PTR [RSP+16]
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+112],XMM0
            movapd XMM0,XMM7
            addsd XMM0,XMM7
            mulsd XMM0,QWORD PTR [RIP+.L_42e0e0]
            divsd XMM0,QWORD PTR [RSP+16]
            call cos@PLT

            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_42e138]
            addsd XMM0,QWORD PTR [RIP+.L_42e288]
            mulsd XMM0,QWORD PTR [RIP+.L_42e0e0]
            divsd XMM0,QWORD PTR [RSP+16]
            call cos@PLT

            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_42e148]
            subsd XMM0,QWORD PTR [RIP+.L_42e290]
            mulsd XMM0,QWORD PTR [RIP+.L_42e0e0]
            divsd XMM0,QWORD PTR [RSP+16]
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM5,QWORD PTR [RSP+104]
            mulsd XMM4,QWORD PTR [RIP+.L_42e298]
            mulsd XMM5,QWORD PTR [RIP+.L_42e2a0]
            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            movsd XMM3,QWORD PTR [RSP+72]
            pxor XMM6,XMM6
            mulsd XMM3,QWORD PTR [RIP+.L_42e2a8]
            subsd XMM1,XMM4
            mulsd XMM0,QWORD PTR [RIP+.L_42e208]
            movsd XMM2,QWORD PTR [RSP+120]
            addsd XMM1,XMM5
            addsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_42e188]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RIP+.L_42d568]
            subsd XMM0,QWORD PTR [RIP+.L_42e2b0]
            mulsd XMM0,XMM0
            movapd XMM4,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_42e2b8]
            mulsd XMM4,XMM3
            ucomisd XMM6,XMM0
            sqrtsd XMM5,XMM0
            ja .L_40c815
.L_40c4de:

            movsd XMM0,QWORD PTR [RSP+8]
            divsd XMM4,XMM5
            subsd XMM0,QWORD PTR [RIP+.L_42e2c8]
            divsd XMM0,QWORD PTR [RIP+.L_42e2d0]
            addsd XMM4,QWORD PTR [RIP+.L_42d9d8]
            movsd QWORD PTR [RSP+32],XMM4
            mulsd XMM2,QWORD PTR [RIP+.L_42e2c0]
            mulsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM0,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_42d568]
            mulsd XMM1,XMM3
            xorpd XMM0,XMMWORD PTR [RIP+.L_42e2e0]
            addsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            addsd XMM2,QWORD PTR [RIP+.L_42d9d8]
            movsd QWORD PTR [RSP+72],XMM1
            movsd QWORD PTR [RSP+40],XMM2
            call exp@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_42e280]
            movsd XMM1,QWORD PTR [RIP+.L_42e260]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            call pow@PLT

            movsd XMM1,QWORD PTR [RIP+.L_42e260]
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_42e268]
            movsd XMM2,QWORD PTR [RSP+104]
            pxor XMM7,XMM7
            divsd XMM2,XMM0
            ucomisd XMM7,XMM2
            sqrtsd XMM5,XMM2
            ja .L_40c7fb
.L_40c5ab:

            movsd XMM0,QWORD PTR [RIP+.L_42e0e0]
            movsd QWORD PTR [RSP+24],XMM5
            mulsd XMM0,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,XMM0
            call sin@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+64]
            xorpd XMM2,XMMWORD PTR [RIP+.L_42e2e0]
            movsd XMM5,QWORD PTR [RSP+24]
            divsd XMM1,XMM0
            addsd XMM5,XMM5
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RSP+88]
            mulsd XMM1,XMM1
            divsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+72]
            mulsd XMM0,QWORD PTR [RSP+96]
            divsd XMM3,XMM0
            movapd XMM0,XMM4
            mulsd XMM0,XMM4
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            mulsd XMM0,XMM3
            addsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM5
            pxor XMM5,XMM5
            mulsd XMM0,XMM4
            mulsd XMM0,XMM3
            addsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40c7e5
.L_40c668:

            movapd XMM0,XMM1
            add RSP,136
.L_40c673:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c678:

            subsd XMM4,XMM0
.L_40c67c:

            mulsd XMM4,QWORD PTR [RIP+.L_42d568]
            movsd XMM0,QWORD PTR [RIP+.L_42e278]
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM4
            jae .L_40c309
.L_40c69c:

            movsd XMM7,QWORD PTR [RIP+.L_42e0e8]
            ucomisd XMM1,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            jbe .L_40c31f

            subsd XMM1,QWORD PTR [RIP+.L_42e000]
            jmp .L_40c31f
.L_40c6c1:

            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_40c266
.L_40c6ef:

            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+72],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            jmp .L_40c223
.L_40c71d:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM1
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+48]
            jmp .L_40c1d3
.L_40c75b:

            movsd QWORD PTR [RSP+104],XMM6
            movsd QWORD PTR [RSP+72],XMM1
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM3
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+104]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            jmp .L_40c14b
.L_40c7a1:

            mov QWORD PTR [RSP+48],RSI
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            mov RSI,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_40c103
.L_40c7e5:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40c668
.L_40c7fb:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM5
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            jmp .L_40c5ab
.L_40c815:

            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+104],XMM1
            movsd QWORD PTR [RSP+72],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+112]
            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM5,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_40c4de
.L_40c85b:

            movsd QWORD PTR [RSP+104],XMM1
            movsd QWORD PTR [RSP+72],XMM3
            movsd QWORD PTR [RSP+64],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM3,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+64]
            jmp .L_40c35f
.L_40c889:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c890:

            cmp EDI,1196573017
            je .L_40c980

            ja .L_40c8e8

            cmp EDI,1129142560
            je .L_40c960

            cmp EDI,1129142603
            jne .L_40c928

            test RSI,RSI
            je .L_40c8c1

            lea RAX,QWORD PTR [RIP+.L_641ca0]
            mov QWORD PTR [RSI],RAX
.L_40c8c1:

            test RDX,RDX
            je .L_40c8d0

            lea RAX,QWORD PTR [RIP+.L_63e998]
            mov QWORD PTR [RDX],RAX
.L_40c8d0:

            test RCX,RCX
            je .L_40c91b

            mov DWORD PTR [RCX],4
            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c8e8:

            cmp EDI,1281450528
            je .L_40c940

            cmp EDI,1380401696
            jne .L_40c928

            test RSI,RSI
            je .L_40c907

            lea RAX,QWORD PTR [RIP+.L_63e9b0]
            mov QWORD PTR [RSI],RAX
.L_40c907:

            test RDX,RDX
            je .L_40c916

            lea RAX,QWORD PTR [RIP+.L_641ca8]
            mov QWORD PTR [RDX],RAX
.L_40c916:

            test RCX,RCX
            jne .L_40c92b
.L_40c91b:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c928:

            xor EAX,EAX
            ret 
.L_40c92b:

            mov DWORD PTR [RCX],3
            mov EAX,1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c940:

            test RSI,RSI
            je .L_40c94f

            lea RAX,QWORD PTR [RIP+.L_63e9a8]
            mov QWORD PTR [RSI],RAX
.L_40c94f:

            test RDX,RDX
            je .L_40c916

            lea RAX,QWORD PTR [RIP+.L_63e9a0]
            mov QWORD PTR [RDX],RAX
            jmp .L_40c916
.L_40c960:

            test RSI,RSI
            je .L_40c96f

            lea RAX,QWORD PTR [RIP+.L_641c98]
            mov QWORD PTR [RSI],RAX
.L_40c96f:

            test RDX,RDX
            je .L_40c916

            lea RAX,QWORD PTR [RIP+.L_63e990]
            mov QWORD PTR [RDX],RAX
            jmp .L_40c916
.L_40c980:

            test RSI,RSI
            je .L_40c98f

            lea RAX,QWORD PTR [RIP+.L_63e9b8]
            mov QWORD PTR [RSI],RAX
.L_40c98f:

            test RDX,RDX
            je .L_40c99e

            lea RAX,QWORD PTR [RIP+.L_641cb0]
            mov QWORD PTR [RDX],RAX
.L_40c99e:

            test RCX,RCX
            je .L_40c91b

            mov DWORD PTR [RCX],1
            mov EAX,1
            ret 
.L_40c9b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c9c0:

            sub EDI,1
            mov EAX,4294967295
            cmp EDI,29
            ja .L_40c9d7

            lea RAX,QWORD PTR [RIP+.L_42df80]
            mov EAX,DWORD PTR [RAX+RDI*4]
.L_40c9d7:

            ret 
.L_40c9d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c9e0:

            cmp EDI,1281450528
            je .L_40ccc0

            jbe .L_40ca48

            cmp EDI,1296255033
            je .L_40cbd6

            jbe .L_40caa0

            cmp EDI,1296255045
            je .L_40cc90

            jbe .L_40cb40

            cmp EDI,1482250784
            mov EAX,9
            je .L_40ca43

            jbe .L_40cbe0

            cmp EDI,1497588338
            mov EAX,7
            je .L_40ca43

            cmp EDI,1501067552
            mov EAX,14
            jne .L_40cbfd
.L_40ca43:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ca48:

            cmp EDI,1094929490
            je .L_40cc48

            jbe .L_40cb70

            cmp EDI,1145261138
            je .L_40cb6a

            jbe .L_40cad8

            cmp EDI,1196573017
            mov EAX,3
            je .L_40ca43

            jbe .L_40cc70

            cmp EDI,1212961568
            mov EAX,13
            je .L_40ca43

            cmp EDI,1213421088
            mov EAX,12
            jne .L_40cbfd

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40caa0:

            cmp EDI,1296255027
            je .L_40ccb8

            ja .L_40cb10

            cmp EDI,1282766411
            mov EAX,11
            je .L_40ca43

            ja .L_40cc20

            cmp EDI,1282766368
            mov EAX,8
            jne .L_40cbfd

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40cad8:

            cmp EDI,1128483922
            je .L_40ccd0

            jbe .L_40cca0

            cmp EDI,1129142560
            mov EAX,5
            je .L_40ca43

            cmp EDI,1129142603
            mov EAX,6
            jne .L_40cbfd

            ret 
          .byte 0x66
          .byte 0x90
.L_40cb10:

            cmp EDI,1296255030
            je .L_40cc58

            jbe .L_40cc08

            cmp EDI,1296255031
            je .L_40cce0

            cmp EDI,1296255032
            jne .L_40cbfd
.L_40cb3a:

            mov EAX,22
            ret 
.L_40cb40:

            cmp EDI,1296255042
            je .L_40ccac

            jbe .L_40cc40

            cmp EDI,1296255043
            je .L_40ccd0

            cmp EDI,1296255044
            jne .L_40cbfd
.L_40cb6a:

            mov EAX,27
            ret 
.L_40cb70:

            cmp EDI,893602898
            je .L_40cc18

            ja .L_40cbb0

            cmp EDI,843271250
            je .L_40cc30

            jbe .L_40cc60

            cmp EDI,860048466
            je .L_40ccb8

            cmp EDI,876825682
            jne .L_40cbfd
.L_40cba4:

            mov EAX,18
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cbb0:

            cmp EDI,927157330
            je .L_40cce0

            jbe .L_40cc50

            cmp EDI,943934546
            je .L_40cb3a

            cmp EDI,960711762
            jne .L_40cbfd
.L_40cbd6:

            mov EAX,23
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40cbe0:

            cmp EDI,1296255046
            je .L_40cc84

            cmp EDI,1380401696
            mov EAX,4
            je .L_40ca43
.L_40cbfd:

            mov EAX,4294967295
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cc08:

            cmp EDI,1296255028
            je .L_40cba4

            cmp EDI,1296255029
            jne .L_40cbfd
.L_40cc18:

            mov EAX,19
            ret 
          .byte 0x66
          .byte 0x90
.L_40cc20:

            cmp EDI,1296255025
            je .L_40cc68

            cmp EDI,1296255026
            jne .L_40cbfd
.L_40cc30:

            mov EAX,16
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cc40:

            cmp EDI,1296255041
            jne .L_40cbfd
.L_40cc48:

            mov EAX,24
            ret 
          .byte 0x66
          .byte 0x90
.L_40cc50:

            cmp EDI,910380114
            jne .L_40cbfd
.L_40cc58:

            mov EAX,20
            ret 
          .byte 0x66
          .byte 0x90
.L_40cc60:

            cmp EDI,826494034
            jne .L_40cbfd
.L_40cc68:

            mov EAX,15
            ret 
          .byte 0x66
          .byte 0x90
.L_40cc70:

            cmp EDI,1162038354
            je .L_40cc90

            cmp EDI,1178815570
            jne .L_40cbfd
.L_40cc84:

            mov EAX,29
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cc90:

            mov EAX,28
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cca0:

            cmp EDI,1111706706
            jne .L_40cbfd
.L_40ccac:

            mov EAX,25
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ccb8:

            mov EAX,17
            ret 
          .byte 0x66
          .byte 0x90
.L_40ccc0:

            mov EAX,10
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ccd0:

            mov EAX,26
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cce0:

            mov EAX,21
            ret 
.L_40cce6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ccf0:

            cmp EDI,1281450528
            je .L_40ce0c

            ja .L_40cd50

            cmp EDI,1094929490
            je .L_40ce68

            ja .L_40cde0

            cmp EDI,893602898
            je .L_40ced4

            jbe .L_40ce40

            cmp EDI,927157330
            je .L_40ce80

            jbe .L_40cf00

            cmp EDI,943934546
            je .L_40cd92

            cmp EDI,960711762
            jne .L_40ce0c
.L_40cd48:

            mov EAX,9
            ret 
          .byte 0x66
          .byte 0x90
.L_40cd50:

            cmp EDI,1296255033
            je .L_40cd48

            ja .L_40cda0

            cmp EDI,1296255027
            je .L_40ce0c

            jbe .L_40ce18

            cmp EDI,1296255030
            je .L_40cf0c

            jbe .L_40cec0

            cmp EDI,1296255031
            je .L_40ce80

            cmp EDI,1296255032
            jne .L_40ce0c
.L_40cd92:

            mov EAX,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cda0:

            cmp EDI,1296255045
            je .L_40ce70

            ja .L_40cf18

            cmp EDI,1296255042
            je .L_40ceba

            jbe .L_40ce60

            cmp EDI,1296255043
            je .L_40ce90

            cmp EDI,1296255044
            jne .L_40ce0c
.L_40cdd8:

            mov EAX,13
            ret 
          .byte 0x66
          .byte 0x90
.L_40cde0:

            cmp EDI,1145261138
            je .L_40cdd8

            jbe .L_40cea0

            cmp EDI,1196573017
            je .L_40ce56

            ja .L_40ce0c

            cmp EDI,1162038354
            je .L_40ce70

            cmp EDI,1178815570
            je .L_40cf36
.L_40ce0c:

            mov EAX,3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ce18:

            cmp EDI,1282766411
            je .L_40cef8

            jbe .L_40ce0c

            cmp EDI,1296255025
            je .L_40ce56

            cmp EDI,1296255026
            jne .L_40ce0c
.L_40ce36:

            mov EAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ce40:

            cmp EDI,843271250
            je .L_40ce36

            ja .L_40cee0

            cmp EDI,826494034
            jne .L_40ce0c
.L_40ce56:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ce60:

            cmp EDI,1296255041
            jne .L_40ce0c
.L_40ce68:

            mov EAX,10
            ret 
          .byte 0x66
          .byte 0x90
.L_40ce70:

            mov EAX,14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ce80:

            mov EAX,7
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ce90:

            mov EAX,12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cea0:

            cmp EDI,1128483922
            je .L_40ce90

            ja .L_40cf40

            cmp EDI,1111706706
            jne .L_40ce0c
.L_40ceba:

            mov EAX,11
            ret 
.L_40cec0:

            cmp EDI,1296255028
            je .L_40cef8

            cmp EDI,1296255029
            jne .L_40ce0c
.L_40ced4:

            mov EAX,5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cee0:

            cmp EDI,860048466
            je .L_40ce0c

            cmp EDI,876825682
            jne .L_40ce0c
.L_40cef8:

            mov EAX,4
            ret 
          .byte 0x66
          .byte 0x90
.L_40cf00:

            cmp EDI,910380114
            jne .L_40ce0c
.L_40cf0c:

            mov EAX,6
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cf18:

            cmp EDI,1482250784
            je .L_40ce0c

            ja .L_40ce0c

            cmp EDI,1296255046
            jne .L_40ce0c
.L_40cf36:

            mov EAX,15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40cf40:

            cmp EDI,1129142560
            je .L_40ce0c

            cmp EDI,1129142603
            je .L_40cef8

            jmp .L_40ce0c
.L_40cf59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cf60:

            test ESI,16711680
            jne .L_40cfd8

            call .L_40ccf0

            test ESI,1024
            mov EDX,EAX
            je .L_40cf90

            cmp EDX,4
            mov EAX,7
            jg .L_40cfcf

            mov ESI,49
            mov EAX,23
            cmovne EAX,ESI
            ret 
          .byte 0x90
.L_40cf90:

            and ESI,2048
            je .L_40cfb8

            cmp EDX,4
            mov EAX,6
            jg .L_40cfcf

            cmp EDX,1
            mov ESI,33
            mov EAX,17
            cmove EAX,ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cfb8:

            cmp EDX,4
            mov EAX,7
            jg .L_40cfcf

            mov EAX,33
            mov ESI,17
            cmove EAX,ESI
.L_40cfcf:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cfd8:

            shr ESI,16
            movzx EAX,SIL
            ret 
.L_40cfe0:

            lea RAX,QWORD PTR [RIP+.L_63e9c0]
            ret 
.L_40cfe8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cff0:

            lea RSI,QWORD PTR [RIP+.L_63e9c0]
            lea RDI,QWORD PTR [RIP+.L_641cc0]
            sub RSP,8
            call .L_40abe0

            lea RAX,QWORD PTR [RIP+.L_641cc0]
            add RSP,8
            ret 
.L_40d013:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d020:

            sub RSP,8
.L_40d024:

            test RDI,RDI
            je .L_40d184

            movapd XMM2,XMM0
            movapd XMM3,XMM0
            ucomisd XMM0,QWORD PTR [RIP+.L_42e800]
            mulsd XMM2,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_42e808]
            mulsd XMM3,XMM2
            jb .L_40d0f8

            ucomisd XMM1,XMM0
            jb .L_40d0f8

            movsd XMM1,QWORD PTR [RIP+.L_42e810]
            divsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_42e820]
            divsd XMM3,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_42e818]
            movsd XMM2,QWORD PTR [RIP+.L_42e828]
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_42e830]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42e838]
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42e840]
.L_40d0b1:

            movapd XMM1,XMM0
            movsd QWORD PTR [RDI],XMM0
            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_42e878]
            mov QWORD PTR [RDI+16],RAX
            mov EAX,1
            mulsd XMM1,QWORD PTR [RIP+.L_42e870]
            addsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_42e880]
            movsd QWORD PTR [RDI+8],XMM0
            add RSP,8
.L_40d0f2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d0f8:

            ucomisd XMM0,XMM1
            jbe .L_40d168

            movsd XMM1,QWORD PTR [RIP+.L_42e848]
            ucomisd XMM1,XMM0
            jb .L_40d168

            movsd XMM1,QWORD PTR [RIP+.L_42e810]
            divsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_42e820]
            divsd XMM3,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_42e850]
            movsd XMM2,QWORD PTR [RIP+.L_42e858]
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_42e830]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42e860]
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42e868]
            jmp .L_40d0b1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d168:

            lea RDX,QWORD PTR [RIP+.L_42e368]
            xor EAX,EAX
            mov ESI,2
            xor EDI,EDI
            call .L_421420

            xor EAX,EAX
            add RSP,8
.L_40d183:

            ret 
.L_40d184:

            lea RCX,QWORD PTR [RIP+.L_42e400]
            lea RSI,QWORD PTR [RIP+.L_42e2f0]
            lea RDI,QWORD PTR [RIP+.L_42e2fb]
            mov EDX,54
            call __assert_fail@PLT
.L_40d1a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d1b0:

            push RBP
            push RBX
            sub RSP,88
.L_40d1b6:

            test RSI,RSI
            je .L_40d392

            test RDI,RDI
            je .L_40d3b1

            movsd XMM8,QWORD PTR [RSI+8]
            mov EBX,1
            lea RBP,QWORD PTR [RIP+.L_42e420]
            movsd XMM0,QWORD PTR [RIP+.L_42e288]
            movsd XMM7,QWORD PTR [RSI]
            mulsd XMM0,XMM8
            mulsd XMM8,QWORD PTR [RIP+.L_42e138]
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            subsd XMM0,XMM7
            movsd XMM10,QWORD PTR [RIP+.L_42e890]
            addsd XMM7,XMM7
            movsd XMM2,QWORD PTR [RIP+.L_42e898]
            pxor XMM6,XMM6
            pxor XMM3,XMM3
            addsd XMM0,QWORD PTR [RIP+.L_42e028]
            movsd XMM9,QWORD PTR [RIP+.L_42d9d8]
            divsd XMM7,XMM0
            divsd XMM8,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42e888]
            jmp .L_40d279
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d248:

            cmp EBX,31
            je .L_40d300
.L_40d251:

            mov EAX,EBX
            movapd XMM6,XMM5
            shl RAX,5
            movapd XMM3,XMM1
            add RAX,RBP
            add EBX,1
            movsd XMM2,QWORD PTR [RAX+8]
            movsd XMM10,QWORD PTR [RAX+16]
            movsd XMM0,QWORD PTR [RAX+24]
            movsd XMM5,QWORD PTR [RAX]
.L_40d279:

            movapd XMM11,XMM7
            movapd XMM1,XMM8
            subsd XMM11,XMM2
            subsd XMM1,XMM10
            movapd XMM2,XMM11
            mulsd XMM2,XMM0
            mulsd XMM0,XMM0
            subsd XMM1,XMM2
            addsd XMM0,XMM9
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40d310
.L_40d2ad:

            cmp EBX,1
            divsd XMM1,XMM2
            je .L_40d251

            movapd XMM0,XMM3
            divsd XMM0,XMM1
            ucomisd XMM4,XMM0
            jbe .L_40d248

            movapd XMM0,XMM3
            mov EAX,1
            subsd XMM5,XMM6
            subsd XMM0,XMM1
            divsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42e820]
            mulsd XMM3,XMM5
            addsd XMM3,XMM6
            divsd XMM0,XMM3
            movsd QWORD PTR [RDI],XMM0
            add RSP,88
.L_40d2f5:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d300:

            add RSP,88
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d310:

            movsd QWORD PTR [RSP+72],XMM4
            mov QWORD PTR [RSP+56],RDI
            movsd QWORD PTR [RSP+64],XMM9
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+72]
            movsd XMM9,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_40d2ad
.L_40d392:

            lea RCX,QWORD PTR [RIP+.L_42e3e0]
            lea RSI,QWORD PTR [RIP+.L_42e2f0]
            lea RDI,QWORD PTR [RIP+.L_42e2fb]
            mov EDX,151
            call __assert_fail@PLT
.L_40d3b1:

            lea RCX,QWORD PTR [RIP+.L_42e3e0]
            lea RSI,QWORD PTR [RIP+.L_42e2f0]
            lea RDI,QWORD PTR [RIP+.L_42e317]
            mov EDX,152
            call __assert_fail@PLT
.L_40d3d0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R15,RDX
            push RBP
            push RBX
            mov RBX,RSI
            mov R13,RCX
            sub RSP,472
.L_40d3ed:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+456],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_42e8a0]
            test RSI,RSI
            lea R12,QWORD PTR [RSP+224]
            lea RBP,QWORD PTR [RSP+384]
            mov RSI,R12
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RIP+.L_42e8a8]
            mov RDI,RBP
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RIP+.L_42e8b0]
            mov QWORD PTR [RSP+160],RAX
            mov RAX,QWORD PTR [RIP+.L_42e8b8]
            mov QWORD PTR [RSP+168],RAX
            mov RAX,QWORD PTR [RIP+.L_42e8c0]
            mov QWORD PTR [RSP+176],RAX
            mov RAX,QWORD PTR [RIP+.L_42e8c8]
            mov QWORD PTR [RSP+184],RAX
            mov RAX,QWORD PTR [RIP+.L_42e8d0]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RIP+.L_42e8d8]
            mov QWORD PTR [RSP+200],RAX
            mov RAX,QWORD PTR [RIP+.L_42e8e0]
            mov QWORD PTR [RSP+208],RAX
            lea RAX,QWORD PTR [RSP+144]
            cmove RBX,RAX
            movdqu XMM0,XMMWORD PTR [RBX]
            movaps XMMWORD PTR [RSP+384],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+16]
            movaps XMMWORD PTR [RSP+400],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+416],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            mov RAX,QWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+432],XMM0
            mov QWORD PTR [RSP+448],RAX
            call .L_42c5f0

            test EAX,EAX
            je .L_40d5de

            lea RDX,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [R15+16]
            movsd XMM1,QWORD PTR [R15+8]
            movsd XMM0,QWORD PTR [R15]
            mov RDI,RDX
            lea R15,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+8],RDX
            call .L_42c1a0

            movsd XMM2,QWORD PTR [R13+16]
            mov RDI,R15
            movsd XMM1,QWORD PTR [R13+8]
            movsd XMM0,QWORD PTR [R13]
            lea R13,QWORD PTR [RSP+304]
            call .L_42c1a0

            mov RDX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+48]
            mov RSI,RBX
            call .L_42c780

            lea RDI,QWORD PTR [RSP+112]
            mov RDX,R15
            mov RSI,RBX
            call .L_42c780

            movsd XMM0,QWORD PTR [RSP+112]
            mov RDI,R13
            pxor XMM2,XMM2
            divsd XMM0,QWORD PTR [RSP+48]
            pxor XMM1,XMM1
            call .L_42c1a0

            movsd XMM1,QWORD PTR [RSP+120]
            lea RDI,QWORD PTR [R13+24]
            pxor XMM2,XMM2
            divsd XMM1,QWORD PTR [RSP+56]
            pxor XMM0,XMM0
            call .L_42c1a0

            movsd XMM2,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [R13+48]
            pxor XMM1,XMM1
            divsd XMM2,QWORD PTR [RSP+64]
            pxor XMM0,XMM0
            call .L_42c1a0

            mov RDX,RBX
            mov RSI,R13
            mov RDI,RBP
            call .L_42c480

            mov RDX,RBP
            mov RSI,R12
            mov RDI,R14
            call .L_42c480

            mov EAX,1
.L_40d5de:

            mov RCX,QWORD PTR [RSP+456]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40d603

            add RSP,472
.L_40d5f8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40d603:

            call __stack_chk_fail@PLT
.L_40d608:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d610:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,520
.L_40d623:

            movsd XMM1,QWORD PTR [RDX+48]
            lea RBX,QWORD PTR [RSP+272]
            lea R13,QWORD PTR [RSP+192]
            movsd XMM5,QWORD PTR [RSI]
            movsd XMM7,QWORD PTR [RSI+8]
            mov RDI,RBX
            movsd XMM4,QWORD PTR [RDX]
            movsd XMM6,QWORD PTR [RDX+24]
            movsd XMM2,QWORD PTR [RDX+56]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+88],XMM7
            movsd XMM5,QWORD PTR [RDX+8]
            movsd XMM7,QWORD PTR [RDX+32]
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM2,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            movapd XMM1,XMM6
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM4
            call .L_42c1a0

            lea RDI,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP]
            call .L_42c1a0

            movsd XMM3,QWORD PTR [RIP+.L_42d9d8]
            lea RDI,QWORD PTR [RBX+48]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+48],XMM3
            subsd XMM0,QWORD PTR [RSP+40]
            subsd XMM0,QWORD PTR [RSP+16]
            movapd XMM2,XMM0
            movsd QWORD PTR [RSP+56],XMM0
            movapd XMM0,XMM3
            subsd XMM0,QWORD PTR [RSP+32]
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            subsd XMM1,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+64],XMM1
            subsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+72],XMM0
            call .L_42c1a0

            mov RSI,R13
            mov RDI,RBX
            call .L_42c5f0

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+48]
            jne .L_40d768
.L_40d73e:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40d8ee

            add RSP,520
.L_40d75c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d768:

            movapd XMM2,XMM3
            lea RBX,QWORD PTR [RSP+128]
            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+88]
            movapd XMM1,XMM3
            subsd XMM2,XMM5
            mov RDI,RBX
            divsd XMM5,XMM7
            subsd XMM2,XMM7
            divsd XMM2,XMM7
            movapd XMM0,XMM5
            call .L_42c1a0

            lea RDI,QWORD PTR [RSP+160]
            mov RDX,RBX
            mov RSI,R13
            lea RBX,QWORD PTR [RSP+96]
            call .L_42c780

            movsd XMM0,QWORD PTR [RSP+24]
            mov RDI,R12
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+160]
            mulsd XMM2,QWORD PTR [RSP+176]
            mulsd XMM1,QWORD PTR [RSP+168]
            call .L_42c1a0

            movsd XMM0,QWORD PTR [RSP]
            lea RDI,QWORD PTR [R12+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+160]
            mulsd XMM2,QWORD PTR [RSP+176]
            mulsd XMM1,QWORD PTR [RSP+168]
            call .L_42c1a0

            movsd XMM0,QWORD PTR [RSP+72]
            lea RDI,QWORD PTR [R12+48]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+160]
            mulsd XMM2,QWORD PTR [RSP+176]
            mulsd XMM1,QWORD PTR [RSP+168]
            call .L_42c1a0

            mov RSI,RBP
            mov RDI,RBX
            lea RBP,QWORD PTR [RSP+352]
            call .L_40ac20

            lea RCX,QWORD PTR [RIP+.L_63e9c0]
            xor ESI,ESI
            mov RDX,RBX
            mov RDI,RBP
            call .L_40d3d0

            test EAX,EAX
            je .L_40d73e

            movdqu XMM0,XMMWORD PTR [R12]
            lea RDX,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov RAX,QWORD PTR [R12+64]
            mov RDI,R12
            movaps XMMWORD PTR [RSP+432],XMM0
            movdqu XMM0,XMMWORD PTR [R12+16]
            mov QWORD PTR [RSP+496],RAX
            movaps XMMWORD PTR [RSP+448],XMM0
            movdqu XMM0,XMMWORD PTR [R12+32]
            movaps XMMWORD PTR [RSP+464],XMM0
            movdqu XMM0,XMMWORD PTR [R12+48]
            movaps XMMWORD PTR [RSP+480],XMM0
            call .L_42c480

            mov EAX,1
            jmp .L_40d73e
.L_40d8ee:

            call __stack_chk_fail@PLT
.L_40d8f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d900:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_40d90d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_40da15

            test RSI,RSI
            je .L_40d9f6

            test RDX,RDX
            je .L_40da34

            test RCX,RCX
            mov RBP,RCX
            je .L_40d9d7

            lea R12,QWORD PTR [RSP+64]
            mov RCX,RDX
            mov RBX,RDI
            mov RDX,RSI
            xor ESI,ESI
            mov RDI,R12
            call .L_40d3d0

            test EAX,EAX
            je .L_40d9b2

            movsd XMM0,QWORD PTR [RBP]
            mov R13,RSP
            movsd XMM2,QWORD PTR [RBP+16]
            mov RDI,R13
            movsd XMM1,QWORD PTR [RBP+8]
            call .L_42c1a0

            lea RDI,QWORD PTR [RSP+32]
            mov RDX,R13
            mov RSI,R12
            call .L_42c780

            movsd XMM0,QWORD PTR [RSP+32]
            mov EAX,1
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RBX+16],XMM0
.L_40d9b2:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40da53

            add RSP,152
.L_40d9d0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40d9d7:

            lea RCX,QWORD PTR [RIP+.L_42e3c0]
            lea RSI,QWORD PTR [RIP+.L_42e2f0]
            lea RDI,QWORD PTR [RIP+.L_42e34a]
            mov EDX,337
            call __assert_fail@PLT
.L_40d9f6:

            lea RCX,QWORD PTR [RIP+.L_42e3c0]
            lea RSI,QWORD PTR [RIP+.L_42e2f0]
            lea RDI,QWORD PTR [RIP+.L_42e390]
            mov EDX,335
            call __assert_fail@PLT
.L_40da15:

            lea RCX,QWORD PTR [RIP+.L_42e3c0]
            lea RSI,QWORD PTR [RIP+.L_42e2f0]
            lea RDI,QWORD PTR [RIP+.L_42d9fc]
            mov EDX,334
            call __assert_fail@PLT
.L_40da34:

            lea RCX,QWORD PTR [RIP+.L_42e3c0]
            lea RSI,QWORD PTR [RIP+.L_42e2f0]
            lea RDI,QWORD PTR [RIP+.L_42e32e]
            mov EDX,336
            call __assert_fail@PLT
.L_40da53:

            call __stack_chk_fail@PLT
.L_40da58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40da60:

            shr ESI,16
            push RBX
            mov EBX,ESI
            and EBX,31
            call .L_40c9e0

            test EBX,EBX
            je .L_40daa0

            cmp EBX,EAX
            je .L_40daa0

            cmp EBX,30
            jne .L_40da85

            cmp EAX,10
            mov EDX,1
            je .L_40daa5
.L_40da85:

            cmp EBX,10
            sete CL
            xor EDX,EDX
            cmp EAX,30
            sete DL
            and EDX,ECX
            mov EAX,EDX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40daa0:

            mov EDX,1
.L_40daa5:

            mov EAX,EDX
            pop RBX
            ret 
.L_40daa9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dab0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,R8D
            mov RBX,RDI
            sub RSP,40
.L_40dac7:

            mov QWORD PTR [RSP+8],RSI
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+28],ECX
            call .L_41ea90

            test EBP,EBP
            je .L_40db21

            xor R14D,R14D
            xor R13D,R13D
            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40daf0:

            mov EDX,R14D
            mov ESI,R13D
            add RDX,QWORD PTR [RSP+16]
            add RSI,QWORD PTR [RSP+8]
            add R12D,1
            mov R8D,DWORD PTR [R15+8]
            mov ECX,DWORD PTR [RSP+28]
            mov RDI,RBX
            call QWORD PTR [RBX+256]

            add R13D,DWORD PTR [R15]
            add R14D,DWORD PTR [R15+4]
            cmp EBP,R12D
            jne .L_40daf0
.L_40db21:

            add RSP,40
.L_40db25:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40db30:

            movsd XMM1,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RIP+.L_42ec38]
            ucomisd XMM1,XMM0
            jbe .L_40db94

            movsd XMM2,QWORD PTR [RDI+8]
            ucomisd XMM2,XMM0
            jbe .L_40db94

            movsd XMM3,QWORD PTR [RDI+16]
            movsd XMM4,QWORD PTR [RIP+.L_42ec40]
            ucomisd XMM3,XMM0
            ja .L_40db74

            jmp .L_40db94
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40db68:

            ucomisd XMM2,XMM0
            jbe .L_40db86

            ucomisd XMM3,XMM0
            jbe .L_40db86
.L_40db74:

            divsd XMM1,XMM4
            divsd XMM2,XMM4
            ucomisd XMM1,XMM0
            divsd XMM3,XMM4
            ja .L_40db68
.L_40db86:

            movsd QWORD PTR [RDI],XMM1
            movsd QWORD PTR [RDI+8],XMM2
            movsd QWORD PTR [RDI+16],XMM3
.L_40db94:

            ret 
.L_40db96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dba0:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov R12,RDX
            mov RBX,RDI
            sub RSP,16
.L_40dbb1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+120]
            lea RSI,QWORD PTR [RSP+6]
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]

            cmp WORD PTR [RSP+6],0
            jne .L_40dc10

            mov RAX,QWORD PTR [RBX+112]
            mov RSI,R12
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]
.L_40dbed:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40dc48

            add RSP,16
.L_40dc01:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dc10:

            mov RDI,QWORD PTR [RBX+232]
            mov ESI,2
            call .L_4068a0

            mov RDX,QWORD PTR [RBX+112]
            xor ECX,ECX
            mov EDI,DWORD PTR [RDX+12]
            xor EDX,EDX
            test EDI,EDI
            je .L_40dbed
.L_40dc30:

            movzx ESI,WORD PTR [RAX+RDX*2]
            movzx EDX,CX
            add ECX,1
            mov WORD PTR [R12+RDX*2],SI
            movzx EDX,CX
            cmp EDX,EDI
            jb .L_40dc30

            jmp .L_40dbed
.L_40dc48:

            call __stack_chk_fail@PLT
.L_40dc4d:

            nop
            nop
            nop
.L_40dc50:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_40dc6a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+44],R8D
            call .L_41ea90

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            je .L_40dd79

            lea RAX,QWORD PTR [RSP+80]
            lea R14,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dce0:

            mov EAX,DWORD PTR [RSP+12]
            mov EBP,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+40]
            add RBP,QWORD PTR [RSP+24]
            add R12,QWORD PTR [RSP+32]
            test EAX,EAX
            je .L_40dd57

            xor R13D,R13D
            mov RAX,R15
            mov R15D,R13D
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dd10:

            mov ECX,DWORD PTR [R13+8]
            mov RDX,RBP
            mov RSI,R14
            mov RDI,RBX
            add R15D,1
            call QWORD PTR [RBX+16]

            mov RBP,RAX
            mov RAX,QWORD PTR [RBX+112]
            mov RSI,QWORD PTR [RSP]
            mov RDI,R14
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]

            mov RDX,R12
            mov ECX,DWORD PTR [R13+12]
            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+12],R15D
            mov R12,RAX
            jne .L_40dd10

            mov R15,R13
.L_40dd57:

            add DWORD PTR [RSP+16],1
            mov ESI,DWORD PTR [R15]
            mov EDI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+20],ESI
            add DWORD PTR [RSP+40],EDI
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+44],EAX
            jne .L_40dce0
.L_40dd79:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40dd9b

            add RSP,136
.L_40dd90:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40dd9b:

            call __stack_chk_fail@PLT
.L_40dda0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_40ddba:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+44],R8D
            call .L_41ea90

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            je .L_40dec6

            lea RAX,QWORD PTR [RSP+80]
            lea R14,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40de30:

            mov EAX,DWORD PTR [RSP+12]
            mov EBP,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+40]
            add RBP,QWORD PTR [RSP+24]
            add R12,QWORD PTR [RSP+32]
            test EAX,EAX
            je .L_40dea4

            xor R13D,R13D
            mov RAX,R15
            mov R15D,R13D
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40de60:

            mov ECX,DWORD PTR [R13+8]
            mov RDX,RBP
            mov RSI,R14
            mov RDI,RBX
            add R15D,1
            call QWORD PTR [RBX+16]

            mov RDX,QWORD PTR [RSP]
            mov RSI,R14
            mov RDI,RBX
            mov RBP,RAX
            call .L_40dba0

            mov RDX,R12
            mov ECX,DWORD PTR [R13+12]
            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+12],R15D
            mov R12,RAX
            jne .L_40de60

            mov R15,R13
.L_40dea4:

            add DWORD PTR [RSP+16],1
            mov EDX,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+20],EDX
            add DWORD PTR [RSP+40],ESI
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+44],EAX
            jne .L_40de30
.L_40dec6:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40dee8

            add RSP,136
.L_40dedd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40dee8:

            call __stack_chk_fail@PLT
.L_40deed:

            nop
            nop
            nop
.L_40def0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,104
.L_40df07:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+44],R8D
            call .L_41ea90

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            je .L_40dfdf

            lea R13,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            nop
            nop
            nop
            nop
            nop
.L_40df68:

            mov EAX,DWORD PTR [RSP+12]
            mov EBP,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+40]
            add RBP,QWORD PTR [RSP+24]
            add R12,QWORD PTR [RSP+32]
            test EAX,EAX
            je .L_40dfc1

            xor R14D,R14D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40df90:

            mov RDX,RBP
            mov ECX,DWORD PTR [R15+8]
            mov RSI,R13
            mov RDI,RBX
            add R14D,1
            call QWORD PTR [RBX+16]

            mov RDX,R12
            mov RBP,RAX
            mov ECX,DWORD PTR [R15+12]
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+12],R14D
            mov R12,RAX
            jne .L_40df90
.L_40dfc1:

            add DWORD PTR [RSP+16],1
            mov EDX,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+20],EDX
            add DWORD PTR [RSP+40],ESI
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+44],EAX
            jne .L_40df68
.L_40dfdf:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40dffe

            add RSP,104
.L_40dff3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40dffe:

            call __stack_chk_fail@PLT
.L_40e003:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e010:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_40e02a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+44],R8D
            call .L_41ea90

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            je .L_40e0ff

            lea R13,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
.L_40e090:

            mov EAX,DWORD PTR [RSP+12]
            mov EBP,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+40]
            add RBP,QWORD PTR [RSP+24]
            add R12,QWORD PTR [RSP+32]
            test EAX,EAX
            je .L_40e0e1

            xor R14D,R14D
            nop
            nop
.L_40e0b0:

            mov RDX,RBP
            mov ECX,DWORD PTR [R15+8]
            mov RSI,R13
            mov RDI,RBX
            add R14D,1
            call QWORD PTR [RBX+32]

            mov RDX,R12
            mov RBP,RAX
            mov ECX,DWORD PTR [R15+12]
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+40]

            cmp DWORD PTR [RSP+12],R14D
            mov R12,RAX
            jne .L_40e0b0
.L_40e0e1:

            add DWORD PTR [RSP+16],1
            mov EDX,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+20],EDX
            add DWORD PTR [RSP+40],ESI
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+44],EAX
            jne .L_40e090
.L_40e0ff:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40e121

            add RSP,136
.L_40e116:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40e121:

            call __stack_chk_fail@PLT
.L_40e126:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e130:

            push R15
            push R14
            mov R15D,R8D
            push R13
            push R12
            mov R14,R9
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,232
.L_40e14a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+20],ECX
            mov DWORD PTR [RSP+60],R8D
            call .L_41ea90

            pxor XMM0,XMM0
            test R15D,R15D
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movaps XMMWORD PTR [RSP+128],XMM0
            movaps XMMWORD PTR [RSP+144],XMM0
            movaps XMMWORD PTR [RSP+160],XMM0
            movaps XMMWORD PTR [RSP+176],XMM0
            movaps XMMWORD PTR [RSP+192],XMM0
            je .L_40e2ed

            lea RAX,QWORD PTR [RSP+144]
            lea R15,QWORD PTR [RSP+208]
            mov DWORD PTR [RSP+56],0
            mov DWORD PTR [RSP+36],0
            mov DWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e1f0:

            mov EAX,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+36]
            mov R13D,DWORD PTR [RSP+56]
            add R12,QWORD PTR [RSP+40]
            add R13,QWORD PTR [RSP+48]
            test EAX,EAX
            je .L_40e2cb

            lea RAX,QWORD PTR [RSP+80]
            xor EBP,EBP
            movss XMM0,DWORD PTR [RIP+.L_42ec60]
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+76]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
.L_40e230:

            mov RDX,R12
            movss DWORD PTR [RSP+16],XMM0
            mov ECX,DWORD PTR [R14+8]
            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call QWORD PTR [RBX+32]

            mov RDX,QWORD PTR [RBX+120]
            mov R12,RAX
            movss XMM0,DWORD PTR [RSP+16]
            test RDX,RDX
            je .L_40e318

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP]
            call .L_42b9c0

            pxor XMM2,XMM2
            mov RAX,QWORD PTR [RSP+8]
            movss XMM1,DWORD PTR [RSP+76]
            movss XMM0,DWORD PTR [RSP+16]
            ucomiss XMM1,XMM2
            jbe .L_40e318

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e290:

            movss DWORD PTR [RAX],XMM0
            add RAX,4
            cmp R15,RAX
            jne .L_40e290
.L_40e29d:

            movss DWORD PTR [RSP+16],XMM0
            mov RDX,R13
            mov ECX,DWORD PTR [R14+12]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            add EBP,1
            call QWORD PTR [RBX+40]

            cmp DWORD PTR [RSP+20],EBP
            mov R13,RAX
            movss XMM0,DWORD PTR [RSP+16]
            jne .L_40e230
.L_40e2cb:

            add DWORD PTR [RSP+32],1
            mov ESI,DWORD PTR [R14]
            mov EDI,DWORD PTR [R14+4]
            add DWORD PTR [RSP+36],ESI
            add DWORD PTR [RSP+56],EDI
            mov EAX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+60],EAX
            jne .L_40e1f0
.L_40e2ed:

            mov RAX,QWORD PTR [RSP+216]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40e33b

            add RSP,232
.L_40e307:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e318:

            mov RDX,QWORD PTR [RBX+112]
            mov RSI,QWORD PTR [RSP+8]
            movss DWORD PTR [RSP+16],XMM0
            mov RDI,QWORD PTR [RSP]
            call .L_42b9c0

            movss XMM0,DWORD PTR [RSP+16]
            jmp .L_40e29d
.L_40e33b:

            call __stack_chk_fail@PLT
.L_40e340:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,216
.L_40e35a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+60],R8D
            call .L_41ea90

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+176],XMM0
            je .L_40e532

            lea RAX,QWORD PTR [RSP+96]
            lea R13,QWORD PTR [RSP+64]
            lea R12,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+56],0
            mov DWORD PTR [RSP+36],0
            mov DWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e410:

            mov EAX,DWORD PTR [RSP+56]
            mov R14D,DWORD PTR [RSP+36]
            add RAX,QWORD PTR [RSP+48]
            add R14,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            je .L_40e510

            xor EBP,EBP
            jmp .L_40e495
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e440:

            mov RAX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [R13+24]
            xor RAX,QWORD PTR [R12+16]
            xor RDX,QWORD PTR [R12+24]
            or RDX,RAX
            jne .L_40e4be

            movdqa XMM0,XMMWORD PTR [RSP+160]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+176]
            movaps XMMWORD PTR [RSP+112],XMM0
.L_40e473:

            mov ECX,DWORD PTR [R15+12]
            mov RDX,QWORD PTR [RSP+8]
            mov RDI,RBX
            add EBP,1
            mov RSI,QWORD PTR [RSP+16]
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+28],EBP
            mov QWORD PTR [RSP+8],RAX
            je .L_40e510
.L_40e495:

            mov RDX,R14
            mov ECX,DWORD PTR [R15+8]
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+16]

            mov RDX,QWORD PTR [R13+8]
            mov R14,RAX
            xor RDX,QWORD PTR [R12+8]
            mov RAX,QWORD PTR [R13]
            xor RAX,QWORD PTR [R12]
            or RDX,RAX
            je .L_40e440
.L_40e4be:

            mov RAX,QWORD PTR [RBX+112]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,R13
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]

            movdqa XMM0,XMMWORD PTR [RSP+64]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+96]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            movaps XMMWORD PTR [RSP+176],XMM0
            jmp .L_40e473
          .byte 0x66
          .byte 0x90
.L_40e510:

            add DWORD PTR [RSP+32],1
            mov EDI,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+36],EDI
            add DWORD PTR [RSP+56],ESI
            mov EAX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+60],EAX
            jne .L_40e410
.L_40e532:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40e557

            add RSP,216
.L_40e54c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40e557:

            call __stack_chk_fail@PLT
.L_40e55c:

            nop
            nop
            nop
            nop
.L_40e560:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,216
.L_40e57a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+60],R8D
            call .L_41ea90

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+176],XMM0
            je .L_40e752

            lea RAX,QWORD PTR [RSP+96]
            lea R13,QWORD PTR [RSP+64]
            lea R12,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+56],0
            mov DWORD PTR [RSP+36],0
            mov DWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e630:

            mov EAX,DWORD PTR [RSP+56]
            mov R14D,DWORD PTR [RSP+36]
            add RAX,QWORD PTR [RSP+48]
            add R14,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            je .L_40e730

            xor EBP,EBP
            jmp .L_40e6b5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e660:

            mov RAX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [R13+24]
            xor RAX,QWORD PTR [R12+16]
            xor RDX,QWORD PTR [R12+24]
            or RDX,RAX
            jne .L_40e6de

            movdqa XMM0,XMMWORD PTR [RSP+160]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+176]
            movaps XMMWORD PTR [RSP+112],XMM0
.L_40e693:

            mov ECX,DWORD PTR [R15+12]
            mov RDX,QWORD PTR [RSP+8]
            mov RDI,RBX
            add EBP,1
            mov RSI,QWORD PTR [RSP+16]
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+28],EBP
            mov QWORD PTR [RSP+8],RAX
            je .L_40e730
.L_40e6b5:

            mov RDX,R14
            mov ECX,DWORD PTR [R15+8]
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+16]

            mov RDX,QWORD PTR [R13+8]
            mov R14,RAX
            xor RDX,QWORD PTR [R12+8]
            mov RAX,QWORD PTR [R13]
            xor RAX,QWORD PTR [R12]
            or RDX,RAX
            je .L_40e660
.L_40e6de:

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,R13
            mov RDI,RBX
            call .L_40dba0

            movdqa XMM0,XMMWORD PTR [RSP+64]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+96]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            movaps XMMWORD PTR [RSP+176],XMM0
            jmp .L_40e693
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e730:

            add DWORD PTR [RSP+32],1
            mov EDI,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+36],EDI
            add DWORD PTR [RSP+56],ESI
            mov EAX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+60],EAX
            jne .L_40e630
.L_40e752:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40e777

            add RSP,216
.L_40e76c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40e777:

            call __stack_chk_fail@PLT
.L_40e77c:

            nop
            nop
            nop
            nop
.L_40e780:

            test RSI,RSI
            push RBX
            lea RAX,QWORD PTR [RIP+.L_63ea00]
            mov RBX,RDI
            je .L_40e794

            mov RAX,QWORD PTR [RSI+40]
.L_40e794:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,8
            mov RSI,RAX
            call .L_4212e0

            mov QWORD PTR [RBX+40],RAX
            pop RBX
            ret 
.L_40e7ab:

            nop
            nop
            nop
            nop
            nop
.L_40e7b0:

            sub RSP,24
            mov ESI,3
            movsd QWORD PTR [RSP+8],XMM0
            call .L_4068a0

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM1,QWORD PTR [RIP+.L_42ec48]
            jb .L_40e7dc

            movsd QWORD PTR [RAX],XMM1
.L_40e7dc:

            add RSP,24
            ret 
.L_40e7e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e7f0:

            sub RSP,24
            xor EDI,EDI
            mov ESI,3
            movsd QWORD PTR [RSP+8],XMM0
            call .L_4068a0

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM1,QWORD PTR [RIP+.L_42ec48]
            jb .L_40e81e

            movsd QWORD PTR [RAX],XMM1
.L_40e81e:

            add RSP,24
            ret 
.L_40e823:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e830:

            push RBX
            mov RBX,RSI
            mov ESI,2
            call .L_4068a0

            test RAX,RAX
            je .L_40e855

            movdqu XMM0,XMMWORD PTR [RBX]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+16]
            movups XMMWORD PTR [RAX+16],XMM0
            pop RBX
            ret 
.L_40e855:

            lea RCX,QWORD PTR [RIP+.L_42ec20]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e990]
            mov EDX,97
            call __assert_fail@PLT
.L_40e874:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e880:

            push RBX
            mov RBX,RSI
            mov ESI,2
            call .L_4068a0

            test RAX,RAX
            je .L_40e8a5

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RBX+16],XMM0
            pop RBX
            ret 
.L_40e8a5:

            lea RCX,QWORD PTR [RIP+.L_42ec00]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e990]
            mov EDX,108
            call __assert_fail@PLT
.L_40e8c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e8d0:

            test RDI,RDI
            je .L_40e8df

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_40e830
.L_40e8df:

            lea RCX,QWORD PTR [RIP+.L_42ebe0]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e8f3]
            sub RSP,8
            mov EDX,115
            call __assert_fail@PLT
.L_40e902:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e910:

            test RDI,RDI
            je .L_40e91f

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_40e880
.L_40e91f:

            lea RCX,QWORD PTR [RIP+.L_42ebc0]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e90d]
            sub RSP,8
            mov EDX,122
            call __assert_fail@PLT
.L_40e942:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e950:

            test RSI,RSI
            push RBX
            lea RAX,QWORD PTR [RIP+.L_63e9e0]
            mov RBX,RDI
            je .L_40e964

            mov RAX,QWORD PTR [RSI+32]
.L_40e964:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,32
            mov RSI,RAX
            call .L_4212e0

            mov QWORD PTR [RBX+32],RAX
            pop RBX
            ret 
.L_40e97b:

            nop
            nop
            nop
            nop
            nop
.L_40e980:

            test RDI,RDI
            push RBX
.L_40e984:

            je .L_40ea01

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            test RDI,RDI
            je .L_40e997

            call .L_42b910
.L_40e997:

            mov RDI,QWORD PTR [RBX+112]
            test RDI,RDI
            je .L_40e9a5

            call .L_42b910
.L_40e9a5:

            mov RDI,QWORD PTR [RBX+128]
            test RDI,RDI
            je .L_40e9b6

            call .L_4109e0
.L_40e9b6:

            mov RDI,QWORD PTR [RBX+136]
            test RDI,RDI
            je .L_40e9c7

            call .L_4109e0
.L_40e9c7:

            mov RDI,QWORD PTR [RBX+200]
            test RDI,RDI
            je .L_40e9d8

            call .L_410ec0
.L_40e9d8:

            mov RSI,QWORD PTR [RBX+240]
            mov RDI,QWORD PTR [RBX+232]
            test RSI,RSI
            je .L_40e9f8

            call QWORD PTR [RBX+248]

            mov RDI,QWORD PTR [RBX+232]
.L_40e9f8:

            mov RSI,RBX
            pop RBX
.L_40e9fc:

            jmp .L_421170
.L_40ea01:

            lea RCX,QWORD PTR [RIP+.L_42eba0]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e927]
            mov EDX,151
            call __assert_fail@PLT
.L_40ea20:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            mov ESI,13
            mov RBP,RCX
            mov R12,R8
            mov R13,R9
            sub RSP,56
.L_40ea42:

            mov DWORD PTR [RSP+44],EDX
            call .L_4068a0

            mov ESI,264
            mov RDI,R14
            mov QWORD PTR [RSP+8],RAX
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_40edd5

            test R15,R15
            mov QWORD PTR [RAX+112],R15
            je .L_40ebcc

            mov RAX,QWORD PTR [RSP+8]
            mov R15,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RBX+112]
            mov QWORD PTR [RSP+8],RAX
            test R15,R15
            je .L_40ebb2

            lea RAX,QWORD PTR [RBX+248]
            lea RCX,QWORD PTR [RBX+240]
            lea RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+32],R14
            mov RBX,R15
            mov QWORD PTR [RSP+16],RDX
            mov R15,RAX
            mov R14,RCX
            jmp .L_40eacd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40eac0:

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            je .L_40eba8
.L_40eacd:

            sub RSP,8
.L_40ead1:

            mov RSI,R14
            mov R9,R12
            push R13
            mov R8,RBP
            mov RCX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,R15
            call QWORD PTR [RBX]

            test EAX,EAX
            pop RCX
            pop RSI
.L_40eaef:

            je .L_40eac0

            mov EAX,DWORD PTR [RBP]
            mov R15,RBX
            mov RBX,QWORD PTR [RSP+24]
            mov R14,QWORD PTR [RSP+32]
            xor ECX,ECX
            xor EDX,EDX
            mov DWORD PTR [RBX],EAX
            mov EAX,DWORD PTR [R12]
            mov RDI,R14
            mov QWORD PTR [RBX+232],R14
            mov DWORD PTR [RBX+4],EAX
            mov EAX,DWORD PTR [R13]
            mov DWORD PTR [RBX+208],EAX
            mov ESI,DWORD PTR [RBP]
            call .L_40a8d0

            mov ESI,DWORD PTR [R12]
            xor ECX,ECX
            mov EDX,1
            mov RDI,R14
            mov QWORD PTR [RBX+16],RAX
            call .L_40a8d0

            mov ESI,DWORD PTR [RBP]
            xor EDX,EDX
            mov ECX,1
            mov RDI,R14
            mov QWORD PTR [RBX+24],RAX
            call .L_40a8d0

            mov ESI,DWORD PTR [R12]
            mov EDX,1
            mov QWORD PTR [RBX+32],RAX
            mov ECX,1
            mov RDI,R14
            call .L_40a8d0

            mov EDX,DWORD PTR [R15+8]
            mov QWORD PTR [RBX+40],RAX
            test EDX,EDX
            je .L_40eb93

            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBX+256],RAX
            lea RAX,QWORD PTR [RIP+.L_40dab0]
            mov QWORD PTR [RBX+8],RAX
.L_40eb93:

            add RSP,56
.L_40eb97:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40eba8:

            mov RBX,QWORD PTR [RSP+24]
            mov R14,QWORD PTR [RSP+32]
.L_40ebb2:

            mov EDX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSP+8]
            mov R9,R13
            mov R8,R12
            mov RCX,RBP
            mov RDI,R14
            call .L_41e1c0
.L_40ebcc:

            mov EDI,DWORD PTR [RBP]
            call .L_40aa10

            test EAX,EAX
            jne .L_40eca8
.L_40ebdc:

            mov ESI,DWORD PTR [RBP]
            test ESI,ESI
            jne .L_40ebef

            mov EAX,DWORD PTR [R12]
            test EAX,EAX
            je .L_40ed30
.L_40ebef:

            xor ECX,ECX
            xor EDX,EDX
            mov RDI,R14
            call .L_40a8d0

            mov ESI,DWORD PTR [R12]
            xor ECX,ECX
            mov QWORD PTR [RBX+16],RAX
            mov EDX,1
            mov RDI,R14
            call .L_40a8d0

            cmp QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+24],RAX
            je .L_40edb0

            test RAX,RAX
            je .L_40edb0

            mov EDX,DWORD PTR [RBX]
            mov EAX,DWORD PTR [R13]
            and EDX,7
            je .L_40ed70

            cmp EDX,1
            jg .L_40ed70
.L_40ec42:

            test AH,2
            je .L_40ec80

            lea RAX,QWORD PTR [RIP+.L_40def0]
            mov QWORD PTR [RBX+8],RAX
.L_40ec52:

            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [RBX],EAX
            mov EAX,DWORD PTR [R12]
            mov DWORD PTR [RBX+4],EAX
            mov EAX,DWORD PTR [R13]
            mov QWORD PTR [RBX+232],R14
            mov QWORD PTR [RBX+240],0
            mov DWORD PTR [RBX+208],EAX
            jmp .L_40eb93
          .byte 0x90
.L_40ec80:

            mov EDX,EAX
            and EDX,4096
            test AL,64
            je .L_40ed58

            test EDX,EDX
            je .L_40ed90

            lea RAX,QWORD PTR [RIP+.L_40dda0]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_40ec52
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40eca8:

            mov EDI,DWORD PTR [R12]
            call .L_40aa10

            test EAX,EAX
            je .L_40ebdc

            mov ESI,DWORD PTR [RBP]
            xor EDX,EDX
            mov ECX,1
            mov RDI,R14
            call .L_40a8d0

            mov ESI,DWORD PTR [R12]
            mov ECX,1
            mov EDX,1
            mov QWORD PTR [RBX+32],RAX
            mov RDI,R14
            call .L_40a8d0

            mov EDX,DWORD PTR [R13]
            mov QWORD PTR [RBX+40],RAX
            mov ECX,EDX
            or ECX,33554432
            cmp QWORD PTR [RBX+32],0
            mov DWORD PTR [R13],ECX
            je .L_40edb0

            test RAX,RAX
            je .L_40edb0

            and DH,2
            je .L_40eda0

            lea RAX,QWORD PTR [RIP+.L_40e010]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_40ec52
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ed30:

            mov EAX,DWORD PTR [R13]
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+16],0
            or EAX,33554432
            mov DWORD PTR [R13],EAX
            jmp .L_40ec42
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ed58:

            test EDX,EDX
            je .L_40ed80

            lea RAX,QWORD PTR [RIP+.L_40e560]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_40ec52
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ed70:

            or EAX,33554432
            mov DWORD PTR [R13],EAX
            jmp .L_40ec42
          .byte 0x66
          .byte 0x90
.L_40ed80:

            lea RAX,QWORD PTR [RIP+.L_40e340]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_40ec52
.L_40ed90:

            lea RAX,QWORD PTR [RIP+.L_40dc50]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_40ec52
.L_40eda0:

            lea RAX,QWORD PTR [RIP+.L_40e130]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_40ec52
.L_40edb0:

            lea RDX,QWORD PTR [RIP+.L_42e93a]
            mov ESI,8
            mov RDI,R14
            xor EAX,EAX
            call .L_421420

            mov RDI,RBX
            xor EBX,EBX
            call .L_40e980

            jmp .L_40eb93
.L_40edd5:

            mov RDI,R15
            call .L_42b910

            jmp .L_40eb93
.L_40ede2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40edf0:

            sub RSP,40
.L_40edf4:

            mov RAX,RDI
            mov R8D,1
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            mov QWORD PTR [RSP],0
            mov RDI,RAX
            mov DWORD PTR [RSP+8],ECX
            mov DWORD PTR [RSP+12],ECX
            mov R9,RSP
            call QWORD PTR [RAX+8]

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40ee3b

            add RSP,40
.L_40ee3a:

            ret 
.L_40ee3b:

            call __stack_chk_fail@PLT
.L_40ee40:

            sub RSP,40
.L_40ee44:

            mov RAX,RDI
            mov DWORD PTR [RSP+8],R8D
            mov DWORD PTR [RSP+12],R8D
            mov R9,RSP
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            mov QWORD PTR [RSP],0
            mov RDI,RAX
            mov R8D,1
            call QWORD PTR [RAX+8]

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40ee8d

            add RSP,40
.L_40ee8c:

            ret 
.L_40ee8d:

            call __stack_chk_fail@PLT
.L_40ee92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40eea0:

            sub RSP,40
.L_40eea4:

            mov RAX,RDI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            mov EDI,DWORD PTR [RSP+48]
            mov DWORD PTR [RSP],R9D
            mov R9,RSP
            mov DWORD PTR [RSP+4],EDI
            mov EDI,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+8],EDI
            mov EDI,DWORD PTR [RSP+64]
            mov DWORD PTR [RSP+12],EDI
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40eef1

            add RSP,40
.L_40eef0:

            ret 
.L_40eef1:

            call __stack_chk_fail@PLT
.L_40eef6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ef00:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_40ef0b:

            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_40ef88

            mov RAX,QWORD PTR [RSI+120]
            mov QWORD PTR [RSP],0
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_40efc0

            xor EBP,EBP
            jmp .L_40ef51
.L_40ef40:

            mov RBX,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [R12+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_40efc0
.L_40ef51:

            mov EDX,24
            mov RSI,RBX
            call .L_4212e0

            test RAX,RAX
            je .L_40ef9e

            test RBP,RBP
            mov QWORD PTR [RAX+16],0
            je .L_40ef74

            mov QWORD PTR [RBP+16],RAX
.L_40ef74:

            cmp QWORD PTR [RSP],0
            jne .L_40ef40

            mov QWORD PTR [RSP],RAX
            jmp .L_40ef40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef88:

            lea RSI,QWORD PTR [RIP+.L_641ce0]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+120],RAX
.L_40ef9e:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40efd4

            add RSP,16
.L_40efb2:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40efc0:

            mov RSI,RSP
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+120],RAX
            jmp .L_40ef9e
.L_40efd4:

            call __stack_chk_fail@PLT
.L_40efd9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40efe0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40efe7:

            mov RBX,RSI
            mov ESI,13
            call .L_4068a0

            test RBX,RBX
            mov R12,RAX
            je .L_40f050

            cmp QWORD PTR [RBX+24],0
            je .L_40f048

            mov ESI,24
            mov RDI,RBP
            call .L_4064d0

            test RAX,RAX
            je .L_40f048

            xor EDX,EDX
            cmp DWORD PTR [RBX+4],2080
            setb DL
            mov DWORD PTR [RAX+8],EDX
            mov RDX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [R12]
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [R12],RAX
            mov EAX,1
            pop RBX
.L_40f03d:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f048:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_40f050:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_40f061:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f070:

            test RDI,RDI
            je .L_40f084

            mov QWORD PTR [RDI+240],RSI
            mov QWORD PTR [RDI+248],RDX
            ret 
.L_40f084:

            lea RCX,QWORD PTR [RIP+.L_42eb80]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e954]
            sub RSP,8
            mov EDX,733
            call __assert_fail@PLT
.L_40f0a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f0b0:

            test RDI,RDI
            je .L_40f0bd

            mov RAX,QWORD PTR [RDI+240]
            ret 
.L_40f0bd:

            lea RCX,QWORD PTR [RIP+.L_42eb60]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e954]
            sub RSP,8
            mov EDX,741
            call __assert_fail@PLT
.L_40f0e0:

            test RDI,RDI
            je .L_40f0ff

            test RSI,RSI
            je .L_40f0f1

            mov RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSI],RAX
.L_40f0f1:

            test RDX,RDX
            je .L_40f0fd

            mov RAX,QWORD PTR [RDI+24]
            mov QWORD PTR [RDX],RAX
.L_40f0fd:

            ret 
.L_40f0ff:

            lea RCX,QWORD PTR [RIP+.L_42eb40]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e954]
            sub RSP,8
            mov EDX,748
            call __assert_fail@PLT
.L_40f122:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f130:

            test RDI,RDI
            je .L_40f14f

            test RSI,RSI
            je .L_40f141

            mov RAX,QWORD PTR [RDI+32]
            mov QWORD PTR [RSI],RAX
.L_40f141:

            test RDX,RDX
            je .L_40f14d

            mov RAX,QWORD PTR [RDI+40]
            mov QWORD PTR [RDX],RAX
.L_40f14d:

            ret 
.L_40f14f:

            lea RCX,QWORD PTR [RIP+.L_42eb20]
            lea RSI,QWORD PTR [RIP+.L_42e8e8]
            lea RDI,QWORD PTR [RIP+.L_42e954]
            sub RSP,8
            mov EDX,755
            call __assert_fail@PLT
.L_40f172:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f180:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_40f18e:

            mov EAX,DWORD PTR [RSP+160]
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP+32],R9
            test AH,2
            jne .L_40f340

            lea ECX,DWORD PTR [RSI-1]
            mov R13D,ESI
            mov RSI,QWORD PTR [RSP+8]
            mov RBP,RDX
            test AH,16
            mov QWORD PTR [RSP+40],RCX
            lea RDX,QWORD PTR [RSI+RCX*4]
            mov EBX,DWORD PTR [RDX]
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+56],EBX
            je .L_40f1e7

            cmp QWORD PTR [RSP+128],0
            je .L_40f370
.L_40f1e7:

            mov EDI,DWORD PTR [RSP+144]
            call .L_40aa10

            test EAX,EAX
            je .L_40f300
.L_40f1fb:

            or DWORD PTR [RSP+160],64
.L_40f203:

            test R13D,R13D
            jle .L_40f2d0

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_40f2d0

            call .L_403530

            mov EBX,EAX
            mov RAX,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+60],R13D
            mov R12D,EBX
            xor R15D,R15D
            mov R13D,EBX
            add RAX,1
            mov QWORD PTR [RSP+16],RAX
            jmp .L_40f292
          .byte 0x66
          .byte 0x90
.L_40f240:

            cmp R13D,1482250784
            mov RDI,R14
            setne CL
            cmp R13D,1281450528
            setne DL
            test CL,DL
            jne .L_40f320

            cmp EAX,1818848875
            je .L_40f320

            call .L_403510

            mov RDI,R14
            mov EBX,EAX
            call .L_403530

            mov R13D,EAX
.L_40f27c:

            test R15,R15
            cmove R12D,EBX
.L_40f283:

            add R15,1
            cmp QWORD PTR [RSP+16],R15
            je .L_40f3c0
.L_40f292:

            mov R14,QWORD PTR [RBP+R15*8]
            test R14,R14
            je .L_40f2d0

            mov RDI,R14
            call .L_403550

            cmp EAX,1852662636
            jne .L_40f240

            cmp DWORD PTR [RSP+60],1
            mov RDI,R14
            je .L_40f398

            call .L_403510

            mov EBX,826494034
            mov R13D,EAX
            jmp .L_40f27c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f2d0:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_42e9b8]
            mov ESI,4
            xor EAX,EAX
            xor R14D,R14D
            call .L_421420
.L_40f2ea:

            add RSP,72
.L_40f2ee:

            mov RAX,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f300:

            mov EDI,DWORD PTR [RSP+152]
            call .L_40aa10

            test EAX,EAX
            jne .L_40f1fb

            jmp .L_40f203
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f320:

            call .L_403530

            mov RDI,R14
            mov EBX,EAX
            call .L_403510

            mov R13D,EAX
            jmp .L_40f27c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f340:

            lea RCX,QWORD PTR [RSP+144]
            lea R9,QWORD PTR [RSP+160]
            lea R8,QWORD PTR [RSP+152]
            xor EDX,EDX
            xor ESI,ESI
            call .L_40ea20

            mov R14,RAX
            jmp .L_40f2ea
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f370:

            mov EDI,DWORD PTR [RSP+144]
            and AH,239
            mov DWORD PTR [RSP+160],EAX
            call .L_40aa10

            test EAX,EAX
            jne .L_40f1fb

            jmp .L_40f300
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f398:

            call .L_403530

            test R15,R15
            mov R13D,EAX
            jne .L_40f283

            mov EBX,EAX
            mov R13D,DWORD PTR [RSP+60]
            mov R12D,826494034
            jmp .L_40f3c8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f3c0:

            mov EBX,R13D
            mov R13D,DWORD PTR [RSP+60]
.L_40f3c8:

            mov ESI,DWORD PTR [RSP+144]
            mov EDI,R12D
            call .L_40da60

            test EAX,EAX
            je .L_40f770

            mov ESI,DWORD PTR [RSP+152]
            mov EDI,EBX
            call .L_40da60

            test EAX,EAX
            je .L_40f790

            sub RSP,8
.L_40f3f9:

            mov RCX,RBP
            mov ESI,R13D
            mov EAX,DWORD PTR [RSP+168]
            push RAX
            mov R9,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+16]
            call .L_420950

            test RAX,RAX
            mov R14,RAX
            pop RCX
            pop RSI
.L_40f428:

            je .L_40f7b0

            mov EDI,R12D
            call .L_40ccf0

            mov RDI,R14
            mov R15D,EAX
            call .L_42b8b0

            cmp R15D,EAX
            jne .L_40f600

            mov EDI,EBX
            call .L_40ccf0

            mov RDI,R14
            mov R15D,EAX
            call .L_42b8e0

            cmp R15D,EAX
            jne .L_40f600

            mov EDX,DWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RSP+144]
            lea R9,QWORD PTR [RSP+160]
            lea R8,QWORD PTR [RSP+152]
            mov RSI,R14
            call .L_40ea20

            test RAX,RAX
            mov R14,RAX
            je .L_40f2ea

            mov DWORD PTR [RAX+144],R12D
            mov DWORD PTR [RAX+148],EBX
            mov ESI,2004119668
            mov RAX,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RBP]
            mov EAX,DWORD PTR [RAX]
            mov DWORD PTR [R14+224],EAX
            call .L_404230

            test RAX,RAX
            je .L_40f660

            movsd XMM0,QWORD PTR [RAX]
            lea RDI,QWORD PTR [R14+152]
            movsd QWORD PTR [R14+152],XMM0
            movsd XMM0,QWORD PTR [RAX+8]
            movsd QWORD PTR [R14+160],XMM0
            movsd XMM0,QWORD PTR [RAX+16]
            movsd QWORD PTR [R14+168],XMM0
            call .L_40db30
.L_40f500:

            mov RAX,QWORD PTR [RSP+40]
            mov ESI,2004119668
            lea RBX,QWORD PTR [RBP+RAX*8]
            mov RDI,QWORD PTR [RBX]
            call .L_404230

            test RAX,RAX
            je .L_40f630

            movsd XMM0,QWORD PTR [RAX]
            lea RDI,QWORD PTR [R14+176]
            movsd QWORD PTR [R14+176],XMM0
            movsd XMM0,QWORD PTR [RAX+8]
            movsd QWORD PTR [R14+184],XMM0
            movsd XMM0,QWORD PTR [RAX+16]
            movsd QWORD PTR [R14+192],XMM0
            call .L_40db30
.L_40f555:

            cmp QWORD PTR [RSP+128],0
            je .L_40f56e

            test BYTE PTR [RSP+161],16
            jne .L_40f720
.L_40f56e:

            mov RDI,QWORD PTR [RBP]
            mov ESI,1668051572
            call .L_402ea0

            test EAX,EAX
            jne .L_40f6d0
.L_40f584:

            mov RDI,QWORD PTR [RBX]
            call .L_403550

            cmp EAX,1818848875
            je .L_40f690

            mov RDI,QWORD PTR [RBX]
            mov ESI,1668051572
            call .L_402ea0

            test EAX,EAX
            jne .L_40f760
.L_40f5ac:

            mov EAX,DWORD PTR [RSP+160]
            test AL,128
            jne .L_40f6f8

            mov QWORD PTR [R14+200],0
.L_40f5c6:

            test AL,64
            jne .L_40f2ea

            pxor XMM0,XMM0
            lea RDI,QWORD PTR [R14+48]
            lea RSI,QWORD PTR [R14+80]
            movups XMMWORD PTR [R14+48],XMM0
            movups XMMWORD PTR [RDI+16],XMM0
            cmp QWORD PTR [R14+120],0
            jne .L_40f7cc

            mov RAX,QWORD PTR [R14+112]
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]

            jmp .L_40f2ea
          .byte 0x66
          .byte 0x90
.L_40f600:

            mov RDI,R14
            xor R14D,R14D
            call .L_42b910

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_42ea30]
            mov ESI,13
            xor EAX,EAX
            call .L_421420

            jmp .L_40f2ea
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f630:

            mov RAX,QWORD PTR [RIP+.L_42ec50]
            mov QWORD PTR [R14+176],RAX
            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            mov QWORD PTR [R14+184],RAX
            mov RAX,QWORD PTR [RIP+.L_42ec58]
            mov QWORD PTR [R14+192],RAX
            jmp .L_40f555

            nop
.L_40f660:

            mov RAX,QWORD PTR [RIP+.L_42ec50]
            mov QWORD PTR [R14+152],RAX
            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            mov QWORD PTR [R14+160],RAX
            mov RAX,QWORD PTR [RIP+.L_42ec58]
            mov QWORD PTR [R14+168],RAX
            jmp .L_40f500
          .byte 0x90
.L_40f690:

            mov RDI,QWORD PTR [RBX]
            mov ESI,1668050804
            call .L_402ea0

            test EAX,EAX
            mov ESI,1668050804
            je .L_40f5ac
.L_40f6aa:

            mov RDI,QWORD PTR [RBX]
            call .L_404230

            mov RDI,RAX
            call .L_410a30

            mov QWORD PTR [R14+136],RAX
            jmp .L_40f5ac
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f6d0:

            mov RDI,QWORD PTR [RBP]
            mov ESI,1668051572
            call .L_404230

            mov RDI,RAX
            call .L_410a30

            mov QWORD PTR [R14+128],RAX
            jmp .L_40f584
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f6f8:

            mov RDI,QWORD PTR [RSP]
            mov RDX,RBP
            mov ESI,R13D
            call .L_4292f0

            mov QWORD PTR [R14+200],RAX
            mov EAX,DWORD PTR [RSP+160]
            jmp .L_40f5c6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f720:

            sub RSP,8
.L_40f724:

            mov RSI,RBP
            push QWORD PTR [RSP+136]
            mov R9D,DWORD PTR [RSP+152]
            mov R8,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+16]
            call .L_4242a0

            mov QWORD PTR [R14+120],RAX
            pop RAX
            pop RDX
            jmp .L_40f56e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f760:

            mov ESI,1668051572
            jmp .L_40f6aa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f770:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_42e9e0]
            mov ESI,9
            xor EAX,EAX
            xor R14D,R14D
            call .L_421420

            jmp .L_40f2ea
          .byte 0x90
.L_40f790:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_42ea08]
            mov ESI,9
            xor R14D,R14D
            call .L_421420

            jmp .L_40f2ea
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f7b0:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_42e96e]
            mov ESI,13
            xor EAX,EAX
            call .L_421420

            jmp .L_40f2ea
.L_40f7cc:

            mov RDX,RSI
            mov RSI,RDI
            mov RDI,R14
            call .L_40dba0

            jmp .L_40f2ea
.L_40f7df:

            nop
.L_40f7e0:

            push R15
            push R14
            mov EAX,EDX
            push R13
            push R12
            sub EAX,1
            push RBP
            push RBX
            sub RSP,4168
.L_40f7f6:

            mov DWORD PTR [RSP+28],EDX
            mov QWORD PTR [RSP+8],RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+4152],RDX
            xor EDX,EDX
            cmp EAX,254
            mov QWORD PTR [RSP+32],RSI
            mov DWORD PTR [RSP+40],ECX
            mov DWORD PTR [RSP+44],R8D
            ja .L_40f8ec

            mov EBX,DWORD PTR [RSP+4224]
            lea RAX,QWORD PTR [RAX*4+4]
            lea R12,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+1072]
            lea R14,QWORD PTR [RSP+2096]
            mov R15D,R9D
            mov QWORD PTR [RSP+16],RAX
            xor EBP,EBP
            shr EBX,13
            and EBX,1
            nop
.L_40f860:

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,3
            mov DWORD PTR [R12+RBP*1],EBX
            mov DWORD PTR [R13+RBP*1],R15D
            call .L_4068a0

            movsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [R14+RBP*2],XMM0
            add RBP,4
            cmp RBP,QWORD PTR [RSP+16]
            jne .L_40f860

            sub RSP,8
.L_40f891:

            mov R9,R14
            mov R8,R13
            mov EAX,DWORD PTR [RSP+4232]
            mov RCX,R12
            push RAX
            mov EAX,DWORD PTR [RSP+60]
            push RAX
            mov EAX,DWORD PTR [RSP+64]
            push RAX
            push 0
            push 0
            mov RDX,QWORD PTR [RSP+80]
            mov ESI,DWORD PTR [RSP+76]
            mov RDI,QWORD PTR [RSP+56]
            call .L_40f180

            add RSP,48
.L_40f8c7:

            mov RCX,QWORD PTR [RSP+4152]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40f907

            add RSP,4168
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f8ec:

            mov ECX,DWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RIP+.L_42ea68]
            xor EAX,EAX
            mov ESI,2
            call .L_421420

            xor EAX,EAX
            jmp .L_40f8c7
.L_40f907:

            call __stack_chk_fail@PLT
.L_40f90c:

            nop
            nop
            nop
            nop
.L_40f910:

            push R15
            lea EAX,DWORD PTR [RSI-1]
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBX,ESI
            sub RSP,8
            cmp EAX,254
            ja .L_40f970

            mov RBP,RDI
            mov RDI,QWORD PTR [RDI]
            mov R12D,EDX
            mov R13D,ECX
            mov R14D,R8D
            mov R15D,R9D
            call .L_402dd0

            sub RSP,8
            mov ECX,R12D
            mov EDX,EBX
            push R15
            mov R9D,R14D
            mov R8D,R13D
            mov RSI,RBP
            mov RDI,RAX
            call .L_40f7e0

            pop RDX
            pop RCX
.L_40f95f:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40f970:

            lea RDX,QWORD PTR [RIP+.L_42ea68]
            mov ECX,ESI
            xor EAX,EAX
            mov ESI,2
            xor EDI,EDI
            call .L_421420

            xor EAX,EAX
            jmp .L_40f95f
.L_40f98b:

            nop
            nop
            nop
            nop
            nop
.L_40f990:

            sub RSP,40
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            xor EAX,EAX
            test RCX,RCX
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RCX
            setne AL
            mov RSI,RSP
            sub RSP,8
            add EAX,1
            mov ECX,DWORD PTR [RSP+56]
            push RCX
            mov ECX,EDX
            mov EDX,EAX
            call .L_40f7e0

            pop RDX
            pop RCX
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40f9e4

            add RSP,40
            ret 
.L_40f9e4:

            call __stack_chk_fail@PLT
.L_40f9e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f9f0:

            push R15
            push R14
            mov R15D,R9D
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RDI
            mov R12D,ESI
            mov R14D,R8D
            sub RSP,40
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_402dd0

            xor EDX,EDX
            test RBX,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+8],RBX
            setne DL
            mov RSI,RSP
            sub RSP,8
            add EDX,1
            mov ECX,R12D
            push R15
            mov R9D,R14D
            mov R8D,R13D
            mov RDI,RAX
            call .L_40f7e0

            pop RDX
            pop RCX
            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40fa74

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40fa74:

            call __stack_chk_fail@PLT
.L_40fa79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fa80:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,RDI
            mov R14D,R8D
            sub RSP,152
.L_40fa9d:

            mov EBX,DWORD PTR [RSP+224]
            mov EBP,DWORD PTR [RSP+208]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov EDX,DWORD PTR [RSP+216]
            mov QWORD PTR [RSP+64],RSI
            mov ESI,3
            mov EAX,EBX
            mov QWORD PTR [RSP+72],R9
            mov QWORD PTR [RSP+80],R9
            shr EAX,13
            mov QWORD PTR [RSP],R9
            mov QWORD PTR [RSP+88],RCX
            and EAX,1
            mov QWORD PTR [RSP+8],RCX
            mov DWORD PTR [RSP+16],EBP
            mov DWORD PTR [RSP+20],EBP
            mov DWORD PTR [RSP+24],1
            mov DWORD PTR [RSP+28],EDX
            mov DWORD PTR [RSP+32],EAX
            mov DWORD PTR [RSP+36],EAX
            mov QWORD PTR [RSP+40],0
            call .L_4068a0

            movsd XMM0,QWORD PTR [RAX]
            test BH,80
            mov R9,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+120],XMM0
            movsd QWORD PTR [RSP+112],XMM0
            movsd QWORD PTR [RSP+104],XMM0
            movsd QWORD PTR [RSP+96],XMM0
            jne .L_40fba0

            mov RCX,QWORD PTR [RSP+8]
            xor EDX,EDX
            lea RSI,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+48],R15
            mov R9D,EBP
            mov R8D,R14D
            mov RDI,R12
            test RCX,RCX
            mov QWORD PTR [RSP+56],RCX
            mov ECX,R13D
            setne DL
            sub RSP,8
.L_40fb6a:

            push RBX
            add EDX,1
            call .L_40f7e0

            pop RDX
            pop RCX
.L_40fb75:

            mov RDI,QWORD PTR [RSP+136]
            xor RDI,QWORD PTR FS:[40]
            jne .L_40fbd7

            add RSP,152
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fba0:

            lea RCX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RSP+64]
            sub RSP,8
            push RBX
            push R14
            mov ESI,4
            push R13
            push 1
            mov RDI,R12
            push R9
            lea R9,QWORD PTR [RSP+144]
            lea R8,QWORD PTR [RSP+64]
            call .L_40f180

            add RSP,48
            jmp .L_40fb75
.L_40fbd7:

            call __stack_chk_fail@PLT
.L_40fbdc:

            nop
            nop
            nop
            nop
.L_40fbe0:

            push R15
            push R14
            mov R15D,R9D
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R12,RDX
            mov R14,R8
            sub RSP,8
            call .L_402dd0

            sub RSP,8
            mov R9,R14
            mov R8D,R13D
            mov EDX,DWORD PTR [RSP+80]
            mov RCX,R12
            mov RSI,RBX
            mov RDI,RAX
            push RDX
            mov EDX,DWORD PTR [RSP+80]
            push RDX
            push R15
            mov EDX,EBP
            call .L_40fa80

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40fc39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fc40:

            test RDI,RDI
            je .L_40fc50

            mov RAX,QWORD PTR [RDI+232]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40fc50:

            xor EAX,EAX
            ret 
.L_40fc53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fc60:

            xor EAX,EAX
            test RDI,RDI
            je .L_40fc69

            mov EAX,DWORD PTR [RDI]
.L_40fc69:

            ret 
.L_40fc6b:

            nop
            nop
            nop
            nop
            nop
.L_40fc70:

            xor EAX,EAX
            test RDI,RDI
            je .L_40fc7a

            mov EAX,DWORD PTR [RDI+4]
.L_40fc7a:

            ret 
.L_40fc7c:

            nop
            nop
            nop
            nop
.L_40fc80:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_40fc8d:

            test BYTE PTR [RBX+211],2
            mov RDI,QWORD PTR [RDI+232]
            je .L_40fcf0

            xor ECX,ECX
            mov EBP,EDX
            xor EDX,EDX
            mov R12D,ESI
            call .L_40a8d0

            mov RDI,QWORD PTR [RBX+232]
            mov R13,RAX
            xor ECX,ECX
            mov EDX,1
            mov ESI,EBP
            call .L_40a8d0

            test R13,R13
            je .L_40fd10

            test RAX,RAX
            je .L_40fd10

            mov DWORD PTR [RBX],R12D
            mov DWORD PTR [RBX+4],EBP
            mov QWORD PTR [RBX+16],R13
            mov QWORD PTR [RBX+24],RAX
            add RSP,8
.L_40fcdf:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fcf0:

            lea RDX,QWORD PTR [RIP+.L_42eaa0]
            xor EAX,EAX
            mov ESI,13
            call .L_421420

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40fd10:

            mov RDI,QWORD PTR [RBX+232]
            lea RDX,QWORD PTR [RIP+.L_42e93a]
            xor EAX,EAX
            mov ESI,8
            call .L_421420

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40fd37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fd40:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDX+48]
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            pxor XMM2,XMM2
            cvtss2sd XMM0,DWORD PTR [RDI]
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM2,XMM0
            jae .L_40fe18

            ucomisd XMM0,XMM1
            mov EDX,65535
            mov ECX,4294967295
            jb .L_40fdd8
.L_40fd7e:

            cmp DWORD PTR [RAX],EDX
            jbe .L_40fdfb
.L_40fd82:

            mov EDX,DWORD PTR [RAX+8]
            test EDX,EDX
            je .L_40fe28

            movzx ECX,CX
            imul RCX,RCX,294
            add RCX,QWORD PTR [RAX+80]
            lea EAX,DWORD PTR [RDX-1]
            xor EDX,EDX
            lea RDI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
.L_40fda8:

            movzx EAX,WORD PTR [RCX+RDX*1+262]
            pxor XMM0,XMM0
            pxor XMM3,XMM3
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM1
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RSI+RDX*2],XMM3
            add RDX,2
            cmp RDI,RDX
            jne .L_40fda8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fdd8:

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd ECX,XMM0
            sar ECX,16
            add CX,32767
            movzx EDX,CX
            cmp DWORD PTR [RAX],EDX
            ja .L_40fd82
.L_40fdfb:

            mov RDI,QWORD PTR [RAX+88]
            lea RDX,QWORD PTR [RIP+.L_42ec68]
            movzx ECX,CX
            mov ESI,2
            xor EAX,EAX
            jmp .L_421420
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40fe18:

            xor EDX,EDX
            xor ECX,ECX
            jmp .L_40fd7e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fe28:

            ret 
.L_40fe2a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40fe30:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDX+48]
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            pxor XMM2,XMM2
            cvtss2sd XMM0,DWORD PTR [RDI]
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM2,XMM0
            jae .L_40ff30

            ucomisd XMM0,XMM1
            mov EDX,65535
            mov ECX,4294967295
            jb .L_40fee8
.L_40fe6e:

            cmp DWORD PTR [RAX],EDX
            jbe .L_40ff0f
.L_40fe76:

            movzx ECX,CX
            pxor XMM0,XMM0
            imul RCX,RCX,294
            pxor XMM3,XMM3
            add RCX,QWORD PTR [RAX+80]
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            movzx EAX,WORD PTR [RCX+256]
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RCX+258]
            divsd XMM0,XMM1
            cvtsd2ss XMM3,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RCX+260]
            movss DWORD PTR [RSI],XMM3
            divsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movss DWORD PTR [RSI+4],XMM4
            divsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RSI+8],XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fee8:

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd ECX,XMM0
            sar ECX,16
            add CX,32767
            movzx EDX,CX
            cmp DWORD PTR [RAX],EDX
            ja .L_40fe76
.L_40ff0f:

            mov RDI,QWORD PTR [RAX+88]
            lea RDX,QWORD PTR [RIP+.L_42ec68]
            movzx ECX,CX
            mov ESI,2
            xor EAX,EAX
            jmp .L_421420
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ff30:

            xor EDX,EDX
            xor ECX,ECX
            jmp .L_40fe6e
.L_40ff39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ff40:

            push RBP
            push RBX
.L_40ff42:

            mov EBX,DWORD PTR [RDI+12]
            mov RBP,QWORD PTR [RDI+16]
            test EBX,EBX
            je .L_40ffc2

            mov RAX,RBP
            mov R11D,4294967295
            xor R10D,R10D
            jmp .L_40ff6d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ff60:

            add R10D,1
            add RAX,12
            cmp EBX,R10D
            je .L_40ffb0
.L_40ff6d:

            cmp WORD PTR [RAX],DX
            jne .L_40ff60

            cmp R11D,-1
            cmove R11D,R10D
            cmp WORD PTR [RAX+2],CX
            jne .L_40ff60

            test R8,R8
            je .L_40ff89

            mov WORD PTR [R8],DX
.L_40ff89:

            test R9,R9
            je .L_40ff96

            movzx EDX,WORD PTR [RAX+2]
            mov WORD PTR [R9],DX
.L_40ff96:

            test RSI,RSI
            je .L_40ffa0

            mov EDX,DWORD PTR [RAX+8]
            mov DWORD PTR [RSI],EDX
.L_40ffa0:

            mov EAX,DWORD PTR [RAX+4]
            add RAX,QWORD PTR [RDI+32]
            pop RBX
.L_40ffa8:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ffb0:

            cmp R11D,-1
            je .L_40ffc2

            movsxd R11,R11D
            lea RAX,QWORD PTR [R11+R11*2]
            lea RBP,QWORD PTR [RBP+RAX*4]
.L_40ffc2:

            test R8,R8
            je .L_40ffcf

            movzx EAX,WORD PTR [RBP]
            mov WORD PTR [R8],AX
.L_40ffcf:

            test R9,R9
            je .L_40ffdc

            movzx EAX,WORD PTR [RBP+2]
            mov WORD PTR [R9],AX
.L_40ffdc:

            test RSI,RSI
            je .L_40ffe6

            mov EAX,DWORD PTR [RBP+8]
            mov DWORD PTR [RSI],EAX
.L_40ffe6:

            mov EAX,DWORD PTR [RBP+4]
            add RAX,QWORD PTR [RDI+32]
            pop RBX
            pop RBP
            ret 
.L_40fff0:

            test RDI,RDI
            je .L_410120

            push R15
            push R14
            mov R10D,ECX
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R14D,R8D
            mov R12D,R8D
            mov EBP,ECX
            mov R15D,ESI
            sub RSP,24
.L_410018:

            mov EDX,DWORD PTR [RDI+12]
            mov EAX,DWORD PTR [RDI+8]
            mov RBX,RDI
            cmp EDX,EAX
            jae .L_410128
.L_410029:

            test EDX,EDX
            je .L_410078

            mov RAX,QWORD PTR [RBX+16]
            xor R9D,R9D
            jmp .L_41004d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410040:

            add R9D,1
            add RAX,12
            cmp R9D,EDX
            je .L_410078
.L_41004d:

            cmp R14W,WORD PTR [RAX+2]
            jne .L_410040

            cmp R10W,WORD PTR [RAX]
            jne .L_410040

            test R9D,R9D
            js .L_410078

            nop
.L_410060:

            xor EAX,EAX
.L_410062:

            add RSP,24
.L_410066:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410078:

            mov R14D,DWORD PTR [RBX+24]
            mov ECX,DWORD PTR [RBX+28]
            mov EAX,R14D
            sub EAX,ECX
            cmp R15D,EAX
            jbe .L_41016f
.L_41008d:

            test R14D,R14D
            je .L_4100a0

            lea EAX,DWORD PTR [R14+R14*1]
            cmp R14D,EAX
            ja .L_410060

            mov R14D,EAX
            jmp .L_4100a6
.L_4100a0:

            mov R14D,256
.L_4100a6:

            mov RSI,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBX]
            mov EDX,R14D
            call .L_421140

            test RAX,RAX
            je .L_410060

            mov ECX,DWORD PTR [RBX+28]
            mov EDX,R14D
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RBX+24],R14D
            sub EDX,ECX
            cmp R15D,EDX
            ja .L_41008d
.L_4100cf:

            mov EDI,ECX
            mov EDX,R15D
            mov RSI,R13
            add RDI,RAX
            mov DWORD PTR [RSP+8],ECX
            call memmove@PLT

            mov EDX,DWORD PTR [RBX+12]
            mov ECX,DWORD PTR [RSP+8]
            add DWORD PTR [RBX+28],R15D
            mov RAX,RDX
            lea RSI,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+16]
            add EAX,1
            lea RDX,QWORD PTR [RDX+RSI*4]
            mov DWORD PTR [RDX+4],ECX
            mov DWORD PTR [RDX+8],R15D
            mov WORD PTR [RDX+2],R12W
            mov WORD PTR [RDX],BP
            mov DWORD PTR [RBX+12],EAX
            mov EAX,1
            jmp .L_410062
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410120:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410128:

            test EAX,EAX
            js .L_410060

            lea ECX,DWORD PTR [RAX+RAX*1]
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            mov DWORD PTR [RSP+12],R10D
            lea EDX,DWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RSP+8],ECX
            shl EDX,2
            call .L_421140

            test RAX,RAX
            je .L_410060

            mov ECX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+16],RAX
            mov EDX,DWORD PTR [RBX+12]
            mov R10D,DWORD PTR [RSP+12]
            mov DWORD PTR [RBX+8],ECX
            jmp .L_410029
.L_41016f:

            mov RAX,QWORD PTR [RBX+32]
            test RAX,RAX
            je .L_410060

            jmp .L_4100cf
.L_410181:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410190:

            test RDI,RDI
            je .L_410218

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov EBP,DWORD PTR [RDI+4]
            mov RSI,QWORD PTR [RDI+80]
            mov RDI,QWORD PTR [RDI+88]
            test EBP,EBP
            je .L_4101e0

            add EBP,EBP
            cmp EBP,102400
            ja .L_410200

            imul EDX,EBP,294
            call .L_421140

            test RAX,RAX
            je .L_4101f4
.L_4101cb:

            mov QWORD PTR [RBX+80],RAX
            mov DWORD PTR [RBX+4],EBP
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_4101e0:

            mov EDX,18816
            mov EBP,64
            call .L_421140

            test RAX,RAX
            jne .L_4101cb
.L_4101f4:

            xor EAX,EAX
.L_4101f6:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410200:

            call .L_421170

            mov QWORD PTR [RBX+80],0
            xor EAX,EAX
            jmp .L_4101f6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410218:

            xor EAX,EAX
            ret 
.L_41021b:

            nop
            nop
            nop
            nop
            nop
.L_410220:

            mov ECX,DWORD PTR [RSI]
            test ECX,ECX
            je .L_410250

            mov RAX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410230:

            add RAX,4
            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            jne .L_410230

            sub RAX,RSI
            sar RAX,2
            lea EDX,DWORD PTR [RAX*4+4]
            jmp .L_421190
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410250:

            mov EDX,4
            jmp .L_421190
.L_41025a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_410260:

            push R12
            push RBP
            test ESI,ESI
            push RBX
.L_410266:

            mov EBP,ESI
            mov EAX,2
            mov ESI,40
            cmove EBP,EAX
            mov R12,RDI
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_4102aa

            mov QWORD PTR [RAX],R12
            mov EDX,12
            mov ESI,EBP
            mov RDI,R12
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_4102b8

            mov DWORD PTR [RBX+8],EBP
            mov DWORD PTR [RBX+12],0
.L_4102aa:

            mov RAX,RBX
            pop RBX
.L_4102ae:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4102b8:

            mov RSI,RBX
            mov RDI,R12
            xor EBX,EBX
            call .L_421170

            jmp .L_4102aa
.L_4102c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4102d0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RCX
            mov R13,RCX
            sub RSP,24
.L_4102ed:

            call strlen@PLT

            movzx EDI,BYTE PTR [R12+1]
            mov RBX,RAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R12]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            movzx EDI,BYTE PTR [R14+1]
            mov R12D,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R14]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            test RBP,RBP
            je .L_4103b0

            mov RDI,QWORD PTR [RBP]
            mov EDX,4
            mov ESI,EBX
            mov R15D,EAX
            call .L_421110

            test RAX,RAX
            mov R14,RAX
            je .L_4103b0

            test EBX,EBX
            je .L_410373

            lea ECX,DWORD PTR [RBX-1]
            xor EAX,EAX
            add RCX,1
            nop
            nop
            nop
            nop
            nop
.L_410360:

            movsx EDX,BYTE PTR [R13+RAX*1]
            mov DWORD PTR [R14+RAX*4],EDX
            add RAX,1
            cmp RCX,RAX
            jne .L_410360
.L_410373:

            lea ESI,DWORD PTR [RBX*4]
            movzx ECX,R12W
            movzx R8D,R15W
            mov RDX,R14
            mov RDI,RBP
            call .L_40fff0

            mov RDI,QWORD PTR [RBP]
            mov RSI,R14
            mov DWORD PTR [RSP+12],EAX
            call .L_421170

            mov EAX,DWORD PTR [RSP+12]
            add RSP,24
.L_4103a5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4103b0:

            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4103c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4103d0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RCX
            sub RSP,8
.L_4103e3:

            movzx EDI,BYTE PTR [RSI+1]
            mov EAX,EDI
            movzx EDI,BYTE PTR [RSI]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            movzx EDI,BYTE PTR [R13+1]
            mov EBX,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R13]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            test R12,R12
            je .L_410460

            test RBP,RBP
            je .L_410460

            mov ECX,DWORD PTR [R12]
            test ECX,ECX
            je .L_410470

            mov RSI,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410430:

            add RSI,4
            mov EDX,DWORD PTR [RSI]
            test EDX,EDX
            jne .L_410430

            sub ESI,R12D
.L_41043d:

            add RSP,8
.L_410441:

            movzx ECX,BX
            mov RDX,R12
            pop RBX
            mov RDI,RBP
            movzx R8D,AX
            pop RBP
            pop R12
            pop R13
            jmp .L_40fff0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410460:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410470:

            xor ESI,ESI
            jmp .L_41043d
.L_410474:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410480:

            test RDI,RDI
            je .L_4104c0

            push RBX
            mov RSI,QWORD PTR [RDI+16]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RSI,RSI
            je .L_41049d

            call .L_421170

            mov RDI,QWORD PTR [RBX]
.L_41049d:

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_4104ae

            call .L_421170

            mov RDI,QWORD PTR [RBX]
.L_4104ae:

            mov RSI,RBX
            pop RBX
            jmp .L_421170
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4104c0:

            ret 
.L_4104c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4104d0:

            push RBP
            push RBX
            sub RSP,8
.L_4104d6:

            test RDI,RDI
            je .L_41053c

            mov ESI,DWORD PTR [RDI+12]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call .L_410260

            test RAX,RAX
            mov RBP,RAX
            je .L_41053c

            mov EAX,DWORD PTR [RBX+12]
            cmp DWORD PTR [RBP+8],EAX
            jb .L_410534

            mov RDI,QWORD PTR [RBP+16]
            test RDI,RDI
            je .L_410534

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            je .L_410534

            lea RDX,QWORD PTR [RAX+RAX*2]
            shl RDX,2
            call memmove@PLT

            mov ESI,DWORD PTR [RBX+28]
            mov EAX,DWORD PTR [RBX+12]
            test ESI,ESI
            mov DWORD PTR [RBP+12],EAX
            jne .L_410550

            mov QWORD PTR [RBP+32],0
            mov DWORD PTR [RBP+24],0
.L_410534:

            mov RDI,RBP
            call .L_410480
.L_41053c:

            xor EBP,EBP
            add RSP,8
.L_410542:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410550:

            mov RDI,QWORD PTR [RBX]
            call .L_4210b0

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RBP+32],RAX
            je .L_410534

            mov EDX,DWORD PTR [RBX+28]
            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            mov DWORD PTR [RBP+24],EDX
            je .L_410534

            call memmove@PLT

            mov EAX,DWORD PTR [RBX+28]
            mov DWORD PTR [RBP+28],EAX
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
.L_410588:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410590:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R14,RDX
            push RBX
            mov EBP,R8D
            mov RBX,RCX
            sub RSP,16
.L_4105a8:

            movzx EDI,BYTE PTR [RSI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],0
            mov EAX,EDI
            movzx EDI,BYTE PTR [RSI]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            movzx EDI,BYTE PTR [R14+1]
            mov R12D,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R14]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            test R13,R13
            je .L_4105fe

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            jne .L_410628
.L_4105fe:

            xor EAX,EAX
.L_410600:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4106a7

            add RSP,16
.L_410618:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410628:

            lea RSI,QWORD PTR [RSP+4]
            xor R9D,R9D
            xor R8D,R8D
            mov RDI,R13
            movzx ECX,AX
            movzx EDX,R12W
            call .L_40ff40

            test RAX,RAX
            mov RDI,RAX
            je .L_4105fe

            mov ESI,DWORD PTR [RSP+4]
            shr ESI,2
            test RBX,RBX
            lea EAX,DWORD PTR [RSI+1]
            je .L_410600

            test EBP,EBP
            je .L_4105fe

            lea EAX,DWORD PTR [RSI+1]
            cmp EAX,EBP
            ja .L_4106a0
.L_410664:

            test ESI,ESI
            je .L_41068d

            lea R8D,DWORD PTR [RSI-1]
            xor EDX,EDX
            xor R9D,R9D
            add R8,1
            nop
            nop
            nop
.L_410678:

            mov ECX,DWORD PTR [RDI+RDX*4]
            test ECX,ECX
            cmove ECX,R9D
            mov BYTE PTR [RBX+RDX*1],CL
            add RDX,1
            cmp R8,RDX
            jne .L_410678
.L_41068d:

            mov BYTE PTR [RBX+RSI*1],0
            jmp .L_410600
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4106a0:

            lea ESI,DWORD PTR [RBP-1]
            mov EAX,EBP
            jmp .L_410664
.L_4106a7:

            call __stack_chk_fail@PLT
.L_4106ac:

            nop
            nop
            nop
            nop
.L_4106b0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R14,RDX
            push RBX
            mov EBP,R8D
            mov RBX,RCX
            sub RSP,16
.L_4106c8:

            movzx EDI,BYTE PTR [RSI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],0
            mov EAX,EDI
            movzx EDI,BYTE PTR [RSI]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            movzx EDI,BYTE PTR [R14+1]
            mov R12D,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R14]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            test R13,R13
            je .L_41071e

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            jne .L_410748
.L_41071e:

            xor EAX,EAX
.L_410720:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4107bc

            add RSP,16
.L_410738:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410748:

            lea RSI,QWORD PTR [RSP+4]
            xor R9D,R9D
            xor R8D,R8D
            movzx ECX,AX
            movzx EDX,R12W
            mov RDI,R13
            call .L_40ff40

            test RAX,RAX
            je .L_41071e

            test RBX,RBX
            je .L_4107b0

            test EBP,EBP
            je .L_41071e

            mov EDX,DWORD PTR [RSP+4]
            mov ECX,EBP
            lea RSI,QWORD PTR [RDX+4]
            mov R12,RDX
            cmp RCX,RSI
            jae .L_41078c

            lea EDX,DWORD PTR [RBP-4]
            mov R12,RDX
            mov DWORD PTR [RSP+4],EDX
.L_41078c:

            mov RSI,RAX
            mov RDI,RBX
            call memmove@PLT

            mov EAX,R12D
            shr EAX,2
            mov DWORD PTR [RBX+RAX*4],0
            lea EAX,DWORD PTR [R12+4]
            jmp .L_410720
          .byte 0x66
          .byte 0x90
.L_4107b0:

            mov EAX,DWORD PTR [RSP+4]
            add EAX,4
            jmp .L_410720
.L_4107bc:

            call __stack_chk_fail@PLT
.L_4107c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4107d0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R14,RDX
            push RBX
            mov RBP,RCX
            mov RBX,R8
            sub RSP,16
.L_4107e8:

            movzx EDI,BYTE PTR [RSI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [RSI]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            movzx EDI,BYTE PTR [R14+1]
            mov R12D,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R14]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_404e90

            test R13,R13
            je .L_410836

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            jne .L_410858
.L_410836:

            xor EAX,EAX
.L_410838:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4108ac

            add RSP,16
.L_41084c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410858:

            lea R9,QWORD PTR [RSP+6]
            lea R8,QWORD PTR [RSP+4]
            xor ESI,ESI
            movzx ECX,AX
            movzx EDX,R12W
            mov RDI,R13
            call .L_40ff40

            test RAX,RAX
            je .L_410836

            movzx EDI,WORD PTR [RSP+4]
            call .L_404e90

            movzx EDI,WORD PTR [RSP+6]
            mov BYTE PTR [RBP],AL
            movzx EAX,AH
            mov BYTE PTR [RBP+1],AL
            mov BYTE PTR [RBP+2],0
            call .L_404e90

            mov BYTE PTR [RBX],AL
            movzx EAX,AH
            mov BYTE PTR [RBX+2],0
            mov BYTE PTR [RBX+1],AL
            mov EAX,1
            jmp .L_410838
.L_4108ac:

            call __stack_chk_fail@PLT
.L_4108b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4108c0:

            xor EAX,EAX
            test RDI,RDI
            je .L_4108ca

            mov EAX,DWORD PTR [RDI+12]
.L_4108ca:

            ret 
.L_4108cc:

            nop
            nop
            nop
            nop
.L_4108d0:

            xor EAX,EAX
            test RDI,RDI
            je .L_4108dc

            cmp DWORD PTR [RDI+12],ESI
            ja .L_4108e0
.L_4108dc:

            ret 
          .byte 0x66
          .byte 0x90
.L_4108e0:

            push R12
            mov ESI,ESI
            push RBP
            push RBX
.L_4108e6:

            mov RAX,QWORD PTR [RDI+16]
            mov RBX,RDX
            lea RDX,QWORD PTR [RSI+RSI*2]
            mov RBP,RCX
            lea R12,QWORD PTR [RAX+RDX*4]
            movzx EDI,WORD PTR [R12]
            call .L_404e90

            mov BYTE PTR [RBX],AL
            movzx EAX,AH
            mov BYTE PTR [RBX+2],0
            mov BYTE PTR [RBX+1],AL
            movzx EDI,WORD PTR [R12+2]
            call .L_404e90

            mov BYTE PTR [RBP],AL
            movzx EAX,AH
            mov BYTE PTR [RBP+2],0
            mov BYTE PTR [RBP+1],AL
            mov EAX,1
            pop RBX
.L_41092c:

            pop RBP
            pop R12
            ret 
.L_410930:

            push R15
            push R14
            mov R15,RCX
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,96
            mov R12,RDI
            mov R14,R8
            sub RSP,8
.L_410951:

            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_4109b7

            mov QWORD PTR [RAX+80],0
            mov DWORD PTR [RAX],0
            mov QWORD PTR [RAX+88],R12
            jmp .L_410984
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410978:

            mov RDI,RBX
            call .L_410190

            test EAX,EAX
            je .L_4109d0
.L_410984:

            cmp DWORD PTR [RBX+4],EBP
            jb .L_410978

            lea RDI,QWORD PTR [RBX+12]
            mov EDX,32
            mov RSI,R15
            call strncpy@PLT

            lea RDI,QWORD PTR [RBX+45]
            mov EDX,32
            mov RSI,R14
            call strncpy@PLT

            mov BYTE PTR [RBX+77],0
            mov BYTE PTR [RBX+44],0
            mov DWORD PTR [RBX+8],R13D
.L_4109b7:

            add RSP,8
.L_4109bb:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4109d0:

            mov RSI,RBX
            mov RDI,R12
            xor EBX,EBX
            call .L_421170

            jmp .L_4109b7
.L_4109df:

            nop
.L_4109e0:

            test RDI,RDI
            je .L_410a10

            push RBX
            mov RSI,QWORD PTR [RDI+80]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+88]
            test RSI,RSI
            je .L_4109ff

            call .L_421170

            mov RDI,QWORD PTR [RBX+88]
.L_4109ff:

            mov RSI,RBX
            pop RBX
            jmp .L_421170
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410a10:

            ret 
.L_410a12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410a20:

            mov RDI,QWORD PTR [RDI+48]
            jmp .L_4109e0
.L_410a26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410a30:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_410a3a:

            test RDI,RDI
            je .L_410ae0

            mov RBP,RDI
            lea R12,QWORD PTR [RDI+45]
            lea R13,QWORD PTR [RDI+12]
            mov EDX,DWORD PTR [RDI+8]
            mov ESI,DWORD PTR [RBP]
            mov RDI,QWORD PTR [RDI+88]
            mov R8,R12
            mov RCX,R13
            call .L_410930

            test RAX,RAX
            mov RBX,RAX
            jne .L_410a7c

            jmp .L_410ae0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410a70:

            mov RDI,RBX
            call .L_410190

            test EAX,EAX
            je .L_410ae0
.L_410a7c:

            mov EAX,DWORD PTR [RBP+4]
            cmp DWORD PTR [RBX+4],EAX
            jb .L_410a70

            lea RDI,QWORD PTR [RBX+12]
            mov RSI,R13
            mov EDX,33
            call memmove@PLT

            lea RDI,QWORD PTR [RBX+45]
            mov RSI,R12
            mov EDX,33
            call memmove@PLT

            mov EDX,DWORD PTR [RBP]
            mov EAX,DWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP+80]
            mov RDI,QWORD PTR [RBX+80]
            mov DWORD PTR [RBX+8],EAX
            imul RDX,RDX,294
            call memmove@PLT

            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [RBX],EAX
            add RSP,8
.L_410acc:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410ae0:

            add RSP,8
            xor EBX,EBX
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_410af0:

            mov RDI,QWORD PTR [RDI+48]
            jmp .L_410a30
.L_410af9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410b00:

            test RDI,RDI
            je .L_410c30

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBX,RCX
            mov RBP,RDI
            sub RSP,16
.L_410b1a:

            mov ECX,DWORD PTR [RDI]
            lea EAX,DWORD PTR [RCX+1]
            cmp EAX,DWORD PTR [RDI+4]
            ja .L_410be0
.L_410b28:

            mov EAX,DWORD PTR [RBP+8]
            mov EDI,ECX
            imul RDI,RDI,294
            add RDI,QWORD PTR [RBP+80]
            test EAX,EAX
            je .L_410b6f

            sub EAX,1
            lea R9,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410b50:

            xor R8D,R8D
            test RBX,RBX
            je .L_410b5d

            movzx R8D,WORD PTR [RBX+RAX*1]
.L_410b5d:

            mov WORD PTR [RDI+RAX*1+262],R8W
            add RAX,2
            cmp R9,RAX
            jne .L_410b50
.L_410b6f:

            test R12,R12
            je .L_410c18

            movzx EAX,WORD PTR [R12]
            mov WORD PTR [RDI+256],AX
            movzx EAX,WORD PTR [R12+2]
            mov WORD PTR [RDI+258],AX
            movzx EAX,WORD PTR [R12+4]
.L_410b97:

            test RSI,RSI
            mov WORD PTR [RDI+260],AX
            je .L_410c10

            mov EDX,255
            call strncpy@PLT

            mov EAX,DWORD PTR [RBP]
            mov RCX,RAX
            imul RAX,RAX,294
            add RAX,QWORD PTR [RBP+80]
            mov BYTE PTR [RAX+255],0
.L_410bc5:

            add ECX,1
            mov EAX,1
            mov DWORD PTR [RBP],ECX
            add RSP,16
.L_410bd4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410be0:

            mov QWORD PTR [RSP+8],RSI
            call .L_410190

            test EAX,EAX
            je .L_410c00

            mov ECX,DWORD PTR [RBP]
            mov RSI,QWORD PTR [RSP+8]
            jmp .L_410b28
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410c00:

            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410c10:

            mov BYTE PTR [RDI],0
            jmp .L_410bc5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410c18:

            mov DWORD PTR [RDI+256],0
            xor EAX,EAX
            jmp .L_410b97
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410c30:

            xor EAX,EAX
            ret 
.L_410c33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410c40:

            xor EAX,EAX
            test RDI,RDI
            je .L_410c49

            mov EAX,DWORD PTR [RDI]
.L_410c49:

            ret 
.L_410c4b:

            nop
            nop
            nop
            nop
            nop
.L_410c50:

            push R14
            push R13
            xor R13D,R13D
            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_410c5e:

            je .L_410d11

            cmp ESI,DWORD PTR [RDI]
            jae .L_410d11

            test RDX,RDX
            mov RBP,R9
            mov R14,R8
            mov R13,RCX
            mov R12D,ESI
            mov RBX,RDI
            je .L_410c95

            mov ESI,ESI
            imul RSI,RSI,294
            add RSI,QWORD PTR [RDI+80]
            mov RDI,RDX
            call strcpy@PLT
.L_410c95:

            test R13,R13
            je .L_410ca6

            lea RSI,QWORD PTR [RBX+12]
            mov RDI,R13
            call strcpy@PLT
.L_410ca6:

            test R14,R14
            je .L_410cb7

            lea RSI,QWORD PTR [RBX+45]
            mov RDI,R14
            call strcpy@PLT
.L_410cb7:

            test RBP,RBP
            je .L_410cde

            mov ESI,R12D
            mov EDX,6
            mov RDI,RBP
            imul RSI,RSI,294
            add RSI,QWORD PTR [RBX+80]
            add RSI,256
            call memmove@PLT
.L_410cde:

            cmp QWORD PTR [RSP+48],0
            mov R13D,1
            je .L_410d11

            mov ESI,R12D
            mov EDX,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RSP+48]
            imul RSI,RSI,294
            add RSI,QWORD PTR [RBX+80]
            add RDX,RDX
            add RSI,262
            call memmove@PLT
.L_410d11:

            pop RBX
.L_410d12:

            mov EAX,R13D
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_410d1d:

            nop
            nop
            nop
.L_410d20:

            test RDI,RDI
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_410d2b:

            je .L_410d80

            mov R14D,DWORD PTR [RDI]
            test R14D,R14D
            jle .L_410d80

            mov R13,RSI
            mov R12,RDI
            xor EBP,EBP
            xor EBX,EBX
            jmp .L_410d57
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410d48:

            add EBX,1
            add RBP,294
            cmp R14D,EBX
            je .L_410d80
.L_410d57:

            mov RSI,QWORD PTR [R12+80]
            mov RDI,R13
            add RSI,RBP
            call .L_420ee0

            test EAX,EAX
            jne .L_410d48

            mov EAX,EBX
            pop RBX
.L_410d6e:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410d80:

            mov EBX,4294967295
            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_410d90:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
            call .L_410a30

            test EBP,EBP
            lea R8,QWORD PTR [RIP+.L_40fe30]
            mov ECX,3
            jne .L_410dba

            mov ECX,DWORD PTR [RBX+8]
            lea R8,QWORD PTR [RIP+.L_40fd40]
.L_410dba:

            push RAX
            lea RAX,QWORD PTR [RIP+.L_410a20]
            mov RDI,QWORD PTR [RBX+88]
            lea R9,QWORD PTR [RIP+.L_410af0]
            mov EDX,1
            mov ESI,1852009504
            push RAX
            call .L_429fe0

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_410de4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410df0:

            mov RAX,QWORD PTR [RDI+112]
            mov RAX,QWORD PTR [RAX]
            cmp DWORD PTR [RAX+8],1852009504
            jne .L_410e08

            mov RAX,QWORD PTR [RAX+48]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410e08:

            xor EAX,EAX
            ret 
.L_410e0b:

            nop
            nop
            nop
            nop
            nop
.L_410e10:

            push R13
            push R12
            push RBP
            push RBX
            lea EBX,DWORD PTR [RSI-1]
            sub RSP,8
.L_410e1d:

            cmp EBX,254
            ja .L_410ea0

            mov R12D,ESI
            mov ESI,24
            mov R13,RDI
            call .L_4210e0

            test RAX,RAX
            mov RBP,RAX
            je .L_410ea0

            mov QWORD PTR [RAX+8],R13
            mov EDX,64
            mov ESI,R12D
            mov RDI,R13
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RBP+16],RAX
            mov DWORD PTR [RBP],R12D
            je .L_410eb0

            shl RBX,6
            lea RDX,QWORD PTR [RAX+40]
            lea RAX,QWORD PTR [RAX+RBX*1+104]
            nop
            nop
            nop
            nop
            nop
.L_410e70:

            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+8],0
            add RDX,64
            mov QWORD PTR [RDX-48],0
            cmp RDX,RAX
            jne .L_410e70
.L_410e90:

            add RSP,8
.L_410e94:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_410ea0:

            add RSP,8
            xor EBP,EBP
            pop RBX
            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            ret 
.L_410eb0:

            mov RSI,RBP
            mov RDI,R13
            xor EBP,EBP
            call .L_421170

            jmp .L_410e90
.L_410ebf:

            nop
.L_410ec0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_410ec7:

            mov EAX,DWORD PTR [RDI]
            mov RSI,QWORD PTR [RDI+16]
            test EAX,EAX
            je .L_410f2c

            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
.L_410ed8:

            mov EBX,EBP
            shl RBX,6
            lea RAX,QWORD PTR [RSI+RBX*1]
            mov RDI,QWORD PTR [RAX+40]
            test RDI,RDI
            je .L_410ef9

            call .L_410480

            mov RSI,QWORD PTR [R12+16]
            lea RAX,QWORD PTR [RSI+RBX*1]
.L_410ef9:

            mov RDI,QWORD PTR [RAX+48]
            test RDI,RDI
            je .L_410f10

            call .L_410480

            mov RSI,QWORD PTR [R12+16]
            lea RAX,QWORD PTR [RSI+RBX*1]
.L_410f10:

            mov RDI,QWORD PTR [RAX+56]
            test RDI,RDI
            je .L_410f23

            call .L_410480

            mov RSI,QWORD PTR [R12+16]
.L_410f23:

            add EBP,1
            cmp DWORD PTR [R12],EBP
            ja .L_410ed8
.L_410f2c:

            test RSI,RSI
            mov RDI,QWORD PTR [R12+8]
            je .L_410f40

            call .L_421170

            mov RDI,QWORD PTR [R12+8]
.L_410f40:

            pop RBX
.L_410f41:

            mov RSI,R12
            pop RBP
            pop R12
            jmp .L_421170
.L_410f4c:

            nop
            nop
            nop
            nop
.L_410f50:

            test RDI,RDI
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_410f5b:

            je .L_411075

            mov RBP,RDI
            mov RDI,QWORD PTR [RDI+8]
            mov ESI,24
            call .L_4210b0

            test RAX,RAX
            mov R12,RAX
            je .L_411075

            mov RDI,QWORD PTR [RBP+8]
            mov ESI,DWORD PTR [RBP]
            mov EDX,64
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R12+16],RAX
            je .L_41106d

            mov RDX,QWORD PTR [RBP+8]
            mov QWORD PTR [R12+8],RDX
            mov EDX,DWORD PTR [RBP]
            mov DWORD PTR [R12],EDX
            mov EDX,DWORD PTR [RBP]
            test EDX,EDX
            je .L_411061

            xor R13D,R13D
            jmp .L_410fc5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410fc0:

            mov RAX,QWORD PTR [R12+16]
.L_410fc5:

            mov RDX,QWORD PTR [RBP+16]
            mov EBX,R13D
            add R13D,1
            shl RBX,6
            mov RDX,QWORD PTR [RDX+RBX*1+8]
            mov QWORD PTR [RAX+RBX*1+8],RDX
            mov RDX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [R12+16]
            add RDX,RBX
            mov ECX,DWORD PTR [RDX]
            add RAX,RBX
            mov DWORD PTR [RAX],ECX
            mov ECX,DWORD PTR [RDX+4]
            mov DWORD PTR [RAX+4],ECX
            movdqu XMM0,XMMWORD PTR [RDX+20]
            movups XMMWORD PTR [RAX+20],XMM0
            mov RAX,QWORD PTR [RBP+16]
            mov R14,QWORD PTR [R12+16]
            add RAX,RBX
            add R14,RBX
            mov EDX,DWORD PTR [RAX+16]
            mov RDI,QWORD PTR [RAX+40]
            mov DWORD PTR [R14+16],EDX
            call .L_4104d0

            mov QWORD PTR [R14+40],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov R14,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RAX+RBX*1+48]
            add R14,RBX
            call .L_4104d0

            mov QWORD PTR [R14+48],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov R14,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RAX+RBX*1+56]
            add R14,RBX
            call .L_4104d0

            cmp DWORD PTR [RBP],R13D
            mov QWORD PTR [R14+56],RAX
            ja .L_410fc0
.L_411061:

            pop RBX
.L_411062:

            mov RAX,R12
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41106d:

            mov RDI,R12
            call .L_410ec0
.L_411075:

            xor R12D,R12D
            pop RBX
            mov RAX,R12
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_411084:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411090:

            push RBX
            mov ESI,16
            mov RBX,RDI
            call .L_4210e0

            test RAX,RAX
            je .L_4110a7

            mov QWORD PTR [RAX+8],RBX
.L_4110a7:

            pop RBX
            ret 
.L_4110a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4110b0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_4110b7:

            je .L_41112f

            mov RBX,QWORD PTR [RDI]
            mov RBP,RDI
            test RBX,RBX
            je .L_41111f

            nop
            nop
            nop
            nop
.L_4110c8:

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_4110d6

            call .L_410480
.L_4110d6:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_4110e4

            call .L_410480
.L_4110e4:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBP+8]
            test RSI,RSI
            je .L_4110fa

            call .L_421170

            mov RDI,QWORD PTR [RBP+8]
.L_4110fa:

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_41110c

            call .L_421170

            mov RDI,QWORD PTR [RBP+8]
.L_41110c:

            mov R12,QWORD PTR [RBX]
            mov RSI,RBX
            call .L_421170

            test R12,R12
            mov RBX,R12
            jne .L_4110c8
.L_41111f:

            pop RBX
.L_411120:

            mov RDI,QWORD PTR [RBP+8]
            mov RSI,RBP
            pop RBP
            pop R12
            jmp .L_421170
.L_41112f:

            lea RCX,QWORD PTR [RIP+.L_42ed00]
            lea RSI,QWORD PTR [RIP+.L_42ec87]
            lea RDI,QWORD PTR [RIP+.L_42ec92]
            mov EDX,868
            call __assert_fail@PLT
.L_41114e:

            nop
            nop
.L_411150:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41115e:

            test RDI,RDI
            je .L_411214

            test RSI,RSI
            mov R12,RSI
            je .L_4111f5

            mov RBP,RDI
            mov RDI,QWORD PTR [RDI+8]
            mov ESI,40
            mov R13,RDX
            mov R15,RCX
            mov R14,R8
            call .L_4210e0

            mov RBX,RAX
            xor EAX,EAX
            test RBX,RBX
            je .L_4111e6

            mov RDI,R15
            call .L_4104d0

            mov RDI,R14
            mov QWORD PTR [RBX+8],RAX
            call .L_4104d0

            mov RDI,QWORD PTR [RBP+8]
            mov QWORD PTR [RBX+16],RAX
            mov RSI,R12
            call .L_410220

            mov QWORD PTR [RBX+24],RAX
            xor EAX,EAX
            test R13,R13
            je .L_4111d2

            mov RDI,QWORD PTR [RBP+8]
            mov RSI,R13
            call .L_410220
.L_4111d2:

            mov QWORD PTR [RBX+32],RAX
            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBP],RBX
            mov EAX,1
.L_4111e6:

            add RSP,8
.L_4111ea:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4111f5:

            lea RCX,QWORD PTR [RIP+.L_42ecf0]
            lea RSI,QWORD PTR [RIP+.L_42ec87]
            lea RDI,QWORD PTR [RIP+.L_42eca8]
            mov EDX,905
            call __assert_fail@PLT
.L_411214:

            lea RCX,QWORD PTR [RIP+.L_42ecf0]
            lea RSI,QWORD PTR [RIP+.L_42ec87]
            lea RDI,QWORD PTR [RIP+.L_42ec92]
            mov EDX,904
            call __assert_fail@PLT
.L_411233:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411240:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_411247:

            je .L_4112b2

            mov R12,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov ESI,16
            mov RDI,R12
            call .L_4210e0

            test RAX,RAX
            mov RBP,RAX
            je .L_411294

            mov QWORD PTR [RAX+8],R12
            jmp .L_41128c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411270:

            mov RCX,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RBX+32]
            mov RDI,RBP
            mov RSI,QWORD PTR [RBX+24]
            mov R8,QWORD PTR [RBX+16]
            call .L_411150

            test EAX,EAX
            je .L_4112a0
.L_41128c:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            jne .L_411270
.L_411294:

            mov RAX,RBP
            pop RBX
.L_411298:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4112a0:

            mov RDI,RBP
            xor EBP,EBP
            call .L_4110b0

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_4112b2:

            lea RCX,QWORD PTR [RIP+.L_42ece0]
            lea RSI,QWORD PTR [RIP+.L_42ec87]
            lea RDI,QWORD PTR [RIP+.L_42ecbe]
            mov EDX,929
            call __assert_fail@PLT
.L_4112d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4112e0:

            test RDI,RDI
            je .L_4112f0

            mov RAX,QWORD PTR [RDI]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4112f0:

            xor EAX,EAX
            ret 
.L_4112f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411300:

            test RDI,RDI
            je .L_411310

            mov RAX,QWORD PTR [RDI]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411310:

            xor EAX,EAX
            ret 
.L_411313:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411320:

            movsd XMM2,QWORD PTR [RIP+.L_42df48]
            movzx EAX,WORD PTR [RDI]
            movzx ECX,WORD PTR [RDI+4]
            pxor XMM1,XMM1
            mulsd XMM2,QWORD PTR [RDX]
            movzx EDX,WORD PTR [RDI+2]
            pxor XMM0,XMM0
            add EDX,EAX
            add EDX,ECX
            cvtsi2sd XMM1,EDX
            movzx EDX,WORD PTR [RDI+6]
            cvtsi2sd XMM0,EDX
            addsd XMM0,XMM1
            ucomisd XMM0,XMM2
            jbe .L_411450

            subsd XMM0,XMM2
            pxor XMM3,XMM3
            movapd XMM5,XMM3
            divsd XMM0,XMM1
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            movapd XMM2,XMM0
            subsd XMM2,XMM1
            maxsd XMM5,XMM2
            movapd XMM2,XMM5
.L_411389:

            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_42d568]
            cvtsi2sd XMM0,EAX
            xor EAX,EAX
            mulsd XMM0,XMM2
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jae .L_4113bc

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jb .L_411490
.L_4113bc:

            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDI+2]
            pxor XMM1,XMM1
            cvtsi2sd XMM1,EAX
            xor EAX,EAX
            mulsd XMM1,XMM2
            addsd XMM1,XMM4
            ucomisd XMM3,XMM1
            jae .L_4113ea

            ucomisd XMM1,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jb .L_411468
.L_4113ea:

            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDI+4]
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            xor EAX,EAX
            mulsd XMM0,XMM2
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jae .L_411434

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jae .L_411434

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_411434:

            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDI+6]
            mov WORD PTR [RSI+6],AX
            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411450:

            movsd XMM2,QWORD PTR [RIP+.L_42d9d8]
            pxor XMM3,XMM3
            jmp .L_411389
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411468:

            subsd XMM1,QWORD PTR [RIP+.L_42df38]
            addsd XMM1,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM1
            sar EAX,16
            add AX,32767
            jmp .L_4113ea
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411490:

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
            jmp .L_4113bc
.L_4114b0:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            sub RSP,8
.L_4114c0:

            call .L_402dd0

            mov ESI,1
            mov RBP,RAX
            mov RDI,RAX
            call .L_410260

            mov RDI,RBP
            mov RBX,RAX
            mov ESI,1
            call .L_410260

            test RBX,RBX
            mov RBP,RAX
            je .L_4114f2

            test RAX,RAX
            jne .L_411518
.L_4114f2:

            xor R12D,R12D
            test RBX,RBX
            jne .L_411535
.L_4114fa:

            test RBP,RBP
            je .L_411507

            mov RDI,RBP
            call .L_410480
.L_411507:

            add RSP,8
.L_41150b:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411518:

            lea RDX,QWORD PTR [RIP+.L_42ed0c]
            lea RSI,QWORD PTR [RIP+.L_42ed0f]
            mov RCX,R13
            mov RDI,RBX
            call .L_4103d0

            test EAX,EAX
            jne .L_411548
.L_411535:

            xor R12D,R12D
.L_411538:

            mov RDI,RBX
            call .L_410480

            jmp .L_4114fa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411548:

            lea RCX,QWORD PTR [RIP+.L_42ed70]
            lea RDX,QWORD PTR [RIP+.L_42ed0c]
            lea RSI,QWORD PTR [RIP+.L_42ed0f]
            mov RDI,RBP
            call .L_4103d0

            test EAX,EAX
            je .L_411535

            mov RDX,RBX
            mov ESI,1684370275
            mov RDI,R12
            call .L_4045e0

            test EAX,EAX
            je .L_411535

            mov RDI,R12
            mov RDX,RBP
            mov ESI,1668313716
            xor R12D,R12D
            call .L_4045e0

            test EAX,EAX
            setne R12B
            jmp .L_411538
.L_411598:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4115a0:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            xor EBP,EBP
            sub RSP,8
.L_4115b2:

            call .L_402dd0

            mov ESI,1
            mov RDI,RAX
            call .L_410e10

            test RAX,RAX
            je .L_411635

            mov RBX,RAX
            mov RAX,QWORD PTR [RAX+16]
            lea RDX,QWORD PTR [RIP+.L_42f0e0]
            lea RCX,QWORD PTR [RIP+.L_42ed12]
            xor EBP,EBP
            mov RSI,RDX
            mov RDI,QWORD PTR [RAX+40]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov DWORD PTR [RAX+16],0
            call .L_4102d0

            mov RAX,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_42f0e0]
            mov RCX,R13
            mov RSI,RDX
            mov RDI,QWORD PTR [RAX+48]
            call .L_4102d0

            mov RDI,R12
            mov RSI,RBX
            call .L_429290

            mov RDI,RBX
            test EAX,EAX
            setne BPL
            call .L_410ec0
.L_411635:

            add RSP,8
.L_411639:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_411642:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411650:

            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RSI,RDI
            mov RBX,RDX
            sub RSP,168
.L_411666:

            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            call .L_40af80

            lea RDI,QWORD PTR [RSP+64]
            mov RSI,RBP
            lea RBP,QWORD PTR [RSP+32]
            call .L_40b300

            movsd XMM0,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RSP+96]
            mov RDI,RBP
            mulsd XMM0,QWORD PTR [RBX+8]
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+72]
            addsd XMM0,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+80]
            addsd XMM0,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+112],XMM0
            call .L_40b360

            mov EAX,DWORD PTR [RBX+32]
            test EAX,EAX
            je .L_411707

            lea R13,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [RBX+40]
            mov RDX,RBP
            mov RSI,R13
            call .L_40ade0

            lea RDI,QWORD PTR [RBX+64]
            mov RDX,R13
            mov RSI,RBP
            call .L_40ac70
.L_411707:

            mov RSI,RBP
            mov RDI,R12
            call .L_40b170

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_411738

            add RSP,168
.L_411731:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_411738:

            call __stack_chk_fail@PLT
.L_41173d:

            nop
            nop
            nop
.L_411740:

            push R15
            push R14
            xor EAX,EAX
            push R13
            push R12
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_42f120]
            mov EBP,ESI
            sub RSP,24
.L_411759:

            lea R12,QWORD PTR [RBX+396]
            mov QWORD PTR [RSP],RDI
            mov DWORD PTR [RSP+12],EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411770:

            cmp EBP,EAX
            jne .L_4117d0

            mov EAX,DWORD PTR [RBX+4]
            mov R13,RBX
            test EAX,EAX
            je .L_411784

            cmp EAX,DWORD PTR [RSP+12]
            jne .L_4117d0
.L_411784:

            mov RAX,QWORD PTR [RSP]
            mov R14,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RBX+12]
            test R14,R14
            je .L_4117dd

            test EAX,EAX
            js .L_4117d0

            mov R15D,1
            jmp .L_4117b7
          .byte 0x90
.L_4117a0:

            mov R14,QWORD PTR [R14+56]
            mov ESI,R15D
            mov EAX,DWORD PTR [RBX+12]
            test R14,R14
            je .L_4117e0

            add R15,1
            cmp ESI,EAX
            jg .L_4117d0
.L_4117b7:

            mov RDI,R14
            call .L_42b6c0

            cmp EAX,DWORD PTR [RBX+R15*4+12]
            je .L_4117a0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4117d0:

            add RBX,36
            cmp R12,RBX
            je .L_411800

            mov EAX,DWORD PTR [RBX]
            jmp .L_411770
.L_4117dd:

            xor ESI,ESI
            nop
.L_4117e0:

            cmp ESI,EAX
            jne .L_4117d0
.L_4117e4:

            add RSP,24
.L_4117e8:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411800:

            xor R13D,R13D
            jmp .L_4117e4
.L_411805:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411810:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RSI
            mov RBP,RCX
            sub RSP,312
.L_41182a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_411a82

            movsd XMM0,QWORD PTR [RIP+.L_42f310]
            mov RDI,RAX
            call .L_403590

            mov ESI,1835955314
            mov RDI,RBX
            call .L_403560

            mov ESI,1380401696
            mov RDI,RBX
            call .L_403540

            mov ESI,1482250784
            mov RDI,RBX
            call .L_403520

            xor ESI,ESI
            mov RDI,RBX
            call .L_403420

            lea RSI,QWORD PTR [RIP+.L_42edd8]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_411a78

            test R12,R12
            je .L_411a38

            call .L_40cfe0

            mov ESI,2004119668
            mov RDX,RAX
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411a78

            lea R15,QWORD PTR [RSP+32]
            lea R14,QWORD PTR [RSP+224]
            mov RSI,R12
            mov RDI,R15
            call .L_40ac20

            call .L_40cfe0

            xor ESI,ESI
            mov RCX,RAX
            mov RDX,R15
            mov RDI,R14
            call .L_40d3d0

            mov RDX,R14
            mov ESI,1667785060
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411a78

            test R13,R13
            je .L_411b20

            movsd XMM0,QWORD PTR [R12]
            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            lea RDI,QWORD PTR [RSP+144]
            mov RSI,RSP
            mov RDX,R13
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [R12+8]
            mov QWORD PTR [RSP+16],RAX
            movsd QWORD PTR [RSP+8],XMM0
            call .L_40d610

            test EAX,EAX
            je .L_411a78

            movsd XMM0,QWORD PTR [RSP+144]
            lea R12,QWORD PTR [RSP+64]
            mov ESI,1918392666
            mov RDI,RBX
            movsd QWORD PTR [RSP+64],XMM0
            mov RDX,R12
            movsd XMM0,QWORD PTR [RSP+168]
            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+192]
            movsd QWORD PTR [RSP+80],XMM0
            movsd XMM0,QWORD PTR [RSP+152]
            movsd QWORD PTR [RSP+88],XMM0
            movsd XMM0,QWORD PTR [RSP+176]
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+200]
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+160]
            movsd QWORD PTR [RSP+112],XMM0
            movsd XMM0,QWORD PTR [RSP+184]
            movsd QWORD PTR [RSP+120],XMM0
            movsd XMM0,QWORD PTR [RSP+208]
            movsd QWORD PTR [RSP+128],XMM0
            call .L_4045e0

            test EAX,EAX
            je .L_411a78

            lea RDX,QWORD PTR [R12+48]
            mov ESI,1649957210
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411a78

            lea RDX,QWORD PTR [R12+24]
            mov ESI,1733843290
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411a78

            test RBP,RBP
            jne .L_411a41

            jmp .L_411ae6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411a38:

            test RBP,RBP
            je .L_411ae1
.L_411a41:

            mov RDX,QWORD PTR [RBP]
            mov ESI,1918128707
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411a78

            mov RDX,QWORD PTR [RBP+8]
            cmp RDX,QWORD PTR [RBP]
            je .L_411ab0

            mov ESI,1733579331
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            jne .L_411ac6

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411a78:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0
.L_411a82:

            mov RCX,QWORD PTR [RSP+296]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_411b2e

            add RSP,312
.L_411aa3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_411ab0:

            mov EDX,1918128707
            mov ESI,1733579331
            mov RDI,RBX
            call .L_404d50

            test EAX,EAX
            je .L_411a78
.L_411ac6:

            mov RDX,QWORD PTR [RBP+16]
            cmp RDX,QWORD PTR [RBP]
            je .L_411b00

            mov ESI,1649693251
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411a78
.L_411ae1:

            test R13,R13
            je .L_411a82
.L_411ae6:

            mov RDX,R13
            mov ESI,1667789421
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            jne .L_411a82

            jmp .L_411a78
          .byte 0x90
.L_411b00:

            mov EDX,1918128707
            mov ESI,1649693251
            mov RDI,RBX
            call .L_404d50

            test EAX,EAX
            jne .L_411ae1

            jmp .L_411a78
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411b20:

            test RBP,RBP
            jne .L_411a41

            jmp .L_411a82
.L_411b2e:

            call __stack_chk_fail@PLT
.L_411b33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411b40:

            mov RCX,RDX
            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_411810
.L_411b50:

            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,40
.L_411b60:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_411c15

            movsd XMM0,QWORD PTR [RIP+.L_42f310]
            mov RDI,RAX
            call .L_403590

            mov ESI,1835955314
            mov RDI,RBX
            call .L_403560

            mov ESI,1196573017
            mov RDI,RBX
            call .L_403540

            mov ESI,1482250784
            mov RDI,RBX
            call .L_403520

            xor ESI,ESI
            mov RDI,RBX
            call .L_403420

            lea RSI,QWORD PTR [RIP+.L_42ee10]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_411c38

            test RBP,RBP
            je .L_411bfc

            mov R13,RSP
            mov RSI,RBP
            mov RDI,R13
            call .L_40ac20

            mov RDX,R13
            mov ESI,2004119668
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411c38
.L_411bfc:

            test R12,R12
            je .L_411c15

            mov RDX,R12
            mov ESI,1800688195
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411c38
.L_411c15:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_411c44

            add RSP,40
.L_411c2c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411c38:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            jmp .L_411c15
.L_411c44:

            call __stack_chk_fail@PLT
.L_411c49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411c50:

            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_411b50
.L_411c5d:

            nop
            nop
            nop
.L_411c60:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_411c6e:

            mov EBP,ESI
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_411d3b

            movsd XMM0,QWORD PTR [RIP+.L_42f310]
            mov RDI,RAX
            call .L_403590

            mov ESI,1818848875
            mov RDI,RBX
            call .L_403560

            mov ESI,EBP
            mov RDI,RBX
            call .L_403540

            mov ESI,EBP
            mov RDI,RBX
            call .L_403520

            xor ESI,ESI
            mov RDI,RBX
            call .L_403420

            mov EDI,EBP
            call .L_40ccf0

            mov RDI,R12
            mov EDX,EAX
            mov ESI,EAX
            mov R13D,EAX
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_411d50

            mov RDX,R14
            mov ESI,R13D
            mov RDI,R12
            call .L_42af10

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_411d50

            lea RSI,QWORD PTR [RIP+.L_42ee48]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_411d50

            mov RDX,RBP
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411d50

            lea RSI,QWORD PTR [RIP+.L_42ed1d]
            mov RDI,RBX
            call .L_4115a0

            test EAX,EAX
            je .L_411d50

            mov RDI,RBP
            call .L_42b910
.L_411d3b:

            mov RAX,RBX
            pop RBX
.L_411d3f:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411d50:

            mov RDI,RBP
            call .L_42b910

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_411d6e:

            nop
            nop
.L_411d70:

            mov RDX,RSI
            mov ESI,EDI
            xor EDI,EDI
            jmp .L_411c60
.L_411d7c:

            nop
            nop
            nop
            nop
.L_411d80:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,16
.L_411d8f:

            cmp ESI,1129142603
            movsd QWORD PTR [RSP+8],XMM0
            jne .L_411fc0

            pxor XMM2,XMM2
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM2,XMM0
            ja .L_411f38

            ucomisd XMM0,QWORD PTR [RIP+.L_42f318]
            ja .L_411f38
.L_411dc3:

            mov RDI,RBP
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_411f92

            movsd XMM0,QWORD PTR [RIP+.L_42f310]
            mov RDI,RAX
            call .L_403590

            mov ESI,1818848875
            mov RDI,RBX
            call .L_403560

            mov ESI,1129142603
            mov RDI,RBX
            call .L_403540

            mov ESI,1129142603
            mov RDI,RBX
            call .L_403520

            xor ESI,ESI
            mov RDI,RBX
            call .L_403420

            mov EDX,4
            mov ESI,4
            mov RDI,RBP
            call .L_42b7d0

            test RAX,RAX
            mov R12,RAX
            je .L_411f88

            mov EDI,1129142603
            call .L_40ccf0

            xor R8D,R8D
            mov ECX,EAX
            mov EDX,EAX
            mov ESI,17
            mov RDI,RBP
            mov R13D,EAX
            call .L_42b390

            test RAX,RAX
            mov R14,RAX
            je .L_411f80

            lea RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_411320]
            xor ECX,ECX
            mov RDI,RAX
            call .L_42a430

            test EAX,EAX
            je .L_411f80

            mov ESI,R13D
            mov RDI,RBP
            call .L_42b040

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R12
            call .L_42bb10

            test EAX,EAX
            je .L_411f80

            mov RDX,R14
            mov ESI,1
            mov RDI,R12
            call .L_42bb10

            test EAX,EAX
            je .L_411f80

            mov ESI,R13D
            mov RDI,RBP
            call .L_42b040

            mov ESI,1
            mov RDX,RAX
            mov RDI,R12
            call .L_42bb10

            test EAX,EAX
            je .L_411f80

            lea RSI,QWORD PTR [RIP+.L_42eea8]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_411f80

            mov RDX,R12
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_411f80

            lea RSI,QWORD PTR [RIP+.L_42ed34]
            mov RDI,RBX
            call .L_4115a0

            test EAX,EAX
            je .L_411f80

            mov RDI,R12
            call .L_42b910

            add RSP,16
.L_411f26:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411f38:

            lea RDX,QWORD PTR [RIP+.L_42f2e0]
            xor EAX,EAX
            mov ESI,2
            mov RDI,RBP
            call .L_421420

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM3,XMM0
            ja .L_411fa8

            movsd XMM1,QWORD PTR [RIP+.L_42f318]
            ucomisd XMM0,XMM1
            jbe .L_411dc3

            movsd QWORD PTR [RSP+8],XMM1
            jmp .L_411dc3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411f80:

            mov RDI,R12
            call .L_42b910
.L_411f88:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0
.L_411f92:

            add RSP,16
.L_411f96:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411fa8:

            mov QWORD PTR [RSP+8],0
            jmp .L_411dc3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411fc0:

            lea RDX,QWORD PTR [RIP+.L_42f2b0]
            mov ESI,9
            xor EAX,EAX
            xor EBX,EBX
            call .L_421420

            jmp .L_411f92
.L_411fd7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411fe0:

            mov ESI,EDI
            xor EDI,EDI
            jmp .L_411d80
.L_411fe9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411ff0:

            test RSI,RSI
            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_411ffa:

            je .L_4120e0
.L_412000:

            xor ECX,ECX
            xor EDX,EDX
            mov RDI,R12
            call .L_411810

            test RAX,RAX
            mov RBX,RAX
            je .L_4120d0

            movsd XMM0,QWORD PTR [RIP+.L_42f320]
            mov RDI,RAX
            call .L_403590

            mov ESI,1633842036
            mov RDI,RBX
            call .L_403560

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403540

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403520

            lea RSI,QWORD PTR [RIP+.L_42ef00]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_4120d0

            mov EDX,3
            mov ESI,3
            mov RDI,R12
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_4120c8

            mov ESI,3
            mov RDI,R12
            call .L_42b5f0

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_4120c0

            mov RDX,RBP
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_4120c0

            mov RDI,RBP
            call .L_42b910

            mov RAX,RBX
            pop RBX
.L_4120ba:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4120c0:

            mov RDI,RBP
            call .L_42b910
.L_4120c8:

            mov RDI,RBX
            call .L_403ea0
.L_4120d0:

            xor EBX,EBX
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4120e0:

            call .L_40cff0

            mov RSI,RAX
            jmp .L_412000
.L_4120ed:

            nop
            nop
            nop
.L_4120f0:

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_411ff0
.L_4120fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_412100:

            test RSI,RSI
            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_41210a:

            je .L_4121f0
.L_412110:

            xor ECX,ECX
            xor EDX,EDX
            mov RDI,R12
            call .L_411810

            test RAX,RAX
            mov RBX,RAX
            je .L_4121c6

            movsd XMM0,QWORD PTR [RIP+.L_42f310]
            mov RDI,RAX
            call .L_403590

            mov ESI,1633842036
            mov RDI,RBX
            call .L_403560

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403540

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403520

            lea RSI,QWORD PTR [RIP+.L_42ef00]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_4121d8

            mov EDX,3
            mov ESI,3
            mov RDI,R12
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_4121d8

            mov ESI,3
            mov RDI,R12
            call .L_42b040

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_4121d0

            mov RDX,RBP
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_4121d0

            mov RDI,RBP
            call .L_42b910
.L_4121c6:

            mov RAX,RBX
            pop RBX
.L_4121ca:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4121d0:

            mov RDI,RBP
            call .L_42b910
.L_4121d8:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4121f0:

            call .L_40cff0

            mov RSI,RAX
            jmp .L_412110
.L_4121fd:

            nop
            nop
            nop
.L_412200:

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_412100
.L_41220a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_412210:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_412217:

            call .L_40cff0

            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R12
            call .L_411810

            test RAX,RAX
            mov RBX,RAX
            je .L_4122d5

            movsd XMM0,QWORD PTR [RIP+.L_42f310]
            mov RDI,RAX
            call .L_403590

            mov ESI,1633842036
            mov RDI,RBX
            call .L_403560

            mov ESI,1482250784
            mov RDI,RBX
            call .L_403540

            mov ESI,1482250784
            mov RDI,RBX
            call .L_403520

            lea RSI,QWORD PTR [RIP+.L_42ef58]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_4122e8

            mov EDX,3
            mov ESI,3
            mov RDI,R12
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_4122e8

            mov ESI,3
            mov RDI,R12
            call .L_42b040

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_4122e0

            mov RDX,RBP
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_4122e0

            mov RDI,RBP
            call .L_42b910
.L_4122d5:

            mov RAX,RBX
            pop RBX
.L_4122d9:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4122e0:

            mov RDI,RBP
            call .L_42b910
.L_4122e8:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_4122fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_412300:

            xor EDI,EDI
            jmp .L_412210
.L_412307:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412310:

            push RBP
            push RBX
            mov ESI,4
            mov RBX,RDI
            sub RSP,168
.L_412321:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_42f328]
            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            lea RBP,QWORD PTR [RSP+112]
            movsd QWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RIP+.L_42f330]
            movsd QWORD PTR [RSP+48],XMM0
            movsd QWORD PTR [RSP+72],XMM0
            mov RDX,RBP
            movsd QWORD PTR [RSP+96],XMM0
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [RIP+.L_42f338]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RIP+.L_42f340]
            mov QWORD PTR [RSP+40],RAX
            mov RAX,QWORD PTR [RIP+.L_42f348]
            mov QWORD PTR [RSP+56],RAX
            mov RAX,QWORD PTR [RIP+.L_42f350]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RIP+.L_42f358]
            mov QWORD PTR [RSP+80],RAX
            mov RAX,QWORD PTR [RIP+.L_42f360]
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [RIP+.L_42f368]
            mov QWORD PTR [RSP+112],RAX
            mov RAX,QWORD PTR [RIP+.L_42f370]
            mov QWORD PTR [RSP+120],RAX
            mov RAX,QWORD PTR [RIP+.L_42f378]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RIP+.L_42f380]
            mov QWORD PTR [RSP+136],RAX
            mov RAX,QWORD PTR [RIP+.L_42f388]
            mov QWORD PTR [RSP+144],RAX
            call .L_4227e0

            test RAX,RAX
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],RAX
            mov QWORD PTR [RSP+112],RAX
            je .L_412480

            lea RDX,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov RSI,RSP
            mov RCX,RBP
            call .L_411810

            mov RDI,QWORD PTR [RSP+112]
            mov RBX,RAX
            call .L_422930

            test RBX,RBX
            je .L_412480

            lea RSI,QWORD PTR [RIP+.L_42efb0]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_412478
.L_412454:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_412484

            add RSP,168
.L_412471:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412478:

            mov RDI,RBX
            call .L_403ea0
.L_412480:

            xor EBX,EBX
            jmp .L_412454
.L_412484:

            call __stack_chk_fail@PLT
.L_412489:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412490:

            xor EDI,EDI
            jmp .L_412310
.L_412497:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4124a0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov EBP,ESI
            push RBX
            sub RSP,176
.L_4124b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            cmp EDX,ECX
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+56],XMM3
            jne .L_412660

            mov DWORD PTR [RSP+64],0
.L_4124ef:

            mov RDI,R13
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_4126c8

            mov RDI,RAX
            mov ESI,1633842036
            call .L_403560

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403540

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403520

            xor ESI,ESI
            mov RDI,RBX
            call .L_403420

            mov EDX,3
            mov ESI,3
            mov RDI,R13
            call .L_42b7d0

            test RAX,RAX
            mov R12,RAX
            je .L_4126c0

            lea RSI,QWORD PTR [RSP+128]
            xor R8D,R8D
            mov ECX,3
            mov EDX,3
            mov RDI,R13
            mov DWORD PTR [RSP+128],EBP
            mov DWORD PTR [RSP+132],EBP
            mov DWORD PTR [RSP+136],EBP
            mov DWORD PTR [RSP+140],EBP
            mov DWORD PTR [RSP+144],EBP
            mov DWORD PTR [RSP+148],EBP
            mov DWORD PTR [RSP+152],EBP
            mov DWORD PTR [RSP+156],EBP
            call .L_42b1f0

            test RAX,RAX
            mov RBP,RAX
            je .L_4126c8

            lea RDX,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RIP+.L_411650]
            xor ECX,ECX
            mov RDI,RAX
            call .L_42a430

            test EAX,EAX
            je .L_4126b8

            mov RDX,RBP
            mov ESI,1
            mov RDI,R12
            call .L_42bb10

            test EAX,EAX
            je .L_4126b8

            lea RSI,QWORD PTR [RIP+.L_42efe8]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_4126c8

            call .L_40cfe0

            mov ESI,2004119668
            mov RDX,RAX
            mov RDI,RBX
            call .L_4045e0

            mov RDI,RBX
            mov RDX,R12
            mov ESI,1093812784
            call .L_4045e0

            mov RDI,R12
            call .L_42b910
.L_41262d:

            mov RCX,QWORD PTR [RSP+168]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4126cf

            add RSP,176
.L_41264e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412660:

            pxor XMM0,XMM0
            mov R14,RSP
            mov RDI,R14
            mov EBX,ECX
            mov DWORD PTR [RSP+64],1
            lea R12,QWORD PTR [RSP+32]
            cvtsi2sd XMM0,EDX
            call .L_40d020

            lea RDI,QWORD PTR [RSP+72]
            mov RSI,R14
            call .L_40ac20

            pxor XMM0,XMM0
            mov RDI,R14
            cvtsi2sd XMM0,EBX
            call .L_40d020

            lea RDI,QWORD PTR [R12+64]
            mov RSI,R14
            call .L_40ac20

            jmp .L_4124ef
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4126b8:

            mov RDI,R12
            call .L_42b910
.L_4126c0:

            mov RDI,RBX
            call .L_403ea0
.L_4126c8:

            xor EBX,EBX
            jmp .L_41262d
.L_4126cf:

            call __stack_chk_fail@PLT
.L_4126d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4126e0:

            mov ECX,EDX
            mov EDX,ESI
            mov ESI,EDI
            xor EDI,EDI
            jmp .L_4124a0
.L_4126ed:

            nop
            nop
            nop
.L_4126f0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,80
.L_4126ff:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            mov DWORD PTR [RSP+12],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            call .L_402d30

            test RAX,RAX
            mov RBX,RAX
            je .L_412897

            movsd XMM0,QWORD PTR [RIP+.L_42f310]
            mov RDI,RAX
            call .L_403590

            lea RSI,QWORD PTR [RIP+.L_42f020]
            mov RDI,RBX
            call .L_4114b0

            test EAX,EAX
            je .L_4128c8

            mov ESI,1886549106
            mov RDI,RBX
            call .L_403560

            mov ESI,1196573017
            mov RDI,RBX
            call .L_403540

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403520

            mov EDX,1
            mov ESI,3
            mov RDI,RBP
            call .L_42b7d0

            test RAX,RAX
            mov R12,RAX
            je .L_4128c8

            lea R13,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSP+12]
            mov ESI,2
            mov RDI,RBP
            call .L_422570

            mov RDX,R13
            mov ESI,3
            mov RDI,RBP
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_42af10

            mov RDX,R13
            mov ESI,1
            mov RDI,RBP
            mov R14,RAX
            call .L_42af10

            mov RDI,QWORD PTR [RSP+16]
            mov R13,RAX
            call .L_422930

            mov RDX,R14
            mov ESI,1
            mov RDI,R12
            call .L_42bb10

            test EAX,EAX
            je .L_4128c0

            lea RCX,QWORD PTR [RSP+48]
            xor R8D,R8D
            mov EDX,3
            mov ESI,1
            mov RDI,RBP
            call .L_42a230

            mov ESI,1
            mov RDX,RAX
            mov RDI,R12
            call .L_42bb10

            test EAX,EAX
            je .L_4128c0

            mov RDX,R13
            mov ESI,1
            mov RDI,R12
            call .L_42bb10

            test EAX,EAX
            je .L_4128c0

            mov RDX,R12
            mov ESI,1110589744
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_4128c0

            call .L_40cfe0

            mov ESI,2004119668
            mov RDX,RAX
            mov RDI,RBX
            call .L_4045e0

            test EAX,EAX
            je .L_4128c0

            mov RDI,R12
            call .L_42b910
.L_412897:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4128d4

            add RSP,80
.L_4128ae:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4128c0:

            mov RDI,R12
            call .L_42b910
.L_4128c8:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403ea0

            jmp .L_412897
.L_4128d4:

            call __stack_chk_fail@PLT
.L_4128d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4128e0:

            xor EDI,EDI
            jmp .L_4126f0
.L_4128e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4128f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_412901:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP],XMM0
            mov DWORD PTR [RSP+44],ESI
            mov QWORD PTR [RSP+64],0
            call .L_40fc40

            test RBX,RBX
            je .L_412f47

            mov RDI,QWORD PTR [RBX+112]
            mov R13,RAX
            call .L_42bd00

            test RAX,RAX
            je .L_412955

            mov RDI,RAX
            call .L_42b6c0

            cmp EAX,1852009504
            je .L_412e00
.L_412955:

            mov RDI,QWORD PTR [RBX+112]
            call .L_42b9f0

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_412f40

            cmp DWORD PTR [RBX+144],1281450528
            je .L_412ca8
.L_41297c:

            cmp DWORD PTR [RBX+148],1281450528
            jne .L_41299b

            movsd XMM0,QWORD PTR [RIP+.L_42e148]
            ucomisd XMM0,QWORD PTR [RSP]
            ja .L_412ce6
.L_41299b:

            mov RDI,R13
            call .L_402d30

            test RAX,RAX
            mov RBP,RAX
            je .L_412d10

            movsd XMM0,QWORD PTR [RSP]
            mov RDI,RAX
            call .L_403590

            test BYTE PTR [RSP+44],32
            mov R12D,DWORD PTR [RBX+148]
            mov R14D,DWORD PTR [RBX+144]
            je .L_412a09

            cmp R12D,1281450528
            sete AL
            cmp R12D,1482250784
            sete DL
            or EAX,EDX
            cmp R14D,1482250784
            je .L_412c70

            cmp R14D,1281450528
            je .L_412c70

            test AL,AL
            jne .L_412d30
.L_412a09:

            mov ESI,1818848875
.L_412a0e:

            mov RDI,RBP
            call .L_403560

            mov ESI,R14D
            mov RDI,RBP
            call .L_403540

            mov ESI,R12D
            mov RDI,RBP
            call .L_403520
.L_412a2c:

            mov EDI,DWORD PTR [RBX+144]
            call .L_40ccf0

            mov EDI,DWORD PTR [RBX+148]
            mov R15D,EAX
            call .L_40ccf0

            mov EDI,DWORD PTR [RBX+144]
            mov R14D,EAX
            mov DWORD PTR [RSP+40],EAX
            call .L_40c9e0

            mov EDI,DWORD PTR [RBX+148]
            mov R12D,EAX
            shl R12D,16
            call .L_40c9e0

            lea EDX,DWORD PTR [R15*8+2]
            shl EAX,16
            mov RDI,RBP
            or R12D,EDX
            lea EDX,DWORD PTR [R14*8+2]
            mov DWORD PTR [RSP+56],R12D
            mov R12D,1093812784
            or EAX,EDX
            mov DWORD PTR [RSP+60],EAX
            call .L_403550

            movsd XMM1,QWORD PTR [RSP]
            cmp EAX,1886549106
            mov R14D,EAX
            mov EAX,1110589744
            cmove R12D,EAX
            xor EAX,EAX
            ucomisd XMM1,QWORD PTR [RIP+.L_42e148]
            setae AL
            test BYTE PTR [RSP+44],2
            mov DWORD PTR [RSP],EAX
            je .L_412bb8
.L_412ac9:

            lea RAX,QWORD PTR [RSP+64]
            mov EDX,DWORD PTR [RBX+224]
            lea R9,QWORD PTR [RSP+44]
            lea R8,QWORD PTR [RSP+60]
            lea RCX,QWORD PTR [RSP+56]
            mov RDI,R13
            mov RSI,RAX
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+24],RCX
            call .L_41e1c0

            mov ESI,DWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,R12D
            call .L_411740

            test RAX,RAX
            je .L_412d40
.L_412b1b:

            test BYTE PTR [RSP+44],8
            jne .L_412bdc
.L_412b26:

            lea RSI,QWORD PTR [RIP+.L_42f0a8]
            mov RDI,RBP
            call .L_4114b0

            test EAX,EAX
            je .L_412d12

            mov RDX,QWORD PTR [RSP+64]
            mov ESI,R12D
            mov RDI,RBP
            call .L_4045e0

            test EAX,EAX
            je .L_412d12

            mov RDX,QWORD PTR [RBX+128]
            test RDX,RDX
            je .L_412b76

            mov ESI,1668051572
            mov RDI,RBP
            call .L_4045e0

            test EAX,EAX
            je .L_412d12
.L_412b76:

            mov RDX,QWORD PTR [RBX+136]
            test RDX,RDX
            je .L_412b97

            mov ESI,1668050804
            mov RDI,RBP
            call .L_4045e0

            test EAX,EAX
            je .L_412d12
.L_412b97:

            cmp R14D,1818848875
            je .L_412bf0

            cmp R14D,1935896178
            jne .L_412c0c

            lea RDX,QWORD PTR [RBX+152]
            jmp .L_412c13
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412bb8:

            mov ESI,DWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,R12D
            call .L_411740

            test RAX,RAX
            je .L_412ac9

            test BYTE PTR [RSP+44],8
            je .L_412b26
.L_412bdc:

            mov RDI,QWORD PTR [RSP+64]
            mov ESI,1
            call .L_42bcf0

            jmp .L_412b26
.L_412bf0:

            mov RSI,QWORD PTR [RBX+200]
            test RSI,RSI
            je .L_412c0c

            mov RDI,RBP
            call .L_429290

            test EAX,EAX
            je .L_412d12
.L_412c0c:

            lea RDX,QWORD PTR [RBX+176]
.L_412c13:

            mov ESI,2004119668
            mov RDI,RBP
            call .L_4045e0

            test EAX,EAX
            je .L_412d12

            mov ESI,DWORD PTR [RBX+224]
            mov RDI,RBP
            call .L_403420

            mov RDI,QWORD PTR [RSP+64]
            call .L_42b910
.L_412c40:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_412f66

            add RSP,88
.L_412c5b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412c70:

            test AL,AL
            mov ESI,1633842036
            jne .L_412a0e

            mov RDI,RBP
            mov ESI,1886549106
            call .L_403560

            mov ESI,R14D
            mov RDI,RBP
            call .L_403520

            mov ESI,R12D
            mov RDI,RBP
            call .L_403540

            jmp .L_412a2c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412ca8:

            movsd XMM0,QWORD PTR [RIP+.L_42e148]
            ucomisd XMM0,QWORD PTR [RSP]
            jbe .L_41297c

            mov RDI,R13
            call .L_42b060

            mov RDI,QWORD PTR [RSP+64]
            xor ESI,ESI
            mov RDX,RAX
            call .L_42bb10

            test EAX,EAX
            je .L_412d10

            cmp DWORD PTR [RBX+148],1281450528
            jne .L_41299b
.L_412ce6:

            mov RDI,R13
            call .L_42ad20

            mov RDI,QWORD PTR [RSP+64]
            mov RDX,RAX
            mov ESI,1
            call .L_42bb10

            test EAX,EAX
            jne .L_41299b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412d10:

            xor EBP,EBP
.L_412d12:

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_412d21

            call .L_42b910
.L_412d21:

            mov RDI,RBP
            xor EBP,EBP
            call .L_403ea0

            jmp .L_412c40
.L_412d30:

            mov ESI,1935896178
            jmp .L_412a0e

            nop
            nop
            nop
            nop
            nop
            nop
.L_412d40:

            mov EDX,DWORD PTR [RBX+224]
            mov R9,QWORD PTR [RSP+8]
            mov RDI,R13
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+32]
            or DWORD PTR [RSP+44],2
            call .L_41e1c0

            mov RDI,QWORD PTR [RSP+64]
            call .L_42bd00

            test RAX,RAX
            je .L_412da1

            cmp DWORD PTR [RAX+8],1668707188
            je .L_412da1

            mov ESI,R15D
            mov RDI,R13
            call .L_42b040

            mov RDI,QWORD PTR [RSP+64]
            xor ESI,ESI
            mov RDX,RAX
            call .L_42bb10

            test EAX,EAX
            je .L_412d12
.L_412da1:

            mov RDI,QWORD PTR [RSP+64]
            call .L_42bd10

            test RAX,RAX
            je .L_412ddf

            cmp DWORD PTR [RAX+8],1668707188
            je .L_412ddf

            mov ESI,DWORD PTR [RSP+40]
            mov RDI,R13
            call .L_42b040

            mov RDI,QWORD PTR [RSP+64]
            mov RDX,RAX
            mov ESI,1
            call .L_42bb10

            test EAX,EAX
            je .L_412d12
.L_412ddf:

            mov ESI,DWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,R12D
            call .L_411740

            test RAX,RAX
            jne .L_412b1b

            jmp .L_412d12
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412e00:

            mov RDI,QWORD PTR [RBX+232]
            call .L_402d30

            test RAX,RAX
            mov RBP,RAX
            je .L_412c40

            mov RDI,RAX
            mov ESI,1852662636
            call .L_403560

            mov ESI,DWORD PTR [RBX+148]
            mov RDI,RBP
            call .L_403540

            mov ESI,1281450528
            mov RDI,RBP
            call .L_403520

            lea RSI,QWORD PTR [RIP+.L_42f078]
            mov RDI,RBP
            call .L_4114b0

            test EAX,EAX
            je .L_412d21

            mov RDI,RBX
            call .L_410df0

            test RAX,RAX
            mov R12,RAX
            je .L_412d21

            mov RDI,RAX
            call .L_410c40

            mov RDI,R12
            mov R13D,EAX
            call .L_410a30

            test RAX,RAX
            mov R12,RAX
            je .L_412d21

            mov RDI,QWORD PTR [RBX+112]
            call .L_42b8e0

            mov EDI,DWORD PTR [RBX+148]
            mov DWORD PTR [R12+8],EAX
            call .L_40c9e0

            mov EDI,DWORD PTR [RBX+148]
            mov R14D,EAX
            shl R14D,16
            call .L_40ccf0

            lea EDX,DWORD PTR [RAX*8+2]
            mov ESI,10
            mov RDI,RBX
            or EDX,R14D
            call .L_40fc80

            test R13D,R13D
            mov DWORD PTR [RSP+60],0
            jle .L_412f16

            lea R14,QWORD PTR [RSP+60]
            xor EAX,EAX
.L_412ee0:

            movsxd RDX,EAX
            mov ECX,1
            mov RSI,R14
            imul RDX,RDX,294
            mov RDI,RBX
            add RDX,QWORD PTR [R12+80]
            add RDX,262
            call .L_40edf0

            mov EAX,DWORD PTR [RSP+60]
            add EAX,1
            cmp R13D,EAX
            mov DWORD PTR [RSP+60],EAX
            jg .L_412ee0
.L_412f16:

            mov RDX,R12
            mov ESI,1852009522
            mov RDI,RBP
            call .L_4045e0

            test EAX,EAX
            je .L_412d21

            mov RDI,R12
            call .L_4109e0

            jmp .L_412c40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412f40:

            xor EBP,EBP
            jmp .L_412c40
.L_412f47:

            lea RCX,QWORD PTR [RIP+.L_42f0f0]
            lea RSI,QWORD PTR [RIP+.L_42ed4a]
            lea RDI,QWORD PTR [RIP+.L_42ed54]
            mov EDX,1075
            call __assert_fail@PLT
.L_412f66:

            call __stack_chk_fail@PLT
.L_412f6b:

            nop
            nop
            nop
            nop
            nop
.L_412f70:

            mov EAX,1482250784
            ret 
.L_412f76:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412f80:

            ucomisd XMM0,QWORD PTR [RIP+.L_42e148]
            sbb EAX,EAX
            and EAX,116982545
            add EAX,1835824483
            ret 
.L_412f95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412fa0:

            ucomisd XMM0,QWORD PTR [RIP+.L_42e148]
            sbb EAX,EAX
            and EAX,4143513088
            add EAX,1835824483
            ret 
.L_412fb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412fc0:

            movsd XMM1,QWORD PTR [RIP+.L_42e148]
            ucomisd XMM1,XMM0
            jbe .L_412fe0

            mov EDX,DWORD PTR [RDI+64]
            xor EAX,EAX
            test EDX,EDX
            sete AL
            add EAX,1835430961
            ret 
          .byte 0x66
          .byte 0x90
.L_412fe0:

            mov EAX,1832993312
            ret 
.L_412fe6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ff0:

            movsd XMM1,QWORD PTR [RIP+.L_42e148]
            ucomisd XMM1,XMM0
            jbe .L_413010

            mov EDX,DWORD PTR [RDI+64]
            xor EAX,EAX
            test EDX,EDX
            sete AL
            add EAX,1835430961
            ret 
          .byte 0x66
          .byte 0x90
.L_413010:

            mov EAX,1833058592
            ret 
.L_413016:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413020:

            push R13
            push R12
            movsxd R13,EDX
            push RBP
            push RBX
            mov R12,RDI
            sub RSP,24
.L_413030:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+R13*8+16]
            mov QWORD PTR [RSP],0
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_4130ab

            xor EBP,EBP
            jmp .L_41306c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413060:

            mov RBX,QWORD PTR [RBX+56]
            mov RBP,RAX
            test RBX,RBX
            je .L_4130ab
.L_41306c:

            mov RDI,QWORD PTR [R12+8]
            mov EDX,64
            mov RSI,RBX
            call .L_4212e0

            test RAX,RAX
            je .L_4130c2

            test RBP,RBP
            mov QWORD PTR [RAX+56],0
            je .L_413094

            mov QWORD PTR [RBP+56],RAX
.L_413094:

            cmp QWORD PTR [RSP],0
            jne .L_413060

            mov RBX,QWORD PTR [RBX+56]
            mov QWORD PTR [RSP],RAX
            mov RBP,RAX
            test RBX,RBX
            jne .L_41306c
.L_4130ab:

            mov RDI,QWORD PTR [R12+8]
            mov RSI,RSP
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+R13*8+16],RAX
.L_4130c2:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4130dd

            add RSP,24
.L_4130d6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4130dd:

            call __stack_chk_fail@PLT
.L_4130e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4130f0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_4130f7:

            mov RBX,RSI
            mov ESI,EDX
            call .L_4068a0

            test RBX,RBX
            mov R12,RAX
            je .L_413160

            mov ESI,64
            mov RDI,RBP
            call .L_4064d0

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_413153

            movdqu XMM0,XMMWORD PTR [RBX+24]
            mov RAX,QWORD PTR [RBX+72]
            movups XMMWORD PTR [RDX],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+40]
            movups XMMWORD PTR [RDX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+56]
            mov QWORD PTR [RDX+48],RAX
            mov RAX,QWORD PTR [R12]
            movups XMMWORD PTR [RDX+32],XMM0
            mov QWORD PTR [RDX+56],RAX
            mov QWORD PTR [R12],RDX
            mov EAX,1
.L_413153:

            pop RBX
.L_413154:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413160:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_413171:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413180:

            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,8
            call .L_422950

            mov RDI,QWORD PTR [RBP+40]
            add RSP,8
            mov RSI,RBX
            pop RBX
            pop RBP
            jmp .L_421170
.L_4131a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4131b0:

            push RBX
            mov RSI,QWORD PTR [RDI+8]
            mov RBX,RDI
            test RSI,RSI
            je .L_4131c5

            mov RDI,QWORD PTR [RDI]
            call .L_421170
.L_4131c5:

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            je .L_4131d6

            mov RDI,QWORD PTR [RBX]
            call .L_421170
.L_4131d6:

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            pop RBX
            ret 
.L_4131e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4131f0:

            push RBX
            cmp QWORD PTR [RDI+8],0
            mov RBX,RDI
            je .L_413200

            call .L_4131b0
.L_413200:

            cmp QWORD PTR [RBX+32],0
            je .L_413210

            lea RDI,QWORD PTR [RBX+24]
            call .L_4131b0
.L_413210:

            cmp QWORD PTR [RBX+56],0
            je .L_413220

            lea RDI,QWORD PTR [RBX+48]
            call .L_4131b0
.L_413220:

            cmp QWORD PTR [RBX+80],0
            je .L_413230

            lea RDI,QWORD PTR [RBX+72]
            pop RBX
            jmp .L_4131b0
          .byte 0x66
          .byte 0x90
.L_413230:

            pop RBX
            ret 
.L_413232:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413240:

            mov RDI,QWORD PTR [RDI+40]
            jmp .L_421170
.L_413249:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413250:

            jmp .L_413240
.L_413252:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413260:

            jmp .L_413240
.L_413262:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413270:

            jmp .L_413240
.L_413272:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413280:

            jmp .L_413240
.L_413282:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413290:

            jmp .L_413240
.L_413292:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132a0:

            jmp .L_413240
.L_4132a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132b0:

            jmp .L_413240
.L_4132b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132c0:

            jmp .L_413240
.L_4132c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132d0:

            jmp .L_413240
.L_4132d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132e0:

            jmp .L_413240
.L_4132e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132f0:

            push RBP
            push RBX
            mov RBP,RSI
            mov EDX,8
            mov ESI,3
            sub RSP,8
            mov RDI,QWORD PTR [RDI+40]
            call .L_421110

            test RAX,RAX
            mov RBX,RAX
            je .L_41333a

            mov RDI,QWORD PTR [RBP]
            call .L_4229c0

            mov QWORD PTR [RBX],RAX
            mov RDI,QWORD PTR [RBP+8]
            call .L_4229c0

            mov QWORD PTR [RBX+8],RAX
            mov RDI,QWORD PTR [RBP+16]
            call .L_4229c0

            mov QWORD PTR [RBX+16],RAX
.L_41333a:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_413344:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413350:

            mov RDI,RSI
            jmp .L_4229c0
.L_413358:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413360:

            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov RBP,RDX
            sub RSP,8
            mov ESI,DWORD PTR [RDX+4]
            call .L_4057d0

            test EAX,EAX
            je .L_413398

            mov RAX,QWORD PTR [RBX+312]
            mov ESI,DWORD PTR [RBP]
            add RSP,8
            lea RDX,QWORD PTR [RBP+8]
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413398:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_4133a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4133b0:

            mov RDI,RSI
            mov ESI,DWORD PTR [RDX]
            jmp .L_4057d0
.L_4133ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4133c0:

            push R12
            mov R12,RSI
            lea RSI,QWORD PTR [RDX+16]
            push RBP
            mov RAX,RDX
            push RBX
.L_4133ce:

            mov RBP,RDX
            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
.L_4133d8:

            xor ECX,ECX
            cmp BYTE PTR [RAX],255
            setne CL
            add RAX,1
            add EBX,ECX
            cmp RAX,RSI
            jne .L_4133d8

            mov ESI,EBX
            mov RDI,R12
            call .L_4057d0

            test EAX,EAX
            je .L_413411

            mov RDX,RBP
            mov ESI,EBX
            mov RDI,R12
            call QWORD PTR [R12+312]

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_413411:

            pop RBX
.L_413412:

            pop RBP
            pop R12
            ret 
.L_413416:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413420:

            test ECX,ECX
            je .L_413470

            lea EAX,DWORD PTR [RCX-1]
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RBX,RDX
            lea R12,QWORD PTR [RDX+RAX*8+8]
            jmp .L_413449
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413440:

            add RBX,8
            cmp RBX,R12
            je .L_413460
.L_413449:

            movsd XMM0,QWORD PTR [RBX]
            mov RDI,RBP
            call .L_4059c0

            test EAX,EAX
            jne .L_413440

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_413460:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413470:

            mov EAX,1
            ret 
.L_413476:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413480:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,40
            mov RDI,QWORD PTR [RDX]
            call .L_423730

            cmp EAX,5
            je .L_413598
.L_4134a1:

            xor ESI,ESI
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            jne .L_4134c0
.L_4134af:

            xor EAX,EAX
.L_4134b1:

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
.L_4134c0:

            mov ESI,3
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_4134af

            mov ESI,256
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_4134af

            mov ESI,2
            mov RDI,RBX
            lea R13,QWORD PTR [RBP+24]
            call .L_4056b0

            test EAX,EAX
            je .L_4134af
.L_4134f7:

            xor R12D,R12D
            jmp .L_413511
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413500:

            add R12D,1
            cmp R12D,256
            je .L_41366a
.L_413511:

            pxor XMM0,XMM0
            mov RDI,QWORD PTR [RBP]
            cvtsi2sd XMM0,R12D
            divsd XMM0,QWORD PTR [RIP+.L_42df58]
            cvtsd2ss XMM0,XMM0
            call .L_4237f0

            cvtss2sd XMM0,XMM0
            pxor XMM3,XMM3
            xor ESI,ESI
            mulsd XMM0,QWORD PTR [RIP+.L_42df30]
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM3,XMM0
            jae .L_41357d

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov ESI,65535
            jae .L_41357d

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd ESI,XMM0
            sar ESI,16
            add SI,32767
            movzx ESI,SI
.L_41357d:

            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            jne .L_413500

            jmp .L_4134af
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413598:

            mov RDI,QWORD PTR [RBP+8]
            call .L_423730

            cmp EAX,5
            jne .L_4134a1

            mov RDI,QWORD PTR [RBP+16]
            call .L_423730

            cmp EAX,5
            jne .L_4134a1

            mov ESI,1
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_4134af

            lea R12,QWORD PTR [RBP+24]
.L_4135d5:

            mov RAX,QWORD PTR [RBP]
            mov RAX,QWORD PTR [RAX+16]
            movsd XMM2,QWORD PTR [RAX+16]
            movsd XMM4,QWORD PTR [RAX+56]
            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RAX+24]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call pow@PLT

            addsd XMM0,QWORD PTR [RSP+8]
            mov RDI,RBX
            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            call .L_4059c0

            test EAX,EAX
            je .L_4134af

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4134af

            movsd XMM0,QWORD PTR [RSP+24]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4134af

            add RBP,8
            cmp R12,RBP
            jne .L_4135d5
.L_413660:

            mov EAX,1
            jmp .L_4134b1
.L_41366a:

            add RBP,8
            cmp RBP,R13
            je .L_413660

            jmp .L_4134f7
.L_413678:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413680:

            push R15
            push R14
            mov R14D,ECX
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov EDX,4
            mov RBX,RSI
            xor EBP,EBP
            sub RSP,56
.L_41369e:

            mov QWORD PTR [RSP+16],RDI
            mov RDI,QWORD PTR [RSI+8]
            mov ESI,R13D
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+32],R9
            call .L_421110

            test RAX,RAX
            je .L_413752

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,4
            mov ESI,R13D
            mov R12,RAX
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_413768

            test R13D,R13D
            je .L_4137d8

            mov RBP,RAX
            lea EAX,DWORD PTR [R13-1]
            mov R15,R12
            mov QWORD PTR [RSP+40],RAX
            lea R13,QWORD PTR [R12+RAX*4+4]
            jmp .L_413727
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413708:

            mov RSI,RBP
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_413736

            add DWORD PTR [R15],R14D
            add R15,4
            add RBP,4
            cmp R15,R13
            je .L_413780
.L_413727:

            mov RSI,R15
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            jne .L_413708
.L_413736:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            xor EBP,EBP
            call .L_421170

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RSP+8]
            call .L_421170
.L_413752:

            add RSP,56
.L_413756:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413768:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            call .L_421170

            jmp .L_413752
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413780:

            mov RBP,QWORD PTR [RSP+40]
            xor R13D,R13D
            add RBP,1
            jmp .L_4137bd
          .byte 0x66
          .byte 0x90
.L_413790:

            mov RAX,QWORD PTR [RSP+8]
            mov ECX,R13D
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,RBX
            mov RDI,QWORD PTR [RSP+16]
            mov R8D,DWORD PTR [RAX+R13*4]
            mov RAX,QWORD PTR [RSP+32]
            call RAX

            test EAX,EAX
            je .L_413736

            add R13,1
            cmp R13,RBP
            je .L_4137d8
.L_4137bd:

            mov ESI,DWORD PTR [R12+R13*4]
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            jne .L_413790

            jmp .L_413736
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4137d8:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            mov EBP,1
            call .L_421170

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RSP+8]
            call .L_421170

            jmp .L_413752
.L_4137fc:

            nop
            nop
            nop
            nop
.L_413800:

            push R15
            push R14
            shr ECX,2
            push R13
            push R12
            mov RAX,RDX
            push RBP
            push RBX
            mov RBX,RSI
            mov ESI,ECX
            mov R13D,ECX
            sub RSP,40
.L_41381c:

            mov DWORD PTR [RAX],0
            mov QWORD PTR [RSP+8],RDI
            mov RDI,QWORD PTR [RDI+40]
            mov QWORD PTR [RSP],RDX
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDX
            xor EDX,EDX
            mov EDX,8
            call .L_421110

            test RAX,RAX
            mov R14,RAX
            je .L_4138b7

            test R13D,R13D
            je .L_4138e0

            mov R15,RAX
            lea EAX,DWORD PTR [R13-1]
            lea RBP,QWORD PTR [RSP+20]
            lea R12,QWORD PTR [R14+RAX*8+8]
            jmp .L_413894
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413870:

            mov EAX,DWORD PTR [RSP+20]
            pxor XMM0,XMM0
            add R15,8
            cvtsi2sd XMM0,RAX
            mulsd XMM0,QWORD PTR [RIP+.L_42de98]
            movsd QWORD PTR [R15-8],XMM0
            cmp R15,R12
            je .L_4138e0
.L_413894:

            mov RSI,RBP
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            jne .L_413870

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,R14
            xor R14D,R14D
            mov RDI,QWORD PTR [RAX+40]
            call .L_421170
.L_4138b7:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_4138e9

            add RSP,40
.L_4138ce:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4138e0:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RAX],R13D
            jmp .L_4138b7
.L_4138e9:

            call __stack_chk_fail@PLT
.L_4138ee:

            nop
            nop
.L_4138f0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
.L_4138fd:

            cmp DWORD PTR [RDX+8],1
            mov RAX,QWORD PTR [RDX+16]
            mov ESI,DWORD PTR [RAX+8]
            ja .L_413950

            test ESI,ESI
            jle .L_413950

            cmp ESI,5
            jg .L_4139c0

            lea RAX,QWORD PTR [RIP+.L_42f7c0]
            mov RBX,RDX
            movsxd RDX,ESI
            sub ESI,1
            mov RDI,RBP
            movzx ESI,SI
            mov R12D,DWORD PTR [RAX+RDX*4]
            call .L_4056b0

            test EAX,EAX
            jne .L_413978
.L_41393a:

            xor EAX,EAX
.L_41393c:

            add RSP,8
.L_413940:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413950:

            mov RDI,QWORD PTR [RDI+40]
            lea RDX,QWORD PTR [RIP+.L_42f390]
            xor EAX,EAX
            mov ESI,8
            call .L_421420

            xor EAX,EAX
.L_413969:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413978:

            xor ESI,ESI
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            je .L_41393a

            xor R13D,R13D
            test R12D,R12D
            jg .L_413999

            jmp .L_4139e8
.L_413990:

            add R13D,1
            cmp R12D,R13D
            je .L_4139e8
.L_413999:

            mov RAX,QWORD PTR [RBX+16]
            movsxd RDX,R13D
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RAX+RDX*8+16]
            call .L_4059c0

            test EAX,EAX
            jne .L_413990

            xor EAX,EAX
            jmp .L_41393c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4139c0:

            mov RDI,QWORD PTR [RDI+40]
            lea RDX,QWORD PTR [RIP+.L_42f683]
            xor EAX,EAX
            mov ESI,8
            call .L_421420

            add RSP,8
.L_4139db:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4139e8:

            mov EAX,1
            jmp .L_413969
.L_4139f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413a00:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            shr ECX,2
            push RBP
            push RBX
            mov RBX,RSI
            mov ESI,ECX
            mov R12D,ECX
            sub RSP,24
.L_413a1c:

            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RDX],0
            mov QWORD PTR [RSP+8],RDX
            mov EDX,8
            call .L_421110

            test RAX,RAX
            mov R13,RAX
            je .L_413a7f

            test R12D,R12D
            je .L_413a98

            mov R14,RAX
            lea EAX,DWORD PTR [R12-1]
            lea RBP,QWORD PTR [R13+RAX*8+8]
            jmp .L_413a61
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413a58:

            add R14,8
            cmp R14,RBP
            je .L_413a98
.L_413a61:

            mov RSI,R14
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            jne .L_413a58

            mov RDI,QWORD PTR [R15+40]
            mov RSI,R13
            xor R13D,R13D
            call .L_421170
.L_413a7f:

            add RSP,24
.L_413a83:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413a98:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],R12D
            jmp .L_413a7f
.L_413aa2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413ab0:

            push R15
            push R14
            mov R14D,ECX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            mov R13,RDX
            sub RSP,216
.L_413ad0:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+28]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_405110

            test EAX,EAX
            je .L_413c5d

            mov RDI,QWORD PTR [R12+40]
            mov EDX,8
            mov ESI,3
            call .L_421110

            test RAX,RAX
            mov RBX,RAX
            je .L_413c5d

            mov ECX,DWORD PTR [RSP+28]
            test ECX,ECX
            je .L_413c90

            cmp ECX,1
            jne .L_413c30

            mov R14,RAX
            lea RAX,QWORD PTR [RSP+104]
            lea R15,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP],RAX
.L_413b4b:

            mov RSI,R15
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            je .L_413c48

            lea RSI,QWORD PTR [R15+8]
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            je .L_413c48

            lea RSI,QWORD PTR [R15+16]
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            je .L_413c48

            movsd XMM1,QWORD PTR [R15]
            movsd XMM2,QWORD PTR [RIP+.L_42d9d8]
            movsd XMM0,QWORD PTR [R15+16]
            divsd XMM2,XMM1
            movsd QWORD PTR [RSP+112],XMM1
            subsd XMM0,QWORD PTR [R15+8]
            movapd XMM1,XMM2
            call pow@PLT

            mov RDI,QWORD PTR [R12+40]
            mov RDX,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+120],XMM0
            movsd XMM0,QWORD PTR [R15+8]
            mov ESI,5
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            movsd QWORD PTR [RSP+152],XMM0
            mov QWORD PTR [RSP+160],0
            call .L_4227e0

            test RAX,RAX
            mov QWORD PTR [R14],RAX
            je .L_413c48

            add R15,24
            add R14,8
            cmp R15,QWORD PTR [RSP+8]
            jne .L_413b4b
.L_413c25:

            mov DWORD PTR [R13],1
            jmp .L_413c5f
          .byte 0x90
.L_413c30:

            mov RDI,QWORD PTR [R12+40]
            lea RDX,QWORD PTR [RIP+.L_42f428]
            mov ESI,8
            xor EAX,EAX
            call .L_421420
.L_413c48:

            mov RDI,RBX
            call .L_422950

            mov RDI,QWORD PTR [R12+40]
            mov RSI,RBX
            call .L_421170
.L_413c5d:

            xor EBX,EBX
.L_413c5f:

            mov RDX,QWORD PTR [RSP+200]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_413e1d

            add RSP,216
.L_413c80:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413c90:

            lea RSI,QWORD PTR [RSP+22]
            mov RDI,RBP
            call .L_404fd0

            test EAX,EAX
            je .L_413c48

            movzx ECX,WORD PTR [RSP+22]
            cmp CX,3
            jne .L_413e00

            lea RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            call .L_404fd0

            test EAX,EAX
            je .L_413c48

            lea RSI,QWORD PTR [RSP+26]
            mov RDI,RBP
            call .L_404fd0

            test EAX,EAX
            je .L_413c48

            movzx ESI,WORD PTR [RSP+24]
            cmp SI,256
            je .L_413dd0
.L_413ce6:

            lea RAX,QWORD PTR [RBX+24]
            mov R14,RBX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+21]
            mov QWORD PTR [RSP],RAX
.L_413cfb:

            mov RDI,QWORD PTR [R12+40]
            xor EDX,EDX
            call .L_422570

            test RAX,RAX
            mov QWORD PTR [R14],RAX
            je .L_413c48

            movzx EDX,WORD PTR [RSP+26]
            cmp DX,1
            je .L_413d80

            cmp DX,2
            jne .L_413d58

            movzx ESI,WORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX+48]
            mov RDI,RBP
            call .L_405070

            test EAX,EAX
            je .L_413c48
.L_413d3d:

            add R14,8
            cmp QWORD PTR [RSP+8],R14
            je .L_413c25

            movzx ESI,WORD PTR [RSP+24]
            jmp .L_413cfb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413d58:

            mov RDI,QWORD PTR [R12+40]
            lea ECX,DWORD PTR [RDX*8]
            lea RDX,QWORD PTR [RIP+.L_42f400]
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_413c48
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413d80:

            xor R15D,R15D
            cmp WORD PTR [RSP+24],0
            jne .L_413db9

            jmp .L_413d3d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413d90:

            movzx EAX,BYTE PTR [RSP+21]
            mov RCX,QWORD PTR [R14]
            mov RSI,QWORD PTR [RCX+48]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+R15*2],AX
            movzx ECX,WORD PTR [RSP+24]
            lea EAX,DWORD PTR [R15+1]
            add R15,1
            cmp ECX,EAX
            jbe .L_413d3d
.L_413db9:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBP
            call .L_404f40

            test EAX,EAX
            jne .L_413d90

            jmp .L_413c48
          .byte 0x66
          .byte 0x90
.L_413dd0:

            cmp WORD PTR [RSP+26],1
            jne .L_413ce6

            cmp R14D,1576
            jne .L_413ce6

            mov EAX,2
            mov WORD PTR [RSP+26],AX
            jmp .L_413ce6

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413e00:

            mov RDI,QWORD PTR [R12+40]
            lea RDX,QWORD PTR [RIP+.L_42f3d0]
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_413c48
.L_413e1d:

            call __stack_chk_fail@PLT
.L_413e22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413e30:

            mov RDI,RSI
            jmp .L_4110b0
.L_413e38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413e40:

            mov RDI,RSI
            jmp .L_411240
.L_413e48:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413e50:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            mov R12,RDX
            sub RSP,24
.L_413e66:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_405110

            test EAX,EAX
            je .L_413f08

            cmp DWORD PTR [RSP+4],16
            ja .L_413f08

            mov RDI,QWORD PTR [R13+40]
            mov EDX,1
            mov ESI,16
            call .L_421110

            test RAX,RAX
            mov RBX,RAX
            je .L_413f08

            pcmpeqd XMM0,XMM0
            mov EDX,1
            mov RSI,RAX
            mov RDI,RBP
            movups XMMWORD PTR [RAX],XMM0
            mov ECX,DWORD PTR [RSP+4]
            call QWORD PTR [RBP+280]

            cmp EAX,DWORD PTR [RSP+4]
            jne .L_413ef8

            mov DWORD PTR [R12],1
.L_413ed6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_413f0c

            add RSP,24
.L_413eed:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413ef8:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,RBX
            call .L_421170

            nop
            nop
            nop
            nop
.L_413f08:

            xor EBX,EBX
            jmp .L_413ed6
.L_413f0c:

            call __stack_chk_fail@PLT
.L_413f11:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413f20:

            mov RDI,RSI
            jmp .L_410480
.L_413f28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413f30:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov ESI,392
            mov R15,RDX
            sub RSP,8
.L_413f4c:

            mov RDI,QWORD PTR [RDI+40]
            call .L_4210e0

            test RAX,RAX
            mov RBP,RAX
            je .L_413ff6

            mov DWORD PTR [R15],0
            mov RSI,RAX
            mov RDI,R13
            call .L_405110

            test EAX,EAX
            je .L_413fe8

            lea RSI,QWORD PTR [RBP+4]
            mov RDI,R13
            call .L_405110

            test EAX,EAX
            je .L_413fe8

            mov EAX,DWORD PTR [RBP+4]
            cmp EAX,15
            ja .L_414010

            test EAX,EAX
            je .L_414020
.L_413f9b:

            xor R12D,R12D
            jmp .L_413fcc
.L_413fa0:

            lea RSI,QWORD PTR [RBP+RBX*1+16]
            mov RDI,R13
            call .L_405350

            test EAX,EAX
            je .L_413fe8

            lea RSI,QWORD PTR [RBP+RBX*1+24]
            mov RDI,R13
            call .L_405110

            test EAX,EAX
            je .L_413fe8

            add R12D,1
            cmp DWORD PTR [RBP+4],R12D
            jbe .L_414020
.L_413fcc:

            mov EAX,R12D
            mov RDI,R13
            lea RBX,QWORD PTR [RAX+RAX*2]
            shl RBX,3
            lea RSI,QWORD PTR [RBP+RBX*1+8]
            call .L_405350

            test EAX,EAX
            jne .L_413fa0
.L_413fe8:

            mov RDI,QWORD PTR [R14+40]
            mov RSI,RBP
            xor EBP,EBP
            call .L_421170
.L_413ff6:

            add RSP,8
.L_413ffa:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414010:

            mov DWORD PTR [RBP+4],15
            jmp .L_413f9b

            nop
            nop
            nop
            nop
.L_414020:

            mov DWORD PTR [R15],1
            jmp .L_413ff6
.L_414029:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414030:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,72
            mov R13,RDX
            sub RSP,24
.L_41404f:

            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_41415f

            lea R14,QWORD PTR [RSP+4]
            mov RDI,RBP
            mov RSI,R14
            call .L_404fd0

            test EAX,EAX
            je .L_414150

            cmp R15D,32
            movzx EAX,WORD PTR [RSP+4]
            jne .L_4140a6

            test AX,AX
            je .L_414188
.L_4140a6:

            cmp AX,3
            jne .L_414150

            lea RSI,QWORD PTR [RSP+6]
            mov RDI,RBP
            call .L_404fd0

            test EAX,EAX
            je .L_414150

            mov RSI,RBX
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            je .L_414150

            lea RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            je .L_414150

            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            lea RSI,QWORD PTR [RBX+24]
            mov RDI,RBP
            mov QWORD PTR [RBX+16],RAX
            call .L_405350

            test EAX,EAX
            je .L_414150

            lea RSI,QWORD PTR [RBX+32]
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            je .L_414150

            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            lea RSI,QWORD PTR [RBX+48]
            mov RDI,RBP
            mov QWORD PTR [RBX+40],RAX
            call .L_405350

            test EAX,EAX
            je .L_414150

            lea RSI,QWORD PTR [RBX+56]
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            je .L_414150

            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            mov QWORD PTR [RBX+64],RAX
            mov DWORD PTR [R13],1
            jmp .L_41415f
          .byte 0x90
.L_414150:

            mov RDI,QWORD PTR [R12+40]
            mov RSI,RBX
            xor EBX,EBX
            call .L_421170
.L_41415f:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4141af

            add RSP,24
.L_414176:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414188:

            xor ESI,ESI
            mov RDI,RBP
            call .L_404fd0

            test EAX,EAX
            je .L_414150

            mov RSI,R14
            mov RDI,RBP
            call .L_404fd0

            test EAX,EAX
            je .L_414150

            movzx EAX,WORD PTR [RSP+4]
            jmp .L_4140a6
.L_4141af:

            call __stack_chk_fail@PLT
.L_4141b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4141c0:

            mov RDI,RSI
            jmp .L_410ec0
.L_4141c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4141d0:

            mov RDI,RSI
            jmp .L_410f50
.L_4141d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4141e0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov RDI,RSI
            push RBX
            mov R13,RDX
            mov RBX,RSI
            sub RSP,16
.L_4141f8:

            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+4]
            mov RDI,RBX
            lea EBP,DWORD PTR [RAX-8]
            call .L_405110

            test EAX,EAX
            je .L_414290

            mov RDI,QWORD PTR [R14+40]
            mov ESI,DWORD PTR [RSP+4]
            call .L_410e10

            test RAX,RAX
            mov R12,RAX
            je .L_414290

            mov EDX,DWORD PTR [RSP+4]
            lea R9,QWORD PTR [RIP+.L_4176d0]
            mov R8,RAX
            mov ECX,EBP
            mov RSI,RBX
            mov RDI,R14
            call .L_413680

            test EAX,EAX
            je .L_414288

            mov DWORD PTR [R13],1
.L_414264:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_414295

            add RSP,16
.L_41427b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414288:

            mov RDI,R12
            call .L_410ec0
.L_414290:

            xor R12D,R12D
            jmp .L_414264
.L_414295:

            call __stack_chk_fail@PLT
.L_41429a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4142a0:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,24
            jmp .L_421190
.L_4142ae:

            nop
            nop
.L_4142b0:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,392
            jmp .L_421190
.L_4142be:

            nop
            nop
.L_4142c0:

            mov EAX,DWORD PTR [RSI]
            mov RDI,QWORD PTR [RDI+40]
            lea EDX,DWORD PTR [RAX+11]
            jmp .L_421190
.L_4142ce:

            nop
            nop
.L_4142d0:

            mov RDI,QWORD PTR [RDI+40]
            shl EDX,2
            jmp .L_421190
.L_4142dc:

            nop
            nop
            nop
            nop
.L_4142e0:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,56
            jmp .L_421190
.L_4142ee:

            nop
            nop
.L_4142f0:

            jmp .L_4142e0
.L_4142f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414300:

            jmp .L_4142e0
.L_414302:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414310:

            mov RDI,QWORD PTR [RDI+40]
            shl EDX,3
            jmp .L_421190
.L_41431c:

            nop
            nop
            nop
            nop
.L_414320:

            jmp .L_414310
.L_414322:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414330:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,16
            jmp .L_421190
.L_41433e:

            nop
            nop
.L_414340:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,72
            jmp .L_421190
.L_41434e:

            nop
            nop
.L_414350:

            mov RDI,RSI
            mov RSI,RDX
            jmp .L_405ad0
.L_41435b:

            nop
            nop
            nop
            nop
            nop
.L_414360:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov R13,RSI
            mov ESI,24
            mov RBP,RDX
            sub RSP,8
            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RDX],0
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_4143a5

            mov RSI,RAX
            mov RDI,R13
            call .L_405460

            test EAX,EAX
            je .L_4143b8

            mov DWORD PTR [RBP],1
.L_4143a5:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4143b8:

            mov RDI,QWORD PTR [R12+40]
            mov RSI,RBX
            xor EBX,EBX
            call .L_421170

            jmp .L_4143a5
.L_4143c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4143d0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,56
            mov R12,RDX
            sub RSP,8
.L_4143e8:

            mov RDI,QWORD PTR [RDI+40]
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_414438

            mov DWORD PTR [R12],0
            mov RSI,RAX
            mov RDI,RBP
            call .L_405460

            test EAX,EAX
            je .L_414450

            lea RSI,QWORD PTR [RBX+24]
            mov RDI,RBP
            call .L_405460

            test EAX,EAX
            je .L_414450

            lea RSI,QWORD PTR [RBX+48]
            mov RDI,RBP
            call .L_405110

            test EAX,EAX
            je .L_414450

            mov DWORD PTR [R12],1
.L_414438:

            add RSP,8
.L_41443c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414450:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,RBX
            xor EBX,EBX
            call .L_421170

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41446c:

            nop
            nop
            nop
            nop
.L_414470:

            mov RDI,RSI
            jmp .L_42b910
.L_414478:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414480:

            mov RDI,RSI
            jmp .L_42b9f0
.L_414488:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414490:

            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            movzx ESI,WORD PTR [RDX+16]
            mov RDI,R12
            mov RBP,RDX
            mov R13,QWORD PTR [RDX+48]
            call .L_4056b0

            test EAX,EAX
            jne .L_4144c0
.L_4144b2:

            xor EAX,EAX
.L_4144b4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4144c0:

            movzx ESI,WORD PTR [RBP+20]
            mov RDI,R12
            call .L_4056b0

            test EAX,EAX
            je .L_4144b2

            mov EAX,DWORD PTR [RBP+20]
            mov EDX,DWORD PTR [RBP+16]
            imul EDX,EAX
            test EDX,EDX
            je .L_41451b

            lea EAX,DWORD PTR [RDX-1]
            xor EBX,EBX
            lea R14,QWORD PTR [RAX*8+8]
            jmp .L_4144f9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4144f0:

            add RBX,8
            cmp R14,RBX
            je .L_414518
.L_4144f9:

            mov RAX,QWORD PTR [R13]
            pxor XMM0,XMM0
            mov RDI,R12
            cvtsd2ss XMM0,QWORD PTR [RAX+RBX*1]
            call .L_405870

            test EAX,EAX
            jne .L_4144f0

            jmp .L_4144b2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414518:

            mov EAX,DWORD PTR [RBP+20]
.L_41451b:

            xor EBX,EBX
            test EAX,EAX
            jne .L_41454b

            jmp .L_414570
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414528:

            pxor XMM0,XMM0
            mov EDX,EBX
            mov RDI,R12
            cvtsd2ss XMM0,QWORD PTR [RAX+RDX*8]
            call .L_405870

            test EAX,EAX
            je .L_4144b2
.L_414543:

            add EBX,1
            cmp DWORD PTR [RBP+20],EBX
            jbe .L_414570
.L_41454b:

            mov RAX,QWORD PTR [R13+8]
            test RAX,RAX
            jne .L_414528

            pxor XMM0,XMM0
            mov RDI,R12
            call .L_405870

            test EAX,EAX
            jne .L_414543

            jmp .L_4144b2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414570:

            mov EAX,1
            jmp .L_4144b4
.L_41457a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_414580:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBX,RSI
            mov RBP,RDX
            mov RDI,RBX
            sub RSP,80
.L_414598:

            lea RSI,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_404fd0

            test EAX,EAX
            je .L_4146bf

            lea RSI,QWORD PTR [RSP+14]
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_4146bf

            cmp WORD PTR [RSP+12],0
            je .L_4146c8

            cmp WORD PTR [RSP+14],0
            je .L_4146c8

            lea R13,QWORD PTR [RSP+48]
            mov ECX,16
            mov EDX,1
            mov RDI,RBX
            mov RSI,R13
            call QWORD PTR [RBX+280]

            cmp EAX,16
            jne .L_4146c8

            movzx EDX,WORD PTR [RSP+12]
            mov EAX,8
            cmp DX,8
            cmovbe EAX,EDX
            test DX,DX
            movzx ECX,AX
            je .L_414708

            movzx EAX,BYTE PTR [RSP+48]
            cmp AL,1
            je .L_4146c8

            lea EDI,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RSP+16]
            xor ECX,ECX
            jmp .L_414656
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414648:

            add RCX,1
            movzx EAX,BYTE PTR [R13+RCX*1]
            cmp AL,1
            je .L_4146c8
.L_414656:

            cmp RDI,RCX
            mov DWORD PTR [RSI+RCX*4],EAX
            jne .L_414648
.L_41465e:

            movzx ECX,WORD PTR [RSP+14]
            mov RDI,QWORD PTR [R12+40]
            xor R8D,R8D
            call .L_42b3f0

            test RAX,RAX
            mov R13,RAX
            je .L_4146c8

            mov R14,QWORD PTR [RAX+48]
            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_4146f8

            xor R12D,R12D
            jmp .L_41469a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414690:

            add R12D,1
            cmp DWORD PTR [R14+16],R12D
            jbe .L_4146f8
.L_41469a:

            mov RDX,QWORD PTR [R14]
            mov EAX,R12D
            mov RDI,RBX
            lea RSI,QWORD PTR [RDX+RAX*4]
            call .L_4051c0

            test EAX,EAX
            jne .L_414690

            mov DWORD PTR [RBP],0
            mov RDI,R13
            call .L_42aef0
.L_4146bf:

            xor R13D,R13D
            jmp .L_4146d2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4146c8:

            mov DWORD PTR [RBP],0
            xor R13D,R13D
.L_4146d2:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_414712

            add RSP,80
.L_4146e9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4146f8:

            mov DWORD PTR [RBP],1
            jmp .L_4146d2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414708:

            lea RSI,QWORD PTR [RSP+16]
            jmp .L_41465e
.L_414712:

            call __stack_chk_fail@PLT
.L_414717:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414720:

            mov RDI,RSI
            jmp .L_42aef0
.L_414728:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414730:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            sub RSP,40
.L_414747:

            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_404fd0

            test EAX,EAX
            je .L_414841

            lea RSI,QWORD PTR [RSP+18]
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_414841

            movzx EBP,WORD PTR [RSP+16]
            cmp BP,15
            ja .L_414841

            movzx EAX,WORD PTR [RSP+18]
            cmp AX,15
            ja .L_414841

            imul EBP,EAX
            mov RDI,QWORD PTR [R13+40]
            mov EDX,8
            mov ESI,EBP
            call .L_421110

            test RAX,RAX
            mov R14,RAX
            je .L_414841

            movzx ESI,WORD PTR [RSP+18]
            mov RDI,QWORD PTR [R13+40]
            mov EDX,8
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_414918

            test EBP,EBP
            je .L_414870

            lea EAX,DWORD PTR [RBP-1]
            mov R15,R14
            lea RBP,QWORD PTR [RSP+20]
            lea R12,QWORD PTR [R14+RAX*8+8]
            jmp .L_414819
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414800:

            pxor XMM0,XMM0
            add R15,8
            cvtss2sd XMM0,DWORD PTR [RSP+20]
            movsd QWORD PTR [R15-8],XMM0
            cmp R15,R12
            je .L_414870
.L_414819:

            mov RSI,RBP
            mov RDI,RBX
            call .L_4051c0

            test EAX,EAX
            jne .L_414800
.L_414828:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_421170

            mov RDI,QWORD PTR [R13+40]
            mov RSI,QWORD PTR [RSP]
            call .L_421170
.L_414841:

            xor EAX,EAX
.L_414843:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41492b

            add RSP,40
.L_41485b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414870:

            cmp WORD PTR [RSP+18],0
            je .L_4148c6

            mov R15,QWORD PTR [RSP]
            xor R12D,R12D
            lea RBP,QWORD PTR [RSP+20]
            jmp .L_4148b2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414890:

            pxor XMM0,XMM0
            movzx ESI,WORD PTR [RSP+18]
            add R12D,1
            add R15,8
            cvtss2sd XMM0,DWORD PTR [RSP+20]
            movsd QWORD PTR [R15-8],XMM0
            cmp ESI,R12D
            jbe .L_4148d0
.L_4148b2:

            mov RSI,RBP
            mov RDI,RBX
            call .L_4051c0

            test EAX,EAX
            jne .L_414890

            jmp .L_414828
.L_4148c6:

            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4148d0:

            movzx EDX,WORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP]
            mov RCX,R14
            mov RDI,QWORD PTR [R13+40]
            mov R8,RBX
            call .L_42a230

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            mov QWORD PTR [RSP],RAX
            call .L_421170

            mov RDI,QWORD PTR [R13+40]
            mov RSI,RBX
            call .L_421170

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],1
            mov RAX,QWORD PTR [RSP]
            jmp .L_414843
.L_414918:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_421170

            xor EAX,EAX
            jmp .L_414843
.L_41492b:

            call __stack_chk_fail@PLT
.L_414930:

            mov RDI,RSI
            jmp .L_42b6f0
.L_414938:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414940:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            mov RDI,RSI
            sub RSP,40
.L_41495a:

            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+20]
            mov RDI,RBX
            mov R14D,EAX
            call .L_404fd0

            test EAX,EAX
            je .L_414a68

            lea RSI,QWORD PTR [RSP+22]
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_414a68

            movzx ESI,WORD PTR [RSP+20]
            cmp SI,WORD PTR [RSP+22]
            jne .L_414a68

            mov RDI,QWORD PTR [RBP+40]
            mov EDX,8
            call .L_421110

            test RAX,RAX
            mov R12,RAX
            je .L_414a68

            movzx EDX,WORD PTR [RSP+20]
            lea ECX,DWORD PTR [R14-8]
            lea R9,QWORD PTR [RIP+.L_4182e0]
            mov R8,RAX
            mov RSI,RBX
            mov RDI,RBP
            xor R14D,R14D
            call .L_413680

            test EAX,EAX
            mov DWORD PTR [RSP+12],0
            jne .L_414a70

            cmp WORD PTR [RSP+20],0
            je .L_414a2d
.L_414a02:

            mov R15,R12
            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414a10:

            mov RDI,QWORD PTR [R15]
            test RDI,RDI
            je .L_414a1d

            call .L_422930
.L_414a1d:

            movzx EDX,WORD PTR [RSP+20]
            add EBX,1
            add R15,8
            cmp EDX,EBX
            ja .L_414a10
.L_414a2d:

            mov RDI,QWORD PTR [RBP+40]
            mov RSI,R12
            call .L_421170

            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [R13],EAX
.L_414a41:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_414a9e

            add RSP,40
.L_414a58:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414a68:

            xor R14D,R14D
            jmp .L_414a41
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414a70:

            movzx ESI,WORD PTR [RSP+20]
            mov RDI,QWORD PTR [RBP+40]
            mov RDX,R12
            call .L_42af10

            mov R14,RAX
            xor EAX,EAX
            test R14,R14
            setne AL
            cmp WORD PTR [RSP+20],0
            mov DWORD PTR [RSP+12],EAX
            jne .L_414a02

            jmp .L_414a2d
.L_414a9e:

            call __stack_chk_fail@PLT
.L_414aa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414ab0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            mov RDI,QWORD PTR [RSI]
            test RDI,RDI
            je .L_414ac9

            call .L_422930
.L_414ac9:

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_414ad7

            call .L_422930
.L_414ad7:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_414ae5

            call .L_410480
.L_414ae5:

            mov RDI,QWORD PTR [RBP+40]
            add RSP,8
            mov RSI,RBX
            pop RBX
            pop RBP
            jmp .L_421170
.L_414af7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414b00:

            mov RDI,RSI
            jmp .L_422930
.L_414b08:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414b10:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R13,RDI
            push RBX
            mov RBX,RSI
            mov RDI,RSI
            sub RSP,16
.L_414b28:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            mov RSI,RSP
            mov RDI,RBX
            mov R12D,EAX
            call .L_404fd0

            test EAX,EAX
            je .L_414bff

            lea RSI,QWORD PTR [RSP+2]
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_414bff

            movzx ESI,WORD PTR [RSP]
            lea EAX,DWORD PTR [RSI-1]
            cmp AX,14
            ja .L_414bff

            movzx EDX,WORD PTR [RSP+2]
            lea EAX,DWORD PTR [RDX-1]
            cmp AX,14
            ja .L_414bff

            mov RDI,QWORD PTR [R13+40]
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_414bff

            lea RSI,QWORD PTR [RSP+4]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_414bf0

            mov EDX,DWORD PTR [RSP+4]
            lea ECX,DWORD PTR [R12-8]
            lea R9,QWORD PTR [RIP+.L_41b210]
            mov R8,RBP
            mov RSI,RBX
            mov RDI,R13
            call .L_413680

            test EAX,EAX
            je .L_414bf0

            movzx EAX,WORD PTR [RSP]
            cmp EAX,DWORD PTR [RBP+8]
            jne .L_414bf0

            movzx EAX,WORD PTR [RSP+2]
            cmp EAX,DWORD PTR [RBP+12]
            jne .L_414bf0

            mov DWORD PTR [R14],1
            jmp .L_414c01
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414bf0:

            mov RDI,RBP
            call .L_42b910

            mov DWORD PTR [R14],0
.L_414bff:

            xor EBP,EBP
.L_414c01:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_414c21

            add RSP,16
.L_414c18:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_414c21:

            call __stack_chk_fail@PLT
.L_414c26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414c30:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,24
            sub RSP,8
            mov RDI,QWORD PTR [RDI+40]
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_414c75

            mov RDI,QWORD PTR [RBP+8]
            call .L_4229c0

            mov RDI,QWORD PTR [RBP]
            mov QWORD PTR [RBX+8],RAX
            call .L_4229c0

            mov RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RBX],RAX
            call .L_4104d0

            mov QWORD PTR [RBX+16],RAX
.L_414c75:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_414c7f:

            nop
.L_414c80:

            mov RDI,RSI
            jmp .L_4104d0
.L_414c88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414c90:

            cmp ECX,3
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_414c9b:

            mov DWORD PTR [RDX],0
            jbe .L_414d1c

            mov R12D,ECX
            sub R12D,4
            js .L_414d1c

            mov R13,RDI
            mov RDI,QWORD PTR [RDI+40]
            mov RBX,RSI
            lea ESI,DWORD PTR [RCX+7]
            mov RBP,RDX
            call .L_4210b0

            test RAX,RAX
            mov R14,RAX
            je .L_414d1c

            lea RSI,QWORD PTR [RAX+4]
            mov DWORD PTR [RAX],R12D
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_414d10

            lea RSI,QWORD PTR [R14+8]
            mov ECX,R12D
            mov EDX,1
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,R12D
            jne .L_414d10

            mov DWORD PTR [RBP],1
            mov RAX,R14
            pop RBX
.L_414d01:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414d10:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_421170
.L_414d1c:

            xor R14D,R14D
            pop RBX
            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_414d2b:

            nop
            nop
            nop
            nop
            nop
.L_414d30:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RDI,QWORD PTR [RDI+40]
            mov ESI,4
            mov R12,RDX
            call .L_4210b0

            test RAX,RAX
            je .L_414d70

            mov RSI,RAX
            mov RDI,RBP
            mov RBX,RAX
            call .L_405110

            test EAX,EAX
            je .L_414d70

            mov RAX,RBX
            mov DWORD PTR [R12],1
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_414d70:

            xor EBX,EBX
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_414d7a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_414d80:

            push R14
            push R13
            xor R8D,R8D
            push R12
            push RBP
            mov RBP,RDX
            push RBX
            lea RDX,QWORD PTR [RIP+.L_42f790]
            xor ECX,ECX
            mov R12,RDI
            mov R13,RSI
            mov RDI,RBP
            sub RSP,16
            mov RSI,RDX
            call .L_410590

            test EAX,EAX
            jne .L_414dc0
.L_414db0:

            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_414dc0:

            mov RDI,QWORD PTR [R12+40]
            mov ESI,EAX
            mov EBX,EAX
            call .L_4210b0

            test RAX,RAX
            mov R14,RAX
            je .L_414db0

            lea RDX,QWORD PTR [RIP+.L_42f790]
            mov R8D,EBX
            mov RCX,RAX
            mov RDI,RBP
            mov RSI,RDX
            call .L_410590

            mov RDX,R14
            mov ESI,EBX
            mov RDI,R13
            call QWORD PTR [R13+312]

            mov RDI,QWORD PTR [R12+40]
            mov RSI,R14
            mov DWORD PTR [RSP+12],EAX
            call .L_421170

            mov EAX,DWORD PTR [RSP+12]
            add RSP,16
.L_414e16:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_414e1f:

            nop
.L_414e20:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov ESI,24
            mov EBX,ECX
            sub RSP,24
.L_414e3e:

            mov RDI,QWORD PTR [RDI+40]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4210e0

            test RAX,RAX
            mov DWORD PTR [R14],0
            je .L_414fb0

            mov RSI,RSP
            mov RDI,R12
            mov RBP,RAX
            call .L_405110

            test EAX,EAX
            je .L_414fb0

            cmp EBX,3
            jbe .L_414fb0

            mov RDI,QWORD PTR [R13+40]
            mov ESI,DWORD PTR [RSP]
            xor EDX,EDX
            sub EBX,4
            call .L_422570

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            je .L_414fb0

            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RSP]
            mov RDI,R12
            call .L_405070

            cmp EBX,3
            jbe .L_414fb0

            test EAX,EAX
            je .L_414fb0

            mov EAX,DWORD PTR [RSP]
            lea RSI,QWORD PTR [RSP+4]
            mov RDI,R12
            add EAX,EAX
            sub EBX,EAX
            call .L_405110

            cmp EBX,3
            jbe .L_414fb0

            test EAX,EAX
            je .L_414fb0

            mov RDI,QWORD PTR [R13+40]
            mov ESI,DWORD PTR [RSP+4]
            xor EDX,EDX
            sub EBX,4
            call .L_422570

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_414fb0

            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RSP+4]
            mov RDI,R12
            call .L_405070

            test EAX,EAX
            je .L_414fb0

            mov EDX,DWORD PTR [RSP+4]
            mov ECX,EBX
            mov RAX,RDX
            add RDX,RDX
            cmp RCX,RDX
            jb .L_414fb0

            add EAX,EAX
            sub EBX,EAX
            cmp EBX,-1
            je .L_414fb0

            mov RDI,QWORD PTR [R13+40]
            mov ESI,1
            call .L_410260

            test RAX,RAX
            mov QWORD PTR [RBP+16],RAX
            je .L_414fb0

            mov RDI,QWORD PTR [R13+40]
            lea ESI,DWORD PTR [RBX+1]
            call .L_4210b0

            mov ECX,EBX
            mov R15,RAX
            mov EDX,1
            mov RSI,RAX
            mov RDI,R12
            call QWORD PTR [R12+280]

            cmp EAX,EBX
            jne .L_414fb0

            mov EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_42f790]
            mov RCX,R15
            mov BYTE PTR [R15+RAX*1],0
            mov RDI,QWORD PTR [RBP+16]
            mov RSI,RDX
            call .L_4102d0

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R15
            call .L_421170

            mov DWORD PTR [R14],1
            jmp .L_414fb2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414fb0:

            xor EBP,EBP
.L_414fb2:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_414fd4

            add RSP,24
.L_414fc9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414fd4:

            call __stack_chk_fail@PLT
.L_414fd9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414fe0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_414fee:

            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp ECX,3
            jbe .L_4150e4

            mov R12,RSI
            lea RSI,QWORD PTR [RSP+12]
            mov R14,RDI
            mov RDI,R12
            mov R15,RDX
            mov EBX,ECX
            call .L_405110

            test EAX,EAX
            je .L_4150e4

            sub EBX,4
            cmp DWORD PTR [RSP+12],EBX
            ja .L_4150e4

            mov RDI,QWORD PTR [R14+40]
            mov ESI,1
            call .L_410260

            test RAX,RAX
            mov RBP,RAX
            je .L_4150e4

            mov EAX,DWORD PTR [RSP+12]
            mov RDI,QWORD PTR [R14+40]
            lea ESI,DWORD PTR [RAX+1]
            call .L_4210b0

            test RAX,RAX
            mov R13,RAX
            je .L_4150dc

            mov ECX,DWORD PTR [RSP+12]
            mov EDX,1
            mov RSI,RAX
            mov RDI,R12
            call QWORD PTR [R12+280]

            cmp EAX,DWORD PTR [RSP+12]
            jne .L_4150d0

            lea RDX,QWORD PTR [RIP+.L_42f790]
            sub EBX,EAX
            mov EAX,EAX
            mov BYTE PTR [R13+RAX*1],0
            mov RCX,R13
            mov RDI,RBP
            mov RSI,RDX
            call .L_4102d0

            test EAX,EAX
            je .L_4150d0

            mov RDI,QWORD PTR [R14+40]
            mov RSI,R13
            call .L_421170

            cmp EBX,7
            ja .L_415110
.L_4150bd:

            mov DWORD PTR [R15],1
            jmp .L_4150e6
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4150d0:

            mov RDI,QWORD PTR [R14+40]
            mov RSI,R13
            call .L_421170
.L_4150dc:

            mov RDI,RBP
            call .L_410480
.L_4150e4:

            xor EBP,EBP
.L_4150e6:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_4151fa

            add RSP,40
.L_415101:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415110:

            lea RSI,QWORD PTR [RSP+16]
            mov RDI,R12
            call .L_405110

            test EAX,EAX
            je .L_4150bd

            lea RSI,QWORD PTR [RSP+20]
            mov RDI,R12
            call .L_405110

            test EAX,EAX
            je .L_4150bd

            mov EDX,DWORD PTR [RSP+20]
            lea ECX,DWORD PTR [RBX-8]
            mov RBX,RCX
            mov RAX,RDX
            add RDX,RDX
            cmp RCX,RDX
            jb .L_4150bd

            test EAX,EAX
            je .L_41518d

            lea R14,QWORD PTR [RSP+10]
            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415160:

            mov ECX,1
            mov EDX,2
            mov RSI,R14
            mov RDI,R12
            call QWORD PTR [R12+280]

            test EAX,EAX
            je .L_4150bd

            mov EAX,DWORD PTR [RSP+20]
            add R13D,1
            cmp EAX,R13D
            ja .L_415160
.L_41518d:

            add EAX,EAX
            sub EBX,EAX
            cmp EBX,69
            jbe .L_4150bd

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,R12
            call .L_404fd0

            test EAX,EAX
            je .L_4150bd

            lea RSI,QWORD PTR [RSP+7]
            mov RDI,R12
            call .L_404f40

            test EAX,EAX
            je .L_4150bd

            mov EBX,67
            lea R14,QWORD PTR [RSP+10]
            jmp .L_4151d9
.L_4151d0:

            sub EBX,1
            je .L_4150bd
.L_4151d9:

            mov ECX,1
            mov EDX,1
            mov RSI,R14
            mov RDI,R12
            call QWORD PTR [R12+280]

            test EAX,EAX
            jne .L_4151d0

            jmp .L_4150dc
.L_4151fa:

            call __stack_chk_fail@PLT
.L_4151ff:

            nop
.L_415200:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov ESI,1
            mov R15,RDX
            mov EBP,ECX
            sub RSP,8
.L_41521e:

            mov RDI,QWORD PTR [RDI+40]
            call .L_410260

            test RAX,RAX
            mov RBX,RAX
            je .L_41527f

            cmp EBP,-1
            mov DWORD PTR [R15],0
            je .L_415298

            mov RDI,QWORD PTR [R12+40]
            lea ESI,DWORD PTR [RBP+1]
            call .L_4210b0

            test RAX,RAX
            mov R13,RAX
            je .L_415298

            mov ECX,EBP
            mov EDX,1
            mov RSI,RAX
            mov RDI,R14
            call QWORD PTR [R14+280]

            cmp EAX,EBP
            je .L_4152a8
.L_415268:

            mov RDI,RBX
            xor EBX,EBX
            call .L_410480

            mov RDI,QWORD PTR [R12+40]
            mov RSI,R13
            call .L_421170
.L_41527f:

            add RSP,8
.L_415283:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415298:

            mov RDI,RBX
            xor EBX,EBX
            call .L_410480

            jmp .L_41527f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4152a8:

            lea RDX,QWORD PTR [RIP+.L_42f790]
            mov EAX,EAX
            mov RCX,R13
            mov BYTE PTR [R13+RAX*1],0
            mov RDI,RBX
            mov DWORD PTR [R15],1
            mov RSI,RDX
            call .L_4102d0

            test EAX,EAX
            je .L_415268

            mov RDI,QWORD PTR [R12+40]
            mov RSI,R13
            call .L_421170

            jmp .L_41527f
.L_4152df:

            nop
.L_4152e0:

            mov RDI,RSI
            jmp .L_4109e0
.L_4152e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4152f0:

            mov RDI,RSI
            jmp .L_410a30
.L_4152f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415300:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            mov RDI,RBX
            sub RSP,72
.L_41531a:

            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call .L_405110

            test EAX,EAX
            je .L_415418

            mov ESI,DWORD PTR [RSP+4]
            mov RDI,QWORD PTR [RBP+40]
            cmp ESI,16
            ja .L_415420

            lea R8,QWORD PTR [RIP+.L_42d554]
            xor EDX,EDX
            mov RCX,R8
            call .L_410930

            mov R14,RAX
            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            je .L_415408

            xor EBP,EBP
            lea R12,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RSP+10]
            jmp .L_4153b6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415380:

            mov RDX,R13
            mov ESI,3
            mov RDI,RBX
            mov BYTE PTR [RSP+48],0
            call .L_405070

            test EAX,EAX
            je .L_4153d1

            xor ECX,ECX
            mov RDX,R13
            mov RSI,R12
            mov RDI,R14
            call .L_410b00

            test EAX,EAX
            je .L_4153d1

            add EBP,1
            cmp DWORD PTR [RSP+4],EBP
            jbe .L_415408
.L_4153b6:

            mov ECX,1
            mov EDX,32
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,1
            je .L_415380
.L_4153d1:

            mov RDI,R14
            mov DWORD PTR [R15],0
            xor R14D,R14D
            call .L_4109e0
.L_4153e3:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_41543a

            add RSP,72
.L_4153fa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415408:

            mov DWORD PTR [R15],1
            jmp .L_4153e3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415418:

            xor R14D,R14D
            jmp .L_4153e3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415420:

            lea RDX,QWORD PTR [RIP+.L_42f6a0]
            mov ECX,ESI
            xor EAX,EAX
            mov ESI,2
            xor R14D,R14D
            call .L_421420

            jmp .L_4153e3
.L_41543a:

            call __stack_chk_fail@PLT
.L_41543f:

            nop
.L_415440:

            push RBP
            push RBX
            mov RBX,RSI
            mov RSI,RDX
            sub RSP,40
.L_41544c:

            lea RBP,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RDI,RBP
            call .L_405fd0

            mov RDX,RBP
            mov ESI,12
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            setne AL
            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_415499

            add RSP,40
.L_415493:

            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
.L_415499:

            call __stack_chk_fail@PLT
.L_41549e:

            nop
            nop
.L_4154a0:

            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,56
            sub RSP,40
.L_4154b5:

            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_4210b0

            test RAX,RAX
            je .L_415530

            lea R13,QWORD PTR [RSP+12]
            mov RBX,RAX
            mov ECX,1
            mov EDX,12
            mov RDI,RBP
            mov RSI,R13
            call QWORD PTR [RBP+280]

            cmp EAX,1
            jne .L_415530

            mov RSI,RBX
            mov RDI,R13
            call .L_405eb0

            mov DWORD PTR [R12],1
.L_41550f:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_415534

            add RSP,40
.L_415526:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415530:

            xor EBX,EBX
            jmp .L_41550f
.L_415534:

            call __stack_chk_fail@PLT
.L_415539:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415540:

            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov R13,RDI
            mov RDI,R12
            mov RBP,RDX
            sub RSP,40
.L_415556:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_405110

            test EAX,EAX
            je .L_415680

            mov ESI,DWORD PTR [RSP+12]
            test ESI,ESI
            je .L_415640

            cmp ESI,1
            je .L_4155f8

            cmp ESI,32767
            ja .L_415680

            mov RDI,QWORD PTR [R13+40]
            xor EDX,EDX
            call .L_422570

            test RAX,RAX
            mov RBX,RAX
            je .L_415680

            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RSP+12]
            mov RDI,R12
            call .L_405070

            test EAX,EAX
            je .L_415670
.L_4155ca:

            mov DWORD PTR [RBP],1
.L_4155d1:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_415687

            add RSP,40
.L_4155ec:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4155f8:

            lea RSI,QWORD PTR [RSP+10]
            mov RDI,R12
            xor EBX,EBX
            call .L_404fd0

            test EAX,EAX
            je .L_4155d1

            movzx EDI,WORD PTR [RSP+10]
            call .L_405d30

            mov RDI,QWORD PTR [R13+40]
            lea RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RBP],1
            mov ESI,1
            movsd QWORD PTR [RSP+16],XMM0
            call .L_4227e0

            mov RBX,RAX
            jmp .L_4155d1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415640:

            mov RAX,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,QWORD PTR [R13+40]
            lea RDX,QWORD PTR [RSP+16]
            mov ESI,1
            mov QWORD PTR [RSP+16],RAX
            call .L_4227e0

            test RAX,RAX
            mov RBX,RAX
            jne .L_4155ca

            jmp .L_4155d1
.L_415670:

            mov RDI,RBX
            call .L_422930

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415680:

            xor EBX,EBX
            jmp .L_4155d1
.L_415687:

            call __stack_chk_fail@PLT
.L_41568c:

            nop
            nop
            nop
            nop
.L_415690:

            test ECX,ECX
            je .L_415760

            lea EAX,DWORD PTR [RCX-1]
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_4156a2:

            mov RBX,RDX
            lea R12,QWORD PTR [RDX+RAX*8+8]
            jmp .L_4156bd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4156b0:

            add RBX,8
            cmp R12,RBX
            je .L_415750
.L_4156bd:

            movsd XMM0,QWORD PTR [RIP+.L_42dea0]
            movsd XMM1,QWORD PTR [RIP+.L_42f838]
            mulsd XMM0,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RIP+.L_42d9d0]
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            andpd XMM1,XMM0
            movapd XMM2,XMM0
            ucomisd XMM3,XMM1
            jbe .L_41572e

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_42d9d8]
            cvtsi2sd XMM1,RAX
            movapd XMM4,XMM1
            cmpnlesd XMM4,XMM0
            movapd XMM0,XMM4
            andpd XMM0,XMM5
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42f838]
            andnpd XMM1,XMM2
            orpd XMM0,XMM1
.L_41572e:

            cvttsd2si RSI,XMM0
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            jne .L_4156b0

            pop RBX
.L_415744:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415750:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415760:

            mov EAX,1
            ret 
.L_415766:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415770:

            push R15
            push R14
            xor R15D,R15D
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            mov ESI,11
            sub RSP,104
.L_41578f:

            mov RDI,QWORD PTR [RDI+40]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [RSP+40],RAX
            call .L_4068a0

            mov RDI,RBP
            mov QWORD PTR [RSP+24],RAX
            call QWORD PTR [RBP+304]

            mov RDI,R12
            mov DWORD PTR [RSP+36],EAX
            call .L_42b8b0

            mov RDI,R12
            mov R13D,EAX
            call .L_42b8e0

            mov RDI,R12
            mov DWORD PTR [RSP+16],EAX
            call .L_42bd40

            mov RDI,QWORD PTR [RBX+40]
            mov EDX,4
            mov ESI,EAX
            mov R14D,EAX
            call .L_421110

            test RAX,RAX
            je .L_415844

            mov RDI,QWORD PTR [RBX+40]
            mov EDX,4
            mov ESI,R14D
            mov R12,RAX
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_415870

            movzx ESI,R13W
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            jne .L_415880
.L_415827:

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,R12
            xor R15D,R15D
            call .L_421170

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,QWORD PTR [RSP+8]
            call .L_421170
.L_415844:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_415b42

            add RSP,104
.L_41585f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415870:

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,R12
            call .L_421170

            jmp .L_415844
          .byte 0x66
          .byte 0x90
.L_415880:

            movzx ESI,WORD PTR [RSP+16]
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            je .L_415827

            movzx ESI,R14W
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_415827

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            test R14D,R14D
            mov DWORD PTR [RSP+72],EAX
            je .L_415ae6

            xor R13D,R13D
            jmp .L_4158de
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4158c0:

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_415827

            lea EAX,DWORD PTR [R13+1]
            cmp R14D,EAX
            je .L_4158f1

            mov R13D,EAX
.L_4158de:

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            jne .L_4158c0

            jmp .L_415827
.L_4158f1:

            mov EAX,DWORD PTR [RSP+36]
            mov RCX,QWORD PTR [RSP+8]
            mov R15,R12
            mov QWORD PTR [RSP+56],R12
            mov DWORD PTR [RSP+76],R14D
            mov QWORD PTR [RSP+16],RBX
            sub EAX,8
            mov DWORD PTR [RSP+36],EAX
            lea RAX,QWORD PTR [R12+4]
            mov R12,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RAX+R13*4]
            mov R13,RCX
            mov QWORD PTR [RSP+48],RAX
            nop
            nop
.L_415930:

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            sub EAX,DWORD PTR [RSP+36]
            mov ESI,DWORD PTR [R12+8]
            mov DWORD PTR [R15],EAX
            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_41596d

            jmp .L_415a80
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415960:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_415a80
.L_41596d:

            cmp ESI,DWORD PTR [RAX]
            jne .L_415960
.L_415971:

            mov RDI,RBP
            mov RBX,RAX
            call .L_4057d0

            test EAX,EAX
            je .L_415ad7

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_415ad7

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            mov ECX,1
            mov R14D,EAX
            mov RDX,R12
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+16]
            call QWORD PTR [RBX+16]

            test EAX,EAX
            je .L_415ad7

            mov RDI,RBP
            call .L_4062c0

            test EAX,EAX
            je .L_415ad7

            mov RDI,RBP
            add R15,4
            add R13,4
            call QWORD PTR [RBP+304]

            sub EAX,R14D
            mov R12,QWORD PTR [R12+56]
            mov DWORD PTR [R13-4],EAX
            cmp R15,QWORD PTR [RSP+48]
            jne .L_415930

            mov RDI,RBP
            mov R14D,DWORD PTR [RSP+76]
            mov R12,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+16]
            call QWORD PTR [RBP+304]

            mov ESI,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+16],EAX
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_415827

            mov RCX,QWORD PTR [RSP+64]
            lea EAX,DWORD PTR [R14-1]
            mov R13,R12
            mov R15,QWORD PTR [RSP+8]
            lea R14,QWORD PTR [RCX+RAX*4]
            jmp .L_415a61
.L_415a3d:

            mov ESI,DWORD PTR [R15]
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_415827

            add R13,4
            add R15,4
            cmp R14,R13
            je .L_415b08
.L_415a61:

            mov ESI,DWORD PTR [R13]
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            jne .L_415a3d

            jmp .L_415827
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415a80:

            lea RAX,QWORD PTR [RIP+.L_640e20]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415a90:

            cmp ESI,DWORD PTR [RAX]
            je .L_415971

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_415a90

            mov RBX,QWORD PTR [RSP+16]
            lea RBP,QWORD PTR [RSP+83]
            mov R12,QWORD PTR [RSP+56]
            mov RDI,RBP
            call .L_421540

            mov RDI,QWORD PTR [RBX+40]
            lea RDX,QWORD PTR [RIP+.L_42f6b8]
            mov RCX,RBP
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_415827
.L_415ad7:

            mov R12,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+16]
            jmp .L_415827
.L_415ae6:

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            mov ESI,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+16],EAX
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_415827
.L_415b08:

            mov ESI,DWORD PTR [RSP+16]
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_415827

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,R12
            mov R15D,1
            call .L_421170

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,QWORD PTR [RSP+8]
            call .L_421170

            jmp .L_415844
.L_415b42:

            call __stack_chk_fail@PLT
.L_415b47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415b50:

            movsd XMM1,QWORD PTR [RIP+.L_42e148]
            mov EAX,1668641398
            ucomisd XMM1,XMM0
            ja .L_415b69

            cmp DWORD PTR [RDI+8],1
            je .L_415b70
.L_415b69:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415b70:

            mov RAX,QWORD PTR [RDI+16]
            cmp DWORD PTR [RAX+8],6
            sbb EAX,EAX
            and EAX,216793067
            add EAX,1668641398
            ret 
.L_415b85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415b90:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            xor EBP,EBP
            mov RBX,RSI
            sub RSP,24
.L_415ba9:

            mov RAX,QWORD PTR [RDX]
            mov EDX,DWORD PTR [RAX+8]
            cmp EDX,1835103334
            je .L_415c90
.L_415bbb:

            cmp EDX,1668707188
            je .L_415c00

            cmp EDX,1668052340
            je .L_415c70
.L_415bcf:

            mov RDI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_42f480]
            xor EAX,EAX
            mov ESI,8
            call .L_421420

            xor EAX,EAX
.L_415be7:

            add RSP,24
.L_415beb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c00:

            mov RCX,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            mov QWORD PTR [RSP],RCX
            je .L_415f80

            mov EDX,DWORD PTR [RAX+8]
            xor R13D,R13D
            cmp EDX,1668052340
            je .L_415c78
.L_415c23:

            cmp EDX,1668707188
            jne .L_415bcf

            mov RCX,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            mov QWORD PTR [RSP+8],RCX
            jne .L_415bcf
.L_415c3d:

            test R13,R13
            je .L_415e38

            mov RAX,QWORD PTR [R13+8]
            mov R15D,DWORD PTR [RAX+20]
.L_415c4e:

            movzx ESI,BYTE PTR [R14+8]
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            jne .L_415cc0
.L_415c5f:

            xor EAX,EAX
.L_415c61:

            add RSP,24
.L_415c65:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_415c70:

            mov QWORD PTR [RSP],0
.L_415c78:

            mov R13,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_415f72

            mov EDX,DWORD PTR [RAX+8]
            jmp .L_415c23
          .byte 0x66
          .byte 0x90
.L_415c90:

            mov RBP,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_415e40

            xor R13D,R13D
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP],0
            xor R15D,R15D
            jmp .L_415c4e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415cc0:

            movzx ESI,BYTE PTR [R14+12]
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_415c5f

            movzx ESI,R15B
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_415c5f

            xor ESI,ESI
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_415c5f

            test RBP,RBP
            je .L_415e48

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+8]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+16]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+24]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+32]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+40]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+48]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+56]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+64]
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f
.L_415de0:

            mov EDX,DWORD PTR [R14+8]
            mov RDI,QWORD PTR [R12+40]
            mov RSI,RBX
            mov RCX,QWORD PTR [RSP]
            call .L_4010d0

            test EAX,EAX
            je .L_415c5f

            mov R10D,DWORD PTR [R14+12]
            mov EDX,DWORD PTR [R14+8]
            test R10D,R10D
            je .L_415e13

            test R15D,R15D
            jne .L_415f0f
.L_415e13:

            mov RDI,QWORD PTR [R12+40]
            mov RCX,QWORD PTR [RSP+8]
            mov EDX,R10D
            mov RSI,RBX
            call .L_4010d0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_415be7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415e38:

            xor R15D,R15D
            jmp .L_415c4e
.L_415e40:

            mov EDX,DWORD PTR [RAX+8]
            jmp .L_415bbb
.L_415e48:

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_415c5f

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            jne .L_415de0

            xor EAX,EAX
            jmp .L_415c61
.L_415f0f:

            mov ESI,R15D
            mov EDI,R10D
            call .L_4011c7

            cmp EAX,-1
            mov R15D,EAX
            je .L_415c5f

            test R13,R13
            je .L_415e13

            test EAX,EAX
            je .L_415e13

            xor EBP,EBP
.L_415f39:

            mov RAX,QWORD PTR [R13]
            mov RDI,RBX
            movzx ESI,WORD PTR [RAX+RBP*2]
            imul ESI,ESI,65281
            add ESI,8388608
            shr ESI,24
            call .L_405660

            test EAX,EAX
            je .L_415c5f

            add RBP,1
            cmp R15D,EBP
            ja .L_415f39

            mov R10D,DWORD PTR [R14+12]
            jmp .L_415e13
.L_415f72:

            mov QWORD PTR [RSP+8],0
            jmp .L_415c3d
.L_415f80:

            xor R13D,R13D
            mov QWORD PTR [RSP+8],0
            xor R15D,R15D
            jmp .L_415c4e
.L_415f94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415fa0:

            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov EDX,4
            mov RBX,RSI
            mov ESI,R12D
            mov RBP,RDI
            sub RSP,8
            xor R13D,R13D
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_415fee

            mov EDX,4
            mov ESI,R12D
            mov RDI,RBP
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_416000

            mov QWORD PTR [RBX],RBP
            mov R13D,1
.L_415fee:

            add RSP,8
            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416000:

            mov RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_421170

            jmp .L_415fee
.L_41600e:

            nop
            nop
.L_416010:

            push R13
            push R12
            xor EAX,EAX
            push RBP
            push RBX
            mov RBP,RDI
            mov R13D,ECX
            mov RDI,RSI
            mov ECX,12
            sub RSP,8
            mov RBX,RSI
            mov R12D,EDX

            rep stosq QWORD PTR [RDI]

            mov RDI,RBP
            call .L_415fa0

            test EAX,EAX
            je .L_416052

            lea RSI,QWORD PTR [RBX+24]
            mov EDX,R12D
            mov RDI,RBP
            call .L_415fa0

            test EAX,EAX
            jne .L_416070
.L_416052:

            mov RDI,RBX
            call .L_4131f0

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416070:

            cmp R13D,16
            ja .L_416090
.L_416076:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416090:

            lea RSI,QWORD PTR [RBX+48]
            mov EDX,R12D
            mov RDI,RBP
            call .L_415fa0

            test EAX,EAX
            je .L_416052

            cmp R13D,24
            jbe .L_416076

            lea RSI,QWORD PTR [RBX+72]
            mov EDX,R12D
            mov RDI,RBP
            call .L_415fa0

            test EAX,EAX
            je .L_416052

            jmp .L_416076
.L_4160be:

            nop
            nop
.L_4160c0:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov EBX,ECX
            mov RBP,RDI
            mov ESI,DWORD PTR [RSI+RBX*4]
            call .L_4057d0

            test EAX,EAX
            je .L_4160ef

            mov RAX,QWORD PTR [R12]
            mov RDI,RBP
            mov ESI,DWORD PTR [RAX+RBX*4]
            call .L_4057d0

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_4160ef:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_4160f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416100:

            test EDX,EDX
            je .L_4161c4

            push R15
            push R14
            lea R15,QWORD PTR [RSI+40]
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12D,ECX
            mov RBP,RDI
            lea R14,QWORD PTR [RSI+16]
            xor EBX,EBX
            sub RSP,24
.L_416129:

            mov DWORD PTR [RSP+12],EDX
            jmp .L_416139
          .byte 0x90
.L_416130:

            add EBX,1
            cmp DWORD PTR [RSP+12],EBX
            je .L_4161b0
.L_416139:

            mov RSI,QWORD PTR [R13+8]
            mov ECX,EBX
            mov RDX,R14
            mov RDI,RBP
            call .L_4160c0

            test EAX,EAX
            je .L_41619b

            mov RSI,QWORD PTR [R13+32]
            mov ECX,EBX
            mov RDX,R15
            mov RDI,RBP
            call .L_4160c0

            test EAX,EAX
            je .L_41619b

            cmp R12D,16
            je .L_416130

            mov RSI,QWORD PTR [R13+56]
            lea RDX,QWORD PTR [R13+64]
            mov ECX,EBX
            mov RDI,RBP
            call .L_4160c0

            test EAX,EAX
            je .L_41619b

            cmp R12D,24
            jbe .L_416130

            mov RSI,QWORD PTR [R13+80]
            lea RDX,QWORD PTR [R13+88]
            mov ECX,EBX
            mov RDI,RBP
            call .L_4160c0

            test EAX,EAX
            jne .L_416130
.L_41619b:

            add RSP,24
.L_41619f:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4161b0:

            add RSP,24
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4161c4:

            mov EAX,1
            ret 
.L_4161ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4161d0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            sub RSP,8
            mov ESI,DWORD PTR [RDX]
            call .L_4057d0

            test EAX,EAX
            jne .L_416200
.L_4161ee:

            xor EAX,EAX
.L_4161f0:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416200:

            mov ESI,DWORD PTR [R13+4]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_4161ee

            mov EAX,DWORD PTR [R13+4]
            xor R12D,R12D
            test EAX,EAX
            jne .L_41624a

            jmp .L_416270
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416220:

            movsd XMM0,QWORD PTR [RBP+16]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4161ee

            mov ESI,DWORD PTR [RBP+24]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_4161ee

            add R12D,1
            cmp R12D,DWORD PTR [R13+4]
            jae .L_416270
.L_41624a:

            mov EAX,R12D
            mov RDI,RBX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBP,QWORD PTR [R13+RAX*8]
            movsd XMM0,QWORD PTR [RBP+8]
            call .L_4059c0

            test EAX,EAX
            jne .L_416220

            jmp .L_4161ee
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416270:

            mov EAX,1
            jmp .L_4161f0
.L_41627a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_416280:

            push R14
            mov ECX,ECX
            push R13
            mov R13,RSI
            push R12
            push RBP
            push RBX
            mov RSI,QWORD PTR [RSI]
            lea RBX,QWORD PTR [RCX*4]
            mov RBP,RDI
            mov R14,RDX
            mov R12D,R8D
            add RSI,RBX
            call .L_405110

            test EAX,EAX
            jne .L_4162c0
.L_4162ad:

            xor EAX,EAX
.L_4162af:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4162c0:

            mov RSI,QWORD PTR [R14]
            mov RDI,RBP
            add RSI,RBX
            call .L_405110

            test EAX,EAX
            je .L_4162ad

            add RBX,QWORD PTR [R13]
            mov EAX,1
            mov EDX,DWORD PTR [RBX]
            test EDX,EDX
            je .L_4162af

            add R12D,EDX
            mov DWORD PTR [RBX],R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4162f0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R15,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            sub RSP,120
.L_41630a:

            lea RSI,QWORD PTR [RSP+14]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_404fd0

            test EAX,EAX
            je .L_4163a0

            xor ESI,ESI
            mov RDI,RBP
            call .L_404fd0

            test EAX,EAX
            je .L_4163a0

            movzx ECX,WORD PTR [RSP+14]
            cmp CX,4
            ja .L_4163e8

            lea RDX,QWORD PTR [RIP+.L_42f7a0]
            movsxd RAX,ECX
            lea R13,QWORD PTR [RSP+16]
            pxor XMM0,XMM0
            mov EAX,DWORD PTR [RDX+RAX*4]
            movaps XMMWORD PTR [RSP+16],XMM0
            test EAX,EAX
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            jle .L_4163cd

            sub EAX,1
            mov RBX,R13
            lea R12,QWORD PTR [R13+RAX*8+8]
            jmp .L_416391
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416388:

            add RBX,8
            cmp R12,RBX
            je .L_4163c8
.L_416391:

            mov RSI,RBX
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            jne .L_416388
.L_4163a0:

            xor EAX,EAX
.L_4163a2:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_416401

            add RSP,120
.L_4163b6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4163c8:

            movzx ECX,WORD PTR [RSP+14]
.L_4163cd:

            mov RDI,QWORD PTR [R14+40]
            lea ESI,DWORD PTR [RCX+1]
            mov RDX,R13
            call .L_4227e0

            mov DWORD PTR [R15],1
            jmp .L_4163a2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4163e8:

            mov RDI,QWORD PTR [R14+40]
            lea RDX,QWORD PTR [RIP+.L_42f4a8]
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_4163a0
.L_416401:

            call __stack_chk_fail@PLT
.L_416406:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416410:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            pxor XMM0,XMM0
            mov RDI,RBP
            sub RSP,72
.L_416427:

            mov R13,RDX
            mov RBX,RSP
            mov QWORD PTR [RSP+48],0
            mov RSI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            call .L_405110

            test EAX,EAX
            je .L_4164c0

            lea RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_405460

            test EAX,EAX
            je .L_4164c0

            lea RSI,QWORD PTR [RBX+32]
            mov RDI,RBP
            call .L_405110

            test EAX,EAX
            je .L_4164c0

            lea RSI,QWORD PTR [RBX+40]
            mov RDI,RBP
            call .L_405350

            test EAX,EAX
            je .L_4164c0

            lea RSI,QWORD PTR [RBX+48]
            mov RDI,RBP
            call .L_405110

            test EAX,EAX
            je .L_4164c0

            mov RDI,QWORD PTR [R12+40]
            mov DWORD PTR [R13],1
            mov EDX,56
            mov RSI,RBX
            call .L_421190

            jmp .L_4164c2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4164c0:

            xor EAX,EAX
.L_4164c2:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4164dd

            add RSP,72
.L_4164d6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4164dd:

            call __stack_chk_fail@PLT
.L_4164e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4164f0:

            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,48
            mov ESI,DWORD PTR [RDX+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp ESI,8
            ja .L_41651e

            mov RBP,QWORD PTR [RDX+48]
            mov ECX,DWORD PTR [RBP+20]
            test ECX,ECX
            jne .L_416540
.L_41651e:

            xor EAX,EAX
.L_416520:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4165f9

            add RSP,48
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416540:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RDX
            call .L_4056b0

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_41651e

            movzx ESI,WORD PTR [RDX+20]
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_41651e

            mov ESI,DWORD PTR [RDX+16]
            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RSP+16]
            test ESI,ESI
            movaps XMMWORD PTR [RSP+16],XMM0
            je .L_41659f

            lea RDX,QWORD PTR [RSP+16]
            xor EAX,EAX
            mov RDI,QWORD PTR [RBP+8]
            nop
            nop
            nop
            nop
            nop
.L_416590:

            mov ECX,DWORD PTR [RDI+RAX*4+20]
            mov BYTE PTR [RDX+RAX*1],CL
            add RAX,1
            cmp ESI,EAX
            ja .L_416590
.L_41659f:

            mov ESI,16
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_41651e

            mov EAX,DWORD PTR [RBP+16]
            xor R12D,R12D
            test EAX,EAX
            jne .L_4165d2

            jmp .L_4165ef
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4165c8:

            add R12D,1
            cmp DWORD PTR [RBP+16],R12D
            jbe .L_4165ef
.L_4165d2:

            mov RDX,QWORD PTR [RBP]
            mov EAX,R12D
            mov RDI,RBX
            movss XMM0,DWORD PTR [RDX+RAX*4]
            call .L_405870

            test EAX,EAX
            jne .L_4165c8

            jmp .L_41651e
.L_4165ef:

            mov EAX,1
            jmp .L_416520
.L_4165f9:

            call __stack_chk_fail@PLT
.L_4165fe:

            nop
            nop
.L_416600:

            push R15
            push R14
            mov RDI,RDX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov R15,RDX
            sub RSP,72
.L_416617:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call .L_410c40

            mov RDI,R12
            mov ESI,EAX
            mov R14D,EAX
            call .L_4057d0

            test EAX,EAX
            je .L_4166ca

            xor EBP,EBP
            test R14D,R14D
            lea RBX,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RSP+10]
            jg .L_416698

            jmp .L_4166f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416660:

            mov BYTE PTR [RSP+48],0
            mov RDX,RBX
            mov ESI,32
            mov RDI,R12
            call QWORD PTR [R12+312]

            test EAX,EAX
            je .L_4166c8

            mov RDX,R13
            mov ESI,3
            mov RDI,R12
            call .L_405740

            test EAX,EAX
            je .L_4166c8

            add EBP,1
            cmp R14D,EBP
            je .L_4166f0
.L_416698:

            pxor XMM0,XMM0
            sub RSP,8
.L_4166a0:

            mov BYTE PTR [RBX+32],0
            xor ECX,ECX
            xor R8D,R8D
            mov RDX,RBX
            mov R9,R13
            mov ESI,EBP
            mov RDI,R15
            movaps XMMWORD PTR [RBX],XMM0
            movaps XMMWORD PTR [RBX+16],XMM0
            push 0
            call .L_410c50

            test EAX,EAX
            pop RDX
            pop RCX
            jne .L_416660
.L_4166c8:

            xor EAX,EAX
.L_4166ca:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4166f7

            add RSP,72
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4166f0:

            mov EAX,1
            jmp .L_4166ca
.L_4166f7:

            call __stack_chk_fail@PLT
.L_4166fc:

            nop
            nop
            nop
            nop
.L_416700:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            mov RDI,RBX
            sub RSP,200
.L_41671a:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+28]
            mov QWORD PTR [RSP+8],RDX
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RCX
            xor ECX,ECX
            call .L_405110

            test EAX,EAX
            je .L_41689e

            lea RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41689e

            lea RSI,QWORD PTR [RSP+36]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41689e

            lea R12,QWORD PTR [RSP+80]
            mov ECX,1
            mov EDX,32
            mov RDI,RBX
            mov RSI,R12
            call QWORD PTR [RBX+280]

            cmp EAX,1
            jne .L_41689e

            lea R13,QWORD PTR [RSP+112]
            mov ECX,1
            mov EDX,32
            mov RDI,RBX
            mov RSI,R13
            call QWORD PTR [RBX+280]

            cmp EAX,1
            jne .L_41689e

            mov RDI,QWORD PTR [RBP+40]
            mov EDX,DWORD PTR [RSP+36]
            mov R8,R13
            mov ESI,DWORD PTR [RSP+32]
            mov RCX,R12
            mov BYTE PTR [RSP+143],0
            mov BYTE PTR [RSP+111],0
            call .L_410930

            test RAX,RAX
            mov R15,RAX
            je .L_4168f6

            mov ECX,DWORD PTR [RSP+36]
            cmp ECX,16
            ja .L_4168dd

            mov EAX,DWORD PTR [RSP+32]
            test EAX,EAX
            je .L_4168d0

            xor R12D,R12D
            lea RBP,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+144]
            lea R14,QWORD PTR [RSP+42]
            jmp .L_41686f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416820:

            mov RDX,R14
            mov ESI,3
            mov RDI,RBX
            mov BYTE PTR [RSP+176],0
            call .L_405070

            test EAX,EAX
            je .L_416896

            mov ESI,DWORD PTR [RSP+36]
            mov RDX,RBP
            mov RDI,RBX
            call .L_405070

            test EAX,EAX
            je .L_416896

            mov RCX,RBP
            mov RDX,R14
            mov RSI,R13
            mov RDI,R15
            call .L_410b00

            test EAX,EAX
            je .L_416896

            add R12D,1
            cmp DWORD PTR [RSP+32],R12D
            jbe .L_4168d0
.L_41686f:

            pxor XMM0,XMM0
            mov ECX,1
            mov EDX,32
            mov RSI,R13
            mov RDI,RBX
            movaps XMMWORD PTR [RBP],XMM0
            movaps XMMWORD PTR [RBP+16],XMM0
            call QWORD PTR [RBX+280]

            cmp EAX,1
            je .L_416820
.L_416896:

            mov RDI,R15
            call .L_4109e0
.L_41689e:

            xor R15D,R15D
.L_4168a1:

            mov RCX,QWORD PTR [RSP+184]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_416913

            add RSP,200
.L_4168be:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4168d0:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],1
            jmp .L_4168a1
.L_4168dd:

            mov RDI,QWORD PTR [RBP+40]
            lea RDX,QWORD PTR [RIP+.L_42f510]
            mov ESI,2
            xor EAX,EAX
            call .L_421420

            jmp .L_416896
.L_4168f6:

            mov RDI,QWORD PTR [RBP+40]
            mov ECX,DWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_42f6d4]
            mov ESI,2
            xor EAX,EAX
            call .L_421420

            jmp .L_4168a1
.L_416913:

            call __stack_chk_fail@PLT
.L_416918:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416920:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_416927:

            je .L_416999

            test RDX,RDX
            mov RBP,RDI
            jne .L_416935

            test ESI,ESI
            jne .L_41697a
.L_416935:

            test ESI,ESI
            je .L_416970

            lea EAX,DWORD PTR [RSI-1]
            mov RBX,RDX
            lea R12,QWORD PTR [RDX+RAX*4+4]
            jmp .L_416959
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416950:

            add RBX,4
            cmp RBX,R12
            je .L_416970
.L_416959:

            movzx ESI,WORD PTR [RBX]
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            jne .L_416950

            pop RBX
.L_416969:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416970:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
.L_41697a:

            lea RCX,QWORD PTR [RIP+.L_42f820]
            lea RSI,QWORD PTR [RIP+.L_42f6ef]
            lea RDI,QWORD PTR [RIP+.L_42f538]
            mov EDX,128
            call __assert_fail@PLT
.L_416999:

            lea RCX,QWORD PTR [RIP+.L_42f820]
            lea RSI,QWORD PTR [RIP+.L_42f6ef]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,127
            call __assert_fail@PLT
.L_4169b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4169c0:

            push R15
            pxor XMM0,XMM0
            push R14
            push R13
            xor R8D,R8D
            push R12
            mov R12,RDX
            push RBP
            lea RDX,QWORD PTR [RIP+.L_42f790]
            push RBX
            xor ECX,ECX
            mov RBX,RDI
            mov R13,RSI
            mov RDI,R12
            sub RSP,104
.L_4169ea:

            mov RSI,RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov DWORD PTR [RSP+80],0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            call .L_410590

            test EAX,EAX
            jne .L_416ad0

            mov RDI,QWORD PTR [RBX+40]
            lea RSI,QWORD PTR [RIP+.L_42d554]
            mov EDX,1
            call .L_421190

            mov RDI,QWORD PTR [RBX+40]
            lea RSI,QWORD PTR [RIP+.L_42f834]
            mov EDX,4
            mov RBP,RAX
            call .L_421190

            mov R14,RAX
.L_416a56:

            mov RDI,RBP
            call strlen@PLT

            lea R12D,DWORD PTR [RAX+1]
            mov RDI,R13
            mov ESI,R12D
            call .L_4057d0

            test EAX,EAX
            je .L_416a89

            mov RDX,RBP
            mov ESI,R12D
            mov RDI,R13
            call QWORD PTR [R13+312]

            test EAX,EAX
            jne .L_416b58
.L_416a89:

            xor R15D,R15D
.L_416a8c:

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,RBP
            call .L_421170

            test R14,R14
            je .L_416aa9

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,R14
            call .L_421170
.L_416aa9:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_416c21

            add RSP,104
.L_416ac4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_416ad0:

            mov RDI,QWORD PTR [RBX+40]
            mov EDX,1
            mov ESI,EAX
            mov DWORD PTR [RSP+12],EAX
            xor R15D,R15D
            call .L_421110

            test RAX,RAX
            mov RBP,RAX
            je .L_416aa9

            mov R9D,DWORD PTR [RSP+12]
            mov RDI,QWORD PTR [RBX+40]
            mov EDX,4
            mov ESI,R9D
            call .L_421110

            test RAX,RAX
            mov R14,RAX
            je .L_416c10

            mov R9D,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RIP+.L_42f790]
            mov RCX,RBP
            mov RDI,R12
            mov RSI,RDX
            mov R8D,R9D
            call .L_410590

            mov R9D,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RIP+.L_42f790]
            mov RCX,R14
            mov RDI,R12
            mov RSI,RDX
            lea R8D,DWORD PTR [R9*4]
            call .L_4106b0

            jmp .L_416a56
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416b58:

            xor ESI,ESI
            mov RDI,R13
            call .L_4057d0

            test EAX,EAX
            je .L_416a89

            mov ESI,R12D
            mov RDI,R13
            call .L_4057d0

            test EAX,EAX
            je .L_416a89

            mov RDX,R14
            mov ESI,R12D
            mov RDI,R13
            call .L_416920

            test EAX,EAX
            je .L_416a89

            xor ESI,ESI
            mov RDI,R13
            call .L_4056b0

            test EAX,EAX
            je .L_416a89

            xor ESI,ESI
            mov RDI,R13
            call .L_405660

            test EAX,EAX
            je .L_416a89

            lea R15,QWORD PTR [RSP+16]
            mov ESI,67
            mov RDI,R13
            mov RDX,R15
            call QWORD PTR [R13+312]

            test EAX,EAX
            je .L_416a89

            lea R12D,DWORD PTR [R12+R12*2]
            lea EDX,DWORD PTR [R12+90]
            add R12D,93
            mov EAX,R12D
            and EAX,4294967292
            cmp EDX,EAX
            je .L_416c26

            sub EAX,EDX
            mov RDI,R13
            mov RDX,R15
            mov ESI,EAX
            xor R15D,R15D
            call QWORD PTR [R13+312]

            test EAX,EAX
            setne R15B
            jmp .L_416a8c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416c10:

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,RBP
            call .L_421170

            jmp .L_416aa9
.L_416c21:

            call __stack_chk_fail@PLT
.L_416c26:

            mov R15D,1
            jmp .L_416a8c
.L_416c31:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416c40:

            push R15
            push R14
            mov R15D,R9D
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov RBP,RDX
            mov R14,R8
            mov R12,RDI
            sub RSP,24
.L_416c5d:

            mov QWORD PTR [RSP+8],RSI
            call QWORD PTR [RDI+304]

            mov RSI,QWORD PTR [RSP+8]
            mov EBX,EAX
            mov EDX,EBX
            sub EDX,R15D
            test R14,R14
            mov RAX,QWORD PTR [RSI]
            lea RAX,QWORD PTR [RAX+R13*4]
            mov DWORD PTR [RAX],EDX
            je .L_416ce0

            mov EDX,DWORD PTR [R14]
            mov RSI,R14
            test EDX,EDX
            je .L_416d10
.L_416c90:

            add RSI,4
            mov EAX,DWORD PTR [RSI]
            test EAX,EAX
            jne .L_416c90

            sub RSI,R14
            sar RSI,2
.L_416ca1:

            mov RDX,R14
            mov RDI,R12
            call .L_416920

            test EAX,EAX
            je .L_416cca

            mov RDI,R12
            call QWORD PTR [R12+304]

            mov RDX,QWORD PTR [RBP]
            sub EAX,EBX
            mov DWORD PTR [RDX+R13*4],EAX
            mov EAX,1
.L_416cca:

            add RSP,24
.L_416cce:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416ce0:

            mov RDX,QWORD PTR [RBP]
            mov DWORD PTR [RDX+R13*4],0
            mov DWORD PTR [RAX],0
            add RSP,24
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416d10:

            xor ESI,ESI
            jmp .L_416ca1
.L_416d14:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416d20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,24
            test RDX,RDX
            je .L_416e18

            mov ESI,DWORD PTR [RDX+12]
            mov RDI,RBX
            mov R12,RDX
            call .L_4057d0

            test EAX,EAX
            jne .L_416d60
.L_416d4c:

            xor EAX,EAX
.L_416d4e:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416d60:

            mov ESI,12
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_416d4c

            mov EAX,DWORD PTR [R12+12]
            lea R15D,DWORD PTR [RAX+RAX*2]
            shl R15D,2
            test EAX,EAX
            je .L_416e50

            lea EAX,DWORD PTR [R15+16]
            xor R14D,R14D
            mov DWORD PTR [RSP+12],EAX
            jmp .L_416dd7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416d98:

            mov RAX,QWORD PTR [R12+16]
            mov RDI,RBX
            movzx ESI,WORD PTR [RAX+R15*1+2]
            call .L_4056b0

            test EAX,EAX
            je .L_416d4c

            mov ESI,R13D
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_416d4c

            mov ESI,EBP
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_416d4c

            add R14D,1
            cmp R14D,DWORD PTR [R12+12]
            jae .L_416e50
.L_416dd7:

            mov EAX,R14D
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [R12+16]
            lea R15,QWORD PTR [RDX*4]
            add RAX,R15
            mov R13D,DWORD PTR [RAX+8]
            mov EBP,DWORD PTR [RAX+4]
            movzx ESI,WORD PTR [RAX]
            shr RBP,1
            shr R13,1
            add EBP,DWORD PTR [RSP+12]
            call .L_4056b0

            test EAX,EAX
            jne .L_416d98

            jmp .L_416d4c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416e18:

            xor ESI,ESI
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_416d4c

            mov RDI,RBX
            mov ESI,12
            call .L_4057d0

            test EAX,EAX
            setne AL
            add RSP,24
.L_416e40:

            pop RBX
            movzx EAX,AL
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_416e50:

            mov ESI,DWORD PTR [R12+28]
            mov RDX,QWORD PTR [R12+32]
            mov RDI,RBX
            shr ESI,2
            call .L_416920

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_416d4e
.L_416e72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416e80:

            push R15
            push R14
            mov R14D,R8D
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_416e91:

            test R9,R9
            je .L_416f08

            mov RBP,R9
            mov R13,RCX
            mov QWORD PTR [RSP+8],RDX
            mov RBX,RSI
            mov R12,RDI
            mov RDI,RSI
            call QWORD PTR [RSI+304]

            mov RDX,QWORD PTR [RSP+8]
            mov R15D,EAX
            mov ECX,1
            mov RSI,RBX
            mov RDI,R12
            mov RAX,QWORD PTR [RDX]
            mov EDX,R15D
            sub EDX,DWORD PTR [RSP+80]
            mov DWORD PTR [RAX+R14*4],EDX
            mov RDX,RBP
            call .L_416d20

            test EAX,EAX
            je .L_416ef6

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            mov RDX,QWORD PTR [R13]
            sub EAX,R15D
            mov DWORD PTR [RDX+R14*4],EAX
            mov EAX,1
.L_416ef6:

            add RSP,24
.L_416efa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416f08:

            mov RAX,QWORD PTR [RCX]
            mov DWORD PTR [RAX+R14*4],0
            mov RAX,QWORD PTR [RDX]
            mov DWORD PTR [RAX+R14*4],0
            mov EAX,1
            jmp .L_416ef6
.L_416f25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416f30:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_416f41:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test RDX,RDX
            mov QWORD PTR [RSP+8],RDI
            je .L_416fd5

            mov R14,RDX
            mov RDI,RSI
            mov R12,RSI
            call QWORD PTR [RSI+304]

            mov RDI,R14
            mov DWORD PTR [RSP+16],EAX
            xor EBX,EBX
            call .L_4112e0

            test RAX,RAX
            je .L_417158

            xor R13D,R13D
            xor R15D,R15D
            mov EBP,1
            nop
.L_416f90:

            cmp QWORD PTR [RAX+8],0
            mov RDI,RAX
            cmovne R15D,EBP
            cmp QWORD PTR [RAX+16],0
            cmovne R13D,EBP
            add EBX,1
            call .L_411300

            test RAX,RAX
            jne .L_416f90

            cmp R15D,1
            sbb EBP,EBP
            and EBP,4294967288
            add EBP,24
            test R13D,R13D
            lea EAX,DWORD PTR [RBP+8]
            cmovne EBP,EAX
.L_416fc7:

            mov ESI,EBX
            mov RDI,R12
            call .L_4057d0

            test EAX,EAX
            jne .L_417000
.L_416fd5:

            xor EAX,EAX
.L_416fd7:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4171be

            add RSP,152
.L_416ff5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_417000:

            mov ESI,EBP
            mov RDI,R12
            call .L_4057d0

            test EAX,EAX
            je .L_416fd5

            mov RDI,R12
            lea R13,QWORD PTR [RSP+32]
            call QWORD PTR [R12+304]

            mov DWORD PTR [RSP+24],EAX
            mov RAX,QWORD PTR [RSP+8]
            mov ECX,EBP
            mov EDX,EBX
            mov RSI,R13
            mov RDI,QWORD PTR [RAX+40]
            call .L_416010

            test EAX,EAX
            je .L_417148

            mov ECX,EBP
            mov EDX,EBX
            mov RSI,R13
            mov RDI,R12
            call .L_416100

            test EAX,EAX
            je .L_417148

            mov RDI,R14
            call .L_4112e0

            test EBX,EBX
            mov R14,RAX
            je .L_417166

            mov EAX,DWORD PTR [RSP+16]
            lea RCX,QWORD PTR [R13+16]
            mov DWORD PTR [RSP+28],EBP
            xor R15D,R15D
            mov QWORD PTR [RSP+16],RCX
            sub EAX,8
            mov EBP,EAX
            jmp .L_41711e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417090:

            mov R8,QWORD PTR [R14+32]
            lea RDX,QWORD PTR [R13+40]
            lea RSI,QWORD PTR [R13+32]
            mov R9D,EBP
            mov ECX,R15D
            mov RDI,R12
            call .L_416c40

            test EAX,EAX
            je .L_417148

            mov R9,QWORD PTR [R14+8]
            test R9,R9
            je .L_4170de

            sub RSP,8
.L_4170bf:

            lea RCX,QWORD PTR [R13+64]
            lea RDX,QWORD PTR [R13+56]
            push RBP
            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R12
            mov R8D,R15D
            call .L_416e80

            test EAX,EAX
            pop RSI
            pop RDI
            je .L_417148
.L_4170de:

            mov R9,QWORD PTR [R14+16]
            test R9,R9
            je .L_41710a

            sub RSP,8
            lea RCX,QWORD PTR [R13+88]
            lea RDX,QWORD PTR [R13+80]
            push RBP
            mov RDI,QWORD PTR [RSP+24]
            mov R8D,R15D
            mov RSI,R12
            call .L_416e80

            test EAX,EAX
            pop RDX
            pop RCX
            je .L_417148
.L_41710a:

            mov RDI,R14
            add R15D,1
            call .L_411300

            cmp R15D,EBX
            mov R14,RAX
            je .L_417162
.L_41711e:

            mov R8,QWORD PTR [R14+24]
            mov RDX,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [R13+8]
            mov R9D,EBP
            mov ECX,R15D
            mov RDI,R12
            call .L_416c40

            test EAX,EAX
            jne .L_417090

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417148:

            mov RDI,R13
            call .L_4131f0

            jmp .L_416fd5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417158:

            mov EBP,16
            jmp .L_416fc7
.L_417162:

            mov EBP,DWORD PTR [RSP+28]
.L_417166:

            mov RDI,R12
            call QWORD PTR [R12+304]

            mov ESI,DWORD PTR [RSP+24]
            mov R14D,EAX
            mov RDI,R12
            call QWORD PTR [R12+288]

            test EAX,EAX
            je .L_417148

            mov ECX,EBP
            mov EDX,EBX
            mov RSI,R13
            mov RDI,R12
            call .L_416100

            test EAX,EAX
            je .L_417148

            mov ESI,R14D
            mov RDI,R12
            call QWORD PTR [R12+288]

            test EAX,EAX
            je .L_417148

            mov RDI,R13
            call .L_4131f0

            mov EAX,1
            jmp .L_416fd7
.L_4171be:

            call __stack_chk_fail@PLT
.L_4171c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4171d0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,16
.L_4171dc:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_417272

            test ESI,ESI
            je .L_417250

            lea EAX,DWORD PTR [RSI-1]
            mov R12,RDI
            mov RBP,RDX
            mov RBX,RDX
            lea R14,QWORD PTR [RSP+6]
            lea R13,QWORD PTR [RDX+RAX*4+4]
            jmp .L_417237
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417218:

            mov RSI,R14
            mov RDI,R12
            call .L_404fd0

            test EAX,EAX
            je .L_41724a

            movzx EAX,WORD PTR [RSP+6]
            mov DWORD PTR [RBX],EAX
.L_41722e:

            add RBX,4
            cmp RBX,R13
            je .L_417250
.L_417237:

            test RBP,RBP
            jne .L_417218

            xor ESI,ESI
            mov RDI,R12
            call .L_404fd0

            test EAX,EAX
            jne .L_41722e
.L_41724a:

            xor EAX,EAX
            jmp .L_417255
          .byte 0x66
          .byte 0x90
.L_417250:

            mov EAX,1
.L_417255:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_417291

            add RSP,16
.L_417269:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_417272:

            lea RCX,QWORD PTR [RIP+.L_42f800]
            lea RSI,QWORD PTR [RIP+.L_42f6ef]
            lea RDI,QWORD PTR [RIP+.L_42da14]
            mov EDX,144
            call __assert_fail@PLT
.L_417291:

            call __stack_chk_fail@PLT
.L_417296:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4172a0:

            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,24
            mov RAX,QWORD PTR [RSI+8]
            mov EAX,DWORD PTR [RAX+RBP*4]
            test EAX,EAX
            je .L_417330

            mov R12,RCX
            mov R13,RSI
            mov RBX,RDI
            mov ESI,EAX
            call QWORD PTR [RDI+288]

            test EAX,EAX
            jne .L_4172e0
.L_4172cc:

            xor EAX,EAX
.L_4172ce:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4172e0:

            mov RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [R13]
            mov EBP,DWORD PTR [RAX+RBP*4]
            shr EBP,1
            lea ESI,DWORD PTR [RBP*4+4]
            call .L_4210e0

            test RAX,RAX
            mov QWORD PTR [R12],RAX
            je .L_4172cc

            mov RDX,RAX
            mov ESI,EBP
            mov RDI,RBX
            call .L_4171d0

            test EAX,EAX
            je .L_417350

            mov RAX,QWORD PTR [R12]
            mov DWORD PTR [RAX+RBP*4],0
            add RSP,24
.L_417322:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_417330:

            mov QWORD PTR [RCX],0
            add RSP,24
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417350:

            mov RSI,QWORD PTR [R12]
            mov RDI,QWORD PTR [R13]
            mov DWORD PTR [RSP+12],EAX
            call .L_421170

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_4172ce
.L_41736a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_417370:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov EBX,ECX
            sub RSP,88
.L_417383:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+32],RDI
            mov RDI,RBP
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RCX
            xor ECX,ECX
            mov QWORD PTR [RSP+40],RDX
            call .L_405110

            test EAX,EAX
            je .L_417500

            lea RSI,QWORD PTR [RSP+60]
            mov RDI,RBP
            call .L_405110

            test EAX,EAX
            je .L_417500

            cmp DWORD PTR [RSP+60],12
            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX+40]
            jne .L_417530

            mov ESI,DWORD PTR [RSP+56]
            call .L_410260

            test RAX,RAX
            mov R13,RAX
            je .L_417500

            mov R12D,DWORD PTR [RSP+56]
            mov R15D,4294967288
            mov DWORD PTR [RAX+12],R12D
            lea EAX,DWORD PTR [R12+R12*2]
            shl EAX,2
            sub R15D,EAX
            test R12D,R12D
            je .L_4175ad

            lea RCX,QWORD PTR [RSP+64]
            add EAX,16
            mov RSI,QWORD PTR [R13+16]
            mov DWORD PTR [RSP+24],EAX
            lea EAX,DWORD PTR [RBX+8]
            xor R14D,R14D
            mov QWORD PTR [RSP+8],RCX
            lea RCX,QWORD PTR [RSP+68]
            xor R12D,R12D
            mov DWORD PTR [RSP+28],EAX
            mov QWORD PTR [RSP+16],RCX
            jmp .L_4174d4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417450:

            mov RSI,QWORD PTR [R13+16]
            mov RDI,RBP
            add RSI,RBX
            add RSI,2
            call .L_404fd0

            test EAX,EAX
            je .L_4174f8

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_405110

            test EAX,EAX
            je .L_4174f8

            mov RSI,QWORD PTR [RSP+16]
            mov RDI,RBP
            call .L_405110

            test EAX,EAX
            je .L_4174f8

            mov EDX,DWORD PTR [RSP+68]
            cmp DWORD PTR [RSP+24],EDX
            ja .L_4174f8

            mov EAX,DWORD PTR [RSP+64]
            lea ECX,DWORD PTR [RDX+RAX*1]
            cmp ECX,DWORD PTR [RSP+28]
            ja .L_4174f8

            mov RSI,QWORD PTR [R13+16]
            lea ECX,DWORD PTR [RDX+R15*1-8]
            mov EDX,EAX
            add RDX,RDX
            add EAX,ECX
            add RBX,RSI
            mov DWORD PTR [RBX+8],EDX
            mov EDX,ECX
            add RDX,RDX
            cmp R14D,EAX
            cmovb R14,RAX
            add R12D,1
            cmp DWORD PTR [RSP+56],R12D
            mov DWORD PTR [RBX+4],EDX
            jbe .L_417550
.L_4174d4:

            mov EAX,R12D
            mov RDI,RBP
            lea RBX,QWORD PTR [RAX+RAX*2]
            shl RBX,2
            add RSI,RBX
            call .L_404fd0

            test EAX,EAX
            jne .L_417450

            nop
            nop
            nop
            nop
            nop
            nop
.L_4174f8:

            mov RDI,R13
            call .L_410480
.L_417500:

            xor R13D,R13D
.L_417503:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_4175b1

            add RSP,88
.L_41751e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417530:

            lea RDX,QWORD PTR [RIP+.L_42f560]
            mov ESI,8
            xor EAX,EAX
            xor R13D,R13D
            call .L_421420

            jmp .L_417503
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417550:

            add R14,R14
            xor EBX,EBX
            test R14D,R14D
            mov R12D,R14D
            jne .L_417576
.L_41755d:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [R13+32],RBX
            mov DWORD PTR [R13+24],R12D
            mov DWORD PTR [R13+28],R12D
            mov DWORD PTR [RAX],1
            jmp .L_417503
.L_417576:

            mov RAX,QWORD PTR [RSP+32]
            mov ESI,R14D
            mov RDI,QWORD PTR [RAX+40]
            call .L_4210b0

            test RAX,RAX
            mov RBX,RAX
            je .L_4174f8

            mov ESI,R14D
            mov RDX,RAX
            mov RDI,RBP
            shr ESI,2
            call .L_4171d0

            test EAX,EAX
            jne .L_41755d

            jmp .L_4174f8
.L_4175ad:

            xor EBX,EBX
            jmp .L_41755d
.L_4175b1:

            call __stack_chk_fail@PLT
.L_4175b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4175c0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            mov RBP,RDX
            mov R13D,ECX
            sub RSP,24
.L_4175d9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4060e0

            cmp EAX,1835824483
            je .L_417698

            cmp EAX,1952807028
            je .L_417660

            cmp EAX,1684370275
            je .L_417630

            xor EAX,EAX
.L_417609:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4176cb

            add RSP,24
.L_417621:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417630:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_41763e

            call .L_410480
.L_41763e:

            lea RDX,QWORD PTR [RSP+4]
            mov ECX,R13D
            mov RSI,RBX
            mov RDI,R12
            call .L_414fe0

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            setne AL
            movzx EAX,AL
            jmp .L_417609
.L_417660:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_41766e

            call .L_410480
.L_41766e:

            lea RDX,QWORD PTR [RSP+4]
            mov ECX,R13D
            mov RSI,RBX
            mov RDI,R12
            call .L_415200

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            setne AL
            movzx EAX,AL
            jmp .L_417609
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417698:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_4176a6

            call .L_410480
.L_4176a6:

            lea RDX,QWORD PTR [RSP+4]
            mov ECX,R13D
            mov RSI,RBX
            mov RDI,R12
            call .L_417370

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            setne AL
            movzx EAX,AL
            jmp .L_417609
.L_4176cb:

            call __stack_chk_fail@PLT
.L_4176d0:

            push R13
            push R12
            mov ECX,ECX
            push RBP
            push RBX
            shl RCX,6
            mov R13,RSI
            mov RBP,RDI
            mov R12D,R8D
            sub RSP,8
            mov RBX,QWORD PTR [RDX+16]
            mov RDI,R13
            mov EDX,16
            add RBX,RCX
            mov ECX,1
            lea RSI,QWORD PTR [RBX+20]
            call QWORD PTR [R13+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_417720

            add RSP,8
            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417720:

            lea RDX,QWORD PTR [RBX+56]
            mov ECX,R12D
            mov RSI,R13
            mov RDI,RBP
            call .L_4175c0

            xor EDX,EDX
            test EAX,EAX
            setne DL
            add RSP,8
            pop RBX
            mov EAX,EDX
            pop RBP
            pop R12
            pop R13
            ret 
.L_417746:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417750:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RDI,R12
            mov EBP,ECX
            sub RSP,40
.L_417769:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+20]
            mov QWORD PTR [RSP+8],RDX
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RCX
            xor ECX,ECX
            call .L_405110

            test EAX,EAX
            je .L_417898

            cmp EBP,3
            jbe .L_417898

            mov RDI,QWORD PTR [R15+40]
            mov ESI,DWORD PTR [RSP+20]
            sub EBP,4
            call .L_410e10

            test RAX,RAX
            mov R14,RAX
            je .L_417898

            mov EAX,DWORD PTR [RSP+20]
            test EAX,EAX
            mov DWORD PTR [R14],EAX
            je .L_4178c0

            xor R13D,R13D
            jmp .L_417868
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4177d8:

            test EAX,EAX
            je .L_417890

            lea RSI,QWORD PTR [RBX+4]
            mov RDI,R12
            call .L_405110

            lea EDX,DWORD PTR [RBP-4]
            cmp EDX,3
            jbe .L_417890

            test EAX,EAX
            je .L_417890

            lea RSI,QWORD PTR [RBX+8]
            mov RDI,R12
            call .L_4052b0

            lea EDX,DWORD PTR [RBP-8]
            cmp EDX,7
            jbe .L_417890

            test EAX,EAX
            je .L_417890

            lea RSI,QWORD PTR [RBX+16]
            mov RDI,R12
            call .L_405110

            lea EDX,DWORD PTR [RBP-16]
            cmp EDX,3
            jbe .L_417890

            test EAX,EAX
            je .L_417890

            sub EBP,20
            lea RDX,QWORD PTR [RBX+40]
            mov RSI,R12
            mov ECX,EBP
            mov RDI,R15
            call .L_4175c0

            test EAX,EAX
            je .L_417890

            lea RDX,QWORD PTR [RBX+48]
            mov ECX,EBP
            mov RSI,R12
            mov RDI,R15
            call .L_4175c0

            test EAX,EAX
            je .L_417890

            add R13D,1
            cmp DWORD PTR [RSP+20],R13D
            jbe .L_4178c0
.L_417868:

            mov EBX,R13D
            mov RDI,R12
            shl RBX,6
            add RBX,QWORD PTR [R14+16]
            mov RSI,RBX
            call .L_405110

            cmp EBP,3
            ja .L_4177d8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417890:

            mov RDI,R14
            call .L_410ec0
.L_417898:

            xor R14D,R14D
.L_41789b:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_4178cd

            add RSP,40
.L_4178b2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4178c0:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],1
            jmp .L_41789b
.L_4178cd:

            call __stack_chk_fail@PLT
.L_4178d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4178e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,24
.L_4178f1:

            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            je .L_417a30

            mov ECX,DWORD PTR [RAX+8]
            xor EBP,EBP
            cmp ECX,1835103334
            je .L_4179e8

            cmp ECX,1668707188
            je .L_417950
.L_417916:

            cmp ECX,1668052340
            je .L_417a10
.L_417922:

            mov RDI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_42f5a0]
            xor EAX,EAX
            mov ESI,8
            call .L_421420

            xor EAX,EAX
.L_41793a:

            add RSP,24
.L_41793e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417950:

            mov R12,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_417a35

            mov ECX,DWORD PTR [RAX+8]
            xor R15D,R15D
            cmp ECX,1668052340
            je .L_417a13
.L_417973:

            cmp ECX,1668707188
            jne .L_417922

            mov RDI,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            mov QWORD PTR [RSP],RDI
            jne .L_417922
.L_41798c:

            mov RDI,RDX
            mov QWORD PTR [RSP+8],RDX
            call .L_42b8b0

            mov RDX,QWORD PTR [RSP+8]
            mov R13D,EAX
            mov RDI,RDX
            call .L_42b8e0

            test R15,R15
            mov DWORD PTR [RSP+8],EAX
            je .L_417de8

            mov RAX,QWORD PTR [R15+8]
            movzx ESI,R13B
            mov RDI,RBX
            mov R14D,DWORD PTR [RAX+20]
            call .L_405660

            test EAX,EAX
            jne .L_417a76
.L_4179d2:

            xor EAX,EAX
.L_4179d4:

            add RSP,24
.L_4179d8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4179e8:

            mov RBP,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_417d07

            mov ECX,DWORD PTR [RAX+8]
            cmp ECX,1668707188
            jne .L_417916

            jmp .L_417950
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417a10:

            xor R12D,R12D
.L_417a13:

            mov R15,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_417d54

            mov ECX,DWORD PTR [RAX+8]
            jmp .L_417973
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417a30:

            xor EBP,EBP
            xor R12D,R12D
.L_417a35:

            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            xor R15D,R15D
            call .L_42b8b0

            mov RDX,QWORD PTR [RSP]
            mov R13D,EAX
            xor R14D,R14D
            mov RDI,RDX
            call .L_42b8e0

            mov QWORD PTR [RSP],0
            mov DWORD PTR [RSP+8],EAX
.L_417a62:

            movzx ESI,R13B
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_4179d2
.L_417a76:

            movzx ESI,BYTE PTR [RSP+8]
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_4179d2

            movzx ESI,R14B
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_4179d2

            xor ESI,ESI
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_4179d2

            test RBP,RBP
            je .L_417c40

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+8]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+16]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+24]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+32]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+40]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+48]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+56]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+64]
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2
.L_417b9a:

            test R12,R12
            je .L_417dcc

            mov RAX,QWORD PTR [R12+8]
            mov RDI,RBX
            mov RAX,QWORD PTR [RAX]
            movzx ESI,WORD PTR [RAX+40]
            call .L_4056b0

            test EAX,EAX
            je .L_4179d2
.L_417bbf:

            cmp QWORD PTR [RSP],0
            je .L_417df0

            mov RAX,QWORD PTR [RSP]
            mov RDI,RBX
            mov RAX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX]
            movzx ESI,WORD PTR [RAX+40]
            call .L_4056b0

            test EAX,EAX
            je .L_4179d2
.L_417be9:

            xor EBP,EBP
            test R12,R12
            je .L_417d97

            mov RSI,R12
            mov RDI,RBX
            call .L_401496

            test EAX,EAX
            je .L_4179d2
.L_417c07:

            cmp DWORD PTR [RSP+8],0
            je .L_417c17

            test R14D,R14D
            jne .L_417d0f
.L_417c17:

            xor EBP,EBP
            cmp QWORD PTR [RSP],0
            je .L_417d61

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_401496

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_41793a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417c40:

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_4179d2

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            jne .L_417b9a

            xor EAX,EAX
            jmp .L_4179d4
.L_417d07:

            xor R12D,R12D
            jmp .L_417a35
.L_417d0f:

            mov EDI,DWORD PTR [RSP+8]
            mov EDX,R13D
            mov ESI,R14D
            call .L_4011c7

            cmp EAX,-1
            je .L_4179d2

            test R15,R15
            je .L_417c17

            test EAX,EAX
            je .L_417c17

            mov RDX,QWORD PTR [R15]
            mov ESI,EAX
            mov RDI,RBX
            call .L_405740

            test EAX,EAX
            jne .L_417c17

            xor EAX,EAX
            jmp .L_4179d4
.L_417d54:

            mov QWORD PTR [RSP],0
            jmp .L_41798c
.L_417d61:

            cmp EBP,DWORD PTR [RSP+8]
            jge .L_417e0c

            xor ESI,ESI
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_4179d2

            mov ESI,65535
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_4179d2

            add EBP,1
            jmp .L_417d61
.L_417d97:

            cmp EBP,R13D
            jge .L_417c07

            xor ESI,ESI
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_4179d2

            mov ESI,65535
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_4179d2

            add EBP,1
            jmp .L_417d97
.L_417dcc:

            mov ESI,2
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            jne .L_417bbf

            xor EAX,EAX
            jmp .L_4179d4
.L_417de8:

            xor R14D,R14D
            jmp .L_417a62
.L_417df0:

            mov ESI,2
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            jne .L_417be9

            xor EAX,EAX
            jmp .L_4179d4
.L_417e0c:

            mov EAX,1
            jmp .L_41793a
.L_417e16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417e20:

            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov RSI,RDX
            mov RBP,RDX
            sub RSP,8
            call .L_405ad0

            test EAX,EAX
            jne .L_417e48
.L_417e3b:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 

            nop
            nop
            nop
            nop
.L_417e48:

            lea RSI,QWORD PTR [RBP+24]
            mov RDI,RBX
            call .L_405ad0

            test EAX,EAX
            je .L_417e3b

            mov ESI,DWORD PTR [RBP+48]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            setne AL
            add RSP,8
            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
.L_417e72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417e80:

            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov RBP,RDX
            sub RSP,8
            mov ESI,DWORD PTR [RDX]
            call .L_4057d0

            test EAX,EAX
            jne .L_417ea8
.L_417e9a:

            xor EAX,EAX
.L_417e9c:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417ea8:

            lea RSI,QWORD PTR [RBP+8]
            mov RDI,RBX
            call .L_405ad0

            test EAX,EAX
            je .L_417e9a

            mov ESI,DWORD PTR [RBP+32]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_417e9a

            movsd XMM0,QWORD PTR [RBP+40]
            mov RDI,RBX
            call .L_4059c0

            test EAX,EAX
            je .L_417e9a

            mov ESI,DWORD PTR [RBP+48]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_417e9c
.L_417eed:

            nop
            nop
            nop
.L_417ef0:

            push R15
            push R14
            mov ECX,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            mov ESI,1668641382
            sub RSP,56
.L_417f0b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX+8]
            mov RBX,QWORD PTR [RAX+RCX*8]
            mov R12,QWORD PTR [RBX+16]
            mov R13D,DWORD PTR [RBX+8]
            call .L_4057d0

            test EAX,EAX
            jne .L_417f60
.L_417f34:

            xor EAX,EAX
.L_417f36:

            mov RDI,QWORD PTR [RSP+40]
            xor RDI,QWORD PTR FS:[40]
            jne .L_418174

            add RSP,56
.L_417f4e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417f60:

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_417f34

            movzx ESI,R13W
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            je .L_417f34

            xor ESI,ESI
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            je .L_417f34

            cmp R13D,1
            je .L_417fe0

            lea EDX,DWORD PTR [R13-2]
            lea R14,QWORD PTR [R12+4]
            lea RAX,QWORD PTR [RDX*8]
            sub RAX,RDX
            shl RAX,4
            lea R13,QWORD PTR [R12+RAX*1+116]
            jmp .L_417fc1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417fb8:

            add R14,112
            cmp R14,R13
            je .L_417fe0
.L_417fc1:

            movss XMM0,DWORD PTR [R14]
            mov RDI,RBP
            call .L_405870

            test EAX,EAX
            jne .L_417fb8

            jmp .L_417f34
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417fe0:

            mov ECX,DWORD PTR [RBX+8]
            test ECX,ECX
            je .L_41816a

            mov DWORD PTR [RSP+12],0
.L_417ff3:

            mov EAX,DWORD PTR [RSP+12]
            lea R13,QWORD PTR [RAX*8]
            sub R13,RAX
            shl R13,4
            lea R14,QWORD PTR [R12+R13*1]
            mov EDX,DWORD PTR [R14+8]
            test EDX,EDX
            jne .L_4180a0

            mov ESI,1935764838
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_417f34

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_417f34

            mov ESI,DWORD PTR [R14+96]
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_417f34

            mov RAX,QWORD PTR [RBX+16]
            mov EAX,DWORD PTR [RAX+R13*1+96]
            test EAX,EAX
            je .L_418158

            xor R15D,R15D
            jmp .L_418083
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418070:

            mov RAX,QWORD PTR [RBX+16]
            add R15D,1
            cmp R15D,DWORD PTR [RAX+R13*1+96]
            jae .L_418158
.L_418083:

            mov RCX,QWORD PTR [R14+104]
            mov EAX,R15D
            mov RDI,RBP
            movss XMM0,DWORD PTR [RCX+RAX*4]
            call .L_405870

            test EAX,EAX
            jne .L_418070

            jmp .L_417f34
.L_4180a0:

            movabs RAX,21474836484
            mov ESI,1885434470
            mov RDI,RBP
            mov QWORD PTR [RSP+28],RAX
            mov DWORD PTR [RSP+36],5
            call .L_4057d0

            test EAX,EAX
            je .L_417f34

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_417f34

            mov EAX,DWORD PTR [R14+8]
            lea R13D,DWORD PTR [RAX-6]
            cmp R13D,2
            ja .L_417f34

            mov ESI,R13D
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            je .L_417f34

            xor ESI,ESI
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            je .L_417f34

            movsxd R13,R13D
            mov EAX,DWORD PTR [RSP+R13*4+28]
            test EAX,EAX
            je .L_418158

            sub EAX,1
            lea R13,QWORD PTR [R14+16]
            lea R14,QWORD PTR [R14+RAX*8+24]
            jmp .L_418139
          .byte 0x90
.L_418130:

            add R13,8
            cmp R14,R13
            je .L_418158
.L_418139:

            pxor XMM0,XMM0
            mov RDI,RBP
            cvtsd2ss XMM0,QWORD PTR [R13]
            call .L_405870

            test EAX,EAX
            jne .L_418130

            jmp .L_417f34
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418158:

            add DWORD PTR [RSP+12],1
            mov EAX,DWORD PTR [RSP+12]
            cmp EAX,DWORD PTR [RBX+8]
            jb .L_417ff3
.L_41816a:

            mov EAX,1
            jmp .L_417f36
.L_418174:

            call __stack_chk_fail@PLT
.L_418179:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418180:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov ESI,EDX
            sub RSP,120
.L_418195:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_4182b0

            lea RBP,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov RSI,RBP
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [RBP+8]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [RBP+16]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [RBP+24]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [RBP+32]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [RBP+40]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [RBP+48]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [RBP+56]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [RBP+64]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            mov R13,RSP
            mov RDI,RBX
            mov RSI,R13
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [R13+8]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            lea RSI,QWORD PTR [R13+16]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_4182b0

            mov RDI,QWORD PTR [R12]
            mov R8,R13
            mov RCX,RBP
            mov EDX,3
            mov ESI,3
            call .L_42a230

            jmp .L_4182b2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4182b0:

            xor EAX,EAX
.L_4182b2:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4182cd

            add RSP,120
.L_4182c6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4182cd:

            call __stack_chk_fail@PLT
.L_4182d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4182e0:

            push R15
            push R14
            mov ECX,ECX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            lea R14,QWORD PTR [RDX+RCX*8]
            sub RSP,88
.L_4182fd:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+44]
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            call .L_405110

            test EAX,EAX
            je .L_41843b

            cmp DWORD PTR [RSP+44],1668641382
            jne .L_41843b

            xor ESI,ESI
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41843b

            lea RSI,QWORD PTR [RSP+40]
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_41843b

            xor ESI,ESI
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_41843b

            movzx ESI,WORD PTR [RSP+40]
            test SI,SI
            je .L_41843b

            mov RDI,QWORD PTR [R12+40]
            mov EDX,112
            call .L_421110

            test RAX,RAX
            mov RBP,RAX
            je .L_41843b

            cmp WORD PTR [RSP+40],1
            je .L_4186d0

            movss XMM0,DWORD PTR [RIP+.L_42f840]
            xor R13D,R13D
            jmp .L_4183cb
          .byte 0x90
.L_4183b0:

            movzx ESI,WORD PTR [RSP+40]
            add R13D,1
            movss XMM0,DWORD PTR [R15+4]
            lea ECX,DWORD PTR [RSI-1]
            cmp R13D,ECX
            jae .L_418468
.L_4183cb:

            mov EAX,R13D
            mov RDI,RBX
            lea R15,QWORD PTR [RAX*8]
            sub R15,RAX
            shl R15,4
            add R15,RBP
            movss DWORD PTR [R15],XMM0
            lea RSI,QWORD PTR [R15+4]
            call .L_4051c0

            test EAX,EAX
            jne .L_4183b0
.L_4183f5:

            xor EBX,EBX
            cmp WORD PTR [RSP+40],0
            mov RDI,QWORD PTR [R12+40]
            lea R13,QWORD PTR [RBP+104]
            je .L_418433

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418410:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            je .L_418423

            call .L_421170

            mov RDI,QWORD PTR [R12+40]
.L_418423:

            movzx EAX,WORD PTR [RSP+40]
            add EBX,1
            add R13,112
            cmp EBX,EAX
            jb .L_418410
.L_418433:

            mov RSI,RBP
            call .L_421170
.L_41843b:

            xor EAX,EAX
            xor EBX,EBX
.L_41843f:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [R14],RBX
            jne .L_4186e3

            add RSP,88
.L_41845a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418468:

            movzx ECX,SI
            lea RDX,QWORD PTR [RCX*8]
            sub RDX,RCX
            shl RDX,4
            test SI,SI
            lea RDX,QWORD PTR [RBP+RDX*1-112]
            movss DWORD PTR [RDX],XMM0
            mov DWORD PTR [RDX+4],1678214776
            je .L_41866a
.L_418493:

            lea RAX,QWORD PTR [RSP+42]
            mov R15,RBP
            mov DWORD PTR [RSP+20],0
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],RAX
.L_4184b2:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_4183f5

            xor ESI,ESI
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_4183f5

            mov ESI,DWORD PTR [RSP+44]
            cmp ESI,1885434470
            je .L_418570

            cmp ESI,1935764838
            jne .L_418620

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_4183f5

            mov ESI,DWORD PTR [RSP+48]
            mov RDI,QWORD PTR [R12+40]
            mov EDX,4
            mov DWORD PTR [R15+96],ESI
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R15+104],RAX
            je .L_4183f5

            mov EDX,DWORD PTR [RSP+48]
            test EDX,EDX
            je .L_418650

            xor R13D,R13D
            jmp .L_418553
          .byte 0x66
          .byte 0x90
.L_418540:

            add R13D,1
            cmp R13D,DWORD PTR [RSP+48]
            jae .L_418650

            mov RAX,QWORD PTR [R15+104]
.L_418553:

            mov ECX,R13D
            mov RDI,RBX
            lea RSI,QWORD PTR [RAX+RCX*4]
            call .L_4051c0

            test EAX,EAX
            jne .L_418540

            jmp .L_4183f5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418570:

            mov RSI,QWORD PTR [RSP+24]
            movabs RAX,21474836484
            mov RDI,RBX
            mov QWORD PTR [RSP+52],RAX
            mov DWORD PTR [RSP+60],5
            call .L_404fd0

            test EAX,EAX
            je .L_4183f5

            xor ESI,ESI
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_4183f5

            movzx EAX,WORD PTR [RSP+42]
            lea ECX,DWORD PTR [RAX+6]
            cmp AX,2
            mov DWORD PTR [R15+8],ECX
            ja .L_4183f5

            cdqe 
            mov R13D,1
            mov ECX,DWORD PTR [RSP+RAX*4+52]
            test ECX,ECX
            jne .L_418603

            jmp .L_418650
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4185e0:

            pxor XMM0,XMM0
            movzx EAX,WORD PTR [RSP+42]
            mov ECX,R13D
            cvtss2sd XMM0,DWORD PTR [RSP+48]
            movsd QWORD PTR [R15+R13*8+8],XMM0
            add R13,1
            cmp ECX,DWORD PTR [RSP+RAX*4+52]
            jae .L_418650
.L_418603:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_4051c0

            test EAX,EAX
            jne .L_4185e0

            jmp .L_4183f5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418620:

            lea RBX,QWORD PTR [RSP+67]
            mov RDI,RBX
            call .L_421540

            mov RDI,QWORD PTR [R12+40]
            lea RDX,QWORD PTR [RIP+.L_42f5d0]
            mov RCX,RBX
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_4183f5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418650:

            add DWORD PTR [RSP+20],1
            movzx ESI,WORD PTR [RSP+40]
            add R15,112
            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,ESI
            jb .L_4184b2
.L_41866a:

            mov RDI,QWORD PTR [R12+40]
            mov RDX,RBP
            call .L_422580

            cmp WORD PTR [RSP+40],0
            mov RBX,RAX
            mov RDI,QWORD PTR [R12+40]
            je .L_4186b4

            lea R15,QWORD PTR [RBP+104]
            xor R13D,R13D
            nop
            nop
.L_418690:

            mov RSI,QWORD PTR [R15]
            test RSI,RSI
            je .L_4186a2

            call .L_421170

            mov RDI,QWORD PTR [R12+40]
.L_4186a2:

            movzx EAX,WORD PTR [RSP+40]
            add R13D,1
            add R15,112
            cmp R13D,EAX
            jb .L_418690
.L_4186b4:

            mov RSI,RBP
            call .L_421170

            xor EAX,EAX
            test RBX,RBX
            setne AL
            jmp .L_41843f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4186d0:

            movabs RAX,7207877582409664120
            mov QWORD PTR [RBP],RAX
            jmp .L_418493
.L_4186e3:

            call __stack_chk_fail@PLT
.L_4186e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4186f0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov R12,RDX
            sub RSP,104
.L_41870a:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+9]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_404f40

            test EAX,EAX
            je .L_4187a3

            lea RSI,QWORD PTR [RSP+10]
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_4187a3

            lea RSI,QWORD PTR [RSP+11]
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_4187a3

            xor ESI,ESI
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_4187a3

            movzx ESI,BYTE PTR [RSP+9]
            lea EAX,DWORD PTR [RSI-1]
            cmp AL,15
            ja .L_4187a3

            movzx EDX,BYTE PTR [RSP+10]
            lea EAX,DWORD PTR [RDX-1]
            cmp AL,15
            ja .L_4187a3

            mov RDI,QWORD PTR [R13+40]
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_4187a3

            lea R14,QWORD PTR [RSP+16]
            mov RDI,RBX
            mov RSI,R14
            call .L_405350

            test EAX,EAX
            jne .L_4187d0
.L_41879b:

            mov RDI,RBP
            call .L_42b910
.L_4187a3:

            xor EBP,EBP
.L_4187a5:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_418953

            add RSP,104
.L_4187c0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4187d0:

            lea RSI,QWORD PTR [R14+8]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_41879b

            lea RSI,QWORD PTR [R14+16]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_41879b

            lea RSI,QWORD PTR [R14+24]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_41879b

            lea RSI,QWORD PTR [R14+32]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_41879b

            lea RSI,QWORD PTR [R14+40]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_41879b

            lea RSI,QWORD PTR [R14+48]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_41879b

            lea RSI,QWORD PTR [R14+56]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_41879b

            lea RSI,QWORD PTR [R14+64]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_41879b

            cmp BYTE PTR [RSP+9],3
            je .L_4189af
.L_41886b:

            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_41879b

            lea RSI,QWORD PTR [RSP+14]
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_41879b

            movzx EAX,WORD PTR [RSP+12]
            test AX,AX
            js .L_41879b

            cmp WORD PTR [RSP+14],0
            js .L_41879b

            cmp BYTE PTR [RSP+11],1
            je .L_41879b

            test AX,AX
            movzx R8D,AX
            movzx EDX,BYTE PTR [RSP+9]
            mov RDI,QWORD PTR [R13+40]
            je .L_4188f9

            cmp EDX,16
            jg .L_41879b

            cmp R8D,1
            je .L_41879b

            mov ECX,EDX
            mov RSI,RBX
            mov RDX,RBP
            call .L_401526

            test EAX,EAX
            je .L_41879b

            movzx EDX,BYTE PTR [RSP+9]
.L_4188f9:

            movzx R9D,BYTE PTR [RSP+10]
            movzx ESI,BYTE PTR [RSP+11]
            test R9D,R9D
            je .L_41890d

            test ESI,ESI
            jne .L_418958
.L_41890d:

            mov RDI,QWORD PTR [R13+40]
.L_418911:

            movzx R8D,WORD PTR [RSP+14]
            test R8D,R8D
            je .L_418946

            cmp R8D,1
            je .L_41879b

            cmp R9D,16
            jg .L_41879b

            mov ECX,R9D
            mov RDX,RBP
            mov RSI,RBX
            call .L_401526

            test EAX,EAX
            je .L_41879b
.L_418946:

            mov DWORD PTR [R12],1
            jmp .L_4187a5
.L_418953:

            call __stack_chk_fail@PLT
.L_418958:

            mov EDI,R9D
            call .L_4011c7

            cmp EAX,-1
            mov R15D,EAX
            je .L_41879b

            test EAX,EAX
            mov RDI,QWORD PTR [R13+40]
            je .L_418911

            mov EDX,2
            mov ESI,EAX
            call .L_421110

            test RAX,RAX
            mov R14,RAX
            je .L_41879b

            mov RDX,RAX
            mov ESI,R15D
            mov RDI,RBX
            call .L_405070

            test EAX,EAX
            jne .L_4189f5

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_421170

            jmp .L_41879b
.L_4189af:

            mov RDI,R14
            call .L_42c390

            test EAX,EAX
            jne .L_41886b

            mov RDI,QWORD PTR [R13+40]
            xor R8D,R8D
            mov RCX,R14
            mov EDX,3
            mov ESI,3
            call .L_42a230

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_41879b

            jmp .L_41886b
.L_4189f5:

            movzx ECX,BYTE PTR [RSP+10]
            movzx EDX,BYTE PTR [RSP+9]
            mov R8,R14
            movzx ESI,BYTE PTR [RSP+11]
            mov RDI,QWORD PTR [R13+40]
            call .L_42b390

            mov ESI,1
            mov RDI,RBP
            mov RDX,RAX
            call .L_42bb10

            test EAX,EAX
            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            jne .L_418a35

            call .L_421170

            jmp .L_41879b
.L_418a35:

            call .L_421170

            mov RDI,QWORD PTR [R13+40]
            movzx R9D,BYTE PTR [RSP+10]
            jmp .L_418911
.L_418a49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418a50:

            push R15
            push R14
            xor R8D,R8D
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RSI
            mov R12,RDX
            lea RSI,QWORD PTR [RIP+.L_42f712]
            xor ECX,ECX
            sub RSP,8
            mov RDX,R13
            mov R14,RDI
            mov RDI,R12
            call .L_410590

            mov RDI,QWORD PTR [R14]
            mov EBX,EAX
            mov ESI,EAX
            call .L_4210b0

            mov ESI,EBX
            mov RDI,RBP
            mov R15,RAX
            call .L_4057d0

            test EAX,EAX
            jne .L_418ab0
.L_418a9e:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_418ab0:

            lea RSI,QWORD PTR [RIP+.L_42f712]
            mov R8D,EBX
            mov RCX,R15
            mov RDX,R13
            mov RDI,R12
            call .L_410590

            test EAX,EAX
            je .L_418a9e

            mov RDX,R15
            mov ESI,EBX
            mov RDI,RBP
            call QWORD PTR [RBP+312]

            test EAX,EAX
            je .L_418a9e

            mov RDI,QWORD PTR [R14]
            mov RSI,R15
            call .L_421170

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_418afd:

            nop
            nop
            nop
.L_418b00:

            push R12
            push RBP
            lea RCX,QWORD PTR [RIP+.L_42f715]
            push RBX
            lea RBX,QWORD PTR [RDI+40]
            mov RBP,RSI
            mov R12,RDX
            mov RDI,RBX
            call .L_418a50

            test EAX,EAX
            jne .L_418b30
.L_418b21:

            xor EAX,EAX
.L_418b23:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418b30:

            lea RCX,QWORD PTR [RIP+.L_42f718]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_418a50

            test EAX,EAX
            je .L_418b21

            lea RCX,QWORD PTR [RIP+.L_42f71b]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_418a50

            test EAX,EAX
            je .L_418b21

            lea RCX,QWORD PTR [RIP+.L_42f71e]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_418a50

            test EAX,EAX
            je .L_418b21

            lea RCX,QWORD PTR [RIP+.L_42f721]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_418a50

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_418b23
.L_418b9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_418ba0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov R12,RDX
            sub RSP,120
.L_418bba:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+29]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_404f40

            test EAX,EAX
            je .L_418c5a

            lea RSI,QWORD PTR [RSP+30]
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_418c5a

            lea RSI,QWORD PTR [RSP+31]
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_418c5a

            cmp BYTE PTR [RSP+31],1
            je .L_418c5a

            xor ESI,ESI
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_418c5a

            movzx ESI,BYTE PTR [RSP+29]
            lea EAX,DWORD PTR [RSI-1]
            cmp AL,15
            ja .L_418c5a

            movzx EDX,BYTE PTR [RSP+30]
            lea EAX,DWORD PTR [RDX-1]
            cmp AL,15
            ja .L_418c5a

            mov RDI,QWORD PTR [R13+40]
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_418c5a

            lea R14,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov RSI,R14
            call .L_405350

            test EAX,EAX
            jne .L_418c88
.L_418c52:

            mov RDI,RBP
            call .L_42b910
.L_418c5a:

            xor EBP,EBP
.L_418c5c:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_418d95

            add RSP,120
.L_418c77:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418c88:

            lea RSI,QWORD PTR [R14+8]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_418c52

            lea RSI,QWORD PTR [R14+16]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_418c52

            lea RSI,QWORD PTR [R14+24]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_418c52

            lea RSI,QWORD PTR [R14+32]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_418c52

            lea RSI,QWORD PTR [R14+40]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_418c52

            lea RSI,QWORD PTR [R14+48]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_418c52

            lea RSI,QWORD PTR [R14+56]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_418c52

            lea RSI,QWORD PTR [R14+64]
            mov RDI,RBX
            call .L_405350

            test EAX,EAX
            je .L_418c52

            cmp BYTE PTR [RSP+29],3
            je .L_418d9a
.L_418d1f:

            movzx ECX,BYTE PTR [RSP+29]
            mov RDI,QWORD PTR [R13+40]
            mov EAX,ECX
            sub EAX,1
            cmp AL,15
            ja .L_418c52

            mov RDX,RBP
            mov RSI,RBX
            call .L_40162b

            test EAX,EAX
            je .L_418c52

            movzx ESI,BYTE PTR [RSP+31]
            movzx EDX,BYTE PTR [RSP+29]
            movzx EDI,BYTE PTR [RSP+30]
            test ESI,ESI
            je .L_418d5f

            test EDI,EDI
            jne .L_418ddd
.L_418d5f:

            mov RDI,QWORD PTR [R13+40]
.L_418d63:

            movzx ECX,BYTE PTR [RSP+30]
            mov EAX,ECX
            sub EAX,1
            cmp AL,15
            ja .L_418c52

            mov RDX,RBP
            mov RSI,RBX
            call .L_40162b

            test EAX,EAX
            je .L_418c52

            mov DWORD PTR [R12],1
            jmp .L_418c5c
.L_418d95:

            call __stack_chk_fail@PLT
.L_418d9a:

            mov RDI,R14
            call .L_42c390

            test EAX,EAX
            jne .L_418d1f

            mov RDI,QWORD PTR [R13+40]
            xor R8D,R8D
            mov RCX,R14
            mov EDX,3
            mov ESI,3
            call .L_42a230

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_418c52

            jmp .L_418d1f
.L_418ddd:

            call .L_4011c7

            cmp EAX,-1
            mov R15D,EAX
            je .L_418c52

            test EAX,EAX
            mov RDI,QWORD PTR [R13+40]
            je .L_418d63

            mov EDX,2
            mov ESI,EAX
            call .L_421110

            test RAX,RAX
            mov R14,RAX
            je .L_418c52

            mov RDI,QWORD PTR [R13+40]
            mov ESI,R15D
            call .L_4210b0

            test RAX,RAX
            je .L_418e6a

            mov EDX,R15D
            mov ECX,1
            mov RSI,RAX
            mov QWORD PTR [RSP+8],RAX
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            xor EDX,EDX
            sub EAX,1
            mov R8,QWORD PTR [RSP+8]
            je .L_418e7b

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_421170

            mov R8,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R13+40]
            mov RSI,R8
            call .L_421170

            jmp .L_418c52
.L_418e6a:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_421170

            jmp .L_418c52
.L_418e7b:

            movzx EAX,BYTE PTR [R8+RDX*1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [R14+RDX*2],AX
            add RDX,1
            cmp R15D,EDX
            ja .L_418e7b

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R8
            call .L_421170

            movzx ECX,BYTE PTR [RSP+30]
            movzx EDX,BYTE PTR [RSP+29]
            mov R8,R14
            movzx ESI,BYTE PTR [RSP+31]
            mov RDI,QWORD PTR [R13+40]
            call .L_42b390

            mov ESI,1
            mov RDI,RBP
            mov RDX,RAX
            call .L_42bb10

            test EAX,EAX
            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            jne .L_418ee1

            call .L_421170

            jmp .L_418c52
.L_418ee1:

            call .L_421170

            jmp .L_418d5f
.L_418eeb:

            nop
            nop
            nop
            nop
            nop
.L_418ef0:

            push R14
            push R13
            mov R13,R9
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov EBX,R8D
            sub RSP,16
.L_418f05:

            mov ESI,DWORD PTR [RDX+RBX*4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],0
            test ESI,ESI
            je .L_418f70

            mov RAX,QWORD PTR [RCX]
            mov R12,RCX
            mov EAX,DWORD PTR [RAX+RBX*4]
            test EAX,EAX
            je .L_418f70

            mov R14,RDI
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_418f7d

            mov RAX,QWORD PTR [R12]
            lea RDX,QWORD PTR [RSP+4]
            mov RSI,RBP
            mov RDI,R14
            mov ECX,DWORD PTR [RAX+RBX*4]
            call .L_417370

            test RAX,RAX
            mov QWORD PTR [R13],RAX
            setne AL
            movzx EAX,AL
            jmp .L_418f7d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418f70:

            mov QWORD PTR [R13],0
            mov EAX,1
.L_418f7d:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_418f9a

            add RSP,16
.L_418f91:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_418f9a:

            call __stack_chk_fail@PLT
.L_418f9f:

            nop
.L_418fa0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14,RSI
            push RBP
            push RBX
            mov RDI,RSI
            sub RSP,216
.L_418fba:

            mov DWORD PTR [RDX],0
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+64],0
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+88],0
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+56]
            mov RDI,R14
            mov R12D,EAX
            call .L_405110

            test EAX,EAX
            je .L_419141

            lea RSI,QWORD PTR [RSP+60]
            mov RDI,R14
            call .L_405110

            test EAX,EAX
            je .L_419141

            mov ECX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [R15+40]
            mov EAX,ECX
            and EAX,4294967287
            cmp EAX,16
            je .L_41904a

            cmp ECX,32
            jne .L_419338
.L_41904a:

            call .L_411090

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_419141

            lea RBX,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [R15+40]
            mov ECX,DWORD PTR [RSP+60]
            mov EDX,DWORD PTR [RSP+56]
            mov RSI,RBX
            call .L_416010

            test EAX,EAX
            je .L_419130

            mov EAX,DWORD PTR [RSP+56]
            mov R13D,DWORD PTR [RSP+60]
            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            je .L_419320

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+16],R15
            sub R12D,8
            xor EBP,EBP
            mov R15,RAX
            jmp .L_4190bd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4190b0:

            add EBP,1
            cmp DWORD PTR [RSP+8],EBP
            je .L_419180
.L_4190bd:

            lea RSI,QWORD PTR [RBX+8]
            mov R8D,R12D
            mov ECX,EBP
            mov RDX,R15
            mov RDI,R14
            call .L_416280

            test EAX,EAX
            je .L_419130

            lea RDX,QWORD PTR [RBX+40]
            lea RSI,QWORD PTR [RBX+32]
            mov R8D,R12D
            mov ECX,EBP
            mov RDI,R14
            call .L_416280

            test EAX,EAX
            je .L_419130

            cmp R13D,16
            jbe .L_4190b0

            lea RDX,QWORD PTR [RBX+64]
            lea RSI,QWORD PTR [RBX+56]
            mov R8D,R12D
            mov ECX,EBP
            mov RDI,R14
            call .L_416280

            test EAX,EAX
            je .L_419130

            cmp R13D,24
            jbe .L_4190b0

            lea RDX,QWORD PTR [RBX+88]
            lea RSI,QWORD PTR [RBX+80]
            mov R8D,R12D
            mov ECX,EBP
            mov RDI,R14
            call .L_416280

            test EAX,EAX
            jne .L_4190b0

            nop
            nop
            nop
            nop
.L_419130:

            mov RDI,RBX
            call .L_4131f0

            mov RDI,QWORD PTR [RSP]
            call .L_4110b0
.L_419141:

            mov QWORD PTR [RSP],0
.L_419149:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP]
            jne .L_419358

            add RSP,216
.L_41916b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419180:

            mov EAX,DWORD PTR [RSP+56]
            mov R15,QWORD PTR [RSP+16]
            test EAX,EAX
            je .L_419320

            lea RAX,QWORD PTR [RSP+72]
            xor EBP,EBP
            lea R13,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+32],RAX
            jmp .L_419254
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4191c8:

            mov RSI,QWORD PTR [RSP+64]
            test RSI,RSI
            je .L_419300
.L_4191d6:

            mov RDX,QWORD PTR [RSP+72]
            test RDX,RDX
            je .L_419300

            mov R8,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP]
            call .L_411150

            mov R12D,EAX
.L_4191fa:

            mov RSI,QWORD PTR [RSP+64]
            test RSI,RSI
            je .L_41920d

            mov RDI,QWORD PTR [R15+40]
            call .L_421170
.L_41920d:

            mov RSI,QWORD PTR [RSP+72]
            test RSI,RSI
            je .L_419220

            mov RDI,QWORD PTR [R15+40]
            call .L_421170
.L_419220:

            mov RDI,QWORD PTR [RSP+80]
            test RDI,RDI
            je .L_41922f

            call .L_410480
.L_41922f:

            mov RDI,QWORD PTR [RSP+88]
            test RDI,RDI
            je .L_41923e

            call .L_410480
.L_41923e:

            test R12D,R12D
            je .L_419130

            add EBP,1
            cmp DWORD PTR [RSP+56],EBP
            jbe .L_419320
.L_419254:

            mov RCX,R13
            mov EDX,EBP
            mov RSI,RBX
            mov RDI,R14
            call .L_4172a0

            test EAX,EAX
            je .L_419130

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+16]
            mov EDX,EBP
            mov RDI,R14
            call .L_4172a0

            test EAX,EAX
            je .L_419130

            cmp DWORD PTR [RSP+60],16
            jbe .L_4191c8

            mov R9,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+152]
            lea RCX,QWORD PTR [RBX+64]
            mov R8D,EBP
            mov RSI,R14
            mov RDI,R15
            call .L_418ef0

            test EAX,EAX
            je .L_419130

            cmp DWORD PTR [RSP+60],24
            jbe .L_4191c8

            mov R9,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+176]
            lea RCX,QWORD PTR [RBX+88]
            mov R8D,EBP
            mov RSI,R14
            mov RDI,R15
            call .L_418ef0

            test EAX,EAX
            je .L_419130

            mov RSI,QWORD PTR [RSP+64]
            test RSI,RSI
            jne .L_4191d6

            nop
            nop
            nop
            nop
            nop
            nop
.L_419300:

            mov RDI,QWORD PTR [R15+40]
            lea RDX,QWORD PTR [RIP+.L_42f724]
            mov ESI,12
            xor EAX,EAX
            xor R12D,R12D
            call .L_421420

            jmp .L_4191fa
          .byte 0x90
.L_419320:

            mov RDI,RBX
            call .L_4131f0

            mov RAX,QWORD PTR [RSP+40]
            mov DWORD PTR [RAX],1
            jmp .L_419149
.L_419338:

            lea RDX,QWORD PTR [RIP+.L_42f5f8]
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            mov QWORD PTR [RSP],0
            jmp .L_419149
.L_419358:

            call __stack_chk_fail@PLT
.L_41935d:

            nop
            nop
            nop
.L_419360:

            push R15
            push R14
            mov R14,R8
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov R13,RDX
            mov RBP,RCX
            sub RSP,24
.L_419380:

            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_405110

            test EAX,EAX
            je .L_4193b8

            mov ESI,DWORD PTR [RSP+4]
            cmp ESI,-5
            ja .L_4193b8

            mov EDX,DWORD PTR [RBP]
            mov EAX,ESI
            add RAX,4
            cmp RDX,RAX
            jae .L_4193e0

            nop
            nop
            nop
.L_4193b8:

            xor EAX,EAX
.L_4193ba:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41945e

            add RSP,24
.L_4193d2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4193e0:

            mov RDI,QWORD PTR [R12]
            add ESI,1
            call .L_4210b0

            test RAX,RAX
            mov R15,RAX
            je .L_4193b8

            mov ECX,DWORD PTR [RSP+4]
            mov EDX,1
            mov RSI,RAX
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,DWORD PTR [RSP+4]
            je .L_419420

            mov RDI,QWORD PTR [R12]
            mov RSI,R15
            call .L_421170

            jmp .L_4193b8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419420:

            mov EAX,EAX
            lea RSI,QWORD PTR [RIP+.L_42f712]
            mov RCX,R15
            mov RDX,R14
            mov RDI,R13
            mov BYTE PTR [R15+RAX*1],0
            call .L_4102d0

            mov RDI,QWORD PTR [R12]
            mov RSI,R15
            call .L_421170

            mov EAX,4294967292
            sub EAX,DWORD PTR [RSP+4]
            add DWORD PTR [RBP],EAX
            mov EAX,1
            jmp .L_4193ba
.L_41945e:

            call __stack_chk_fail@PLT
.L_419463:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419470:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            mov ESI,5
            add RBX,40
            sub RSP,16
.L_41948e:

            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RSP+12],ECX
            call .L_410260

            cmp DWORD PTR [RSP+12],3
            mov RBP,RAX
            mov DWORD PTR [R14],0
            jbe .L_419580

            lea R13,QWORD PTR [RSP+12]
            lea R8,QWORD PTR [RIP+.L_42f715]
            mov RDX,RAX
            mov RSI,R12
            mov RDI,RBX
            mov RCX,R13
            call .L_419360

            test EAX,EAX
            je .L_419580

            cmp DWORD PTR [RSP+12],3
            jbe .L_419580

            lea R8,QWORD PTR [RIP+.L_42f718]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_419360

            test EAX,EAX
            je .L_419580

            cmp DWORD PTR [RSP+12],3
            jbe .L_419580

            lea R8,QWORD PTR [RIP+.L_42f71b]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_419360

            test EAX,EAX
            je .L_419580

            cmp DWORD PTR [RSP+12],3
            jbe .L_419580

            lea R8,QWORD PTR [RIP+.L_42f71e]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_419360

            test EAX,EAX
            je .L_419580

            cmp DWORD PTR [RSP+12],3
            jbe .L_419580

            lea R8,QWORD PTR [RIP+.L_42f721]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_419360

            test EAX,EAX
            je .L_419580

            mov DWORD PTR [R14],1
            add RSP,16
.L_419574:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_419580:

            mov RDI,RBP
            xor EBP,EBP
            call .L_410480

            add RSP,16
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41959a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4195a0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RAX,QWORD PTR [RDX]
            mov R12,RDI
            mov RDI,RBP
            mov RBX,RDX
            mov ESI,DWORD PTR [RAX+40]
            call .L_4057d0

            test EAX,EAX
            jne .L_4195d0
.L_4195c3:

            xor EAX,EAX
.L_4195c5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_4195d0:

            mov RAX,QWORD PTR [RBX]
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RAX+40]
            call .L_405740

            test EAX,EAX
            je .L_4195c3

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,RBP
            mov ESI,DWORD PTR [RAX+40]
            call .L_4057d0

            test EAX,EAX
            je .L_4195c3

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RAX+40]
            call .L_405740

            test EAX,EAX
            je .L_4195c3

            lea RDX,QWORD PTR [RIP+.L_42f790]
            mov RDI,QWORD PTR [RBX+16]
            xor R8D,R8D
            xor ECX,ECX
            mov RSI,RDX
            call .L_410590

            mov RDI,QWORD PTR [R12+40]
            mov ESI,EAX
            mov R13D,EAX
            call .L_4210b0

            lea RDX,QWORD PTR [RIP+.L_42f790]
            mov RDI,QWORD PTR [RBX+16]
            mov R8D,R13D
            mov RCX,RAX
            mov R14,RAX
            mov RSI,RDX
            call .L_410590

            cmp R13D,EAX
            jne .L_4195c3

            mov RDX,R14
            mov ESI,R13D
            mov RDI,RBP
            call QWORD PTR [RBP+312]

            test EAX,EAX
            je .L_4195c3

            mov RDI,QWORD PTR [R12+40]
            mov RSI,R14
            call .L_421170

            mov EAX,1
            jmp .L_4195c5
.L_41968a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_419690:

            push R15
            push R14
            push R13
            push R12
            mov R13D,R8D
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            mov R12D,ECX
            mov ESI,EDX
            sub RSP,120
.L_4196ac:

            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41970d

            lea R15,QWORD PTR [RSP+80]
            mov ECX,1
            mov EDX,16
            mov RDI,RBX
            mov RSI,R15
            call QWORD PTR [RBX+280]

            cmp EAX,1
            jne .L_41970d

            xor EAX,EAX
            jmp .L_419703
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4196f0:

            lea R14,QWORD PTR [RSP+16]
            mov DWORD PTR [R14+RAX*4],EDX
            add RAX,1
            cmp RAX,16
            je .L_419740
.L_419703:

            movzx EDX,BYTE PTR [R15+RAX*1]
            cmp DL,1
            jne .L_4196f0
.L_41970d:

            xor R12D,R12D
.L_419710:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_419858

            add RSP,120
.L_41972b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419740:

            lea RSI,QWORD PTR [RSP+14]
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_41970d

            xor ESI,ESI
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_41970d

            xor ESI,ESI
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_41970d

            xor ESI,ESI
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_41970d

            mov RDI,QWORD PTR [RBP]
            xor R8D,R8D
            mov EDX,R12D
            mov ECX,R13D
            mov RSI,R14
            call .L_42b1f0

            test RAX,RAX
            mov R12,RAX
            je .L_41970d

            mov R14,QWORD PTR [RAX+48]
            movzx EAX,BYTE PTR [RSP+14]
            cmp AL,1
            je .L_4197d8

            cmp AL,2
            jne .L_41982f

            mov ESI,DWORD PTR [R14+16]
            mov RDX,QWORD PTR [R14]
            mov RDI,RBX
            call .L_405070

            test EAX,EAX
            jne .L_419710
.L_4197c8:

            mov RDI,R12
            xor R12D,R12D
            call .L_42aef0

            jmp .L_419710
.L_4197d8:

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_419710

            xor EBP,EBP
            lea R13,QWORD PTR [RSP+15]
            jmp .L_419812
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4197f0:

            movzx EAX,BYTE PTR [RSP+15]
            mov ESI,EBP
            add EBP,1
            mov RCX,QWORD PTR [R14]
            mov EDX,EAX
            shl EDX,8
            or EAX,EDX
            cmp EBP,DWORD PTR [R14+16]
            mov WORD PTR [RCX+RSI*2],AX
            jae .L_419710
.L_419812:

            mov ECX,1
            mov EDX,1
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,1
            je .L_4197f0

            jmp .L_4197c8
.L_41982f:

            mov RDI,R12
            call .L_42aef0

            movzx ECX,BYTE PTR [RSP+14]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_42f73e]
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_41970d
.L_419858:

            call __stack_chk_fail@PLT
.L_41985d:

            nop
            nop
            nop
.L_419860:

            push R15
            push R14
            mov RDI,RDX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDX
            sub RSP,216
.L_41987a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_410c40

            xor ESI,ESI
            mov RDI,RBX
            mov R12D,EAX
            call .L_4057d0

            test EAX,EAX
            jne .L_4198d0
.L_4198a3:

            xor EAX,EAX
.L_4198a5:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            jne .L_419a0d

            add RSP,216
.L_4198c3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_4198d0:

            mov ESI,R12D
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_4198a3

            mov ESI,DWORD PTR [RBP+8]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_4198a3

            lea R13,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBP+12]
            mov EDX,32
            lea R14,QWORD PTR [RSP+112]
            mov RDI,R13
            call strncpy@PLT

            lea RSI,QWORD PTR [RBP+45]
            mov EDX,32
            mov RDI,R14
            call strncpy@PLT

            mov BYTE PTR [RSP+96],0
            mov BYTE PTR [RSP+144],0
            mov RDX,R13
            mov ESI,32
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_4198a3

            mov RDX,R14
            mov ESI,32
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_4198a3

            test R12D,R12D
            jle .L_419a03

            lea RAX,QWORD PTR [RSP+26]
            xor R13D,R13D
            lea R14,QWORD PTR [RSP+160]
            lea R15,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_4199da
          .byte 0x66
          .byte 0x90
.L_419980:

            mov BYTE PTR [RSP+192],0
            mov RDX,R14
            mov ESI,32
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_4198a3

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,3
            mov RDI,RBX
            call .L_405740

            test EAX,EAX
            je .L_4198a3

            mov ESI,DWORD PTR [RBP+8]
            mov RDX,R15
            mov RDI,RBX
            call .L_405740

            test EAX,EAX
            je .L_4198a3

            add R13D,1
            cmp R12D,R13D
            je .L_419a03
.L_4199da:

            sub RSP,8
.L_4199de:

            xor ECX,ECX
            xor R8D,R8D
            push R15
            mov R9,QWORD PTR [RSP+24]
            mov RDX,R14
            mov ESI,R13D
            mov RDI,RBP
            call .L_410c50

            test EAX,EAX
            pop RDX
            pop RCX
            jne .L_419980

            jmp .L_4198a3
.L_419a03:

            mov EAX,1
            jmp .L_4198a5
.L_419a0d:

            call __stack_chk_fail@PLT
.L_419a12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419a20:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDX
            sub RSP,8
            cmp DWORD PTR [RDX+8],1
            jne .L_419a3c

            mov RAX,QWORD PTR [RDX+16]
            cmp DWORD PTR [RAX+8],1
            je .L_419a70
.L_419a3c:

            mov ESI,DWORD PTR [RBX+40]
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            jne .L_419a58
.L_419a4b:

            xor EAX,EAX
.L_419a4d:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419a58:

            mov RDX,QWORD PTR [RBX+48]
            mov ESI,DWORD PTR [RBX+40]
            add RSP,8
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_405740
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419a70:

            movsd XMM0,QWORD PTR [RAX+16]
            call .L_405d60

            mov ESI,1
            mov RDI,RBP
            mov EBX,EAX
            call .L_4057d0

            test EAX,EAX
            je .L_419a4b

            movzx ESI,BX
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_419a4d
.L_419aa2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419ab0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,184
.L_419ac1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            cmp ECX,16
            ja .L_419c70

            mov RBP,RSI
            mov R15,RDI
            mov R14D,ECX
            mov ESI,EDX
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_419c70

            test R14D,R14D
            je .L_419c58

            lea R13,QWORD PTR [RSP+32]
            lea ESI,DWORD PTR [R14-1]
            lea RAX,QWORD PTR [R13+8]
            mov RDX,R13
            lea RCX,QWORD PTR [RAX+RSI*8]
            jmp .L_419b24
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419b20:

            add RAX,8
.L_419b24:

            cmp RAX,RCX
            mov QWORD PTR [RDX],0
            mov RDX,RAX
            jne .L_419b20

            lea RAX,QWORD PTR [RSI+1]
            xor EBX,EBX
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+28]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_419b86
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419b50:

            mov RDX,QWORD PTR [RSP+8]
            xor ECX,ECX
            mov RSI,RBP
            mov RDI,R15
            call .L_4162f0
.L_419b62:

            test RAX,RAX
            mov QWORD PTR [R13+RBX*8],RAX
            je .L_419bd8

            mov RDI,RBP
            call .L_406220

            test EAX,EAX
            je .L_419bd8

            add RBX,1
            cmp RBX,QWORD PTR [RSP]
            je .L_419c40
.L_419b86:

            mov RDI,RBP
            mov R12D,EBX
            call .L_4060e0

            cmp EAX,1668641398
            je .L_419c20

            cmp EAX,1885434465
            je .L_419b50

            lea RBX,QWORD PTR [RSP+163]
            mov ESI,EAX
            mov RDI,RBX
            call .L_421540

            mov RDI,QWORD PTR [R15+40]
            lea RDX,QWORD PTR [RIP+.L_42f758]
            mov RCX,RBX
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            mov QWORD PTR [RSP+R12*8+32],0
.L_419bd8:

            xor EBP,EBP
.L_419bda:

            xor EBX,EBX
.L_419bdc:

            mov RDI,QWORD PTR [R13+RBX*8]
            add RBX,1
            call .L_422930

            cmp R14D,EBX
            ja .L_419bdc
.L_419bef:

            mov RSI,QWORD PTR [RSP+168]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_419c77

            add RSP,184
.L_419c0c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419c20:

            mov RDX,QWORD PTR [RSP+8]
            xor ECX,ECX
            mov RSI,RBP
            mov RDI,R15
            call .L_415540

            jmp .L_419b62
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419c40:

            mov RDI,QWORD PTR [R15+40]
            mov RDX,R13
            mov ESI,R14D
            call .L_42af10

            mov RBP,RAX
            jmp .L_419bda
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419c58:

            mov RDI,QWORD PTR [R15+40]
            lea RDX,QWORD PTR [RSP+32]
            xor ESI,ESI
            call .L_42af10

            mov RBP,RAX
            jmp .L_419bef
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419c70:

            xor EBP,EBP
            jmp .L_419bef
.L_419c77:

            call __stack_chk_fail@PLT
.L_419c7c:

            nop
            nop
            nop
            nop
.L_419c80:

            push R14
            push R13
            mov R13,RDX
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,32
.L_419c98:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+2]
            mov RDI,RBX
            mov EBP,EAX
            call .L_404f40

            test EAX,EAX
            je .L_419e10

            lea RSI,QWORD PTR [RSP+3]
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_419e10

            movzx EAX,BYTE PTR [RSP+2]
            sub EAX,1
            cmp AL,14
            ja .L_419e10

            movzx EAX,BYTE PTR [RSP+3]
            sub EAX,1
            cmp AL,14
            ja .L_419e10

            xor ESI,ESI
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_419e10

            lea RSI,QWORD PTR [RSP+4]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_419e10

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_419e10

            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_419e10

            lea RSI,QWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_419e10

            lea RSI,QWORD PTR [RSP+20]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_419e10

            movzx EDX,BYTE PTR [RSP+3]
            movzx ESI,BYTE PTR [RSP+2]
            mov RDI,QWORD PTR [R12+40]
            call .L_42b7d0

            test RAX,RAX
            mov R14,RAX
            je .L_419e10

            mov EDX,DWORD PTR [RSP+4]
            sub EBP,8
            test EDX,EDX
            jne .L_419e40
.L_419da0:

            mov EDX,DWORD PTR [RSP+8]
            test EDX,EDX
            jne .L_419e70
.L_419dac:

            mov EDX,DWORD PTR [RSP+12]
            test EDX,EDX
            jne .L_419ea0
.L_419db8:

            mov EDX,DWORD PTR [RSP+16]
            test EDX,EDX
            jne .L_419ed0
.L_419dc4:

            mov EDX,DWORD PTR [RSP+20]
            test EDX,EDX
            jne .L_419de0
.L_419dcc:

            mov DWORD PTR [R13],1
            jmp .L_419e13
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419de0:

            movzx ECX,BYTE PTR [RSP+3]
            add EDX,EBP
            mov RSI,RBX
            mov RDI,R12
            call .L_419ab0

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_42bb10

            test EAX,EAX
            jne .L_419dcc
.L_419e06:

            mov RDI,R14
            call .L_42b910

            nop
            nop
.L_419e10:

            xor R14D,R14D
.L_419e13:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_419f07

            add RSP,32
.L_419e2e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419e40:

            movzx ECX,BYTE PTR [RSP+2]
            add EDX,EBP
            mov RSI,RBX
            mov RDI,R12
            call .L_419ab0

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_42bb10

            test EAX,EAX
            jne .L_419da0

            jmp .L_419e06
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419e70:

            lea RDI,QWORD PTR [R12+40]
            add EDX,EBP
            mov RSI,RBX
            call .L_418180

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_42bb10

            test EAX,EAX
            jne .L_419dac

            jmp .L_419e06
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419ea0:

            movzx ECX,BYTE PTR [RSP+2]
            add EDX,EBP
            mov RSI,RBX
            mov RDI,R12
            call .L_419ab0

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_42bb10

            test EAX,EAX
            jne .L_419db8

            jmp .L_419e06
          .byte 0x90
.L_419ed0:

            movzx ECX,BYTE PTR [RSP+2]
            movzx R8D,BYTE PTR [RSP+3]
            lea RDI,QWORD PTR [R12+40]
            add EDX,EBP
            mov RSI,RBX
            call .L_419690

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_42bb10

            test EAX,EAX
            jne .L_419dc4

            jmp .L_419e06
.L_419f07:

            call __stack_chk_fail@PLT
.L_419f0c:

            nop
            nop
            nop
            nop
.L_419f10:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R13,RDI
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,32
.L_419f28:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+2]
            mov RDI,RBX
            mov R12D,EAX
            call .L_404f40

            test EAX,EAX
            je .L_41a090

            lea RSI,QWORD PTR [RSP+3]
            mov RDI,RBX
            call .L_404f40

            test EAX,EAX
            je .L_41a090

            xor ESI,ESI
            mov RDI,RBX
            call .L_404fd0

            test EAX,EAX
            je .L_41a090

            lea RSI,QWORD PTR [RSP+4]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41a090

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41a090

            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41a090

            lea RSI,QWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41a090

            lea RSI,QWORD PTR [RSP+20]
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41a090

            movzx ESI,BYTE PTR [RSP+2]
            lea EAX,DWORD PTR [RSI-1]
            cmp AL,14
            ja .L_41a090

            movzx EDX,BYTE PTR [RSP+3]
            lea EAX,DWORD PTR [RDX-1]
            cmp AL,14
            ja .L_41a090

            mov RDI,QWORD PTR [R13+40]
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_41a090

            mov EDX,DWORD PTR [RSP+20]
            sub R12D,8
            test EDX,EDX
            jne .L_41a0c0
.L_41a027:

            mov EDX,DWORD PTR [RSP+16]
            test EDX,EDX
            jne .L_41a0f0
.L_41a033:

            mov EDX,DWORD PTR [RSP+12]
            test EDX,EDX
            jne .L_41a130
.L_41a03f:

            mov EDX,DWORD PTR [RSP+8]
            test EDX,EDX
            jne .L_41a160
.L_41a04b:

            mov EDX,DWORD PTR [RSP+4]
            test EDX,EDX
            jne .L_41a060
.L_41a053:

            mov DWORD PTR [R14],1
            jmp .L_41a092
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a060:

            movzx ECX,BYTE PTR [RSP+3]
            add EDX,R12D
            mov RSI,RBX
            mov RDI,R13
            call .L_419ab0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_41a053
.L_41a087:

            mov RDI,RBP
            call .L_42b910

            nop
.L_41a090:

            xor EBP,EBP
.L_41a092:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41a18c

            add RSP,32
.L_41a0ad:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a0c0:

            movzx ECX,BYTE PTR [RSP+2]
            add EDX,R12D
            mov RSI,RBX
            mov RDI,R13
            call .L_419ab0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_41a027

            jmp .L_41a087
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a0f0:

            movzx ECX,BYTE PTR [RSP+2]
            movzx R8D,BYTE PTR [RSP+3]
            lea RDI,QWORD PTR [R13+40]
            add EDX,R12D
            mov RSI,RBX
            call .L_419690

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_41a033

            jmp .L_41a087

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a130:

            movzx ECX,BYTE PTR [RSP+3]
            add EDX,R12D
            mov RSI,RBX
            mov RDI,R13
            call .L_419ab0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_41a03f

            jmp .L_41a087
.L_41a160:

            lea RDI,QWORD PTR [R13+40]
            add EDX,R12D
            mov RSI,RBX
            call .L_418180

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_41a04b

            jmp .L_41a087
.L_41a18c:

            call __stack_chk_fail@PLT
.L_41a191:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a1a0:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            cmp DWORD PTR [RDI+48],67108863
            mov RBX,RDI
            mov RBP,RSI
            ja .L_41a1d0

            mov ESI,1684370275
            mov RDI,RBP
            call .L_406180

            test EAX,EAX
            jne .L_41a200
.L_41a1c7:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41a1d0:

            mov ESI,1835824483
            mov RDI,RBP
            call .L_406180

            test EAX,EAX
            je .L_41a1c7

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov ECX,1
            jmp .L_416d20
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a200:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov ECX,1
            jmp .L_4169c0
.L_41a217:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a220:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov EBX,ECX
            shl RBX,6
            mov R12,RSI
            mov RBP,RDI
            sub RSP,8
            mov RDX,QWORD PTR [RDX+16]
            mov ESI,16
            mov RDI,R12
            add RDX,RBX
            add RDX,20
            call QWORD PTR [R12+312]

            test EAX,EAX
            je .L_41a274

            mov RAX,QWORD PTR [R13+16]
            mov RSI,R12
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+RBX*1+56]
            call .L_41a1a0

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_41a274:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41a27f:

            nop
.L_41a280:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_41a28e:

            mov ESI,DWORD PTR [RDX]
            mov RDI,RBP
            mov R13,RDX
            call .L_4057d0

            test EAX,EAX
            je .L_41a330

            mov EAX,DWORD PTR [R13]
            xor R12D,R12D
            test EAX,EAX
            jne .L_41a316

            jmp .L_41a340
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a2b8:

            mov ESI,DWORD PTR [RBX+4]
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a330

            lea RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_405910

            test EAX,EAX
            je .L_41a330

            mov ESI,DWORD PTR [RBX+16]
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a330

            mov RDX,QWORD PTR [RBX+40]
            mov RSI,RBP
            mov RDI,R14
            call .L_41a1a0

            test EAX,EAX
            je .L_41a330

            mov RDX,QWORD PTR [RBX+48]
            mov RSI,RBP
            mov RDI,R14
            call .L_41a1a0

            test EAX,EAX
            je .L_41a330

            add R12D,1
            cmp R12D,DWORD PTR [R13]
            jae .L_41a340
.L_41a316:

            mov EBX,R12D
            mov RDI,RBP
            shl RBX,6
            add RBX,QWORD PTR [R13+16]
            mov ESI,DWORD PTR [RBX]
            call .L_4057d0

            test EAX,EAX
            jne .L_41a2b8

            nop
.L_41a330:

            xor EAX,EAX
.L_41a332:

            pop RBX
.L_41a333:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a340:

            mov EAX,1
            jmp .L_41a332
.L_41a347:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a350:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM1
            call .L_405e40

            mov RDI,RBX
            mov ESI,EAX
            call .L_4057d0

            test EAX,EAX
            je .L_41a38e

            movsd XMM0,QWORD PTR [RSP+8]
            call .L_405e40

            mov RDI,RBX
            mov ESI,EAX
            call .L_4057d0

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_41a38e:

            add RSP,16
            pop RBX
            ret 
.L_41a394:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a3a0:

            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov ESI,3
            mov RBP,RDX
            sub RSP,8
            call .L_4056b0

            test EAX,EAX
            jne .L_41a3d0
.L_41a3bd:

            xor EAX,EAX
.L_41a3bf:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a3d0:

            xor ESI,ESI
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_41a3bd

            movsd XMM1,QWORD PTR [RBP+8]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP]
            call .L_41a350

            test EAX,EAX
            je .L_41a3bd

            movsd XMM1,QWORD PTR [RBP+32]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP+24]
            call .L_41a350

            test EAX,EAX
            je .L_41a3bd

            movsd XMM0,QWORD PTR [RBP+48]
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RBP+56]
            call .L_41a350

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_41a3bf
.L_41a426:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a430:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,RDX
            mov RBX,RDX
            mov RBP,RSI
            sub RSP,8
.L_41a446:

            call .L_42b6b0

            mov RDI,RBX
            mov R13D,EAX
            call .L_42a220

            test R13D,R13D
            je .L_41a4be

            mov RBX,RAX
            lea EAX,DWORD PTR [R13-1]
            lea R13,QWORD PTR [RBX+RAX*8+8]
.L_41a467:

            mov RDX,QWORD PTR [RBX]
            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            je .L_41a4e0

            cmp EAX,2
            mov RDX,QWORD PTR [RDX+16]
            je .L_41a4d0
.L_41a47a:

            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            js .L_41a4e0

            mov ESI,1885434465
            mov RDI,RBP
            call .L_406180

            test EAX,EAX
            je .L_41a508

            mov RDX,QWORD PTR [RBX]
            mov ECX,1
            mov RSI,RBP
            mov RDI,R12
            call .L_4138f0

            test EAX,EAX
            je .L_41a508
.L_41a4a9:

            mov RDI,RBP
            call .L_4062c0

            test EAX,EAX
            je .L_41a508

            add RBX,8
            cmp RBX,R13
            jne .L_41a467
.L_41a4be:

            add RSP,8
.L_41a4c2:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_41a4d0:

            mov ECX,DWORD PTR [RDX+120]
            test ECX,ECX
            jne .L_41a47a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a4e0:

            mov ESI,1668641398
            mov RDI,RBP
            call .L_406180

            test EAX,EAX
            je .L_41a508

            mov RDX,QWORD PTR [RBX]
            mov ECX,1
            mov RSI,RBP
            mov RDI,R12
            call .L_419a20

            test EAX,EAX
            jne .L_41a4a9
.L_41a508:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41a515:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a520:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RSI
            mov RDI,RSI
            sub RSP,88
.L_41a53a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            call QWORD PTR [RSI+304]

            cmp QWORD PTR [RBX],0
            mov R14D,EAX
            je .L_41a5a6

            lea R12,QWORD PTR [RSP+40]
            xor EAX,EAX
            mov EDX,1668707188
            mov ESI,1
            mov RDI,RBX
            mov RCX,R12
            call .L_42a0b0

            test EAX,EAX
            je .L_41a600
.L_41a5a6:

            mov RDI,RBX
            call .L_42b8b0

            mov RDI,RBX
            mov R12D,EAX
            call .L_42b8e0

            movzx ESI,R12B
            mov RDI,RBP
            mov R15D,EAX
            call .L_405660

            test EAX,EAX
            jne .L_41a6f0
.L_41a5d0:

            xor R12D,R12D
.L_41a5d3:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_41a940

            add RSP,88
.L_41a5ee:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a600:

            lea RAX,QWORD PTR [RSP+48]
            mov ESI,3
            mov RDI,RBX
            mov R8D,1668707188
            mov ECX,1835103334
            mov EDX,1668707188
            mov QWORD PTR [RSP+8],RAX
            push R12
            mov R9,RAX
            xor EAX,EAX
            lea R15,QWORD PTR [RSP+64]
            push R15
            call .L_42a0b0

            test EAX,EAX
            pop RSI
            pop RDI
            jne .L_41a5a6

            lea R10,QWORD PTR [RSP+32]
            push R12
            mov ECX,1668052340
            mov EDX,1668707188
            mov R8D,1668707188
            mov ESI,3
            lea R11,QWORD PTR [RSP+72]
            mov R9,R10
            mov RDI,RBX
            push R11
            mov QWORD PTR [RSP+40],R11
            mov QWORD PTR [RSP+32],R10
            call .L_42a0b0

            pop RDX
            test EAX,EAX
            pop RCX
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            jne .L_41a5a6

            push R12
            push R15
            mov R9D,1835103334
            push QWORD PTR [RSP+24]
            push R11
            mov R8D,1668707188
            push R10
            push 1668707188
            mov ECX,1668052340
            mov EDX,1668707188
            mov ESI,5
            mov RDI,RBX
            call .L_42a0b0

            add RSP,48
            test EAX,EAX
            mov R12D,EAX
            jne .L_41a5a6

            mov RDI,QWORD PTR [R13+40]
            lea RDX,QWORD PTR [RIP+.L_42f628]
            mov ESI,13
            xor EAX,EAX
            call .L_421420

            jmp .L_41a5d3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a6f0:

            movzx ESI,R15B
            mov RDI,RBP
            call .L_405660

            test EAX,EAX
            je .L_41a5d0

            xor ESI,ESI
            mov RDI,RBP
            call .L_4056b0

            test EAX,EAX
            je .L_41a5d0

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            xor ESI,ESI
            mov RDI,RBP
            mov R12D,EAX
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            xor ESI,ESI
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            sub R14D,8
            cmp QWORD PTR [RSP+32],0
            mov RAX,QWORD PTR [RBP+304]
            je .L_41a945

            mov RDI,RBP
            call RAX

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,RBP
            mov RDI,R13
            mov R15D,EAX
            call .L_41a430

            test EAX,EAX
            je .L_41a5d0

            mov RAX,QWORD PTR [RBP+304]
            sub R15D,R14D
            mov DWORD PTR [RSP+16],R15D
.L_41a7c2:

            cmp QWORD PTR [RSP+64],0
            je .L_41a95a

            mov RDI,RBP
            call RAX

            cmp DWORD PTR [RBX+64],1
            mov RCX,QWORD PTR [RSP+64]
            mov RSI,RBP
            mov RDI,R13
            mov R15D,EAX
            sbb EDX,EDX
            not EDX
            add EDX,2
            call .L_401354

            test EAX,EAX
            je .L_41a5d0

            mov RAX,QWORD PTR [RBP+304]
            sub R15D,R14D
            mov DWORD PTR [RSP+8],R15D
.L_41a808:

            cmp QWORD PTR [RSP+48],0
            je .L_41a96f

            mov RDI,RBP
            call RAX

            mov RDX,QWORD PTR [RSP+48]
            mov RSI,RBP
            mov RDI,R13
            mov EBX,EAX
            call .L_41a430

            test EAX,EAX
            je .L_41a5d0

            mov RAX,QWORD PTR [RBP+304]
            sub EBX,R14D
.L_41a83d:

            cmp QWORD PTR [RSP+56],0
            je .L_41a967

            mov RDI,RBP
            call RAX

            mov R15D,EAX
            mov RAX,QWORD PTR [RSP+56]
            mov RDI,RBP
            mov RSI,QWORD PTR [RAX+48]
            call .L_4011ff

            test EAX,EAX
            je .L_41a5d0

            mov RAX,QWORD PTR [RBP+304]
            sub R15D,R14D
.L_41a874:

            cmp QWORD PTR [RSP+40],0
            je .L_41a952

            mov RDI,RBP
            call RAX

            mov RDX,QWORD PTR [RSP+40]
            sub EAX,R14D
            mov RSI,RBP
            mov RDI,R13
            mov R14D,EAX
            call .L_41a430

            test EAX,EAX
            je .L_41a5d0

            mov RAX,QWORD PTR [RBP+304]
.L_41a8aa:

            mov RDI,RBP
            call RAX

            mov ESI,R12D
            mov R13D,EAX
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_41a5d0

            mov ESI,R14D
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            mov ESI,R15D
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            mov ESI,EBX
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            mov ESI,DWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            mov ESI,DWORD PTR [RSP+16]
            mov RDI,RBP
            call .L_4057d0

            test EAX,EAX
            je .L_41a5d0

            xor R12D,R12D
            mov ESI,R13D
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            setne R12B
            jmp .L_41a5d3
.L_41a940:

            call __stack_chk_fail@PLT
.L_41a945:

            mov DWORD PTR [RSP+16],0
            jmp .L_41a7c2
.L_41a952:

            xor R14D,R14D
            jmp .L_41a8aa
.L_41a95a:

            mov DWORD PTR [RSP+8],0
            jmp .L_41a808
.L_41a967:

            xor R15D,R15D
            jmp .L_41a874
.L_41a96f:

            xor EBX,EBX
            jmp .L_41a83d
.L_41a976:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a980:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov RDI,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,88
.L_41a99a:

            lea R12,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            call QWORD PTR [RSI+304]

            mov RCX,R12
            mov DWORD PTR [RSP+12],EAX
            mov EDX,1668707188
            xor EAX,EAX
            mov ESI,1
            mov RDI,RBP
            call .L_42a0b0

            test EAX,EAX
            jne .L_41aa39

            lea R14,QWORD PTR [RSP+48]
            mov ESI,3
            mov RDI,RBP
            mov R9,R12
            mov R8D,1668707188
            mov ECX,1835103334
            push R14
.L_41aa1e:

            mov EDX,1668707188
            lea R13,QWORD PTR [RSP+64]
            push R13
            call .L_42a0b0

            test EAX,EAX
            pop RSI
            pop RDI
.L_41aa33:

            je .L_41acd8
.L_41aa39:

            mov RDI,RBP
            call .L_42b8b0

            mov RDI,RBP
            mov R12D,EAX
            call .L_42b8e0

            movzx ESI,R12B
            mov RDI,RBX
            mov R13D,EAX
            call .L_405660

            test EAX,EAX
            jne .L_41aa90
.L_41aa5f:

            xor R12D,R12D
.L_41aa62:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_41ad81

            add RSP,88
.L_41aa7d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aa90:

            movzx ESI,R13B
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            je .L_41aa5f

            xor ESI,ESI
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_41aa5f

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            xor ESI,ESI
            mov RDI,RBX
            mov R12D,EAX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            xor ESI,ESI
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            xor ESI,ESI
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            xor ESI,ESI
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            xor ESI,ESI
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            mov R13D,DWORD PTR [RSP+12]
            mov RAX,QWORD PTR [RBX+304]
            sub R13D,8
            cmp QWORD PTR [RSP+32],0
            je .L_41ad86

            mov RDI,RBX
            call RAX

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,RBX
            mov RDI,R15
            mov R14D,EAX
            call .L_41a430

            test EAX,EAX
            je .L_41aa5f

            mov RAX,QWORD PTR [RBX+304]
            sub R14D,R13D
            mov DWORD PTR [RSP+16],R14D
.L_41ab57:

            cmp QWORD PTR [RSP+64],0
            je .L_41ad9b

            mov RDI,RBX
            call RAX

            cmp DWORD PTR [RBP+64],1
            mov RCX,QWORD PTR [RSP+64]
            mov RSI,RBX
            mov RDI,R15
            mov R14D,EAX
            sbb EDX,EDX
            not EDX
            add EDX,2
            call .L_401354

            test EAX,EAX
            je .L_41aa5f

            mov RAX,QWORD PTR [RBX+304]
            sub R14D,R13D
            mov DWORD PTR [RSP+12],R14D
.L_41ab9d:

            cmp QWORD PTR [RSP+48],0
            je .L_41adb0

            mov RDI,RBX
            call RAX

            mov RDX,QWORD PTR [RSP+48]
            mov RSI,RBX
            mov RDI,R15
            mov EBP,EAX
            call .L_41a430

            test EAX,EAX
            je .L_41aa5f

            mov RAX,QWORD PTR [RBX+304]
            sub EBP,R13D
.L_41abd2:

            cmp QWORD PTR [RSP+56],0
            je .L_41ada8

            mov RDI,RBX
            call RAX

            mov R14D,EAX
            mov RAX,QWORD PTR [RSP+56]
            mov RDI,RBX
            mov RSI,QWORD PTR [RAX+48]
            call .L_4011ff

            test EAX,EAX
            je .L_41aa5f

            mov RAX,QWORD PTR [RBX+304]
            sub R14D,R13D
.L_41ac09:

            cmp QWORD PTR [RSP+40],0
            je .L_41ad93

            mov RDI,RBX
            call RAX

            mov RDX,QWORD PTR [RSP+40]
            sub EAX,R13D
            mov RSI,RBX
            mov RDI,R15
            mov R13D,EAX
            call .L_41a430

            test EAX,EAX
            je .L_41aa5f

            mov RAX,QWORD PTR [RBX+304]
.L_41ac3f:

            mov RDI,RBX
            call RAX

            mov ESI,R12D
            mov R15D,EAX
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41aa5f

            mov ESI,R13D
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            mov ESI,R14D
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            mov ESI,EBP
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            mov ESI,DWORD PTR [RSP+12]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            mov ESI,DWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aa5f

            xor R12D,R12D
            mov ESI,R15D
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            setne R12B
            jmp .L_41aa62
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41acd8:

            lea R11,QWORD PTR [RSP+32]
            mov ECX,1668052340
            mov EDX,1668707188
            mov R9,R12
            mov R8D,1668707188
            mov ESI,3
            push R11
.L_41acf7:

            mov RDI,RBP
            lea R10,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+32],R11
            push R10
            mov QWORD PTR [RSP+32],R10
            call .L_42a0b0

            pop RDX
            test EAX,EAX
            pop RCX
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            jne .L_41aa39

            push R11
            push R10
            mov R9D,1668052340
            push R14
            push R13
            mov R8D,1668707188
            push R12
            push 1668707188
            mov ECX,1835103334
            mov EDX,1668707188
            mov ESI,5
            mov RDI,RBP
            call .L_42a0b0

            add RSP,48
            test EAX,EAX
            mov R12D,EAX
            jne .L_41aa39

            mov RDI,QWORD PTR [R15+40]
            lea RDX,QWORD PTR [RIP+.L_42f658]
            mov ESI,13
            xor EAX,EAX
            call .L_421420

            jmp .L_41aa62
.L_41ad81:

            call __stack_chk_fail@PLT
.L_41ad86:

            mov DWORD PTR [RSP+16],0
            jmp .L_41ab57
.L_41ad93:

            xor R13D,R13D
            jmp .L_41ac3f
.L_41ad9b:

            mov DWORD PTR [RSP+12],0
            jmp .L_41ab9d
.L_41ada8:

            xor R14D,R14D
            jmp .L_41ac09
.L_41adb0:

            xor EBP,EBP
            jmp .L_41abd2
.L_41adb7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41adc0:

            mov RDI,RSI
            jmp .L_42b9f0
.L_41adc8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41add0:

            mov RDI,RSI
            jmp .L_4104d0
.L_41add8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ade0:

            push R15
            push R14
            mov R14,R9
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov EDX,4
            mov RBX,RSI
            xor EBP,EBP
            sub RSP,56
.L_41adfe:

            mov QWORD PTR [RSP+8],RDI
            mov RDI,QWORD PTR [RSI+8]
            mov ESI,R12D
            mov DWORD PTR [RSP+20],ECX
            mov QWORD PTR [RSP+24],R8
            call .L_421110

            test RAX,RAX
            je .L_41aee8

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,4
            mov ESI,R12D
            mov R13,RAX
            call .L_421110

            test RAX,RAX
            mov R15,RAX
            je .L_41aff0

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            test R12D,R12D
            mov DWORD PTR [RSP+40],EAX
            jne .L_41aec0

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            mov ESI,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+8],EAX
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41aece
.L_41ae71:

            mov ESI,DWORD PTR [RSP+8]
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41aece

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R13
            mov EBP,1
            call .L_421170

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R15
            call .L_421170

            jmp .L_41aee8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aea8:

            xor ESI,ESI
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aece

            lea EAX,DWORD PTR [RBP+1]
            cmp R12D,EAX
            je .L_41af00

            mov EBP,EAX
.L_41aec0:

            xor ESI,ESI
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            jne .L_41aea8
.L_41aece:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R13
            xor EBP,EBP
            call .L_421170

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R15
            call .L_421170
.L_41aee8:

            add RSP,56
.L_41aeec:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41af00:

            lea RAX,QWORD PTR [RBP+1]
            mov DWORD PTR [RSP+44],R12D
            xor EBP,EBP
            mov QWORD PTR [RSP+32],RAX
            jmp .L_41af33
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41af18:

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            sub EAX,R12D
            mov DWORD PTR [R15+RBP*4],EAX
            add RBP,1
            cmp QWORD PTR [RSP+32],RBP
            je .L_41af70
.L_41af33:

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            mov R12D,EAX
            sub EAX,DWORD PTR [RSP+20]
            xor R8D,R8D
            mov ECX,EBP
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,RBX
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [R13+RBP*4],EAX
            call R14

            test EAX,EAX
            jne .L_41af18

            jmp .L_41aece

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41af70:

            mov RDI,RBX
            mov R12D,DWORD PTR [RSP+44]
            call QWORD PTR [RBX+304]

            mov ESI,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+8],EAX
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41aece

            lea EAX,DWORD PTR [R12-1]
            mov RBP,R13
            mov R14,R15
            lea R12,QWORD PTR [R13+RAX*4+4]
            jmp .L_41afd4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41afb0:

            mov ESI,DWORD PTR [R14]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            je .L_41aece

            add RBP,4
            add R14,4
            cmp R12,RBP
            je .L_41ae71
.L_41afd4:

            mov ESI,DWORD PTR [RBP]
            mov RDI,RBX
            call .L_4057d0

            test EAX,EAX
            jne .L_41afb0

            jmp .L_41aece
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aff0:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R13
            call .L_421170

            jmp .L_41aee8
.L_41b001:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b010:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov RBP,RDX
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            mov R14,QWORD PTR [RDX+48]
            call QWORD PTR [RSI+304]

            movzx ESI,WORD PTR [RBP+16]
            mov RDI,RBX
            mov R12D,EAX
            call .L_4056b0

            test EAX,EAX
            jne .L_41b050
.L_41b041:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b050:

            movzx ESI,WORD PTR [RBP+16]
            mov RDI,RBX
            call .L_4056b0

            test EAX,EAX
            je .L_41b041

            mov EDX,DWORD PTR [RBP+16]
            lea ECX,DWORD PTR [R12-8]
            lea R9,QWORD PTR [RIP+.L_417ef0]
            mov R8,R14
            mov RSI,RBX
            mov RDI,R13
            call .L_41ade0

            test EAX,EAX
            setne AL
            pop RBX
            movzx EAX,AL
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41b08e:

            nop
            nop
.L_41b090:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            mov RDI,RSI
            sub RSP,8
.L_41b0a6:

            call QWORD PTR [RSI+304]

            mov ESI,DWORD PTR [RBP]
            mov RDI,RBX
            mov R12D,EAX
            call .L_4057d0

            test EAX,EAX
            je .L_41b0e3

            mov EDX,DWORD PTR [RBP]
            lea ECX,DWORD PTR [R12-8]
            lea R9,QWORD PTR [RIP+.L_41a220]
            mov R8,RBP
            mov RSI,RBX
            mov RDI,R13
            call .L_41ade0

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_41b0e3:

            add RSP,8
.L_41b0e7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41b0ee:

            nop
            nop
.L_41b0f0:

            mov RDI,RSI
            jmp .L_42b9f0
.L_41b0f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b100:

            mov RDI,RSI
            jmp .L_4104d0
.L_41b108:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b110:

            mov RDI,RSI
            jmp .L_4229c0
.L_41b118:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b120:

            mov RDI,RSI
            jmp .L_4104d0
.L_41b128:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b130:

            mov RDI,RSI
            jmp .L_42b9f0
.L_41b138:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b140:

            mov RDI,RSI
            jmp .L_42b9f0
.L_41b148:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b150:

            mov RDI,RSI
            jmp .L_410a30
.L_41b158:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b160:

            mov RDI,RSI
            jmp .L_410f50
.L_41b168:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b170:

            mov RDI,RSI
            jmp .L_410480
.L_41b178:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b180:

            mov RDI,RSI
            jmp .L_410480
.L_41b188:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b190:

            mov RDI,RSI
            jmp .L_42b910
.L_41b198:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b1a0:

            mov RDI,RSI
            jmp .L_42b910
.L_41b1a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b1b0:

            mov RDI,RSI
            jmp .L_410ec0
.L_41b1b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b1c0:

            mov RDI,RSI
            jmp .L_42b910
.L_41b1c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b1d0:

            mov RDI,RSI
            jmp .L_4109e0
.L_41b1d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b1e0:

            mov RDI,RSI
            jmp .L_410480
.L_41b1e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b1f0:

            mov RDI,RSI
            jmp .L_422930
.L_41b1f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b200:

            mov RDI,RSI
            jmp .L_42b910
.L_41b208:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b210:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R12D,R8D
            push RBX
            mov RBX,RSI
            mov ESI,11
            mov RBP,RDX
            sub RSP,32
.L_41b22d:

            mov RDI,QWORD PTR [RDI+40]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_4068a0

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            mov R14,RAX
            call .L_405110

            test EAX,EAX
            jne .L_41b280
.L_41b25a:

            xor EAX,EAX
.L_41b25c:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41b333

            add RSP,32
.L_41b274:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b280:

            xor ESI,ESI
            mov RDI,RBX
            call .L_405110

            test EAX,EAX
            je .L_41b25a

            mov RAX,QWORD PTR [R14]
            mov ESI,DWORD PTR [RSP+8]
            test RAX,RAX
            jne .L_41b2a9

            jmp .L_41b2e8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b2a0:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_41b2e8
.L_41b2a9:

            cmp ESI,DWORD PTR [RAX]
            jne .L_41b2a0
.L_41b2ad:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_41b329

            lea RDX,QWORD PTR [RSP+12]
            mov ECX,R12D
            mov RSI,RBX
            mov RDI,R13
            call RAX

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_41b25c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b2e8:

            lea RAX,QWORD PTR [RIP+.L_640e20]
            nop
.L_41b2f0:

            cmp ESI,DWORD PTR [RAX]
            je .L_41b2ad

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_41b2f0

            lea RBX,QWORD PTR [RSP+19]
            mov RDI,RBX
            call .L_421540

            mov RDI,QWORD PTR [R13+40]
            lea RDX,QWORD PTR [RIP+.L_42f770]
            mov RCX,RBX
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            jmp .L_41b25a
.L_41b329:

            mov EAX,1
            jmp .L_41b25c
.L_41b333:

            call __stack_chk_fail@PLT
.L_41b338:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b340:

            test RSI,RSI
            je .L_41b350

            mov EDX,8
            jmp .L_413020
          .byte 0x90
.L_41b350:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641d10]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [RBX+80],RAX
            pop RBX
            ret 
.L_41b36f:

            nop
.L_41b370:

            test RSI,RSI
            je .L_41b380

            mov EDX,11
            jmp .L_413020
          .byte 0x90
.L_41b380:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641d08]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [RBX+104],RAX
            pop RBX
            ret 
.L_41b39f:

            nop
.L_41b3a0:

            mov EDX,8
            jmp .L_4130f0
.L_41b3aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b3b0:

            mov EDX,11
            jmp .L_4130f0
.L_41b3ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b3c0:

            push RBX
            mov EBX,ESI
            mov ESI,8
            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_41b3e9

            jmp .L_41b3f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b3e0:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_41b3f0
.L_41b3e9:

            cmp EBX,DWORD PTR [RAX]
            jne .L_41b3e0
.L_41b3ed:

            pop RBX
            ret 
          .byte 0x90
.L_41b3f0:

            lea RAX,QWORD PTR [RIP+.L_640660]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b400:

            cmp EBX,DWORD PTR [RAX]
            je .L_41b3ed

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_41b400

            pop RBX
            ret 
.L_41b40f:

            nop
.L_41b410:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_41b41b:

            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_41b498

            mov RAX,QWORD PTR [RSI+88]
            mov QWORD PTR [RSP],0
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_41b4d0

            xor EBP,EBP
            jmp .L_41b461
.L_41b450:

            mov RBX,QWORD PTR [RBX+104]
            mov RDI,QWORD PTR [R12+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_41b4d0
.L_41b461:

            mov EDX,112
            mov RSI,RBX
            call .L_4212e0

            test RAX,RAX
            je .L_41b4ae

            test RBP,RBP
            mov QWORD PTR [RAX+104],0
            je .L_41b484

            mov QWORD PTR [RBP+104],RAX
.L_41b484:

            cmp QWORD PTR [RSP],0
            jne .L_41b450

            mov QWORD PTR [RSP],RAX
            jmp .L_41b450
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b498:

            lea RSI,QWORD PTR [RIP+.L_641d00]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+88],RAX
.L_41b4ae:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41b4e4

            add RSP,16
.L_41b4c2:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b4d0:

            mov RSI,RSP
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+88],RAX
            jmp .L_41b4ae
.L_41b4e4:

            call __stack_chk_fail@PLT
.L_41b4e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b4f0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_41b4f7:

            mov RBX,RSI
            mov ESI,9
            call .L_4068a0

            test RBX,RBX
            mov R12,RAX
            je .L_41b578

            mov ESI,112
            mov RDI,RBP
            call .L_4064d0

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_41b56f

            movdqu XMM0,XMMWORD PTR [RBX+32]
            mov EAX,DWORD PTR [RBX+24]
            movups XMMWORD PTR [RDX+8],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            mov DWORD PTR [RDX],EAX
            mov RAX,QWORD PTR [R12]
            movups XMMWORD PTR [RDX+24],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movups XMMWORD PTR [RDX+40],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movups XMMWORD PTR [RDX+56],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movups XMMWORD PTR [RDX+72],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            mov QWORD PTR [RDX+104],RAX
            mov EAX,1
            movups XMMWORD PTR [RDX+88],XMM0
            mov QWORD PTR [R12],RDX
.L_41b56f:

            pop RBX
.L_41b570:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b578:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_41b589:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b590:

            push RBX
            mov EBX,ESI
            mov ESI,9
            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_41b5b9

            jmp .L_41b5c8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b5b0:

            mov RAX,QWORD PTR [RAX+104]
            test RAX,RAX
            je .L_41b5c8
.L_41b5b9:

            cmp DWORD PTR [RAX],EBX
            jne .L_41b5b0
.L_41b5bd:

            add RAX,8
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b5c8:

            lea RAX,QWORD PTR [RIP+.L_63ea60]
            nop
.L_41b5d0:

            cmp DWORD PTR [RAX],EBX
            je .L_41b5bd

            mov RAX,QWORD PTR [RAX+104]
            test RAX,RAX
            jne .L_41b5d0

            pop RBX
            ret 
.L_41b5df:

            nop
.L_41b5e0:

            movzx EAX,WORD PTR [RDI]
            mov WORD PTR [RSI],AX
            ret 
.L_41b5e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b5f0:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDX
            sub RSP,64
.L_41b602:

            mov EDX,DWORD PTR [RDX+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test EDX,EDX
            jle .L_41b64f

            lea R14,QWORD PTR [RSP-2]
            mov R13,RDI
            mov EBP,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b630:

            mov RDX,QWORD PTR [RBX+RBP*8+72]
            lea RSI,QWORD PTR [R14+RBP*2]
            mov RDI,R13
            add R13,2
            call QWORD PTR [RBX+RBP*8+8]

            mov EAX,EBP
            add RBP,1
            cmp DWORD PTR [RBX+8],EAX
            jg .L_41b630
.L_41b64f:

            lea R13,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RBX+152]
            mov RDI,RSP
            mov RSI,R13
            call QWORD PTR [RBX+144]

            mov EAX,DWORD PTR [RBX+12]
            test EAX,EAX
            jle .L_41b69d

            xor EBP,EBP
.L_41b670:

            mov RAX,QWORD PTR [RBX+168]
            lea RDI,QWORD PTR [R13+RBP*2]
            mov RSI,R12
            add R12,2
            mov RDX,QWORD PTR [RAX+RBP*8]
            mov RAX,QWORD PTR [RBX+160]
            call QWORD PTR [RAX+RBP*8]

            lea EAX,DWORD PTR [RBP+1]
            add RBP,1
            cmp DWORD PTR [RBX+12],EAX
            jg .L_41b670
.L_41b69d:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41b6ba

            add RSP,64
.L_41b6b1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41b6ba:

            call __stack_chk_fail@PLT
.L_41b6bf:

            nop
.L_41b6c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_41b6ca:

            movzx EAX,WORD PTR [RDI]
            movzx R8D,BYTE PTR [RDI+3]
            movzx EDI,BYTE PTR [RDI+5]
            mov R14,QWORD PTR [RDX+8]
            movzx EAX,AH
            mov R15D,DWORD PTR [RDX+R8*4+2576]
            movzx R10D,WORD PTR [RDX+R8*2+528]
            movzx R9D,WORD PTR [RDX+RAX*2+16]
            mov EBX,DWORD PTR [RDX+RAX*4+1552]
            mov R11D,DWORD PTR [RDX+RDI*4+3600]
            mov R12D,DWORD PTR [R14+16]
            mov RCX,QWORD PTR [R14+120]
            movzx R8D,WORD PTR [RDX+RDI*2+1040]
            mov R13D,EBX
            test R9D,R9D
            mov DWORD PTR [RSP-32],R11D
            je .L_41b725

            add R13D,DWORD PTR [R14+92]
.L_41b725:

            test R10D,R10D
            mov R11D,R15D
            je .L_41b731

            add R11D,DWORD PTR [R14+88]
.L_41b731:

            mov EAX,DWORD PTR [RSP-32]
            test R8D,R8D
            mov EBP,EAX
            je .L_41b742

            add EAX,DWORD PTR [R14+84]
            mov EBP,EAX
.L_41b742:

            test R12D,R12D
            jle .L_41b950

            cmp R9D,R10D
            mov R14D,DWORD PTR [RSP-32]
            lea EDX,DWORD PTR [RBX+R15*1]
            setge BYTE PTR [RSP-14]
            cmp R10D,R8D
            movzx EAX,BYTE PTR [RSP-14]
            setge BYTE PTR [RSP-13]
            movzx EDI,BYTE PTR [RSP-13]
            add R12D,R15D
            add R12D,DWORD PTR [RSP-32]
            mov DWORD PTR [RSP-20],R15D
            and EAX,EDI
            add R12D,R13D
            mov BYTE PTR [RSP-15],AL
            lea EAX,DWORD PTR [R14+RDX*1]
            add R14D,R15D
            mov DWORD PTR [RSP-28],R12D
            mov R12D,EBX
            sub EDX,R14D
            sub R12D,R14D
            sub EBX,R15D
            sub EDX,R13D
            sub R12D,R13D
            sub EBX,R13D
            add EDX,EBP
            add R12D,R11D
            cdqe 
            mov DWORD PTR [RSP-12],EDX
            lea EDX,DWORD PTR [RBX+R11*1]
            add R12D,EBP
            lea RDI,QWORD PTR [RCX+RAX*2]
            mov DWORD PTR [RSP-24],R14D
            lea EAX,DWORD PTR [R13+R14*1]
            mov DWORD PTR [RSP-4],R12D
            mov DWORD PTR [RSP-8],EDX
            jmp .L_41b84d
.L_41b7d0:

            movsxd R12,EAX
            movzx R14D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-20]
            add R12D,EAX
            mov R15D,R14D
            movsxd R12,R12D
            sub R15D,EBX
            movzx R13D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            mov EBX,R15D
            imul EBX,R9D
            add R12D,EBP
            add R12D,EAX
            movsxd R12,R12D
            movzx R12D,WORD PTR [RCX+R12*2]
            sub R12D,R13D
            sub R13D,R14D
            imul R13D,R10D
            imul R12D,R8D
            add R13D,EBX
            lea R12D,DWORD PTR [R12+R13*1+32769]
.L_41b827:

            mov EBX,R12D
            sar EBX,16
            add EBX,R12D
            sar EBX,16
            add EDX,EBX
.L_41b835:

            mov WORD PTR [RSI],DX
            add RDI,2
            add RSI,2
            add EAX,1
            cmp DWORD PTR [RSP-28],EAX
            je .L_41b950
.L_41b84d:

            movzx EBX,WORD PTR [RDI]
            cmp BYTE PTR [RSP-15],0
            mov EDX,EBX
            jne .L_41b7d0

            cmp R9D,R8D
            setge R12B
            cmp R10D,R8D
            setle R13B
            test R12B,R12B
            je .L_41b8d8

            test R13B,R13B
            je .L_41b8d8

            movsxd R12,EAX
            movzx R14D,WORD PTR [RCX+R12*2]
            mov R12D,EBP
            sub R12D,DWORD PTR [RSP-32]
            add R12D,EAX
            mov R15D,R14D
            movsxd R12,R12D
            sub R15D,EBX
            movzx R13D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            mov EBX,R15D
            imul EBX,R9D
            add R12D,EBP
            add R12D,EAX
            movsxd R12,R12D
            movzx R12D,WORD PTR [RCX+R12*2]
            sub R12D,R13D
            sub R13D,R14D
            imul R12D,R10D
            imul R13D,R8D
            add R12D,EBX
            lea R12D,DWORD PTR [R12+R13*1+32769]
            jmp .L_41b827
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b8d8:

            cmp R9D,R8D
            setle R14B
            jg .L_41b960

            cmp BYTE PTR [RSP-14],0
            je .L_41b960

            mov R12D,EBP
            sub R12D,DWORD PTR [RSP-32]
            mov R15D,DWORD PTR [RSP-12]
            add R12D,EAX
            movsxd R12,R12D
            movzx R14D,WORD PTR [RCX+R12*2]
            lea R12D,DWORD PTR [R15+RAX*1]
            movsxd R12,R12D
            movzx R13D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            add R12D,EBP
            add R12D,EAX
            movsxd R12,R12D
            movzx R12D,WORD PTR [RCX+R12*2]
            sub R12D,R14D
            sub R14D,R13D
            sub R13D,EBX
            imul R12D,R10D
            imul R14D,R9D
            imul R13D,R8D
            add R14D,R12D
            lea R12D,DWORD PTR [R14+R13*1+32769]
            jmp .L_41b827
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b950:

            pop RBX
.L_41b951:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b960:

            cmp R9D,R10D
            setle R15B
            test R12B,R12B
            je .L_41b9d0

            test R15B,R15B
            je .L_41b9d0

            mov R14D,R11D
            sub R14D,DWORD PTR [RSP-24]
            mov R12D,R11D
            mov R15D,DWORD PTR [RSP-8]
            sub R12D,DWORD PTR [RSP-20]
            lea R13D,DWORD PTR [R15+RAX*1]
            add R14D,EBP
            add R12D,EAX
            add R14D,EAX
            movsxd R12,R12D
            movsxd R13,R13D
            movsxd R14,R14D
            movzx R12D,WORD PTR [RCX+R12*2]
            movzx R13D,WORD PTR [RCX+R13*2]
            movzx R14D,WORD PTR [RCX+R14*2]
            sub R14D,R12D
            sub R12D,R13D
            sub R13D,EBX
            imul R12D,R9D
            imul R13D,R10D
            imul R14D,R8D
            add R12D,R13D
.L_41b9c3:

            lea R12D,DWORD PTR [R12+R14*1+32769]
            jmp .L_41b827
.L_41b9d0:

            test R14B,R14B
            je .L_41ba40

            cmp BYTE PTR [RSP-13],0
            je .L_41ba40

            mov R15D,DWORD PTR [RSP-4]
            lea R12D,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP-8]
            movsxd R12,R12D
            movzx R13D,WORD PTR [RCX+R12*2]
            lea R12D,DWORD PTR [R15+RAX*1]
            movsxd R12,R12D
            movzx R14D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            add R12D,EBP
            mov R15D,R14D
            add R12D,EAX
            sub R15D,EBX
            movsxd R12,R12D
            mov EBX,R15D
            movzx R12D,WORD PTR [RCX+R12*2]
            imul EBX,R10D
            sub R12D,R13D
            sub R13D,R14D
            imul R12D,R9D
            imul R13D,R8D
            add R12D,EBX
            lea R12D,DWORD PTR [R12+R13*1+32769]
            jmp .L_41b827
          .byte 0x90
.L_41ba40:

            test R13B,R13B
            je .L_41b835

            test R15B,R15B
            je .L_41b835

            mov R15D,DWORD PTR [RSP-4]
            lea R12D,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP-12]
            movsxd R12,R12D
            movzx R13D,WORD PTR [RCX+R12*2]
            lea R12D,DWORD PTR [R15+RAX*1]
            movsxd R12,R12D
            movzx R14D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            add R12D,EBP
            add R12D,EAX
            movsxd R12,R12D
            movzx R12D,WORD PTR [RCX+R12*2]
            sub R12D,R13D
            sub R13D,R14D
            sub R14D,EBX
            imul R12D,R9D
            imul R13D,R10D
            imul R14D,R8D
            add R12D,R13D
            jmp .L_41b9c3
.L_41baa7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bab0:

            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            jle .L_41bae4

            mov R9,QWORD PTR [RDX+16]
            sub EAX,1
            lea R8,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
.L_41bac8:

            movzx EDX,WORD PTR [RDI+RAX*1]
            mov RCX,QWORD PTR [R9+RAX*4]
            movzx EDX,DH
            movzx EDX,WORD PTR [RCX+RDX*2]
            mov WORD PTR [RSI+RAX*1],DX
            add RAX,2
            cmp R8,RAX
            jne .L_41bac8
.L_41bae4:

            ret 
.L_41bae6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41baf0:

            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            jle .L_41bb21

            mov R9,QWORD PTR [RDX+16]
            sub EAX,1
            lea R8,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
.L_41bb08:

            movzx ECX,WORD PTR [RDI+RAX*1]
            mov RDX,QWORD PTR [R9+RAX*4]
            movzx EDX,WORD PTR [RDX+RCX*2]
            mov WORD PTR [RSI+RAX*1],DX
            add RAX,2
            cmp R8,RAX
            jne .L_41bb08
.L_41bb21:

            ret 
.L_41bb23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bb30:

            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            je .L_41bb59

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bb48:

            movzx EDX,WORD PTR [RDI+RAX*1]
            mov WORD PTR [RSI+RAX*1],DX
            add RAX,2
            cmp RAX,RCX
            jne .L_41bb48
.L_41bb59:

            ret 
.L_41bb5b:

            nop
            nop
            nop
            nop
            nop
.L_41bb60:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+2]
            movzx EDI,BYTE PTR [RDI+4]
            mov R8D,DWORD PTR [RDX+3080]
            mov R10D,DWORD PTR [RDX+3096]
            mov EAX,DWORD PTR [RDX+RAX*4+8]
            mov ECX,DWORD PTR [RDX+RCX*4+1032]
            mov R9D,DWORD PTR [RDX+RDI*4+2056]
            mov EDI,DWORD PTR [RDX+3084]
            imul R8D,EAX
            imul EDI,ECX
            add R8D,EDI
            mov EDI,DWORD PTR [RDX+3088]
            imul R10D,ECX
            imul ECX,DWORD PTR [RDX+3108]
            imul EDI,R9D
            add R8D,EDI
            mov EDI,DWORD PTR [RDX+3092]
            add R8D,DWORD PTR [RDX+3116]
            imul EDI,EAX
            imul EAX,DWORD PTR [RDX+3104]
            add R8D,8192
            add EDI,R10D
            mov R10D,DWORD PTR [RDX+3100]
            sar R8D,14
            imul R10D,R9D
            imul R9D,DWORD PTR [RDX+3112]
            add ECX,EAX
            add EDI,R10D
            add EDI,DWORD PTR [RDX+3120]
            lea EAX,DWORD PTR [RCX+R9*1]
            add EAX,DWORD PTR [RDX+3124]
            add EDI,8192
            sar EDI,14
            xor R9D,R9D
            add EAX,8192
            sar EAX,14
            test R8D,R8D
            js .L_41bc2b

            cmp R8D,16384
            mov R9D,16384
            cmovle R9,R8
.L_41bc2b:

            xor R8D,R8D
            test EDI,EDI
            js .L_41bc42

            cmp EDI,16384
            mov R8D,16384
            cmovle R8,RDI
.L_41bc42:

            xor ECX,ECX
            test EAX,EAX
            js .L_41bc56

            cmp EAX,16384
            mov ECX,16384
            cmovle RCX,RAX
.L_41bc56:

            movzx EAX,WORD PTR [RDX+R9*2+3128]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+R8*2+35898]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+RCX*2+68668]
            mov WORD PTR [RSI+4],AX
            ret 
.L_41bc7c:

            nop
            nop
            nop
            nop
.L_41bc80:

            push R12
            push RBP
            push RBX
            sub RSP,144
.L_41bc8b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+8]
            cmp EAX,15
            ja .L_41bdb6

            cmp DWORD PTR [RDX+12],15
            mov R12,RDX
            ja .L_41bdda

            test EAX,EAX
            mov RBP,RSI
            mov R8,RSP
            je .L_41bcff

            lea ECX,DWORD PTR [RAX-1]
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            xor EDX,EDX
            mov R8,RSP
            add RCX,1
            nop
            nop
            nop
.L_41bcd8:

            movzx EAX,WORD PTR [RDI+RDX*2]
            pxor XMM0,XMM0
            pxor XMM6,XMM6
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM1
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [R8+RDX*4],XMM6
            add RDX,1
            cmp RCX,RDX
            jne .L_41bcd8
.L_41bcff:

            lea RBX,QWORD PTR [RSP+64]
            mov RDX,R12
            mov RDI,R8
            mov RSI,RBX
            call .L_42b9c0

            mov EAX,DWORD PTR [R12+12]
            test EAX,EAX
            je .L_41bd92

            lea ECX,DWORD PTR [RAX-1]
            pxor XMM2,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            xor EDX,EDX
            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            add RCX,1
            movsd XMM5,QWORD PTR [RIP+.L_42df38]
            mov ESI,4294967295
            movsd XMM4,QWORD PTR [RIP+.L_42df40]
            nop
            nop
            nop
.L_41bd50:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtss2sd XMM0,DWORD PTR [RBX+RDX*4]
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_41bd84

            ucomisd XMM0,XMM1
            mov EAX,ESI
            jae .L_41bd84

            subsd XMM0,XMM5
            addsd XMM0,XMM4
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_41bd84:

            mov WORD PTR [RBP+RDX*2],AX
            add RDX,1
            cmp RDX,RCX
            jne .L_41bd50
.L_41bd92:

            mov RSI,QWORD PTR [RSP+136]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_41bdd5

            add RSP,144
.L_41bdb1:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41bdb6:

            lea RCX,QWORD PTR [RIP+.L_42f908]
            lea RSI,QWORD PTR [RIP+.L_42f844]
            lea RDI,QWORD PTR [RIP+.L_42f84d]
            mov EDX,415
            call __assert_fail@PLT
.L_41bdd5:

            call __stack_chk_fail@PLT
.L_41bdda:

            lea RCX,QWORD PTR [RIP+.L_42f908]
            lea RSI,QWORD PTR [RIP+.L_42f844]
            lea RDI,QWORD PTR [RIP+.L_42f869]
            mov EDX,416
            call __assert_fail@PLT
.L_41bdf9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41be00:

            push R12
            push RBP
            mov EDX,176
            push RBX
.L_41be09:

            mov R12,RDI
            mov RBX,RSI
            call .L_421190

            test RAX,RAX
            mov RBP,RAX
            je .L_41be5c

            mov EAX,DWORD PTR [RBX+12]
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,R12
            lea EDX,DWORD PTR [RAX*8]
            call .L_421190

            mov QWORD PTR [RBP+160],RAX
            mov EAX,DWORD PTR [RBX+12]
            mov RDI,R12
            mov RSI,QWORD PTR [RBX+168]
            lea EDX,DWORD PTR [RAX*8]
            call .L_421190

            mov QWORD PTR [RBP+168],RAX
.L_41be5c:

            mov RAX,RBP
            pop RBX
.L_41be60:

            pop RBP
            pop R12
            ret 
.L_41be64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41be70:

            mov EDX,4624
            jmp .L_421190
.L_41be7a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41be80:

            mov EDX,101440
            jmp .L_421190
.L_41be8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41be90:

            push R14
            push R13
            mov EDX,24
            push R12
            push RBP
            mov R13,RDI
            push RBX
.L_41bea0:

            call .L_421190

            test RAX,RAX
            mov RBP,RAX
            je .L_41bf0a

            mov EAX,DWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RBP+16]
            mov RDI,R13
            lea EDX,DWORD PTR [RAX*8]
            call .L_421190

            mov EDX,DWORD PTR [RBP+8]
            mov QWORD PTR [RBP+16],RAX
            test EDX,EDX
            jle .L_41bf0a

            xor R14D,R14D
            xor R12D,R12D
            jmp .L_41bee4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bee0:

            mov RAX,QWORD PTR [RBP+16]
.L_41bee4:

            lea RBX,QWORD PTR [RAX+R14*1]
            mov EAX,DWORD PTR [RBP+12]
            mov RDI,R13
            add R12D,1
            add R14,8
            mov RSI,QWORD PTR [RBX]
            lea EDX,DWORD PTR [RAX+RAX*1]
            call .L_421190

            cmp DWORD PTR [RBP+8],R12D
            mov QWORD PTR [RBX],RAX
            jg .L_41bee0
.L_41bf0a:

            pop RBX
.L_41bf0b:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41bf16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bf20:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RSI,QWORD PTR [RSI+160]
            call .L_421170

            mov RSI,QWORD PTR [RBP+168]
            mov RDI,RBX
            call .L_421170

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_421170
.L_41bf58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bf60:

            jmp .L_421170
.L_41bf65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bf70:

            test RSI,RSI
            je .L_41bf80

            jmp .L_421170
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bf80:

            ret 
.L_41bf82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bf90:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EAX,DWORD PTR [RSI+8]
            mov RBP,RSI
            test EAX,EAX
            jle .L_41bfc4

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
.L_41bfa8:

            mov RAX,QWORD PTR [RBP+16]
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+RBX*8]
            call .L_421170

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RBP+8],EAX
            jg .L_41bfa8
.L_41bfc4:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,R12
            call .L_421170

            pop RBX
            mov RSI,RBP
            mov RDI,R12
            pop RBP
            pop R12
            jmp .L_421170
.L_41bfdf:

            nop
.L_41bfe0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov ESI,176
            push RBP
            push RBX
            mov R13,RDI
            mov R14,RCX
            mov R12D,R8D
            mov RBP,R9
            sub RSP,24
.L_41c002:

            mov DWORD PTR [RSP+12],EDX
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_41c124

            mov EDX,DWORD PTR [RSP+12]
            mov DWORD PTR [RAX+12],R12D
            test EDX,EDX
            mov DWORD PTR [RAX+8],EDX
            jle .L_41c073

            xor EAX,EAX
            lea RDI,QWORD PTR [RIP+.L_41b5e0]
            jmp .L_41c058
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c038:

            mov RCX,QWORD PTR [R14+RAX*8]
            mov RSI,QWORD PTR [RCX]
            mov RCX,QWORD PTR [RSI+128]
            mov QWORD PTR [RBX+RAX*8+80],RSI
            mov QWORD PTR [RBX+RAX*8+16],RCX
            add RAX,1
            cmp EDX,EAX
            jle .L_41c073
.L_41c058:

            test R14,R14
            jne .L_41c038

            mov QWORD PTR [RBX+RAX*8+80],0
            mov QWORD PTR [RBX+RAX*8+16],RDI
            add RAX,1
            cmp EDX,EAX
            jg .L_41c058
.L_41c073:

            mov RAX,QWORD PTR [R15+128]
            mov EDX,8
            mov ESI,R12D
            mov RDI,R13
            mov QWORD PTR [RBX+152],R15
            mov QWORD PTR [RBX+144],RAX
            call .L_421110

            mov EDX,8
            mov QWORD PTR [RBX+160],RAX
            mov ESI,R12D
            mov RDI,R13
            call .L_421110

            test R12D,R12D
            mov QWORD PTR [RBX+168],RAX
            jle .L_41c124

            lea EDX,DWORD PTR [R12-1]
            mov RDI,QWORD PTR [RBX+160]
            lea R9,QWORD PTR [RIP+.L_41b5e0]
            lea R8,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            jmp .L_41c105
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c0e0:

            mov RCX,QWORD PTR [RBP+RDX*1]
            add RDX,8
            cmp RDX,R8
            mov RCX,QWORD PTR [RCX]
            mov QWORD PTR [RAX],RCX
            mov RAX,QWORD PTR [RCX+128]
            mov QWORD PTR [RSI],RAX
            je .L_41c124
.L_41c0fe:

            mov RAX,QWORD PTR [RBX+168]
.L_41c105:

            add RAX,RDX
            test RBP,RBP
            lea RSI,QWORD PTR [RDI+RDX*1]
            jne .L_41c0e0

            add RDX,8
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RSI],R9
            cmp RDX,R8
            jne .L_41c0fe
.L_41c124:

            add RSP,24
.L_41c128:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41c136:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c140:

            push R12
            mov R12,RDI
            push RBP
            mov RBP,RSI
            push RBX
.L_41c14a:

            xor EBX,EBX
            jmp .L_41c1da
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c158:

            cvtss2sd XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_42d9e0]
            mulsd XMM0,QWORD PTR [RIP+.L_42f940]
            movsd XMM6,QWORD PTR [RIP+.L_42d9d0]
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            movapd XMM1,XMM0
            movapd XMM3,XMM0
            andpd XMM1,XMM2
            ucomisd XMM6,XMM1
            jbe .L_41c1c5

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_42d9d8]
            andnpd XMM2,XMM3
            cvtsi2sd XMM1,RAX
            movapd XMM7,XMM1
            cmpnlesd XMM7,XMM0
            movapd XMM0,XMM7
            andpd XMM0,XMM4
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            orpd XMM0,XMM2
.L_41c1c5:

            cvttsd2si EAX,XMM0
            mov DWORD PTR [R12+RBX*4],EAX
            add RBX,1
            cmp RBX,256
            je .L_41c21c
.L_41c1da:

            pxor XMM0,XMM0
            mov RDI,RBP
            cvtsi2sd XMM0,EBX
            divsd XMM0,QWORD PTR [RIP+.L_42df58]
            cvtsd2ss XMM0,XMM0
            call .L_4237f0

            movss XMM5,DWORD PTR [RIP+.L_42f968]
            ucomiss XMM5,XMM0
            ja .L_41c158

            mov DWORD PTR [R12+RBX*4],2147483647
            add RBX,1
            cmp RBX,256
            jne .L_41c1da
.L_41c21c:

            pop RBX
.L_41c21d:

            pop RBP
            pop R12
            ret 
.L_41c221:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c230:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov EBP,EDX
            xor EBX,EBX
            sub RSP,8
.L_41c244:

            jmp .L_41c271
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c250:

            ucomiss XMM0,DWORD PTR [RIP+.L_42df6c]
            jbe .L_41c2d3

            mov EAX,4294967295
.L_41c25e:

            mov WORD PTR [R13+RBX*2],AX
            add RBX,1
            cmp RBX,16385
            je .L_41c2c8
.L_41c271:

            pxor XMM0,XMM0
            mov RDI,R12
            cvtsi2sd XMM0,EBX
            mulsd XMM0,QWORD PTR [RIP+.L_42f948]
            cvtsd2ss XMM0,XMM0
            call .L_4237f0

            pxor XMM3,XMM3
            ucomiss XMM3,XMM0
            jbe .L_41c250

            test EBP,EBP
            jne .L_41c2c0

            movsd XMM0,QWORD PTR [RIP+.L_42d568]
.L_41c2a2:

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
            jmp .L_41c25e
          .byte 0x90
.L_41c2c0:

            xor EAX,EAX
            jmp .L_41c25e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c2c8:

            add RSP,8
.L_41c2cc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41c2d3:

            cvtss2sd XMM0,XMM0
            test EBP,EBP
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            je .L_41c33e

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            jae .L_41c2c0

            or EAX,4294967295
            ucomisd XMM0,XMM2
            jae .L_41c25e

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
            movzx EAX,AX
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov EDX,EAX
            shl EDX,8
            or EAX,EDX
            jmp .L_41c25e
.L_41c33e:

            pxor XMM1,XMM1
            xor EAX,EAX
            ucomisd XMM1,XMM0
            jae .L_41c25e

            or EAX,4294967295
            ucomisd XMM0,XMM2
            jb .L_41c2a2

            jmp .L_41c25e
.L_41c360:

            mov RCX,QWORD PTR [RDI]
            xor EAX,EAX
            test RCX,RCX
            je .L_41c3d0

            push R12
            mov R12D,EDX
            push RBP
            mov EBP,ESI
            push RBX
.L_41c373:

            mov RBX,RDI
            jmp .L_41c386
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c380:

            mov RCX,RDI
            mov RBX,R8
.L_41c386:

            mov RDI,QWORD PTR [RCX+56]
            lea R8,QWORD PTR [RCX+56]
            test RDI,RDI
            je .L_41c3c7

            cmp DWORD PTR [RCX+12],EBP
            jne .L_41c380

            cmp DWORD PTR [RDI+12],R12D
            jne .L_41c380

            mov RAX,QWORD PTR [RDI+56]
            mov QWORD PTR [RCX+56],RAX
            call .L_42aef0

            mov RDI,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RDI+56]
            mov QWORD PTR [RBX],RAX
            call .L_42aef0

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            jne .L_41c3d2

            mov EAX,1
.L_41c3c7:

            pop RBX
.L_41c3c8:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c3d0:

            ret 
.L_41c3d2:

            mov R8,RBX
            mov EAX,1
            jmp .L_41c380
.L_41c3dc:

            nop
            nop
            nop
            nop
.L_41c3e0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_41c3e9:

            call .L_42a220

            test RAX,RAX
            je .L_41c425

            mov RDI,RBP
            mov RBX,RAX
            call .L_42b6b0

            test EAX,EAX
            je .L_41c430

            sub EAX,1
            lea RBP,QWORD PTR [RBX+RAX*8+8]
            jmp .L_41c419
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c410:

            add RBX,8
            cmp RBX,RBP
            je .L_41c430
.L_41c419:

            mov RDI,QWORD PTR [RBX]
            call .L_422da0

            test EAX,EAX
            jne .L_41c410
.L_41c425:

            add RSP,8
.L_41c429:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_41c430:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_41c43c:

            nop
            nop
            nop
            nop
.L_41c440:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RCX
            sub RSP,184
.L_41c454:

            mov RBX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],RDI
            mov EDI,DWORD PTR [RDX]
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RSI
            xor ESI,ESI
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP],R8
            call .L_40aa10

            test EAX,EAX
            je .L_41c4b0
.L_41c483:

            xor EBP,EBP
.L_41c485:

            mov RSI,QWORD PTR [RSP+168]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_41c84a

            add RSP,184
.L_41c4a5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41c4b0:

            mov EDI,DWORD PTR [RBP]
            call .L_40aa10

            test EAX,EAX
            mov EBP,EAX
            jne .L_41c483

            mov RDI,RBX
            call .L_42bd00

            test RAX,RAX
            mov R14,RAX
            jne .L_41c4e0

            jmp .L_41c4f1
.L_41c4d0:

            mov RDI,R14
            call .L_42b6e0

            test RAX,RAX
            mov R14,RAX
            je .L_41c4f1
.L_41c4e0:

            mov RDI,R14
            call .L_42b6c0

            cmp EAX,1668707188
            je .L_41c4d0

            jmp .L_41c483
.L_41c4f1:

            mov EDX,DWORD PTR [RBX+12]
            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            call .L_42b7d0

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_41c483

            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            mov EDX,8
            call .L_421110

            test RAX,RAX
            mov R15,RAX
            je .L_41c597

            mov ESI,DWORD PTR [RBX+8]
            test ESI,ESI
            je .L_41c5a6

            xor R14D,R14D
            jmp .L_41c544

            nop
            nop
            nop
            nop
            nop
.L_41c538:

            mov ESI,DWORD PTR [RBX+8]
            add R14D,1
            cmp ESI,R14D
            jbe .L_41c5a6
.L_41c544:

            mov RDI,QWORD PTR [RBX+56]
            mov EAX,R14D
            xor EDX,EDX
            lea R12,QWORD PTR [R15+RAX*8]
            mov ESI,4096
            call .L_422570

            test RAX,RAX
            mov QWORD PTR [R12],RAX
            jne .L_41c538
.L_41c564:

            mov EAX,DWORD PTR [RBX+8]
            xor R12D,R12D
            test EAX,EAX
            je .L_41c58b

            nop
            nop
.L_41c570:

            mov EAX,R12D
            mov RDI,QWORD PTR [R15+RAX*8]
            test RDI,RDI
            je .L_41c581

            call .L_422930
.L_41c581:

            add R12D,1
            cmp DWORD PTR [RBX+8],R12D
            ja .L_41c570
.L_41c58b:

            mov RDI,QWORD PTR [RBX+56]
            mov RSI,R15
            call .L_421170
.L_41c597:

            mov RDI,QWORD PTR [RSP+24]
            call .L_42b910

            jmp .L_41c485
.L_41c5a6:

            lea R12,QWORD PTR [RSP+32]
            lea R14,QWORD PTR [RSP+96]
            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
.L_41c5b8:

            test ESI,ESI
            je .L_41c5f8

            pxor XMM0,XMM0
            lea ECX,DWORD PTR [RSI-1]
            lea RAX,QWORD PTR [R12+4]
            mov RDX,R12
            lea RCX,QWORD PTR [RAX+RCX*4]
            cvtsi2sd XMM0,R13D
            divsd XMM0,QWORD PTR [RIP+.L_42f950]
            cvtsd2ss XMM0,XMM0
            jmp .L_41c5ec
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c5e8:

            add RAX,4
.L_41c5ec:

            cmp RCX,RAX
            movss DWORD PTR [RDX],XMM0
            mov RDX,RAX
            jne .L_41c5e8
.L_41c5f8:

            mov RSI,R14
            mov RDX,RBX
            mov RDI,R12
            call .L_42b9c0

            mov ESI,DWORD PTR [RBX+8]
            test ESI,ESI
            je .L_41c69b

            lea EDI,DWORD PTR [RSI-1]
            pxor XMM2,XMM2
            lea R8,QWORD PTR [R13+R13*1]
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            add RDI,1
            movsd XMM4,QWORD PTR [RIP+.L_42df40]
            xor EAX,EAX
            mov R9D,4294967295
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c648:

            pxor XMM0,XMM0
            mov RDX,QWORD PTR [R15+RAX*8]
            cvtss2sd XMM0,DWORD PTR [R14+RAX*4]
            mov RCX,QWORD PTR [RDX+48]
            xor EDX,EDX
            mulsd XMM0,XMM1
            add RCX,R8
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_41c68f

            ucomisd XMM0,XMM1
            mov EDX,R9D
            jae .L_41c68f

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,XMM4
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_41c68f:

            add RAX,1
            mov WORD PTR [RCX],DX
            cmp RAX,RDI
            jne .L_41c648
.L_41c69b:

            add R13,1
            cmp R13,4096
            jne .L_41c5b8

            mov RDI,QWORD PTR [RBX+56]
            mov RDX,R15
            call .L_42af10

            test RAX,RAX
            mov R13,RAX
            je .L_41c564

            mov EDX,DWORD PTR [RBX+8]
            test EDX,EDX
            je .L_41c6f0

            xor R14D,R14D
.L_41c6ce:

            mov EAX,R14D
            add R14D,1
            lea R12,QWORD PTR [R15+RAX*8]
            mov RDI,QWORD PTR [R12]
            call .L_422930

            cmp DWORD PTR [RBX+8],R14D
            mov QWORD PTR [R12],0
            ja .L_41c6ce
.L_41c6f0:

            mov RDI,QWORD PTR [RBX+56]
            mov RSI,R15
            call .L_421170

            mov RDI,R13
            call .L_41c3e0

            test EAX,EAX
            jne .L_41c728

            mov RDI,QWORD PTR [RSP+24]
            xor ESI,ESI
            mov RDX,R13
            call .L_42bb10

            test EAX,EAX
            jne .L_41c795
.L_41c71b:

            mov RDI,R13
            call .L_42aef0

            jmp .L_41c597
.L_41c728:

            mov RDI,R13
            call .L_42aef0

            mov R15,QWORD PTR [RSP+24]
            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [R15+56]
            call .L_42a050

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R15
            call .L_42bb10

            test EAX,EAX
            je .L_41c597

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RIP+.L_41bb30]
            xor R8D,R8D
            xor ECX,ECX
            or DWORD PTR [RAX],64
            mov RDX,RDI
            call .L_42bd70
.L_41c776:

            mov RDI,RBX
            mov EBP,1
            call .L_42b910

            mov RAX,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],RBX
            jmp .L_41c485
.L_41c795:

            mov RAX,QWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RAX]
            call .L_40aa20

            test EAX,EAX
            je .L_41c7f4

            mov RAX,QWORD PTR [R13+48]
            mov R15,QWORD PTR [RSP+24]
            mov EDX,256
            mov RCX,QWORD PTR [RAX+8]
            mov RDI,QWORD PTR [R15+56]
            mov ESI,DWORD PTR [RAX]
            call .L_4017af

            test RAX,RAX
            je .L_41c71b

            mov RSI,QWORD PTR [RSP]
            lea R8,QWORD PTR [RIP+.L_41be90]
            lea RCX,QWORD PTR [RIP+.L_41bf90]
            mov RDX,RAX
            mov RDI,R15
            or DWORD PTR [RSI],64
            lea RSI,QWORD PTR [RIP+.L_41bab0]
            call .L_42bd70

            jmp .L_41c776
.L_41c7f4:

            mov RDI,R13
            call .L_42b6d0

            mov R15,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RAX+8]
            mov EDX,65536
            mov ESI,DWORD PTR [RAX]
            mov RDI,QWORD PTR [R15+56]
            call .L_4017af

            test RAX,RAX
            je .L_41c71b

            mov RSI,QWORD PTR [RSP]
            lea R8,QWORD PTR [RIP+.L_41be90]
            lea RCX,QWORD PTR [RIP+.L_41bf90]
            mov RDX,RAX
            mov RDI,R15
            or DWORD PTR [RSI],64
            lea RSI,QWORD PTR [RIP+.L_41baf0]
            call .L_42bd70

            jmp .L_41c776
.L_41c84a:

            call __stack_chk_fail@PLT
.L_41c84f:

            nop
.L_41c850:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,RDI
            mov R12D,ESI
            mov RBP,R8
            sub RSP,72
.L_41c86d:

            mov EDI,DWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            call .L_40aa10

            test EAX,EAX
            je .L_41c8c8
.L_41c89a:

            xor R15D,R15D
.L_41c89d:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_41cc34

            add RSP,72
.L_41c8b8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c8c8:

            mov EDI,DWORD PTR [R14]
            call .L_40aa10

            test EAX,EAX
            mov R15D,EAX
            jne .L_41c89a

            mov EDI,DWORD PTR [R13]
            shr EDI,16
            and EDI,31
            call .L_40c9c0

            mov EDI,DWORD PTR [R14]
            mov R13D,EAX
            mov DWORD PTR [RSP],EAX
            shr EDI,16
            and EDI,31
            call .L_40c9c0

            cmp R13D,-1
            mov DWORD PTR [RSP+4],EAX
            je .L_41c89a

            cmp EAX,-1
            je .L_41c89a

            mov ESI,DWORD PTR [RBP]
            mov EDI,R13D
            call .L_40cf60

            mov RDI,QWORD PTR [RBX]
            mov R14D,EAX
            call .L_42bd40

            test EAX,EAX
            mov EAX,2
            cmovne EAX,R14D
            mov R14,QWORD PTR [RBX]
            mov DWORD PTR [RSP+8],EAX
            mov RDI,R14
            call .L_42bd00

            test RAX,RAX
            mov R13,RAX
            je .L_41c96b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c948:

            mov RDI,R13
            call .L_42b6c0

            cmp EAX,1852009504
            je .L_41c89a

            mov RDI,R13
            call .L_42b6e0

            test RAX,RAX
            mov R13,RAX
            jne .L_41c948
.L_41c96b:

            mov EDX,DWORD PTR [R14+12]
            mov ESI,DWORD PTR [R14+8]
            mov RDI,QWORD PTR [R14+56]
            call .L_42b7d0

            test RAX,RAX
            mov R13,RAX
            je .L_41c89a

            test BYTE PTR [RBP],16
            je .L_41c9a8

            mov RDI,R14
            call .L_42bd00

            test RAX,RAX
            je .L_41c9a8

            cmp DWORD PTR [RAX+8],1668707188
            je .L_41cb88
.L_41c9a8:

            mov QWORD PTR [RSP+16],0
.L_41c9b1:

            mov ECX,DWORD PTR [R14+12]
            mov EDX,DWORD PTR [R14+8]
            xor R8D,R8D
            mov RDI,QWORD PTR [R14+56]
            mov ESI,DWORD PTR [RSP+8]
            call .L_42b390

            test RAX,RAX
            je .L_41cb40

            mov RDX,RAX
            mov ESI,1
            mov RDI,R13
            mov QWORD PTR [RSP+8],RAX
            call .L_42bb10

            test EAX,EAX
            je .L_41cb40

            test BYTE PTR [RBP],1
            mov R8,QWORD PTR [RSP+8]
            je .L_41ca38

            mov RDI,R14
            mov QWORD PTR [RSP+8],R8
            call .L_42bd10

            test RAX,RAX
            mov R8,QWORD PTR [RSP+8]
            je .L_41ca38

            mov RDI,RAX
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+8],RAX
            call .L_42b6c0

            cmp EAX,1668707188
            mov RDX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+24]
            je .L_41cc39
.L_41ca38:

            mov QWORD PTR [RSP+8],0
.L_41ca41:

            lea RSI,QWORD PTR [RIP+.L_41bc80]
            xor ECX,ECX
            mov RDX,R14
            mov RDI,R8
            mov QWORD PTR [RSP+24],R8
            call .L_42a430

            test EAX,EAX
            je .L_41cb40

            mov RDI,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+24]
            test RDI,RDI
            je .L_41ca7b

            call .L_42aef0

            mov R8,QWORD PTR [RSP+24]
.L_41ca7b:

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            je .L_41ca94

            mov QWORD PTR [RSP+24],R8
            call .L_42aef0

            mov R8,QWORD PTR [RSP+24]
.L_41ca94:

            mov RDI,R14
            mov QWORD PTR [RSP+24],R8
            call .L_42b910

            mov RSI,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+24]
            test RSI,RSI
            mov RAX,QWORD PTR [R8+48]
            je .L_41cc11

            cmp QWORD PTR [RSP+8],0
            mov RDX,QWORD PTR [RSI+48]
            mov RCX,QWORD PTR [RDX+8]
            je .L_41cc28

            mov RAX,QWORD PTR [RAX+8]
.L_41cad0:

            mov RSI,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSI+48]
            mov R9,QWORD PTR [RDX+8]
.L_41cadd:

            test RCX,RCX
            jne .L_41cbd8

            test R9,R9
            jne .L_41cbd8
.L_41caef:

            mov RSI,QWORD PTR [RAX+128]
            xor R8D,R8D
            xor ECX,ECX
            mov RDX,RAX
            mov RDI,R13
            call .L_42bd70
.L_41cb06:

            cmp R12D,3
            mov EAX,DWORD PTR [RBP]
            jne .L_41cb15

            or EAX,4
            mov DWORD PTR [RBP],EAX
.L_41cb15:

            test AL,4
            jne .L_41cb28

            mov EDX,DWORD PTR [RSP+4]
            mov ESI,DWORD PTR [RSP]
            mov RDI,R13
            call .L_401934
.L_41cb28:

            mov QWORD PTR [RBX],R13
            mov R15D,1
            jmp .L_41c89d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cb40:

            mov RDX,QWORD PTR [RSP+40]
            test RDX,RDX
            je .L_41cb5c

            xor ESI,ESI
            mov RDI,R14
            call .L_42bb10

            test EAX,EAX
            je .L_41cc94
.L_41cb5c:

            mov RDX,QWORD PTR [RSP+48]
            test RDX,RDX
            je .L_41cb7b

            mov ESI,1
            mov RDI,R14
            call .L_42bb10

            test EAX,EAX
            je .L_41ccb3
.L_41cb7b:

            mov RDI,R13
            call .L_42b910

            jmp .L_41c89d
.L_41cb88:

            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_41c3e0

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+16]
            jne .L_41c9a8

            mov RDI,RDX
            call .L_42b6f0

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R13
            mov QWORD PTR [RSP+16],RAX
            call .L_42bb10

            test EAX,EAX
            je .L_41cb40

            lea RDX,QWORD PTR [RSP+40]
            xor ESI,ESI
            mov RDI,R14
            call .L_42bb80

            jmp .L_41c9b1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cbd8:

            mov EDX,DWORD PTR [R13+8]
            mov RDI,QWORD PTR [R13+56]
            mov RSI,RAX
            mov R8D,DWORD PTR [R13+12]
            call .L_41bfe0

            lea R8,QWORD PTR [RIP+.L_41be00]
            lea RCX,QWORD PTR [RIP+.L_41bf20]
            lea RSI,QWORD PTR [RIP+.L_41b5f0]
            mov RDX,RAX
            mov RDI,R13
            call .L_42bd70

            jmp .L_41cb06
.L_41cc11:

            cmp QWORD PTR [RSP+8],0
            mov RAX,QWORD PTR [RAX+8]
            je .L_41caef

            xor ECX,ECX
            jmp .L_41cad0
.L_41cc28:

            xor R9D,R9D
            mov RAX,QWORD PTR [RAX+8]
            jmp .L_41cadd
.L_41cc34:

            call __stack_chk_fail@PLT
.L_41cc39:

            mov RDI,RDX
            call .L_41c3e0

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+24]
            jne .L_41ca38

            mov RDI,RDX
            call .L_42b6f0

            mov ESI,1
            mov RDX,RAX
            mov RDI,R13
            mov QWORD PTR [RSP+8],RAX
            call .L_42bb10

            test EAX,EAX
            je .L_41cb40

            lea RDX,QWORD PTR [RSP+48]
            mov ESI,1
            mov RDI,R14
            call .L_42bb80

            mov R8,QWORD PTR [RSP+24]
            jmp .L_41ca41
.L_41cc94:

            lea RCX,QWORD PTR [RIP+.L_42f8f0]
            lea RSI,QWORD PTR [RIP+.L_42f844]
            lea RDI,QWORD PTR [RIP+.L_42dae5]
            mov EDX,739
            call __assert_fail@PLT
.L_41ccb3:

            lea RCX,QWORD PTR [RIP+.L_42f8f0]
            lea RSI,QWORD PTR [RIP+.L_42f844]
            lea RDI,QWORD PTR [RIP+.L_42dae5]
            mov EDX,744
            call __assert_fail@PLT
.L_41ccd2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cce0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,200
.L_41ccf4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+28],0
.L_41cd0f:

            mov RDI,QWORD PTR [RBP]
            mov R13,RBP
            xor EBX,EBX
.L_41cd18:

            test RDI,RDI
            je .L_41cd3a
.L_41cd1d:

            cmp DWORD PTR [RDI+12],1768189472
            mov RAX,QWORD PTR [RDI+56]
            je .L_41cf20

            lea R13,QWORD PTR [RDI+56]
            mov RDI,RAX
            test RDI,RDI
            jne .L_41cd1d
.L_41cd3a:

            mov EDX,2016570400
            mov ESI,1815246880
            mov RDI,RBP
            call .L_41c360

            mov EDX,1815246880
            mov R12D,EAX
            mov ESI,2016570400
            mov RDI,RBP
            or EBX,R12D
            call .L_41c360

            mov EDX,840971296
            mov ESI,874525216
            mov RDI,RBP
            or EBX,EAX
            call .L_41c360

            mov EDX,874525216
            mov ESI,840971296
            mov RDI,RBP
            or EBX,EAX
            call .L_41c360

            mov EDX,1815241760
            mov ESI,1681026080
            mov RDI,RBP
            or EBX,EAX
            call .L_41c360

            mov EDX,2016568352
            mov ESI,1681029152
            mov RDI,RBP
            or EBX,EAX
            call .L_41c360

            mov R14,QWORD PTR [RBP]
            or EBX,EAX
            test R14,R14
            je .L_41cf42

            lea RAX,QWORD PTR [RSP+32]
            mov R15,RBP
            xor ESI,ESI
            lea R12,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_41cde6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cde0:

            mov R14,RAX
            mov R15,RDX
.L_41cde6:

            mov RAX,QWORD PTR [R14+56]
            lea RDX,QWORD PTR [R14+56]
            test RAX,RAX
            je .L_41cf40

            cmp DWORD PTR [R14+12],1835103334
            jne .L_41cde0

            cmp DWORD PTR [RAX+12],1835103334
            jne .L_41cde0

            mov RDI,R14
            call .L_42b6d0

            mov RDI,QWORD PTR [R14+56]
            mov R13,RAX
            call .L_42b6d0

            cmp QWORD PTR [R13+8],0
            jne .L_41cf42

            cmp QWORD PTR [RAX+8],0
            mov QWORD PTR [RSP+16],RAX
            jne .L_41cf42

            mov RDI,QWORD PTR [R15]
            call .L_42b6a0

            cmp EAX,3
            jne .L_41cf42

            mov RDI,QWORD PTR [R15]
            call .L_42b6b0

            cmp EAX,3
            jne .L_41cf42

            mov RDI,QWORD PTR [R14+56]
            call .L_42b6a0

            cmp EAX,3
            jne .L_41cf42

            mov RDI,QWORD PTR [R14+56]
            call .L_42b6b0

            cmp EAX,3
            jne .L_41cf42

            mov RAX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RAX]
            call .L_42c480

            mov RDI,QWORD PTR [R14+56]
            mov R13,QWORD PTR [RDI+56]
            mov QWORD PTR [R14+56],R13
            call .L_42aef0

            mov RDI,QWORD PTR [R15]
            mov RAX,QWORD PTR [RDI+56]
            mov QWORD PTR [R15],RAX
            call .L_42aef0

            mov RDI,R12
            call .L_42c340

            mov RCX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R12+72]
            mov RDX,R12
.L_41ceca:

            xor EAX,EAX
.L_41cecc:

            movsd XMM0,QWORD PTR [RDX+RAX*1]
            movsd XMM1,QWORD PTR [RIP+.L_42f958]
            subsd XMM0,QWORD PTR [RCX+RAX*1]
            andpd XMM0,XMMWORD PTR [RIP+.L_42d9e0]
            ucomisd XMM1,XMM0
            jbe .L_41cf80

            add RAX,8
            cmp RAX,24
            jne .L_41cecc

            add RDX,24
            add RCX,24
            cmp RDX,RSI
            jne .L_41ceca

            mov RAX,QWORD PTR [R15]
            test RAX,RAX
            je .L_41cfb0
.L_41cf13:

            mov RDX,R15
            mov ESI,1
            jmp .L_41cde0
.L_41cf20:

            mov QWORD PTR [R13],RAX
            mov EBX,1
            call .L_42aef0

            mov RDI,QWORD PTR [R13]
            jmp .L_41cd18
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cf40:

            or EBX,ESI
.L_41cf42:

            test EBX,EBX
            jne .L_41cf70

            mov RCX,QWORD PTR [RSP+184]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+28]
            jne .L_41cfb5

            add RSP,200
.L_41cf64:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41cf70:

            mov DWORD PTR [RSP+28],1
            jmp .L_41cd0f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41cf80:

            mov RDI,QWORD PTR [RBP+56]
            mov RCX,QWORD PTR [RSP+8]
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42a230

            test RAX,RAX
            je .L_41cf42

            test RAX,RAX
            mov QWORD PTR [RAX+56],R13
            mov QWORD PTR [R15],RAX
            jne .L_41cf13
.L_41cfb0:

            or EBX,1
            jmp .L_41cf42
.L_41cfb5:

            call __stack_chk_fail@PLT
.L_41cfba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41cfc0:

            test EDI,EDI
            jle .L_41d020

            mov RDX,QWORD PTR [RSI]
            lea ECX,DWORD PTR [RDI-1]
            xor ESI,ESI
            lea RAX,QWORD PTR [RDX+2]
            lea R8,QWORD PTR [RAX+RCX*2]
            xor ECX,ECX
            jmp .L_41cfef
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cfe0:

            add ECX,1
            cmp R8,RAX
            mov RDX,RAX
            je .L_41d00b
.L_41cfeb:

            add RAX,2
.L_41cfef:

            movzx EDX,WORD PTR [RDX]
            test DX,DX
            je .L_41cfe0

            cmp DX,-1
            sete DL
            movzx EDX,DL
            add ESI,EDX
            cmp R8,RAX
            mov RDX,RAX
            jne .L_41cfeb
.L_41d00b:

            cmp ECX,1
            jne .L_41d024

            xor EAX,EAX
            cmp ESI,1
            jne .L_41d024

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d020:

            xor ESI,ESI
            xor ECX,ECX
.L_41d024:

            mov EAX,EDI
            mov EDX,1717986919
            sar EDI,31
            imul EDX
            sar EDX,3
            sub EDX,EDI
            cmp EDX,ESI
            setl AL
            cmp EDX,ECX
            setl DL
            or EAX,EDX
            movzx EAX,AL
            ret 
.L_41d045:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d050:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,488
.L_41d064:

            mov EDI,DWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+472],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],ESI
            mov EAX,EDI
            shr EAX,16
            and EAX,31
            cmp EAX,4
            je .L_41d0b8
.L_41d08a:

            xor EAX,EAX
.L_41d08c:

            mov RBX,QWORD PTR [RSP+472]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41d73b

            add RSP,488
.L_41d0aa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d0b8:

            test EDI,4096
            jne .L_41d08a

            mov R14,RDX
            mov EDX,DWORD PTR [RCX]
            mov EAX,EDX
            shr EAX,16
            and EAX,31
            cmp EAX,4
            jne .L_41d08a

            and DH,16
            jne .L_41d08a

            mov QWORD PTR [RSP+8],RCX
            mov RBP,R8
            call .L_40aa20

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+8]
            jne .L_41d0f3

            test BYTE PTR [RBP],16
            je .L_41d08a
.L_41d0f3:

            mov RBX,QWORD PTR [R12]
            mov QWORD PTR [RSP+8],RCX
            mov RDI,RBX
            call .L_42bd00

            test RAX,RAX
            mov R13,RAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_41d147

            mov R15,RCX
            jmp .L_41d130
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d120:

            mov RDI,R13
            call .L_42b6e0

            test RAX,RAX
            mov R13,RAX
            je .L_41d144
.L_41d130:

            mov RDI,R13
            call .L_42b6c0

            cmp EAX,1852009504
            jne .L_41d120

            jmp .L_41d08a
.L_41d144:

            mov RCX,R15
.L_41d147:

            mov EDI,DWORD PTR [R14]
            mov QWORD PTR [RSP+8],RCX
            lea R13,QWORD PTR [RSP+208]
            shr EDI,16
            and EDI,31
            call .L_40c9c0

            mov RCX,QWORD PTR [RSP+8]
            mov R15D,EAX
            mov DWORD PTR [RSP+40],EAX
            mov EDI,DWORD PTR [RCX]
            shr EDI,16
            and EDI,31
            call .L_40c9c0

            mov ESI,DWORD PTR [RBP]
            mov EDI,R15D
            mov DWORD PTR [RSP+44],EAX
            call .L_40cf60

            mov ECX,16
            mov DWORD PTR [RSP+48],EAX
            mov RDI,R13
            xor EAX,EAX

            rep stosq QWORD PTR [RDI]

            lea RDI,QWORD PTR [RSP+336]
            mov ECX,16
            mov QWORD PTR [RSP+32],RDI

            rep stosq QWORD PTR [RDI]

            mov RDI,RBX
            call .L_42bd10

            mov RDI,RAX
            mov R15,RAX
            call .L_42b6c0

            cmp EAX,1668707188
            je .L_41d65d
.L_41d1ce:

            mov R10D,DWORD PTR [RBX+8]
            mov R15D,1
            test R10D,R10D
            jne .L_41d1fc

            jmp .L_41d28e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d1e8:

            mov R10D,DWORD PTR [RBX+8]
            mov EAX,R15D
            add R15,1
            cmp EAX,R10D
            jae .L_41d28e
.L_41d1fc:

            mov RDI,QWORD PTR [RBX+56]
            xor EDX,EDX
            mov ESI,4096
            call .L_422570

            test RAX,RAX
            mov QWORD PTR [R13+R15*8-8],RAX
            jne .L_41d1e8
.L_41d216:

            mov EAX,DWORD PTR [RBX+8]
            test EAX,EAX
            je .L_41d08a

            mov QWORD PTR [RSP+8],0
            xor R15D,R15D
.L_41d22d:

            mov R12,QWORD PTR [RSP+32]
            mov EBP,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d240:

            mov RDI,QWORD PTR [R13+RBP*8-8]
            test RDI,RDI
            je .L_41d24f

            call .L_422930
.L_41d24f:

            mov RDI,QWORD PTR [R12+RBP*8-8]
            test RDI,RDI
            je .L_41d25e

            call .L_422930
.L_41d25e:

            mov EAX,EBP
            add RBP,1
            cmp EAX,DWORD PTR [RBX+8]
            jb .L_41d240

            test R15,R15
            je .L_41d276
.L_41d26e:

            mov RDI,R15
            call .L_42b910
.L_41d276:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_41d08a

            call .L_42b910

            jmp .L_41d08a
.L_41d28e:

            lea R9,QWORD PTR [RSP+80]
            xor R8D,R8D
            lea R15,QWORD PTR [RSP+144]
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            mov QWORD PTR [RSP+16],R12
            mov QWORD PTR [RSP+24],RBP
            mov R12,R9
            mov RBP,R8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d2c0:

            pxor XMM0,XMM0
            test R10D,R10D
            cvtsi2sd XMM0,EBP
            divsd XMM0,QWORD PTR [RIP+.L_42f950]
            cvtsd2ss XMM0,XMM0
            je .L_41d300

            lea ECX,DWORD PTR [R10-1]
            lea RAX,QWORD PTR [R12+4]
            mov RDX,R12
            lea RCX,QWORD PTR [RAX+RCX*4]
            jmp .L_41d2f4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d2f0:

            add RAX,4
.L_41d2f4:

            cmp RCX,RAX
            movss DWORD PTR [RDX],XMM0
            mov RDX,RAX
            jne .L_41d2f0
.L_41d300:

            mov RDX,RBX
            mov RSI,R15
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            call .L_42b9c0

            mov R10D,DWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RSP+8]
            test R10D,R10D
            je .L_41d3a4

            lea ESI,DWORD PTR [R10-1]
            pxor XMM2,XMM2
            lea RDI,QWORD PTR [RBP+RBP*1]
            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            movsd XMM4,QWORD PTR [RIP+.L_42df40]
            add RSI,1
            xor EAX,EAX
            mov R11D,4294967295
.L_41d350:

            pxor XMM0,XMM0
            mov RDX,QWORD PTR [R13+RAX*8]
            cvtss2sd XMM0,DWORD PTR [R15+RAX*4]
            mov RCX,QWORD PTR [RDX+48]
            xor EDX,EDX
            mulsd XMM0,XMM1
            add RCX,RDI
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_41d398

            ucomisd XMM0,XMM1
            mov EDX,R11D
            jae .L_41d398

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,XMM4
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_41d398:

            add RAX,1
            mov WORD PTR [RCX],DX
            cmp RSI,RAX
            jne .L_41d350
.L_41d3a4:

            add RBP,1
            cmp RBP,4096
            jne .L_41d2c0

            test R10D,R10D
            mov R12,QWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RSP+24]
            je .L_41d6f2

            pxor XMM1,XMM1
            mov R8D,1
            mov QWORD PTR [RSP+56],R12
            movsd XMM3,QWORD PTR [RIP+.L_42df30]
            mov R15,R8
            movsd XMM2,QWORD PTR [RIP+.L_42d568]
            mov QWORD PTR [RSP+64],R14
            mov QWORD PTR [RSP+72],RBP
            nop
            nop
            nop
            nop
.L_41d3f8:

            mov R12,QWORD PTR [R13+R15*8-8]
            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_42f838]
            movsd XMM7,QWORD PTR [RIP+.L_42d9d0]
            mov EDX,DWORD PTR [R12+40]
            cvtsi2sd XMM0,RDX
            mov RAX,RDX
            mulsd XMM0,QWORD PTR [RIP+.L_42f960]
            addsd XMM0,XMM2
            andpd XMM4,XMM0
            movapd XMM5,XMM0
            ucomisd XMM7,XMM4
            jbe .L_41d456

            cvttsd2si RDX,XMM0
            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_42f838]
            andnpd XMM4,XMM5
            cvtsi2sd XMM0,RDX
            orpd XMM0,XMM4
.L_41d456:

            cvttsd2si R14D,XMM0
            lea ESI,DWORD PTR [RAX-1]
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            sub ESI,R14D
            mov EBP,ESI
            call .L_4236b0

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            je .L_41d650

            pxor XMM4,XMM4
            movapd XMM0,XMM3
.L_41d49f:

            mov RCX,QWORD PTR [R12+48]
            movsxd RAX,R14D
            test R14D,R14D
            pxor XMM5,XMM5
            pxor XMM7,XMM7
            movzx EAX,WORD PTR [RCX+RAX*2]
            cvtsi2sd XMM7,R14D
            cvtsi2sd XMM5,EAX
            movapd XMM6,XMM5
            subsd XMM6,XMM0
            movapd XMM0,XMM7
            divsd XMM6,XMM7
            mulsd XMM0,XMM6
            subsd XMM5,XMM0
            jle .L_41d53f

            lea EDI,DWORD PTR [R14-1]
            xor EAX,EAX
            mov R9D,4294967295
            add RDI,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d4f0:

            pxor XMM0,XMM0
            xor EDX,EDX
            cvtsi2sd XMM0,EAX
            mulsd XMM0,XMM6
            addsd XMM0,XMM5
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            jae .L_41d532

            ucomisd XMM0,XMM3
            mov EDX,R9D
            jae .L_41d532

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_41d532:

            mov WORD PTR [RCX+RAX*2],DX
            add RAX,1
            cmp RDI,RAX
            jne .L_41d4f0
.L_41d53f:

            movsxd RDI,EBP
            pxor XMM5,XMM5
            movzx EAX,WORD PTR [RCX+RDI*2]
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EBP
            cvtsi2sd XMM5,EAX
            mov EAX,DWORD PTR [R12+40]
            cmp EBP,EAX
            subsd XMM4,XMM5
            divsd XMM4,XMM7
            mulsd XMM0,XMM4
            subsd XMM5,XMM0
            jge .L_41d5e1

            sub EAX,1
            lea RDX,QWORD PTR [RDI+1]
            mov R8D,4294967295
            sub EAX,EBP
            movsd XMM7,QWORD PTR [RIP+.L_42df38]
            lea RSI,QWORD PTR [RAX+RDX*1]
            movsd XMM6,QWORD PTR [RIP+.L_42df40]
            jmp .L_41d59c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d598:

            add RDX,1
.L_41d59c:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtsi2sd XMM0,EDI
            mulsd XMM0,XMM4
            addsd XMM0,XMM5
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            jae .L_41d5d5

            ucomisd XMM0,XMM3
            mov EAX,R8D
            jae .L_41d5d5

            subsd XMM0,XMM7
            addsd XMM0,XMM6
            movq RAX,XMM0
            sar EAX,16
            add AX,32767
.L_41d5d5:

            cmp RSI,RDX
            mov WORD PTR [RCX+RDI*2],AX
            mov RDI,RDX
            jne .L_41d598
.L_41d5e1:

            mov EAX,DWORD PTR [RBX+8]
            mov EDX,R15D
            add R15,1
            cmp EDX,EAX
            jb .L_41d3f8

            mov R12,QWORD PTR [RSP+56]
            mov R14,QWORD PTR [RSP+64]
            xor R15D,R15D
            mov RBP,QWORD PTR [RSP+72]
.L_41d605:

            cmp EAX,R15D
            jbe .L_41d6a2

            mov RDI,QWORD PTR [R13+R15*8]
            call .L_422da0

            mov RDI,QWORD PTR [R13+R15*8]
            call .L_4235e0

            mov R9D,EAX
            mov RAX,QWORD PTR [R13+R15*8]
            mov EDI,DWORD PTR [RAX+40]
            lea RSI,QWORD PTR [RAX+48]
            call .L_41cfc0

            test EAX,EAX
            jne .L_41d216

            add R15,1
            test R9D,R9D
            mov EAX,DWORD PTR [RBX+8]
            jne .L_41d605

            jmp .L_41d216
          .byte 0x90
.L_41d650:

            movapd XMM4,XMM3
            pxor XMM0,XMM0
            jmp .L_41d49f
.L_41d65d:

            mov RDI,R15
            call .L_42b6d0

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            je .L_41d1ce

            mov R10,QWORD PTR [RAX+8]
            lea EAX,DWORD PTR [RDX-1]
            lea R9,QWORD PTR [R10+RAX*8+8]
            jmp .L_41d68a
.L_41d67d:

            add R10,8
            cmp R9,R10
            je .L_41d1ce
.L_41d68a:

            mov RAX,QWORD PTR [R10]
            mov EDI,DWORD PTR [RAX+40]
            lea RSI,QWORD PTR [RAX+48]
            call .L_41cfc0

            test EAX,EAX
            je .L_41d67d

            jmp .L_41d216
.L_41d6a2:

            test EAX,EAX
            je .L_41d6f2

            mov RAX,R13
            mov R15D,1
            mov R13,RBP
            mov RBP,RAX
            jmp .L_41d6c3
.L_41d6b7:

            mov EAX,R15D
            add R15,1
            cmp EAX,DWORD PTR [RBX+8]
            jae .L_41d6e9
.L_41d6c3:

            mov RSI,QWORD PTR [RBP+R15*8-8]
            mov EDI,4096
            call .L_4229f0

            mov RSI,QWORD PTR [RSP+32]
            test RAX,RAX
            mov QWORD PTR [RSI+R15*8-8],RAX
            jne .L_41d6b7

            mov R13,RBP
            jmp .L_41d216
.L_41d6e9:

            mov RAX,RBP
            mov RBP,R13
            mov R13,RAX
.L_41d6f2:

            mov RDI,RBX
            call .L_42b9f0

            test RAX,RAX
            mov R15,RAX
            je .L_41d216

            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            mov RDX,QWORD PTR [RSP+32]
            call .L_42af10

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R15
            call .L_42bb10

            test EAX,EAX
            jne .L_41d740
.L_41d728:

            cmp DWORD PTR [RBX+8],0
            jne .L_41d78f

            mov RDI,R15
            call .L_42b910

            jmp .L_41d08a
.L_41d73b:

            call __stack_chk_fail@PLT
.L_41d740:

            mov EDX,DWORD PTR [RBX+12]
            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            call .L_42b7d0

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_41d728

            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            mov RDX,R13
            call .L_42af10

            mov RDI,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RAX
            call .L_42bb10

            test EAX,EAX
            jne .L_41d79d
.L_41d780:

            cmp DWORD PTR [RBX+8],0
            je .L_41d26e

            jmp .L_41d22d
.L_41d78f:

            mov QWORD PTR [RSP+8],0
            jmp .L_41d22d
.L_41d79d:

            mov ECX,DWORD PTR [RBX+12]
            mov EDX,DWORD PTR [RBX+8]
            xor R8D,R8D
            mov RDI,QWORD PTR [RBX+56]
            mov ESI,DWORD PTR [RSP+48]
            call .L_42b390

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,RAX
            mov ESI,1
            mov QWORD PTR [RSP+16],RAX
            call .L_42bb10

            test EAX,EAX
            je .L_41d780

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_41bc80]
            xor ECX,ECX
            mov RDX,R15
            call .L_42a430

            test EAX,EAX
            je .L_41d780

            xor EAX,EAX
            mov QWORD PTR [RSP+48],RBP
            mov RBP,RAX
.L_41d7f2:

            cmp DWORD PTR [RBX+8],EBP
            jbe .L_41d81f

            mov RDI,QWORD PTR [R13+RBP*8]
            test RDI,RDI
            je .L_41d806

            call .L_422930
.L_41d806:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX+RBP*8]
            test RDI,RDI
            je .L_41d819

            call .L_422930
.L_41d819:

            add RBP,1
            jmp .L_41d7f2
.L_41d81f:

            mov RDI,R15
            mov RBP,QWORD PTR [RSP+48]
            call .L_42b910

            mov RDI,QWORD PTR [RSP+24]
            call .L_42a220

            mov EDI,DWORD PTR [R14]
            mov R15,RAX
            mov RAX,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RAX+48]
            call .L_40aa20

            test EAX,EAX
            je .L_41d991

            mov RAX,QWORD PTR [RSP+8]
            mov ESI,4624
            mov R13,QWORD PTR [R13+8]
            mov RAX,QWORD PTR [RAX+56]
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_4210e0

            test RAX,RAX
            mov R14,RAX
            je .L_41d08a

            xor R8D,R8D
            mov R11D,65535
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+32],R12
            mov QWORD PTR [RSP+48],RBP
            jmp .L_41d975
.L_41d89a:

            mov RDI,QWORD PTR [R15]
            movzx R12D,BX
            mov QWORD PTR [RSP+64],R8
            mov ESI,R12D
            mov DWORD PTR [RSP+56],R11D
            call .L_423770

            mov RDI,QWORD PTR [R15+8]
            mov ESI,R12D
            mov EBX,EAX
            call .L_423770

            mov RDI,QWORD PTR [R15+16]
            mov ESI,R12D
            mov EBP,EAX
            call .L_423770

            mov R11D,DWORD PTR [RSP+56]
            mov R8,QWORD PTR [RSP+64]
            movzx EDI,AX
.L_41d8dc:

            movzx ESI,BX
            imul ESI,DWORD PTR [R13+52]
            imul EDI,DWORD PTR [R13+60]
            lea EAX,DWORD PTR [RSI+32767]
            cdq 
            idiv R11D
            lea EBX,DWORD PTR [RAX+RSI*1]
            movzx ESI,BP
            imul ESI,DWORD PTR [R13+56]
            lea EAX,DWORD PTR [RSI+32767]
            cdq 
            idiv R11D
            add ESI,EAX
            lea EAX,DWORD PTR [RDI+32767]
            cdq 
            idiv R11D
            mov EDX,EBX
            sar EDX,16
            imul EDX,DWORD PTR [R13+92]
            add EAX,EDI
            mov DWORD PTR [R14+R8*4+1552],EDX
            mov EDX,ESI
            sar EDX,16
            imul EDX,DWORD PTR [R13+88]
            mov DWORD PTR [R14+R8*4+2576],EDX
            mov EDX,EAX
            sar EDX,16
            imul EDX,DWORD PTR [R13+84]
            mov DWORD PTR [R14+R8*4+3600],EDX
            mov WORD PTR [R14+R8*2+16],BX
            mov WORD PTR [R14+R8*2+528],SI
            mov WORD PTR [R14+R8*2+1040],AX
            add R8,1
            cmp R8,256
            je .L_41da26
.L_41d975:

            mov EBX,R8D
            shl EBX,8
            or EBX,R8D
            test R15,R15
            jne .L_41d89a

            movzx EDI,BX
            mov EBP,EBX
            jmp .L_41d8dc
.L_41d991:

            mov R14,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [R13+8]
            xor R9D,R9D
            mov R8D,3
            mov RCX,R15
            mov EDX,3
            mov RDI,QWORD PTR [R14+56]
            call .L_41bfe0

            test RAX,RAX
            je .L_41d08a

            lea R8,QWORD PTR [RIP+.L_41be00]
            lea RCX,QWORD PTR [RIP+.L_41bf20]
            lea RSI,QWORD PTR [RIP+.L_41b5f0]
            mov RDX,RAX
            mov RDI,R14
            call .L_42bd70
.L_41d9dd:

            cmp DWORD PTR [RSP+4],3
            mov EAX,DWORD PTR [RBP]
            jne .L_41d9ed

            or EAX,4
            mov DWORD PTR [RBP],EAX
.L_41d9ed:

            test AL,4
            jne .L_41da0b

            mov EDX,DWORD PTR [RSP+44]
            mov ESI,DWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+8]
            call .L_401934

            test EAX,EAX
            je .L_41d08a
.L_41da0b:

            mov RDI,RBX
            call .L_42b910

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12],RAX
            mov EAX,1
            jmp .L_41d08c
.L_41da26:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RIP+.L_41be70]
            lea RCX,QWORD PTR [RIP+.L_41bf60]
            lea RSI,QWORD PTR [RIP+.L_41b6c0]
            mov QWORD PTR [R14+8],R13
            mov RDX,R14
            mov RBX,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov QWORD PTR [R14],RAX
            mov RBP,QWORD PTR [RSP+48]
            call .L_42bd70

            jmp .L_41d9dd
.L_41da68:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41da70:

            push R14
            push R13
            mov R14,R8
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov EDI,DWORD PTR [RDX]
            mov R13D,ESI
            mov RBX,RDX
            mov RBP,RCX
            call .L_40aa10

            test EAX,EAX
            je .L_41daa0
.L_41da92:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41daa0:

            mov EDI,DWORD PTR [RBP]
            call .L_40aa10

            test EAX,EAX
            jne .L_41da92

            mov R8,R14
            mov RCX,RBP
            mov RDX,RBX
            mov ESI,R13D
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_41d050
.L_41dac8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dad0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,168
.L_41dae4:

            mov EDI,DWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov EAX,EDI
            shr EAX,3
            and EAX,15
            cmp EAX,3
            je .L_41db38
.L_41db06:

            xor EAX,EAX
.L_41db08:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41dff1

            add RSP,168
.L_41db26:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41db38:

            mov EAX,DWORD PTR [RCX]
            mov RBP,RCX
            shr EAX,3
            and EAX,15
            cmp EAX,3
            jne .L_41db06

            mov R14D,ESI
            mov RBX,RDX
            mov R13,R8
            call .L_40aa20

            test EAX,EAX
            je .L_41db06

            lea R10,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [R12]
            mov R9D,1668707188
            mov R8D,1835103334
            mov ECX,1835103334
            mov EDX,1668707188
            push R10
.L_41db7b:

            mov ESI,4
            mov RDI,R15
            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+16],R10
            push RAX
            lea R11,QWORD PTR [RSP+72]
            push R11
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+24],R11
            mov QWORD PTR [RSP+40],RAX
            push RAX
            xor EAX,EAX
            call .L_42a0b0

            add RSP,32
.L_41dbb0:

            test EAX,EAX
            mov R11,QWORD PTR [RSP]
            mov R10,QWORD PTR [RSP+8]
            je .L_41df00

            mov RDI,QWORD PTR [RSP+56]
            call .L_42b6d0

            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],RAX
            call .L_42b6d0

            mov RDX,QWORD PTR [RSP]
            cmp QWORD PTR [RDX+8],0
            jne .L_41db06

            lea RCX,QWORD PTR [RSP+80]
            mov RDX,QWORD PTR [RDX]
            mov RSI,QWORD PTR [RAX]
            mov QWORD PTR [RSP],RAX
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call .L_42c480

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP],RAX
            call .L_42c390

            test EAX,EAX
            setne AL
            xor EDX,EDX
            cmp QWORD PTR [RSP],0
            sete DL
            and EDX,EAX
            mov DWORD PTR [RSP+16],EDX
.L_41dc2f:

            mov EDX,DWORD PTR [R15+12]
            mov ESI,DWORD PTR [R15+8]
            mov RDI,QWORD PTR [R15+56]
            call .L_42b7d0

            test RAX,RAX
            mov QWORD PTR [RSP+72],RAX
            je .L_41db06

            mov RDI,QWORD PTR [RSP+40]
            call .L_42b6f0

            mov RDI,QWORD PTR [RSP+72]
            xor ESI,ESI
            mov RDX,RAX
            call .L_42bb10

            test EAX,EAX
            je .L_41dfa7

            mov EAX,DWORD PTR [RSP+16]
            test EAX,EAX
            jne .L_41dfb6

            mov RAX,QWORD PTR [RSP+72]
            mov R8,QWORD PTR [RSP]
            mov EDX,3
            mov RCX,QWORD PTR [RSP+8]
            mov ESI,3
            mov RDI,QWORD PTR [RAX+56]
            call .L_42a230

            mov RDI,QWORD PTR [RSP+72]
            mov RDX,RAX
            mov ESI,1
            call .L_42bb10

            test EAX,EAX
            je .L_41dfa7

            mov RDI,QWORD PTR [RSP+48]
            call .L_42b6f0

            mov RDI,QWORD PTR [RSP+72]
            mov RDX,RAX
            mov ESI,1
            call .L_42bb10

            test EAX,EAX
            je .L_41dfa7

            mov RDI,QWORD PTR [RSP+40]
            call .L_42b6d0

            mov RDI,QWORD PTR [RSP+48]
            mov RBX,RAX
            call .L_42b6d0

            or DWORD PTR [R13],64
            mov RAX,QWORD PTR [RAX+8]
            mov R13,QWORD PTR [RBX+8]
            mov EDI,DWORD PTR [RBP]
            mov RBX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+16],RAX
            call .L_40aa20

            mov RDI,QWORD PTR [RBX+56]
            mov ESI,101440
            mov DWORD PTR [RSP+28],EAX
            call .L_4210b0

            test RAX,RAX
            mov R14,RAX
            je .L_41dedc

            mov RDX,QWORD PTR [RBX+56]
            mov RSI,QWORD PTR [R13]
            lea RDI,QWORD PTR [RAX+8]
            mov QWORD PTR [RAX],RDX
            call .L_41c140

            mov RSI,QWORD PTR [R13+8]
            lea RDI,QWORD PTR [R14+1032]
            call .L_41c140

            mov RSI,QWORD PTR [R13+16]
            lea RDI,QWORD PTR [R14+2056]
            call .L_41c140

            mov RAX,QWORD PTR [RSP+16]
            mov R13D,DWORD PTR [RSP+28]
            lea RDI,QWORD PTR [R14+3128]
            mov RSI,QWORD PTR [RAX]
            mov EDX,R13D
            call .L_41c230

            mov RAX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R14+35898]
            mov EDX,R13D
            mov RSI,QWORD PTR [RAX+8]
            call .L_41c230

            mov RAX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R14+68668]
            mov EDX,R13D
            mov RSI,QWORD PTR [RAX+16]
            call .L_41c230

            mov RDI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [R14+36]
            mov RSI,R14
            movsd XMM2,QWORD PTR [RIP+.L_42f940]
            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            movsd XMM5,QWORD PTR [RIP+.L_42d9d0]
            movsd XMM4,QWORD PTR [RIP+.L_42d9e0]
            movsd XMM7,QWORD PTR [RIP+.L_42d9d8]
.L_41dde2:

            xor EDX,EDX
.L_41dde4:

            movsd XMM0,QWORD PTR [RDI+RDX*8]
            mulsd XMM0,XMM2
            addsd XMM0,XMM3
            movapd XMM1,XMM0
            movapd XMM6,XMM0
            andpd XMM1,XMM4
            ucomisd XMM5,XMM1
            jbe .L_41de39

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            cvtsi2sd XMM1,RAX
            movapd XMM8,XMM1
            cmpnlesd XMM8,XMM0
            movapd XMM0,XMM8
            andpd XMM0,XMM7
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movapd XMM1,XMM4
            andnpd XMM1,XMM6
            orpd XMM0,XMM1
.L_41de39:

            cvttsd2si EAX,XMM0
            mov DWORD PTR [RSI+RDX*4+3080],EAX
            add RDX,1
            cmp RDX,3
            jne .L_41dde4

            add RSI,12
            add RDI,24
            cmp R8,RSI
            jne .L_41dde2

            xor R13D,R13D
.L_41de5e:

            cmp QWORD PTR [RSP],0
            je .L_41dff6

            mov RAX,QWORD PTR [RSP]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM0,QWORD PTR [RAX+R13*2]
            addsd XMM0,XMM3
            call floor@PLT

            cvttsd2si EAX,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            mov DWORD PTR [R14+R13*1+3116],EAX
.L_41dea4:

            add R13,4
            cmp R13,12
            jne .L_41de5e

            cmp DWORD PTR [RSP+28],0
            je .L_41debc

            or DWORD PTR [RBP],2097152
.L_41debc:

            lea R8,QWORD PTR [RIP+.L_41be80]
            lea RCX,QWORD PTR [RIP+.L_41bf70]
            lea RSI,QWORD PTR [RIP+.L_41bb60]
            mov RDX,R14
            mov RDI,RBX
            call .L_42bd70
.L_41dedc:

            mov RDI,R15
            call .L_42b910

            mov RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [R12],RAX
            mov EAX,1
            jmp .L_41db08
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41df00:

            push R10
.L_41df02:

            push R11
            mov ECX,1835103334
            mov R9,QWORD PTR [RSP+32]
            mov EDX,1668707188
            xor EAX,EAX
            mov R8D,1668707188
            mov ESI,3
            mov RDI,R15
            call .L_42a0b0

            test EAX,EAX
            pop RDX
            pop RCX
            je .L_41db06

            mov RDI,QWORD PTR [RSP+56]
            call .L_42b6d0

            mov RDX,QWORD PTR [RAX]
            lea RDI,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+8],RDI
            movdqu XMM0,XMMWORD PTR [RDX]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+16]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+32]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+48]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov RDX,QWORD PTR [RDX+64]
            mov QWORD PTR [RSP+144],RDX
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP],RAX
            call .L_42c390

            cmp QWORD PTR [RSP],0
            sete DL
            test EAX,EAX
            setne AL
            movzx EAX,AL
            and EAX,EDX
            mov DWORD PTR [RSP+16],EAX
            jmp .L_41dc2f
.L_41dfa7:

            mov RDI,QWORD PTR [RSP+72]
            call .L_42b910

            jmp .L_41db06
.L_41dfb6:

            mov RDI,QWORD PTR [RSP+48]
            call .L_42b6f0

            mov RDI,QWORD PTR [RSP+72]
            mov RDX,RAX
            mov ESI,1
            call .L_42bb10

            test EAX,EAX
            je .L_41dfa7

            lea RDI,QWORD PTR [RSP+72]
            mov R8,R13
            mov RCX,RBP
            mov RDX,RBX
            mov ESI,R14D
            call .L_41c440

            jmp .L_41dedc
.L_41dff1:

            call __stack_chk_fail@PLT
.L_41dff6:

            mov DWORD PTR [R14+R13*1+3116],0
            jmp .L_41dea4
.L_41e007:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e010:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_41e01b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_41e0e0

            test RDI,RDI
            mov RAX,QWORD PTR [RSI+112]
            mov QWORD PTR [RSP],0
            je .L_41e120

            test RAX,RAX
            je .L_41e101

            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_41e0ab

            xor EBP,EBP
            jmp .L_41e06c
          .byte 0x66
          .byte 0x90
.L_41e060:

            mov RBX,QWORD PTR [RBX+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_41e0ab
.L_41e06c:

            mov RDI,QWORD PTR [R12+8]
            mov EDX,16
            mov RSI,RBX
            call .L_4212e0

            test RAX,RAX
            je .L_41e0c2

            test RBP,RBP
            mov QWORD PTR [RAX+8],0
            je .L_41e094

            mov QWORD PTR [RBP+8],RAX
.L_41e094:

            cmp QWORD PTR [RSP],0
            jne .L_41e060

            mov RBX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP],RAX
            mov RBP,RAX
            test RBX,RBX
            jne .L_41e06c
.L_41e0ab:

            mov RDI,QWORD PTR [R12+8]
            mov RSI,RSP
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+112],RAX
.L_41e0c2:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e0fc

            add RSP,16
.L_41e0d6:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e0e0:

            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641d20]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+112],RAX
            jmp .L_41e0c2
.L_41e0fc:

            call __stack_chk_fail@PLT
.L_41e101:

            lea RCX,QWORD PTR [RIP+.L_42f920]
            lea RSI,QWORD PTR [RIP+.L_42f844]
            lea RDI,QWORD PTR [RIP+.L_42decf]
            mov EDX,1814
            call __assert_fail@PLT
.L_41e120:

            lea RCX,QWORD PTR [RIP+.L_42f920]
            lea RSI,QWORD PTR [RIP+.L_42f844]
            lea RDI,QWORD PTR [RIP+.L_42deba]
            mov EDX,1813
            call __assert_fail@PLT
.L_41e13f:

            nop
.L_41e140:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_41e147:

            mov RBX,RSI
            mov ESI,12
            call .L_4068a0

            test RBX,RBX
            mov R12,RAX
            je .L_41e1a0

            cmp QWORD PTR [RBX+24],0
            je .L_41e198

            mov ESI,16
            mov RDI,RBP
            call .L_4064d0

            test RAX,RAX
            je .L_41e198

            mov RDX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [R12]
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [R12],RAX
            mov EAX,1
            pop RBX
.L_41e18e:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e198:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_41e1a0:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_41e1b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e1c0:

            push R15
            push R14
            mov R14,R8
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,R9
            mov RBX,RSI
            mov ESI,12
            mov R12D,EDX
            sub RSP,24
.L_41e1e2:

            call .L_4068a0

            test BYTE PTR [RBP],2
            mov RDI,QWORD PTR [RBX]
            jne .L_41e290

            cmp QWORD PTR [RDI],0
            je .L_41e260

            mov R15,RAX
            call .L_41cce0

            mov RDI,QWORD PTR [RBX]
            mov DWORD PTR [RSP+4],EAX
            cmp QWORD PTR [RDI],0
            je .L_41e260

            test DWORD PTR [RBP],256
            jne .L_41e2c0

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_41e23d

            jmp .L_41e2d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e230:

            mov R15,QWORD PTR [R15+8]
            test R15,R15
            je .L_41e2d0
.L_41e23d:

            mov R8,RBP
            mov RCX,R14
            mov RDX,R13
            mov ESI,R12D
            mov RDI,RBX
            call QWORD PTR [R15]

            test EAX,EAX
            je .L_41e230
.L_41e253:

            mov DWORD PTR [RSP+4],1
            jmp .L_41e27c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e260:

            lea RSI,QWORD PTR [RIP+.L_41bb30]
            xor R8D,R8D
            xor ECX,ECX
            mov RDX,RDI
            call .L_42bd70

            mov DWORD PTR [RSP+4],1
.L_41e27c:

            mov EAX,DWORD PTR [RSP+4]
            add RSP,24
.L_41e284:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41e290:

            call .L_41cce0

            add RSP,24
            mov R8,RBP
            mov RCX,R14
            mov RDX,R13
            mov ESI,R12D
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_41c850
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e2c0:

            mov DWORD PTR [RSP+4],0
            jmp .L_41e27c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e2d0:

            lea R9,QWORD PTR [RIP+.L_640f60]
            jmp .L_41e2ee
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e2e0:

            mov R9,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [R9+8]
            test R9,R9
            je .L_41e27c
.L_41e2ee:

            mov R8,RBP
            mov RCX,R14
            mov RDX,R13
            mov ESI,R12D
            mov RDI,RBX
            mov QWORD PTR [RSP+8],R9
            call QWORD PTR [R9]

            test EAX,EAX
            je .L_41e2e0

            jmp .L_41e253
.L_41e30e:

            nop
            nop
.L_41e310:

            mov EAX,EDI
            lea RDX,QWORD PTR [RIP+.L_430080]
            and EDI,1023
            shr AX,10
            and EAX,63
            movzx EDX,WORD PTR [RDX+RAX*2]
            add EDI,EDX
            lea RDX,QWORD PTR [RIP+.L_42ff80]
            movsxd RDI,EDI
            mov EAX,DWORD PTR [RDX+RAX*4]
            lea RDX,QWORD PTR [RIP+.L_430100]
            add EAX,DWORD PTR [RDX+RDI*4]
            mov DWORD PTR [RSP-4],EAX
            movss XMM0,DWORD PTR [RSP-4]
            ret 
.L_41e34e:

            nop
            nop
.L_41e350:

            movd EDX,XMM0
            lea RCX,QWORD PTR [RIP+.L_42f980]
            movd EAX,XMM0
            shr EDX,23
            and EAX,8388607
            movzx ECX,BYTE PTR [RCX+RDX*1]
            shr EAX,CL
            lea RCX,QWORD PTR [RIP+.L_42fb80]
            add AX,WORD PTR [RCX+RDX*2]
            ret 
.L_41e379:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e380:

            movzx EAX,BYTE PTR [RSI]
            mov EDX,EAX
            shl EDX,8
            or EAX,EDX
            mov WORD PTR [RDI],AX
            ret 
.L_41e38e:

            nop
            nop
.L_41e390:

            movzx EAX,BYTE PTR [RSI]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_42df7c]
            movss DWORD PTR [RDI],XMM0
            ret 
.L_41e3a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e3b0:

            movzx EAX,BYTE PTR [RSI]
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            divsd XMM0,QWORD PTR [RIP+.L_42df58]
            movsd QWORD PTR [RDI],XMM0
            ret 
.L_41e3c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e3d0:

            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDI],AL
            ret 
.L_41e3e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e3f0:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_42df74]
            movss DWORD PTR [RDI],XMM0
            ret 
.L_41e408:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e410:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_42df74]
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RDI],XMM0
            ret 
.L_41e42c:

            nop
            nop
            nop
            nop
.L_41e430:

            movss XMM0,DWORD PTR [RIP+.L_42df7c]
            xor EAX,EAX
            mulss XMM0,DWORD PTR [RSI]
            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM1,XMM0
            jae .L_41e47d

            ucomisd XMM0,QWORD PTR [RIP+.L_42df58]
            mov EAX,4294967295
            jae .L_41e47d

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            sub EAX,1
.L_41e47d:

            mov BYTE PTR [RDI],AL
            ret 
.L_41e480:

            movss XMM0,DWORD PTR [RIP+.L_42df74]
            xor EAX,EAX
            mulss XMM0,DWORD PTR [RSI]
            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM1,XMM0
            jae .L_41e4ce

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jae .L_41e4ce

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_41e4ce:

            mov WORD PTR [RDI],AX
            ret 
.L_41e4d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e4e0:

            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI]
            movsd QWORD PTR [RDI],XMM0
            ret 
.L_41e4ed:

            nop
            nop
            nop
.L_41e4f0:

            movsd XMM1,QWORD PTR [RIP+.L_42df58]
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RSI]
            pxor XMM2,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM2,XMM0
            jae .L_41e539

            ucomisd XMM0,XMM1
            mov EAX,4294967295
            jae .L_41e539

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            sub EAX,1
.L_41e539:

            mov BYTE PTR [RDI],AL
            ret 
.L_41e53c:

            nop
            nop
            nop
            nop
.L_41e540:

            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RSI]
            pxor XMM2,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM2,XMM0
            jae .L_41e58a

            ucomisd XMM0,XMM1
            mov EAX,4294967295
            jae .L_41e58a

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_41e58a:

            mov WORD PTR [RDI],AX
            ret 
.L_41e58e:

            nop
            nop
.L_41e590:

            pxor XMM0,XMM0
            cvtsd2ss XMM0,QWORD PTR [RSI]
            movss DWORD PTR [RDI],XMM0
            ret 
.L_41e59d:

            nop
            nop
            nop
.L_41e5a0:

            mov EAX,EDI
            and EAX,7
            jne .L_41e5c0

            and EDI,4194304
            cmp EDI,1
            sbb EAX,EAX
            or EAX,4
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e5c0:

            cmp EAX,2
            jne .L_41e5d8

            and EDI,4194304
            mov EDX,1
            cmove EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e5d8:

            cmp EAX,4
            jne .L_41e5ec

            and EDI,4194304
            cmp EDI,1
            sbb EAX,EAX
            or EAX,3
            ret 
.L_41e5ec:

            sub EAX,1
            jne .L_41e5fa

            shl EDI,9
            mov EAX,EDI
            sar EAX,31
            ret 
.L_41e5fa:

            or EAX,4294967295
            ret 
.L_41e5fe:

            nop
            nop
.L_41e600:

            movzx EAX,BYTE PTR [RSI]
            mov BYTE PTR [RDI],AL
            ret 
.L_41e606:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e610:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDI],AX
            ret 
.L_41e617:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e620:

            mov EAX,DWORD PTR [RSI]
            mov DWORD PTR [RDI],EAX
            ret 
.L_41e625:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e630:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDI],RAX
            ret 
.L_41e637:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e640:

            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            cvtsd2ss XMM0,QWORD PTR [RSI]
            call .L_41e350

            mov WORD PTR [RBX],AX
            pop RBX
            ret 
.L_41e656:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e660:

            push RBX
            movss XMM0,DWORD PTR [RSI]
            mov RBX,RDI
            call .L_41e350

            mov WORD PTR [RBX],AX
            pop RBX
            ret 
.L_41e672:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e680:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_42df74]
            call .L_41e350

            mov WORD PTR [RBX],AX
            pop RBX
            ret 
.L_41e6a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e6b0:

            movzx EAX,BYTE PTR [RSI]
            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_42df7c]
            call .L_41e350

            mov WORD PTR [RBX],AX
            pop RBX
            ret 
.L_41e6d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e6e0:

            push RBX
            mov RBX,RDI
            movzx EDI,WORD PTR [RSI]
            call .L_41e310

            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RBX],XMM0
            pop RBX
            ret 
.L_41e6f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e700:

            push RBX
            mov RBX,RDI
            movzx EDI,WORD PTR [RSI]
            call .L_41e310

            movss DWORD PTR [RBX],XMM0
            pop RBX
            ret 
.L_41e712:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e720:

            push RBX

            mov RBX,RDI
            movzx EDI,WORD PTR [RSI]
            call .L_41e310

            mulss XMM0,DWORD PTR [RIP+.L_42df74]
            xor EAX,EAX
            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM1,XMM0
            jae .L_41e776

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov EAX,4294967295
            jae .L_41e776

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_41e776:

            mov WORD PTR [RBX],AX
            pop RBX

            ret 
.L_41e77b:

            nop
            nop
            nop
            nop
            nop
.L_41e780:

            push RBX

            mov RBX,RDI
            movzx EDI,WORD PTR [RSI]
            call .L_41e310

            mulss XMM0,DWORD PTR [RIP+.L_42df7c]
            xor EAX,EAX
            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM1,XMM0
            jae .L_41e7d5

            ucomisd XMM0,QWORD PTR [RIP+.L_42df58]
            mov EAX,4294967295
            jae .L_41e7d5

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            sub EAX,1
.L_41e7d5:

            mov BYTE PTR [RBX],AL
            pop RBX

            ret 
.L_41e7d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e7e0:

            push R14
            push R13
            mov R9D,EDI
            push R12
            push RBP
            shr R9D,3
            push RBX
            mov R8D,EDI
            and R9D,15
            and R8D,7
            sub RSP,80
.L_41e7fe:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,EDI
            shr EAX,7
            and EAX,7
            test EDI,4096
            lea R11D,DWORD PTR [RAX+R9*1]
            jne .L_41e860

            lea R10D,DWORD PTR [R11-1]
            test R8D,R8D
            mov ESI,8
            cmove R8D,ESI
            cmp R10D,14
            jbe .L_41e988
.L_41e83c:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41ea8b

            add RSP,80
.L_41e854:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e860:

            test R8D,R8D
            mov R10D,8
            cmove R8D,R10D
            lea R10D,DWORD PTR [R11-1]
            cmp R10D,14
            ja .L_41e83c

            pxor XMM0,XMM0
            test EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            je .L_41e8ac

            lea EBX,DWORD PTR [RAX-1]
            lea RBX,QWORD PTR [RCX+RBX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e8a0:

            mov DWORD PTR [RCX],R8D
            add RCX,4
            cmp RBX,RCX
            jne .L_41e8a0
.L_41e8ac:

            mov EBP,R10D
            mov R14D,EDI
            mov ECX,1
            lea R13,QWORD PTR [RBP+2]
            and R14D,1024
            mov RBX,RSP
            nop
            nop
            nop
.L_41e8c8:

            lea R12D,DWORD PTR [RCX-1]
            mov R8D,R11D
            sub R8D,ECX
            test R14D,R14D
            cmove R8D,R12D
            mov DWORD PTR [RBX+RCX*4-4],R8D
            add RCX,1
            cmp R13,RCX
            jne .L_41e8c8

            and EDI,16384
            mov R8D,DWORD PTR [RSP]
            je .L_41e92e

            test R10D,R10D
            je .L_41e923

            lea RCX,QWORD PTR [RBX+4]
            sub R11D,2
            mov RDI,RBX
            lea R12,QWORD PTR [RCX+R11*4]
            jmp .L_41e914
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e910:

            add RCX,4
.L_41e914:

            mov R11D,DWORD PTR [RDI+4]
            cmp RCX,R12
            mov DWORD PTR [RDI],R11D
            mov RDI,RCX
            jne .L_41e910
.L_41e923:

            movsxd R10,R10D
            mov DWORD PTR [RSP+R10*4],R8D
            mov R8D,DWORD PTR [RSP]
.L_41e92e:

            lea RCX,QWORD PTR [RBX+4]
            mov RDI,RBX
            lea R10,QWORD PTR [RCX+RBP*4]
            jmp .L_41e947
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e940:

            mov R8D,DWORD PTR [RCX]
            add RCX,4
.L_41e947:

            imul R8D,ESI
            cmp R10,RCX
            mov DWORD PTR [RDI],R8D
            mov RDI,RCX
            jne .L_41e940

            test EAX,EAX
            je .L_41e83c

            movsxd R9,R9D
            xor ECX,ECX
            lea RDI,QWORD PTR [RBX+R9*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e970:

            mov ESI,DWORD PTR [RDI+RCX*4]
            mov DWORD PTR [RDX+RCX*4],ESI
            add RCX,1
            cmp EAX,ECX
            jg .L_41e970

            jmp .L_41e83c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e988:

            pxor XMM0,XMM0
            test EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            je .L_41e9c3

            mov EBX,R11D
            lea ESI,DWORD PTR [RAX-1]
            imul EBX,R8D
            lea RSI,QWORD PTR [RCX+RSI*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e9b8:

            mov DWORD PTR [RCX],EBX
            add RCX,4
            cmp RCX,RSI
            jne .L_41e9b8
.L_41e9c3:

            mov EBP,R10D
            mov R13D,EDI
            xor ECX,ECX
            lea R12,QWORD PTR [RBP+1]
            and R13D,1024
            mov RBX,RSP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e9e0:

            mov ESI,R10D
            sub ESI,ECX
            test R13D,R13D
            cmove ESI,ECX
            mov DWORD PTR [RBX+RCX*4],ESI
            add RCX,1
            cmp RCX,R12
            jne .L_41e9e0

            and EDI,16384
            je .L_41ea38

            cmp R11D,1
            je .L_41ea38

            lea EDI,DWORD PTR [R11-2]
            lea RCX,QWORD PTR [RBX+4]
            mov R12D,DWORD PTR [RSP]
            mov RSI,RBX
            lea R11,QWORD PTR [RCX+RDI*4]
            jmp .L_41ea24
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ea20:

            add RCX,4
.L_41ea24:

            mov EDI,DWORD PTR [RSI+4]
            cmp RCX,R11
            mov DWORD PTR [RSI],EDI
            mov RSI,RCX
            jne .L_41ea20

            movsxd R10,R10D
            mov DWORD PTR [RSP+R10*4],R12D
.L_41ea38:

            cmp R8D,1
            je .L_41ea64

            lea RCX,QWORD PTR [RBX+4]
            mov RSI,RBX
            lea R10,QWORD PTR [RCX+RBP*4]
            jmp .L_41ea54
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ea50:

            add RCX,4
.L_41ea54:

            mov EDI,DWORD PTR [RSI]
            imul EDI,R8D
            cmp R10,RCX
            mov DWORD PTR [RSI],EDI
            mov RSI,RCX
            jne .L_41ea50
.L_41ea64:

            test EAX,EAX
            je .L_41e83c

            movsxd R9,R9D
            xor ECX,ECX
            lea RDI,QWORD PTR [RBX+R9*4]
            nop
            nop
            nop
.L_41ea78:

            mov ESI,DWORD PTR [RDI+RCX*4]
            mov DWORD PTR [RDX+RCX*4],ESI
            add RCX,1
            cmp EAX,ECX
            jg .L_41ea78

            jmp .L_41e83c
.L_41ea8b:

            call __stack_chk_fail@PLT
.L_41ea90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,776
.L_41eaa1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+760],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+211],4
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+56],R8D
            mov QWORD PTR [RSP+32],R9
            je .L_41eb00

            mov RBP,RDI
            mov EDI,DWORD PTR [RDI]
            mov EAX,DWORD PTR [RBP+4]
            cmp EDI,EAX
            jne .L_41eae6

            cmp RSI,RDX
            je .L_41eb00
.L_41eae6:

            mov EBX,EDI
            shr EAX,7
            shr EBX,7
            and EAX,7
            and EBX,7
            cmp EAX,EBX
            jne .L_41eb00

            test EBX,EBX
            jne .L_41eb30

            nop
            nop
            nop
            nop
.L_41eb00:

            mov RAX,QWORD PTR [RSP+760]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41eea3

            add RSP,776
.L_41eb1e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eb30:

            mov R15,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RSP+176]
            lea RDX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+88],RDX
            mov ESI,DWORD PTR [R15+8]
            call .L_41e7e0

            mov ESI,DWORD PTR [R15+12]
            mov EDI,DWORD PTR [RBP+4]
            lea RCX,QWORD PTR [RSP+304]
            lea RDX,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+104],RCX
            mov QWORD PTR [RSP+96],RDX
            call .L_41e7e0

            mov EDI,DWORD PTR [RBP]
            call .L_41e5a0

            mov EDI,DWORD PTR [RBP+4]
            movsxd RCX,EAX
            call .L_41e5a0

            cmp ECX,4
            ja .L_41ec71

            cmp EAX,4
            ja .L_41ec71

            lea RDX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RAX,RDX
            lea RDX,QWORD PTR [RIP+.L_63dd40]
            mov RAX,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [RSP+8],RAX
.L_41ebb9:

            cmp EBX,1
            jne .L_41ec99

            mov ECX,DWORD PTR [RSP+56]
            test ECX,ECX
            je .L_41eb00

            mov R14,QWORD PTR [RSP+8]
            mov EBX,DWORD PTR [RSP+28]
            xor R12D,R12D
            xor EBP,EBP
            xor R13D,R13D
            mov DWORD PTR [RSP+16],R12D
            mov DWORD PTR [RSP+4],EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ebf0:

            mov EDX,DWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+112]
            mov RCX,QWORD PTR [RSP+40]
            add RAX,RDX
            mov EDX,DWORD PTR [RSP+240]
            lea RBP,QWORD PTR [RCX+RAX*1]
            mov RAX,QWORD PTR [RSP+48]
            mov ECX,R13D
            add RDX,RCX
            test EBX,EBX
            lea R12,QWORD PTR [RAX+RDX*1]
            je .L_41ec4e

            xor R15D,R15D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ec28:

            mov RSI,RBP
            mov RDI,R12
            add R15D,1
            call R14

            mov ESI,DWORD PTR [RSP+176]
            add RBP,RSI
            mov ESI,DWORD PTR [RSP+304]
            add R12,RSI
            cmp EBX,R15D
            jne .L_41ec28
.L_41ec4e:

            mov RAX,QWORD PTR [RSP+32]
            add DWORD PTR [RSP+4],1
            mov ECX,DWORD PTR [RAX]
            add R13D,DWORD PTR [RAX+4]
            add DWORD PTR [RSP+16],ECX
            mov EAX,DWORD PTR [RSP+4]
            cmp DWORD PTR [RSP+56],EAX
            jne .L_41ebf0

            jmp .L_41eb00
.L_41ec71:

            mov RDI,QWORD PTR [RBP+232]
            lea RDX,QWORD PTR [RIP+.L_432100]
            mov ESI,8
            xor EAX,EAX
            call .L_421420

            mov QWORD PTR [RSP+8],0
            jmp .L_41ebb9
.L_41ec99:

            mov EDX,DWORD PTR [RSP+56]
            pxor XMM0,XMM0
            test EDX,EDX
            movaps XMMWORD PTR [RSP+368],XMM0
            movaps XMMWORD PTR [RSP+384],XMM0
            movaps XMMWORD PTR [RSP+400],XMM0
            movaps XMMWORD PTR [RSP+416],XMM0
            movaps XMMWORD PTR [RSP+432],XMM0
            movaps XMMWORD PTR [RSP+448],XMM0
            movaps XMMWORD PTR [RSP+464],XMM0
            movaps XMMWORD PTR [RSP+480],XMM0
            je .L_41eb00

            lea RAX,QWORD PTR [RSP+368]
            lea R14,QWORD PTR [RSP+496]
            lea R15,QWORD PTR [RSP+624]
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RSP+432]
            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            mov DWORD PTR [RSP+60],0
            mov QWORD PTR [RSP+72],RAX
            mov RAX,R14
            mov R14,R15
            mov R15,RAX
            nop
            nop
            nop
            nop
.L_41ed38:

            mov ESI,DWORD PTR [RSP+68]
            mov EAX,DWORD PTR [RSP+64]
            xor ECX,ECX
            mov RDI,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+88]
            mov RBP,QWORD PTR [RSP+80]
            mov R10,QWORD PTR [RSP+96]
            jmp .L_41ed70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ed68:

            mov EAX,DWORD PTR [RBP+RCX*4]
            mov ESI,DWORD PTR [R11+RCX*4]
.L_41ed70:

            mov EDX,DWORD PTR [R9+RCX*4]
            add RDX,RAX
            mov EAX,DWORD PTR [R10+RCX*4]
            add RDX,RDI
            mov QWORD PTR [R15+RCX*8],RDX
            add RAX,RSI
            add RAX,R8
            mov QWORD PTR [R14+RCX*8],RAX
            add RCX,1
            cmp EBX,ECX
            ja .L_41ed68

            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            je .L_41ee31

            mov R13,QWORD PTR [RSP+104]
            mov RAX,R15
            mov DWORD PTR [RSP+24],0
            mov R15,R14
            mov DWORD PTR [RSP+4],EBX
            mov R14,RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41edc0:

            mov R12,R15
            xor EBX,EBX
            mov R15,R13
            mov R13,R14
            nop
            nop
            nop
            nop
            nop
.L_41edd0:

            mov R14,QWORD PTR [R13+RBX*8]
            mov RBP,QWORD PTR [R12+RBX*8]
            mov RAX,QWORD PTR [RSP+8]
            mov RSI,R14
            mov RDI,RBP
            call RAX

            mov RAX,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [RAX+RBX*4]
            lea RAX,QWORD PTR [R14+RSI*1]
            mov QWORD PTR [R13+RBX*8],RAX
            mov EAX,DWORD PTR [R15+RBX*4]
            add RBP,RAX
            mov QWORD PTR [R12+RBX*8],RBP
            add RBX,1
            cmp DWORD PTR [RSP+4],EBX
            ja .L_41edd0

            add DWORD PTR [RSP+24],1
            mov R14,R13
            mov R13,R15
            mov EAX,DWORD PTR [RSP+24]
            cmp DWORD PTR [RSP+28],EAX
            mov R15,R12
            jne .L_41edc0

            mov EBX,DWORD PTR [RSP+4]
            mov RAX,R14
            mov R14,R12
            mov R15,RAX
.L_41ee31:

            mov RAX,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RSP+64]
            mov EDI,DWORD PTR [RSP+68]
            mov R8,QWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+80]
            mov ESI,DWORD PTR [RAX]
            mov ECX,DWORD PTR [RAX+4]
            xor EAX,EAX
            jmp .L_41ee60
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ee58:

            mov EDX,DWORD PTR [R9+RAX*4]
            mov EDI,DWORD PTR [R8+RAX*4]
.L_41ee60:

            add EDX,ESI
            mov DWORD PTR [R9+RAX*4],EDX
            lea EDX,DWORD PTR [RCX+RDI*1]
            mov DWORD PTR [R8+RAX*4],EDX
            add RAX,1
            cmp EBX,EAX
            ja .L_41ee58

            add DWORD PTR [RSP+60],1
            mov EAX,DWORD PTR [RSP+60]
            cmp DWORD PTR [RSP+56],EAX
            je .L_41eb00

            mov EAX,DWORD PTR [RSP+368]
            mov DWORD PTR [RSP+64],EAX
            mov EAX,DWORD PTR [RSP+432]
            mov DWORD PTR [RSP+68],EAX
            jmp .L_41ed38
.L_41eea3:

            call __stack_chk_fail@PLT
.L_41eea8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41eeb0:

            push RBX
            sub RSP,304
.L_41eeb8:

            movdqa XMM0,XMMWORD PTR [RDI]
            lea RBX,QWORD PTR [RSP+224]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+144],XMM0
            mov RAX,QWORD PTR [RDI+64]
            mov RSI,RBX
            movdqa XMM0,XMMWORD PTR [RDI+16]
            mov QWORD PTR [RSP+208],RAX
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqa XMM0,XMMWORD PTR [RDI+32]
            movaps XMMWORD PTR [RSP+176],XMM0
            movdqa XMM0,XMMWORD PTR [RDI+48]
            lea RDI,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+192],XMM0
            call .L_42c5f0

            test EAX,EAX
            pxor XMM0,XMM0
            jne .L_41ef50
.L_41ef2a:

            mov RAX,QWORD PTR [RSP+296]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41eff2

            add RSP,304
.L_41ef48:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ef50:

            call .L_40cfe0

            movsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+112],XMM0
            call .L_40cfe0

            movsd XMM0,QWORD PTR [RAX+8]
            movsd QWORD PTR [RSP+120],XMM0
            call .L_40cfe0

            lea RDX,QWORD PTR [RSP+112]
            movsd XMM0,QWORD PTR [RAX+16]
            lea RDI,QWORD PTR [RSP+80]
            mov RSI,RBX
            lea RBX,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+128],XMM0
            call .L_42c780

            movsd XMM0,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+16]
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+32],XMM0
            call .L_40abe0

            lea RDI,QWORD PTR [RSP+8]
            mov RSI,RBX
            call .L_40d1b0

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_42de90]
            je .L_41ef2a

            movsd XMM0,QWORD PTR [RSP+8]
            jmp .L_41ef2a
.L_41eff2:

            call __stack_chk_fail@PLT
.L_41eff7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f000:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R14D,EDX
            push RBP
            push RBX
            movsxd RBP,EDI
            mov RDI,R8
            mov RBX,R9
            mov R13,RSI
            sub RSP,760
.L_41f023:

            mov R12,R8
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+744],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP+8],XMM0
            call .L_42c340

            pxor XMM2,XMM2
            mov RDI,RBX
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            call .L_42c1a0

            cmp R14D,3
            je .L_41f348

            test R15D,R15D
            jne .L_41f0c8
.L_41f067:

            movsd XMM1,QWORD PTR [RIP+.L_42df60]
            mov EAX,1
            movsd XMM0,QWORD PTR [RBX]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RBX+8]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+16],XMM0
.L_41f09c:

            mov RCX,QWORD PTR [RSP+744]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41f720

            add RSP,760
.L_41f0ba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f0c8:

            mov RSI,QWORD PTR [R13+RBP*8-8]
            lea RDI,QWORD PTR [RSP+128]
            xor ECX,ECX
            mov EDX,R14D
            call .L_42cb30

            mov RSI,QWORD PTR [R13+RBP*8]
            lea RDI,QWORD PTR [RSP+160]
            xor ECX,ECX
            mov EDX,R14D
            call .L_42cd40

            movsd XMM0,QWORD PTR [RSP+128]
            ucomisd XMM0,QWORD PTR [RSP+160]
            jp .L_41f140

            jne .L_41f140

            movsd XMM1,QWORD PTR [RSP+136]
            ucomisd XMM1,QWORD PTR [RSP+168]
            jp .L_41f140

            jne .L_41f140

            movsd XMM1,QWORD PTR [RSP+144]
            ucomisd XMM1,QWORD PTR [RSP+176]
            jp .L_41f140

            je .L_41f067

            nop
            nop
            nop
            nop
.L_41f140:

            movsd QWORD PTR [RSP+8],XMM0
            call .L_40cfe0

            movsd XMM0,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+136]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40cfe0

            movsd XMM0,QWORD PTR [RSP+16]
            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+144]
            subsd XMM4,QWORD PTR [RAX+8]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM4
            call .L_40cfe0

            movsd XMM0,QWORD PTR [RSP+24]
            movapd XMM6,XMM0
            movsd XMM0,QWORD PTR [RSP+160]
            subsd XMM6,QWORD PTR [RAX+16]
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+24],XMM6
            call .L_40cfe0

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+168]
            subsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+32],XMM7
            divsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+56],XMM0
            call .L_40cfe0

            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+176]
            subsd XMM7,QWORD PTR [RAX+8]
            movsd QWORD PTR [RSP+32],XMM6
            divsd XMM7,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+48],XMM7
            call .L_40cfe0

            movsd XMM6,QWORD PTR [RSP+32]
            subsd XMM6,QWORD PTR [RAX+16]
            divsd XMM6,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+40],XMM6
            call .L_40cfe0

            movsd XMM3,QWORD PTR [RSP+160]
            movsd XMM1,QWORD PTR [RAX]
            subsd XMM3,QWORD PTR [RSP+128]
            xorpd XMM1,XMMWORD PTR [RIP+.L_42e2e0]
            mulsd XMM3,XMM1
            divsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM3
            call .L_40cfe0

            movsd XMM4,QWORD PTR [RSP+168]
            movsd XMM1,QWORD PTR [RAX+8]
            subsd XMM4,QWORD PTR [RSP+136]
            xorpd XMM1,XMMWORD PTR [RIP+.L_42e2e0]
            mulsd XMM4,XMM1
            divsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+16],XMM4
            call .L_40cfe0

            movsd XMM5,QWORD PTR [RSP+176]
            mov RDI,R12
            movsd XMM1,QWORD PTR [RAX+16]
            subsd XMM5,QWORD PTR [RSP+144]
            pxor XMM2,XMM2
            xorpd XMM1,XMMWORD PTR [RIP+.L_42e2e0]
            movsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM5,XMM1
            pxor XMM1,XMM1
            divsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM5
            call .L_42c1a0

            movsd XMM7,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R12+24]
            pxor XMM2,XMM2
            pxor XMM0,XMM0
            movapd XMM1,XMM7
            call .L_42c1a0

            movsd XMM6,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [R12+48]
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            movapd XMM2,XMM6
            call .L_42c1a0

            movsd XMM5,QWORD PTR [RSP+8]
            mov RDI,RBX
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM2,XMM5
            movapd XMM1,XMM4
            movapd XMM0,XMM3
            call .L_42c1a0

            jmp .L_41f067
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f348:

            shl RBP,3
            lea RDI,QWORD PTR [RSP+64]
            lea R14,QWORD PTR [RSP+192]
            lea R15,QWORD PTR [R13+RBP*1-8]
            add RBP,R13
            lea R13,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [R15]
            call .L_4280c0

            mov RSI,QWORD PTR [R15]
            mov RDI,R14
            call .L_428160

            mov RSI,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RSP+96]
            call .L_4280c0

            mov RSI,QWORD PTR [RBP]
            mov RDI,R13
            call .L_428160

            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM3,QWORD PTR [RIP+.L_42d9d8]
            jp .L_41f3ac

            je .L_41f520
.L_41f3ac:

            movsd XMM0,QWORD PTR [RSP+64]
            lea RBP,QWORD PTR [RSP+352]
            pxor XMM2,XMM2
            divsd XMM0,QWORD PTR [RSP+96]
            mov RDI,RBP
            pxor XMM1,XMM1
            call .L_42c1a0

            movsd XMM1,QWORD PTR [RSP+72]
            lea RDI,QWORD PTR [RBP+24]
            pxor XMM2,XMM2
            divsd XMM1,QWORD PTR [RSP+104]
            pxor XMM0,XMM0
            call .L_42c1a0

            movsd XMM2,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RBP+48]
            pxor XMM1,XMM1
            divsd XMM2,QWORD PTR [RSP+112]
            pxor XMM0,XMM0
            call .L_42c1a0

            pxor XMM6,XMM6
            movsd XMM5,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM6
            jp .L_41f580

            jne .L_41f580

            movdqa XMM0,XMMWORD PTR [RSP+272]
            lea R14,QWORD PTR [RSP+512]
            lea RSI,QWORD PTR [RSP+432]
            mov RAX,QWORD PTR [RSP+336]
            mov RDX,RBP
            lea RBP,QWORD PTR [RSP+672]
            movaps XMMWORD PTR [RSP+432],XMM0
            mov RDI,R14
            movdqa XMM0,XMMWORD PTR [RSP+288]
            mov QWORD PTR [RSP+496],RAX
            movaps XMMWORD PTR [RSP+448],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+304]
            movaps XMMWORD PTR [RSP+464],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+320]
            movaps XMMWORD PTR [RSP+480],XMM0
            call .L_42c480

            mov RDX,R13
            mov RSI,R14
            mov RDI,R12
            call .L_42c480

            movdqa XMM0,XMMWORD PTR [RSP+192]
            lea RDI,QWORD PTR [RSP+592]
            mov RAX,QWORD PTR [RSP+256]
            mov RSI,RBP
            movaps XMMWORD PTR [RSP+592],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+208]
            mov QWORD PTR [RSP+656],RAX
            movaps XMMWORD PTR [RSP+608],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+224]
            movaps XMMWORD PTR [RSP+624],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+240]
            movaps XMMWORD PTR [RSP+640],XMM0
            call .L_42c5f0

            test EAX,EAX
            jne .L_41f700
.L_41f515:

            xor EAX,EAX
            jmp .L_41f09c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f520:

            movsd XMM0,QWORD PTR [RSP+64]
            mov RDI,R12
            pxor XMM2,XMM2
            divsd XMM0,QWORD PTR [RSP+96]
            pxor XMM1,XMM1
            call .L_42c1a0

            movsd XMM1,QWORD PTR [RSP+72]
            lea RDI,QWORD PTR [R12+24]
            pxor XMM2,XMM2
            divsd XMM1,QWORD PTR [RSP+104]
            pxor XMM0,XMM0
            call .L_42c1a0

            movsd XMM2,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [R12+48]
            pxor XMM1,XMM1
            divsd XMM2,QWORD PTR [RSP+112]
            pxor XMM0,XMM0
            call .L_42c1a0

            jmp .L_41f067
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f580:

            movdqa XMM0,XMMWORD PTR [RSP+192]
            lea R15,QWORD PTR [RSP+512]
            mov RAX,QWORD PTR [RSP+256]
            lea RDI,QWORD PTR [RSP+432]
            movaps XMMWORD PTR [RSP+432],XMM0
            mov RSI,R15
            movdqa XMM0,XMMWORD PTR [RSP+208]
            mov QWORD PTR [RSP+496],RAX
            movaps XMMWORD PTR [RSP+448],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+224]
            movaps XMMWORD PTR [RSP+464],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+240]
            movaps XMMWORD PTR [RSP+480],XMM0
            call .L_42c5f0

            test EAX,EAX
            je .L_41f515

            lea RAX,QWORD PTR [RSP+592]
            mov RDX,RBP
            mov RSI,R15
            mov RDI,RAX
            mov QWORD PTR [RSP+24],RAX
            call .L_42c480

            mov RDI,R14
            call .L_41eeb0

            mov RDI,R13
            movsd QWORD PTR [RSP+16],XMM0
            call .L_41eeb0

            pxor XMM2,XMM2
            ucomisd XMM2,QWORD PTR [RSP+16]
            ja .L_41f515

            ucomisd XMM2,XMM0
            movsd QWORD PTR [RSP+32],XMM0
            ja .L_41f515

            mov RDI,RBP
            call .L_42c390

            test EAX,EAX
            movsd XMM0,QWORD PTR [RSP+32]
            je .L_41f67f

            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RIP+.L_432170]
            subsd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMMWORD PTR [RIP+.L_42d9e0]
            ucomisd XMM2,XMM1
            ja .L_41f713
.L_41f67f:

            movsd XMM5,QWORD PTR [RSP+8]
            lea RBP,QWORD PTR [RSP+160]
            lea R13,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,RBP
            subsd XMM1,XMM5
            mulsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            addsd XMM0,XMM1
            call .L_40d020

            mov RSI,RBP
            lea RBP,QWORD PTR [RSP+672]
            mov RDI,R13
            call .L_40ac20

            call .L_40cfe0

            mov RDX,R13
            xor ESI,ESI
            mov RDI,RBP
            mov RCX,RAX
            call .L_40d3d0

            mov RSI,QWORD PTR [RSP+24]
            mov RDX,RBP
            mov RDI,R12
            call .L_42c480

            jmp .L_41f067
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f700:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call .L_42c480

            jmp .L_41f067
.L_41f713:

            mov RDI,R12
            call .L_42c340

            jmp .L_41f067
.L_41f720:

            call __stack_chk_fail@PLT
.L_41f725:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f730:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            xor EDX,EDX
            sub RSP,160
.L_41f74a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            lea R13,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
.L_41f76a:

            movzx EAX,WORD PTR [RBX+RDX*2]
            pxor XMM0,XMM0
            pxor XMM7,XMM7
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [R13+RDX*4],XMM7
            add RDX,1
            cmp RDX,4
            jne .L_41f76a

            mov RDI,QWORD PTR [R12+24]
            movss XMM0,DWORD PTR [RSP+108]
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4237f0

            cmp WORD PTR [RBX],0
            movss DWORD PTR [RSP+140],XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            jne .L_41f7c9

            cmp WORD PTR [RBX+2],0
            je .L_41f8b0
.L_41f7c9:

            mov RDX,QWORD PTR [R12]
            lea RBX,QWORD PTR [RSP+112]
            mov RDI,R13
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,RBX
            call .L_42b9c0

            pxor XMM2,XMM2
            xor EDX,EDX
            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            mov ECX,4294967295
            movsd XMM5,QWORD PTR [RIP+.L_42df38]
            movsd XMM4,QWORD PTR [RIP+.L_42df40]
            movsd XMM1,QWORD PTR [RSP+8]
.L_41f80c:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtss2sd XMM0,DWORD PTR [RBX+RDX*4]
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_41f840

            ucomisd XMM0,XMM1
            mov EAX,ECX
            jae .L_41f840

            subsd XMM0,XMM5
            addsd XMM0,XMM4
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_41f840:

            mov WORD PTR [RBP+RDX*2],AX
            add RDX,1
            cmp RDX,4
            jne .L_41f80c

            movss XMM0,DWORD PTR [RSP+124]
            subss XMM0,DWORD PTR [RSP+140]
            movsd XMM4,QWORD PTR [RIP+.L_432178]
            andps XMM0,XMMWORD PTR [RIP+.L_42de70]
            cvtss2sd XMM0,XMM0
            ucomisd XMM4,XMM0
            jbe .L_41f918
.L_41f87b:

            mov RSI,QWORD PTR [RSP+152]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_41fb55

            add RSP,160
.L_41f89e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f8b0:

            cmp WORD PTR [RBX+4],0
            jne .L_41f7c9

            cvtss2sd XMM0,XMM0
            pxor XMM2,XMM2
            xor EAX,EAX
            mov DWORD PTR [RBP],0
            mulsd XMM0,XMM1
            mov WORD PTR [RBP+4],AX
            xor EAX,EAX
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM2,XMM0
            jae .L_41f90a

            ucomisd XMM0,XMM1
            mov EAX,4294967295
            jae .L_41f90a

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_41f90a:

            mov WORD PTR [RBP+6],AX
            jmp .L_41f87b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f918:

            mov RDI,QWORD PTR [R12+8]
            lea R13,QWORD PTR [RSP+32]
            mov ECX,1
            mov RSI,RBP
            movsd QWORD PTR [RSP+24],XMM3
            lea R14,QWORD PTR [RSP+128]
            mov RDX,R13
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_40edf0

            mov RDI,QWORD PTR [R12+16]
            mov ECX,1
            mov RDX,R14
            mov RSI,RBX
            call .L_40edf0

            mov RCX,QWORD PTR [R12+32]
            mov RDX,RBX
            mov RSI,RBX
            mov RDI,R14
            call .L_42bd90

            test EAX,EAX
            je .L_41f87b

            movss XMM6,DWORD PTR [RSP+112]
            movaps XMM7,XMM6
            movss XMM4,DWORD PTR [RSP+116]
            movss XMM0,DWORD PTR [RSP+120]
            addss XMM7,XMM4
            movss XMM5,DWORD PTR [RSP+140]
            movss DWORD PTR [RSP+124],XMM5
            cvtss2sd XMM5,XMM5
            movsd XMM9,QWORD PTR [R12+56]
            addss XMM7,XMM0
            movapd XMM8,XMM5
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            cvtss2sd XMM7,XMM7
            addsd XMM8,XMM7
            ucomisd XMM8,XMM9
            jbe .L_41fb48

            subsd XMM8,XMM9
            movapd XMM10,XMM2
            divsd XMM8,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_42d9d8]
            subsd XMM7,XMM8
            maxsd XMM10,XMM7
            movapd XMM7,XMM10
.L_41fa04:

            cvtss2sd XMM6,XMM6
            xor EAX,EAX
            mulsd XMM6,XMM7
            mulsd XMM6,XMM1
            addsd XMM6,XMM3
            ucomisd XMM2,XMM6
            jae .L_41fa42

            ucomisd XMM6,XMM1
            mov EAX,4294967295
            jae .L_41fa42

            subsd XMM6,QWORD PTR [RIP+.L_42df38]
            addsd XMM6,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM6
            sar EAX,16
            add AX,32767
.L_41fa42:

            cvtss2sd XMM4,XMM4
            mov WORD PTR [RBP],AX
            xor EAX,EAX
            mulsd XMM4,XMM7
            mulsd XMM4,XMM1
            addsd XMM4,XMM3
            ucomisd XMM2,XMM4
            jae .L_41fa84

            ucomisd XMM4,XMM1
            mov EAX,4294967295
            jae .L_41fa84

            subsd XMM4,QWORD PTR [RIP+.L_42df38]
            addsd XMM4,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM4
            sar EAX,16
            add AX,32767
.L_41fa84:

            cvtss2sd XMM0,XMM0
            mov WORD PTR [RBP+2],AX
            xor EAX,EAX
            mulsd XMM0,XMM7
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_41fac6

            ucomisd XMM0,XMM1
            mov EAX,4294967295
            jae .L_41fac6

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_41fac6:

            mulsd XMM5,XMM1
            mov WORD PTR [RBP+4],AX
            xor EAX,EAX
            addsd XMM3,XMM5
            ucomisd XMM2,XMM3
            jae .L_41fb00

            ucomisd XMM3,XMM1
            mov EAX,4294967295
            jae .L_41fb00

            subsd XMM3,QWORD PTR [RIP+.L_42df38]
            addsd XMM3,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM3
            sar EAX,16
            add AX,32767
.L_41fb00:

            lea RBX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [R12+8]
            mov WORD PTR [RBP+6],AX
            mov ECX,1
            mov RSI,RBP
            mov RDX,RBX
            call .L_40edf0

            mov RSI,RBX
            mov RDI,R13
            call .L_40b5c0

            ucomisd XMM0,QWORD PTR [R12+40]
            jbe .L_41f87b

            movsd QWORD PTR [R12+40],XMM0
            jmp .L_41f87b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fb48:

            movsd XMM7,QWORD PTR [RIP+.L_42d9d8]
            jmp .L_41fa04
.L_41fb55:

            call __stack_chk_fail@PLT
.L_41fb5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41fb60:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBX,RSI
            sub RSP,80
.L_41fb6e:

            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_42c340

            pxor XMM4,XMM4
            xor EAX,EAX
            movq XMM3,QWORD PTR [RIP+.L_42d9e0]
.L_41fb97:

            movsd XMM0,QWORD PTR [R12+RAX*1]
            subsd XMM0,QWORD PTR [RBP+RAX*1]
            add RAX,8
            cmp RAX,72
            andpd XMM0,XMM3
            addsd XMM4,XMM0
            jne .L_41fb97

            movsd XMM1,QWORD PTR [RBX]
            xor EAX,EAX
            movapd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+8]
            andpd XMM2,XMM3
            andpd XMM1,XMM3
            addsd XMM2,XMM4
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+16]
            andpd XMM1,XMM3
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42e078]
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            seta AL
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_41fc0d

            add RSP,80
.L_41fc08:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41fc0d:

            call __stack_chk_fail@PLT
.L_41fc12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fc20:

            push RBP
            push RBX
            mov RBP,RCX
            mov RBX,RDI
            sub RSP,24
.L_41fc2c:

            cmp ESI,1281450528
            je .L_41fcd0

            cmp ESI,1482250784
            jne .L_41fc80

            cmp EDX,1281450528
            je .L_41fd10

            cmp EDX,1482250784
            jne .L_41fcc6

            mov RSI,R8
            mov QWORD PTR [RSP+8],R8
.L_41fc5c:

            mov RDI,RBP
            call .L_41fb60

            test EAX,EAX
            mov R8,QWORD PTR [RSP+8]
            je .L_41fd80
.L_41fc71:

            add RSP,24
.L_41fc75:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41fc80:

            xor EAX,EAX
            cmp ESI,EDX
            sete AL
            add RSP,24
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_41fc90:

            mov RSI,R8
            mov RDI,RCX
            mov QWORD PTR [RSP+8],R8
            call .L_41fb60

            test EAX,EAX
            jne .L_41fc71

            mov RDI,QWORD PTR [RBX+56]
            call .L_42ac90

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBX
            call .L_42bb10

            test EAX,EAX
            mov R8,QWORD PTR [RSP+8]
            jne .L_41fd29
.L_41fcc6:

            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_41fcd0:

            cmp EDX,1281450528
            je .L_41fc90

            cmp EDX,1482250784
            mov QWORD PTR [RSP+8],R8
            jne .L_41fcc6

            mov RDI,QWORD PTR [RDI+56]
            call .L_42ac90

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBX
            call .L_42bb10

            test EAX,EAX
            mov R8,QWORD PTR [RSP+8]
            je .L_41fcc6

            mov RSI,R8
            jmp .L_41fc5c
          .byte 0x90
.L_41fd10:

            mov RSI,R8
            mov RDI,RCX
            mov QWORD PTR [RSP+8],R8
            call .L_41fb60

            test EAX,EAX
            mov R8,QWORD PTR [RSP+8]
            jne .L_41fd57
.L_41fd29:

            mov RDI,QWORD PTR [RBX+56]
            mov RCX,RBP
            mov EDX,3
            mov ESI,3
            call .L_42a230

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBX
            call .L_42bb10

            test EAX,EAX
            je .L_41fcc6
.L_41fd57:

            mov RDI,QWORD PTR [RBX+56]
            call .L_42ae90
.L_41fd60:

            mov RDI,RBX
            mov RDX,RAX
            mov ESI,1
            call .L_42bb10

            test EAX,EAX
            setne AL
            add RSP,24
.L_41fd79:

            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_41fd80:

            mov RDI,QWORD PTR [RBX+56]
            mov RCX,RBP
            mov EDX,3
            mov ESI,3
            call .L_42a230

            jmp .L_41fd60
.L_41fd98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fda0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,216
.L_41fdb1:

            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+88],RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RCX
            xor ECX,ECX
            test ESI,ESI
            mov DWORD PTR [RSP+68],ESI
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+72],R8
            mov QWORD PTR [RSP+80],R9
            je .L_420071

            mov RDI,QWORD PTR [RSP+88]
            xor EDX,EDX
            xor ESI,ESI
            call .L_42b7d0

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_420071

            mov RAX,QWORD PTR [RSP+24]
            xor R14D,R14D
            mov RDI,QWORD PTR [RAX]
            call .L_403530

            mov R15D,EAX
            mov EAX,DWORD PTR [RSP+68]
            sub EAX,1
            add RAX,1
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+32],RAX
            jmp .L_41ff71
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fe40:

            test DL,DL
            jne .L_41ffac

            mov RAX,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+44],1
            mov R13D,DWORD PTR [RAX+R14*4]
.L_41fe59:

            mov RDI,RBX
            mov BYTE PTR [RSP+67],DL
            call .L_403530

            mov RDI,RBX
            mov EBP,EAX
            call .L_403510

            movzx EDX,BYTE PTR [RSP+67]
            mov DWORD PTR [RSP+20],EAX
.L_41fe78:

            cmp R15D,EBP
            je .L_41fe96

            cmp EBP,876825682
            jne .L_420010

            cmp R15D,1129142603
            jne .L_420010
.L_41fe96:

            test DL,DL
            jne .L_41feb2

            cmp R12D,1852662636
            jne .L_4200b0

            cmp DWORD PTR [RSP+68],1
            jne .L_4200b0
.L_41feb2:

            mov RDI,RBX
            mov ESI,R13D
            call .L_428d00

            test RAX,RAX
            mov RBX,RAX
            je .L_420067

            mov EDX,DWORD PTR [RSP+40]
            test EDX,EDX
            je .L_4200d8

            cmp BYTE PTR [RSP],0
            je .L_4200d8

            mov RAX,QWORD PTR [RSP+80]
            lea R12,QWORD PTR [RSP+96]
            mov R8,QWORD PTR [RSP+32]
            mov R9,R12
            movsd XMM3,QWORD PTR [RAX+R14*8]
            mov RAX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP],XMM3
            movapd XMM0,XMM3
            mov ECX,DWORD PTR [RAX+R14*4]
.L_41ff09:

            mov RSI,QWORD PTR [RSP+24]
            mov EDX,R13D
            mov EDI,R14D
            call .L_41f000

            test EAX,EAX
            je .L_420140
.L_41ff21:

            mov RCX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+8]
            mov R8,R12
            mov EDX,EBP
            mov ESI,R15D
            call .L_41fc20

            test EAX,EAX
            je .L_420140
.L_41ff40:

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RBX
            call .L_42bc30

            test EAX,EAX
            je .L_420140

            mov RDI,RBX
            add R14,1
            call .L_42b910

            cmp QWORD PTR [RSP+56],R14
            mov R15D,DWORD PTR [RSP+20]
            je .L_420150
.L_41ff71:

            mov RAX,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RAX+R14*8]
            mov RDI,RBX
            call .L_403550

            cmp EAX,1633842036
            mov R12D,EAX
            mov DWORD PTR [RSP+40],R14D
            sete BYTE PTR [RSP]
            movzx EAX,BYTE PTR [RSP]
            cmp R12D,1818848875
            sete DL
            or EDX,EAX
            test R14D,R14D
            je .L_41fe40
.L_41ffac:

            cmp R15D,1482250784
            setne AL
            cmp R15D,1281450528
            setne SIL
            and EAX,ESI
            test DL,DL
            movzx ECX,AL
            mov DWORD PTR [RSP+44],ECX
            mov RCX,QWORD PTR [RSP+48]
            mov R13D,DWORD PTR [RCX+R14*4]
            jne .L_41fe59

            test AL,AL
            jne .L_41fe59

            mov RDI,RBX
            mov BYTE PTR [RSP+67],DL
            call .L_403510

            mov RDI,RBX
            mov EBP,EAX
            call .L_403530

            movzx EDX,BYTE PTR [RSP+67]
            mov DWORD PTR [RSP+20],EAX
            jmp .L_41fe78
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420010:

            cmp EBP,1129142603
            jne .L_420025

            cmp R15D,876825682
            je .L_41fe96
.L_420025:

            cmp EBP,1482250784
            jne .L_42003a

            cmp R15D,1281450528
            je .L_41fe96
.L_42003a:

            cmp EBP,1281450528
            jne .L_42004f

            cmp R15D,1482250784
            je .L_41fe96
.L_42004f:

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_432121]
            mov ESI,9
            xor EAX,EAX
            call .L_421420
.L_420067:

            mov RDI,QWORD PTR [RSP+8]
            call .L_42b910
.L_420071:

            mov QWORD PTR [RSP+8],0
.L_42007a:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+8]
            jne .L_4201c5

            add RSP,216
.L_42009d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4200b0:

            mov EAX,DWORD PTR [RSP+44]
            mov ESI,R13D
            mov RDI,RBX
            test EAX,EAX
            je .L_420100

            call .L_428240

            test RAX,RAX
            mov RBX,RAX
            jne .L_41ff40

            jmp .L_420067
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4200d8:

            mov RDI,QWORD PTR [RSP+32]
            lea R12,QWORD PTR [RSP+96]
            call .L_42c340

            pxor XMM2,XMM2
            mov RDI,R12
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            call .L_42c1a0

            jmp .L_41ff21
.L_420100:

            call .L_4287a0

            test RAX,RAX
            mov RBX,RAX
            je .L_420067

            mov RAX,QWORD PTR [RSP+80]
            lea R12,QWORD PTR [RSP+96]
            mov R8,QWORD PTR [RSP+32]
            mov R9,R12
            movsd XMM4,QWORD PTR [RAX+R14*8]
            mov RAX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP],XMM4
            movapd XMM0,XMM4
            mov ECX,DWORD PTR [RAX+R14*4]
            jmp .L_41ff09
.L_420140:

            mov RDI,RBX
            call .L_42b910

            jmp .L_420067
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420150:

            test DWORD PTR [RSP+272],32768
            je .L_42007a

            cmp R15D,1196573017
            sete DL
            cmp R15D,1380401696
            sete AL
            or DL,AL
            jne .L_420186

            cmp R15D,1129142603
            jne .L_42007a
.L_420186:

            mov EDI,DWORD PTR [RSP+20]
            call .L_40ccf0

            mov RBX,QWORD PTR [RSP+8]
            mov ESI,EAX
            mov RDI,QWORD PTR [RBX+56]
            call .L_42ae30

            test RAX,RAX
            je .L_420067

            mov RDX,RAX
            mov ESI,1
            mov RDI,RBX
            call .L_42bb10

            test EAX,EAX
            jne .L_42007a

            jmp .L_420067
.L_4201c5:

            call __stack_chk_fail@PLT
.L_4201ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4201d0:

            push R15
            push R14
            lea R15D,DWORD PTR [RSI-1]
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,1144
.L_4201e5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1128],RAX
            xor EAX,EAX
            cmp R15D,254
            mov QWORD PTR [RSP+8],R8
            ja .L_420400

            mov R12,RDI
            mov R14,R9
            mov EBP,ESI
            mov RBX,RCX
            lea RDI,QWORD PTR [R15*4+4]
            xor EAX,EAX
            lea R13,QWORD PTR [RSP+96]
            mov R8D,1
            mov R9D,1
            jmp .L_42025e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420238:

            test ESI,36864
            jne .L_4202f0

            test ESI,18432
            cmovne ECX,R9D
            nop
            nop
.L_420250:

            mov DWORD PTR [R13+RAX*1],ECX
            add RAX,4
            cmp RAX,RDI
            je .L_420284
.L_42025e:

            mov ECX,DWORD PTR [RDX+RAX*1]
            cmp ECX,15
            ja .L_420250

            mov RSI,R8
            shl RSI,CL
            test ESI,9216
            je .L_420238

            xor ECX,ECX
            mov DWORD PTR [R13+RAX*1],ECX
            add RAX,4
            cmp RAX,RDI
            jne .L_42025e
.L_420284:

            mov RDI,QWORD PTR [RBX]
            call .L_403530

            cmp EAX,1129142603
            je .L_420300
.L_420293:

            sub RSP,8
.L_420297:

            mov RCX,RBX
            mov ESI,EBP
            mov EAX,DWORD PTR [RSP+1208]
            mov R9,R14
            mov RDX,R13
            mov RDI,R12
            push RAX
            mov R8,QWORD PTR [RSP+24]
            call .L_41fda0

            pop RBX
            pop RBP
            mov R15,RAX
.L_4202bc:

            mov RBX,QWORD PTR [RSP+1128]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_42057a

            add RSP,1144
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4202f0:

            mov ECX,2
            jmp .L_420250
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420300:

            lea R15,QWORD PTR [RBX+R15*8]
            mov RDI,QWORD PTR [R15]
            mov QWORD PTR [RSP+16],R15
            call .L_403530

            cmp EAX,1129142603
            je .L_42032b

            mov RDI,QWORD PTR [R15]
            call .L_403550

            cmp EAX,1886549106
            jne .L_420293
.L_42032b:

            mov EDX,4
            mov ESI,4
            mov RDI,R12
            call .L_42b7d0

            test RAX,RAX
            mov R15,RAX
            je .L_420400

            lea RAX,QWORD PTR [RSP+32]
            pxor XMM0,XMM0
            mov ESI,1
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [RSP+16]
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            mov RDI,QWORD PTR [RAX]
            call .L_428240

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_4203ac

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RAX]
            call .L_4245d0

            divsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RSP+88],XMM0
            jb .L_420408
.L_4203ac:

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            je .L_4203bb
.L_4203b6:

            call .L_42b910
.L_4203bb:

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            je .L_4203ca

            call .L_40e980
.L_4203ca:

            mov RDI,QWORD PTR [RSP+40]
            test RDI,RDI
            je .L_4203d9

            call .L_40e980
.L_4203d9:

            mov RDI,QWORD PTR [RSP+56]
            test RDI,RDI
            je .L_4203e8

            call .L_422930
.L_4203e8:

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_4202bc

            call .L_42b910

            jmp .L_4202bc
.L_420400:

            xor R15D,R15D
            jmp .L_4202bc
.L_420408:

            sub RSP,8
.L_42040c:

            mov R9,R14
            mov RCX,RBX
            mov EDX,DWORD PTR [RSP+1208]
            mov ESI,EBP
            mov RDI,R12
            push RDX
            mov R8,QWORD PTR [RSP+24]
            mov RDX,R13
            call .L_41fda0

            test RAX,RAX
            mov QWORD PTR [RSP+48],RAX
            pop R10
            pop R11
            je .L_4203bb

            mov EDX,DWORD PTR [RSP+1200]
            mov R8,RBX
            mov RCX,R13
            mov ESI,4096
            mov RDI,R12
            push RDX
            push R14
            mov EDX,EBP
            mov R9,QWORD PTR [RSP+24]
            call .L_424150

            test RAX,RAX
            mov QWORD PTR [RSP+72],RAX
            pop R8
            pop R9
            je .L_4203ac

            xor ESI,ESI
            mov RDI,R12
            call .L_412100

            sub RSP,8
            mov RDI,R12
            mov R9D,1
            push 320
            mov R14,QWORD PTR [RSP+32]
            mov R8D,4849688
            mov RCX,RAX
            mov EDX,34
            mov RBX,RAX
            mov RSI,QWORD PTR [R14]
            call .L_40f990

            test RAX,RAX
            mov QWORD PTR [RSP+56],RAX
            pop RSI
            pop RDI
            je .L_4203ac

            sub RSP,8
            mov RSI,QWORD PTR [R14]
            mov RCX,RBX
            push 320
            mov EDX,4194340
            mov R9D,1
            mov R8D,4194332
            mov RDI,R12
            call .L_40f990

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            pop RDX
            pop RCX
            je .L_420567

            mov RDI,RBX
            call .L_403ea0

            mov ESI,DWORD PTR [RSP+1200]
            mov EDI,1129142603
            mov QWORD PTR [RSP+72],0
            call .L_40cf60

            xor R8D,R8D
            mov ECX,4
            mov EDX,4
            mov ESI,EAX
            mov RDI,R12
            call .L_42b390

            test RAX,RAX
            mov RBX,RAX
            je .L_4203ac

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R15
            call .L_42bb10

            test EAX,EAX
            je .L_4203ac

            mov RDX,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RIP+.L_41f730]
            xor ECX,ECX
            mov RDI,RBX
            call .L_42a430

            jmp .L_4203ac
.L_420567:

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            jne .L_4203b6

            jmp .L_4203ca
.L_42057a:

            call __stack_chk_fail@PLT
.L_42057f:

            nop
.L_420580:

            push R15
            push R14
            lea R15D,DWORD PTR [RSI-1]
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,1080
.L_420595:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1064],RAX
            xor EAX,EAX
            cmp R15D,254
            mov QWORD PTR [RSP],R8
            ja .L_4207f4

            mov R12,RDI
            mov EBP,ESI
            mov R13,RCX
            mov R14,R9
            lea RSI,QWORD PTR [R15*4+4]
            xor EAX,EAX
            lea RBX,QWORD PTR [RSP+32]
            mov EDI,1
            mov R8D,1
            jmp .L_42060c
.L_4205e0:

            test R9D,36864
            jne .L_4206a0

            test R9D,18432
            cmovne ECX,R8D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420600:

            mov DWORD PTR [RBX+RAX*1],ECX
            add RAX,4
            cmp RAX,RSI
            je .L_420631
.L_42060c:

            mov ECX,DWORD PTR [RDX+RAX*1]
            cmp ECX,15
            ja .L_420600

            mov R9,RDI
            shl R9,CL
            test R9D,9216
            je .L_4205e0

            xor ECX,ECX
            mov DWORD PTR [RBX+RAX*1],ECX
            add RAX,4
            cmp RAX,RSI
            jne .L_42060c
.L_420631:

            mov RDI,QWORD PTR [R13]
            call .L_403530

            cmp EAX,1129142603
            je .L_4206b0
.L_420641:

            sub RSP,8
.L_420645:

            mov R9,R14
            mov RCX,R13
            mov EAX,DWORD PTR [RSP+1144]
            mov RDX,RBX
            mov ESI,EBP
            mov RDI,R12
            push RAX
            mov R8,QWORD PTR [RSP+16]
            call .L_41fda0

            pop R8
            pop R9
            mov R15,RAX
.L_42066c:

            mov RBX,QWORD PTR [RSP+1064]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_420808

            add RSP,1080
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4206a0:

            mov ECX,2
            jmp .L_420600
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4206b0:

            mov RDI,QWORD PTR [R13+R15*8]
            call .L_403530

            cmp EAX,1129142603
            jne .L_420641

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RSP+16]
            mov EDX,4
            mov ESI,4
            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            movaps XMMWORD PTR [RSP+16],XMM0
            call .L_42b7d0

            test RAX,RAX
            mov R15,RAX
            je .L_4207f4

            sub RSP,8
.L_4206f6:

            mov ESI,EBP
            mov RDI,R12
            mov EAX,DWORD PTR [RSP+1144]
            mov R9,R14
            mov RCX,R13
            mov RDX,RBX
            push RAX
            mov R8,QWORD PTR [RSP+16]
            call .L_41fda0

            test RAX,RAX
            mov QWORD PTR [RSP+32],RAX
            pop RSI
            pop RDI
            je .L_4207dd

            mov EAX,DWORD PTR [RSP+1136]
            mov RCX,RBX
            mov EDX,EBP
            mov R8,R13
            mov ESI,4096
            mov RDI,R12
            push RAX
            push R14
            mov R9,QWORD PTR [RSP+16]
            call .L_424150

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            pop RDX
            pop RCX
            je .L_4207fc

            mov ESI,DWORD PTR [RSP+1136]
            mov EDI,1129142603
            call .L_40cf60

            xor R8D,R8D
            mov ECX,4
            mov EDX,4
            mov ESI,EAX
            mov RDI,R12
            call .L_42b390

            test RAX,RAX
            mov RBX,RAX
            je .L_4207ce

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R15
            call .L_42bb10

            test EAX,EAX
            je .L_4207ce

            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_420810]
            xor ECX,ECX
            mov RDI,RBX
            call .L_42a430

            test EAX,EAX
            je .L_4207ce

            mov RDI,QWORD PTR [RSP+16]
            call .L_42b910

            mov RDI,QWORD PTR [RSP+24]
            call .L_422930

            jmp .L_42066c
.L_4207ce:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_4207dd
.L_4207d8:

            call .L_42b910
.L_4207dd:

            mov RDI,QWORD PTR [RSP+24]
            test RDI,RDI
            je .L_4207ec

            call .L_422930
.L_4207ec:

            mov RDI,R15
            call .L_42b910
.L_4207f4:

            xor R15D,R15D
            jmp .L_42066c
.L_4207fc:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            jne .L_4207d8

            jmp .L_4207ec
.L_420808:

            call __stack_chk_fail@PLT
.L_42080d:

            nop
            nop
            nop
.L_420810:

            push RBX
            cmp WORD PTR [RDI],0
            mov RBX,RSI
            je .L_420830
.L_42081a:

            mov RAX,QWORD PTR [RDX]
            mov RSI,RBX
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]
.L_420827:

            mov EAX,1
            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_420830:

            cmp WORD PTR [RDI+2],0
            jne .L_42081a

            cmp WORD PTR [RDI+4],0
            jne .L_42081a

            xor EAX,EAX
            mov DWORD PTR [RSI],0
            mov WORD PTR [RSI+4],AX
            movzx ESI,WORD PTR [RDI+6]
            mov RDI,QWORD PTR [RDX+8]
            call .L_423770

            mov WORD PTR [RBX+6],AX
            jmp .L_420827
.L_42085d:

            nop
            nop
            nop
.L_420860:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_42086b:

            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_4208f0

            mov RAX,QWORD PTR [RSI+96]
            mov QWORD PTR [RSP],0
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_420920

            xor EBP,EBP
            jmp .L_4208b4
.L_4208a0:

            mov RBX,QWORD PTR [RBX+272]
            mov RDI,QWORD PTR [R12+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_420920
.L_4208b4:

            mov EDX,280
            mov RSI,RBX
            call .L_4212e0

            test RAX,RAX
            je .L_420906

            test RBP,RBP
            mov QWORD PTR [RAX+272],0
            je .L_4208dd

            mov QWORD PTR [RBP+272],RAX
.L_4208dd:

            cmp QWORD PTR [RSP],0
            jne .L_4208a0

            mov QWORD PTR [RSP],RAX
            jmp .L_4208a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4208f0:

            lea RSI,QWORD PTR [RIP+.L_641d30]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+96],RAX
.L_420906:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_420934

            add RSP,16
.L_42091a:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_420920:

            mov RSI,RSP
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+96],RAX
            jmp .L_420906
.L_420934:

            call __stack_chk_fail@PLT
.L_420939:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420940:

            jmp .L_41fda0
.L_420945:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420950:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            sub RSP,40
.L_420961:

            mov EAX,DWORD PTR [RSP+96]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+16],R9
            mov DWORD PTR [RSP+24],EAX
            lea EAX,DWORD PTR [RSI-1]
            cmp EAX,254
            ja .L_420aab

            mov R13,RDX
            mov R15,RCX
            mov RBX,R8
            lea RBP,QWORD PTR [RAX*4+4]
            xor R14D,R14D
            jmp .L_4209a9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4209a0:

            add R14,4
            cmp RBP,R14
            je .L_4209f0
.L_4209a9:

            mov EAX,DWORD PTR [R13+R14*1]
            cmp EAX,3
            jne .L_4209c0

            mov DWORD PTR [RBX+R14*1],0
            mov EAX,DWORD PTR [R13+R14*1]
.L_4209c0:

            and EAX,4294967293
            jne .L_4209a0

            mov RDI,QWORD PTR [R15+R14*2]
            call .L_403570

            cmp EAX,67108863
            jbe .L_4209a0

            mov DWORD PTR [RBX+R14*1],1
            add R14,4
            cmp RBP,R14
            jne .L_4209a9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4209f0:

            mov ECX,DWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            mov ESI,10
            mov DWORD PTR [RSP+28],ECX
            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            mov ECX,DWORD PTR [RSP+28]
            test RAX,RAX
            jne .L_420a24

            jmp .L_420a60
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420a18:

            mov RAX,QWORD PTR [RAX+272]
            test RAX,RAX
            je .L_420a60
.L_420a24:

            cmp ECX,DWORD PTR [RAX]
            jne .L_420a18
.L_420a28:

            mov EDX,DWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+16]
            mov R8,RBX
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R15
            mov ESI,R12D
            mov DWORD PTR [RSP+96],EDX
            mov RAX,QWORD PTR [RAX+264]
            add RSP,40
.L_420a4e:

            pop RBX
            mov RDX,R13
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420a60:

            lea RAX,QWORD PTR [RIP+.L_640fa0]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420a70:

            cmp ECX,DWORD PTR [RAX]
            je .L_420a28

            mov RAX,QWORD PTR [RAX+272]
            test RAX,RAX
            jne .L_420a70

            mov ECX,DWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_432151]
            mov ESI,8
            call .L_421420
.L_420a9a:

            add RSP,40
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_420aab:

            lea RDX,QWORD PTR [RIP+.L_432135]
            mov ECX,ESI
            xor EAX,EAX
            mov ESI,2
            call .L_421420

            jmp .L_420a9a
.L_420ac2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420ad0:

            push R12
            push RBP
            mov R12,RCX
            push RBX
.L_420ad7:

            mov EBX,ESI
            mov ESI,10
            mov RBP,RDX
            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_420b1f

            xor ESI,ESI
.L_420af0:

            cmp ESI,EBX
            jae .L_420b10

            test RBP,RBP
            je .L_420b01

            mov ECX,DWORD PTR [RAX]
            mov EDX,ESI
            mov DWORD PTR [RBP+RDX*4],ECX
.L_420b01:

            test R12,R12
            je .L_420b10

            lea RCX,QWORD PTR [RAX+4]
            mov EDX,ESI
            mov QWORD PTR [R12+RDX*8],RCX
.L_420b10:

            mov RAX,QWORD PTR [RAX+272]
            add ESI,1
            test RAX,RAX
            jne .L_420af0
.L_420b1f:

            lea RSI,QWORD PTR [RIP+.L_640fa0]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420b30:

            cmp EBX,EAX
            jbe .L_420b50

            test RBP,RBP
            je .L_420b41

            mov ECX,DWORD PTR [RSI]
            mov EDX,EAX
            mov DWORD PTR [RBP+RDX*4],ECX
.L_420b41:

            test R12,R12
            je .L_420b50

            lea RCX,QWORD PTR [RSI+4]
            mov EDX,EAX
            mov QWORD PTR [R12+RDX*8],RCX
.L_420b50:

            mov RSI,QWORD PTR [RSI+272]
            add EAX,1
            test RSI,RSI
            jne .L_420b30

            pop RBX
.L_420b60:

            pop RBP
            pop R12
            ret 
.L_420b64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420b70:

            mov RCX,RDX
            mov RDX,RSI
            mov ESI,EDI
            xor EDI,EDI
            jmp .L_420ad0
.L_420b7f:

            nop
.L_420b80:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_420b87:

            mov ESI,10
            mov RBX,RDI
            call .L_4068a0

            test RBP,RBP
            mov R12,RAX
            je .L_420bf8

            mov RDI,RBX
            mov ESI,280
            call .L_4064d0

            mov RBX,RAX
            xor EAX,EAX
            test RBX,RBX
            je .L_420bf0

            mov EAX,DWORD PTR [RBP+24]
            lea RSI,QWORD PTR [RBP+40]
            lea RDI,QWORD PTR [RBX+4]
            mov EDX,255
            mov DWORD PTR [RBX],EAX
            call strncpy@PLT

            mov BYTE PTR [RBX+259],0
            mov RAX,QWORD PTR [RBP+32]
            mov QWORD PTR [RBX+264],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBX+272],RAX
            mov QWORD PTR [R12],RBX
            mov EAX,1
.L_420bf0:

            pop RBX
.L_420bf1:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420bf8:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_420c09:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420c10:

            ret 
.L_420c12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420c20:

            cmp EDX,536870912
            mov RDI,RSI
            ja .L_420c38

            mov ESI,EDX
            jmp realloc@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420c38:

            xor EAX,EAX
            ret 
.L_420c3b:

            nop
            nop
            nop
            nop
            nop
.L_420c40:

            test RSI,RSI
            je .L_420c50

            mov RDI,RSI
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420c50:

            ret 
.L_420c52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420c60:

            cmp ESI,536870912
            ja .L_420c70

            mov EDI,ESI
            jmp malloc@PLT
          .byte 0x90
.L_420c70:

            xor EAX,EAX
            ret 
.L_420c73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420c80:

            cmp EDX,536870912
            ja .L_420cd0

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov EBP,EDX
            mov RBX,RDI
            mov ESI,4
            call .L_4068a0

            mov ESI,EBP
            mov RDI,RBX
            call QWORD PTR [RAX]

            test RAX,RAX
            mov RCX,RAX
            je .L_420cc2

            test R12,R12
            je .L_420cc2

            mov EDX,EBP
            mov RSI,R12
            mov RDI,RAX
            call memmove@PLT

            mov RCX,RAX
.L_420cc2:

            pop RBX
            mov RAX,RCX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420cd0:

            xor ECX,ECX
            mov RAX,RCX
            ret 
.L_420cd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420ce0:

            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            mov ESI,4
            sub RSP,8
            call .L_4068a0

            mov ESI,EBX
            mov RDI,RBP
            call QWORD PTR [RAX]

            test RAX,RAX
            mov RCX,RAX
            je .L_420d13

            mov EDX,EBX
            xor ESI,ESI
            mov RDI,RAX
            call memset@PLT

            mov RCX,RAX
.L_420d13:

            add RSP,8
            mov RAX,RCX
            pop RBX
            pop RBP
            ret 
.L_420d1d:

            nop
            nop
            nop
.L_420d20:

            push RBP
            push RBX
            mov EBX,ESI
            imul EBX,EDX
            sub RSP,8
            test EBX,EBX
            je .L_420d78

            mov ECX,EDX
            mov EAX,4294967295
            xor EDX,EDX
            div ECX
            cmp EAX,ESI
            jbe .L_420d78

            cmp ESI,EBX
            seta DL
            cmp ECX,EBX
            seta AL
            or DL,AL
            jne .L_420d78

            cmp EBX,536870912
            ja .L_420d78

            mov ESI,4
            mov RBP,RDI
            call .L_4068a0

            mov RAX,QWORD PTR [RAX+8]
            add RSP,8
            mov ESI,EBX
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420d78:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_420d81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420d90:

            mov RDI,RSI
            jmp pthread_mutex_unlock@PLT
.L_420d98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420da0:

            sub RSP,8
            mov RDI,RSI
            call pthread_mutex_lock@PLT

            test EAX,EAX
            sete AL
            add RSP,8
            movzx EAX,AL
            ret 
.L_420db9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420dc0:

            push RBX
            mov ESI,4
            mov RBX,RDI
            call .L_4068a0

            mov RDI,RBX
            mov ESI,40
            call QWORD PTR [RAX]

            xor ESI,ESI
            mov RBX,RAX
            mov RDI,RAX
            call pthread_mutex_init@PLT

            mov RAX,RBX
            pop RBX
            ret 
.L_420dea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_420df0:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,4
            mov RBX,RDI
            sub RSP,8
            call .L_4068a0

            mov RAX,QWORD PTR [RAX+16]
            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
.L_420e18:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420e20:

            push R12
            push RBP
            test ESI,ESI
            push RBX
.L_420e26:

            mov R12,RDI
            mov EBP,ESI
            mov EAX,20480
            mov ESI,4
            cmove EBP,EAX
            call .L_4068a0

            mov ESI,24
            mov RDI,R12
            call QWORD PTR [RAX+8]

            test RAX,RAX
            mov RBX,RAX
            je .L_420e7e

            mov ESI,4
            mov RDI,R12
            call .L_4068a0

            mov ESI,EBP
            mov RDI,R12
            call QWORD PTR [RAX]

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_420e90

            mov DWORD PTR [RBX+8],EBP
            mov DWORD PTR [RBX+12],0
            mov QWORD PTR [RBX+16],0
.L_420e7e:

            mov RAX,RBX
            pop RBX
.L_420e82:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420e90:

            mov RSI,RBX
            mov RDI,R12
            xor EBX,EBX
            call .L_420df0

            jmp .L_420e7e
.L_420e9f:

            nop
.L_420ea0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,8
            call pthread_mutex_destroy@PLT

            add RSP,8
            mov RSI,RBX
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_420df0
.L_420ec5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420ed0:

            mov EAX,2080
            ret 
.L_420ed6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420ee0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            call __ctype_toupper_loc@PLT

            mov RCX,QWORD PTR [RAX]
            jmp .L_420f08
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420f00:

            add RBP,1
            test DL,DL
            je .L_420f30
.L_420f08:

            add RBX,1
            movzx EAX,BYTE PTR [RBP]
            movzx ESI,BYTE PTR [RBX-1]
            mov RDX,RAX
            mov ESI,DWORD PTR [RCX+RSI*4]
            mov EAX,DWORD PTR [RCX+RAX*4]
            cmp ESI,EAX
            je .L_420f00

            add RSP,8
            sub EAX,ESI
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420f30:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_420f39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420f40:

            push R12
            push RBP
            push RBX
.L_420f44:

            mov RBX,RDI
            call ftell@PLT

            cmp RAX,-1
            je .L_420f90

            xor ESI,ESI
            mov EDX,2
            mov RDI,RBX
            mov RBP,RAX
            call fseek@PLT

            test EAX,EAX
            jne .L_420f90

            mov RDI,RBX
            call ftell@PLT

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            mov R12,RAX
            call fseek@PLT
.L_420f80:

            mov RAX,R12
            pop RBX
.L_420f84:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420f90:

            mov R12,-1
            jmp .L_420f80
.L_420f99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420fa0:

            test RDI,RDI
            je .L_421010

            mov RAX,QWORD PTR [RDI+24]
            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RDI+32]
            mov QWORD PTR [RSI+16],RAX
            mov RAX,QWORD PTR [RDI+40]
            mov QWORD PTR [RSI+24],RAX
            lea RAX,QWORD PTR [RIP+.L_420ce0]
            mov QWORD PTR [RSI+8],RAX
            lea RAX,QWORD PTR [RIP+.L_420d20]
            mov QWORD PTR [RSI+32],RAX
            lea RAX,QWORD PTR [RIP+.L_420c80]
            mov QWORD PTR [RSI+40],RAX
            mov RAX,QWORD PTR [RDI+48]
            test RAX,RAX
            je .L_420fea

            mov QWORD PTR [RSI+8],RAX
.L_420fea:

            mov RAX,QWORD PTR [RDI+56]
            test RAX,RAX
            je .L_420ff7

            mov QWORD PTR [RSI+32],RAX
.L_420ff7:

            mov RAX,QWORD PTR [RDI+64]
            test RAX,RAX
            je .L_421004

            mov QWORD PTR [RSI+40],RAX
.L_421004:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421010:

            movdqa XMM0,XMMWORD PTR [RIP+.L_641b20]
            movups XMMWORD PTR [RSI],XMM0
            movdqa XMM0,XMMWORD PTR [RIP+.L_641b30]
            movups XMMWORD PTR [RSI+16],XMM0
            movdqa XMM0,XMMWORD PTR [RIP+.L_641b40]
            movups XMMWORD PTR [RSI+32],XMM0
            ret 
.L_421034:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421040:

            test RSI,RSI
            je .L_421090

            cmp QWORD PTR [RSI+24],0
            je .L_421080

            cmp QWORD PTR [RSI+32],0
            je .L_421080

            cmp QWORD PTR [RSI+40],0
            je .L_421080

            push RBX
            mov RBX,RSI
            mov ESI,4
            call .L_4068a0

            test RAX,RAX
            je .L_421088

            mov RSI,RAX
            mov RDI,RBX
            call .L_420fa0

            mov EAX,1
            pop RBX
            ret 

            nop
.L_421080:

            xor EAX,EAX
.L_421082:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421088:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421090:

            test RDI,RDI
            mov EAX,1
            je .L_421082

            lea RDX,QWORD PTR [RDI+136]
            mov QWORD PTR [RDI+48],RDX
            ret 
.L_4210a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4210b0:

            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,4
            mov RBX,RDI
            sub RSP,8
            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            add RSP,8
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
.L_4210d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4210e0:

            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,4
            mov RBX,RDI
            sub RSP,8
            call .L_4068a0

            mov RAX,QWORD PTR [RAX+8]
            add RSP,8
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
.L_421106:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421110:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov ESI,4
            call .L_4068a0

            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov RAX,QWORD PTR [RAX+32]
            jmp RAX
.L_421138:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421140:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov ESI,4
            call .L_4068a0

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov RAX,QWORD PTR [RAX+24]
            jmp RAX
.L_42116a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_421170:

            test RSI,RSI
            je .L_421180

            jmp .L_420df0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421180:

            ret 
.L_421182:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421190:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov ESI,4
            call .L_4068a0

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov RAX,QWORD PTR [RAX+40]
            jmp RAX
.L_4211ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4211c0:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov RBP,RDI
            mov ESI,4
            call .L_4068a0

            mov ESI,16
            mov RDI,RBP
            call QWORD PTR [RAX+8]

            test RAX,RAX
            mov RBX,RAX
            je .L_4211fe

            mov QWORD PTR [RAX],RBP
            mov ESI,R12D
            mov RDI,RBP
            call .L_420e20

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_421210
.L_4211fe:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421210:

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_420df0

            jmp .L_4211fe
.L_42121f:

            nop
.L_421220:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RBX,QWORD PTR [RDI+8]
            test RBX,RBX
            je .L_421259
.L_421230:

            mov RSI,QWORD PTR [RBX]
            mov R12,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBP]
            test RSI,RSI
            je .L_421249

            call .L_420df0

            mov RDI,QWORD PTR [RBP]
.L_421249:

            mov RSI,RBX
            mov RBX,R12
            call .L_420df0

            test R12,R12
            jne .L_421230
.L_421259:

            pop RBX
            mov RSI,RBP
            mov RDI,QWORD PTR [RBP]
            pop RBP
            pop R12
            jmp .L_420df0
.L_421269:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421270:

            push RBP
            push RBX
            lea EBX,DWORD PTR [RSI+7]
            sub RSP,8
.L_421279:

            mov RDX,QWORD PTR [RDI+8]
            and EBX,4294967288
            mov EAX,DWORD PTR [RDX+8]
            mov ECX,DWORD PTR [RDX+12]
            mov ESI,EAX
            sub ESI,ECX
            cmp ESI,EBX
            jae .L_4212b9

            add EAX,EAX
            mov RBP,RDI
            mov RDI,QWORD PTR [RDI]
            cmp EBX,EAX
            cmovae EAX,EBX
            mov ESI,EAX
            call .L_420e20

            test RAX,RAX
            mov RDX,RAX
            je .L_4212d0

            mov RAX,QWORD PTR [RBP+8]
            mov ECX,DWORD PTR [RDX+12]
            mov QWORD PTR [RDX+16],RAX
            mov QWORD PTR [RBP+8],RDX
.L_4212b9:

            mov EAX,ECX
            add RAX,QWORD PTR [RDX]
            add EBX,ECX
            mov DWORD PTR [RDX+12],EBX
.L_4212c3:

            add RSP,8
.L_4212c7:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4212d0:

            xor EAX,EAX
            jmp .L_4212c3
.L_4212d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4212e0:

            test RSI,RSI
            je .L_421320

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,EDX
            mov EBX,EDX
            sub RSP,8
            call .L_421270

            test RAX,RAX
            mov RCX,RAX
            je .L_42130f

            mov EDX,EBX
            mov RSI,RBP
            mov RDI,RAX
            call memcpy@PLT

            mov RCX,RAX
.L_42130f:

            add RSP,8
            mov RAX,RCX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421320:

            xor ECX,ECX
            mov RAX,RCX
            ret 
.L_421326:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421330:

            test RDI,RDI
            push RBX
            je .L_421368

            test RSI,RSI
            mov RBX,RDI
            jne .L_421350

            lea RAX,QWORD PTR [RDI+136]
            mov QWORD PTR [RDI+48],RAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421350:

            mov RSI,QWORD PTR [RSI+48]
            mov RDI,QWORD PTR [RDI+8]
            mov EDX,48
            call .L_4212e0

            mov QWORD PTR [RBX+48],RAX
            pop RBX
            ret 
.L_421368:

            lea RCX,QWORD PTR [RIP+.L_432190]
            lea RSI,QWORD PTR [RIP+.L_432180]
            lea RDI,QWORD PTR [RIP+.L_42deba]
            mov EDX,189
            call __assert_fail@PLT
.L_421387:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421390:

            test RSI,RSI
            push RBX
            lea RAX,QWORD PTR [RIP+.L_641ac0]
            mov RBX,RDI
            je .L_4213a4

            mov RAX,QWORD PTR [RSI+24]
.L_4213a4:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,8
            mov RSI,RAX
            call .L_4212e0

            mov QWORD PTR [RBX+24],RAX
            pop RBX
            ret 
.L_4213bb:

            nop
            nop
            nop
            nop
            nop
.L_4213c0:

            push RBX
            mov RBX,RSI
            mov ESI,1
            call .L_4068a0

            test RAX,RAX
            je .L_4213e4

            lea RSI,QWORD PTR [RIP+.L_420c10]
            test RBX,RBX
            cmovne RSI,RBX
            mov QWORD PTR [RAX],RSI
.L_4213e4:

            pop RBX
            ret 
.L_4213e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4213f0:

            push RBX
            mov ESI,1
            mov RBX,RDI
            xor EDI,EDI
            call .L_4068a0

            test RAX,RAX
            je .L_421416

            lea RDI,QWORD PTR [RIP+.L_420c10]
            test RBX,RBX
            cmovne RDI,RBX
            mov QWORD PTR [RAX],RDI
.L_421416:

            pop RBX
            ret 
.L_421418:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421420:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov RBX,RDI
            sub RSP,1248
.L_421431:

            test AL,AL
            mov QWORD PTR [RSP+1096],RCX
            mov QWORD PTR [RSP+1104],R8
            mov QWORD PTR [RSP+1112],R9
            je .L_42148d

            movaps XMMWORD PTR [RSP+1120],XMM0
            movaps XMMWORD PTR [RSP+1136],XMM1
            movaps XMMWORD PTR [RSP+1152],XMM2
            movaps XMMWORD PTR [RSP+1168],XMM3
            movaps XMMWORD PTR [RSP+1184],XMM4
            movaps XMMWORD PTR [RSP+1200],XMM5
            movaps XMMWORD PTR [RSP+1216],XMM6
            movaps XMMWORD PTR [RSP+1232],XMM7
.L_42148d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1064],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+1280]
            lea RBP,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+8]
            mov R8,RDX
            mov ECX,1024
            mov EDX,1
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+1072]
            mov ESI,1023
            mov RDI,RBP
            mov DWORD PTR [RSP+8],24
            mov DWORD PTR [RSP+12],48
            mov QWORD PTR [RSP+24],RAX
            call __vsnprintf_chk@PLT

            mov ESI,1
            mov RDI,RBX
            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_42150e

            mov RDX,RBP
            mov ESI,R12D
            mov RDI,RBX
            call RAX
.L_42150e:

            mov RAX,QWORD PTR [RSP+1064]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42152d

            add RSP,1248
.L_421528:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42152d:

            call __stack_chk_fail@PLT
.L_421532:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421540:

            push RBX
            mov RBX,RDI
            mov EDI,ESI
            call .L_404eb0

            mov BYTE PTR [RBX+4],0
            mov DWORD PTR [RBX],EAX
            pop RBX
            ret 
.L_421553:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421560:

            test RSI,RSI
            push RBX
            lea RAX,QWORD PTR [RIP+.L_641aa0]
            mov RBX,RDI
            je .L_421577

            mov RAX,QWORD PTR [RSI+128]
.L_421577:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,32
            mov RSI,RAX
            call .L_4212e0

            mov QWORD PTR [RBX+128],RAX
            pop RBX
            ret 
.L_421591:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4215a0:

            push RBX
.L_4215a1:

            mov RBX,RSI
            mov ESI,14
            call .L_4068a0

            test RBX,RBX
            mov RDX,RAX
            je .L_4215f8

            mov RCX,QWORD PTR [RBX+24]
            xor EAX,EAX
            test RCX,RCX
            je .L_4215f0

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_4215f0

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_4215f0

            mov R8,QWORD PTR [RBX+48]
            test R8,R8
            je .L_4215f0

            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDX+8],RSI
            mov EAX,1
            mov QWORD PTR [RDX+16],RDI
            mov QWORD PTR [RDX+24],R8
.L_4215f0:

            pop RBX
.L_4215f1:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4215f8:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov EAX,1
            pop RBX
            ret 
.L_42161e:

            nop
            nop
.L_421620:

            push RBX
            mov ESI,14
            mov RBX,RDI
            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_42163c

            mov RDI,RBX
            pop RBX
            jmp RAX
.L_42163c:

            xor EAX,EAX
            pop RBX
            ret 
.L_421640:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,14
            mov RBX,RDI
            sub RSP,8
            call .L_4068a0

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_421670

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421670:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_421677:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421680:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,14
            mov RBX,RDI
            sub RSP,8
            call .L_4068a0

            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_4216b0

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4216b0:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_4216bc:

            nop
            nop
            nop
            nop
.L_4216c0:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,14
            mov RBX,RDI
            sub RSP,8
            call .L_4068a0

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            je .L_4216f0

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4216f0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4216f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421700:

            sub RSP,24
.L_421704:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+8]
            sub EAX,1
            js .L_421769

            cdqe 
            lea RSI,QWORD PTR [RAX*8]
            sub RSI,RAX
            shl RSI,4
            add RSI,QWORD PTR [RDI+16]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421738:

            pxor XMM2,XMM2
            movss XMM1,DWORD PTR [RSI]
            cvtss2sd XMM2,XMM1
            ucomisd XMM0,XMM2
            jbe .L_42175d

            pxor XMM4,XMM4
            movss XMM3,DWORD PTR [RSI+4]
            cvtss2sd XMM4,XMM3
            ucomisd XMM4,XMM0
            jae .L_421790
.L_42175d:

            sub RAX,1
            sub RSI,112
            test EAX,EAX
            jns .L_421738
.L_421769:

            movsd XMM0,QWORD PTR [RIP+.L_432618]
.L_421771:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_421817

            add RSP,24
.L_421789:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421790:

            mov ECX,DWORD PTR [RSI+8]
            lea RDX,QWORD PTR [RAX*8]
            test ECX,ECX
            je .L_4217d0

            mov RDX,QWORD PTR [RDI+32]
            add RSI,16
            mov EDI,ECX
            call QWORD PTR [RDX+RAX*8]
.L_4217ac:

            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_42d9e0]
            ucomisd XMM1,QWORD PTR [RIP+.L_432620]
            jbe .L_421771

            movsd XMM0,QWORD PTR [RIP+.L_432610]
            jmp .L_421771
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4217d0:

            subsd XMM0,XMM2
            mov RAX,QWORD PTR [RDI+24]
            mov RCX,QWORD PTR [RSI+104]
            subss XMM3,XMM1
            mov RSI,RSP
            lea RDI,QWORD PTR [RSP+4]
            add RAX,RDX
            cvtsd2ss XMM0,XMM0
            mov RDX,QWORD PTR [RAX]
            divss XMM0,XMM3
            mov QWORD PTR [RDX+120],RCX
            mov RAX,QWORD PTR [RAX]
            mov RDX,RAX
            movss DWORD PTR [RSP+4],XMM0
            call QWORD PTR [RAX+128]

            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSP]
            jmp .L_4217ac
.L_421817:

            call __stack_chk_fail@PLT
.L_42181c:

            nop
            nop
            nop
            nop
.L_421820:

            push RBX
            sub RSP,16
.L_421825:

            cmp EDI,-1
            je .L_421c80

            movapd XMM2,XMM0
            mov RBX,RSI
            jle .L_4218a0

            cmp EDI,5
            je .L_421980

            jg .L_421908

            cmp EDI,2
            je .L_421a28

            jle .L_421b10

            cmp EDI,3
            je .L_421b58

            cmp EDI,4
            jne .L_421890

            ucomisd XMM0,QWORD PTR [RSI+32]
            jb .L_421db8

            mulsd XMM2,QWORD PTR [RSI+8]
            movsd XMM0,QWORD PTR [RSI+16]
            pxor XMM4,XMM4
            addsd XMM0,XMM2
            ucomisd XMM0,XMM4
            ja .L_421a66

            nop
            nop
            nop
            nop
            nop
            nop
.L_421890:

            pxor XMM0,XMM0
.L_421894:

            add RSP,16
.L_421898:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4218a0:

            cmp EDI,-6
            je .L_421a78

            jle .L_421ab0

            cmp EDI,-4
            je .L_4219f0

            jl .L_421c40

            cmp EDI,-3
            je .L_421c10

            cmp EDI,-2
            jne .L_421890

            pxor XMM4,XMM4
            ucomisd XMM4,XMM0
            ja .L_421890

            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            movsd QWORD PTR [RSP],XMM4
            divsd XMM1,QWORD PTR [RSI]
            call pow@PLT

            subsd XMM0,QWORD PTR [RBX+16]
            movsd XMM4,QWORD PTR [RSP]
            divsd XMM0,QWORD PTR [RBX+8]
            ucomisd XMM4,XMM0
            ja .L_421890

            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421908:

            cmp EDI,7
            je .L_4219b8

            jl .L_421bb0

            cmp EDI,8
            je .L_421bd8

            cmp EDI,108
            jne .L_421890

            movsd XMM3,QWORD PTR [RIP+.L_42d9d8]
            movapd XMM4,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM0,XMM3
            divsd XMM4,QWORD PTR [RSI]
            subsd XMM0,XMM2
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP],XMM4
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            add RSP,16
.L_421964:

            subsd XMM3,XMM0
            pop RBX
            movapd XMM1,XMM4
            movapd XMM0,XMM3
            jmp pow@PLT
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421980:

            ucomisd XMM0,QWORD PTR [RSI+32]
            jb .L_421da0

            mulsd XMM2,QWORD PTR [RSI+8]
            movsd XMM0,QWORD PTR [RSI+16]
            addsd XMM0,XMM2
            ucomisd XMM0,QWORD PTR [RIP+.L_42ec48]
            ja .L_421e30

            movsd XMM0,QWORD PTR [RSI+40]
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219b8:

            movsd XMM6,QWORD PTR [RSI+16]
            movsd XMM1,QWORD PTR [RSI]
            movsd QWORD PTR [RSP],XMM6
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP]
            pxor XMM1,XMM1
            addsd XMM0,QWORD PTR [RBX+24]
            ucomisd XMM1,XMM0
            jb .L_421d60

            movsd XMM0,QWORD PTR [RBX+32]
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4219f0:

            movsd XMM3,QWORD PTR [RSI+8]
            pxor XMM0,XMM0
            mulsd XMM3,QWORD PTR [RSI+32]
            addsd XMM3,QWORD PTR [RSI+16]
            ucomisd XMM0,XMM3
            jbe .L_421d80
.L_421a0d:

            ucomisd XMM2,XMM0
            jae .L_421a8b

            divsd XMM2,QWORD PTR [RBX+24]
            movapd XMM0,XMM2
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421a28:

            movsd XMM4,QWORD PTR [RSI+16]
            movsd XMM1,QWORD PTR [RSI+8]
            movapd XMM3,XMM4
            xorpd XMM3,XMMWORD PTR [RIP+.L_42e2e0]
            divsd XMM3,XMM1
            ucomisd XMM0,XMM3
            jb .L_421890

            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            addsd XMM0,XMM4
            pxor XMM4,XMM4
            ucomisd XMM0,XMM4
            jbe .L_421890
.L_421a66:

            movsd XMM1,QWORD PTR [RBX]
            add RSP,16
.L_421a6e:

            pop RBX
            jmp pow@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421a78:

            subsd XMM2,QWORD PTR [RSI+24]
            pxor XMM4,XMM4
            ucomisd XMM4,XMM2
            ja .L_421890
.L_421a8b:

            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            movapd XMM0,XMM2
            divsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            subsd XMM0,QWORD PTR [RBX+16]
            divsd XMM0,QWORD PTR [RBX+8]
            jmp .L_421894
          .byte 0x90
.L_421ab0:

            cmp EDI,-8
            je .L_421d10

            jg .L_421cc0

            cmp EDI,-108
            jne .L_421890

            movsd XMM3,QWORD PTR [RSI]
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP],XMM3
            call pow@PLT

            movsd XMM7,QWORD PTR [RIP+.L_42d9d8]
            movsd XMM3,QWORD PTR [RSP]
            subsd XMM7,XMM0
            movapd XMM1,XMM3
            movapd XMM0,XMM7
            call pow@PLT

            movsd XMM5,QWORD PTR [RIP+.L_42d9d8]
            subsd XMM5,XMM0
            movapd XMM0,XMM5
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421b10:

            cmp EDI,1
            jne .L_421890

            pxor XMM4,XMM4
            movsd XMM1,QWORD PTR [RSI]
            ucomisd XMM4,XMM0
            jbe .L_421e20

            subsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            movsd XMM2,QWORD PTR [RIP+.L_432628]
            andpd XMM1,XMMWORD PTR [RIP+.L_42d9e0]
            ucomisd XMM2,XMM1
            ja .L_421894

            jmp .L_421890
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421b58:

            movsd XMM5,QWORD PTR [RSI+16]
            movsd XMM3,QWORD PTR [RSI+8]
            movapd XMM1,XMM5
            pxor XMM4,XMM4
            xorpd XMM1,XMMWORD PTR [RIP+.L_42e2e0]
            movapd XMM6,XMM4
            divsd XMM1,XMM3
            maxsd XMM6,XMM1
            ucomisd XMM0,XMM6
            jb .L_421bc8

            mulsd XMM3,XMM0
            movapd XMM0,XMM3
            addsd XMM0,XMM5
            ucomisd XMM0,XMM4
            jbe .L_421890
.L_421b9a:

            movsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            addsd XMM0,QWORD PTR [RBX+24]
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421bb0:

            mulsd XMM2,QWORD PTR [RSI+8]
            movsd XMM0,QWORD PTR [RSI+16]
            pxor XMM1,XMM1
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            jbe .L_421b9a
.L_421bc8:

            movsd XMM0,QWORD PTR [RBX+24]
            jmp .L_421894
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421bd8:

            movsd XMM1,QWORD PTR [RSI+16]
            movsd XMM7,QWORD PTR [RSI]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSI+8]
            movsd QWORD PTR [RSP],XMM7
            addsd XMM1,QWORD PTR [RSI+24]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RBX+32]
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421c10:

            movsd XMM0,QWORD PTR [RSI+24]
            ucomisd XMM2,XMM0
            jb .L_421de8

            subsd XMM2,XMM0
            pxor XMM4,XMM4
            ucomisd XMM2,XMM4
            jbe .L_421890

            jmp .L_421a8b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421c40:

            movsd XMM1,QWORD PTR [RSI+24]
            movsd XMM0,QWORD PTR [RSI+32]
            movsd XMM3,QWORD PTR [RSI+48]
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jb .L_421dd0

            subsd XMM2,QWORD PTR [RSI+40]
            pxor XMM4,XMM4
            ucomisd XMM4,XMM2
            ja .L_421890

            jmp .L_421a8b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421c80:

            pxor XMM4,XMM4
            movsd XMM2,QWORD PTR [RSI]
            ucomisd XMM4,XMM0
            jbe .L_421e00

            subsd XMM2,QWORD PTR [RIP+.L_42d9d8]
            movsd XMM1,QWORD PTR [RIP+.L_432628]
            andpd XMM2,XMMWORD PTR [RIP+.L_42d9e0]
            ucomisd XMM1,XMM2
            ja .L_421894

            jmp .L_421890
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421cc0:

            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_42d9d8]
            subsd XMM1,QWORD PTR [RSI+32]
            movsd XMM0,QWORD PTR [RIP+.L_42ec40]
            divsd XMM3,QWORD PTR [RSI]
            divsd XMM1,QWORD PTR [RSI+8]
            movsd QWORD PTR [RSP],XMM3
            call pow@PLT

            subsd XMM0,QWORD PTR [RBX+24]
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM3
            divsd XMM0,QWORD PTR [RBX+16]
            add RSP,16
.L_421d03:

            pop RBX
            jmp pow@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421d10:

            subsd XMM2,QWORD PTR [RSI+32]
            pxor XMM4,XMM4
            ucomisd XMM4,XMM2
            movapd XMM0,XMM2
            ja .L_421890

            divsd XMM0,QWORD PTR [RSI]
            call log@PLT

            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RBX+8]
            call log@PLT

            movsd XMM2,QWORD PTR [RSP]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            subsd XMM0,QWORD PTR [RBX+24]
            divsd XMM0,QWORD PTR [RBX+16]
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421d60:

            movsd XMM5,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP],XMM5
            call log10@PLT

            mulsd XMM0,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RBX+32]
            jmp .L_421894
          .byte 0x66
          .byte 0x90
.L_421d80:

            movsd XMM1,QWORD PTR [RSI]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM2
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP]
            jmp .L_421a0d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421da0:

            mulsd XMM2,QWORD PTR [RSI+24]
            movsd XMM0,QWORD PTR [RSI+48]
            addsd XMM0,XMM2
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421db8:

            mulsd XMM2,QWORD PTR [RSI+24]
            movapd XMM0,XMM2
            jmp .L_421894
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421dd0:

            subsd XMM2,XMM3
            movapd XMM0,XMM2
            divsd XMM0,XMM1
            jmp .L_421894
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421de8:

            movsd XMM0,QWORD PTR [RSI+16]
            xorpd XMM0,XMMWORD PTR [RIP+.L_42e2e0]
            divsd XMM0,QWORD PTR [RSI+8]
            jmp .L_421894
          .byte 0x90
.L_421e00:

            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            add RSP,16
.L_421e0c:

            pop RBX
            divsd XMM1,XMM2
            jmp pow@PLT
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421e20:

            add RSP,16
            pop RBX
            jmp pow@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421e30:

            movsd XMM1,QWORD PTR [RSI]
            call pow@PLT

            addsd XMM0,QWORD PTR [RBX+40]
            jmp .L_421894
.L_421e43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421e50:

            push RBP
            push RBX
            mov EBX,ESI
            mov ESI,6
            mov RBP,RDX
            sub RSP,8
.L_421e60:

            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            mov R9D,EBX
            sar R9D,31
            test RAX,RAX
            je .L_421ebd

            nop
            nop
            nop
            nop
.L_421e78:

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            jle .L_421eb1

            mov ESI,R9D
            xor ESI,EBX
            sub ESI,R9D
            cmp ESI,DWORD PTR [RAX+4]
            je .L_421f20

            lea EDI,DWORD PTR [RDX-1]
            mov ECX,1
            add RDI,1
            jmp .L_421ea9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421ea0:

            add RCX,1
            cmp ESI,DWORD PTR [RAX+RCX*4]
            je .L_421f28
.L_421ea9:

            cmp RCX,RDI
            mov R8D,ECX
            jne .L_421ea0
.L_421eb1:

            mov RAX,QWORD PTR [RAX+176]
            test RAX,RAX
            jne .L_421e78
.L_421ebd:

            mov R8D,EBX
            lea RAX,QWORD PTR [RIP+.L_641b60]
            sar R8D,31
            nop
            nop
            nop
            nop
            nop
.L_421ed0:

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            jle .L_421f08

            mov ESI,R8D
            xor ESI,EBX
            sub ESI,R8D
            cmp DWORD PTR [RAX+4],ESI
            je .L_421f38

            lea EDI,DWORD PTR [RDX-1]
            mov ECX,1
            add RDI,1
            jmp .L_421f01
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421ef8:

            add RCX,1
            cmp DWORD PTR [RAX+RCX*4],ESI
            je .L_421f40
.L_421f01:

            cmp RCX,RDI
            mov EDX,ECX
            jne .L_421ef8
.L_421f08:

            mov RAX,QWORD PTR [RAX+176]
            test RAX,RAX
            jne .L_421ed0
.L_421f14:

            add RSP,8
.L_421f18:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421f20:

            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
.L_421f28:

            test RBP,RBP
            je .L_421f14

            mov DWORD PTR [RBP],R8D
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_421f38:

            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_421f40:

            test RBP,RBP
            je .L_421f14

            mov DWORD PTR [RBP],EDX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_421f4f:

            nop
.L_421f50:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,24
.L_421f61:

            cmp ESI,65530
            mov QWORD PTR [RSP],RCX
            ja .L_422230

            test ESI,ESI
            mov EBP,ESI
            mov R13D,EDX
            mov R15,R8
            jg .L_421f85

            test EDX,EDX
            jle .L_422210
.L_421f85:

            mov ESI,56
            mov RDI,R12
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_422124

            test R13D,R13D
            jg .L_422140

            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+32],0
.L_421fb7:

            test EBP,EBP
            mov DWORD PTR [RBX+8],R13D
            jne .L_4221c0

            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+40],0
.L_421fd2:

            mov RBP,QWORD PTR [RSP]
            test RBP,RBP
            je .L_4220c0

            test R13D,R13D
            jle .L_4220c0

            mov EDX,8
            mov ESI,R13D
            mov RDI,R12
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RBX+24],RAX
            je .L_4220e4

            xor R15D,R15D
            jmp .L_422075
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422010:

            mov RAX,QWORD PTR [RBP+104]
            mov R10,QWORD PTR [RBX+16]
            add R10,R14
            test RAX,RAX
            je .L_4220ad

            mov ECX,DWORD PTR [RBP+96]
            mov RSI,RAX
            mov RDI,R12
            mov QWORD PTR [RSP+8],R10
            lea EDX,DWORD PTR [RCX*4]
            call .L_421190

            mov R10,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RBP+8]
            mov QWORD PTR [R10+104],RAX
.L_42204a:

            xor EDX,EDX
            mov RDI,R12
            call .L_421e50

            test RAX,RAX
            je .L_422068

            mov RDX,QWORD PTR [RAX+168]
            mov RAX,QWORD PTR [RBX+32]
            mov QWORD PTR [RAX+R15*8],RDX
.L_422068:

            add R15,1
            add RBP,112
            cmp R13D,R15D
            jle .L_4220c0
.L_422075:

            mov EAX,DWORD PTR [RBP+8]
            mov R14,RBP
            sub R14,QWORD PTR [RSP]
            test EAX,EAX
            je .L_422188
.L_422087:

            mov RDI,QWORD PTR [RBX+16]
            mov RSI,RBP
            mov EDX,112
            add RDI,R14
            call memmove@PLT

            mov ESI,DWORD PTR [RBP+8]
            test ESI,ESI
            je .L_422010

            mov R10,QWORD PTR [RBX+16]
            add R10,R14
.L_4220ad:

            mov QWORD PTR [R10+104],0
            jmp .L_42204a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4220c0:

            mov ESI,DWORD PTR [RBX+40]
            mov R8,QWORD PTR [RBX+48]
            xor R9D,R9D
            mov ECX,1
            mov EDX,1
            mov RDI,R12
            call .L_427e70

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            jne .L_422124
.L_4220e4:

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            je .L_4220f5
.L_4220ed:

            mov RDI,R12
            call .L_421170
.L_4220f5:

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_422106

            mov RDI,R12
            call .L_421170
.L_422106:

            mov RSI,QWORD PTR [RBX+48]
            test RSI,RSI
            je .L_422117

            mov RDI,R12
            call .L_421170
.L_422117:

            mov RSI,RBX
            mov RDI,R12
            xor EBX,EBX
            call .L_421170
.L_422124:

            add RSP,24
.L_422128:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422140:

            mov EDX,112
            mov ESI,R13D
            mov RDI,R12
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_4220f5

            mov EDX,8
            mov ESI,R13D
            mov RDI,R12
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            jne .L_421fb7

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            jne .L_4220ed

            jmp .L_422106
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422188:

            mov RAX,QWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RBP+96]
            mov R9D,1
            xor R8D,R8D
            mov ECX,1
            mov EDX,1
            mov RDI,R12
            lea R11,QWORD PTR [RAX+R15*8]
            mov QWORD PTR [RSP+8],R11
            call .L_427e70

            mov R11,QWORD PTR [RSP+8]
            mov QWORD PTR [R11],RAX
            jmp .L_422087
.L_4221c0:

            mov EDX,2
            mov ESI,EBP
            mov RDI,R12
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [RBX+48],RAX
            je .L_4220e4

            test R15,R15
            mov DWORD PTR [RBX+40],EBP
            je .L_421fd2

            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4221f0:

            movzx ECX,WORD PTR [R15+RDX*2]
            mov WORD PTR [RAX+RDX*2],CX
            add RDX,1
            cmp EBP,EDX
            jg .L_4221f0

            jmp .L_421fd2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422210:

            lea RDX,QWORD PTR [RIP+.L_4321e0]
.L_422217:

            mov ESI,2
            mov RDI,R12
            xor EAX,EAX
            call .L_421420

            xor EBX,EBX
            jmp .L_422124
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422230:

            lea RDX,QWORD PTR [RIP+.L_4321a8]
            jmp .L_422217
.L_422239:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422240:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_42224d:

            mov RDI,QWORD PTR [RDI]
            mov R12,QWORD PTR [RDI]
            call .L_427ed0

            mov RSI,QWORD PTR [RBX+48]
            test RSI,RSI
            je .L_422269

            mov RDI,R12
            call .L_421170
.L_422269:

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            je .L_4222d6

            mov EAX,DWORD PTR [RBX+8]
            test EAX,EAX
            je .L_4222c2

            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
.L_422280:

            mov R13D,EBP
            lea RAX,QWORD PTR [R13*8]
            sub RAX,R13
            shl RAX,4
            mov RSI,QWORD PTR [RSI+RAX*1+104]
            test RSI,RSI
            je .L_4222a4

            mov RDI,R12
            call .L_421170
.L_4222a4:

            mov RAX,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RAX+R13*8]
            test RDI,RDI
            je .L_4222b6

            call .L_427ed0
.L_4222b6:

            add EBP,1
            cmp EBP,DWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX+16]
            jb .L_422280
.L_4222c2:

            mov RDI,R12
            call .L_421170

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_421170
.L_4222d6:

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_4222e7

            mov RDI,R12
            call .L_421170
.L_4222e7:

            add RSP,8
.L_4222eb:

            mov RSI,RBX
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_421170
.L_4222fc:

            nop
            nop
            nop
            nop
.L_422300:

            push R12
            push RBP
            push RBX
            sub RSP,16
.L_422308:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_42241b

            test RSI,RSI
            mov R12,RDI
            je .L_4223e0

            mov RAX,QWORD PTR [RSI+64]
            mov QWORD PTR [RSP],0
            test RAX,RAX
            je .L_4223fc

            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_4223a7

            xor EBP,EBP
            jmp .L_42235f
          .byte 0x66
          .byte 0x90
.L_422350:

            mov RBX,QWORD PTR [RBX+176]
            mov RBP,RAX
            test RBX,RBX
            je .L_4223a7
.L_42235f:

            mov RDI,QWORD PTR [R12+8]
            mov EDX,184
            mov RSI,RBX
            call .L_4212e0

            test RAX,RAX
            je .L_4223be

            test RBP,RBP
            mov QWORD PTR [RAX+176],0
            je .L_42238d

            mov QWORD PTR [RBP+176],RAX
.L_42238d:

            cmp QWORD PTR [RSP],0
            jne .L_422350

            mov RBX,QWORD PTR [RBX+176]
            mov QWORD PTR [RSP],RAX
            mov RBP,RAX
            test RBX,RBX
            jne .L_42235f
.L_4223a7:

            mov RDI,QWORD PTR [R12+8]
            mov RSI,RSP
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+64],RAX
.L_4223be:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42243a

            add RSP,16
.L_4223d2:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4223e0:

            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641d40]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [R12+64],RAX
            jmp .L_4223be
.L_4223fc:

            lea RCX,QWORD PTR [RIP+.L_4325d0]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_42decf]
            mov EDX,78
            call __assert_fail@PLT
.L_42241b:

            lea RCX,QWORD PTR [RIP+.L_4325f0]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_42deba]
            mov EDX,108
            call __assert_fail@PLT
.L_42243a:

            call __stack_chk_fail@PLT
.L_42243f:

            nop
.L_422440:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov ESI,6
            mov RBP,RDI
            sub RSP,8
.L_422455:

            call .L_4068a0

            test RBX,RBX
            mov R13,RAX
            je .L_4224e0

            mov RDI,RBP
            mov ESI,184
            call .L_4064d0

            mov RBP,RAX
            xor EAX,EAX
            test RBP,RBP
            je .L_4224cd

            movsxd R12,DWORD PTR [RBX+24]
            mov RAX,QWORD PTR [RBX+192]
            mov QWORD PTR [RBP+168],RAX
            cmp R12D,20
            jg .L_422500

            mov DWORD PTR [RBP],R12D
            shl R12,2
.L_422499:

            lea RSI,QWORD PTR [RBX+28]
            lea RDI,QWORD PTR [RBP+4]
            mov RDX,R12
            call memmove@PLT

            lea RSI,QWORD PTR [RBX+108]
            lea RDI,QWORD PTR [RBP+84]
            mov RDX,R12
            call memmove@PLT

            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [RBP+176],RAX
            mov QWORD PTR [R13],RBP
            mov EAX,1
.L_4224cd:

            add RSP,8
.L_4224d1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4224e0:

            mov QWORD PTR [RAX],0
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422500:

            mov DWORD PTR [RBP],20
            mov R12D,80
            jmp .L_422499
.L_42250f:

            nop
.L_422510:

            test RDI,RDI
            je .L_422519

            mov EAX,DWORD PTR [RDI+40]
            ret 
.L_422519:

            lea RCX,QWORD PTR [RIP+.L_4325a0]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432302]
            sub RSP,8
            mov EDX,618
            call __assert_fail@PLT
.L_42253c:

            nop
            nop
            nop
            nop
.L_422540:

            test RDI,RDI
            je .L_42254a

            mov RAX,QWORD PTR [RDI+48]
            ret 
.L_42254a:

            lea RCX,QWORD PTR [RIP+.L_432580]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432302]
            sub RSP,8
            mov EDX,624
            call __assert_fail@PLT
.L_42256d:

            nop
            nop
            nop
.L_422570:

            mov R8,RDX
            xor ECX,ECX
            xor EDX,EDX
            jmp .L_421f50
.L_42257c:

            nop
            nop
            nop
            nop
.L_422580:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_42258a:

            test RDX,RDX
            je .L_422698

            cmp ESI,1
            mov EBP,4096
            je .L_422660
.L_4225a1:

            xor R8D,R8D
            mov RCX,RDX
            mov EDX,ESI
            mov ESI,EBP
            call .L_421f50

            test RAX,RAX
            mov R13,RAX
            je .L_42264f

            pxor XMM4,XMM4
            sub EBP,1
            xor EBX,EBX
            mov R12D,4294967295
            cvtsi2sd XMM4,EBP
            add RBP,1
            movsd QWORD PTR [RSP+8],XMM4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4225e0:

            pxor XMM0,XMM0
            mov RDI,R13
            cvtsi2sd XMM0,EBX
            divsd XMM0,QWORD PTR [RSP+8]
            call .L_421700

            mulsd XMM0,QWORD PTR [RIP+.L_42df30]
            xor EDX,EDX
            mov RAX,QWORD PTR [R13+48]
            pxor XMM3,XMM3
            lea RAX,QWORD PTR [RAX+RBX*2]
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM3,XMM0
            jae .L_422643

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov EDX,R12D
            jae .L_422643

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EDX,XMM0
            sar EDX,16
            add DX,32767
.L_422643:

            add RBX,1
            mov WORD PTR [RAX],DX
            cmp RBP,RBX
            jne .L_4225e0
.L_42264f:

            add RSP,24
.L_422653:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422660:

            cmp DWORD PTR [RDX+8],1
            jne .L_4225a1

            movsd XMM0,QWORD PTR [RDX+16]
            mov EAX,2
            movsd XMM1,QWORD PTR [RIP+.L_432630]
            subsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            andpd XMM0,XMMWORD PTR [RIP+.L_42d9e0]
            ucomisd XMM1,XMM0
            cmova EBP,EAX
            jmp .L_4225a1
.L_422698:

            lea RCX,QWORD PTR [RIP+.L_432560]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432315]
            mov EDX,653
            call __assert_fail@PLT
.L_4226b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4226c0:

            sub RSP,360
.L_4226c7:

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov DWORD PTR [RSP+208],ESI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+344],RAX
            xor EAX,EAX
            mov EAX,3825698424
            movsd QWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP],RAX
            movabs RAX,4575657221408423936
            movsd QWORD PTR [RSP+240],XMM0
            mov QWORD PTR [RSP+112],RAX
            pxor XMM0,XMM0
            movabs RAX,7207877579649318912
            cvtss2sd XMM1,DWORD PTR [RDX]
            mov DWORD PTR [RSP+8],6
            mov QWORD PTR [RSP+224],RAX
            lea EAX,DWORD PTR [RSI-1]
            mov ESI,3
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            movsd QWORD PTR [RSP+40],XMM1
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            mov RDX,RSP
            mov QWORD PTR [RSP+48],0
            mov DWORD PTR [RSP+120],0
            mov DWORD PTR [RSP+232],6
            mov QWORD PTR [RSP+248],0
            movsd QWORD PTR [RSP+264],XMM0
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+272],0
            call .L_422580

            mov RCX,QWORD PTR [RSP+344]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4227cf

            add RSP,360
.L_4227ce:

            ret 
.L_4227cf:

            call __stack_chk_fail@PLT
.L_4227d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4227e0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,ESI
            sub RSP,152
.L_4227f6:

            lea RDX,QWORD PTR [RSP+12]
            mov DWORD PTR [RSP+12],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            call .L_421e50

            test R13,R13
            je .L_4228dd

            test RAX,RAX
            mov RDX,RAX
            je .L_4228c0

            lea RDI,QWORD PTR [RSP+32]
            xor EAX,EAX
            mov ECX,12
            mov QWORD PTR [RSP+28],0
            mov QWORD PTR [RSP+120],0
            lea RBX,QWORD PTR [RSP+16]

            rep stosq QWORD PTR [RDI]

            movabs RAX,7207877582409664120
            lea RDI,QWORD PTR [RSP+32]
            mov RSI,R13
            mov QWORD PTR [RSP+16],RAX
            mov ECX,96
            mov DWORD PTR [RSP+24],R12D
            movsxd RAX,DWORD PTR [RSP+12]
            mov EDX,DWORD PTR [RDX+RAX*4+84]
            shl EDX,3
            call __memmove_chk@PLT

            mov RDX,RBX
            mov ESI,1
            mov RDI,RBP
            call .L_422580
.L_422898:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4228fc

            add RSP,152
.L_4228b2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4228c0:

            lea RDX,QWORD PTR [RIP+.L_432220]
            xor EAX,EAX
            mov ECX,R12D
            mov ESI,8
            mov RDI,RBP
            call .L_421420

            xor EAX,EAX
            jmp .L_422898
.L_4228dd:

            lea RCX,QWORD PTR [RIP+.L_432540]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_43232f]
            mov EDX,731
            call __assert_fail@PLT
.L_4228fc:

            call __stack_chk_fail@PLT
.L_422901:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422910:

            sub RSP,24
            mov ESI,1
            lea RDX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
            call .L_4227e0

            add RSP,24
            ret 
.L_42292e:

            nop
            nop
.L_422930:

            test RDI,RDI
            je .L_422940

            jmp .L_422240
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422940:

            ret 
.L_422942:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422950:

            test RDI,RDI
            push RBX
.L_422954:

            je .L_42299b

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_422966

            call .L_422240
.L_422966:

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_422974

            call .L_422240
.L_422974:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_422982

            call .L_422240
.L_422982:

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX],0
            pop RBX
.L_42299a:

            ret 
.L_42299b:

            lea RCX,QWORD PTR [RIP+.L_432520]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432347]
            mov EDX,801
            call __assert_fail@PLT
.L_4229ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4229c0:

            test RDI,RDI
            je .L_4229e0

            mov RAX,QWORD PTR [RDI]
            mov RCX,QWORD PTR [RDI+16]
            mov EDX,DWORD PTR [RDI+8]
            mov ESI,DWORD PTR [RDI+40]
            mov R8,QWORD PTR [RDI+48]
            mov RDI,QWORD PTR [RAX]
            jmp .L_421f50
          .byte 0x66
          .byte 0x90
.L_4229e0:

            xor EAX,EAX
            ret 
.L_4229e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4229f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4229fe:

            test RSI,RSI
            je .L_422d3b

            cmp DWORD PTR [RSI+8],1
            mov RAX,QWORD PTR [RSI]
            mov R12D,EDI
            mov RBX,RSI
            mov RDI,QWORD PTR [RAX]
            jne .L_422a28

            mov RAX,QWORD PTR [RSI+16]
            mov ESI,DWORD PTR [RAX+8]
            test ESI,ESI
            jg .L_422cfe
.L_422a28:

            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            mov ESI,R12D
            call .L_421f50

            test RAX,RAX
            je .L_422c24

            mov R8,QWORD PTR [RBX+48]
            mov EDX,DWORD PTR [RBX+40]
            test R12D,R12D
            movzx EDI,WORD PTR [R8]
            lea R14D,DWORD PTR [RDX-1]
            mov WORD PTR [RSP+12],DI
            movzx EDI,WORD PTR [R8+R14*2]
            mov WORD PTR [RSP+14],DI
            jle .L_422c24

            mov RDX,QWORD PTR [RBX]
            pxor XMM9,XMM9
            sub R12D,1
            movsd XMM12,QWORD PTR [RIP+.L_42df38]
            movsd XMM11,QWORD PTR [RIP+.L_42df40]
            lea R11,QWORD PTR [R12+1]
            mov EDX,DWORD PTR [RDX+52]
            cvtsi2sd XMM9,R12D
            pxor XMM7,XMM7
            mov R12,QWORD PTR [RAX+48]
            pxor XMM8,XMM8
            xor R10D,R10D
            pxor XMM5,XMM5
            mov R15D,4294967295
            lea R9D,DWORD PTR [RDX-1]
            lea R13,QWORD PTR [R8+RDX*2]
            mov RBX,RDX
            movsd XMM3,QWORD PTR [RIP+.L_42df30]
            movsd XMM10,QWORD PTR [RIP+.L_42d568]
            movapd XMM14,XMM12
            movapd XMM13,XMM11
            mov RBP,R9
            add R9,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422ae0:

            pxor XMM0,XMM0
            test EBX,EBX
            cvtsi2sd XMM0,R10D
            mulsd XMM0,XMM3
            divsd XMM0,XMM9
            je .L_422bda

            movzx EDX,WORD PTR [R8]
            cmp DX,WORD PTR [R13]
            jb .L_422c38

            test EBX,EBX
            jle .L_422bda

            xor ECX,ECX
            jmp .L_422b46
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422b18:

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            ucomisd XMM0,XMM1
            jb .L_422b34

            pxor XMM1,XMM1
            cvtsi2sd XMM1,ESI
            ucomisd XMM1,XMM0
            jae .L_422b6e
.L_422b34:

            add RCX,1
            cmp R9,RCX
            je .L_422bda

            movzx EDX,WORD PTR [R8+RCX*2]
.L_422b46:

            movzx ESI,WORD PTR [R8+RCX*2+2]
            mov EDI,ECX
            cmp EDX,ESI
            jle .L_422b18

            pxor XMM1,XMM1
            cvtsi2sd XMM1,ESI
            ucomisd XMM0,XMM1
            jb .L_422b34

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            ucomisd XMM1,XMM0
            jb .L_422b34
.L_422b6e:

            pxor XMM2,XMM2
            pxor XMM6,XMM6
            pxor XMM4,XMM4
            pxor XMM1,XMM1
            cvtsi2sd XMM2,EDI
            add EDI,1
            cvtsi2sd XMM6,EDX
            cvtsi2sd XMM4,ESI
            cvtsi2sd XMM1,EDI
            pxor XMM15,XMM15
            cvtsi2sd XMM15,R14
            mulsd XMM2,XMM3
            ucomisd XMM6,XMM4
            mulsd XMM1,XMM3
            divsd XMM2,XMM15
            divsd XMM1,XMM15
            jp .L_422bb9

            je .L_422cb0
.L_422bb9:

            movapd XMM5,XMM1
            subsd XMM5,XMM2
            movapd XMM2,XMM4
            subsd XMM2,XMM6
            divsd XMM5,XMM2
            mulsd XMM4,XMM5
            subsd XMM1,XMM4
            movapd XMM8,XMM1
.L_422bda:

            mulsd XMM0,XMM5
            xor EDX,EDX
            lea RCX,QWORD PTR [R12+R10*2]
            addsd XMM0,XMM8
            addsd XMM0,XMM10
            ucomisd XMM7,XMM0
            jae .L_422c14

            ucomisd XMM0,XMM3
            mov EDX,R15D
            jae .L_422c14

            subsd XMM0,XMM12
            addsd XMM0,XMM11
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_422c14:

            add R10,1
            mov WORD PTR [RCX],DX
            cmp R11,R10
            jne .L_422ae0
.L_422c24:

            add RSP,24
.L_422c28:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422c38:

            test EBP,EBP
            js .L_422bda

            movsxd RCX,EBP
            jmp .L_422c74
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422c48:

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            ucomisd XMM0,XMM1
            jb .L_422c68

            pxor XMM1,XMM1
            cvtsi2sd XMM1,ESI
            ucomisd XMM1,XMM0
            jae .L_422b6e
.L_422c68:

            sub RCX,1
            test ECX,ECX
            js .L_422bda
.L_422c74:

            movzx EDX,WORD PTR [R8+RCX*2]
            movzx ESI,WORD PTR [R8+RCX*2+2]
            mov EDI,ECX
            cmp EDX,ESI
            jle .L_422c48

            pxor XMM1,XMM1
            cvtsi2sd XMM1,ESI
            ucomisd XMM0,XMM1
            jb .L_422c68

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            ucomisd XMM1,XMM0
            jb .L_422c68

            jmp .L_422b6e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422cb0:

            movzx ESI,WORD PTR [RSP+14]
            cmp WORD PTR [RSP+12],SI
            ja .L_422cc0

            movapd XMM2,XMM1
.L_422cc0:

            addsd XMM2,XMM10
            xor EDX,EDX
            lea RCX,QWORD PTR [R12+R10*2]
            ucomisd XMM7,XMM2
            jae .L_422c14

            ucomisd XMM2,XMM3
            mov EDX,R15D
            jae .L_422c14

            subsd XMM2,XMM14
            addsd XMM2,XMM13
            movq RDX,XMM2
            sar EDX,16
            add DX,32767
            jmp .L_422c14
.L_422cfe:

            xor EDX,EDX
            call .L_421e50

            test RAX,RAX
            jne .L_422d15

            mov RAX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RAX]
            jmp .L_422a28
.L_422d15:

            mov RAX,QWORD PTR [RBX+16]
            mov ESI,DWORD PTR [RAX+8]
            lea RDX,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RAX]
            add RSP,24
.L_422d2a:

            neg ESI
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4227e0
.L_422d3b:

            lea RCX,QWORD PTR [RIP+.L_4324e0]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_43235e]
            mov EDX,921
            call __assert_fail@PLT
.L_422d5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_422d60:

            test RDI,RDI
            je .L_422d72

            mov RSI,RDI
            mov EDI,4096
            jmp .L_4229f0
.L_422d72:

            lea RCX,QWORD PTR [RIP+.L_4324c0]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432377]
            sub RSP,8
            mov EDX,983
            call __assert_fail@PLT
.L_422d95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422da0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_422da7:

            je .L_422e0a

            mov R12,RDI
            mov EDI,DWORD PTR [RDI+40]
            xor EBP,EBP
            test EDI,EDI
            jne .L_422dcc

            jmp .L_422e00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422dc0:

            mov EDI,DWORD PTR [R12+40]
            add EBP,1
            cmp EDI,EBP
            jbe .L_422e00
.L_422dcc:

            pxor XMM0,XMM0
            mov EAX,EBP
            mov RDX,QWORD PTR [R12+48]
            cvtsi2sd XMM0,RAX
            movzx EBX,WORD PTR [RDX+RAX*2]
            call .L_42a3d0

            movzx EAX,AX
            sub EBX,EAX
            mov EAX,EBX
            cdq 
            xor EAX,EDX
            sub EAX,EDX
            cmp EAX,15
            jle .L_422dc0

            pop RBX
.L_422df7:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422e00:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
.L_422e0a:

            lea RCX,QWORD PTR [RIP+.L_4324a0]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432347]
            mov EDX,1121
            call __assert_fail@PLT
.L_422e29:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422e30:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,49272
.L_422e41:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+49256],RAX
            xor EAX,EAX
            test RDI,RDI
            movsd QWORD PTR [RSP+8],XMM0
            je .L_423478

            mov RBX,RDI
            call .L_422da0

            test EAX,EAX
            mov EBP,EAX
            jne .L_423558

            mov RAX,QWORD PTR [RBX]
            mov R14D,DWORD PTR [RBX+40]
            mov RDI,QWORD PTR [RAX]
            cmp R14D,4096
            mov QWORD PTR [RSP+16],RDI
            jg .L_423568

            movsxd RAX,R14D
            lea R11,QWORD PTR [RSP+64]
            xor ESI,ESI
            lea R15,QWORD PTR [RAX*4]
            mov ECX,16388
            mov QWORD PTR [RSP+40],RAX
            mov RDI,R11
            mov QWORD PTR [RSP+32],R11
            lea R13,QWORD PTR [RSP+32864]
            mov RDX,R15
            mov QWORD PTR [RSP+48],R15
            call __memset_chk@PLT

            lea R10,QWORD PTR [RSP+16464]
            xor ESI,ESI
            mov ECX,16388
            mov RDX,R15
            mov RDI,R10
            mov QWORD PTR [RSP+24],R10
            call __memset_chk@PLT

            xor ESI,ESI
            mov ECX,16388
            mov RDX,R15
            mov RDI,R13
            call __memset_chk@PLT

            test R14D,R14D
            mov R10,QWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+32]
            jle .L_422f4a

            lea ECX,DWORD PTR [R14-1]
            mov RSI,QWORD PTR [RBX+48]
            mov EAX,1
            movss XMM1,DWORD PTR [RIP+.L_42df6c]
            add RCX,2
            nop
            nop
            nop
            nop
            nop
.L_422f28:

            movzx EDX,WORD PTR [RSI+RAX*2-2]
            pxor XMM0,XMM0
            movss DWORD PTR [R11+RAX*4],XMM1
            cvtsi2ss XMM0,EDX
            movss DWORD PTR [R10+RAX*4],XMM0
            add RAX,1
            cmp RCX,RAX
            jne .L_422f28
.L_422f4a:

            mov R15,QWORD PTR [RSP+16]
            mov EDX,4
            mov ESI,4097
            mov QWORD PTR [RSP+56],R11
            mov QWORD PTR [RSP+32],R10
            mov RDI,R15
            call .L_421110

            mov RDI,R15
            mov EDX,4
            mov ESI,4097
            mov R12,RAX
            call .L_421110

            mov RDI,R15
            mov EDX,4
            mov ESI,4097
            mov QWORD PTR [RSP+24],RAX
            xor R15D,R15D
            call .L_421110

            test R12,R12
            mov RCX,QWORD PTR [RSP+24]
            je .L_423580

            test RCX,RCX
            je .L_423580

            test RAX,RAX
            je .L_423381

            pxor XMM4,XMM4
            movss XMM7,DWORD PTR [RIP+.L_432640]
            movss XMM0,DWORD PTR [RSP+68]
            cmp R14D,4
            cvtsd2ss XMM4,QWORD PTR [RSP+8]
            movaps XMM1,XMM4
            mulss XMM7,XMM4
            addss XMM1,XMM0
            mulss XMM0,DWORD PTR [RSP+16468]
            movaps XMM5,XMM7
            divss XMM5,XMM1
            movss DWORD PTR [RCX+4],XMM1
            movaps XMM1,XMM4
            movss DWORD PTR [RSP+32868],XMM0
            movss DWORD PTR [R12+4],XMM5
            movss XMM5,DWORD PTR [RIP+.L_432644]
            divss XMM1,DWORD PTR [RCX+4]
            mulss XMM5,XMM4
            movss DWORD PTR [RAX+4],XMM1
            movss XMM1,DWORD PTR [RSP+72]
            movss XMM2,DWORD PTR [RCX+4]
            movaps XMM3,XMM1
            movaps XMM6,XMM2
            mulss XMM1,DWORD PTR [RSP+16472]
            movss XMM8,DWORD PTR [R12+4]
            addss XMM3,XMM5
            mulss XMM6,XMM8
            mulss XMM6,XMM8
            subss XMM3,XMM6
            movss XMM6,DWORD PTR [RIP+.L_432648]
            mulss XMM6,XMM4
            movss DWORD PTR [RCX+8],XMM3
            movaps XMM10,XMM6
            mulss XMM2,DWORD PTR [R12+4]
            mulss XMM2,DWORD PTR [RAX+4]
            subss XMM10,XMM2
            movaps XMM2,XMM10
            divss XMM2,XMM3
            movss DWORD PTR [R12+8],XMM2
            movaps XMM2,XMM4
            divss XMM2,DWORD PTR [RCX+8]
            movss DWORD PTR [RAX+8],XMM2
            mulss XMM0,DWORD PTR [R12+4]
            subss XMM1,XMM0
            movss DWORD PTR [RSP+32872],XMM1
            jle .L_42319c

            movss XMM8,DWORD PTR [RIP+.L_43264c]
            lea EDX,DWORD PTR [R14-5]
            mov R10,QWORD PTR [RSP+32]
            mulss XMM8,XMM4
            mov R11,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RCX+4]
            lea R15,QWORD PTR [RSP+32860]
            lea RDI,QWORD PTR [RSP+32856]
            lea R8,QWORD PTR [RDX*4+16]
            mov EDX,12
            nop
            nop
            nop
            nop
            nop
.L_4230f0:

            movss XMM9,DWORD PTR [R12+RDX*1-4]
            add RSI,4
            mulss XMM9,XMM9
            movss XMM3,DWORD PTR [RAX+RDX*1-8]
            movss XMM0,DWORD PTR [R11+RDX*1]
            mulss XMM3,XMM3
            movaps XMM1,XMM0
            mulss XMM0,DWORD PTR [R10+RDX*1]
            movss XMM2,DWORD PTR [RSI]
            mulss XMM9,XMM2
            addss XMM1,XMM8
            mulss XMM3,DWORD PTR [RSI-4]
            subss XMM1,XMM9
            subss XMM1,XMM3
            movaps XMM3,XMM6
            movss DWORD PTR [RSI+4],XMM1
            mulss XMM2,DWORD PTR [R12+RDX*1-4]
            mulss XMM2,DWORD PTR [RAX+RDX*1-4]
            subss XMM3,XMM2
            movaps XMM2,XMM3
            divss XMM2,XMM1
            movaps XMM1,XMM4
            movss DWORD PTR [R12+RDX*1],XMM2
            divss XMM1,DWORD PTR [RSI+4]
            movss DWORD PTR [RAX+RDX*1],XMM1
            movss XMM1,DWORD PTR [R12+RDX*1-4]
            mulss XMM1,DWORD PTR [R15+RDX*1]
            subss XMM0,XMM1
            movss XMM1,DWORD PTR [RAX+RDX*1-8]
            mulss XMM1,DWORD PTR [RDI+RDX*1]
            subss XMM0,XMM1
            movss DWORD PTR [R13+RDX*1],XMM0
            add RDX,4
            cmp R8,RDX
            jne .L_4230f0
.L_42319c:

            lea EDI,DWORD PTR [R14-2]
            mov R15,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+8],EDI
            movsxd RDI,EDI
            lea RDX,QWORD PTR [RDI*4]
            lea RSI,QWORD PTR [R15-4]
            mov QWORD PTR [RSP+56],RDI
            movss XMM0,DWORD PTR [RSP+R15*1+60]
            lea R11,QWORD PTR [R12+RDX*1]
            lea R9,QWORD PTR [RDX-4]
            lea R8,QWORD PTR [RCX+RDX*1]
            addss XMM5,XMM0
            lea R10,QWORD PTR [RAX+RDX*1]
            lea RDI,QWORD PTR [R12+RSI*1]
            movss XMM2,DWORD PTR [R11]
            lea R15,QWORD PTR [RAX+R9*1]
            mulss XMM2,XMM2
            mov QWORD PTR [RSP+24],R9
            lea R9,QWORD PTR [RCX+RSI*1]
            movss XMM1,DWORD PTR [R15]
            mulss XMM0,DWORD PTR [RSP+RSI*1+16464]
            mulss XMM1,XMM1
            mov QWORD PTR [RSP+32],RDI
            mulss XMM2,DWORD PTR [R8]
            mulss XMM1,DWORD PTR [RCX+RDX*1-4]
            subss XMM5,XMM2
            subss XMM5,XMM1
            movss DWORD PTR [R9],XMM5
            movss XMM1,DWORD PTR [R8]
            mulss XMM1,DWORD PTR [R11]
            mulss XMM1,DWORD PTR [R10]
            subss XMM7,XMM1
            divss XMM7,XMM5
            movss DWORD PTR [RDI],XMM7
            lea RDI,QWORD PTR [R13+RSI*1]
            lea RSI,QWORD PTR [R13+RDX*1]
            movss XMM1,DWORD PTR [R11]
            mulss XMM1,DWORD PTR [RSI]
            mov R11,QWORD PTR [RSP+24]
            subss XMM0,XMM1
            movss XMM1,DWORD PTR [RSP+R11*1+32864]
            mulss XMM1,DWORD PTR [R15]
            lea R11,QWORD PTR [RDX+4]
            mov R15,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [R12+R11*1]
            movss XMM2,DWORD PTR [RSI]
            mulss XMM2,XMM2
            subss XMM0,XMM1
            movss XMM1,DWORD PTR [R10]
            mulss XMM1,XMM1
            mulss XMM2,DWORD PTR [RCX+RDX*1+4]
            movss DWORD PTR [RDI],XMM0
            movss XMM0,DWORD PTR [RSP+R15*1+64]
            mulss XMM1,DWORD PTR [R8]
            addss XMM4,XMM0
            mov R8,QWORD PTR [RSP+40]
            mulss XMM0,DWORD PTR [RSP+R15*1+16464]
            subss XMM4,XMM2
            subss XMM4,XMM1
            movss DWORD PTR [RCX+R8*4],XMM4
            lea R8,QWORD PTR [R13+RDX*1]
            movss XMM1,DWORD PTR [R10]
            movss XMM2,DWORD PTR [RSP+RDX*1+32868]
            mulss XMM2,DWORD PTR [RSI]
            mov ESI,DWORD PTR [RSP+8]
            test ESI,ESI
            subss XMM0,XMM2
            movss XMM2,DWORD PTR [R8]
            mulss XMM2,XMM1
            subss XMM0,XMM2
            divss XMM0,XMM4
            movss DWORD PTR [RSP+R15*1+32864],XMM0
            movss XMM2,DWORD PTR [RDI]
            divss XMM2,DWORD PTR [R9]
            mov R9,QWORD PTR [RSP+32]
            mulss XMM0,DWORD PTR [R9]
            subss XMM2,XMM0
            movss DWORD PTR [RDI],XMM2
            jle .L_42337b

            mov RDI,QWORD PTR [RSP+56]
            lea ESI,DWORD PTR [R14-3]
            lea R10,QWORD PTR [R13+4]
            sub RDI,RSI
            mov RSI,RDI
            lea RDI,QWORD PTR [R13+8]
            shl RSI,2
            jmp .L_42334a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423340:

            movss XMM1,DWORD PTR [RAX+RDX*1-4]
            sub RDX,4
.L_42334a:

            movss XMM0,DWORD PTR [R13+RDX*1]
            mulss XMM1,DWORD PTR [RDI+RDX*1]
            divss XMM0,DWORD PTR [RCX+RDX*1]
            movss XMM2,DWORD PTR [R12+RDX*1]
            cmp RSI,RDX
            mulss XMM2,DWORD PTR [R10+RDX*1]
            subss XMM0,XMM2
            subss XMM0,XMM1
            movss DWORD PTR [R13+RDX*1],XMM0
            jne .L_423340
.L_42337b:

            mov R15D,1
.L_423381:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R12
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+8],RCX
            call .L_421170

            mov RAX,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+8]
.L_4233a2:

            test RCX,RCX
            je .L_4233be

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RCX
            mov QWORD PTR [RSP+8],RAX
            call .L_421170

            mov RAX,QWORD PTR [RSP+8]
.L_4233be:

            test RAX,RAX
            je .L_4233d0

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RAX
            call .L_421170
.L_4233d0:

            test R15D,R15D
            je .L_423478

            xor EDI,EDI
            xor ECX,ECX
            cmp R14D,1
            jle .L_4234a8

            lea EDX,DWORD PTR [R14-1]
            mov RAX,QWORD PTR [RSP+40]
            xor EDI,EDI
            xor ECX,ECX
            pxor XMM2,XMM2
            movsxd RDX,EDX
            shl RDX,2
            movss XMM0,DWORD PTR [RSP+RAX*4+32864]
            lea RSI,QWORD PTR [RSP+RDX*1+32860]
            lea RAX,QWORD PTR [R13+RDX*1]
            lea EDX,DWORD PTR [R14-2]
            shl RDX,2
            sub RSI,RDX
            jmp .L_423434
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423428:

            sub RAX,4
            cmp RSI,RAX
            je .L_4234a8

            movaps XMM0,XMM1
.L_423434:

            ucomiss XMM0,XMM2
            jp .L_423441

            sete DL
            movzx EDX,DL
            add ECX,EDX
.L_423441:

            ucomiss XMM0,DWORD PTR [RIP+.L_42df74]
            jb .L_42344d

            add EDI,1
.L_42344d:

            movss XMM1,DWORD PTR [RAX]
            ucomiss XMM1,XMM0
            jbe .L_423428

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_432270]
            mov ESI,2
            mov RDI,QWORD PTR [RAX]
            xor EAX,EAX
            call .L_421420

            jmp .L_42347a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423478:

            xor EBP,EBP
.L_42347a:

            mov RBX,QWORD PTR [RSP+49256]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_4235cc

            add RSP,49272
.L_42349a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4234a8:

            mov EAX,R14D
            mov EDX,1431655766
            imul EDX
            mov EAX,R14D
            sar EAX,31
            sub EDX,EAX
            cmp EDX,ECX
            jl .L_423590

            cmp EDX,EDI
            jl .L_4235ae

            test R14D,R14D
            jle .L_423558

            lea ECX,DWORD PTR [R14-1]
            mov RSI,QWORD PTR [RBX+48]
            mov EDX,1
            pxor XMM1,XMM1
            mov EDI,4294967295
            movsd XMM2,QWORD PTR [RIP+.L_42d568]
            add RCX,2
            movsd XMM3,QWORD PTR [RIP+.L_42df30]
            movsd XMM5,QWORD PTR [RIP+.L_42df38]
            movsd XMM4,QWORD PTR [RIP+.L_42df40]
            nop
            nop
            nop
.L_423510:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtss2sd XMM0,DWORD PTR [R13+RDX*4]
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            jae .L_423543

            ucomisd XMM0,XMM3
            mov EAX,EDI
            jae .L_423543

            subsd XMM0,XMM5
            addsd XMM0,XMM4
            movq RAX,XMM0
            sar EAX,16
            add AX,32767
.L_423543:

            mov WORD PTR [RSI+RDX*2-2],AX
            add RDX,1
            cmp RDX,RCX
            jne .L_423510

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423558:

            mov EBP,1
            jmp .L_42347a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423568:

            lea RDX,QWORD PTR [RIP+.L_432248]
            mov ESI,2
            xor EAX,EAX
            call .L_421420

            jmp .L_42347a
.L_423580:

            test R12,R12
            je .L_4233a2

            jmp .L_423381
          .byte 0x66
          .byte 0x90
.L_423590:

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_432298]
            mov ESI,2
            mov RDI,QWORD PTR [RAX]
            xor EAX,EAX
            call .L_421420

            jmp .L_42347a
.L_4235ae:

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4322c8]
            mov ESI,2
            mov RDI,QWORD PTR [RAX]
            xor EAX,EAX
            call .L_421420

            jmp .L_42347a
.L_4235cc:

            call __stack_chk_fail@PLT
.L_4235d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4235e0:

            test RDI,RDI
            je .L_423685

            mov EDX,DWORD PTR [RDI+40]
            mov EAX,1
            cmp EDX,1
            jle .L_42363a

            mov RSI,QWORD PTR [RDI+48]
            lea EAX,DWORD PTR [RDX-1]
            movzx ECX,WORD PTR [RSI]
            cmp CX,WORD PTR [RSI+RAX*2]
            jbe .L_423640

            sub EDX,2
            lea RAX,QWORD PTR [RSI+2]
            lea RSI,QWORD PTR [RSI+RDX*2+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_423618:

            movzx EDX,WORD PTR [RAX]
            mov EDI,EDX
            sub EDI,ECX
            cmp EDI,2
            jg .L_423638

            add RAX,2
            mov ECX,EDX
            cmp RSI,RAX
            jne .L_423618

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423638:

            xor EAX,EAX
.L_42363a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423640:

            movsxd RAX,EDX
            sub EDX,2
            movsxd RDI,EDX
            movzx ECX,WORD PTR [RSI+RAX*2-2]
            mov EDX,EDX
            add RDI,RDI
            add RDX,RDX
            lea RAX,QWORD PTR [RSI+RDI*1]
            lea RSI,QWORD PTR [RSI+RDI*1-2]
            sub RSI,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_423668:

            movzx EDX,WORD PTR [RAX]
            mov EDI,EDX
            sub EDI,ECX
            cmp EDI,2
            jg .L_423638

            sub RAX,2
            mov ECX,EDX
            cmp RAX,RSI
            jne .L_423668

            mov EAX,1
            ret 
.L_423685:

            lea RCX,QWORD PTR [RIP+.L_432480]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432302]
            sub RSP,8

            mov EDX,1140
            call __assert_fail@PLT
.L_4236a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4236b0:

            test RDI,RDI
            je .L_4236cd

            mov EDX,DWORD PTR [RDI+40]
            mov RAX,QWORD PTR [RDI+48]
            sub EDX,1
            movzx ECX,WORD PTR [RAX+RDX*2]
            cmp WORD PTR [RAX],CX
            seta AL
            movzx EAX,AL
            ret 
.L_4236cd:

            lea RCX,QWORD PTR [RIP+.L_432460]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432302]
            sub RSP,8
            mov EDX,1182
            call __assert_fail@PLT
.L_4236f0:

            test RDI,RDI
            je .L_4236ff

            xor EAX,EAX
            cmp DWORD PTR [RDI+8],1
            seta AL
            ret 
.L_4236ff:

            lea RCX,QWORD PTR [RIP+.L_432440]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432302]
            sub RSP,8
            mov EDX,1191
            call __assert_fail@PLT
.L_423722:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423730:

            test RDI,RDI
            je .L_423748

            xor EAX,EAX
            cmp DWORD PTR [RDI+8],1
            je .L_423740

            ret 
          .byte 0x90
.L_423740:

            mov RAX,QWORD PTR [RDI+16]
            mov EAX,DWORD PTR [RAX+8]
            ret 
.L_423748:

            lea RCX,QWORD PTR [RIP+.L_432420]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432302]
            sub RSP,8
            mov EDX,1198
            call __assert_fail@PLT
.L_42376b:

            nop
            nop
            nop
            nop
            nop
.L_423770:

            sub RSP,40
.L_423774:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDI,RDI
            mov WORD PTR [RSP+12],SI
            je .L_4237be

            mov RAX,QWORD PTR [RDI]
            lea RSI,QWORD PTR [RSP+22]
            lea RDI,QWORD PTR [RSP+12]
            mov RDX,RAX
            call QWORD PTR [RAX+128]

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,WORD PTR [RSP+22]
            jne .L_4237dd

            add RSP,40
.L_4237bd:

            ret 
.L_4237be:

            lea RCX,QWORD PTR [RIP+.L_4323e0]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432347]
            mov EDX,1228
            call __assert_fail@PLT
.L_4237dd:

            call __stack_chk_fail@PLT
.L_4237e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4237f0:

            sub RSP,8
.L_4237f4:

            test RDI,RDI
            je .L_423886

            mov EAX,DWORD PTR [RDI+8]
            cvtss2sd XMM0,XMM0
            test EAX,EAX
            jne .L_423878

            mulsd XMM0,QWORD PTR [RIP+.L_42df30]
            xor ESI,ESI
            pxor XMM1,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM1,XMM0
            jae .L_423852

            ucomisd XMM0,QWORD PTR [RIP+.L_42df30]
            mov ESI,65535
            jae .L_423852

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd ESI,XMM0
            sar ESI,16
            add SI,32767
            movzx ESI,SI
.L_423852:

            call .L_423770

            pxor XMM0,XMM0
            movzx EAX,AX
            cvtsi2sd XMM0,EAX
            divsd XMM0,QWORD PTR [RIP+.L_42df30]
            add RSP,8
.L_42386e:

            cvtsd2ss XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423878:

            call .L_421700

            cvtsd2ss XMM0,XMM0
            add RSP,8
            ret 
.L_423886:

            lea RCX,QWORD PTR [RIP+.L_432400]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432347]
            mov EDX,1207
            call __assert_fail@PLT
.L_4238a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4238b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4238be:

            test RSI,RSI
            mov QWORD PTR [RSP+8],RDI
            je .L_4239a5

            test RDX,RDX
            je .L_4239c4

            mov R13,RSI
            mov EDI,ECX
            mov RSI,RDX
            mov R14D,ECX
            call .L_4229f0

            test RAX,RAX
            mov RBP,RAX
            je .L_4239a0

            mov RDI,QWORD PTR [RSP+8]
            mov EDX,4
            mov ESI,R14D
            xor R12D,R12D
            call .L_421110

            test RAX,RAX
            mov RBX,RAX
            je .L_423982

            test R14D,R14D
            je .L_423961

            pxor XMM2,XMM2
            lea R12D,DWORD PTR [R14-1]
            xor R15D,R15D
            cvtsi2ss XMM2,R12
            add R12,1
            movss DWORD PTR [RSP+4],XMM2
            nop
            nop
            nop
.L_423930:

            pxor XMM0,XMM0
            mov EAX,R15D
            mov RDI,R13
            cvtsi2ss XMM0,RAX
            divss XMM0,DWORD PTR [RSP+4]
            call .L_4237f0

            mov RDI,RBP
            call .L_4237f0

            movss DWORD PTR [RBX+R15*4],XMM0
            add R15,1
            cmp R12,R15
            jne .L_423930
.L_423961:

            mov ESI,R14D
            mov R14,QWORD PTR [RSP+8]
            mov RDX,RBX
            mov RDI,R14
            call .L_4226c0

            mov RSI,RBX
            mov RDI,R14
            mov R12,RAX
            call .L_421170
.L_423982:

            mov RDI,RBP
            call .L_422240
.L_42398a:

            add RSP,24
.L_42398e:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4239a0:

            xor R12D,R12D
            jmp .L_42398a
.L_4239a5:

            lea RCX,QWORD PTR [RIP+.L_432500]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432390]
            mov EDX,835
            call __assert_fail@PLT
.L_4239c4:

            lea RCX,QWORD PTR [RIP+.L_432500]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_4323a3]
            mov EDX,836
            call __assert_fail@PLT
.L_4239e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4239f0:

            push RBP
            push RBX
            sub RSP,56
.L_4239f6:

            test RDI,RDI
            movsd QWORD PTR [RSP+40],XMM0
            je .L_423b78

            mov RBP,RDI
            mov EBX,1
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+8],0
            jmp .L_423a3f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423a30:

            add EBX,1
            cmp EBX,4096
            je .L_423b00
.L_423a3f:

            pxor XMM1,XMM1
            mov RDI,RBP
            pxor XMM0,XMM0
            cvtsi2sd XMM1,EBX
            mulsd XMM1,QWORD PTR [RIP+.L_432638]
            cvtsd2ss XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call .L_4237f0

            pxor XMM3,XMM3
            ucomiss XMM0,XMM3
            jbe .L_423a30

            movss XMM4,DWORD PTR [RIP+.L_42df6c]
            ucomiss XMM4,XMM0
            movsd XMM1,QWORD PTR [RSP]
            jbe .L_423a30

            ucomisd XMM1,QWORD PTR [RIP+.L_42e178]
            jbe .L_423a30

            cvtss2sd XMM0,XMM0
            add EBX,1
            movsd QWORD PTR [RSP+32],XMM1
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call log@PLT

            movsd XMM2,QWORD PTR [RSP]
            cmp EBX,4096
            movsd XMM6,QWORD PTR [RIP+.L_42d9d8]
            divsd XMM2,XMM0
            addsd XMM6,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+16],XMM6
            movsd XMM5,QWORD PTR [RSP+8]
            movapd XMM0,XMM2
            addsd XMM5,XMM2
            mulsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM5
            addsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_423a3f

            nop
            nop
            nop
            nop
.L_423b00:

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            movapd XMM1,XMM6
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM1,XMM6
            mulsd XMM0,XMM5
            pxor XMM6,XMM6
            subsd XMM0,XMM1
            movapd XMM1,XMM5
            subsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            mulsd XMM1,XMM5
            divsd XMM0,XMM1
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_423b67
.L_423b44:

            ucomisd XMM1,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_42de90]
            ja .L_423b60

            movsd XMM0,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RSP+16]
.L_423b60:

            add RSP,56
.L_423b64:

            pop RBX
            pop RBP
            ret 
.L_423b67:

            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_423b44
.L_423b78:

            lea RCX,QWORD PTR [RIP+.L_4323c0]
            lea RSI,QWORD PTR [RIP+.L_4322f7]
            lea RDI,QWORD PTR [RIP+.L_432302]
            mov EDX,1258
            call __assert_fail@PLT
.L_423b97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423ba0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,RDX
            mov ECX,1
            mov RSI,R12
            sub RSP,80
.L_423bb6:

            mov RDI,QWORD PTR [RDX+8]
            mov RBX,RSP
            mov RDX,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_40edf0

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_423c50

            lea ECX,DWORD PTR [RAX-1]
            pxor XMM0,XMM0
            mov RDX,RBX
            lea RAX,QWORD PTR [RBX+RCX*4+4]
            nop
            nop
            nop
            nop
            nop
.L_423bf0:

            addss XMM0,DWORD PTR [RDX]
            add RDX,4
            cmp RDX,RAX
            jne .L_423bf0

            ucomiss XMM0,DWORD PTR [RBP+16]
            jbe .L_423c2c

            movss DWORD PTR [RBP+16],XMM0
            add RCX,1
            xor EAX,EAX
            nop
            nop
.L_423c10:

            movzx EDX,WORD PTR [R12+RAX*2]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EDX
            movss DWORD PTR [RBP+RAX*4+20],XMM0
            add RAX,1
            cmp RCX,RAX
            jne .L_423c10
.L_423c2c:

            mov RSI,QWORD PTR [RSP+72]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_423c63

            add RSP,80
.L_423c45:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423c50:

            pxor XMM0,XMM0
            ucomiss XMM0,DWORD PTR [RBP+16]
            jbe .L_423c2c

            mov DWORD PTR [RBP+16],0
            jmp .L_423c2c
.L_423c63:

            call __stack_chk_fail@PLT
.L_423c68:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423c70:

            push R15
            push R14
            mov ECX,1
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RSI
            mov RSI,RDI
            sub RSP,232
.L_423c8f:

            mov RDI,QWORD PTR [RBX]
            lea R12,QWORD PTR [RSP+16]
            lea R14,QWORD PTR [RSP+144]
            lea R13,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RAX
            xor EAX,EAX
            mov RDX,R12
            lea R15,QWORD PTR [RSP+176]
            call .L_40edf0

            mov RDI,QWORD PTR [RBX+8]
            mov RDX,R14
            mov ECX,1
            mov RSI,R12
            call .L_40edf0

            mov RDI,QWORD PTR [RBX+16]
            mov RSI,R14
            mov ECX,1
            mov RDX,R13
            lea R14,QWORD PTR [RSP+112]
            call .L_40edf0

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RBX+8]
            mov ECX,1
            movdqa XMM0,XMMWORD PTR [RSP+48]
            mov RDX,R15
            mov RSI,R13
            mov QWORD PTR [RSP+96],RAX
            movaps XMMWORD PTR [RSP+80],XMM0
            call .L_40edf0

            mov ECX,1
            mov RDX,R14
            mov RSI,R15
            mov RDI,QWORD PTR [RBX+16]
            call .L_40edf0

            mov RSI,R13
            mov RDI,R12
            call .L_40b5c0

            lea RDI,QWORD PTR [RSP+80]
            mov RSI,R14
            movsd QWORD PTR [RSP+8],XMM0
            call .L_40b5c0

            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+8]
            ucomisd XMM2,XMM1
            jbe .L_423d6c

            ucomisd XMM2,XMM0
            ja .L_423d88

            ucomisd XMM0,XMM2
            ja .L_423d88
.L_423d6c:

            ucomisd XMM1,XMM2
            ja .L_423dc0

            ucomisd XMM0,QWORD PTR [RIP+.L_42ec48]
            jp .L_423df8

            jne .L_423df8

            ucomisd XMM1,XMM2
            ja .L_423dd2

            nop
            nop
            nop
            nop
.L_423d88:

            xor EAX,EAX
            mov WORD PTR [RBP],AX
.L_423d8e:

            mov RCX,QWORD PTR [RSP+216]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_423e04

            add RSP,232
.L_423dad:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423dc0:

            ucomisd XMM2,XMM0
            ja .L_423dd2

            ucomisd XMM0,QWORD PTR [RIP+.L_42ec48]
            jp .L_423df8

            jne .L_423df8
.L_423dd2:

            subsd XMM1,XMM2
            addsd XMM1,QWORD PTR [RIP+.L_42d568]
            addsd XMM1,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM1
            sar EAX,16
            mov WORD PTR [RBP],AX
            jmp .L_423d8e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423df8:

            divsd XMM1,XMM0
            ucomisd XMM1,XMM2
            jbe .L_423d88

            jmp .L_423dd2
.L_423e04:

            call __stack_chk_fail@PLT
.L_423e09:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423e10:

            push R15
            push R14
            mov R15D,EDX
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,6200
.L_423e24:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+6184],RAX
            xor EAX,EAX
            cmp ESI,254
            mov RDX,QWORD PTR [RSP+6256]
            mov R11,QWORD PTR [RSP+6264]
            ja .L_423f80

            mov EBX,ESI
            xor ESI,ESI
            mov R14,RDI
            mov RBP,R8
            mov R12,R9
            mov QWORD PTR [RSP+24],R11
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+12],ECX
            call .L_412100

            test RAX,RAX
            mov R13,RAX
            je .L_423f80

            test EBX,EBX
            mov ECX,DWORD PTR [RSP+12]
            mov RDX,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            je .L_423f88

            lea EAX,DWORD PTR [RBX-1]
            lea RDI,QWORD PTR [RSP+2080]
            lea R10,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+4128]
            lea R8,QWORD PTR [RSP+1056]
            mov DWORD PTR [RSP+12],ECX
            lea RSI,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_423ec8:

            mov RCX,QWORD PTR [R12+RAX*2]
            movsd XMM0,QWORD PTR [R11+RAX*2]
            movsd QWORD PTR [R9+RAX*2],XMM0
            mov QWORD PTR [RDI+RAX*2],RCX
            mov ECX,DWORD PTR [RDX+RAX*1]
            mov DWORD PTR [R10+RAX*1],ECX
            mov ECX,DWORD PTR [RBP+RAX*1]
            mov DWORD PTR [R8+RAX*1],ECX
            add RAX,4
            cmp RSI,RAX
            jne .L_423ec8

            mov ECX,DWORD PTR [RSP+12]
.L_423ef8:

            mov RDX,QWORD PTR [RIP+.L_42d9d8]
            mov EAX,EBX
            lea ESI,DWORD PTR [RBX+1]
            mov QWORD PTR [RSP+RAX*8+2080],R13
            mov DWORD PTR [RSP+RAX*4+32],0
            mov DWORD PTR [RSP+RAX*4+1056],1
            mov QWORD PTR [RSP+RAX*8+4128],RDX
            sub RSP,8
.L_423f2b:

            mov RDX,RDI
            mov EAX,DWORD PTR [RSP+6280]
            mov RDI,R14
            push RAX
            push RCX
            mov RCX,R10
            push R15
            push 0
            push 0
            call .L_40f180

            add RSP,48
            mov RDI,R13
            mov RBX,RAX
            call .L_403ea0
.L_423f57:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+6184]
            xor RBX,QWORD PTR FS:[40]
            jne .L_423faa

            add RSP,6200
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_423f80:

            xor EBX,EBX
            jmp .L_423f57
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423f88:

            lea RDI,QWORD PTR [RSP+2080]
            lea R10,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+4128]
            lea R8,QWORD PTR [RSP+1056]
            jmp .L_423ef8
.L_423faa:

            call __stack_chk_fail@PLT
.L_423faf:

            nop
.L_423fb0:

            push R15
            push R14
            mov R15D,ESI
            push R13
            push R12
            mov ESI,EDX
            push RBP
            push RBX
            mov EDX,4587556
            mov R12,RDI
            sub RSP,112
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+96],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSP+176]
            push RAX
            push QWORD PTR [RSP+176]
            push R9
            mov R9,R8
            mov R8,RCX
            mov ECX,4849688
            call .L_423e10

            add RSP,32
.L_424000:

            test RAX,RAX
            je .L_424138

            mov EDX,4
            mov ESI,R15D
            mov RDI,R12
            mov RBP,RAX
            call .L_421110

            test RAX,RAX
            mov RBX,RAX
            je .L_424130

            test R15D,R15D
            je .L_4240e5

            pxor XMM5,XMM5
            lea EAX,DWORD PTR [R15-1]
            lea R14,QWORD PTR [RSP+32]
            xor R13D,R13D
            cvtsi2sd XMM5,RAX
            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+24],RAX
            movsd QWORD PTR [RSP+16],XMM5
            nop
.L_424060:

            pxor XMM0,XMM0
            mov EAX,R13D
            mov RSI,QWORD PTR [RSP+24]
            pxor XMM3,XMM3
            mov ECX,1
            mov RDX,R14
            mov RDI,RBP
            mov QWORD PTR [RSP+64],0
            cvtsi2sd XMM0,RAX
            mov DWORD PTR [RSP+72],0
            mulsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            divsd XMM0,QWORD PTR [RSP+16]
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RSP+76],XMM3
            call .L_40edf0

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            divsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            pxor XMM4,XMM4
            subsd XMM1,XMM0
            cvtsd2ss XMM4,XMM1
            movss DWORD PTR [RBX+R13*4],XMM4
            add R13,1
            cmp QWORD PTR [RSP+8],R13
            jne .L_424060
.L_4240e5:

            mov ESI,R15D
            mov RDX,RBX
            mov RDI,R12
            call .L_4226c0

            mov RDI,RBP
            mov R13,RAX
            call .L_40e980

            mov RSI,RBX
            mov RDI,R12
            call .L_421170
.L_424109:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_42413d

            add RSP,104
.L_424120:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424130:

            mov RDI,RBP
            call .L_40e980
.L_424138:

            xor R13D,R13D
            jmp .L_424109
.L_42413d:

            call __stack_chk_fail@PLT
.L_424142:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424150:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,R8
            sub RSP,40
.L_424169:

            mov RDI,QWORD PTR [R8]
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+16],R9
            call .L_403530

            cmp EAX,1129142603
            jne .L_424270

            sub EBP,1
            lea R15,QWORD PTR [RBP*8]
            mov DWORD PTR [RSP+28],EBP
            lea R12,QWORD PTR [RBX+R15*1]
            mov RDI,QWORD PTR [R12]
            call .L_403530

            cmp EAX,1129142603
            jne .L_424270

            mov RDI,QWORD PTR [R12]
            call .L_403550

            cmp EAX,1886549106
            jne .L_424270

            mov ESI,DWORD PTR [RSP+104]
            mov R8,RBX
            mov RDI,R13
            push RSI
.L_4241cc:

            push QWORD PTR [RSP+104]
            mov ESI,R14D
            mov R9,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+44]
            call .L_423fb0

            test RAX,RAX
            mov RBX,RAX
            pop RCX
            pop RSI
            je .L_424270

            mov EDX,DWORD PTR [RSP+104]
            mov RCX,QWORD PTR [RSP+8]
            shl RBP,2
            mov R8,R12
            mov ESI,R14D
            mov RDI,R13
            push RDX
            add R15,QWORD PTR [RSP+104]
            add RCX,RBP
            mov EDX,1
            push R15
            mov RAX,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RAX+RBP*1]
            call .L_423fb0

            mov R12,RAX
            test R12,R12
            pop RAX
            pop RDX
.L_424230:

            je .L_424288

            mov ECX,R14D
            mov RDX,R12
            mov RSI,RBX
            mov RDI,R13
            call .L_4238b0

            mov RDI,RBX
            mov RBP,RAX
            call .L_422930

            mov RDI,R12
            call .L_422930

            test RBP,RBP
            je .L_424270

            mov RDI,RBP
            call .L_4235e0

            test EAX,EAX
            jne .L_424272

            mov RDI,RBP
            call .L_422930

            nop
.L_424270:

            xor EBP,EBP
.L_424272:

            add RSP,40
.L_424276:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424288:

            mov RDI,RBX
            xor EBP,EBP
            call .L_422930

            jmp .L_424272
.L_424294:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4242a0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea EBX,DWORD PTR [R9-1]
            pxor XMM0,XMM0
            mov EBP,R9D
            sub RSP,6248
.L_4242bf:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+6232],RAX
            xor EAX,EAX
            cmp EBX,254
            mov R14,QWORD PTR [RSP+6304]
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            ja .L_424588

            mov R15,RSI
            xor ESI,ESI
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],RDX
            call .L_412100

            test RAX,RAX
            mov R12,RAX
            je .L_4245a0

            mov RDI,R14
            call .L_428ff0

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+24]
            jne .L_424560

            mov RAX,QWORD PTR [RIP+.L_42e158]
            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            mov QWORD PTR [RSP+72],RAX
.L_424348:

            lea RDI,QWORD PTR [RBX*4+4]
            lea R10,QWORD PTR [RSP+80]
            lea RBX,QWORD PTR [RSP+2128]
            lea R9,QWORD PTR [RSP+4176]
            lea R11,QWORD PTR [RSP+1104]
            xor EAX,EAX
            nop
.L_424370:

            mov RSI,QWORD PTR [R15+RAX*2]
            movsd XMM0,QWORD PTR [R8+RAX*2]
            movsd QWORD PTR [R9+RAX*2],XMM0
            mov QWORD PTR [RBX+RAX*2],RSI
            mov ESI,DWORD PTR [RDX+RAX*1]
            mov DWORD PTR [R10+RAX*1],ESI
            mov ESI,DWORD PTR [RCX+RAX*1]
            mov DWORD PTR [R11+RAX*1],ESI
            add RAX,4
            cmp RDI,RAX
            jne .L_424370

            mov EAX,EBP
            mov RDI,R14
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],R11
            movsd QWORD PTR [RSP+RAX*8+4176],XMM1
            mov QWORD PTR [RSP+RAX*8+2128],R12
            mov DWORD PTR [RSP+RAX*4+80],0
            mov DWORD PTR [RSP+RAX*4+1104],1
            call .L_403530

            mov R15D,EAX
            mov EDI,EAX
            call .L_40ccf0

            mov EDI,R15D
            mov ESI,1024
            mov DWORD PTR [RSP+8],EAX
            call .L_40cf60

            mov ECX,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+44],EAX
            sub RSP,8
.L_4243ff:

            push 64
            push 4849688
            lea ESI,DWORD PTR [RBP+1]
            mov RDX,RBX
            mov RDI,R13
            xor EBX,EBX
            lea R15D,DWORD PTR [RCX*8+2]
            push R15
            push 0
            push 0
            mov R11,QWORD PTR [RSP+64]
            mov R10,QWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+80]
            mov R8,R11
            mov RCX,R10
            call .L_40f180

            mov QWORD PTR [RSP+96],RAX
            add RSP,40
            mov R9D,1
            push 64
.L_42444a:

            mov R8D,R15D
            mov RCX,R14
            mov EDX,4849688
            mov RSI,R12
            mov RDI,R13
            call .L_40f990

            mov RCX,R12
            mov EDX,R15D
            mov RDI,R13
            mov R9D,1
            mov R8D,4849688
            mov RSI,R14
            mov QWORD PTR [RSP+72],RAX
            mov DWORD PTR [RSP],64
            call .L_40f990

            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+80],RAX
            pop RDX
.L_424494:

            pop RCX
.L_424495:

            test RDI,RDI
            je .L_424510

            cmp QWORD PTR [RSP+56],0
            je .L_424578

            test RAX,RAX
            je .L_424578

            mov EDX,1
            mov ESI,3
            mov RDI,R13
            call .L_42b7d0

            test RAX,RAX
            mov RBX,RAX
            je .L_424503

            mov EDX,DWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RSP+44]
            xor R8D,R8D
            mov ECX,1
            mov RDI,R13
            call .L_42b390

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBX
            mov RBP,RAX
            call .L_42bb10

            test EAX,EAX
            jne .L_4245a8

            mov RDI,RBX
            xor EBX,EBX
            call .L_42b910
.L_424503:

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            jne .L_42457a

            nop
            nop
            nop
.L_424510:

            mov RDI,QWORD PTR [RSP+56]
            test RDI,RDI
            je .L_42451f

            call .L_40e980
.L_42451f:

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_42452e

            call .L_40e980
.L_42452e:

            mov RDI,R12
            call .L_403ea0
.L_424536:

            mov RDX,QWORD PTR [RSP+6232]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4245c3

            add RSP,6248
.L_424553:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_424560:

            movsd XMM1,QWORD PTR [RIP+.L_42d9d8]
            movsd QWORD PTR [RSP+72],XMM1
            jmp .L_424348
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424578:

            xor EBX,EBX
.L_42457a:

            call .L_40e980

            jmp .L_424510
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424588:

            lea RDX,QWORD PTR [RIP+.L_432650]
            mov ECX,R9D
            mov ESI,2
            xor EBX,EBX
            call .L_421420

            jmp .L_424536
.L_4245a0:

            xor EBX,EBX
            jmp .L_424536
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4245a8:

            lea RDX,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RIP+.L_423c70]
            xor ECX,ECX
            mov RDI,RBP
            call .L_42a430

            jmp .L_424503
.L_4245c3:

            call __stack_chk_fail@PLT
.L_4245c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4245d0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_4245e0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            call .L_402dd0

            mov RDI,RBX
            mov RBP,RAX
            call .L_403550

            cmp EAX,1886549106
            je .L_424630
.L_424607:

            pxor XMM0,XMM0
.L_42460b:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4246fa

            add RSP,136
.L_424626:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424630:

            mov EDX,1
            mov ESI,4
            mov RDI,RBX
            call .L_40aa30

            mov R13D,EAX
            shr EAX,3
            xor ESI,ESI
            and EAX,15
            mov RDI,RBP
            mov DWORD PTR [RSP+48],0
            mov DWORD PTR [RSP+32],EAX
            call .L_412100

            test RAX,RAX
            mov R12,RAX
            je .L_424607

            sub RSP,8
            xor R9D,R9D
            mov EDX,655386
            push 320
            mov R8D,R13D
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,RBP
            call .L_40f990

            mov RDI,R12
            mov QWORD PTR [RSP+56],RAX
            call .L_403ea0

            pop RAX
            pop RDX
            cmp QWORD PTR [RSP+40],0
            je .L_424607

            lea RCX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_423ba0]
            movabs RAX,317827579910
            mov RSI,RSP
            mov EDI,3
            mov QWORD PTR [RSP],RAX
            mov DWORD PTR [RSP+8],74
            call .L_42a960

            test EAX,EAX
            jne .L_4246e1

            mov DWORD PTR [RSP+48],0
.L_4246e1:

            mov RDI,QWORD PTR [RSP+40]
            call .L_40e980

            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSP+48]
            jmp .L_42460b
.L_4246fa:

            call __stack_chk_fail@PLT
.L_4246ff:

            nop
.L_424700:

            push RBX
            pxor XMM4,XMM4
            mov RBX,RDI
            sub RSP,80
.L_42470c:

            movsd XMM5,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            ucomisd XMM4,XMM5
            ja .L_424840

            movsd XMM6,QWORD PTR [RIP+.L_42d9c8]
            ucomisd XMM5,XMM6
            jbe .L_42473c

            movsd QWORD PTR [RDI],XMM6
.L_42473c:

            movsd XMM5,QWORD PTR [RBX+8]
            ucomisd XMM1,XMM5
            jbe .L_424790
.L_424747:

            ucomisd XMM5,XMM4
            jp .L_4247b0

            jne .L_4247b0

            movsd XMM0,QWORD PTR [RBX+16]
            mov EAX,1
            cmpltsd XMM0,XMM4
            andpd XMM3,XMM0
            andnpd XMM0,XMM2
            orpd XMM3,XMM0
            movsd QWORD PTR [RBX+16],XMM3
.L_42476f:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42490c

            add RSP,80
.L_424787:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424790:

            ucomisd XMM5,XMM0
            ja .L_424747

            movsd XMM6,QWORD PTR [RBX+16]
            ucomisd XMM3,XMM6
            ja .L_424747

            ucomisd XMM6,XMM2
            ja .L_424747

            jmp .L_42482f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4247b0:

            lea RDI,QWORD PTR [RSP+48]
            mov RSI,RBX
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call .L_40b300

            movsd XMM5,QWORD PTR [RBX+16]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM6,XMM5
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM4
            divsd XMM6,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            jb .L_424860

            movsd XMM4,QWORD PTR [RIP+.L_432690]
            ucomisd XMM4,XMM5
            jbe .L_424860
.L_424821:

            movsd QWORD PTR [RBX+8],XMM0
            mulsd XMM0,XMM6
            movsd QWORD PTR [RBX+16],XMM0
.L_42482f:

            mov EAX,1
            jmp .L_42476f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424840:

            mov QWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI],0
            jmp .L_42476f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424860:

            movsd XMM4,QWORD PTR [RIP+.L_432698]
            ucomisd XMM5,XMM4
            jb .L_42487c

            movsd XMM7,QWORD PTR [RIP+.L_42e000]
            ucomisd XMM7,XMM5
            jae .L_424821
.L_42487c:

            ucomisd XMM5,QWORD PTR [RIP+.L_432690]
            movsd XMM0,QWORD PTR [RIP+.L_4326a0]
            jb .L_4248a8

            ucomisd XMM0,XMM5
            jbe .L_4248a8

            movsd QWORD PTR [RBX+16],XMM2
            divsd XMM2,XMM6
            movsd QWORD PTR [RBX+8],XMM2
            jmp .L_42482f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4248a8:

            ucomisd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4326a8]
            jb .L_4248d0

            ucomisd XMM0,XMM5
            jbe .L_4248d0

            movsd QWORD PTR [RBX+8],XMM1
            mulsd XMM1,XMM6
            movsd QWORD PTR [RBX+16],XMM1
            jmp .L_42482f
          .byte 0x90
.L_4248d0:

            ucomisd XMM5,XMM0
            jb .L_4248f0

            ucomisd XMM4,XMM5
            jbe .L_4248f0

            movsd QWORD PTR [RBX+16],XMM3
            divsd XMM3,XMM6
            movsd QWORD PTR [RBX+8],XMM3
            jmp .L_42482f
          .byte 0x90
.L_4248f0:

            lea RDX,QWORD PTR [RIP+.L_432682]
            xor EAX,EAX
            mov ESI,2
            xor EDI,EDI
            call .L_421420

            xor EAX,EAX
            jmp .L_42476f
.L_42490c:

            call __stack_chk_fail@PLT
.L_424911:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424920:

            movzx ECX,WORD PTR [RDI]
            mov R8,QWORD PTR [RDX+120]
            mov EAX,DWORD PTR [RDX+52]
            cmp CX,-1
            je .L_424980

            imul ECX,EAX
            lea EDX,DWORD PTR [RCX+32767]
            movsxd RAX,EDX
            imul RAX,RAX,-2147450879
            shr RAX,32
            add EAX,EDX
            sar EDX,31
            sar EAX,15
            sub EAX,EDX
            add EAX,ECX
            mov ECX,EAX
            movzx EAX,AX
            sar ECX,16
            movsxd RCX,ECX
            movzx EDX,WORD PTR [R8+RCX*2+2]
            movzx ECX,WORD PTR [R8+RCX*2]
            sub EDX,ECX
            imul EAX,EDX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [RSI],AX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424980:

            mov ECX,EAX
            movzx EAX,WORD PTR [R8+RCX*2]
            mov WORD PTR [RSI],AX
            ret 
.L_42498b:

            nop
            nop
            nop
            nop
            nop
.L_424990:

            movzx EDI,WORD PTR [RDI]
            mov R10D,DWORD PTR [RDX+84]
            mov R8,QWORD PTR [RDX+120]
            mov ECX,EDI
            imul EDI,DWORD PTR [RDX+52]
            lea EAX,DWORD PTR [RDI+32767]
            mov R9D,EDI
            movsxd RDI,EAX
            imul RDI,RDI,-2147450879
            shr RDI,32
            add EDI,EAX
            sar EAX,31
            sar EDI,15
            sub EDI,EAX
            xor EAX,EAX
            add EDI,R9D
            mov R9D,EDI
            movzx EDI,DI
            sar R9D,16
            mov R11D,R9D
            imul R11D,R10D
            cmp CX,-1
            setne AL
            add R9D,EAX
            mov EAX,DWORD PTR [RDX+16]
            imul R9D,R10D
            test EAX,EAX
            je .L_424a2e

            lea R10D,DWORD PTR [RAX-1]
            xor EDX,EDX
            add R10,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424a00:

            lea ECX,DWORD PTR [R11+RDX*1]
            lea EAX,DWORD PTR [R9+RDX*1]
            movzx ECX,WORD PTR [R8+RCX*2]
            movzx EAX,WORD PTR [R8+RAX*2]
            sub EAX,ECX
            imul EAX,EDI
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [RSI+RDX*2],AX
            add RDX,1
            cmp R10,RDX
            jne .L_424a00
.L_424a2e:

            ret 
.L_424a30:

            push R13
            push R12
            push RBP
            push RBX
.L_424a36:

            movzx EAX,WORD PTR [RDI]
            movzx EDI,WORD PTR [RDI+2]
            mov EBX,DWORD PTR [RDX+56]
            mov R12D,DWORD PTR [RDX+88]
            mov R11D,DWORD PTR [RDX+16]
            mov RCX,QWORD PTR [RDX+120]
            mov R10D,EAX
            imul EAX,DWORD PTR [RDX+52]
            imul EBX,EDI
            mov EDX,DWORD PTR [RDX+84]
            lea EBP,DWORD PTR [RBX+32767]
            lea R8D,DWORD PTR [RAX+32767]
            mov R9D,EAX
            movsxd RAX,R8D
            imul RAX,RAX,-2147450879
            shr RAX,32
            add EAX,R8D
            sar R8D,31
            sar EAX,15
            sub EAX,R8D
            add EAX,R9D
            mov R9D,EDI
            movsxd RDI,EBP
            imul RDI,RDI,-2147450879
            movzx R8D,AX
            sar EAX,16
            imul EAX,R12D
            shr RDI,32
            add EDI,EBP
            sar EBP,31
            add R12D,EAX
            sar EDI,15
            sub EDI,EBP
            add EDI,EBX
            mov EBX,EDI
            sar EBX,16
            cmp R10W,-1
            cmove R12D,EAX
            imul EBX,EDX
            add EDX,EBX
            cmp R9W,-1
            cmove EDX,EBX
            test R11D,R11D
            jle .L_424b7c

            mov R9D,EDX
            lea EDX,DWORD PTR [R11-1]
            mov R10D,EBX
            movzx EDI,DI
            lea RBP,QWORD PTR [RDX+RDX*1+2]
            lea EDX,DWORD PTR [RAX+RBX*1]
            movsxd RDX,EDX
            lea RBX,QWORD PTR [RCX+RDX*2]
            lea EDX,DWORD PTR [RAX+R9*1]
            lea EAX,DWORD PTR [R10+R12*1]
            add R12D,R9D
            cdqe 
            movsxd R12,R12D
            movsxd RDX,EDX
            lea R10,QWORD PTR [RCX+RAX*2]
            lea R9,QWORD PTR [RCX+R12*2]
            lea R11,QWORD PTR [RCX+RDX*2]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
.L_424b18:

            movzx R13D,WORD PTR [RBX+RDX*1]
            movzx ECX,WORD PTR [R10+RDX*1]
            movzx EAX,WORD PTR [R11+RDX*1]
            movzx R12D,WORD PTR [R9+RDX*1]
            sub ECX,R13D
            imul ECX,R8D
            add ECX,32768
            sar ECX,16
            add ECX,R13D
            movzx R13D,AX
            sub R12D,R13D
            imul R12D,R8D
            add R12D,32768
            sar R12D,16
            add EAX,R12D
            movzx R12D,CX
            movzx EAX,AX
            sub EAX,R12D
            imul EAX,EDI
            add EAX,32768
            sar EAX,16
            add EAX,ECX
            mov WORD PTR [RSI+RDX*1],AX
            add RDX,2
            cmp RDX,RBP
            jne .L_424b18
.L_424b7c:

            pop RBX
.L_424b7d:

            pop RBP
            pop R12
            pop R13
            ret 
.L_424b83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424b90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_424b9a:

            movzx R8D,WORD PTR [RDI]
            mov R9D,DWORD PTR [RDX+52]
            movzx R10D,WORD PTR [RDI+2]
            mov EBX,DWORD PTR [RDX+16]
            mov RCX,QWORD PTR [RDX+120]
            imul R9D,R8D
            mov R12D,R8D
            mov R14D,R10D
            lea EAX,DWORD PTR [R9+32767]
            movsxd R8,EAX
            imul R8,R8,-2147450879
            shr R8,32
            add R8D,EAX
            sar EAX,31
            sar R8D,15
            sub R8D,EAX
            mov EAX,DWORD PTR [RDX+56]
            add R8D,R9D
            movzx R11D,R8W
            sar R8D,16
            imul EAX,R10D
            lea R9D,DWORD PTR [RAX+32767]
            movsxd R10,R9D
            imul R10,R10,-2147450879
            shr R10,32
            add R10D,R9D
            sar R9D,31
            sar R10D,15
            sub R10D,R9D
            add R10D,EAX
            movzx EAX,WORD PTR [RDI+4]
            mov R9D,R10D
            sar R9D,16
            mov EBP,EAX
            imul EAX,DWORD PTR [RDX+60]
            lea R13D,DWORD PTR [RAX+32767]
            mov EDI,EAX
            movsxd RAX,R13D
            imul RAX,RAX,-2147450879
            shr RAX,32
            add EAX,R13D
            sar R13D,31
            sar EAX,15
            sub EAX,R13D
            mov R13D,DWORD PTR [RDX+92]
            add EAX,EDI
            mov EDI,EAX
            movzx EAX,AX
            imul R8D,R13D
            sar EDI,16
            mov DWORD PTR [RSP-28],EAX
            mov EAX,DWORD PTR [RDX+84]
            add R13D,R8D
            cmp R12W,-1
            mov R12D,DWORD PTR [RDX+88]
            cmove R13D,R8D
            imul R9D,R12D
            add R12D,R9D
            cmp R14W,-1
            cmove R12D,R9D
            imul EDI,EAX
            add EAX,EDI
            cmp BP,-1
            cmove EAX,EDI
            test EBX,EBX
            jle .L_424e06

            sub EBX,1
            lea EBP,DWORD PTR [R8+R9*1]
            add R8D,R12D
            lea RBX,QWORD PTR [RBX+RBX*1+2]
            lea EDX,DWORD PTR [R13+R12*1]
            add R9D,R13D
            movzx R10D,R10W
            mov QWORD PTR [RSP-24],RBX
            lea EBX,DWORD PTR [RDI+RBP*1]
            add EBP,EAX
            movsxd RBP,EBP
            movsxd RBX,EBX
            lea R13,QWORD PTR [RCX+RBP*2]
            lea R14,QWORD PTR [RCX+RBX*2]
            lea EBX,DWORD PTR [RDI+R8*1]
            add R8D,EAX
            movsxd R8,R8D
            lea RBP,QWORD PTR [RCX+R8*2]
            lea R8D,DWORD PTR [RDI+R9*1]
            add R9D,EAX
            add EDI,EDX
            add EAX,EDX
            movsxd R9,R9D
            movsxd RDI,EDI
            cdqe 
            movsxd RBX,EBX
            lea R15,QWORD PTR [RCX+R9*2]
            lea RDI,QWORD PTR [RCX+RDI*2]
            movsxd R8,R8D
            lea RAX,QWORD PTR [RCX+RAX*2]
            lea R12,QWORD PTR [RCX+RBX*2]
            lea RBX,QWORD PTR [RCX+R8*2]
            mov QWORD PTR [RSP-8],RDI
            xor R9D,R9D
            mov RDI,R15
            mov QWORD PTR [RSP-16],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_424d18:

            movzx R8D,WORD PTR [R14+R9*1]
            movzx EDX,WORD PTR [RBX+R9*1]
            movzx R15D,WORD PTR [R13+R9*1]
            movzx ECX,WORD PTR [R12+R9*1]
            sub EDX,R8D
            mov EAX,R8D
            mov R8D,EDX
            movzx EDX,WORD PTR [RDI+R9*1]
            imul R8D,R11D
            add R8D,32768
            sar R8D,16
            add R8D,EAX
            movzx EAX,R15W
            sub EDX,EAX
            mov EAX,EDX
            mov RDX,QWORD PTR [RSP-8]
            imul EAX,R11D
            movzx EDX,WORD PTR [RDX+R9*1]
            add EAX,32768
            sar EAX,16
            add EAX,R15D
            movzx R15D,CX
            sub EDX,R15D
            imul EDX,R11D
            add EDX,32768
            sar EDX,16
            add ECX,EDX
            movzx EDX,R8W
            movzx ECX,CX
            sub ECX,EDX
            imul ECX,R10D
            add ECX,32768
            sar ECX,16
            add R8D,ECX
            mov RCX,QWORD PTR [RSP-16]
            movzx EDX,WORD PTR [RCX+R9*1]
            movzx ECX,WORD PTR [RBP+R9*1]
            sub EDX,ECX
            movzx ECX,AX
            imul EDX,R11D
            add EDX,32768
            sar EDX,16
            add DX,WORD PTR [RBP+R9*1]
            movzx EDX,DX
            sub EDX,ECX
            imul EDX,R10D
            add EDX,32768
            sar EDX,16
            add EAX,EDX
            movzx EDX,R8W
            movzx EAX,AX
            sub EAX,EDX
            imul EAX,DWORD PTR [RSP-28]
            add EAX,32768
            sar EAX,16
            add R8D,EAX
            mov WORD PTR [RSI+R9*1],R8W
            add R9,2
            cmp R9,QWORD PTR [RSP-24]
            jne .L_424d18
.L_424e06:

            pop RBX
.L_424e07:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_424e11:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424e20:

            push R15
            push R14
            xor R14D,R14D
            push R13
            push R12
            push RBP
            push RBX
.L_424e2d:

            movzx R8D,WORD PTR [RDI]
            mov ECX,DWORD PTR [RDX+52]
            movsxd R12,DWORD PTR [RDX+92]
            mov R11D,DWORD PTR [RDX+16]
            imul ECX,R8D
            mov EBP,R8D
            lea EAX,DWORD PTR [RCX+32767]
            movsxd R8,EAX
            imul R8,R8,-2147450879
            shr R8,32
            add R8D,EAX
            sar EAX,31
            sar R8D,15
            sub R8D,EAX
            add R8D,ECX
            movzx ECX,WORD PTR [RDI+2]
            movzx EDI,WORD PTR [RDI+4]
            mov R10D,ECX
            imul ECX,DWORD PTR [RDX+56]
            lea EAX,DWORD PTR [RCX+32767]
            mov R9D,ECX
            movsxd RCX,EAX
            imul RCX,RCX,-2147450879
            shr RCX,32
            add ECX,EAX
            sar EAX,31
            sar ECX,15
            sub ECX,EAX
            mov EAX,DWORD PTR [RDX+60]
            add ECX,R9D
            mov R9D,EDI
            mov R13D,ECX
            movzx ECX,CX
            imul EAX,EDI
            sar R13D,16
            lea EBX,DWORD PTR [RAX+32767]
            movsxd RDI,EBX
            imul RDI,RDI,-2147450879
            shr RDI,32
            add EDI,EBX
            sar EBX,31
            sar EDI,15
            sub EDI,EBX
            movzx EBX,R8W
            sar R8D,16
            add EDI,EAX
            mov EAX,EDI
            movzx EDI,DI
            imul R8D,R12D
            sar EAX,16
            cmp BP,-1
            movsxd RBP,DWORD PTR [RDX+88]
            cmove R12,R14
            imul R13D,EBP
            cmp R10W,-1
            movsxd R10,DWORD PTR [RDX+84]
            cmove RBP,R14
            imul EAX,R10D
            cmp R9W,-1
            cmove R10,R14
            add R8D,R13D
            add EAX,R8D
            mov R8,QWORD PTR [RDX+120]
            cmp EBX,ECX
            cdqe 
            lea RAX,QWORD PTR [R8+RAX*2]
            jl .L_424fd0

            cmp ECX,EDI
            jl .L_425120

            add EBP,R12D
            add R10D,EBP
            test R11D,R11D
            je .L_424fc2

            lea R9D,DWORD PTR [R11-1]
            movsxd R8,R12D
            movsxd RDX,EBP
            movsxd R10,R10D
            lea RBP,QWORD PTR [RAX+R8*2]
            lea R11,QWORD PTR [RAX+RDX*2]
            lea R10,QWORD PTR [RAX+R10*2]
            lea R12,QWORD PTR [R9+R9*1+2]
            mov QWORD PTR [RSP-8],RAX
            xor R9D,R9D
.L_424f60:

            mov RAX,QWORD PTR [RSP-8]
            movzx EDX,WORD PTR [RBP+R9*1]
            movzx R14D,WORD PTR [R11+R9*1]
            movzx R8D,WORD PTR [R10+R9*1]
            movzx R15D,WORD PTR [RAX+R9*1]
            mov EAX,EDX
            sub R8D,R14D
            imul R8D,EDI
            sub EAX,R15D
            mov R13D,R15D
            mov R15D,EAX
            mov EAX,R14D
            sub EAX,EDX
            mov EDX,EAX
            imul R15D,EBX
            imul EDX,ECX
            add EDX,R15D
            lea R8D,DWORD PTR [RDX+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add EDX,R13D
            mov WORD PTR [RSI+R9*1],DX
            add R9,2
            cmp R12,R9
            jne .L_424f60
.L_424fc2:

            pop RBX
.L_424fc3:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424fd0:

            cmp EBX,EDI
            jl .L_425078

            add R12D,EBP
            add R10D,R12D
            test R11D,R11D
            je .L_424fc2

            lea R8D,DWORD PTR [R11-1]
            movsxd RDX,R10D
            movsxd R12,R12D
            lea R14,QWORD PTR [RAX+RBP*2]
            lea R13,QWORD PTR [RAX+RDX*2]
            xor R10D,R10D
            lea R15,QWORD PTR [R8+R8*1+2]
            mov QWORD PTR [RSP-8],R15
            lea R15,QWORD PTR [RAX+R12*2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425010:

            movzx EBP,WORD PTR [R15+R10*1]
            movzx EDX,WORD PTR [R14+R10*1]
            movzx R12D,WORD PTR [RAX+R10*1]
            movzx R8D,WORD PTR [R13+R10*1]
            mov R11D,EBP
            sub R11D,EDX
            sub EDX,R12D
            sub R8D,EBP
            imul EDX,ECX
            mov R9D,R12D
            imul R11D,EBX
            imul R8D,EDI
            add R11D,EDX
            lea R8D,DWORD PTR [R11+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add R9D,EDX
            mov WORD PTR [RSI+R10*1],R9W
            add R10,2
            cmp QWORD PTR [RSP-8],R10
            jne .L_425010

            pop RBX
.L_42506a:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425078:

            lea EDX,DWORD PTR [RBP+R10*1]
            add R12D,EDX
            cmp ECX,EDI
            jl .L_425258

            test R11D,R11D
            je .L_424fc2

            lea R8D,DWORD PTR [R11-1]
            movsxd R12,R12D
            movsxd RDX,EDX
            lea R12,QWORD PTR [RAX+R12*2]
            lea R11,QWORD PTR [RAX+RBP*2]
            lea R10,QWORD PTR [RAX+RDX*2]
            lea R13,QWORD PTR [R8+R8*1+2]
            xor R9D,R9D
            mov QWORD PTR [RSP-8],RAX
            nop
            nop
            nop
            nop
.L_4250b8:

            movzx R8D,WORD PTR [R10+R9*1]
            movzx EDX,WORD PTR [R12+R9*1]
            mov RAX,QWORD PTR [RSP-8]
            movzx R15D,WORD PTR [R11+R9*1]
            movzx EBP,WORD PTR [RAX+R9*1]
            sub EDX,R8D
            imul EDX,EBX
            mov EAX,R15D
            sub R8D,R15D
            imul R8D,EDI
            mov R14D,EDX
            movzx EDX,BP
            sub EAX,EDX
            mov EDX,EAX
            imul EDX,ECX
            add EDX,R14D
            lea R8D,DWORD PTR [RDX+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add EBP,EDX
            mov WORD PTR [RSI+R9*1],BP
            add R9,2
            cmp R13,R9
            jne .L_4250b8

            pop RBX
.L_425116:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_425120:

            lea EDX,DWORD PTR [R12+R10*1]
            add EBP,EDX
            cmp EBX,EDI
            jg .L_4251c0

            test R11D,R11D
            je .L_424fc2

            lea R8D,DWORD PTR [R11-1]
            movsxd RDX,EDX
            movsxd RBP,EBP
            lea R12,QWORD PTR [RAX+RDX*2]
            lea R11,QWORD PTR [RAX+RBP*2]
            lea R10,QWORD PTR [RAX+R10*2]
            lea R13,QWORD PTR [R8+R8*1+2]
            xor R9D,R9D
            nop
            nop
            nop
.L_425158:

            movzx R15D,WORD PTR [R12+R9*1]
            movzx R8D,WORD PTR [R10+R9*1]
            movzx EDX,WORD PTR [R11+R9*1]
            movzx EBP,WORD PTR [RAX+R9*1]
            mov R14D,R15D
            sub R14D,R8D
            sub EDX,R15D
            imul R14D,EBX
            imul EDX,ECX
            add EDX,R14D
            movzx R14D,BP
            sub R8D,R14D
            imul R8D,EDI
            lea R8D,DWORD PTR [RDX+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add EDX,EBP
            mov WORD PTR [RSI+R9*1],DX
            add R9,2
            cmp R13,R9
            jne .L_425158

            pop RBX
.L_4251af:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4251c0:

            test R11D,R11D
            je .L_424fc2

            lea R8D,DWORD PTR [R11-1]
            movsxd RBP,EBP
            movsxd RDX,EDX
            lea R12,QWORD PTR [RAX+R12*2]
            lea R11,QWORD PTR [RAX+RBP*2]
            lea R10,QWORD PTR [RAX+RDX*2]
            lea R13,QWORD PTR [R8+R8*1+2]
            xor R9D,R9D
            mov QWORD PTR [RSP-8],RAX
            nop
            nop
            nop
            nop
.L_4251f0:

            mov RAX,QWORD PTR [RSP-8]
            movzx R14D,WORD PTR [R12+R9*1]
            movzx EDX,WORD PTR [R10+R9*1]
            movzx EBP,WORD PTR [R11+R9*1]
            movzx R15D,WORD PTR [RAX+R9*1]
            mov EAX,R14D
            sub EBP,EDX
            sub EDX,R14D
            imul EBP,ECX
            sub EAX,R15D
            mov R8D,R15D
            mov R15D,EAX
            imul R15D,EBX
            imul EDX,EDI
            add EBP,R15D
            lea EBP,DWORD PTR [RBP+RDX*1+32769]
            mov EDX,EBP
            sar EDX,16
            add EDX,EBP
            sar EDX,16
            add EDX,R8D
            mov WORD PTR [RSI+R9*1],DX
            add R9,2
            cmp R13,R9
            jne .L_4251f0

            pop RBX
.L_42524a:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425258:

            test R11D,R11D
            je .L_424fc2

            lea R8D,DWORD PTR [R11-1]
            movsxd R12,R12D
            movsxd RDX,EDX
            lea RBP,QWORD PTR [RAX+R12*2]
            lea R11,QWORD PTR [RAX+RDX*2]
            lea R10,QWORD PTR [RAX+R10*2]
            lea R13,QWORD PTR [R8+R8*1+2]
            xor R9D,R9D
            nop
.L_425280:

            movzx EDX,WORD PTR [R11+R9*1]
            movzx R8D,WORD PTR [R10+R9*1]
            movzx R14D,WORD PTR [RBP+R9*1]
            movzx R12D,WORD PTR [RAX+R9*1]
            sub R14D,EDX
            sub EDX,R8D
            imul R14D,EBX
            imul EDX,ECX
            add EDX,R14D
            movzx R14D,R12W
            sub R8D,R14D
            imul R8D,EDI
            lea R8D,DWORD PTR [RDX+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add R12D,EDX
            mov WORD PTR [RSI+R9*1],R12W
            add R9,2
            cmp R13,R9
            jne .L_425280

            pop RBX
.L_4252d6:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4252e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,632
.L_4252f1:

            movzx R9D,WORD PTR [RDI+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+616],RAX
            xor EAX,EAX
            movzx EAX,WORD PTR [RDI]
            mov QWORD PTR [RSP+56],RSI
            mov R10D,R9D
            mov R12D,EAX
            imul EAX,DWORD PTR [RDX+52]
            lea ECX,DWORD PTR [RAX+32767]
            mov ESI,EAX
            movsxd RAX,ECX
            imul RAX,RAX,-2147450879
            shr RAX,32
            add EAX,ECX
            sar ECX,31
            sar EAX,15
            sub EAX,ECX
            add EAX,ESI
            movzx ESI,WORD PTR [RDI+2]
            movzx R15D,AX
            mov DWORD PTR [RSP+36],R15D
            mov EBP,ESI
            imul ESI,DWORD PTR [RDX+56]
            lea ECX,DWORD PTR [RSI+32767]
            mov R8D,ESI
            movsxd RSI,ECX
            imul RSI,RSI,-2147450879
            shr RSI,32
            add ESI,ECX
            sar ECX,31
            sar ESI,15
            sub ESI,ECX
            mov ECX,DWORD PTR [RDX+60]
            add ESI,R8D
            imul ECX,R9D
            lea R8D,DWORD PTR [RCX+32767]
            movsxd R9,R8D
            imul R9,R9,-2147450879
            shr R9,32
            add R9D,R8D
            sar R8D,31
            sar R9D,15
            sub R9D,R8D
            add R9D,ECX
            movzx ECX,WORD PTR [RDI+6]
            mov EDI,DWORD PTR [RDX+64]
            mov EBX,R9D
            movzx R13D,R9W
            mov R9D,DWORD PTR [RDX+96]
            mov DWORD PTR [RSP+48],R13D
            imul EDI,ECX
            mov R8D,ECX
            lea R11D,DWORD PTR [RDI+32767]
            movsxd RCX,R11D
            imul RCX,RCX,-2147450879
            shr RCX,32
            add ECX,R11D
            sar R11D,31
            sar ECX,15
            sub ECX,R11D
            sar EAX,16
            sar EBX,16
            imul EAX,R9D
            add ECX,EDI
            mov EDI,ESI
            mov R11D,ECX
            sar EDI,16
            sar R11D,16
            add R9D,EAX
            cmp R12W,-1
            cmove R9D,EAX
            cdqe 
            mov DWORD PTR [RSP+64],R9D
            mov R9D,DWORD PTR [RDX+92]
            imul EDI,R9D
            add R9D,EDI
            cmp BP,-1
            mov R14D,EDI
            cmove R9D,EDI
            mov EDI,DWORD PTR [RDX+88]
            imul EBX,EDI
            add EDI,EBX
            cmp R10W,-1
            mov DWORD PTR [RSP+12],EBX
            cmove EDI,EBX
            mov R15D,EDI
            mov DWORD PTR [RSP+16],EDI
            mov EDI,DWORD PTR [RDX+84]
            imul R11D,EDI
            add EDI,R11D
            cmp R8W,-1
            cmove EDI,R11D
            mov EBP,EDI
            mov DWORD PTR [RSP+28],EDI
            mov RDI,QWORD PTR [RDX+120]
            lea R8,QWORD PTR [RDI+RAX*2]
            mov EAX,DWORD PTR [RDX+16]
            mov QWORD PTR [RSP+40],RDI
            test EAX,EAX
            mov DWORD PTR [RSP+52],EAX
            je .L_42570f

            movzx ESI,SI
            movzx ECX,CX
            lea R12D,DWORD PTR [R14+RBX*1]
            cmp ESI,R13D
            lea R10,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP+80],R14D
            setge BYTE PTR [RSP+33]
            cmp R13D,ECX
            movzx EDX,BYTE PTR [RSP+33]
            setge BYTE PTR [RSP+34]
            movzx EBX,BYTE PTR [RSP+34]
            lea EDI,DWORD PTR [R11+R12*1]
            mov DWORD PTR [RSP+68],R12D
            mov QWORD PTR [RSP+72],R10
            add EAX,EDI
            sub R12D,EDI
            mov DWORD PTR [RSP+20],EAX
            mov DWORD PTR [RSP+84],R12D
            mov EAX,EDI
            and EDX,EBX
            mov EBX,R15D
            mov BYTE PTR [RSP+32],DL
            mov EDX,R14D
            sub EDX,EDI
            add EDX,R15D
            mov R15D,R9D
            add EDX,EBP
            sub R15D,EDI
            mov DWORD PTR [RSP+92],EDX
            lea EDX,DWORD PTR [R14+R11*1]
            add R15D,EBX
            add R15D,EBP
            mov R14D,R13D
            sub EDX,EDI
            mov DWORD PTR [RSP+24],R15D
            add EDX,EBX
            mov DWORD PTR [RSP+88],EDX
            jmp .L_42559a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425500:

            mov R15D,DWORD PTR [RSP+12]
            lea EBP,DWORD PTR [R15+R11*1]
            mov R15D,DWORD PTR [RSP+24]
            sub EBP,EDI
            add EBP,R9D
            lea R12D,DWORD PTR [R15+RAX*1]
            add EBP,EAX
            movzx R13D,WORD PTR [R8+RBP*2]
            mov EBP,R11D
            movzx R12D,WORD PTR [R8+R12*2]
            sub EBP,EDI
            add EBP,R9D
            add EBP,DWORD PTR [RSP+16]
            mov R15D,R13D
            sub R15D,EBX
            add EBP,EAX
            mov EBX,R15D
            movzx EBP,WORD PTR [R8+RBP*2]
            imul EBX,ESI
            sub R12D,EBP
            sub EBP,R13D
            imul EBP,R14D
            imul R12D,ECX
            add EBX,EBP
            add R12D,EBX
.L_425555:

            lea EBX,DWORD PTR [R12+32767]
            movsxd R13,EBX
            imul R13,R13,-2147450879
            shr R13,32
            add R13D,EBX
            sar EBX,31
            sar R13D,15
            sub R13D,EBX
            lea EBX,DWORD PTR [R12+R13*1+32768]
            sar EBX,16
            add EDX,EBX
.L_425585:

            mov WORD PTR [R10],DX
            add EAX,1
            add R10,2
            cmp DWORD PTR [RSP+20],EAX
            je .L_425740
.L_42559a:

            mov EDX,EAX
            cmp BYTE PTR [RSP+32],0
            movzx EBX,WORD PTR [R8+RDX*2]
            mov EDX,EBX
            jne .L_425500

            cmp ESI,ECX
            setge BPL
            cmp R14D,ECX
            setle R12B
            test BPL,BPL
            je .L_425620

            test R12B,R12B
            je .L_425620

            mov R15D,DWORD PTR [RSP+12]
            lea EBP,DWORD PTR [R15+R11*1]
            sub R15D,EDI
            sub EBP,EDI
            add EBP,R9D
            add EBP,EAX
            movzx R13D,WORD PTR [R8+RBP*2]
            mov EBP,R15D
            mov R15D,DWORD PTR [RSP+24]
            add EBP,R9D
            add EBP,DWORD PTR [RSP+28]
            add EBP,EAX
            movzx R12D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            mov R15D,R13D
            sub R15D,EBX
            movzx EBP,WORD PTR [R8+RBP*2]
            mov EBX,R15D
            imul EBX,ESI
            sub EBP,R12D
            sub R12D,R13D
            imul EBP,R14D
            imul R12D,ECX
            add EBP,EBX
            add R12D,EBP
            jmp .L_425555
.L_425620:

            cmp ESI,ECX
            setle R13B
            jg .L_425990

            cmp BYTE PTR [RSP+33],0
            je .L_425990

            mov EBP,DWORD PTR [RSP+12]
            mov R15D,DWORD PTR [RSP+28]
            sub EBP,EDI
            add EBP,R9D
            add EBP,R15D
            add EBP,EAX
            movzx R13D,WORD PTR [R8+RBP*2]
            mov EBP,DWORD PTR [RSP+84]
            add EBP,R15D
            mov R15D,DWORD PTR [RSP+24]
            add EBP,EAX
            movzx R12D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            movzx EBP,WORD PTR [R8+RBP*2]
            sub EBP,R13D
            sub R13D,R12D
            sub R12D,EBX
            imul R13D,ESI
            imul EBP,R14D
            imul R12D,ECX
            add EBP,R13D
            lea R13D,DWORD PTR [RBP+R12*1]
.L_425688:

            lea EBP,DWORD PTR [R13+32767]
            movsxd RBX,EBP
            imul RBX,RBX,-2147450879
            shr RBX,32
            add EBX,EBP
            sar EBP,31
            sar EBX,15
            sub EBX,EBP
            lea EBX,DWORD PTR [R13+RBX*1+32768]
            sar EBX,16
            add EDX,EBX
            jmp .L_425585
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4256c0:

            mov EAX,DWORD PTR [RSP+52]
            mov R15,QWORD PTR [RSP+40]
            xor ECX,ECX
            mov EDI,DWORD PTR [RSP+36]
            mov R8,QWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+72]
            sub EAX,1
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4256e8:

            movzx EDX,WORD PTR [R9+RCX*1]
            movzx EAX,WORD PTR [R15+RCX*1]
            sub EAX,EDX
            imul EAX,EDI
            add EAX,32768
            shr EAX,16
            add EAX,EDX
            mov WORD PTR [R8+RCX*1],AX
            add RCX,2
            cmp RSI,RCX
            jne .L_4256e8
.L_42570f:

            mov RAX,QWORD PTR [RSP+616]
            xor RAX,QWORD PTR FS:[40]
            jne .L_425cc2

            add RSP,632
.L_42572d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425740:

            mov R14D,DWORD PTR [RSP+80]
            mov EBP,DWORD PTR [RSP+16]
            lea R15,QWORD PTR [RSP+352]
            mov R13D,DWORD PTR [RSP+28]
            movsxd RDX,DWORD PTR [RSP+64]
            mov RBX,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+20],EAX
            mov R8D,R14D
            mov QWORD PTR [RSP+40],R15
            sub R8D,EDI
            add R8D,EBP
            lea R10,QWORD PTR [RBX+RDX*2]
            mov RBX,R15
            add R8D,R13D
            mov EDX,EDI
            mov R15D,DWORD PTR [RSP+48]
            mov DWORD PTR [RSP+80],R8D
            mov R8D,DWORD PTR [RSP+68]
            sub R8D,EDI
            mov DWORD PTR [RSP+64],R8D
            mov R8D,R9D
            sub R8D,EDI
            add R8D,EBP
            add R8D,R13D
            mov DWORD PTR [RSP+24],R8D
            lea R8D,DWORD PTR [R14+R11*1]
            sub R8D,EDI
            add R8D,EBP
            mov DWORD PTR [RSP+68],R8D
            jmp .L_42585c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4257c0:

            mov EAX,DWORD PTR [RSP+12]
            lea R12D,DWORD PTR [RAX+R11*1]
            mov EAX,DWORD PTR [RSP+24]
            sub R12D,EDI
            add R12D,R9D
            lea R13D,DWORD PTR [RAX+RDX*1]
            add R12D,EDX
            movzx R14D,WORD PTR [R10+R12*2]
            mov R12D,R11D
            movzx R13D,WORD PTR [R10+R13*2]
            sub R12D,EDI
            add R12D,R9D
            add R12D,DWORD PTR [RSP+16]
            mov EAX,R14D
            sub EAX,EBP
            add R12D,EDX
            mov EBP,EAX
            movzx R12D,WORD PTR [R10+R12*2]
            imul EBP,ESI
            sub R13D,R12D
            sub R12D,R14D
            imul R12D,R15D
            imul R13D,ECX
            add EBP,R12D
            add R13D,EBP
.L_425817:

            lea EBP,DWORD PTR [R13+32767]
            movsxd R14,EBP
            imul R14,R14,-2147450879
            shr R14,32
            add R14D,EBP
            sar EBP,31
            sar R14D,15
            sub R14D,EBP
            lea EBP,DWORD PTR [R13+R14*1+32768]
            sar EBP,16
            add R8D,EBP
.L_425847:

            mov WORD PTR [RBX],R8W
            add EDX,1
            add RBX,2
            cmp EDX,DWORD PTR [RSP+20]
            je .L_4256c0
.L_42585c:

            mov R8D,EDX
            cmp BYTE PTR [RSP+32],0
            movzx EBP,WORD PTR [R10+R8*2]
            mov R8D,EBP
            jne .L_4257c0

            cmp ESI,ECX
            setge R12B
            cmp R15D,ECX
            setle R13B
            test R12B,R12B
            je .L_4258e8

            test R13B,R13B
            je .L_4258e8

            mov EAX,DWORD PTR [RSP+12]
            lea R12D,DWORD PTR [RAX+R11*1]
            sub EAX,EDI
            sub R12D,EDI
            add R12D,R9D
            add R12D,EDX
            movzx R14D,WORD PTR [R10+R12*2]
            mov R12D,EAX
            mov EAX,DWORD PTR [RSP+24]
            add R12D,R9D
            add R12D,DWORD PTR [RSP+28]
            add R12D,EDX
            movzx R13D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            mov EAX,R14D
            sub EAX,EBP
            movzx R12D,WORD PTR [R10+R12*2]
            mov EBP,EAX
            imul EBP,ESI
            sub R12D,R13D
            sub R13D,R14D
            imul R12D,R15D
            imul R13D,ECX
            add R12D,EBP
            add R13D,R12D
            jmp .L_425817
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4258e8:

            cmp ESI,ECX
            setle R14B
            jg .L_425a00

            cmp BYTE PTR [RSP+33],0
            je .L_425a00

            mov R12D,DWORD PTR [RSP+12]
            mov EAX,DWORD PTR [RSP+28]
            sub R12D,EDI
            add R12D,R9D
            add R12D,EAX
            add R12D,EDX
            movzx R14D,WORD PTR [R10+R12*2]
            mov R12D,DWORD PTR [RSP+64]
            add R12D,EAX
            mov EAX,DWORD PTR [RSP+24]
            add R12D,EDX
            movzx R13D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            movzx R12D,WORD PTR [R10+R12*2]
            sub R12D,R14D
            sub R14D,R13D
            sub R13D,EBP
            imul R14D,ESI
            imul R12D,R15D
            imul R13D,ECX
            add R12D,R14D
            lea R14D,DWORD PTR [R12+R13*1]
.L_425952:

            lea R12D,DWORD PTR [R14+32767]
            movsxd RBP,R12D
            imul RBP,RBP,-2147450879
            shr RBP,32
            add EBP,R12D
            sar R12D,31
            sar EBP,15
            sub EBP,R12D
            lea EBP,DWORD PTR [R14+RBP*1+32768]
            sar EBP,16
            add R8D,EBP
            jmp .L_425847
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425990:

            cmp ESI,R14D
            setle BYTE PTR [RSP+35]
            test BPL,BPL
            movzx R15D,BYTE PTR [RSP+35]
            je .L_425b08

            test R15B,R15B
            je .L_425b08

            mov R15D,DWORD PTR [RSP+88]
            mov EBP,R11D
            sub EBP,EDI
            add EBP,R9D
            add EBP,DWORD PTR [RSP+16]
            lea R12D,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP+24]
            movzx R12D,WORD PTR [R8+R12*2]
            lea R13D,DWORD PTR [R15+RAX*1]
            add EBP,EAX
            movzx EBP,WORD PTR [R8+RBP*2]
            movzx R13D,WORD PTR [R8+R13*2]
            sub R13D,EBP
            sub EBP,R12D
            sub R12D,EBX
            imul EBP,ESI
            imul R12D,R14D
            imul R13D,ECX
            add EBP,R12D
            add R13D,EBP
            jmp .L_425688
          .byte 0x66
          .byte 0x90
.L_425a00:

            cmp ESI,R15D
            setle BYTE PTR [RSP+35]
            test R12B,R12B
            movzx EAX,BYTE PTR [RSP+35]
            je .L_425a70

            test AL,AL
            je .L_425a70

            mov EAX,DWORD PTR [RSP+68]
            mov R12D,R11D
            sub R12D,EDI
            add R12D,R9D
            add R12D,DWORD PTR [RSP+16]
            lea R13D,DWORD PTR [RAX+RDX*1]
            mov EAX,DWORD PTR [RSP+24]
            movzx R13D,WORD PTR [R10+R13*2]
            lea R14D,DWORD PTR [RAX+RDX*1]
            add R12D,EDX
            movzx R12D,WORD PTR [R10+R12*2]
            movzx R14D,WORD PTR [R10+R14*2]
            sub R14D,R12D
            sub R12D,R13D
            sub R13D,EBP
            imul R12D,ESI
            imul R13D,R15D
            imul R14D,ECX
            add R12D,R13D
            add R14D,R12D
            jmp .L_425952
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425a70:

            test R14B,R14B
            je .L_425c30

            cmp BYTE PTR [RSP+34],0
            je .L_425c30

            mov EAX,DWORD PTR [RSP+80]
            lea R12D,DWORD PTR [RAX+RDX*1]
            mov EAX,DWORD PTR [RSP+68]
            movzx R13D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            mov EAX,DWORD PTR [RSP+24]
            movzx R14D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            movzx R12D,WORD PTR [R10+R12*2]
            mov EAX,R14D
            sub EAX,EBP
            mov EBP,EAX
            sub R12D,R13D
            sub R13D,R14D
            imul EBP,R15D
            imul R12D,ESI
            imul R13D,ECX
            add R12D,EBP
            lea EBP,DWORD PTR [R12+R13*1]
            lea R12D,DWORD PTR [RBP+32767]
            movsxd R13,R12D
            imul R13,R13,-2147450879
            shr R13,32
            add R13D,R12D
            sar R12D,31
            sar R13D,15
            sub R13D,R12D
            lea EBP,DWORD PTR [RBP+R13*1+32768]
            sar EBP,16
            add R8D,EBP
            jmp .L_425847
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425b08:

            test R13B,R13B
            je .L_425ba0

            cmp BYTE PTR [RSP+34],0
            je .L_425ba0

            mov R15D,DWORD PTR [RSP+92]
            lea EBP,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP+88]
            movzx R12D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP+24]
            movzx R13D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            movzx EBP,WORD PTR [R8+RBP*2]
            mov R15D,R13D
            sub R15D,EBX
            mov EBX,R15D
            sub EBP,R12D
            sub R12D,R13D
            imul EBX,R14D
            imul EBP,ESI
            imul R12D,ECX
            add EBP,EBX
            lea EBX,DWORD PTR [RBP+R12*1]
            lea EBP,DWORD PTR [RBX+32767]
            movsxd R12,EBP
            imul R12,R12,-2147450879
            shr R12,32
            add R12D,EBP
            sar EBP,31
            sar R12D,15
            sub R12D,EBP
            lea EBX,DWORD PTR [RBX+R12*1+32768]
            sar EBX,16
            add EDX,EBX
            jmp .L_425585
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425ba0:

            test R12B,R12B
            je .L_425585

            cmp BYTE PTR [RSP+35],0
            je .L_425585

            mov R15D,DWORD PTR [RSP+92]
            lea EBP,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP+24]
            movzx R13D,WORD PTR [R8+RBP*2]
            mov EBP,DWORD PTR [RSP+84]
            add EBP,DWORD PTR [RSP+28]
            add EBP,EAX
            movzx R12D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            movzx EBP,WORD PTR [R8+RBP*2]
            sub EBP,R13D
            sub R13D,R12D
            sub R12D,EBX
            imul EBP,ESI
            imul R13D,R14D
            imul R12D,ECX
            add R13D,EBP
            lea EBP,DWORD PTR [R13+R12*1]
            lea R12D,DWORD PTR [RBP+32767]
            movsxd RBX,R12D
            imul RBX,RBX,-2147450879
            shr RBX,32
            add EBX,R12D
            sar R12D,31
            sar EBX,15
            sub EBX,R12D
            lea EBX,DWORD PTR [RBP+RBX*1+32768]
            sar EBX,16
            add EDX,EBX
            jmp .L_425585
          .byte 0x66
          .byte 0x90
.L_425c30:

            test R13B,R13B
            je .L_425847

            cmp BYTE PTR [RSP+35],0
            je .L_425847

            mov EAX,DWORD PTR [RSP+80]
            lea R12D,DWORD PTR [RAX+RDX*1]
            mov EAX,DWORD PTR [RSP+24]
            movzx R14D,WORD PTR [R10+R12*2]
            mov R12D,DWORD PTR [RSP+64]
            add R12D,DWORD PTR [RSP+28]
            add R12D,EDX
            movzx R13D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            movzx R12D,WORD PTR [R10+R12*2]
            sub R12D,R14D
            sub R14D,R13D
            sub R13D,EBP
            imul R12D,ESI
            imul R14D,R15D
            imul R13D,ECX
            add R14D,R12D
            lea R12D,DWORD PTR [R14+R13*1]
            lea R13D,DWORD PTR [R12+32767]
            movsxd RBP,R13D
            imul RBP,RBP,-2147450879
            shr RBP,32
            add EBP,R13D
            sar R13D,31
            sar EBP,15
            sub EBP,R13D
            lea EBP,DWORD PTR [R12+RBP*1+32768]
            sar EBP,16
            add R8D,EBP
            jmp .L_425847
.L_425cc2:

            call __stack_chk_fail@PLT
.L_425cc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425cd0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            lea RCX,QWORD PTR [RDI+2]
            push RBP
            push RBX
            mov R13,RSI
            sub RSP,712
.L_425ceb:

            movzx EBX,WORD PTR [RDI]
            mov RBP,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            movdqu XMM0,XMMWORD PTR [R14]
            lea R8,QWORD PTR [RSP+32]
            mov R9D,DWORD PTR [R14+100]
            lea R12,QWORD PTR [RSP+176]
            mov RDI,RCX
            mov R15D,EBX
            imul EBX,DWORD PTR [RDX+52]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov RSI,R12
            movdqu XMM0,XMMWORD PTR [R14+16]
            lea EAX,DWORD PTR [RBX+32767]
            mov EDX,EBX
            movaps XMMWORD PTR [RSP+48],XMM0
            movsxd RBX,EAX
            imul RBX,RBX,-2147450879
            movdqu XMM0,XMMWORD PTR [R14+32]
            shr RBX,32
            add EBX,EAX
            sar EAX,31
            sar EBX,15
            movaps XMMWORD PTR [RSP+64],XMM0
            sub EBX,EAX
            add EBX,EDX
            mov EAX,EBX
            movdqu XMM0,XMMWORD PTR [R14+48]
            sar EAX,16
            mov RDX,QWORD PTR [R14+128]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [R14+64]
            mov QWORD PTR [RSP+160],RDX
            mov EDX,EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            imul EDX,R9D
            movdqu XMM0,XMMWORD PTR [R14+80]
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBP+RDX*2]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [R14+96]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R14+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [R14+56]
            movups XMMWORD PTR [RSP+84],XMM0
            mov DWORD PTR [RSP+28],EAX
            mov QWORD PTR [RSP+152],RDX
            mov RDX,R8
            mov DWORD PTR [RSP+24],R9D
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            call .L_4252e0

            mov EAX,DWORD PTR [RSP+28]
            xor EDX,EDX
            mov R9D,DWORD PTR [RSP+24]
            cmp R15W,-1
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            setne DL
            add EAX,EDX
            imul EAX,R9D
            mov RDX,R8
            mov RDI,RCX
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*2]
            lea RBP,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov QWORD PTR [RSP+152],RAX
            call .L_4252e0

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_425e80

            sub EAX,1
            movzx EBX,BX
            xor EDX,EDX
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
            nop
.L_425e58:

            movzx ECX,WORD PTR [R12+RDX*1]
            movzx EAX,WORD PTR [RBP+RDX*1]
            sub EAX,ECX
            imul EAX,EBX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [R13+RDX*1],AX
            add RDX,2
            cmp RSI,RDX
            jne .L_425e58
.L_425e80:

            mov RAX,QWORD PTR [RSP+696]
            xor RAX,QWORD PTR FS:[40]
            jne .L_425ea5

            add RSP,712
.L_425e9a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_425ea5:

            call __stack_chk_fail@PLT
.L_425eaa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_425eb0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            lea R8,QWORD PTR [RDI+2]
            push RBP
            push RBX
            mov R13,RSI
            sub RSP,712
.L_425ecb:

            movzx EBX,WORD PTR [RDI]
            mov RBP,QWORD PTR [RDX+120]
            movdqu XMM0,XMMWORD PTR [R14]
            lea RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+32],XMM0
            mov R15D,EBX
            mov R9D,DWORD PTR [R14+104]
            lea R12,QWORD PTR [RSP+176]
            mov RDI,R8
            mov RSI,R12
            imul EBX,DWORD PTR [RDX+52]
            movdqu XMM0,XMMWORD PTR [R14+16]
            movaps XMMWORD PTR [RSP+48],XMM0
            lea EAX,DWORD PTR [RBX+32767]
            mov EDX,EBX
            movdqu XMM0,XMMWORD PTR [R14+32]
            movsxd RBX,EAX
            movaps XMMWORD PTR [RSP+64],XMM0
            imul RBX,RBX,-2147450879
            movdqu XMM0,XMMWORD PTR [R14+48]
            shr RBX,32
            movaps XMMWORD PTR [RSP+80],XMM0
            add EBX,EAX
            sar EAX,31
            sar EBX,15
            sub EBX,EAX
            movdqu XMM0,XMMWORD PTR [R14+64]
            add EBX,EDX
            mov RDX,QWORD PTR [R14+128]
            mov EAX,EBX
            movaps XMMWORD PTR [RSP+96],XMM0
            sar EAX,16
            movdqu XMM0,XMMWORD PTR [R14+80]
            mov QWORD PTR [RSP+160],RDX
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [R14+96]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R14+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [R14+56]
            movups XMMWORD PTR [RSP+84],XMM0
            mov EDX,DWORD PTR [R14+72]
            mov DWORD PTR [RSP+28],EAX
            mov DWORD PTR [RSP+100],EDX
            mov EDX,EAX
            mov DWORD PTR [RSP+24],R9D
            imul EDX,R9D
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],R8
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBP+RDX*2]
            mov QWORD PTR [RSP+152],RDX
            mov RDX,RCX
            call .L_425cd0

            mov EAX,DWORD PTR [RSP+28]
            xor EDX,EDX
            mov R9D,DWORD PTR [RSP+24]
            cmp R15W,-1
            mov RCX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            setne DL
            add EAX,EDX
            imul EAX,R9D
            mov RDX,RCX
            mov RDI,R8
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*2]
            lea RBP,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov QWORD PTR [RSP+152],RAX
            call .L_425cd0

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_426068

            sub EAX,1
            movzx EBX,BX
            xor EDX,EDX
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
            nop
.L_426040:

            movzx ECX,WORD PTR [R12+RDX*1]
            movzx EAX,WORD PTR [RBP+RDX*1]
            sub EAX,ECX
            imul EAX,EBX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [R13+RDX*1],AX
            add RDX,2
            cmp RSI,RDX
            jne .L_426040
.L_426068:

            mov RAX,QWORD PTR [RSP+696]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42608d

            add RSP,712
.L_426082:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42608d:

            call __stack_chk_fail@PLT
.L_426092:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4260a0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            lea R8,QWORD PTR [RDI+2]
            push RBP
            push RBX
            mov R13,RSI
            sub RSP,712
.L_4260bb:

            movzx EBX,WORD PTR [RDI]
            mov RBP,QWORD PTR [RDX+120]
            movdqu XMM0,XMMWORD PTR [R14]
            lea RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+32],XMM0
            mov R15D,EBX
            mov R9D,DWORD PTR [R14+108]
            lea R12,QWORD PTR [RSP+176]
            mov RDI,R8
            mov RSI,R12
            imul EBX,DWORD PTR [RDX+52]
            movdqu XMM0,XMMWORD PTR [R14+16]
            movaps XMMWORD PTR [RSP+48],XMM0
            lea EAX,DWORD PTR [RBX+32767]
            mov EDX,EBX
            movdqu XMM0,XMMWORD PTR [R14+32]
            movsxd RBX,EAX
            movaps XMMWORD PTR [RSP+64],XMM0
            imul RBX,RBX,-2147450879
            movdqu XMM0,XMMWORD PTR [R14+48]
            shr RBX,32
            movaps XMMWORD PTR [RSP+80],XMM0
            add EBX,EAX
            sar EAX,31
            sar EBX,15
            sub EBX,EAX
            movdqu XMM0,XMMWORD PTR [R14+64]
            add EBX,EDX
            mov RDX,QWORD PTR [R14+128]
            mov EAX,EBX
            movaps XMMWORD PTR [RSP+96],XMM0
            sar EAX,16
            movdqu XMM0,XMMWORD PTR [R14+80]
            mov QWORD PTR [RSP+160],RDX
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [R14+96]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R14+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [R14+56]
            movups XMMWORD PTR [RSP+84],XMM0
            mov RDX,QWORD PTR [R14+72]
            mov DWORD PTR [RSP+28],EAX
            mov QWORD PTR [RSP+100],RDX
            mov EDX,EAX
            mov DWORD PTR [RSP+24],R9D
            imul EDX,R9D
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],R8
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBP+RDX*2]
            mov QWORD PTR [RSP+152],RDX
            mov RDX,RCX
            call .L_425eb0

            mov EAX,DWORD PTR [RSP+28]
            xor EDX,EDX
            mov R9D,DWORD PTR [RSP+24]
            cmp R15W,-1
            mov RCX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            setne DL
            add EAX,EDX
            imul EAX,R9D
            mov RDX,RCX
            mov RDI,R8
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*2]
            lea RBP,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov QWORD PTR [RSP+152],RAX
            call .L_425eb0

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_426258

            sub EAX,1
            movzx EBX,BX
            xor EDX,EDX
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
.L_426230:

            movzx ECX,WORD PTR [R12+RDX*1]
            movzx EAX,WORD PTR [RBP+RDX*1]
            sub EAX,ECX
            imul EAX,EBX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [R13+RDX*1],AX
            add RDX,2
            cmp RSI,RDX
            jne .L_426230
.L_426258:

            mov RAX,QWORD PTR [RSP+696]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42627d

            add RSP,712
.L_426272:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42627d:

            call __stack_chk_fail@PLT
.L_426282:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426290:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            sub RSP,712
.L_4262a7:

            movzx EBX,WORD PTR [RDI]
            mov RBP,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            movdqu XMM0,XMMWORD PTR [R14]
            lea RCX,QWORD PTR [RSP+32]
            mov R9D,DWORD PTR [R14+112]
            mov R8,QWORD PTR [R14+72]
            lea R12,QWORD PTR [RSP+176]
            mov R15D,EBX
            imul EBX,DWORD PTR [RDX+52]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+100],R8
            lea R8,QWORD PTR [RDI+2]
            mov RDI,R8
            movdqu XMM0,XMMWORD PTR [R14+16]
            lea EAX,DWORD PTR [RBX+32767]
            mov EDX,EBX
            movaps XMMWORD PTR [RSP+48],XMM0
            movsxd RBX,EAX
            imul RBX,RBX,-2147450879
            movdqu XMM0,XMMWORD PTR [R14+32]
            shr RBX,32
            add EBX,EAX
            sar EAX,31
            movaps XMMWORD PTR [RSP+64],XMM0
            sar EBX,15
            sub EBX,EAX
            add EBX,EDX
            movdqu XMM0,XMMWORD PTR [R14+48]
            mov EAX,EBX
            mov RDX,QWORD PTR [R14+128]
            sar EAX,16
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [R14+80]
            mov QWORD PTR [RSP+160],RDX
            mov EDX,EAX
            movaps XMMWORD PTR [RSP+112],XMM0
            imul EDX,R9D
            movdqu XMM0,XMMWORD PTR [R14+96]
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBP+RDX*2]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R14+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [R14+56]
            movups XMMWORD PTR [RSP+84],XMM0
            mov ESI,DWORD PTR [R14+80]
            mov QWORD PTR [RSP+152],RDX
            mov RDX,RCX
            mov DWORD PTR [RSP+108],ESI
            mov RSI,R12
            mov DWORD PTR [RSP+28],EAX
            mov DWORD PTR [RSP+24],R9D
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],R8
            call .L_4260a0

            mov EAX,DWORD PTR [RSP+28]
            xor EDX,EDX
            mov R9D,DWORD PTR [RSP+24]
            cmp R15W,-1
            mov RCX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            setne DL
            add EAX,EDX
            imul EAX,R9D
            mov RDX,RCX
            mov RDI,R8
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*2]
            lea RBP,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov QWORD PTR [RSP+152],RAX
            call .L_4260a0

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_426448

            sub EAX,1
            movzx EBX,BX
            xor EDX,EDX
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426420:

            movzx ECX,WORD PTR [R12+RDX*1]
            movzx EAX,WORD PTR [RBP+RDX*1]
            sub EAX,ECX
            imul EAX,EBX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [R13+RDX*1],AX
            add RDX,2
            cmp RSI,RDX
            jne .L_426420
.L_426448:

            mov RAX,QWORD PTR [RSP+696]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42646d

            add RSP,712
.L_426462:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42646d:

            call __stack_chk_fail@PLT
.L_426472:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426480:

            pxor XMM1,XMM1
            mov RCX,QWORD PTR [RDX+120]
            movss XMM0,DWORD PTR [RDI]
            ucomiss XMM1,XMM0
            ja .L_426588

            ucomiss XMM0,XMM0
            jp .L_426588

            ucomiss XMM0,DWORD PTR [RIP+.L_42df6c]
            jbe .L_4264b8
.L_4264a7:

            mov EAX,DWORD PTR [RDX+52]
            movss XMM0,DWORD PTR [RCX+RAX*4]
            movss DWORD PTR [RSI],XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4264b8:

            jp .L_4264bc

            je .L_4264a7
.L_4264bc:

            mov EAX,DWORD PTR [RDX+52]
            pxor XMM1,XMM1
            movss XMM2,DWORD PTR [RIP+.L_42de70]
            movss XMM5,DWORD PTR [RIP+.L_432790]
            movaps XMM4,XMM2
            cvtsi2ss XMM1,RAX
            mulss XMM0,XMM1
            movaps XMM3,XMM0
            movaps XMM1,XMM0
            andps XMM3,XMM2
            ucomiss XMM5,XMM3
            jbe .L_426519

            cvttss2si EAX,XMM0
            pxor XMM3,XMM3
            movss XMM6,DWORD PTR [RIP+.L_42df6c]
            andnps XMM4,XMM0
            cvtsi2ss XMM3,EAX
            movaps XMM1,XMM3
            cmpnless XMM1,XMM0
            andps XMM1,XMM6
            subss XMM3,XMM1
            movaps XMM1,XMM3
            orps XMM1,XMM4
.L_426519:

            movaps XMM3,XMM0
            cvttss2si EDX,XMM1
            movaps XMM1,XMM0
            andps XMM3,XMM2
            ucomiss XMM5,XMM3
            jbe .L_426551

            cvttss2si EAX,XMM0
            pxor XMM3,XMM3
            movss XMM4,DWORD PTR [RIP+.L_42df6c]
            andnps XMM2,XMM0
            cvtsi2ss XMM3,EAX
            cmpnless XMM1,XMM3
            andps XMM1,XMM4
            addss XMM1,XMM3
            orps XMM1,XMM2
.L_426551:

            movsxd RAX,EDX
            movss XMM3,DWORD PTR [RCX+RAX*4]
            cvttss2si EAX,XMM1
            pxor XMM1,XMM1
            cvtsi2ss XMM1,EDX
            cdqe 
            movss XMM2,DWORD PTR [RCX+RAX*4]
            subss XMM2,XMM3
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM3
            movss DWORD PTR [RSI],XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426588:

            pxor XMM0,XMM0
            jmp .L_4264bc
.L_426591:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4265a0:

            pxor XMM0,XMM0
            mov R8,QWORD PTR [RDX+120]
            movss XMM1,DWORD PTR [RDI]
            ucomiss XMM0,XMM1
            ja .L_4266d0

            ucomiss XMM1,XMM1
            jp .L_4266d0

            ucomiss XMM1,DWORD PTR [RIP+.L_42df6c]
            jbe .L_4265d8
.L_4265c7:

            mov EAX,DWORD PTR [RDX+52]
            movss XMM0,DWORD PTR [R8+RAX*4]
            movss DWORD PTR [RSI],XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4265d8:

            jp .L_4265dc

            je .L_4265c7
.L_4265dc:

            mov EAX,DWORD PTR [RDX+52]
            pxor XMM0,XMM0
            movss XMM3,DWORD PTR [RIP+.L_42de70]
            movss XMM5,DWORD PTR [RIP+.L_432790]
            movaps XMM4,XMM3
            cvtsi2ss XMM0,RAX
            mulss XMM0,XMM1
            movaps XMM2,XMM0
            movaps XMM1,XMM0
            andps XMM2,XMM3
            ucomiss XMM5,XMM2
            jbe .L_426639

            cvttss2si EAX,XMM0
            pxor XMM2,XMM2
            movss XMM6,DWORD PTR [RIP+.L_42df6c]
            andnps XMM4,XMM0
            cvtsi2ss XMM2,EAX
            movaps XMM1,XMM2
            cmpnless XMM1,XMM0
            andps XMM1,XMM6
            subss XMM2,XMM1
            movaps XMM1,XMM2
            orps XMM1,XMM4
.L_426639:

            cvttss2si EDI,XMM1
            movaps XMM1,XMM0
            movaps XMM2,XMM0
            andps XMM1,XMM3
            ucomiss XMM5,XMM1
            jbe .L_426671

            cvttss2si EAX,XMM0
            pxor XMM1,XMM1
            movss XMM4,DWORD PTR [RIP+.L_42df6c]
            andnps XMM3,XMM0
            cvtsi2ss XMM1,EAX
            cmpnless XMM2,XMM1
            andps XMM2,XMM4
            addss XMM2,XMM1
            orps XMM2,XMM3
.L_426671:

            pxor XMM1,XMM1
            cvttss2si ECX,XMM2
            mov EAX,DWORD PTR [RDX+84]
            cvtsi2ss XMM1,EDI
            imul EDI,EAX
            imul ECX,EAX
            mov EAX,DWORD PTR [RDX+16]
            test EAX,EAX
            subss XMM0,XMM1
            movaps XMM1,XMM0
            je .L_4266cc

            lea R9D,DWORD PTR [RAX-1]
            xor EAX,EAX
            add R9,1
            nop
            nop
.L_4266a0:

            lea EDX,DWORD PTR [RDI+RAX*1]
            movss XMM2,DWORD PTR [R8+RDX*4]
            lea EDX,DWORD PTR [RCX+RAX*1]
            movss XMM0,DWORD PTR [R8+RDX*4]
            subss XMM0,XMM2
            mulss XMM0,XMM1
            addss XMM0,XMM2
            movss DWORD PTR [RSI+RAX*4],XMM0
            add RAX,1
            cmp R9,RAX
            jne .L_4266a0
.L_4266cc:

            ret 
          .byte 0x66
          .byte 0x90
.L_4266d0:

            pxor XMM1,XMM1
            jmp .L_4265dc
.L_4266d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4266e0:

            push RBX
.L_4266e1:

            pxor XMM4,XMM4
            mov R8,RDX
            mov R9,QWORD PTR [RDX+120]
            mov R10D,DWORD PTR [RDX+16]
            movss XMM5,DWORD PTR [RDI]
            ucomiss XMM4,XMM5
            ja .L_426850

            ucomiss XMM5,XMM5
            jp .L_426850

            movss XMM6,DWORD PTR [RIP+.L_42df6c]
            movaps XMM0,XMM6
            minss XMM0,XMM5
.L_426715:

            mov EAX,DWORD PTR [R8+52]
            pxor XMM2,XMM2
            movss XMM3,DWORD PTR [RDI+4]
            cvtsi2ss XMM2,RAX
            mulss XMM2,XMM0
            pxor XMM0,XMM0
            ucomiss XMM0,XMM3
            ja .L_426740

            ucomiss XMM3,XMM3
            jp .L_426740

            movaps XMM0,XMM6
            minss XMM0,XMM3
.L_426740:

            mov EAX,DWORD PTR [R8+56]
            pxor XMM4,XMM4
            pxor XMM1,XMM1
            mov EDI,DWORD PTR [R8+88]
            movsd XMM7,QWORD PTR [RIP+.L_42df40]
            cvtsi2ss XMM4,RAX
            cvtss2sd XMM1,XMM2
            addsd XMM1,XMM7
            movq RDX,XMM1
            sar EDX,16
            mov ECX,EDX
            imul ECX,EDI
            mulss XMM4,XMM0
            pxor XMM0,XMM0
            add EDI,ECX
            cvtsi2ss XMM0,EDX
            mov EDX,DWORD PTR [R8+84]
            subss XMM2,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM4
            addsd XMM0,XMM7
            movq RAX,XMM0
            pxor XMM0,XMM0
            sar EAX,16
            cvtsi2ss XMM0,EAX
            ucomiss XMM5,XMM6
            cmovae EDI,ECX
            imul EAX,EDX
            add EDX,EAX
            ucomiss XMM3,XMM6
            mov EBX,EDX
            subss XMM4,XMM0
            cmovae EBX,EAX
            test R10D,R10D
            jle .L_426848

            lea EDX,DWORD PTR [R10-1]
            lea R11,QWORD PTR [RDX*4+4]
            lea EDX,DWORD PTR [RCX+RAX*1]
            add EAX,EDI
            add EDI,EBX
            cdqe 
            movsxd RDX,EDX
            movsxd RDI,EDI
            lea R10,QWORD PTR [R9+RDX*4]
            lea EDX,DWORD PTR [RCX+RBX*1]
            lea RCX,QWORD PTR [R9+RAX*4]
            xor EAX,EAX
            movsxd RDX,EDX
            lea R8,QWORD PTR [R9+RDX*4]
            lea RDX,QWORD PTR [R9+RDI*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426800:

            movss XMM0,DWORD PTR [R10+RAX*1]
            movss XMM1,DWORD PTR [RCX+RAX*1]
            subss XMM1,XMM0
            movss XMM3,DWORD PTR [R8+RAX*1]
            mulss XMM1,XMM2
            addss XMM1,XMM0
            movss XMM0,DWORD PTR [RDX+RAX*1]
            subss XMM0,XMM3
            mulss XMM0,XMM2
            addss XMM0,XMM3
            subss XMM0,XMM1
            mulss XMM0,XMM4
            addss XMM0,XMM1
            movss DWORD PTR [RSI+RAX*1],XMM0
            add RAX,4
            cmp RAX,R11
            jne .L_426800
.L_426848:

            pop RBX
.L_426849:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426850:

            pxor XMM0,XMM0
            movss XMM6,DWORD PTR [RIP+.L_42df6c]
            jmp .L_426715
.L_426861:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426870:

            push R13
            pxor XMM4,XMM4
            push R12
            push RBP
            push RBX
.L_42687a:

            mov R8,QWORD PTR [RDX+120]
            mov R9D,DWORD PTR [RDX+16]
            movss XMM6,DWORD PTR [RDI]
            ucomiss XMM4,XMM6
            ja .L_426ac8

            ucomiss XMM6,XMM6
            jp .L_426ac8

            movss XMM1,DWORD PTR [RIP+.L_42df6c]
            movaps XMM0,XMM1
            minss XMM0,XMM6
.L_4268a7:

            mov EAX,DWORD PTR [RDX+52]
            pxor XMM2,XMM2
            movss XMM7,DWORD PTR [RDI+4]
            ucomiss XMM4,XMM7
            cvtsi2ss XMM2,RAX
            mulss XMM2,XMM0
            pxor XMM0,XMM0
            ja .L_4268d5

            ucomiss XMM7,XMM7
            jp .L_426ad9

            movaps XMM0,XMM1
            minss XMM0,XMM7
.L_4268d5:

            mov EAX,DWORD PTR [RDX+56]
            pxor XMM3,XMM3
            movss XMM5,DWORD PTR [RDI+8]
            ucomiss XMM4,XMM5
            cvtsi2ss XMM3,RAX
            mulss XMM3,XMM0
            ja .L_4268fb

            ucomiss XMM5,XMM5
            jp .L_4268fb

            movaps XMM4,XMM1
            minss XMM4,XMM5
.L_4268fb:

            mov EAX,DWORD PTR [RDX+60]
            pxor XMM0,XMM0
            movsd XMM8,QWORD PTR [RIP+.L_42df40]
            mov R13D,DWORD PTR [RDX+92]
            mov R10D,DWORD PTR [RDX+88]
            cvtsi2ss XMM0,RAX
            mulss XMM4,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,XMM8
            movq RDI,XMM0
            pxor XMM0,XMM0
            sar EDI,16
            cvtsi2ss XMM0,EDI
            imul EDI,R13D
            add R13D,EDI
            subss XMM2,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM3
            addsd XMM0,XMM8
            movd ECX,XMM0
            pxor XMM0,XMM0
            sar ECX,16
            cvtsi2ss XMM0,ECX
            mov EAX,ECX
            mov ECX,DWORD PTR [RDX+84]
            subss XMM3,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM4
            addsd XMM0,XMM8
            movq R12,XMM0
            pxor XMM0,XMM0
            sar R12D,16
            ucomiss XMM6,XMM1
            cvtsi2ss XMM0,R12D
            cmovae R13D,EDI
            imul EAX,R10D
            add R10D,EAX
            ucomiss XMM7,XMM1
            cmovae R10D,EAX
            imul R12D,ECX
            subss XMM4,XMM0
            add ECX,R12D
            ucomiss XMM5,XMM1
            cmovae ECX,R12D
            test R9D,R9D
            jle .L_426abc

            lea R11D,DWORD PTR [RDI+RAX*1]
            lea EDX,DWORD PTR [RAX+R13*1]
            lea EAX,DWORD PTR [R9-1]
            add EDI,R10D
            add R13D,R10D
            lea RBP,QWORD PTR [RAX*4+4]
            lea EAX,DWORD PTR [R12+R11*1]
            cdqe 
            lea RBX,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [RCX+R11*1]
            cdqe 
            lea R11,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [R12+RDI*1]
            add EDI,ECX
            movsxd RDI,EDI
            cdqe 
            lea R9,QWORD PTR [R8+RDI*4]
            lea R10,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [R12+RDX*1]
            cdqe 
            lea RDI,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [RCX+RDX*1]
            cdqe 
            lea RDX,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [R12+R13*1]
            cdqe 
            lea R12,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [RCX+R13*1]
            cdqe 
            lea RCX,QWORD PTR [R8+RAX*4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_426a28:

            movss XMM1,DWORD PTR [RBX+RAX*1]
            movss XMM5,DWORD PTR [R11+RAX*1]
            movss XMM6,DWORD PTR [RDI+RAX*1]
            movss XMM0,DWORD PTR [RDX+RAX*1]
            subss XMM6,XMM1
            subss XMM0,XMM5
            movss XMM8,DWORD PTR [R10+RAX*1]
            movss XMM7,DWORD PTR [R9+RAX*1]
            mulss XMM6,XMM2
            mulss XMM0,XMM2
            addss XMM6,XMM1
            movss XMM1,DWORD PTR [R12+RAX*1]
            addss XMM5,XMM0
            movss XMM0,DWORD PTR [RCX+RAX*1]
            subss XMM1,XMM8
            subss XMM0,XMM7
            mulss XMM1,XMM2
            mulss XMM0,XMM2
            addss XMM1,XMM8
            addss XMM0,XMM7
            subss XMM1,XMM6
            subss XMM0,XMM5
            mulss XMM1,XMM3
            mulss XMM0,XMM3
            addss XMM1,XMM6
            addss XMM0,XMM5
            subss XMM0,XMM1
            mulss XMM0,XMM4
            addss XMM0,XMM1
            movss DWORD PTR [RSI+RAX*1],XMM0
            add RAX,4
            cmp RAX,RBP
            jne .L_426a28
.L_426abc:

            pop RBX
.L_426abd:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426ac8:

            pxor XMM0,XMM0
            movss XMM1,DWORD PTR [RIP+.L_42df6c]
            jmp .L_4268a7
.L_426ad9:

            pxor XMM0,XMM0
            jmp .L_4268d5
.L_426ae2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426af0:

            push R15
            pxor XMM7,XMM7
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_426afe:

            mov RCX,QWORD PTR [RDX+120]
            mov EBX,DWORD PTR [RDX+16]
            movss XMM8,DWORD PTR [RDI]
            ucomiss XMM7,XMM8
            ja .L_426ed8

            ucomiss XMM8,XMM8
            jp .L_426ed8

            movss XMM1,DWORD PTR [RIP+.L_42df6c]
            movaps XMM0,XMM1
            minss XMM0,XMM8
.L_426b2e:

            mov EAX,DWORD PTR [RDX+52]
            pxor XMM4,XMM4
            movss XMM3,DWORD PTR [RDI+4]
            ucomiss XMM7,XMM3
            cvtsi2ss XMM4,RAX
            mulss XMM4,XMM0
            pxor XMM0,XMM0
            ja .L_426b5c

            ucomiss XMM3,XMM3
            jp .L_426ef2

            movaps XMM0,XMM1
            minss XMM0,XMM3
.L_426b5c:

            mov EAX,DWORD PTR [RDX+56]
            pxor XMM5,XMM5
            movss XMM2,DWORD PTR [RDI+8]
            ucomiss XMM7,XMM2
            cvtsi2ss XMM5,RAX
            mulss XMM5,XMM0
            pxor XMM0,XMM0
            ja .L_426b8a

            ucomiss XMM2,XMM2
            jp .L_426ee9

            movaps XMM0,XMM1
            minss XMM0,XMM2
.L_426b8a:

            mov EAX,DWORD PTR [RDX+60]
            pxor XMM6,XMM6
            movsd XMM9,QWORD PTR [RIP+.L_42df40]
            mov R9D,DWORD PTR [RDX+92]
            mov R13D,DWORD PTR [RDX+88]
            mov R11D,DWORD PTR [RDX+84]
            cvtsi2ss XMM6,RAX
            mulss XMM6,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM4
            addsd XMM0,XMM9
            movq R12,XMM0
            pxor XMM0,XMM0
            sar R12D,16
            cvtsi2ss XMM0,R12D
            imul R12D,R9D
            add R9D,R12D
            subss XMM4,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM5
            addsd XMM0,XMM9
            movq RDI,XMM0
            pxor XMM0,XMM0
            sar EDI,16
            cvtsi2ss XMM0,EDI
            subss XMM5,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM6
            addsd XMM0,XMM9
            movq R8,XMM0
            pxor XMM0,XMM0
            sar R8D,16
            ucomiss XMM8,XMM1
            cvtsi2ss XMM0,R8D
            cmovae R9D,R12D
            imul EDI,R13D
            add R13D,EDI
            ucomiss XMM3,XMM1
            mov R10D,R13D
            cmovae R10D,EDI
            imul R8D,R11D
            subss XMM6,XMM0
            add R11D,R8D
            ucomiss XMM2,XMM1
            cmovae R11D,R8D
            test EBX,EBX
            jle .L_426e80

            lea R13D,DWORD PTR [R12+R10*1]
            lea R15D,DWORD PTR [R12+RDI*1]
            add R12D,R8D
            xor EDX,EDX
            lea R14D,DWORD PTR [R13+R11*1]
            lea R13D,DWORD PTR [R12+R10*1]
            lea EAX,DWORD PTR [R8+R15*1]
            mov DWORD PTR [RSP-4],R14D
            lea R14D,DWORD PTR [R9+R10*1]
            mov DWORD PTR [RSP-8],R13D
            lea R13D,DWORD PTR [R8+R9*1]
            cdqe 
            add R14D,R11D
            lea RBP,QWORD PTR [RCX+RAX*4]
            xor EAX,EAX
            add R13D,R10D
            mov R12D,R14D
            jmp .L_426d03
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426c90:

            ucomiss XMM5,XMM6
            jb .L_426d0e

            lea R10D,DWORD PTR [RDI+R8*1]
            add R10D,R9D
            add R10D,EAX
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R13+RAX*1]
            movaps XMM3,XMM1
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R12+RAX*1]
            subss XMM3,XMM0
            movaps XMM2,XMM8
            movsxd R10,R10D
            subss XMM2,XMM1
            movss XMM1,DWORD PTR [RCX+R10*4]
            subss XMM1,XMM8
.L_426cd7:

            mulss XMM3,XMM4
            add EAX,1
            mulss XMM2,XMM5
            mulss XMM1,XMM6
            addss XMM0,XMM3
            addss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [RSI+RDX*1],XMM0
            add RDX,4
            cmp EBX,EAX
            je .L_426e80
.L_426d03:

            ucomiss XMM4,XMM5
            movss XMM0,DWORD PTR [RBP+RDX*1]
            jae .L_426c90
.L_426d0e:

            ucomiss XMM4,XMM6
            jb .L_426d68

            ucomiss XMM6,XMM5
            jb .L_426d68

            lea R10D,DWORD PTR [RDI+R8*1]
            add R10D,R9D
            add R10D,EAX
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [RDI+R9*1]
            movaps XMM3,XMM8
            add R10D,R11D
            add R10D,EAX
            subss XMM3,XMM0
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R12+RAX*1]
            movsxd R10,R10D
            movss XMM2,DWORD PTR [RCX+R10*4]
            subss XMM2,XMM1
            subss XMM1,XMM8
            jmp .L_426cd7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426d68:

            ucomiss XMM6,XMM4
            jb .L_426dc0

            ucomiss XMM4,XMM5
            jb .L_426dc0

            lea R10D,DWORD PTR [RDI+R9*1]
            add R10D,R11D
            add R10D,EAX
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R15+R11*1]
            movaps XMM3,XMM8
            add R10D,EAX
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R12+RAX*1]
            subss XMM3,XMM1
            movsxd R10,R10D
            subss XMM1,XMM0
            movss XMM2,DWORD PTR [RCX+R10*4]
            subss XMM2,XMM8
            jmp .L_426cd7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426dc0:

            ucomiss XMM5,XMM4
            jb .L_426e10

            ucomiss XMM4,XMM6
            jb .L_426e10

            lea R10D,DWORD PTR [R13+RAX*1]
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            mov R10D,DWORD PTR [RSP-8]
            movaps XMM3,XMM8
            add R10D,EAX
            movsxd R10,R10D
            movss XMM2,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R12+RAX*1]
            subss XMM3,XMM2
            movsxd R10,R10D
            subss XMM2,XMM0
            movss XMM1,DWORD PTR [RCX+R10*4]
            subss XMM1,XMM8
            jmp .L_426cd7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426e10:

            ucomiss XMM5,XMM6
            jb .L_426e1a

            ucomiss XMM6,XMM4
            jae .L_426e90
.L_426e1a:

            ucomiss XMM6,XMM5
            jb .L_426e68

            ucomiss XMM5,XMM4
            jb .L_426e68

            mov R10D,DWORD PTR [RSP-4]
            add R10D,EAX
            movsxd R10,R10D
            movss XMM2,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R14+RAX*1]
            movsxd R10,R10D
            movss XMM3,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R15+R11*1]
            subss XMM3,XMM2
            add R10D,EAX
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            subss XMM2,XMM1
            subss XMM1,XMM0
            jmp .L_426cd7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426e68:

            pxor XMM1,XMM1
            pxor XMM2,XMM2
            pxor XMM3,XMM3
            jmp .L_426cd7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426e80:

            pop RBX
.L_426e81:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426e90:

            mov R10D,DWORD PTR [RSP-4]
            add R10D,EAX
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R14+RAX*1]
            movsxd R10,R10D
            movss XMM3,DWORD PTR [RCX+R10*4]
            mov R10D,DWORD PTR [RSP-8]
            subss XMM3,XMM1
            add R10D,EAX
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            movaps XMM2,XMM8
            subss XMM1,XMM8
            subss XMM2,XMM0
            jmp .L_426cd7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426ed8:

            pxor XMM0,XMM0
            movss XMM1,DWORD PTR [RIP+.L_42df6c]
            jmp .L_426b2e
.L_426ee9:

            pxor XMM0,XMM0
            jmp .L_426b8a
.L_426ef2:

            pxor XMM0,XMM0
            jmp .L_426b5c
.L_426efb:

            nop
            nop
            nop
            nop
            nop
.L_426f00:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1208
.L_426f1b:

            pxor XMM2,XMM2
            movss XMM1,DWORD PTR [RDI]
            mov R14,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1192],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            ucomiss XMM0,XMM1
            cvtsi2ss XMM2,RAX
            mov EAX,DWORD PTR [RDX+96]
            ja .L_426f90

            ucomiss XMM1,XMM1
            jp .L_426f90

            movss XMM3,DWORD PTR [RIP+.L_42df6c]
            movaps XMM10,XMM1
            ucomiss XMM1,XMM3
            jbe .L_426f9d

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            xor EAX,EAX
            subss XMM2,XMM0
            movaps XMM10,XMM2
            jmp .L_426fd6
          .byte 0x90
.L_426f90:

            pxor XMM10,XMM10
            movss XMM3,DWORD PTR [RIP+.L_42df6c]
.L_426f9d:

            mulss XMM10,XMM2
            mov EDX,0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM10
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            ucomiss XMM1,XMM3
            cmovae EAX,EDX
            subss XMM10,XMM0
.L_426fd6:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea RCX,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RDI+4]
            mov RDX,QWORD PTR [RBX+128]
            lea R15,QWORD PTR [RSP+160]
            mov DWORD PTR [RSP+12],EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R15
            mov RDI,R13
            mov QWORD PTR [RSP],RCX
            movdqu XMM0,XMMWORD PTR [RBX+16]
            mov QWORD PTR [RSP+144],RDX
            mov RDX,QWORD PTR [RBX+56]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            mov QWORD PTR [RSP+68],RDX
            mov EDX,DWORD PTR [RBX+64]
            movdqu XMM0,XMMWORD PTR [RBX+64]
            mov DWORD PTR [RSP+76],EDX
            movsxd RDX,EBP
            movaps XMMWORD PTR [RSP+80],XMM0
            lea RDX,QWORD PTR [R14+RDX*4]
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+136],RDX
            mov RDX,RCX
            call .L_426af0

            mov RDI,R13
            mov EAX,DWORD PTR [RSP+12]
            mov RCX,QWORD PTR [RSP]
            add EBP,EAX
            mov RDX,RCX
            movsxd RBP,EBP
            lea RAX,QWORD PTR [R14+RBP*4]
            lea RBP,QWORD PTR [RSP+672]
            mov RSI,RBP
            mov QWORD PTR [RSP+136],RAX
            call .L_426af0

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_4270f0

            sub EAX,1
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_4270c8:

            movss XMM1,DWORD PTR [R15+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM10
            addss XMM0,XMM1
            movss DWORD PTR [R12+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_4270c8
.L_4270f0:

            mov RAX,QWORD PTR [RSP+1192]
            xor RAX,QWORD PTR FS:[40]
            jne .L_427115

            add RSP,1208
.L_42710a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_427115:

            call __stack_chk_fail@PLT
.L_42711a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_427120:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1208
.L_42713b:

            pxor XMM2,XMM2
            movss XMM1,DWORD PTR [RDI]
            mov R15,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1192],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            mov ECX,DWORD PTR [RDX+100]
            ucomiss XMM0,XMM1
            movss XMM3,DWORD PTR [RIP+.L_42df6c]
            cvtsi2ss XMM2,RAX
            ja .L_4271b3

            ucomiss XMM1,XMM1
            jp .L_4271b3

            ucomiss XMM1,XMM3
            jbe .L_4271b0

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,ECX
            xor ECX,ECX
            subss XMM2,XMM0
            jmp .L_4271ec
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4271b0:

            movaps XMM0,XMM1
.L_4271b3:

            mulss XMM0,XMM2
            mov EAX,0
            pxor XMM2,XMM2
            cvtss2sd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM2
            pxor XMM2,XMM2
            sar EBP,16
            cvtsi2ss XMM2,EBP
            imul EBP,ECX
            ucomiss XMM1,XMM3
            cmovae ECX,EAX
            subss XMM0,XMM2
            movaps XMM2,XMM0
.L_4271ec:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea R14,QWORD PTR [RDI+4]
            lea R12,QWORD PTR [RSP+160]
            mov RAX,QWORD PTR [RBX+128]
            mov DWORD PTR [RSP+8],ECX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R12
            mov RDI,R14
            movss DWORD PTR [RSP+12],XMM2
            mov QWORD PTR [RSP+144],RAX
            movsxd RAX,EBP
            movdqu XMM0,XMMWORD PTR [RBX+16]
            lea RAX,QWORD PTR [R15+RAX*4]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+136],RAX
            lea RAX,QWORD PTR [RSP+16]
            mov RDX,RAX
            movdqu XMM0,XMMWORD PTR [RBX+56]
            mov QWORD PTR [RSP],RAX
            movups XMMWORD PTR [RSP+68],XMM0
            call .L_426f00

            mov RDI,R14
            mov ECX,DWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP]
            add EBP,ECX
            movsxd RBP,EBP
            lea RDX,QWORD PTR [R15+RBP*4]
            lea RBP,QWORD PTR [RSP+672]
            mov QWORD PTR [RSP+136],RDX
            mov RSI,RBP
            mov RDX,RAX
            call .L_426f00

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_427308

            sub EAX,1
            movss XMM2,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
.L_4272e0:

            movss XMM1,DWORD PTR [R12+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [R13+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_4272e0
.L_427308:

            mov RAX,QWORD PTR [RSP+1192]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42732d

            add RSP,1208
.L_427322:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42732d:

            call __stack_chk_fail@PLT
.L_427332:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427340:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1208
.L_42735b:

            pxor XMM3,XMM3
            movss XMM1,DWORD PTR [RDI]
            mov R14,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1192],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            ucomiss XMM0,XMM1
            cvtsi2ss XMM3,RAX
            mov EAX,DWORD PTR [RDX+104]
            ja .L_4273d0

            ucomiss XMM1,XMM1
            jp .L_4273d0

            movss XMM4,DWORD PTR [RIP+.L_42df6c]
            movaps XMM2,XMM1
            ucomiss XMM1,XMM4
            jbe .L_4273dc

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM3
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            xor EAX,EAX
            subss XMM3,XMM0
            movaps XMM2,XMM3
            jmp .L_427412
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4273d0:

            pxor XMM2,XMM2
            movss XMM4,DWORD PTR [RIP+.L_42df6c]
.L_4273dc:

            mulss XMM2,XMM3
            mov EDX,0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            ucomiss XMM1,XMM4
            cmovae EAX,EDX
            subss XMM2,XMM0
.L_427412:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea RCX,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RDI+4]
            mov RDX,QWORD PTR [RBX+128]
            lea R15,QWORD PTR [RSP+160]
            mov DWORD PTR [RSP+8],EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R15
            mov RDI,R13
            mov QWORD PTR [RSP],RCX
            movss DWORD PTR [RSP+12],XMM2
            mov QWORD PTR [RSP+144],RDX
            movdqu XMM0,XMMWORD PTR [RBX+16]
            mov EDX,DWORD PTR [RBX+72]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+80],XMM0
            mov DWORD PTR [RSP+84],EDX
            movsxd RDX,EBP
            lea RDX,QWORD PTR [R14+RDX*4]
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+136],RDX
            mov RDX,RCX
            movdqu XMM0,XMMWORD PTR [RBX+56]
            movups XMMWORD PTR [RSP+68],XMM0
            call .L_427120

            mov RDI,R13
            mov EAX,DWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP]
            add EBP,EAX
            mov RDX,RCX
            movsxd RBP,EBP
            lea RAX,QWORD PTR [R14+RBP*4]
            lea RBP,QWORD PTR [RSP+672]
            mov RSI,RBP
            mov QWORD PTR [RSP+136],RAX
            call .L_427120

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_427537

            sub EAX,1
            movss XMM2,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
.L_427510:

            movss XMM1,DWORD PTR [R15+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [R12+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_427510
.L_427537:

            mov RAX,QWORD PTR [RSP+1192]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42755c

            add RSP,1208
.L_427551:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42755c:

            call __stack_chk_fail@PLT
.L_427561:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427570:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1208
.L_42758b:

            pxor XMM3,XMM3
            movss XMM1,DWORD PTR [RDI]
            mov R14,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1192],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            ucomiss XMM0,XMM1
            cvtsi2ss XMM3,RAX
            mov EAX,DWORD PTR [RDX+108]
            ja .L_427600

            ucomiss XMM1,XMM1
            jp .L_427600

            movss XMM4,DWORD PTR [RIP+.L_42df6c]
            movaps XMM2,XMM1
            ucomiss XMM1,XMM4
            jbe .L_42760c

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM3
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            xor EAX,EAX
            subss XMM3,XMM0
            movaps XMM2,XMM3
            jmp .L_427642
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427600:

            pxor XMM2,XMM2
            movss XMM4,DWORD PTR [RIP+.L_42df6c]
.L_42760c:

            mulss XMM2,XMM3
            mov EDX,0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            ucomiss XMM1,XMM4
            cmovae EAX,EDX
            subss XMM2,XMM0
.L_427642:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea RCX,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RDI+4]
            mov RDX,QWORD PTR [RBX+128]
            lea R15,QWORD PTR [RSP+160]
            mov DWORD PTR [RSP+8],EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R15
            mov RDI,R13
            mov QWORD PTR [RSP],RCX
            movss DWORD PTR [RSP+12],XMM2
            mov QWORD PTR [RSP+144],RDX
            movdqu XMM0,XMMWORD PTR [RBX+16]
            mov RDX,QWORD PTR [RBX+72]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+84],RDX
            movsxd RDX,EBP
            lea RDX,QWORD PTR [R14+RDX*4]
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+136],RDX
            mov RDX,RCX
            movdqu XMM0,XMMWORD PTR [RBX+56]
            movups XMMWORD PTR [RSP+68],XMM0
            call .L_427340

            mov RDI,R13
            mov EAX,DWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP]
            add EBP,EAX
            mov RDX,RCX
            movsxd RBP,EBP
            lea RAX,QWORD PTR [R14+RBP*4]
            lea RBP,QWORD PTR [RSP+672]
            mov RSI,RBP
            mov QWORD PTR [RSP+136],RAX
            call .L_427340

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_427767

            sub EAX,1
            movss XMM2,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
.L_427740:

            movss XMM1,DWORD PTR [R15+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [R12+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_427740
.L_427767:

            mov RAX,QWORD PTR [RSP+1192]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42778c

            add RSP,1208
.L_427781:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42778c:

            call __stack_chk_fail@PLT
.L_427791:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4277a0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1224
.L_4277bb:

            pxor XMM3,XMM3
            movss XMM1,DWORD PTR [RDI]
            mov RCX,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1208],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            mov R15D,DWORD PTR [RDX+112]
            ucomiss XMM0,XMM1
            cvtsi2ss XMM3,RAX
            ja .L_427830

            ucomiss XMM1,XMM1
            jp .L_427830

            movss XMM4,DWORD PTR [RIP+.L_42df6c]
            movaps XMM2,XMM1
            ucomiss XMM1,XMM4
            jbe .L_42783c

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM3
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,R15D
            xor R15D,R15D
            subss XMM3,XMM0
            movaps XMM2,XMM3
            jmp .L_427874
.L_427830:

            pxor XMM2,XMM2
            movss XMM4,DWORD PTR [RIP+.L_42df6c]
.L_42783c:

            mulss XMM2,XMM3
            mov EAX,0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,R15D
            ucomiss XMM1,XMM4
            cmovae R15D,EAX
            subss XMM2,XMM0
.L_427874:

            movdqu XMM0,XMMWORD PTR [RBX]
            movsxd RDX,EBP
            lea R14,QWORD PTR [RDI+4]
            mov RAX,QWORD PTR [RBX+128]
            mov ESI,DWORD PTR [RBX+80]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov R8,QWORD PTR [RBX+72]
            lea R12,QWORD PTR [RSP+176]
            mov RDI,R14
            movss DWORD PTR [RSP+28],XMM2
            add EBP,R15D
            movsxd RBP,EBP
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RSP+32]
            movdqu XMM0,XMMWORD PTR [RBX+16]
            mov DWORD PTR [RSP+108],ESI
            mov RSI,R12
            mov QWORD PTR [RSP+100],R8
            movaps XMMWORD PTR [RSP+48],XMM0
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],RAX
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov QWORD PTR [RSP+152],RDX
            mov RDX,RAX
            movdqu XMM0,XMMWORD PTR [RBX+56]
            movups XMMWORD PTR [RSP+84],XMM0
            call .L_427570

            mov RDI,R14
            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RCX+RBP*4]
            lea RBP,QWORD PTR [RSP+688]
            mov QWORD PTR [RSP+152],RDX
            mov RSI,RBP
            mov RDX,RAX
            call .L_427570

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_4279a0

            sub EAX,1
            movss XMM2,DWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_427978:

            movss XMM1,DWORD PTR [R12+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [R13+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_427978
.L_4279a0:

            mov RAX,QWORD PTR [RSP+1208]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4279c5

            add RSP,1224
.L_4279ba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4279c5:

            call __stack_chk_fail@PLT
.L_4279ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4279d0:

            test RDI,RDI
            push RBX
            je .L_427a09

            test RSI,RSI
            mov RBX,RDI
            je .L_427a00

            mov RSI,QWORD PTR [RSI+56]
            test RSI,RSI
            je .L_427a28
.L_4279e7:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,8
            call .L_4212e0

            mov QWORD PTR [RBX+56],RAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427a00:

            lea RSI,QWORD PTR [RIP+.L_641d50]
            jmp .L_4279e7
.L_427a09:

            lea RCX,QWORD PTR [RIP+.L_432710]
            lea RSI,QWORD PTR [RIP+.L_4326b0]
            lea RDI,QWORD PTR [RIP+.L_42deba]
            mov EDX,43
            call __assert_fail@PLT
.L_427a28:

            lea RCX,QWORD PTR [RIP+.L_432710]
            lea RSI,QWORD PTR [RIP+.L_4326b0]
            lea RDI,QWORD PTR [RIP+.L_4326bb]
            mov EDX,54
            call __assert_fail@PLT
.L_427a47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a50:

            push RBX
            mov RBX,RSI
            mov ESI,5
            call .L_4068a0

            test RBX,RBX
            je .L_427a78

            mov RDX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX],RDX
            mov EAX,1
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427a78:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            ret 
.L_427a86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a90:

            push RBX
            mov RBX,RSI
            mov ESI,5
            sub RSP,16
.L_427a9d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4068a0

            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RBX+128],0
            test RAX,RAX
            je .L_427b00

            mov EDX,DWORD PTR [RBX+8]
            mov ESI,DWORD PTR [RBX+16]
            mov EDI,DWORD PTR [RBX+12]
            call RAX

            test RAX,RAX
            mov QWORD PTR [RBX+128],RAX
            je .L_427b00
.L_427adc:

            test RAX,RAX
            setne AL
            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_427d1f

            add RSP,16
.L_427afd:

            pop RBX
            ret 
          .byte 0x90
.L_427b00:

            mov EDX,DWORD PTR [RBX+12]
            mov ESI,DWORD PTR [RBX+8]
            mov ECX,DWORD PTR [RBX+16]
            mov QWORD PTR [RSP],0
            cmp EDX,3
            jbe .L_427b30

            xor EAX,EAX
            cmp ECX,127
            jbe .L_427b30
.L_427b1d:

            mov QWORD PTR [RBX+128],RAX
            jmp .L_427adc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427b30:

            mov R8D,ESI
            and R8D,1
            cmp EDX,8
            ja .L_427b70

            lea RDI,QWORD PTR [RIP+.L_4326e0]
            movsxd RAX,DWORD PTR [RDI+RDX*4]
            add RAX,RDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427b50:

            cmp ECX,1
            je .L_427cca

            test R8D,R8D
            je .L_427cdf

            lea RAX,QWORD PTR [RIP+.L_4265a0]
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
.L_427b70:

            mov RAX,QWORD PTR [RSP]
            jmp .L_427b1d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427b80:

            test R8D,R8D
            je .L_427c65

            lea RAX,QWORD PTR [RIP+.L_4277a0]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427ba0:

            test R8D,R8D
            je .L_427caa

            lea RAX,QWORD PTR [RIP+.L_427570]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427bc0:

            and ESI,256
            je .L_427c85

            test R8D,R8D
            je .L_427cff

            lea RAX,QWORD PTR [RIP+.L_426870]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427be8:

            test R8D,R8D
            je .L_427c55

            lea RAX,QWORD PTR [RIP+.L_427120]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427c00:

            test R8D,R8D
            je .L_427c9a

            lea RAX,QWORD PTR [RIP+.L_426f00]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427c20:

            test R8D,R8D
            je .L_427cba

            lea RAX,QWORD PTR [RIP+.L_427340]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427c40:

            test R8D,R8D
            je .L_427c75

            lea RAX,QWORD PTR [RIP+.L_4266e0]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427c55:

            lea RAX,QWORD PTR [RIP+.L_425cd0]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427c65:

            lea RAX,QWORD PTR [RIP+.L_426290]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427c75:

            lea RAX,QWORD PTR [RIP+.L_424a30]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427c85:

            test R8D,R8D
            je .L_427cef

            lea RAX,QWORD PTR [RIP+.L_426af0]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427c9a:

            lea RAX,QWORD PTR [RIP+.L_4252e0]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427caa:

            lea RAX,QWORD PTR [RIP+.L_4260a0]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427cba:

            lea RAX,QWORD PTR [RIP+.L_425eb0]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427cca:

            test R8D,R8D
            je .L_427d0f

            lea RAX,QWORD PTR [RIP+.L_426480]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427cdf:

            lea RAX,QWORD PTR [RIP+.L_424990]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427cef:

            lea RAX,QWORD PTR [RIP+.L_424e20]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427cff:

            lea RAX,QWORD PTR [RIP+.L_424b90]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427d0f:

            lea RAX,QWORD PTR [RIP+.L_424920]
            mov QWORD PTR [RSP],RAX
            jmp .L_427b70
.L_427d1f:

            call __stack_chk_fail@PLT
.L_427d24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427d30:

            push R15
            push R14
            mov R14D,EDX
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_427d44:

            cmp EDX,8
            jg .L_427e20

            mov R13,RSI
            mov ESI,136
            mov R12D,ECX
            mov R15,R8
            mov DWORD PTR [RSP+12],R9D
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_427e0a

            mov R9D,DWORD PTR [RSP+12]
            test R14D,R14D
            mov DWORD PTR [RAX+12],R14D
            mov EDI,R12D
            mov DWORD PTR [RAX+16],R12D
            mov QWORD PTR [RAX+120],R15
            mov QWORD PTR [RAX],RBP
            mov DWORD PTR [RAX+8],R9D
            jle .L_427db6

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_427d98:

            mov EDX,DWORD PTR [R13+RAX*4]
            mov DWORD PTR [RBX+RAX*4+20],EDX
            mov ECX,DWORD PTR [R13+RAX*4]
            lea ESI,DWORD PTR [RCX-1]
            mov DWORD PTR [RBX+RAX*4+52],ESI
            add RAX,1
            cmp R14D,EAX
            jg .L_427d98
.L_427db6:

            cmp R14D,1
            mov DWORD PTR [RBX+84],R12D
            jle .L_427dfb

            movsxd RCX,R14D
            lea ESI,DWORD PTR [R14-2]
            lea RDX,QWORD PTR [RBX+88]
            shl RCX,2
            lea RAX,QWORD PTR [R13+RCX*1]
            lea RCX,QWORD PTR [R13+RCX*1-4]
            shl RSI,2
            sub RCX,RSI
            jmp .L_427dec
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427de8:

            add RDX,4
.L_427dec:

            imul EDI,DWORD PTR [RAX-4]
            sub RAX,4
            cmp RAX,RCX
            mov DWORD PTR [RDX],EDI
            jne .L_427de8
.L_427dfb:

            mov RSI,RBX
            mov RDI,RBP
            call .L_427a90

            test EAX,EAX
            je .L_427e3f
.L_427e0a:

            add RSP,24
.L_427e0e:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427e20:

            mov ECX,EDX
            lea RDX,QWORD PTR [RIP+.L_432730]
            mov R8D,8
            mov ESI,2
            xor EAX,EAX
            xor EBX,EBX
            call .L_421420

            jmp .L_427e0a
.L_427e3f:

            lea RDX,QWORD PTR [RIP+.L_432760]
            mov R8D,R12D
            mov ECX,R14D
            mov ESI,8
            mov RDI,RBP
            call .L_421420

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_421170

            jmp .L_427e0a
.L_427e68:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427e70:

            sub RSP,56
.L_427e74:

            mov DWORD PTR [RSP],ESI
            mov DWORD PTR [RSP+4],ESI
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+16],ESI
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+24],ESI
            mov DWORD PTR [RSP+28],ESI
            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_427d30

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_427ec0

            add RSP,56
.L_427ebf:

            ret 
.L_427ec0:

            call __stack_chk_fail@PLT
.L_427ec5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427ed0:

            test RDI,RDI
            je .L_427ee0

            mov RSI,RDI
            mov RDI,QWORD PTR [RDI]
            jmp .L_421170
.L_427ee0:

            ret 
.L_427ee2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427ef0:

            cmp ESI,1
            je .L_427f38

            jb .L_427f28

            cmp ESI,2
            je .L_427f10

            cmp ESI,3
            jne .L_427f20

            mov ESI,1668313716
            jmp .L_404230
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427f10:

            mov ESI,1684890724
            jmp .L_404230
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427f20:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427f28:

            mov ESI,1684370275
            jmp .L_404230
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427f38:

            mov ESI,1684893284
            jmp .L_404230
.L_427f42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427f50:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov ESI,1918392666
            sub RSP,8
.L_427f68:

            call .L_404230

            mov RDI,RBX
            mov ESI,1733843290
            mov R12,RAX
            call .L_404230

            mov RDI,RBX
            mov ESI,1649957210
            mov RBP,RAX
            call .L_404230

            test R12,R12
            mov RBX,RAX
            sete DL
            test RBP,RBP
            sete AL
            or DL,AL
            jne .L_427fa5

            test RBX,RBX
            jne .L_427fb8
.L_427fa5:

            add RSP,8
.L_427fa9:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427fb8:

            movsd XMM2,QWORD PTR [RBX]
            mov RDI,R13
            movsd XMM1,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [R12]
            call .L_42c1a0

            lea RDI,QWORD PTR [R13+24]
            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RBP+8]
            movsd XMM0,QWORD PTR [R12+8]
            call .L_42c1a0

            movsd XMM0,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R13+48]
            movsd XMM2,QWORD PTR [RBX+16]
            movsd XMM1,QWORD PTR [RBP+16]
            call .L_42c1a0

            add RSP,8
.L_428007:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_428013:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428020:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_428029:

            call .L_42bd00

            test RAX,RAX
            je .L_428087

            mov RBX,RAX
            jmp .L_428050
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428040:

            mov RDI,RBX
            call .L_42b6e0

            test RAX,RAX
            mov RBX,RAX
            je .L_428087
.L_428050:

            mov RDI,RBX
            call .L_42b6c0

            cmp EAX,1668052340
            jne .L_428040

            mov RAX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBP+56]
            mov RSI,QWORD PTR [RAX+8]
            or DWORD PTR [RSI+8],256
            call .L_427a90

            mov RDI,RBX
            call .L_42b6e0

            test RAX,RAX
            mov RBX,RAX
            jne .L_428050
.L_428087:

            add RSP,8
.L_42808b:

            pop RBX
            pop RBP
            ret 
.L_42808e:

            nop
            nop
.L_428090:

            sub RSP,8
            call .L_404230

            test RAX,RAX
            je .L_4280b0

            mov RDI,RAX
            add RSP,8
            jmp .L_4104d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4280b0:

            xor EAX,EAX
            add RSP,8
            ret 
.L_4280b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4280c0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_4280c7:

            je .L_42813d

            mov R12,RSI
            mov RBX,RDI
            mov ESI,2004119668
            mov RDI,R12
            call .L_404230

            test RAX,RAX
            mov RBP,RAX
            je .L_42811f

            mov RDI,R12
            call .L_403570

            cmp EAX,67108863
            jbe .L_428110
.L_4280f3:

            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RBX],XMM0
            mov RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RBX+16],RAX
            mov EAX,1
            pop RBX
.L_428109:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428110:

            mov RDI,R12
            call .L_403550

            cmp EAX,1835955314
            jne .L_4280f3
.L_42811f:

            call .L_40cfe0

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RBX],XMM0
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBX+16],RAX
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_42813d:

            lea RCX,QWORD PTR [RIP+.L_4327d0]
            lea RSI,QWORD PTR [RIP+.L_432794]
            lea RDI,QWORD PTR [RIP+.L_42da54]
            mov EDX,68
            call __assert_fail@PLT
.L_42815c:

            nop
            nop
            nop
            nop
.L_428160:

            push RBP
            push RBX
            sub RSP,8
.L_428166:

            test RDI,RDI
            je .L_428220

            mov RBP,RSI
            mov RBX,RDI
            mov ESI,1667785060
            mov RDI,RBP
            call .L_404230

            test RAX,RAX
            je .L_4281c0

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+48]
            movups XMMWORD PTR [RBX+48],XMM0
            mov RAX,QWORD PTR [RAX+64]
            mov QWORD PTR [RBX+64],RAX
.L_4281b1:

            add RSP,8
.L_4281b5:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4281c0:

            mov RDI,RBX
            call .L_42c340

            mov RDI,RBP
            call .L_403570

            cmp EAX,67108863
            ja .L_4281b1

            mov RDI,RBP
            call .L_403550

            cmp EAX,1835955314
            jne .L_4281b1

            mov RDI,RBP
            mov ESI,2004119668
            call .L_404230

            test RAX,RAX
            mov RBP,RAX
            je .L_428216

            call .L_40cfe0

            add RSP,8
.L_428204:

            mov RDX,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            mov RCX,RAX
            xor ESI,ESI
            jmp .L_40d3d0
.L_428216:

            mov RDI,RBX
            call .L_42c340

            jmp .L_4281b1
.L_428220:

            lea RCX,QWORD PTR [RIP+.L_4327c0]
            lea RSI,QWORD PTR [RIP+.L_432794]
            lea RDI,QWORD PTR [RIP+.L_42da54]
            mov EDX,98
            call __assert_fail@PLT
.L_42823f:

            nop
.L_428240:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            movsxd RBP,ESI
            sub RSP,136
.L_428253:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            call .L_402dd0

            mov RDI,RBX
            mov R12,RAX
            call .L_403550

            cmp EAX,1852662636
            je .L_428478

            cmp EBP,3
            ja .L_4282d3

            lea RAX,QWORD PTR [RIP+.L_4328a0]
            mov RDI,RBX
            mov R13D,DWORD PTR [RAX+RBP*4]
            lea RAX,QWORD PTR [RIP+.L_432890]
            mov EBP,DWORD PTR [RAX+RBP*4]
            mov ESI,EBP
            call .L_402ea0

            test EAX,EAX
            jne .L_428620

            mov ESI,R13D
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            mov EAX,1093812784
            mov RDI,RBX
            cmove R13D,EAX
            mov ESI,R13D
            call .L_402ea0

            test EAX,EAX
            jne .L_4285b0
.L_4282d3:

            mov RDI,RBX
            call .L_403530

            cmp EAX,1196573017
            mov RDI,RBX
            je .L_4284f0

            lea R12,QWORD PTR [RSP+48]
            call .L_402dd0

            mov RSI,RBX
            mov RDI,R12
            mov R13,RAX
            call .L_427f50

            test EAX,EAX
            je .L_42844a

            lea RDX,QWORD PTR [R12+72]
            movsd XMM0,QWORD PTR [RIP+.L_4328b0]
            mov RAX,R12
.L_428319:

            movsd XMM1,QWORD PTR [RAX]
            add RAX,24
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-24],XMM1
            movsd XMM1,QWORD PTR [RAX-16]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-16],XMM1
            movsd XMM1,QWORD PTR [RAX-8]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-8],XMM1
            cmp RAX,RDX
            jne .L_428319

            mov ESI,1918128707
            mov RDI,RBX
            call .L_404230

            mov ESI,1733579331
            mov RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_404230

            mov ESI,1649693251
            mov RDI,RBX
            mov QWORD PTR [RSP+24],RAX
            call .L_404230

            cmp QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+32],RAX
            je .L_42844a

            cmp QWORD PTR [RSP+24],0
            je .L_42844a

            test RAX,RAX
            je .L_42844a

            mov EDX,3
            mov ESI,3
            mov RDI,R13
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_42844a

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,3
            mov RDI,R13
            call .L_42af10

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428442

            xor R8D,R8D
            mov RCX,R12
            mov EDX,3
            mov ESI,3
            mov RDI,R13
            call .L_42a230

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428442

            mov RDI,RBX
            call .L_403510

            cmp EAX,1281450528
            jne .L_42844c

            mov RDI,R13
            call .L_42ae90

            jmp .L_4284cf
          .byte 0x66
          .byte 0x90
.L_428430:

            mov RDI,RBX
            call .L_422930
.L_428438:

            mov RDI,QWORD PTR [RSP+8]
            call .L_422930
.L_428442:

            mov RDI,RBP
            call .L_42b910
.L_42844a:

            xor EBP,EBP
.L_42844c:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_428797

            add RSP,136
.L_42846a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428478:

            mov RDI,RBX
            mov ESI,1852009522
            call .L_404230

            test RAX,RAX
            mov RBX,RAX
            je .L_42844a

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R12
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_42878a

            mov ESI,1
            mov RDI,RBX
            call .L_410d90
.L_4284b2:

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428442
.L_4284c7:

            mov RDI,R12
            call .L_42acf0
.L_4284cf:

            mov RDX,RAX
            mov ESI,1
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_42844c

            jmp .L_428442
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4284f0:

            call .L_402dd0

            mov ESI,1800688195
            mov RDI,RBX
            mov R12,RAX
            call .L_404230

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_42844a

            mov EDX,3
            mov ESI,1
            mov RDI,R12
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_428438

            mov RDI,RBX
            call .L_403510

            cmp EAX,1281450528
            je .L_4286a0

            lea RDX,QWORD PTR [RSP+8]
            mov ESI,1
            mov RDI,R12
            call .L_42af10

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428438

            lea RCX,QWORD PTR [RIP+.L_432850]
            xor R8D,R8D
            mov EDX,1
            mov ESI,3
            mov RDI,R12
            call .L_42a230

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_42844c

            jmp .L_428438
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4285b0:

            mov ESI,R13D
            mov RDI,RBX
            call .L_404230

            test RAX,RAX
            mov RBP,RAX
            je .L_42844a

            mov ESI,R13D
            mov RDI,RBX
            call .L_404580

            mov RDI,RBP
            mov R13D,EAX
            call .L_42b9f0

            cmp R13D,1835430962
            mov RBP,RAX
            jne .L_42844c

            mov RDI,RBX
            call .L_403510

            cmp EAX,1281450528
            jne .L_42844c

            mov RDI,RBX
            call .L_403530

            cmp EAX,1281450528
            jne .L_4284c7

            mov RDI,R12
            call .L_42ad20

            jmp .L_4284b2
.L_428620:

            mov RDI,RBX
            call .L_402dd0

            mov ESI,EBP
            mov RDI,RBX
            mov R13,RAX
            call .L_404230

            mov RDI,RAX
            call .L_42b9f0

            mov RDI,RBX
            mov RBP,RAX
            call .L_403530

            mov RDI,RBX
            mov R12D,EAX
            call .L_403510

            test RBP,RBP
            mov EBX,EAX
            je .L_42844a

            cmp R12D,1281450528
            je .L_428748

            cmp R12D,1482250784
            je .L_428780
.L_428678:

            cmp EBX,1281450528
            je .L_428770

            cmp EBX,1482250784
            jne .L_42844c

            mov RDI,R13
            call .L_42ad90

            jmp .L_4284cf
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4286a0:

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,2
            mov RDI,R12
            mov DWORD PTR [RSP+16],2155905152
            call .L_422570

            test RAX,RAX
            mov RBX,RAX
            je .L_428438

            mov RAX,QWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RIP+.L_432830]
            xor R8D,R8D
            mov EDX,1
            mov ESI,3
            mov RDI,R12
            mov QWORD PTR [RSP+56],RBX
            mov QWORD PTR [RSP+64],RBX
            mov QWORD PTR [RSP+48],RAX
            call .L_42a230

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428430

            lea RDX,QWORD PTR [RSP+48]
            mov ESI,3
            mov RDI,R12
            call .L_42af10

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428430

            mov RDI,RBX
            call .L_422930

            jmp .L_42844c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428748:

            mov RDI,R13
            call .L_42adc0
.L_428750:

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_428678

            jmp .L_428442
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428770:

            mov RDI,R13
            call .L_42ad50

            jmp .L_4284cf
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428780:

            mov RDI,R13
            call .L_42ae00

            jmp .L_428750
.L_42878a:

            mov RDI,RBX
            call .L_4109e0

            jmp .L_42844c
.L_428797:

            call __stack_chk_fail@PLT
.L_42879c:

            nop
            nop
            nop
            nop
.L_4287a0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            movsxd RBP,ESI
            mov RBX,RDI
            sub RSP,216
.L_4287b7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_402dd0

            cmp EBP,3
            ja .L_428827

            mov R13,RAX
            lea RAX,QWORD PTR [RIP+.L_432880]
            mov RDI,RBX
            mov R12D,DWORD PTR [RAX+RBP*4]
            lea RAX,QWORD PTR [RIP+.L_432870]
            mov EBP,DWORD PTR [RAX+RBP*4]
            mov ESI,EBP
            call .L_402ea0

            test EAX,EAX
            jne .L_4289f0

            mov ESI,R12D
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            mov EAX,1110589744
            mov RDI,RBX
            cmove R12D,EAX
            mov ESI,R12D
            call .L_402ea0

            test EAX,EAX
            jne .L_428bd0
.L_428827:

            mov RDI,RBX
            call .L_403530

            cmp EAX,1196573017
            mov RDI,RBX
            je .L_428a88

            lea RBP,QWORD PTR [RSP+48]
            call .L_402dd0

            mov RSI,RBX
            mov RDI,RBP
            mov R13,RAX
            call .L_427f50

            test EAX,EAX
            je .L_428ba0

            lea R12,QWORD PTR [RSP+128]
            mov RDI,RBP
            mov RSI,R12
            call .L_42c5f0

            test EAX,EAX
            je .L_428ba0

            lea RDX,QWORD PTR [R12+72]
            movsd XMM0,QWORD PTR [RIP+.L_42df60]
            mov RAX,R12
.L_428888:

            movsd XMM1,QWORD PTR [RAX]
            add RAX,24
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-24],XMM1
            movsd XMM1,QWORD PTR [RAX-16]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-16],XMM1
            movsd XMM1,QWORD PTR [RAX-8]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-8],XMM1
            cmp RAX,RDX
            jne .L_428888

            mov ESI,1918128707
            mov RDI,RBX
            call .L_404230

            mov ESI,1733579331
            mov RDI,RBX
            mov R14,RAX
            call .L_404230

            mov ESI,1649693251
            mov RDI,RBX
            mov RBP,RAX
            call .L_404230

            test R14,R14
            mov R15,RAX
            sete DL
            test RBP,RBP
            sete AL
            or DL,AL
            jne .L_428ba0

            test R15,R15
            je .L_428ba0

            mov RDI,R14
            call .L_422d60

            mov RDI,RBP
            mov QWORD PTR [RSP+16],RAX
            call .L_422d60

            mov RDI,R15
            mov QWORD PTR [RSP+24],RAX
            call .L_422d60

            cmp QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+32],RAX
            je .L_428ba0

            cmp QWORD PTR [RSP+24],0
            je .L_428ba0

            test RAX,RAX
            je .L_428ba0

            mov EDX,3
            mov ESI,3
            mov RDI,R13
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_428c70

            mov RDI,RBX
            call .L_403510

            cmp EAX,1281450528
            je .L_428b60
.L_428980:

            xor R8D,R8D
            mov RCX,R12
            mov EDX,3
            mov ESI,3
            mov RDI,R13
            lea RBX,QWORD PTR [RSP+16]
            call .L_42a230

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428b88

            mov RDX,RBX
            mov ESI,3
            mov RDI,R13
            call .L_42af10

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428b88
.L_4289dd:

            mov RDI,RBX
            call .L_422950

            jmp .L_428ba2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4289f0:

            mov RDI,RBX
            call .L_402dd0

            mov ESI,EBP
            mov RDI,RBX
            mov R13,RAX
            call .L_404230

            mov RDI,RAX
            call .L_42b9f0

            mov RDI,RBX
            mov RBP,RAX
            call .L_403510

            mov RDI,RBX
            mov R12D,EAX
            call .L_403530

            test RBP,RBP
            mov EBX,EAX
            je .L_428ba0

            cmp R12D,1281450528
            je .L_428c80

            cmp R12D,1482250784
            je .L_428cd8
.L_428a48:

            cmp EBX,1281450528
            je .L_428ca8

            cmp EBX,1482250784
            jne .L_428ba2

            mov RDI,R13
            call .L_42ad90
.L_428a68:

            mov RDX,RAX
            mov ESI,1
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_428ba2

            jmp .L_428b90
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428a88:

            call .L_402dd0

            mov ESI,1800688195
            mov RDI,RBX
            mov R12,RAX
            call .L_404230

            test RAX,RAX
            je .L_428ba0

            mov RDI,RAX
            call .L_422d60

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_428ba0

            mov EDX,1
            mov ESI,3
            mov RDI,R12
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_428b4a

            mov RDI,RBX
            call .L_403510

            xor R8D,R8D
            cmp EAX,1281450528
            lea RCX,QWORD PTR [RIP+.L_432810]
            jne .L_428af6

            lea RCX,QWORD PTR [RIP+.L_4327f0]
.L_428af6:

            mov EDX,3
            mov ESI,1
            mov RDI,R12
            call .L_42a230

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428cb8

            lea RDX,QWORD PTR [RSP+8]
            mov ESI,1
            mov RDI,R12
            call .L_42af10

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428cb8
.L_428b4a:

            mov RDI,QWORD PTR [RSP+8]
            call .L_422930

            jmp .L_428ba2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428b60:

            mov RDI,R13
            lea RBX,QWORD PTR [RSP+16]
            call .L_42ac90

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_428980

            nop
            nop
            nop
.L_428b88:

            mov RDI,RBX
            call .L_422950
.L_428b90:

            mov RDI,RBP
            call .L_42b910

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428ba0:

            xor EBP,EBP
.L_428ba2:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_428cf5

            add RSP,216
.L_428bc3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_428bd0:

            mov ESI,R12D
            mov RDI,RBX
            call .L_404230

            test RAX,RAX
            mov RBP,RAX
            je .L_428ba0

            mov ESI,R12D
            mov RDI,RBX
            call .L_404580

            mov RDI,RBP
            mov R12D,EAX
            call .L_42b9f0

            test RAX,RAX
            mov RBP,RAX
            je .L_428ba0

            mov RDI,RBX
            call .L_403510

            cmp EAX,1281450528
            je .L_428ce8
.L_428c14:

            cmp R12D,1835430962
            jne .L_428ba2

            mov RDI,RBX
            call .L_403510

            cmp EAX,1281450528
            jne .L_428ba2

            mov RDI,R13
            call .L_42ad20

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428b90

            mov RDI,RBX
            call .L_403530

            cmp EAX,1281450528
            jne .L_428ba2

            mov RDI,R13
            call .L_42acf0

            jmp .L_428a68
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428c70:

            lea RBX,QWORD PTR [RSP+16]
            jmp .L_4289dd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428c80:

            mov RDI,R13
            call .L_42adc0
.L_428c88:

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_428a48

            jmp .L_428b90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428ca8:

            mov RDI,R13
            call .L_42ad50

            jmp .L_428a68
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428cb8:

            mov RDI,QWORD PTR [RSP+8]
            call .L_422930

            mov RDI,RBP
            xor EBP,EBP
            call .L_42b910

            jmp .L_428ba2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428cd8:

            mov RDI,R13
            call .L_42ae00

            jmp .L_428c88
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428ce8:

            mov RDI,RBP
            call .L_428020

            jmp .L_428c14
.L_428cf5:

            call __stack_chk_fail@PLT
.L_428cfa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_428d00:

            push R13
            push R12
            push RBP
            push RBX
            movsxd RBP,ESI
            mov RBX,RDI
            sub RSP,8
.L_428d10:

            call .L_402dd0

            cmp EBP,3
            ja .L_428f40

            mov R12,RAX
            lea RAX,QWORD PTR [RIP+.L_4328a0]
            mov RDI,RBX
            mov R13D,DWORD PTR [RAX+RBP*4]
            lea RAX,QWORD PTR [RIP+.L_432890]
            mov EBP,DWORD PTR [RAX+RBP*4]
            call .L_403550

            cmp EAX,1852662636
            je .L_428eb8

            mov ESI,EBP
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            jne .L_428e20

            mov ESI,1144144432
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            jne .L_428f50

            mov ESI,R13D
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            jne .L_428d9a

            mov ESI,1093812784
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            je .L_428f40

            mov R13D,1093812784
.L_428d9a:

            mov ESI,R13D
            mov RDI,RBX
            call .L_404230

            test RAX,RAX
            je .L_428f40

            mov RDI,RAX
            call .L_42b9f0

            test RAX,RAX
            mov RBP,RAX
            je .L_428f40

            mov RDI,RBX
            call .L_403510

            cmp EAX,1281450528
            je .L_428fc0
.L_428dd5:

            mov ESI,R13D
            mov RDI,RBX
            call .L_404580

            cmp EAX,1835430962
            jne .L_428f42

            mov RDI,RBX
            call .L_403530

            cmp EAX,1281450528
            je .L_428fd0
.L_428dfe:

            mov RDI,RBX
            call .L_403510

            cmp EAX,1281450528
            jne .L_428f42

            mov RDI,R12
            call .L_42acf0

            jmp .L_428e94
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428e20:

            mov RDI,RBX
            call .L_402dd0

            mov ESI,EBP
            mov RDI,RBX
            mov R13,RAX
            call .L_404230

            mov RDI,RAX
            call .L_42b9f0

            mov RDI,RBX
            mov RBP,RAX
            call .L_403510

            mov RDI,RBX
            mov R12D,EAX
            call .L_403530

            test RBP,RBP
            je .L_428f40

            cmp EAX,1281450528
            je .L_428f70

            cmp EAX,1482250784
            je .L_428fb0
.L_428e72:

            cmp R12D,1281450528
            je .L_428fa0

            cmp R12D,1482250784
            jne .L_428f42

            mov RDI,R13
            call .L_42ad90
.L_428e94:

            mov RDX,RAX
            mov ESI,1
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_428f42

            jmp .L_428f8d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428eb8:

            mov ESI,1852009522
            mov RDI,RBX
            call .L_404230

            test RAX,RAX
            mov R13,RAX
            je .L_428f40

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R12
            call .L_42b7d0

            test RAX,RAX
            mov RBP,RAX
            je .L_428f30

            xor ESI,ESI
            mov RDI,R13
            call .L_410d90

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            je .L_428f30

            mov RDI,RBX
            call .L_403530

            cmp EAX,1281450528
            jne .L_428f42

            mov RDI,R12
            call .L_42acf0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_428f42

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428f30:

            mov RDI,RBP
            call .L_42b910

            mov RDI,R13
            call .L_4109e0
.L_428f40:

            xor EBP,EBP
.L_428f42:

            add RSP,8
.L_428f46:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_428f50:

            mov RDI,RBX
            mov ESI,1144144432
            call .L_404230

            add RSP,8
            mov RDI,RAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_42b9f0
          .byte 0x90
.L_428f70:

            mov RDI,R13
            call .L_42adc0
.L_428f78:

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_428e72
.L_428f8d:

            mov RDI,RBP
            xor EBP,EBP
            call .L_42b910

            jmp .L_428f42
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428fa0:

            mov RDI,R13
            call .L_42ad50

            jmp .L_428e94
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428fb0:

            mov RDI,R13
            call .L_42ae00

            jmp .L_428f78
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428fc0:

            mov RDI,RBP
            call .L_428020

            jmp .L_428dd5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428fd0:

            mov RDI,R12
            call .L_42ad20

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_42bb10

            test EAX,EAX
            jne .L_428dfe

            jmp .L_428f8d
.L_428fef:

            nop
.L_428ff0:

            push RBX
            mov RBX,RDI
            call .L_403530

            cmp EAX,1196573017
            je .L_429020

            cmp EAX,1380401696
            jne .L_429018

            mov ESI,1918392666
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            jne .L_429030
.L_429018:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429020:

            mov RDI,RBX
            mov ESI,1800688195
            pop RBX
            jmp .L_402ea0
          .byte 0x66
          .byte 0x90
.L_429030:

            mov ESI,1733843290
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            je .L_429018

            mov ESI,1649957210
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            je .L_429018

            mov ESI,1918128707
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            je .L_429018

            mov ESI,1733579331
            mov RDI,RBX
            call .L_402ea0

            test EAX,EAX
            je .L_429018

            mov RDI,RBX
            mov ESI,1649693251
            call .L_402ea0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            pop RBX

            ret 
.L_42908b:

            nop
            nop
            nop
            nop
            nop
.L_429090:

            push RBX
            mov RBX,RDI
            call .L_4290c0

            test EAX,EAX
            je .L_4290a8

            mov EAX,1
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4290a8:

            mov RDI,RBX
            pop RBX
            jmp .L_428ff0
.L_4290b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4290c0:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            call .L_403550

            cmp EAX,1818848875
            je .L_429190

            cmp R12D,1
            je .L_429150

            jb .L_429108

            cmp R12D,2
            jne .L_429120

            xor EDX,EDX
            mov ESI,EBP
            mov RDI,RBX
            call .L_429090

            mov EDX,EAX
            xor EAX,EAX
            test EDX,EDX
            jne .L_429170
.L_4290fe:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429108:

            lea RAX,QWORD PTR [RIP+.L_4328a0]
            mov RDI,RBX
            pop RBX
            mov ESI,DWORD PTR [RAX+RBP*4]
            pop RBP
            pop R12
            jmp .L_402ea0
          .byte 0x66
          .byte 0x90
.L_429120:

            mov RDI,RBX
            call .L_402dd0

            lea RDX,QWORD PTR [RIP+.L_43279d]
            mov ECX,R12D
            mov RDI,RAX
            mov ESI,2
            xor EAX,EAX
            call .L_421420

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429150:

            lea RAX,QWORD PTR [RIP+.L_432880]
            mov RDI,RBX
            pop RBX
            mov ESI,DWORD PTR [RAX+RBP*4]
            pop RBP
            pop R12
            jmp .L_402ea0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429170:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_429090

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_4290fe
          .byte 0x90
.L_429190:

            mov RDI,RBX
            call .L_403410

            cmp EAX,EBP
            sete AL
            pop RBX
            movzx EAX,AL
            pop RBP
            pop R12
            ret 
.L_4291a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4291b0:

            push R14
            push R13
            mov ESI,1886610801
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            call .L_404230

            mov RDI,RBP
            mov RBX,RAX
            mov ESI,1886611812
            call .L_404230

            test RBX,RBX
            mov RBP,RAX
            jne .L_4291e6

            test RAX,RAX
            je .L_429280
.L_4291e6:

            test RBX,RBX
            mov RDI,RBP
            je .L_4291fd

            test RBP,RBP
            mov RDI,RBX
            je .L_4291fd

            mov EAX,DWORD PTR [RBP]
            cmp DWORD PTR [RBX],EAX
            je .L_429210
.L_4291fd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_410f50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429210:

            call .L_410f50

            test RAX,RAX
            mov R13,RAX
            je .L_429280

            mov EAX,DWORD PTR [RBX]
            test EAX,EAX
            je .L_42926c

            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429230:

            mov RDX,QWORD PTR [RBP+16]
            mov EAX,R12D
            add R12D,1
            shl RAX,6
            movdqu XMM0,XMMWORD PTR [RDX+RAX*1+20]
            mov RDX,QWORD PTR [R13+16]
            movups XMMWORD PTR [RDX+RAX*1+20],XMM0
            mov RDX,QWORD PTR [RBP+16]
            mov R14,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RDX+RAX*1+56]
            add R14,RAX
            call .L_4104d0

            cmp DWORD PTR [RBX],R12D
            mov QWORD PTR [R14+56],RAX
            ja .L_429230
.L_42926c:

            pop RBX
.L_42926d:

            mov RAX,R13
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429280:

            xor R13D,R13D
            pop RBX
            mov RAX,R13
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_42928f:

            nop
.L_429290:

            push RBP
            push RBX
            mov RDX,RSI
            mov RBP,RSI
            mov ESI,1886610801
            mov RBX,RDI
            sub RSP,8
            call .L_4045e0

            test EAX,EAX
            jne .L_4292b8
.L_4292ad:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4292b8:

            mov RDI,RBX
            call .L_403570

            mov EDX,EAX
            mov EAX,1
            cmp EDX,67108863
            jbe .L_4292ad

            mov RDX,RBP
            mov RDI,RBX
            mov ESI,1886611812
            call .L_4045e0

            test EAX,EAX
            setne AL
            add RSP,8
            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
.L_4292ee:

            nop
            nop
.L_4292f0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov EBX,ESI
            sub RSP,8
.L_429303:

            call .L_410e10

            test RAX,RAX
            mov R15,RAX
            je .L_4293d0

            test EBX,EBX
            je .L_4293d0

            lea R14D,DWORD PTR [RBX-1]
            xor R12D,R12D
            add R14,1
            shl R14,6
            jmp .L_429375
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429330:

            mov EAX,DWORD PTR [RAX]
            mov DWORD PTR [RBX+16],EAX
.L_429335:

            mov ESI,1684893284
            mov RDI,RBP
            add R12,64
            call .L_428090

            mov ESI,1684890724
            mov RDI,RBP
            mov QWORD PTR [RBX+40],RAX
            call .L_428090

            mov ESI,1684370275
            mov QWORD PTR [RBX+48],RAX
            mov RDI,RBP
            call .L_428090

            add R13,8
            cmp R12,R14
            mov QWORD PTR [RBX+56],RAX
            je .L_4293d0
.L_429375:

            mov RBX,QWORD PTR [R15+16]
            mov RBP,QWORD PTR [R13]
            add RBX,R12
            mov RDI,RBP
            lea RSI,QWORD PTR [RBX+8]
            call .L_4034a0

            lea RSI,QWORD PTR [RBX+20]
            mov RDI,RBP
            call .L_4034c0

            mov RDI,RBP
            call .L_403450

            mov RDI,RBP
            mov DWORD PTR [RBX],EAX
            call .L_403480

            mov ESI,1952801640
            mov DWORD PTR [RBX+4],EAX
            mov RDI,RBP
            call .L_404230

            test RAX,RAX
            jne .L_429330

            mov DWORD PTR [RBX+16],0
            jmp .L_429335
          .byte 0x90
.L_4293d0:

            add RSP,8
.L_4293d4:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4293e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4293f0:

            push R13
            push R12
            mov R13D,R9D
            push RBP
            push RBX
            mov RBP,RCX
            mov RBX,RDX
            mov R12,R8
            sub RSP,8
            call .L_427ef0

            test RAX,RAX
            je .L_429430

            add RSP,8
            mov R8D,R13D
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_4106b0
          .byte 0x66
          .byte 0x90
.L_429430:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42943d:

            nop
            nop
            nop
.L_429440:

            push R13
            push R12
            mov R13D,R9D
            push RBP
            push RBX
            mov RBP,RCX
            mov RBX,RDX
            mov R12,R8
            sub RSP,8
            call .L_427ef0

            test RAX,RAX
            je .L_429480

            add RSP,8
            mov R8D,R13D
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_410590
          .byte 0x66
          .byte 0x90
.L_429480:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42948d:

            nop
            nop
            nop
.L_429490:

            test EDX,EDX
            je .L_429512

            lea ECX,DWORD PTR [RDX-1]
            pxor XMM2,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_42df30]
            xor EDX,EDX
            movsd XMM3,QWORD PTR [RIP+.L_42d568]
            add RCX,1
            movsd XMM5,QWORD PTR [RIP+.L_42df38]
            mov R8D,4294967295
            movsd XMM4,QWORD PTR [RIP+.L_42df40]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4294d0:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtss2sd XMM0,DWORD PTR [RDI+RDX*4]
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_429505

            ucomisd XMM0,XMM1
            mov EAX,R8D
            jae .L_429505

            subsd XMM0,XMM5
            addsd XMM0,XMM4
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_429505:

            mov WORD PTR [RSI+RDX*2],AX
            add RDX,1
            cmp RCX,RDX
            jne .L_4294d0
.L_429512:

            ret 
.L_429514:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429520:

            push R13
            push R12
            push RBP
            push RBX
.L_429526:

            mov EAX,DWORD PTR [RDX+20]
            mov R13,QWORD PTR [RDX+48]
            test EAX,EAX
            je .L_4295b7

            mov EBX,DWORD PTR [RDX+16]
            lea R12D,DWORD PTR [RAX-1]
            mov RBP,QWORD PTR [R13+8]
            xor R11D,R11D
            xor R10D,R10D
            add R12,1
            lea EAX,DWORD PTR [RBX-1]
            lea R9,QWORD PTR [RDI+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_429558:

            test EBX,EBX
            pxor XMM1,XMM1
            je .L_429591

            mov R8,QWORD PTR [R13]
            pxor XMM1,XMM1
            mov EDX,R11D
            mov RAX,RDI
            nop
            nop
.L_429570:

            pxor XMM0,XMM0
            mov ECX,EDX
            add RAX,4
            add EDX,1
            cvtss2sd XMM0,DWORD PTR [RAX-4]
            cmp R9,RAX
            mulsd XMM0,QWORD PTR [R8+RCX*8]
            addsd XMM1,XMM0
            jne .L_429570
.L_429591:

            test RBP,RBP
            je .L_42959d

            addsd XMM1,QWORD PTR [RBP+R10*8]
.L_42959d:

            pxor XMM3,XMM3
            add R11D,EBX
            cvtsd2ss XMM3,XMM1
            movss DWORD PTR [RSI+R10*4],XMM3
            add R10,1
            cmp R12,R10
            jne .L_429558
.L_4295b7:

            pop RBX
.L_4295b8:

            pop RBP
            pop R12
            pop R13
            ret 
.L_4295be:

            nop
            nop
.L_4295c0:

            mov RAX,QWORD PTR [RDX+48]
            mov RDX,QWORD PTR [RAX+8]
            jmp QWORD PTR [RDX+128]
.L_4295ce:

            nop
            nop
.L_4295d0:

            mov EAX,DWORD PTR [RDX]
            test EAX,EAX
            jle .L_4295f1

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
.L_4295e0:

            movzx EDX,WORD PTR [RDI+RAX*1]
            mov WORD PTR [RSI+RAX*1],DX
            add RAX,2
            cmp RAX,RCX
            jne .L_4295e0
.L_4295f1:

            mov EAX,1
            ret 
.L_4295f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429600:

            mov EAX,DWORD PTR [RDX+16]
            test EAX,EAX
            je .L_429636

            pxor XMM1,XMM1
            sub EAX,1
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429620:

            movaps XMM0,XMM1
            maxss XMM0,DWORD PTR [RDI+RAX*1]
            movss DWORD PTR [RSI+RAX*1],XMM0
            add RAX,4
            cmp RAX,RDX
            jne .L_429620
.L_429636:

            ret 
.L_429638:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429640:

            mov RCX,QWORD PTR [RDI]
            test RCX,RCX
            mov RDX,RCX
            jne .L_429653

            jmp .L_429695
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429650:

            mov RDX,RAX
.L_429653:

            mov RAX,QWORD PTR [RDX+56]
            test RAX,RAX
            jne .L_429650

            mov EAX,DWORD PTR [RCX+16]
            mov DWORD PTR [RDI+8],EAX
            mov EAX,DWORD PTR [RDX+20]
            mov DWORD PTR [RDI+12],EAX
            mov RAX,QWORD PTR [RCX+56]
            test RAX,RAX
            je .L_429695

            mov ESI,DWORD PTR [RAX+16]
            cmp DWORD PTR [RCX+20],ESI
            jne .L_4296a0

            mov RDX,RAX
            jmp .L_42968c
          .byte 0x66
          .byte 0x90
.L_429680:

            mov ESI,DWORD PTR [RDX+20]
            cmp DWORD PTR [RAX+16],ESI
            jne .L_4296a0

            mov RDX,QWORD PTR [RDX+56]
.L_42968c:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_429680
.L_429695:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4296a0:

            xor EAX,EAX
            ret 
.L_4296a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4296b0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,1048
.L_4296c7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1032],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+8]
            mov R14,RSP
            test EAX,EAX
            je .L_42971f

            lea ECX,DWORD PTR [RAX-1]
            xor EDX,EDX
            mov R14,RSP
            movss XMM1,DWORD PTR [RIP+.L_42df74]
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429700:

            movzx EAX,WORD PTR [RDI+RDX*2]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,XMM1
            movss DWORD PTR [R14+RDX*4],XMM0
            add RDX,1
            cmp RDX,RCX
            jne .L_429700
.L_42971f:

            mov R13,QWORD PTR [RBP]
            test R13,R13
            je .L_4297a0

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_429730:

            mov R15D,EAX
            movsxd RDI,EAX
            mov RDX,R13
            xor R15D,1
            mov RAX,RDI
            movsxd RBX,R15D
            shl RAX,9
            shl RBX,9
            lea RDI,QWORD PTR [R14+RAX*1]
            add RBX,R14
            mov RSI,RBX
            call QWORD PTR [R13+24]

            mov R13,QWORD PTR [R13+56]
            mov EAX,R15D
            test R13,R13
            jne .L_429730
.L_429765:

            mov EDX,DWORD PTR [RBP+12]
            mov RSI,R12
            mov RDI,RBX
            call .L_429490

            mov RAX,QWORD PTR [RSP+1032]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4297a5

            add RSP,1048
.L_42978d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4297a0:

            mov RBX,R14
            jmp .L_429765
.L_4297a5:

            call __stack_chk_fail@PLT
.L_4297aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4297b0:

            mov EDX,DWORD PTR [RDX+16]
            mov RAX,RDI
            mov RDI,RSI
            mov RSI,RAX
            shl RDX,2
            jmp memmove@PLT
.L_4297c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4297d0:

            push R15
            push R14
            mov ECX,1024
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov R13,RSI
            mov RSI,RDI
            sub RSP,1048
.L_4297ef:

            mov EDX,DWORD PTR [RDX+8]
            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1032],RAX
            xor EAX,EAX
            shl RDX,2
            call __memmove_chk@PLT

            mov R14,QWORD PTR [R12]
            test R14,R14
            je .L_429890

            xor EDI,EDI
            nop
.L_429820:

            mov R15D,EDI
            shl RDI,9
            mov RDX,R14
            xor R15D,1
            add RDI,RBP
            movsxd RBX,R15D
            shl RBX,9
            add RBX,RBP
            mov RSI,RBX
            call QWORD PTR [R14+24]

            mov R14,QWORD PTR [R14+56]
            movsxd RDI,R15D
            test R14,R14
            jne .L_429820
.L_42984e:

            mov EDX,DWORD PTR [R12+12]
            mov RSI,RBX
            mov RDI,R13
            shl RDX,2
            call memcpy@PLT

            mov RAX,QWORD PTR [RSP+1032]
            xor RAX,QWORD PTR FS:[40]
            jne .L_429895

            add RSP,1048
.L_42987c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429890:

            mov RBX,RBP
            jmp .L_42984e
.L_429895:

            call __stack_chk_fail@PLT
.L_42989a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4298a0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov ESI,16
            push RBP
            push RBX
            sub RSP,8
.L_4298b6:

            mov R13,QWORD PTR [RDI+48]
            mov RDI,QWORD PTR [RDI]
            call .L_4210e0

            test RAX,RAX
            mov R12,RAX
            je .L_429977

            mov ESI,DWORD PTR [R13]
            mov RDI,QWORD PTR [R14]
            mov EDX,8
            mov DWORD PTR [RAX],ESI
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R12+8],RAX
            je .L_42995e

            mov ECX,DWORD PTR [R12]
            test ECX,ECX
            je .L_429977

            xor EBP,EBP
            jmp .L_429909
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429900:

            add EBP,1
            cmp DWORD PTR [R12],EBP
            jbe .L_429977
.L_429909:

            mov EBX,EBP
            lea R15,QWORD PTR [RAX+RBX*8]
            mov RAX,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [RAX+RBX*8]
            call .L_4229c0

            mov QWORD PTR [R15],RAX
            mov RAX,QWORD PTR [R12+8]
            cmp QWORD PTR [RAX+RBX*8],0
            jne .L_429900

            test RAX,RAX
            je .L_42995e

            mov EDX,DWORD PTR [R12]
            test EDX,EDX
            je .L_42995e

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_429940:

            mov EDX,EBX
            mov RDI,QWORD PTR [RAX+RDX*8]
            test RDI,RDI
            je .L_429955

            call .L_422930

            mov RAX,QWORD PTR [R12+8]
.L_429955:

            add EBX,1
            cmp DWORD PTR [R12],EBX
            ja .L_429940
.L_42995e:

            mov RDI,QWORD PTR [R14]
            mov RSI,RAX
            call .L_421170

            mov RDI,QWORD PTR [R14]
            mov RSI,R12
            xor R12D,R12D
            call .L_421170
.L_429977:

            add RSP,8
.L_42997b:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_429989:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429990:

            push RBP
            push RBX
            sub RSP,8
            mov RBP,QWORD PTR [RDI+48]
            test RBP,RBP
            je .L_4299e0

            mov RSI,QWORD PTR [RBP]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RSI,RSI
            je .L_4299b6

            call .L_421170

            mov RDI,QWORD PTR [RBX]
.L_4299b6:

            mov RSI,QWORD PTR [RBP+8]
            test RSI,RSI
            je .L_4299c7

            call .L_421170

            mov RDI,QWORD PTR [RBX]
.L_4299c7:

            mov RSI,QWORD PTR [RBX+48]
            add RSP,8
            pop RBX
            pop RBP
            jmp .L_421170
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4299e0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4299e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4299f0:

            push R12
            push RBP
            mov ESI,16
            push RBX
.L_4299f9:

            mov RBX,RDI
            mov R12,QWORD PTR [RDI+48]
            mov RDI,QWORD PTR [RDI]
            call .L_4210e0

            test RAX,RAX
            mov RBP,RAX
            je .L_429a4a

            mov EDX,DWORD PTR [RBX+16]
            mov RSI,QWORD PTR [R12]
            imul EDX,DWORD PTR [RBX+20]
            mov RDI,QWORD PTR [RBX]
            shl EDX,3
            call .L_421190

            mov RSI,QWORD PTR [R12+8]
            mov QWORD PTR [RBP],RAX
            test RSI,RSI
            je .L_429a4a

            mov EAX,DWORD PTR [RBX+20]
            mov RDI,QWORD PTR [RBX]
            lea EDX,DWORD PTR [RAX*8]
            call .L_421190

            mov QWORD PTR [RBP+8],RAX
.L_429a4a:

            mov RAX,RBP
            pop RBX
.L_429a4e:

            pop RBP
            pop R12
            ret 
.L_429a52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429a60:

            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_429a67:

            mov RBP,QWORD PTR [RDI+48]
            mov ESI,24
            mov RDI,QWORD PTR [RDI]
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_429adb

            mov EAX,DWORD PTR [RBP+16]
            mov RSI,QWORD PTR [RBP]
            mov RDI,QWORD PTR [R12]
            mov DWORD PTR [RBX+16],EAX
            mov EAX,DWORD PTR [RBP+20]
            test RSI,RSI
            mov DWORD PTR [RBX+20],EAX
            je .L_429af0

            mov EAX,DWORD PTR [RBP+20]
            mov EDX,DWORD PTR [RBP+16]
            test EAX,EAX
            jne .L_429ae8

            add EDX,EDX
.L_429aa5:

            call .L_421190

            test RAX,RAX
            mov R8,RAX
            mov QWORD PTR [RBX],RAX
            je .L_429b09

            mov RDI,QWORD PTR [R12]
.L_429ab9:

            mov R9,QWORD PTR [RBP+8]
            mov ECX,DWORD PTR [R9+16]
            mov EDX,DWORD PTR [R9+12]
            lea RSI,QWORD PTR [R9+20]
            mov R9D,DWORD PTR [R9+8]
            call .L_427d30

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_429af8
.L_429adb:

            mov RAX,RBX
            pop RBX
.L_429adf:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429ae8:

            shl EDX,2
            jmp .L_429aa5

            nop
            nop
            nop
.L_429af0:

            mov R8,QWORD PTR [RBX]
            jmp .L_429ab9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429af8:

            mov RSI,QWORD PTR [RBX]
            mov RDI,QWORD PTR [R12]
            test RSI,RSI
            je .L_429b09

            call .L_421170
.L_429b09:

            mov RDI,QWORD PTR [R12]
            mov RSI,RBX
            xor EBX,EBX
            call .L_421170

            jmp .L_429adb
.L_429b19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429b20:

            push RBP
            push RBX
            sub RSP,8
            mov RBP,QWORD PTR [RDI+48]
            test RBP,RBP
            je .L_429b60

            mov RSI,QWORD PTR [RBP]
            mov RBX,RDI
            test RSI,RSI
            je .L_429b43

            mov RDI,QWORD PTR [RDI]
            call .L_421170
.L_429b43:

            mov RDI,QWORD PTR [RBP+8]
            call .L_427ed0

            mov RSI,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX]
            add RSP,8
            pop RBX
            pop RBP
            jmp .L_421170
          .byte 0x66
          .byte 0x90
.L_429b60:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_429b67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429b70:

            push RBX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            mov RBX,RSI
            sub RSP,64
.L_429b80:

            cvtss2sd XMM0,DWORD PTR [RDI]
            lea RSI,QWORD PTR [RSP+32]
            mov RDX,RSP
            cvtss2sd XMM1,DWORD PTR [RDI+4]
            mulsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            movsd XMM3,QWORD PTR [RIP+.L_42df58]
            movsd XMM2,QWORD PTR [RIP+.L_42df50]
            mulsd XMM1,XMM3
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP],XMM0
            pxor XMM0,XMM0
            subsd XMM1,XMM2
            cvtss2sd XMM0,DWORD PTR [RDI+8]
            xor EDI,EDI
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40ade0

            movsd XMM1,QWORD PTR [RIP+.L_42df60]
            movsd XMM0,QWORD PTR [RSP+32]
            pxor XMM4,XMM4
            divsd XMM0,XMM1
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            pxor XMM5,XMM5
            pxor XMM6,XMM6
            cvtsd2ss XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+40]
            divsd XMM0,XMM1
            movss DWORD PTR [RBX],XMM4
            cvtsd2ss XMM5,XMM0
            movsd XMM0,QWORD PTR [RSP+48]
            divsd XMM0,XMM1
            movss DWORD PTR [RBX+4],XMM5
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RBX+8],XMM6
            jne .L_429c4c

            add RSP,64
.L_429c4a:

            pop RBX
            ret 
.L_429c4c:

            call __stack_chk_fail@PLT
.L_429c51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429c60:

            push RBX
            pxor XMM0,XMM0
            mov RBX,RSI
            sub RSP,64
.L_429c6c:

            movsd XMM1,QWORD PTR [RIP+.L_42df60]
            lea RDX,QWORD PTR [RSP+32]
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+4]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+8]
            xor EDI,EDI
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM0
            call .L_40ac70

            movsd XMM0,QWORD PTR [RSP]
            pxor XMM3,XMM3
            divsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RIP+.L_42df58]
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            cvtsd2ss XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42df50]
            addsd XMM1,XMM0
            addsd XMM0,QWORD PTR [RSP+16]
            divsd XMM1,XMM2
            movss DWORD PTR [RBX],XMM3
            divsd XMM0,XMM2
            cvtsd2ss XMM4,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RBX+4],XMM4
            movss DWORD PTR [RBX+8],XMM5
            jne .L_429d38

            add RSP,64
.L_429d36:

            pop RBX
            ret 
.L_429d38:

            call __stack_chk_fail@PLT
.L_429d3d:

            nop
            nop
            nop
.L_429d40:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            sub RSP,528
.L_429d4e:

            mov R10,QWORD PTR [RDX+48]
            mov EDX,DWORD PTR [RDX+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            cmp EDX,128
            ja .L_429e0e

            cmp DWORD PTR [R12+20],128
            ja .L_429e32

            mov R9,RSP
            mov RBP,RSI
            lea RBX,QWORD PTR [RSP+256]
            mov RSI,R9
            call .L_429490

            mov RAX,QWORD PTR [R10+8]
            mov RSI,RBX
            mov RDI,R9
            mov RDX,RAX
            call QWORD PTR [RAX+128]

            mov EAX,DWORD PTR [R12+20]
            test EAX,EAX
            je .L_429def

            lea ECX,DWORD PTR [RAX-1]
            xor EDX,EDX
            movss XMM1,DWORD PTR [RIP+.L_42df74]
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429dd0:

            movzx EAX,WORD PTR [RBX+RDX*2]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,XMM1
            movss DWORD PTR [RBP+RDX*4],XMM0
            add RDX,1
            cmp RCX,RDX
            jne .L_429dd0
.L_429def:

            mov RAX,QWORD PTR [RSP+520]
            xor RAX,QWORD PTR FS:[40]
            jne .L_429e2d

            add RSP,528
.L_429e09:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_429e0e:

            lea RCX,QWORD PTR [RIP+.L_432ca0]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_4328c1]
            mov EDX,456
            call __assert_fail@PLT
.L_429e2d:

            call __stack_chk_fail@PLT
.L_429e32:

            lea RCX,QWORD PTR [RIP+.L_432ca0]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_4328de]
            mov EDX,457
            call __assert_fail@PLT
.L_429e51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429e60:

            test RDI,RDI
            je .L_429eac

            test ESI,ESI
            je .L_429ea5

            lea EAX,DWORD PTR [RSI-1]
            mov ECX,DWORD PTR [RDI+RAX*4]
            mov RSI,RAX
            test ECX,ECX
            je .L_429e9a

            mov EAX,ECX
            mul ECX
            jno .L_429e96

            jmp .L_429ea0
          .byte 0x66
          .byte 0x90
.L_429e80:

            lea EAX,DWORD PTR [RSI-1]
            mov EDX,DWORD PTR [RDI+RAX*4]
            mov RSI,RAX
            test EDX,EDX
            je .L_429ea0

            imul ECX,EDX
            mov EAX,EDX
            mul ECX
            jo .L_429ea0
.L_429e96:

            test ESI,ESI
            jne .L_429e80
.L_429e9a:

            mov EAX,ECX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429ea0:

            xor ECX,ECX
            mov EAX,ECX
            ret 
.L_429ea5:

            mov ECX,1
            jmp .L_429e9a
.L_429eac:

            lea RCX,QWORD PTR [RIP+.L_432c90]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_4328fc]
            sub RSP,8

            mov EDX,471
            call __assert_fail@PLT
.L_429ecf:

            nop
.L_429ed0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_429ed7:

            je .L_429f3d

            mov RBP,QWORD PTR [RDI+48]
            mov R12,RDI
            test RBP,RBP
            je .L_429f38

            mov RSI,QWORD PTR [RBP+8]
            test RSI,RSI
            je .L_429f1c

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_429f1c

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429f00:

            mov EAX,EBX
            mov RDI,QWORD PTR [RSI+RAX*8]
            test RDI,RDI
            je .L_429f14

            call .L_422930

            mov RSI,QWORD PTR [RBP+8]
.L_429f14:

            add EBX,1
            cmp DWORD PTR [RBP],EBX
            ja .L_429f00
.L_429f1c:

            mov RDI,QWORD PTR [R12]
            call .L_421170

            pop RBX
.L_429f26:

            mov RSI,RBP
            mov RDI,QWORD PTR [R12]
            pop RBP
            pop R12
            jmp .L_421170
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429f38:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_429f3d:

            lea RCX,QWORD PTR [RIP+.L_432cf0]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432912]
            mov EDX,192
            call __assert_fail@PLT
.L_429f5c:

            nop
            nop
            nop
            nop
.L_429f60:

            test RDX,RDX
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_429f6b:

            je .L_429fc0

            mov RBP,QWORD PTR [RDX+48]
            test RBP,RBP
            je .L_429fb7

            mov RDX,QWORD PTR [RBP+8]
            test RDX,RDX
            je .L_429fb7

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_429fb7

            mov R12,RDI
            mov R13,RSI
            xor EBX,EBX
            jmp .L_429f94
.L_429f90:

            mov RDX,QWORD PTR [RBP+8]
.L_429f94:

            mov EAX,EBX
            add EBX,1
            mov RDI,QWORD PTR [RDX+RAX*8]
            movss XMM0,DWORD PTR [R12+RAX*4]
            lea R14,QWORD PTR [R13+RAX*4]
            call .L_4237f0

            cmp DWORD PTR [RBP],EBX
            movss DWORD PTR [R14],XMM0
            ja .L_429f90
.L_429fb7:

            pop RBX
.L_429fb8:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_429fc0:

            lea RCX,QWORD PTR [RIP+.L_432ce0]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432912]
            mov EDX,174
            call __assert_fail@PLT
.L_429fdf:

            nop
.L_429fe0:

            push R15
            push R14
            mov R15D,EDX
            push R13
            push R12
            mov R14D,ECX
            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,64
            mov RBX,RDI
            mov R13,R8
            sub RSP,8
            mov R12,R9
            call .L_4210e0

            test RAX,RAX
            je .L_42a039

            mov RDX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],EBP
            mov DWORD PTR [RAX+12],EBP
            mov DWORD PTR [RAX+16],R15D
            mov DWORD PTR [RAX+20],R14D
            mov QWORD PTR [RAX+40],RDX
            mov RDX,QWORD PTR [RSP+72]
            mov QWORD PTR [RAX+24],R13
            mov QWORD PTR [RAX+32],R12
            mov QWORD PTR [RAX+48],RDX
.L_42a039:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a048:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a050:

            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,64
            mov RBX,RDI
            sub RSP,8
.L_42a060:

            call .L_4210e0

            test RAX,RAX
            je .L_42a0a4

            lea RDX,QWORD PTR [RIP+.L_4297b0]
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],1768189472
            mov DWORD PTR [RAX+12],1768189472
            mov DWORD PTR [RAX+16],EBP
            mov DWORD PTR [RAX+20],EBP
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
.L_42a0a4:

            add RSP,8
.L_42a0a8:

            pop RBX
            pop RBP
            ret 
.L_42a0ab:

            nop
            nop
            nop
            nop
            nop
.L_42a0b0:

            push RBX
            sub RSP,80
.L_42a0b5:

            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            mov RCX,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RCX,RCX
            je .L_42a170

            mov RAX,RCX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a0f0:

            mov RAX,QWORD PTR [RAX+56]
            add EDX,1
            test RAX,RAX
            jne .L_42a0f0

            cmp ESI,EDX
            je .L_42a120
.L_42a100:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42a19b

            add RSP,80
.L_42a118:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a120:

            lea RAX,QWORD PTR [RSP+96]
            test ESI,ESI
            mov DWORD PTR [RSP],16
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            je .L_42a191

            lea R10,QWORD PTR [RSP+96]
            mov R11,RAX
            mov R9D,16
            mov RAX,RCX
            xor EBX,EBX
            xor R8D,R8D
            xor EDX,EDX
.L_42a157:

            cmp R9D,47
            ja .L_42a1a0

            mov EDI,R9D
            mov R8D,1
            add R9D,8
            add RDI,R11
            jmp .L_42a1ac
          .byte 0x90
.L_42a170:

            xor EAX,EAX
            test ESI,ESI
            jne .L_42a100

            lea RAX,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP],16
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
.L_42a191:

            mov EAX,1
            jmp .L_42a100
.L_42a19b:

            call __stack_chk_fail@PLT
.L_42a1a0:

            mov RDI,R10
            mov EBX,1
            add R10,8
.L_42a1ac:

            mov EDI,DWORD PTR [RDI]
            cmp DWORD PTR [RAX+8],EDI
            jne .L_42a208

            add EDX,1
            mov RAX,QWORD PTR [RAX+56]
            cmp ESI,EDX
            jne .L_42a157

            test R8B,R8B
            jne .L_42a218
.L_42a1c3:

            test BL,BL
            je .L_42a1cc

            mov QWORD PTR [RSP+8],R10
.L_42a1cc:

            mov EDI,DWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+8]
            xor EAX,EAX
.L_42a1d6:

            cmp EDI,47
            ja .L_42a20f

            mov ESI,EDI
            add EDI,8
            add RSI,R11
.L_42a1e3:

            mov RSI,QWORD PTR [RSI]
            test RSI,RSI
            je .L_42a1ee

            mov QWORD PTR [RSI],RCX
.L_42a1ee:

            add EAX,1
            mov RCX,QWORD PTR [RCX+56]
            cmp EAX,EDX
            jne .L_42a1d6

            mov EAX,1
            jmp .L_42a100
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a208:

            xor EAX,EAX
            jmp .L_42a100
.L_42a20f:

            mov RSI,R8
            add R8,8
            jmp .L_42a1e3
.L_42a218:

            mov DWORD PTR [RSP],R9D
            jmp .L_42a1c3
.L_42a21e:

            nop
            nop
.L_42a220:

            mov RAX,QWORD PTR [RDI+48]
            mov RAX,QWORD PTR [RAX+8]
            ret 
.L_42a229:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a230:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ESI
            imul R12D,EDX
            push RBP
            push RBX
            sub RSP,24
.L_42a245:

            test R12D,R12D
            je .L_42a3c8

            mov R9D,4294967295
            mov R15D,EDX
            xor EDX,EDX
            mov EAX,R9D
            div R15D
            cmp EAX,R12D
            jbe .L_42a3c8

            xor EDX,EDX
            mov EAX,R9D
            div ESI
            cmp EAX,R12D
            jbe .L_42a3c8

            cmp ESI,R12D
            ja .L_42a3c8

            cmp R15D,R12D
            ja .L_42a3c8

            mov DWORD PTR [RSP+12],ESI
            mov ESI,64
            mov RBP,R8
            mov R13,RCX
            mov R14,RDI
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_42a3c8

            mov DWORD PTR [RAX+16],R15D
            mov QWORD PTR [RAX],R14
            mov ESI,16
            mov DWORD PTR [RAX+8],1835103334
            mov DWORD PTR [RAX+12],1835103334
            mov RDI,R14
            mov EAX,DWORD PTR [RSP+12]
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+20],EAX
            lea RAX,QWORD PTR [RIP+.L_429520]
            mov QWORD PTR [RBX+24],RAX
            lea RAX,QWORD PTR [RIP+.L_4299f0]
            mov QWORD PTR [RBX+32],RAX
            lea RAX,QWORD PTR [RIP+.L_429990]
            mov QWORD PTR [RBX+40],RAX
            call .L_4210e0

            test RAX,RAX
            mov R15,RAX
            je .L_42a3c8

            mov EDX,8
            mov ESI,R12D
            mov RDI,R14
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            je .L_42a3ba

            lea EDX,DWORD PTR [R12-1]
            lea RCX,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a340:

            movsd XMM0,QWORD PTR [R13+RDX*1]
            movsd QWORD PTR [RAX+RDX*1],XMM0
            add RDX,8
            cmp RCX,RDX
            jne .L_42a340

            test RBP,RBP
            je .L_42a3a4

            mov R13D,DWORD PTR [RSP+12]
            mov EDX,8
            mov RDI,R14
            mov ESI,R13D
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_42a3ba

            test R13D,R13D
            je .L_42a3a4

            mov EDI,DWORD PTR [RSP+12]
            lea EDX,DWORD PTR [RDI-1]
            lea RCX,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
.L_42a390:

            movsd XMM0,QWORD PTR [RBP+RDX*1]
            movsd QWORD PTR [RAX+RDX*1],XMM0
            add RDX,8
            cmp RCX,RDX
            jne .L_42a390
.L_42a3a4:

            mov QWORD PTR [RBX+48],R15
.L_42a3a8:

            add RSP,24
.L_42a3ac:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a3ba:

            mov RDI,RBX
            call .L_429990

            nop
            nop
            nop
            nop
            nop
            nop
.L_42a3c8:

            xor EBX,EBX
            jmp .L_42a3a8
.L_42a3cc:

            nop
            nop
            nop
            nop
.L_42a3d0:

            pxor XMM1,XMM1
            sub EDI,1
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            xor EAX,EAX
            cvtsi2sd XMM1,EDI
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            pxor XMM1,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42d568]
            ucomisd XMM1,XMM0
            jae .L_42a425

            ucomisd XMM0,XMM2
            mov EAX,4294967295
            jae .L_42a425

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,QWORD PTR [RIP+.L_42df40]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_42a425:

            ret 
.L_42a427:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a430:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,408
.L_42a441:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+392],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_42a485

            mov RBP,QWORD PTR [RDI+48]
            test RBP,RBP
            je .L_42a485

            mov RBX,QWORD PTR [RBP+8]
            mov R13,RSI
            mov R14,RDX
            mov R12D,DWORD PTR [RBX+16]
            mov ESI,DWORD PTR [RBX+12]
            lea EAX,DWORD PTR [R12-1]
            lea EDX,DWORD PTR [RSI-1]
            cmp EAX,126
            ja .L_42a485

            cmp EDX,7
            jbe .L_42a4b0
.L_42a485:

            xor EAX,EAX
.L_42a487:

            mov RSI,QWORD PTR [RSP+392]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42a6b0

            add RSP,408
.L_42a4a5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a4b0:

            lea R8,QWORD PTR [RSP+128]
            xor EAX,EAX
            mov R15D,ECX
            mov WORD PTR [RSP+112],AX
            mov ECX,32
            xor EAX,EAX
            mov RDI,R8
            pxor XMM0,XMM0

            rep stosq QWORD PTR [RDI]

            add RBX,20
            mov DWORD PTR [RSP+16],EDX
            mov QWORD PTR [RSP+8],R8
            mov RDI,RBX
            movaps XMMWORD PTR [RSP+96],XMM0
            call .L_429e60

            cmp EAX,0
            mov DWORD PTR [RSP+88],EAX
            je .L_42a485

            mov R8,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+16]
            jle .L_42a6a6

            mov EAX,R12D
            lea RCX,QWORD PTR [RSP+96]
            xor ESI,ESI
            add RAX,RAX
            pxor XMM3,XMM3
            mov QWORD PTR [RSP+80],RAX
            movsxd RAX,EDX
            mov EDX,EDX
            mov QWORD PTR [RSP+56],RAX
            sub RAX,RDX
            xor R10D,R10D
            mov R9,RAX
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            sub R9,1
            movsd XMM4,QWORD PTR [RIP+.L_42d568]
            mov QWORD PTR [RSP+48],RBP
            mov QWORD PTR [RSP+64],R13
            mov R11D,4294967295
            mov QWORD PTR [RSP+72],R14
            mov DWORD PTR [RSP+92],R15D
            mov R14D,R12D
            mov RBP,R9
            mov R13D,R10D
            mov R12,RSI
            mov R15,RCX
            nop
            nop
            nop
            nop
            nop
.L_42a570:

            mov RDI,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RIP+.L_42df40]
            mov EAX,R13D
.L_42a580:

            mov ECX,DWORD PTR [RBX+RDI*4]
            xor EDX,EDX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            div ECX
            sub ECX,1
            cvtsi2sd XMM1,ECX
            cvtsi2sd XMM0,EDX
            xor EDX,EDX
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jae .L_42a5d0

            ucomisd XMM0,XMM2
            mov EDX,R11D
            jae .L_42a5d0

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,XMM5
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_42a5d0:

            mov WORD PTR [R15+RDI*2],DX
            sub RDI,1
            cmp RBP,RDI
            jne .L_42a580

            mov RAX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_42a60a

            lea RSI,QWORD PTR [RDX+R12*1]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a5f8:

            movzx EDX,WORD PTR [RSI+RAX*2]
            mov WORD PTR [R8+RAX*2],DX
            add RAX,1
            cmp R14D,EAX
            jg .L_42a5f8
.L_42a60a:

            mov DWORD PTR [RSP+44],R11D
            movsd QWORD PTR [RSP+32],XMM3
            mov RDX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+24],XMM4
            mov RSI,R8
            mov QWORD PTR [RSP+8],R8
            movsd QWORD PTR [RSP+16],XMM2
            mov RDI,R15
            mov RAX,QWORD PTR [RSP+64]
            call RAX

            test EAX,EAX
            je .L_42a485

            test DWORD PTR [RSP+92],16777216
            mov R8,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+44]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            jne .L_42a692

            mov RAX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_42a692

            lea RSI,QWORD PTR [RDX+R12*1]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a680:

            movzx EDX,WORD PTR [R8+RAX*2]
            mov WORD PTR [RSI+RAX*2],DX
            add RAX,1
            cmp R14D,EAX
            jg .L_42a680
.L_42a692:

            add R13D,1
            add R12,QWORD PTR [RSP+80]
            cmp DWORD PTR [RSP+88],R13D
            jne .L_42a570
.L_42a6a6:

            mov EAX,1
            jmp .L_42a487
.L_42a6b0:

            call __stack_chk_fail@PLT
.L_42a6b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a6c0:

            push R15
            push R14
            mov R8,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,680
.L_42a6d4:

            mov R12,QWORD PTR [RDI+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+664],RAX
            xor EAX,EAX
            mov RBX,QWORD PTR [R12+8]
            mov EBP,DWORD PTR [RBX+16]
            mov ESI,DWORD PTR [RBX+12]
            lea EAX,DWORD PTR [RBP-1]
            cmp EAX,126
            ja .L_42a708

            lea R13D,DWORD PTR [RSI-1]
            cmp R13D,7
            jbe .L_42a738
.L_42a708:

            xor EAX,EAX
.L_42a70a:

            mov RSI,QWORD PTR [RSP+664]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42a952

            add RSP,680
.L_42a728:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a738:

            add RBX,20
            mov DWORD PTR [RSP+24],ECX
            mov QWORD PTR [RSP+16],RDX
            mov RDI,RBX
            mov QWORD PTR [RSP+8],R8
            call .L_429e60

            cmp EAX,0
            mov DWORD PTR [RSP+88],EAX
            je .L_42a708

            mov R8,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+16]
            mov ECX,DWORD PTR [RSP+24]
            jle .L_42a948

            mov EAX,EBP
            movsxd RSI,R13D
            lea R15,QWORD PTR [RSP+144]
            shl RAX,2
            mov QWORD PTR [RSP+56],RSI
            xor R11D,R11D
            mov QWORD PTR [RSP+80],RAX
            mov EAX,R13D
            xor R10D,R10D
            sub RSI,RAX
            pxor XMM4,XMM4
            mov R14,RSI
            pxor XMM3,XMM3
            sub R14,1
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            movsd XMM5,QWORD PTR [RIP+.L_42d568]
            lea R13,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+48],R12
            mov QWORD PTR [RSP+64],R8
            mov R12,R14
            mov R8,R15
            movss XMM6,DWORD PTR [RIP+.L_42df6c]
            mov R15D,EBP
            mov R14D,R10D
            mov QWORD PTR [RSP+72],R9
            mov DWORD PTR [RSP+92],ECX
            mov RBP,R11
            nop
            nop
            nop
            nop
.L_42a7e8:

            mov RDI,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RIP+.L_42df40]
            mov EAX,R14D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a800:

            mov ECX,DWORD PTR [RBX+RDI*4]
            xor EDX,EDX
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            div ECX
            sub ECX,1
            cvtsi2sd XMM0,ECX
            cvtsi2sd XMM1,EDX
            mulsd XMM1,XMM2
            divsd XMM1,XMM0
            movaps XMM0,XMM3
            addsd XMM1,XMM5
            ucomisd XMM4,XMM1
            jae .L_42a864

            ucomisd XMM1,XMM2
            movaps XMM0,XMM6
            jae .L_42a864

            subsd XMM1,QWORD PTR [RIP+.L_42df38]
            pxor XMM0,XMM0
            addsd XMM1,XMM7
            movq RDX,XMM1
            sar EDX,16
            add DX,32767
            movzx EDX,DX
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM2
            cvtsd2ss XMM0,XMM0
.L_42a864:

            movss DWORD PTR [R13+RDI*4],XMM0
            sub RDI,1
            cmp R12,RDI
            jne .L_42a800

            mov RAX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_42a8a4

            xor EAX,EAX
            add RDX,RBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a890:

            movss XMM0,DWORD PTR [RDX+RAX*4]
            movss DWORD PTR [R8+RAX*4],XMM0
            add RAX,1
            cmp R15D,EAX
            jg .L_42a890
.L_42a8a4:

            movss DWORD PTR [RSP+44],XMM6
            mov RDX,QWORD PTR [RSP+72]
            mov RSI,R8
            movss DWORD PTR [RSP+40],XMM3
            mov QWORD PTR [RSP+8],R8
            mov RDI,R13
            movsd QWORD PTR [RSP+32],XMM4
            mov RAX,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            call RAX

            test EAX,EAX
            je .L_42a708

            test DWORD PTR [RSP+92],16777216
            mov R8,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+32]
            movss XMM3,DWORD PTR [RSP+40]
            movss XMM6,DWORD PTR [RSP+44]
            jne .L_42a934

            mov RAX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_42a934

            xor EAX,EAX
            add RDX,RBP
.L_42a920:

            movss XMM0,DWORD PTR [R8+RAX*4]
            movss DWORD PTR [RDX+RAX*4],XMM0
            add RAX,1
            cmp R15D,EAX
            jg .L_42a920
.L_42a934:

            add R14D,1
            add RBP,QWORD PTR [RSP+80]
            cmp DWORD PTR [RSP+88],R14D
            jne .L_42a7e8
.L_42a948:

            mov EAX,1
            jmp .L_42a70a
.L_42a952:

            call __stack_chk_fail@PLT
.L_42a957:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a960:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp EDI,15
            jbe .L_42a9b0
.L_42a983:

            xor EAX,EAX
.L_42a985:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42aad4

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a9b0:

            mov R14,RSI
            mov R15D,EDI
            mov ESI,EDI
            mov RDI,R14
            mov RBX,RDX
            mov RBP,RCX
            call .L_429e60

            cmp EAX,0
            mov DWORD PTR [RSP+28],EAX
            je .L_42a983

            jle .L_42aaca

            lea R13,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            movsd XMM4,QWORD PTR [RIP+.L_42d568]
            sub R15D,1
            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a9f8:

            cmp R15D,-1
            je .L_42aa91

            movsxd RCX,R15D
            mov EAX,R15D
            mov EDI,4294967295
            mov RSI,RCX
            pxor XMM3,XMM3
            sub RSI,RAX
            movsd XMM5,QWORD PTR [RIP+.L_42df40]
            sub RSI,1
            mov EAX,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aa30:

            mov R9D,DWORD PTR [R14+RCX*4]
            xor EDX,EDX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            div R9D
            sub R9D,1
            cvtsi2sd XMM1,R9D
            cvtsi2sd XMM0,EDX
            xor EDX,EDX
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jae .L_42aa82

            ucomisd XMM0,XMM2
            mov EDX,EDI
            jae .L_42aa82

            subsd XMM0,QWORD PTR [RIP+.L_42df38]
            addsd XMM0,XMM5
            movd EDX,XMM0
            sar EDX,16
            add DX,32767
.L_42aa82:

            mov WORD PTR [R13+RCX*2],DX
            sub RCX,1
            cmp RSI,RCX
            jne .L_42aa30
.L_42aa91:

            xor ESI,ESI
            movsd QWORD PTR [RSP+16],XMM4
            mov RDX,RBP
            movsd QWORD PTR [RSP+8],XMM2
            mov RDI,R13
            call RBX

            test EAX,EAX
            je .L_42a983

            add R12D,1
            cmp DWORD PTR [RSP+28],R12D
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            jne .L_42a9f8
.L_42aaca:

            mov EAX,1
            jmp .L_42a985
.L_42aad4:

            call __stack_chk_fail@PLT
.L_42aad9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aae0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            cmp EDI,15
            jbe .L_42ab30
.L_42ab03:

            xor EAX,EAX
.L_42ab05:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42ac7f

            add RSP,120
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ab30:

            mov R14,RSI
            mov R15D,EDI
            mov ESI,EDI
            mov RDI,R14
            mov RBX,RDX
            mov RBP,RCX
            call .L_429e60

            cmp EAX,0
            mov DWORD PTR [RSP+28],EAX
            je .L_42ab03

            jle .L_42ac75

            pxor XMM4,XMM4
            lea R13,QWORD PTR [RSP+32]
            sub R15D,1
            movsd XMM2,QWORD PTR [RIP+.L_42df30]
            xor R12D,R12D
            movsd XMM5,QWORD PTR [RIP+.L_42d568]
            nop
            nop
            nop
.L_42ab78:

            cmp R15D,-1
            je .L_42ac30

            movsxd RSI,R15D
            mov EAX,R15D
            mov RDI,RSI
            pxor XMM3,XMM3
            sub RDI,RAX
            movsd XMM8,QWORD PTR [RIP+.L_42df38]
            movsd XMM7,QWORD PTR [RIP+.L_42df40]
            sub RDI,1
            mov EAX,R12D
            movss XMM6,DWORD PTR [RIP+.L_42df6c]
            nop
            nop
            nop
            nop
            nop
            nop
.L_42abb8:

            mov R8D,DWORD PTR [R14+RSI*4]
            xor EDX,EDX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            div R8D
            sub R8D,1
            cvtsi2sd XMM1,R8D
            cvtsi2sd XMM0,EDX
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            movaps XMM1,XMM4
            addsd XMM0,XMM5
            ucomisd XMM3,XMM0
            jae .L_42ac20

            ucomisd XMM0,XMM2
            movaps XMM1,XMM6
            jae .L_42ac20

            subsd XMM0,XMM8
            pxor XMM1,XMM1
            addsd XMM0,XMM7
            movd EDX,XMM0
            pxor XMM0,XMM0
            sar EDX,16
            add DX,32767
            movzx EDX,DX
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM2
            cvtsd2ss XMM1,XMM0
.L_42ac20:

            movss DWORD PTR [R13+RSI*4],XMM1
            sub RSI,1
            cmp RSI,RDI
            jne .L_42abb8
.L_42ac30:

            xor ESI,ESI
            movss DWORD PTR [RSP+24],XMM4
            mov RDX,RBP
            movsd QWORD PTR [RSP+16],XMM5
            mov RDI,R13
            movsd QWORD PTR [RSP+8],XMM2
            call RBX

            test EAX,EAX
            je .L_42ab03

            add R12D,1
            cmp DWORD PTR [RSP+28],R12D
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            movss XMM4,DWORD PTR [RSP+24]
            jne .L_42ab78
.L_42ac75:

            mov EAX,1
            jmp .L_42ab05
.L_42ac7f:

            call __stack_chk_fail@PLT
.L_42ac84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ac90:

            push RBX

            mov ESI,64
            mov RBX,RDI
            call .L_4210e0

            test RAX,RAX
            je .L_42ace5

            lea RCX,QWORD PTR [RIP+.L_429b70]
            movabs RDX,12884901891
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],2016570400
            mov DWORD PTR [RAX+12],2016570400
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [RAX+24],RCX
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
.L_42ace5:

            pop RBX

            ret 
.L_42ace7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42acf0:

            lea RCX,QWORD PTR [RIP+.L_432c20]
            sub RSP,8
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42a230

            test RAX,RAX
            je .L_42ad19

            mov DWORD PTR [RAX+12],840971296
.L_42ad19:

            add RSP,8
            ret 
.L_42ad1e:

            nop
            nop
.L_42ad20:

            lea RCX,QWORD PTR [RIP+.L_432bc0]
            sub RSP,8
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42a230

            test RAX,RAX
            je .L_42ad49

            mov DWORD PTR [RAX+12],874525216
.L_42ad49:

            add RSP,8
            ret 
.L_42ad4e:

            nop
            nop
.L_42ad50:

            lea R8,QWORD PTR [RIP+.L_432b30]
            lea RCX,QWORD PTR [RIP+.L_432b60]
            sub RSP,8
            mov EDX,3
            mov ESI,3
            call .L_42a230

            test RAX,RAX
            je .L_42ad7d

            mov DWORD PTR [RAX+12],1681026080
.L_42ad7d:

            add RSP,8
            ret 
.L_42ad82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ad90:

            lea RCX,QWORD PTR [RIP+.L_432ae0]
            sub RSP,8
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42a230

            test RAX,RAX
            je .L_42adb9

            mov DWORD PTR [RAX+12],1681029152
.L_42adb9:

            add RSP,8
            ret 
.L_42adbe:

            nop
            nop
.L_42adc0:

            lea R8,QWORD PTR [RIP+.L_432a50]
            lea RCX,QWORD PTR [RIP+.L_432a80]
            sub RSP,8
            mov EDX,3
            mov ESI,3
            call .L_42a230

            test RAX,RAX
            je .L_42aded

            mov DWORD PTR [RAX+12],1815241760
.L_42aded:

            add RSP,8
            ret 
.L_42adf2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ae00:

            lea RCX,QWORD PTR [RIP+.L_432a00]
            sub RSP,8
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42a230

            test RAX,RAX
            je .L_42ae29

            mov DWORD PTR [RAX+12],2016568352
.L_42ae29:

            add RSP,8
            ret 
.L_42ae2e:

            nop
            nop
.L_42ae30:

            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,64
            mov RBX,RDI
            sub RSP,8
.L_42ae40:

            call .L_4210e0

            test RAX,RAX
            je .L_42ae84

            lea RDX,QWORD PTR [RIP+.L_429600]
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],1668050976
            mov DWORD PTR [RAX+12],1668050976
            mov DWORD PTR [RAX+16],EBP
            mov DWORD PTR [RAX+20],EBP
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
.L_42ae84:

            add RSP,8
.L_42ae88:

            pop RBX
            pop RBP
            ret 
.L_42ae8b:

            nop
            nop
            nop
            nop
            nop
.L_42ae90:

            push RBX

            mov ESI,64
            mov RBX,RDI
            call .L_4210e0

            test RAX,RAX
            je .L_42aee5

            lea RCX,QWORD PTR [RIP+.L_429c60]
            movabs RDX,12884901891
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],1815246880
            mov DWORD PTR [RAX+12],1815246880
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [RAX+24],RCX
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
.L_42aee5:

            pop RBX

            ret 
.L_42aee7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aef0:

            push RBX
            mov RAX,QWORD PTR [RDI+40]
            mov RBX,RDI
            test RAX,RAX
            je .L_42aeff

            call RAX
.L_42aeff:

            mov RSI,RBX
            mov RDI,QWORD PTR [RBX]
            pop RBX
            jmp .L_421170
.L_42af0b:

            nop
            nop
            nop
            nop
            nop
.L_42af10:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov EBX,ESI
            mov ESI,64
            sub RSP,24
.L_42af2b:

            call .L_4210e0

            test RAX,RAX
            mov RBP,RAX
            je .L_42b023

            mov QWORD PTR [RAX],R14
            mov DWORD PTR [RAX+8],1668707188
            mov ESI,16
            mov DWORD PTR [RAX+12],1668707188
            mov DWORD PTR [RAX+16],EBX
            mov RDI,R14
            mov DWORD PTR [RAX+20],EBX
            lea RAX,QWORD PTR [RIP+.L_429f60]
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+24],RAX
            lea RAX,QWORD PTR [RIP+.L_4298a0]
            mov QWORD PTR [RBP+32],RAX
            lea RAX,QWORD PTR [RIP+.L_429ed0]
            mov QWORD PTR [RBP+40],RAX
            call .L_4210e0

            test RAX,RAX
            mov R13,RAX
            je .L_42b019

            mov QWORD PTR [RBP+48],RAX
            mov EDX,8
            mov DWORD PTR [RAX],EBX
            mov ESI,EBX
            mov RDI,R14
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R13+8],RAX
            je .L_42b019

            test EBX,EBX
            je .L_42b023

            lea EDX,DWORD PTR [RBX-1]
            xor R15D,R15D
            lea RDX,QWORD PTR [RDX*8+8]
            mov QWORD PTR [RSP+8],RDX
            jmp .L_42aff2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42afd0:

            mov RDI,QWORD PTR [R12+R15*1]
            call .L_4229c0

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [R13+8]
            cmp QWORD PTR [RAX+R15*1],0
            je .L_42b019
.L_42afe7:

            add R15,8
            cmp QWORD PTR [RSP+8],R15
            je .L_42b023
.L_42aff2:

            test R12,R12
            lea RBX,QWORD PTR [RAX+R15*1]
            jne .L_42afd0

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov RDI,R14
            call .L_422910

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [R13+8]
            cmp QWORD PTR [RAX+R15*1],0
            jne .L_42afe7
.L_42b019:

            mov RDI,RBP
            xor EBP,EBP
            call .L_42aef0
.L_42b023:

            add RSP,24
.L_42b027:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42b035:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b040:

            sub RSP,8
            xor EDX,EDX
            call .L_42af10

            test RAX,RAX
            je .L_42b057

            mov DWORD PTR [RAX+12],1768189472
.L_42b057:

            add RSP,8
            ret 
.L_42b05c:

            nop
            nop
            nop
            nop
.L_42b060:

            push RBP
            push RBX
            xor EDX,EDX
            mov RBX,RDI
            mov ESI,258
            sub RSP,40
.L_42b070:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_422570

            xor EDX,EDX
            mov ESI,258
            mov RDI,RBX
            mov QWORD PTR [RSP],RAX
            mov RBP,RSP
            call .L_422570

            mov ESI,258
            xor EDX,EDX
            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call .L_422570

            xor ESI,ESI
            mov QWORD PTR [RSP+16],RAX
.L_42b0b6:

            mov RAX,QWORD PTR [RBP+RSI*8]
            test RAX,RAX
            je .L_42b13b

            mov RDI,QWORD PTR [RAX+48]
            mov EAX,128
            mov RDX,RDI
            nop
            nop
            nop
            nop
.L_42b0d0:

            mov ECX,EAX
            add EAX,65535
            add RDX,2
            sar ECX,8
            mov WORD PTR [RDX-2],CX
            cmp EAX,16842623
            jne .L_42b0d0

            add RSI,1
            mov EAX,4294967295
            cmp RSI,3
            mov WORD PTR [RDI+514],AX
            jne .L_42b0b6

            mov RDI,RBX
            mov RDX,RBP
            call .L_42af10

            mov RDI,RBP
            mov RBX,RAX
            call .L_422950

            test RBX,RBX
            je .L_42b121

            mov DWORD PTR [RBX+12],840971296
.L_42b121:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42b147

            add RSP,40
.L_42b138:

            pop RBX
            pop RBP
            ret 
.L_42b13b:

            mov RDI,RBP
            xor EBX,EBX
            call .L_422950

            jmp .L_42b121
.L_42b147:

            call __stack_chk_fail@PLT
.L_42b14c:

            nop
            nop
            nop
            nop
.L_42b150:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_42b159:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_42f368]
            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            lea RBP,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],RAX
            call .L_422910

            mov RDX,RBP
            mov ESI,108
            mov RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_4227e0

            mov RDX,RBP
            mov ESI,108
            mov RDI,RBX
            mov QWORD PTR [RSP+24],RAX
            call .L_4227e0

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,3
            mov RDI,RBX
            mov QWORD PTR [RSP+32],RAX
            call .L_42af10

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42b1df

            add RSP,56
.L_42b1dc:

            pop RBX
            pop RBP
            ret 
.L_42b1df:

            call __stack_chk_fail@PLT
.L_42b1e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b1f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_42b1fe:

            test RSI,RSI
            mov DWORD PTR [RSP+8],ECX
            je .L_42b367

            cmp EDX,8
            mov RBP,RDI
            mov R12D,EDX
            ja .L_42b348

            mov R13,RSI
            mov ESI,64
            mov R14,R8
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_42b323

            mov QWORD PTR [RAX],RBP
            mov DWORD PTR [RAX+8],1668052340
            mov ESI,24
            mov DWORD PTR [RAX+12],1668052340
            mov DWORD PTR [RAX+16],R12D
            mov RDI,RBP
            mov EAX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+20],EAX
            lea RAX,QWORD PTR [RIP+.L_429d40]
            mov QWORD PTR [RBX+24],RAX
            lea RAX,QWORD PTR [RIP+.L_429a60]
            mov QWORD PTR [RBX+32],RAX
            lea RAX,QWORD PTR [RIP+.L_429b20]
            mov QWORD PTR [RBX+40],RAX
            call .L_4210e0

            test RAX,RAX
            mov R15,RAX
            je .L_42b338

            mov QWORD PTR [RBX+48],RAX
            mov ESI,R12D
            mov RDI,R13
            call .L_429e60

            imul EAX,DWORD PTR [RSP+8]
            mov DWORD PTR [R15+20],0
            test EAX,EAX
            mov DWORD PTR [R15+16],EAX
            je .L_42b338

            mov EDX,2
            mov ESI,EAX
            mov RDI,RBP
            mov DWORD PTR [RSP+12],EAX
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            mov ECX,DWORD PTR [RSP+12]
            je .L_42b338

            test R14,R14
            je .L_42b302

            lea EDX,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RDX+RDX*1+2]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b2f0:

            movzx ECX,WORD PTR [R14+RDX*1]
            mov WORD PTR [RAX+RDX*1],CX
            add RDX,2
            cmp RSI,RDX
            jne .L_42b2f0
.L_42b302:

            mov ECX,DWORD PTR [RSP+8]
            xor R9D,R9D
            mov R8,RAX
            mov EDX,R12D
            mov RSI,R13
            mov RDI,RBP
            call .L_427d30

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_42b338
.L_42b323:

            add RSP,24
.L_42b327:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b338:

            mov RDI,RBX
            xor EBX,EBX
            call .L_42aef0

            jmp .L_42b323
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b348:

            mov ECX,EDX
            lea RDX,QWORD PTR [RIP+.L_432730]
            mov R8D,8
            mov ESI,2
            xor EAX,EAX
            xor EBX,EBX
            call .L_421420

            jmp .L_42b323
.L_42b367:

            lea RCX,QWORD PTR [RIP+.L_432cc0]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432927]
            mov EDX,560
            call __assert_fail@PLT
.L_42b386:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b390:

            sub RSP,56
.L_42b394:

            mov DWORD PTR [RSP],ESI
            mov DWORD PTR [RSP+4],ESI
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+16],ESI
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+24],ESI
            mov DWORD PTR [RSP+28],ESI
            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_42b1f0

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_42b3e0

            add RSP,56
.L_42b3df:

            ret 
.L_42b3e0:

            call __stack_chk_fail@PLT
.L_42b3e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b3f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_42b3fe:

            test RSI,RSI
            mov DWORD PTR [RSP+8],ECX
            je .L_42b56f

            cmp EDX,8
            mov RBP,RDI
            mov R12D,EDX
            ja .L_42b550

            mov R13,RSI
            mov ESI,64
            mov R14,R8
            call .L_4210e0

            test RAX,RAX
            mov RBX,RAX
            je .L_42b528

            mov QWORD PTR [RAX],RBP
            mov DWORD PTR [RAX+8],1668052340
            mov ESI,24
            mov DWORD PTR [RAX+12],1668052340
            mov DWORD PTR [RAX+16],R12D
            mov RDI,RBP
            mov EAX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+20],EAX
            lea RAX,QWORD PTR [RIP+.L_4295c0]
            mov QWORD PTR [RBX+24],RAX
            lea RAX,QWORD PTR [RIP+.L_429a60]
            mov QWORD PTR [RBX+32],RAX
            lea RAX,QWORD PTR [RIP+.L_429b20]
            mov QWORD PTR [RBX+40],RAX
            call .L_4210e0

            test RAX,RAX
            mov R15,RAX
            je .L_42b540

            mov QWORD PTR [RBX+48],RAX
            mov ESI,R12D
            mov RDI,R13
            call .L_429e60

            imul EAX,DWORD PTR [RSP+8]
            mov DWORD PTR [R15+20],1
            test EAX,EAX
            mov DWORD PTR [R15+16],EAX
            je .L_42b540

            mov EDX,4
            mov ESI,EAX
            mov RDI,RBP
            mov DWORD PTR [RSP+12],EAX
            call .L_421110

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            mov ECX,DWORD PTR [RSP+12]
            je .L_42b540

            test R14,R14
            je .L_42b504

            lea EDX,DWORD PTR [RCX-1]
            lea RCX,QWORD PTR [RDX*4+4]
            xor EDX,EDX
            nop
            nop
            nop
.L_42b4f0:

            movss XMM0,DWORD PTR [R14+RDX*1]
            movss DWORD PTR [RAX+RDX*1],XMM0
            add RDX,4
            cmp RCX,RDX
            jne .L_42b4f0
.L_42b504:

            mov ECX,DWORD PTR [RSP+8]
            mov R9D,1
            mov R8,RAX
            mov EDX,R12D
            mov RSI,R13
            mov RDI,RBP
            call .L_427d30

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_42b540
.L_42b528:

            add RSP,24
.L_42b52c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b540:

            mov RDI,RBX
            xor EBX,EBX
            call .L_42aef0

            jmp .L_42b528
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b550:

            mov ECX,EDX
            lea RDX,QWORD PTR [RIP+.L_432730]
            mov R8D,8
            mov ESI,2
            xor EAX,EAX
            xor EBX,EBX
            call .L_421420

            jmp .L_42b528
.L_42b56f:

            lea RCX,QWORD PTR [RIP+.L_432c70]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432927]
            mov EDX,651
            call __assert_fail@PLT
.L_42b58e:

            nop
            nop
.L_42b590:

            sub RSP,56
.L_42b594:

            mov DWORD PTR [RSP],ESI
            mov DWORD PTR [RSP+4],ESI
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+16],ESI
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+24],ESI
            mov DWORD PTR [RSP+28],ESI
            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_42b3f0

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_42b5e0

            add RSP,56
.L_42b5df:

            ret 
.L_42b5e0:

            call __stack_chk_fail@PLT
.L_42b5e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b5f0:

            push RBX
            mov EDX,ESI
            xor R8D,R8D
            mov ECX,EDX
            sub RSP,64
.L_42b5fc:

            mov DWORD PTR [RSP+12],ESI
            lea RSI,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movabs RAX,8589934594
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+40],RAX
            call .L_42b1f0

            test RAX,RAX
            mov RBX,RAX
            je .L_42b661

            lea RDX,QWORD PTR [RSP+12]
            lea RSI,QWORD PTR [RIP+.L_4295d0]
            xor ECX,ECX
            mov RDI,RAX
            call .L_42a430

            test EAX,EAX
            je .L_42b680

            mov DWORD PTR [RBX+12],1768189472
.L_42b661:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_42b68c

            add RSP,64
.L_42b678:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b680:

            mov RDI,RBX
            xor EBX,EBX
            call .L_42aef0

            jmp .L_42b661
.L_42b68c:

            call __stack_chk_fail@PLT
.L_42b691:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b6a0:

            mov EAX,DWORD PTR [RDI+16]
            ret 
.L_42b6a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b6b0:

            mov EAX,DWORD PTR [RDI+20]
            ret 
.L_42b6b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b6c0:

            mov EAX,DWORD PTR [RDI+8]
            ret 
.L_42b6c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b6d0:

            mov RAX,QWORD PTR [RDI+48]
            ret 
.L_42b6d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b6e0:

            mov RAX,QWORD PTR [RDI+56]
            ret 
.L_42b6e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b6f0:

            test RDI,RDI
            je .L_42b7c0

            push R15
            push R14
            mov ESI,64
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_42b70f:

            mov R12,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+40]
            mov RCX,QWORD PTR [RDI+32]
            mov R13,QWORD PTR [RDI+24]
            mov R14D,DWORD PTR [RDI+20]
            mov R15D,DWORD PTR [RDI+16]
            mov EBP,DWORD PTR [RDI+8]
            mov RDI,R12
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],RCX
            call .L_4210e0

            test RAX,RAX
            mov RDX,RAX
            je .L_42b7b8

            mov RCX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+12],EBP
            mov QWORD PTR [RAX],R12
            mov DWORD PTR [RAX+8],EBP
            mov DWORD PTR [RAX+16],R15D
            mov DWORD PTR [RAX+20],R14D
            mov QWORD PTR [RAX+32],RCX
            mov QWORD PTR [RAX+24],R13
            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RDX+48],0
            mov QWORD PTR [RDX+40],RAX
            mov EAX,DWORD PTR [RBX+12]
            mov DWORD PTR [RDX+12],EAX
            mov RAX,QWORD PTR [RBX+32]
            test RAX,RAX
            je .L_42b795

            mov QWORD PTR [RSP],RDX
            mov RDI,RBX
            call RAX

            mov RDX,QWORD PTR [RSP]
            test RAX,RAX
            mov QWORD PTR [RDX+48],RAX
            je .L_42b7b0
.L_42b795:

            add RSP,24
.L_42b799:

            mov RAX,RDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b7b0:

            mov RDI,RDX
            call .L_42aef0
.L_42b7b8:

            xor EDX,EDX
            jmp .L_42b795
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b7c0:

            xor EDX,EDX
            mov RAX,RDX
            ret 
.L_42b7c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b7d0:

            cmp ESI,15
            ja .L_42b870

            cmp EDX,15
            ja .L_42b870

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_42b7e9:

            mov EBX,ESI
            mov ESI,72
            mov EBP,EDX
            call .L_4210e0

            test RAX,RAX
            mov R8,RAX
            je .L_42b85b

            mov DWORD PTR [RAX+8],EBX
            mov DWORD PTR [RAX+12],EBP
            lea RAX,QWORD PTR [RIP+.L_4296b0]
            mov QWORD PTR [R8+48],0
            mov QWORD PTR [R8+40],0
            mov RDI,R8
            mov QWORD PTR [R8+24],RAX
            lea RAX,QWORD PTR [RIP+.L_4297d0]
            mov QWORD PTR [R8+16],R8
            mov QWORD PTR [R8+56],R12
            mov QWORD PTR [R8+32],RAX
            call .L_429640

            test EAX,EAX
            je .L_42b850

            pop RBX
.L_42b840:

            mov RAX,R8
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b850:

            mov RSI,R8
            mov RDI,R12
            call .L_421170
.L_42b85b:

            xor R8D,R8D
            pop RBX
            mov RAX,R8
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b870:

            xor R8D,R8D
            mov RAX,R8
            ret 
.L_42b877:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b880:

            test RDI,RDI
            je .L_42b88a

            mov RAX,QWORD PTR [RDI+56]
            ret 
.L_42b88a:

            lea RCX,QWORD PTR [RIP+.L_4329e0]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432943]
            sub RSP,8
            mov EDX,1397
            call __assert_fail@PLT
.L_42b8ad:

            nop
            nop
            nop
.L_42b8b0:

            test RDI,RDI
            je .L_42b8b9

            mov EAX,DWORD PTR [RDI+8]
            ret 
.L_42b8b9:

            lea RCX,QWORD PTR [RIP+.L_4329c0]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432943]
            sub RSP,8
            mov EDX,1403
            call __assert_fail@PLT
.L_42b8dc:

            nop
            nop
            nop
            nop
.L_42b8e0:

            test RDI,RDI
            je .L_42b8e9

            mov EAX,DWORD PTR [RDI+12]
            ret 
.L_42b8e9:

            lea RCX,QWORD PTR [RIP+.L_4329a0]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432943]
            sub RSP,8
            mov EDX,1409
            call __assert_fail@PLT
.L_42b90c:

            nop
            nop
            nop
            nop
.L_42b910:

            test RDI,RDI
            je .L_42b970

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_42b941

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b930:

            mov RBX,QWORD PTR [RDI+56]
            call .L_42aef0

            test RBX,RBX
            mov RDI,RBX
            jne .L_42b930
.L_42b941:

            mov RAX,QWORD PTR [RBP+40]
            mov RDI,QWORD PTR [RBP+56]
            test RAX,RAX
            je .L_42b958

            mov RSI,QWORD PTR [RBP+16]
            call RAX

            mov RDI,QWORD PTR [RBP+56]
.L_42b958:

            add RSP,8
            mov RSI,RBP
            pop RBX
            pop RBP
            jmp .L_421170
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b970:

            ret 
.L_42b972:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b980:

            test RDX,RDX
            je .L_42b98f

            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+16]
            jmp QWORD PTR [RAX+24]
.L_42b98f:

            lea RCX,QWORD PTR [RIP+.L_432980]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432943]
            sub RSP,8
            mov EDX,1437
            call __assert_fail@PLT
.L_42b9b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b9c0:

            test RDX,RDX
            je .L_42b9c8

            jmp QWORD PTR [RDX+32]
.L_42b9c8:

            lea RCX,QWORD PTR [RIP+.L_432960]
            lea RSI,QWORD PTR [RIP+.L_4328b8]
            lea RDI,QWORD PTR [RIP+.L_432943]
            sub RSP,8
            mov EDX,1445
            call __assert_fail@PLT
.L_42b9eb:

            nop
            nop
            nop
            nop
            nop
.L_42b9f0:

            test RDI,RDI
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_42b9fb:

            je .L_42baf4

            mov EDX,DWORD PTR [RDI+12]
            mov ESI,DWORD PTR [RDI+8]
            mov R12,RDI
            mov RDI,QWORD PTR [RDI+56]
            call .L_42b7d0

            test RAX,RAX
            mov R14,RAX
            je .L_42baf4

            mov RBX,QWORD PTR [R12]
            test RBX,RBX
            je .L_42ba71

            mov EBP,1
            xor R13D,R13D
            jmp .L_42ba49
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ba38:

            mov QWORD PTR [R14],RAX
.L_42ba3b:

            mov RBX,QWORD PTR [RBX+56]
            xor EBP,EBP
            mov R13,RAX
            test RBX,RBX
            je .L_42ba71
.L_42ba49:

            mov RDI,RBX
            call .L_42b6f0

            test RAX,RAX
            je .L_42bad0

            test EBP,EBP
            jne .L_42ba38

            test R13,R13
            je .L_42ba3b

            mov QWORD PTR [R13+56],RAX
            mov RBX,QWORD PTR [RBX+56]
            xor EBP,EBP
            mov R13,RAX
            test RBX,RBX
            jne .L_42ba49
.L_42ba71:

            mov RAX,QWORD PTR [R12+24]
            mov RDX,QWORD PTR [R12+40]
            mov QWORD PTR [R14+24],RAX
            mov RAX,QWORD PTR [R12+32]
            mov QWORD PTR [R14+32],RAX
            mov RAX,QWORD PTR [R12+48]
            mov QWORD PTR [R14+40],RDX
            test RAX,RAX
            mov QWORD PTR [R14+48],RAX
            je .L_42baaa

            mov RSI,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [R12+56]
            call RAX

            mov QWORD PTR [R14+16],RAX
.L_42baaa:

            mov EAX,DWORD PTR [R12+64]
            mov RDI,R14
            mov DWORD PTR [R14+64],EAX
            call .L_429640

            test EAX,EAX
            je .L_42bae7

            pop RBX
.L_42bac0:

            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bad0:

            mov RDI,R14
            xor R14D,R14D
            call .L_42b910

            pop RBX
            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_42bae7:

            mov RDI,QWORD PTR [R12+56]
            mov RSI,R14
            call .L_421170
.L_42baf4:

            xor R14D,R14D
            pop RBX
            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_42bb03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bb10:

            test RDI,RDI
            je .L_42bb50

            test RDX,RDX
            je .L_42bb50

            test ESI,ESI
            je .L_42bb58

            cmp ESI,1
            jne .L_42bb50

            mov RCX,QWORD PTR [RDI]
            test RCX,RCX
            jne .L_42bb33

            jmp .L_42bb70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bb30:

            mov RCX,RAX
.L_42bb33:

            mov RAX,QWORD PTR [RCX+56]
            test RAX,RAX
            jne .L_42bb30

            mov QWORD PTR [RCX+56],RDX
            mov QWORD PTR [RDX+56],0
            jmp .L_429640
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bb50:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bb58:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RDX+56],RAX
            mov QWORD PTR [RDI],RDX
.L_42bb62:

            jmp .L_429640
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bb70:

            mov QWORD PTR [RDI],RDX
            jmp .L_42bb62
.L_42bb75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bb80:

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            je .L_42bc00

            test ESI,ESI
            push RBX
.L_42bb8b:

            je .L_42bbd8

            cmp ESI,1
            jne .L_42bc18

            xor ESI,ESI
            jmp .L_42bba6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bba0:

            mov RSI,RAX
            mov RAX,RCX
.L_42bba6:

            mov RCX,QWORD PTR [RAX+56]
            test RCX,RCX
            jne .L_42bba0

            test RSI,RSI
            je .L_42bc20

            test RDX,RDX
            mov QWORD PTR [RSI+56],0
            mov RBX,RDI
            jne .L_42bbef
.L_42bbc4:

            mov RDI,RAX
            call .L_42aef0

            mov RDI,RBX
            pop RBX
.L_42bbd0:

            jmp .L_429640
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bbd8:

            mov RCX,QWORD PTR [RAX+56]
            mov QWORD PTR [RDI],RCX
            mov QWORD PTR [RAX+56],0
.L_42bbe7:

            test RDX,RDX
            mov RBX,RDI
            je .L_42bbc4
.L_42bbef:

            mov RDI,RBX
            mov QWORD PTR [RDX],RAX
            pop RBX
            jmp .L_429640
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bc00:

            test RDX,RDX
            je .L_42bc10

            mov QWORD PTR [RDX],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bc10:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bc18:

            xor EAX,EAX
            jmp .L_42bbe7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42bc20:

            mov QWORD PTR [RDI],0
            jmp .L_42bbe7
.L_42bc29:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bc30:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_42bc39:

            cmp QWORD PTR [RDI],0
            mov RBX,QWORD PTR [RSI]
            je .L_42bcd0

            test RBX,RBX
            je .L_42bc9d

            nop
            nop
            nop
            nop
            nop
.L_42bc50:

            mov RDI,RBX
            call .L_42b6f0

            test RAX,RAX
            je .L_42bcc0

            mov RCX,QWORD PTR [RBP]
            test RCX,RCX
            jne .L_42bc73

            jmp .L_42bcb0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bc70:

            mov RCX,RDX
.L_42bc73:

            mov RDX,QWORD PTR [RCX+56]
            test RDX,RDX
            jne .L_42bc70

            mov QWORD PTR [RCX+56],RAX
            mov RDI,RBP
            mov QWORD PTR [RAX+56],0
            call .L_429640

            test EAX,EAX
            je .L_42bcc0
.L_42bc94:

            mov RBX,QWORD PTR [RBX+56]
            test RBX,RBX
            jne .L_42bc50
.L_42bc9d:

            add RSP,8
.L_42bca1:

            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_429640
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bcb0:

            mov QWORD PTR [RBP],RAX
            mov RDI,RBP
            call .L_429640

            test EAX,EAX
            jne .L_42bc94
.L_42bcc0:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bcd0:

            test RBX,RBX
            jne .L_42bc50

            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RDI+8],EAX
            mov EAX,DWORD PTR [RSI+12]
            mov DWORD PTR [RDI+12],EAX
            jmp .L_42bc9d
.L_42bce7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bcf0:

            mov EAX,DWORD PTR [RDI+64]
            mov DWORD PTR [RDI+64],ESI
            ret 
.L_42bcf7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd00:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_42bd04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd10:

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            jne .L_42bd23

            jmp .L_42bd30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bd20:

            mov RAX,RDX
.L_42bd23:

            mov RDX,QWORD PTR [RAX+56]
            test RDX,RDX
            jne .L_42bd20

            ret 
          .byte 0x66
          .byte 0x90
.L_42bd30:

            ret 
.L_42bd32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd40:

            mov RDX,QWORD PTR [RDI]
            xor EAX,EAX
            test RDX,RDX
            je .L_42bd60

            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd50:

            mov RDX,QWORD PTR [RDX+56]
            add EAX,1
            test RDX,RDX
            jne .L_42bd50

            ret 
          .byte 0x66
          .byte 0x90
.L_42bd60:

            ret 
.L_42bd62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd70:

            mov QWORD PTR [RDI+24],RSI
            mov QWORD PTR [RDI+48],R8
            mov QWORD PTR [RDI+40],RCX
            mov QWORD PTR [RDI+16],RDX
            ret 
.L_42bd81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd90:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,264
.L_42bda4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+248],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+8]
            mov QWORD PTR [RSP+8],RSI
            lea ECX,DWORD PTR [RAX-3]
            cmp ECX,1
            jbe .L_42bdf8
.L_42bdc7:

            xor EAX,EAX
.L_42bdc9:

            mov RSI,QWORD PTR [RSP+248]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42c196

            add RSP,264
.L_42bde7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bdf8:

            cmp DWORD PTR [R14+12],3
            jne .L_42bdc7

            test RDX,RDX
            mov R12,RDI
            je .L_42c158

            movss XMM0,DWORD PTR [RDX]
            movss DWORD PTR [RSP+64],XMM0
            movss XMM0,DWORD PTR [RDX+4]
            movss DWORD PTR [RSP+68],XMM0
            movss XMM0,DWORD PTR [RDX+8]
            movss DWORD PTR [RSP+72],XMM0
.L_42be2b:

            cmp EAX,4
            je .L_42c140

            mov DWORD PTR [RSP+76],0
.L_42be3c:

            movsd XMM7,QWORD PTR [RIP+.L_432d08]
            lea RAX,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+44],30
            movss XMM1,DWORD PTR [RIP+.L_432d18]
            movsd QWORD PTR [RSP],XMM7
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42be70:

            movss DWORD PTR [RSP+16],XMM1
            mov RDX,R14
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R13
            call QWORD PTR [R14+32]

            movss XMM2,DWORD PTR [R12]
            subss XMM2,DWORD PTR [RSP+48]
            movss XMM0,DWORD PTR [R12+4]
            subss XMM0,DWORD PTR [RSP+52]
            pxor XMM6,XMM6
            pxor XMM5,XMM5
            movss XMM1,DWORD PTR [RSP+16]
            mulss XMM2,XMM2
            mulss XMM0,XMM0
            addss XMM2,XMM6
            addss XMM2,XMM0
            movss XMM0,DWORD PTR [R12+8]
            subss XMM0,DWORD PTR [RSP+56]
            mulss XMM0,XMM0
            addss XMM0,XMM2
            ucomiss XMM5,XMM0
            sqrtss XMM2,XMM0
            ja .L_42c174
.L_42bede:

            pxor XMM7,XMM7
            cvtss2sd XMM7,XMM2
            ucomisd XMM7,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM7
            jae .L_42c125

            mov EDX,DWORD PTR [R14+8]
            test EDX,EDX
            je .L_42bf1a

            xor EAX,EAX
.L_42bf01:

            mov RCX,QWORD PTR [RSP+8]
            movss XMM0,DWORD PTR [R13+RAX*4]
            movss DWORD PTR [RCX+RAX*4],XMM0
            add RAX,1
            cmp EDX,EAX
            ja .L_42bf01
.L_42bf1a:

            pxor XMM7,XMM7
            ucomiss XMM7,XMM2
            jae .L_42c125

            lea RAX,QWORD PTR [RSP+96]
            lea RBP,QWORD PTR [RSP+80]
            lea R15,QWORD PTR [RSP+176]
            xor EBX,EBX
            mov QWORD PTR [RSP+16],RAX
.L_42bf40:

            movss XMM0,DWORD PTR [RSP+64]
            pxor XMM2,XMM2
            movss DWORD PTR [RSP+80],XMM0
            movss XMM0,DWORD PTR [RSP+68]
            movss DWORD PTR [RSP+84],XMM0
            movss XMM0,DWORD PTR [RSP+72]
            movss DWORD PTR [RSP+88],XMM0
            movss XMM0,DWORD PTR [RSP+76]
            movss DWORD PTR [RSP+92],XMM0
            movsd XMM5,QWORD PTR [RIP+.L_432d10]
            movss XMM0,DWORD PTR [RBP+RBX*4]
            cvtss2sd XMM2,XMM0
            ucomisd XMM5,XMM2
            jbe .L_42c130

            addss XMM0,XMM1
            movss DWORD PTR [RBP+RBX*4],XMM0
.L_42bf9a:

            movss DWORD PTR [RSP],XMM1
            mov RDX,R14
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,RBP
            call QWORD PTR [R14+32]

            movss XMM4,DWORD PTR [RSP+48]
            movss XMM0,DWORD PTR [RSP+96]
            subss XMM0,XMM4
            movss XMM1,DWORD PTR [RSP]
            movss XMM3,DWORD PTR [RSP+52]
            movss XMM2,DWORD PTR [RSP+56]
            divss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [R15+RBX*8],XMM0
            movss XMM0,DWORD PTR [RSP+100]
            subss XMM0,XMM3
            divss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [R15+RBX*8+24],XMM0
            movss XMM0,DWORD PTR [RSP+104]
            subss XMM0,XMM2
            divss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [R15+RBX*8+48],XMM0
            add RBX,1
            cmp RBX,3
            jne .L_42bf40

            subss XMM4,DWORD PTR [R12]
            lea RDX,QWORD PTR [RSP+144]
            lea RDI,QWORD PTR [RSP+112]
            subss XMM3,DWORD PTR [R12+4]
            mov RSI,R15
            subss XMM2,DWORD PTR [R12+8]
            cvtss2sd XMM4,XMM4
            cvtss2sd XMM3,XMM3
            cvtss2sd XMM2,XMM2
            movsd QWORD PTR [RSP+144],XMM4
            movsd QWORD PTR [RSP+152],XMM3
            movsd QWORD PTR [RSP+160],XMM2
            call .L_42c800

            test EAX,EAX
            je .L_42bdc7

            pxor XMM2,XMM2
            movss XMM0,DWORD PTR [RSP+64]
            pxor XMM3,XMM3
            mov RAX,R13
            pxor XMM6,XMM6
            lea RDX,QWORD PTR [R13+12]
            cvtsd2ss XMM2,QWORD PTR [RSP+112]
            subss XMM0,XMM2
            movss XMM2,DWORD PTR [RSP+68]
            cvtsd2ss XMM3,QWORD PTR [RSP+120]
            subss XMM2,XMM3
            pxor XMM3,XMM3
            movss XMM1,DWORD PTR [RSP]
            cvtsd2ss XMM3,QWORD PTR [RSP+128]
            ucomiss XMM6,XMM0
            movss DWORD PTR [RSP+68],XMM2
            movss XMM2,DWORD PTR [RSP+72]
            subss XMM2,XMM3
            movss DWORD PTR [RSP+64],XMM0
            movss DWORD PTR [RSP+72],XMM2
            ja .L_42c100
.L_42c0db:

            ucomiss XMM0,DWORD PTR [RIP+.L_42df6c]
            jbe .L_42c0ea

            mov DWORD PTR [RAX],1065353216
.L_42c0ea:

            add RAX,4
            cmp RDX,RAX
            je .L_42c10f
.L_42c0f3:

            pxor XMM6,XMM6
            movss XMM0,DWORD PTR [RAX]
            ucomiss XMM6,XMM0
            jbe .L_42c0db
.L_42c100:

            mov DWORD PTR [RAX],0
            add RAX,4
            cmp RDX,RAX
            jne .L_42c0f3
.L_42c10f:

            sub DWORD PTR [RSP+44],1
            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM5
            jne .L_42be70
.L_42c125:

            mov EAX,1
            jmp .L_42bdc9
          .byte 0x90
.L_42c130:

            subss XMM0,XMM1
            movss DWORD PTR [RBP+RBX*4],XMM0
            jmp .L_42bf9a
          .byte 0x90
.L_42c140:

            movss XMM0,DWORD PTR [R12+12]
            movss DWORD PTR [RSP+76],XMM0
            jmp .L_42be3c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c158:

            movabs RSI,4510805389542529434
            mov DWORD PTR [RSP+72],1050253722
            mov QWORD PTR [RSP+64],RSI
            jmp .L_42be2b
.L_42c174:

            movss DWORD PTR [RSP+24],XMM1
            movss DWORD PTR [RSP+16],XMM2
            call sqrtf@PLT

            movss XMM1,DWORD PTR [RSP+24]
            movss XMM2,DWORD PTR [RSP+16]
            jmp .L_42bede
.L_42c196:

            call __stack_chk_fail@PLT
.L_42c19b:

            nop
            nop
            nop
            nop
            nop
.L_42c1a0:

            movsd QWORD PTR [RDI],XMM0
            movsd QWORD PTR [RDI+8],XMM1
            movsd QWORD PTR [RDI+16],XMM2
            ret 
.L_42c1af:

            nop
.L_42c1b0:

            movsd XMM0,QWORD PTR [RSI]
            subsd XMM0,QWORD PTR [RDX]
            movsd QWORD PTR [RDI],XMM0
            movsd XMM0,QWORD PTR [RSI+8]
            subsd XMM0,QWORD PTR [RDX+8]
            movsd QWORD PTR [RDI+8],XMM0
            movsd XMM0,QWORD PTR [RSI+16]
            subsd XMM0,QWORD PTR [RDX+16]
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_42c1db:

            nop
            nop
            nop
            nop
            nop
.L_42c1e0:

            movsd XMM3,QWORD PTR [RDX+16]
            movsd XMM1,QWORD PTR [RSI+16]
            movsd XMM0,QWORD PTR [RSI+8]
            movsd XMM2,QWORD PTR [RDX+8]
            mulsd XMM0,XMM3
            mulsd XMM2,XMM1
            subsd XMM0,XMM2
            movsd QWORD PTR [RDI],XMM0
            movsd XMM2,QWORD PTR [RDX]
            movsd XMM0,QWORD PTR [RSI]
            mulsd XMM1,XMM2
            mulsd XMM3,XMM0
            subsd XMM1,XMM3
            movsd QWORD PTR [RDI+8],XMM1
            mulsd XMM0,QWORD PTR [RDX+8]
            mulsd XMM2,QWORD PTR [RSI+8]
            subsd XMM0,XMM2
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_42c231:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c240:

            movsd XMM0,QWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RDI+8]
            mulsd XMM0,QWORD PTR [RSI]
            mulsd XMM1,QWORD PTR [RSI+8]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RDI+16]
            mulsd XMM1,QWORD PTR [RSI+16]
            addsd XMM0,XMM1
            ret 
.L_42c265:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c270:

            movsd XMM1,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RDI+8]
            mulsd XMM1,XMM1
            mulsd XMM2,XMM2
            movsd XMM0,QWORD PTR [RDI+16]
            mulsd XMM0,XMM0
            addsd XMM1,XMM2
            pxor XMM2,XMM2
            addsd XMM0,XMM1
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42c2a5

            movapd XMM0,XMM1
            ret 
.L_42c2a5:

            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM0,XMM1
            ret 
.L_42c2c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c2d0:

            movsd XMM1,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RDI+8]
            subsd XMM1,QWORD PTR [RSI]
            movsd XMM0,QWORD PTR [RDI+16]
            subsd XMM2,QWORD PTR [RSI+8]
            subsd XMM0,QWORD PTR [RSI+16]
            mulsd XMM1,XMM1
            mulsd XMM2,XMM2
            mulsd XMM0,XMM0
            addsd XMM1,XMM2
            pxor XMM2,XMM2
            addsd XMM0,XMM1
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42c313

            movapd XMM0,XMM1
            ret 
.L_42c313:

            sub RSP,24

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM0,XMM1
            ret 
.L_42c331:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c340:

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],0
            movsd QWORD PTR [RDI],XMM0
            mov QWORD PTR [RDI+40],0
            mov QWORD PTR [RDI+48],0
            movsd QWORD PTR [RDI+32],XMM0
            mov QWORD PTR [RDI+56],0
            movsd QWORD PTR [RDI+64],XMM0
            ret 
.L_42c387:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c390:

            sub RSP,88
.L_42c394:

            lea RCX,QWORD PTR [RDI+72]
            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov QWORD PTR [RSP+8],0
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP],XMM0
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            movsd QWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            movsd QWORD PTR [RSP+64],XMM0
            mov QWORD PTR [RSP+56],0
            movq XMM2,QWORD PTR [RIP+.L_42d9e0]
            movsd XMM1,QWORD PTR [RIP+.L_432d20]
.L_42c40a:

            xor EAX,EAX
            subsd XMM0,QWORD PTR [RDI+RAX*1]
            andpd XMM0,XMM2
            ucomisd XMM1,XMM0
            jbe .L_42c439
.L_42c41b:

            add RAX,8
            cmp RAX,24
            je .L_42c440

            movsd XMM0,QWORD PTR [RDX+RAX*1]
            subsd XMM0,QWORD PTR [RDI+RAX*1]
            andpd XMM0,XMM2
            ucomisd XMM1,XMM0
            ja .L_42c41b
.L_42c439:

            xor EAX,EAX
            jmp .L_42c45d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c440:

            add RDI,24
            add RDX,24
            cmp RDI,RCX
            je .L_42c458

            movsd XMM0,QWORD PTR [RDX]
            jmp .L_42c40a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c458:

            mov EAX,1
.L_42c45d:

            mov RSI,QWORD PTR [RSP+72]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42c472

            add RSP,88
.L_42c471:

            ret 
.L_42c472:

            call __stack_chk_fail@PLT
.L_42c477:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c480:

            movsd XMM0,QWORD PTR [RSI]
            movsd XMM4,QWORD PTR [RSI+8]
            movsd XMM1,QWORD PTR [RDX+16]
            movsd XMM2,QWORD PTR [RDX+40]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSI+16]
            movsd XMM5,QWORD PTR [RDX+32]
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+64]
            mulsd XMM5,XMM4
            mulsd XMM2,XMM3
            mulsd XMM4,QWORD PTR [RDX+24]
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+8]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RDX]
            addsd XMM2,XMM5
            movsd XMM5,QWORD PTR [RDX+56]
            mulsd XMM5,XMM3
            mulsd XMM3,QWORD PTR [RDX+48]
            addsd XMM0,XMM4
            movsd QWORD PTR [RDI+16],XMM1
            addsd XMM2,XMM5
            addsd XMM0,XMM3
            movsd QWORD PTR [RDI+8],XMM2
            movsd QWORD PTR [RDI],XMM0
            movsd XMM0,QWORD PTR [RSI+24]
            movsd XMM4,QWORD PTR [RSI+32]
            movsd XMM1,QWORD PTR [RDX+16]
            movsd XMM2,QWORD PTR [RDX+40]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSI+40]
            movsd XMM5,QWORD PTR [RDX+32]
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+64]
            mulsd XMM5,XMM4
            mulsd XMM2,XMM3
            mulsd XMM4,QWORD PTR [RDX+24]
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+8]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RDX]
            addsd XMM2,XMM5
            movsd XMM5,QWORD PTR [RDX+56]
            mulsd XMM5,XMM3
            mulsd XMM3,QWORD PTR [RDX+48]
            addsd XMM0,XMM4
            movsd QWORD PTR [RDI+40],XMM1
            addsd XMM2,XMM5
            addsd XMM0,XMM3
            movsd QWORD PTR [RDI+32],XMM2
            movsd QWORD PTR [RDI+24],XMM0
            movsd XMM0,QWORD PTR [RSI+48]
            movsd XMM4,QWORD PTR [RSI+56]
            movsd XMM3,QWORD PTR [RSI+64]
            movsd XMM1,QWORD PTR [RDX+16]
            movsd XMM2,QWORD PTR [RDX+40]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM4
            movsd XMM5,QWORD PTR [RDX+32]
            mulsd XMM5,XMM4
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+64]
            mulsd XMM4,QWORD PTR [RDX+24]
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+8]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RDX]
            addsd XMM2,XMM5
            movsd XMM5,QWORD PTR [RDX+56]
            mulsd XMM5,XMM3
            mulsd XMM3,QWORD PTR [RDX+48]
            addsd XMM0,XMM4
            movsd QWORD PTR [RDI+64],XMM1
            addsd XMM2,XMM5
            addsd XMM0,XMM3
            movsd QWORD PTR [RDI+56],XMM2
            movsd QWORD PTR [RDI+48],XMM0
            ret 
.L_42c5ed:

            nop
            nop
            nop
.L_42c5f0:

            movsd XMM9,QWORD PTR [RDI+32]
            xor EAX,EAX
            movsd XMM4,QWORD PTR [RDI+40]
            movsd XMM1,QWORD PTR [RDI+64]
            movapd XMM3,XMM9
            movsd XMM6,QWORD PTR [RDI+56]
            movapd XMM0,XMM4
            mulsd XMM3,XMM1
            movsd XMM8,QWORD PTR [RDI+48]
            movapd XMM2,XMM4
            mulsd XMM0,XMM6
            mulsd XMM2,XMM8
            movsd XMM7,QWORD PTR [RDI+8]
            movsd XMM10,QWORD PTR [RDI+16]
            subsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RDI+24]
            movapd XMM11,XMM7
            movapd XMM5,XMM0
            mulsd XMM0,XMM6
            movsd XMM12,QWORD PTR [RIP+.L_432628]
            mulsd XMM5,XMM1
            subsd XMM2,XMM5
            movapd XMM5,XMM9
            mulsd XMM5,XMM8
            mulsd XMM11,XMM2
            subsd XMM0,XMM5
            movapd XMM5,XMM0
            movsd XMM0,QWORD PTR [RDI]
            mulsd XMM0,XMM3
            addsd XMM0,XMM11
            movapd XMM11,XMM10
            mulsd XMM11,XMM5
            addsd XMM0,XMM11
            movapd XMM11,XMM0
            andpd XMM11,XMMWORD PTR [RIP+.L_42d9e0]
            ucomisd XMM12,XMM11
            ja .L_42c76f

            divsd XMM3,XMM0
            mov EAX,1
            mulsd XMM7,XMM1
            mulsd XMM9,XMM10
            divsd XMM2,XMM0
            movsd QWORD PTR [RSI],XMM3
            movapd XMM3,XMM6
            mulsd XMM3,XMM10
            divsd XMM5,XMM0
            subsd XMM3,XMM7
            divsd XMM3,XMM0
            movsd QWORD PTR [RSI+8],XMM3
            movapd XMM3,XMM4
            movsd XMM7,QWORD PTR [RDI+8]
            movsd QWORD PTR [RSI+24],XMM2
            mulsd XMM3,XMM7
            subsd XMM3,XMM9
            divsd XMM3,XMM0
            movsd QWORD PTR [RSI+16],XMM3
            movsd XMM2,QWORD PTR [RDI]
            movsd XMM3,QWORD PTR [RDI+16]
            mulsd XMM1,XMM2
            mulsd XMM8,XMM3
            mulsd XMM4,XMM2
            mulsd XMM6,XMM2
            subsd XMM1,XMM8
            divsd XMM1,XMM0
            movsd QWORD PTR [RSI+32],XMM1
            movsd XMM8,QWORD PTR [RDI+24]
            movsd QWORD PTR [RSI+48],XMM5
            mulsd XMM3,XMM8
            subsd XMM3,XMM4
            divsd XMM3,XMM0
            movsd QWORD PTR [RSI+40],XMM3
            movsd XMM3,QWORD PTR [RDI+48]
            mulsd XMM2,QWORD PTR [RDI+32]
            mulsd XMM3,XMM7
            mulsd XMM7,XMM8
            subsd XMM3,XMM6
            subsd XMM2,XMM7
            movapd XMM1,XMM3
            divsd XMM2,XMM0
            divsd XMM1,XMM0
            movsd QWORD PTR [RSI+64],XMM2
            movsd QWORD PTR [RSI+56],XMM1
.L_42c76f:

            ret 
.L_42c771:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c780:

            movsd XMM1,QWORD PTR [RSI]
            movsd XMM0,QWORD PTR [RDX+8]
            mulsd XMM1,QWORD PTR [RDX]
            movsd XMM3,QWORD PTR [RSI+8]
            movsd XMM2,QWORD PTR [RDX+16]
            mulsd XMM3,XMM0
            addsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RSI+16]
            mulsd XMM3,XMM2
            addsd XMM1,XMM3
            movsd QWORD PTR [RDI],XMM1
            movsd XMM3,QWORD PTR [RDX]
            mulsd XMM0,QWORD PTR [RSI+32]
            movsd XMM1,QWORD PTR [RSI+24]
            mulsd XMM1,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSI+40]
            mulsd XMM0,XMM2
            addsd XMM1,XMM0
            movsd QWORD PTR [RDI+8],XMM1
            movsd XMM0,QWORD PTR [RSI+56]
            mulsd XMM3,QWORD PTR [RSI+48]
            mulsd XMM0,QWORD PTR [RDX+8]
            mulsd XMM2,QWORD PTR [RSI+64]
            addsd XMM0,XMM3
            addsd XMM0,XMM2
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_42c7fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c800:

            sub RSP,168

            mov R8,RDI
            movdqu XMM0,XMMWORD PTR [RSI]
            lea RCX,QWORD PTR [RSP+80]
            mov RDI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            mov RAX,QWORD PTR [RSI+64]
            movdqu XMM0,XMMWORD PTR [RSI+16]
            mov QWORD PTR [RSP+64],RAX
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+48]
            mov RSI,RCX
            movaps XMMWORD PTR [RSP+48],XMM0
            call .L_42c5f0

            test EAX,EAX
            je .L_42c86d

            mov RDI,R8
            call .L_42c780

            mov EAX,1
.L_42c86d:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42c888

            add RSP,168

            ret 
.L_42c888:

            call __stack_chk_fail@PLT
.L_42c88d:

            nop
            nop
            nop
.L_42c890:

            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_42c8a0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_402dd0

            xor ESI,ESI
            mov RDI,RAX
            mov R12,RAX
            call .L_412100

            movsd XMM0,QWORD PTR [RIP+.L_42d9d8]
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+88],RAX
            mov RBX,RAX
            movabs RAX,4294967297
            movsd QWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+72],RBP
            mov QWORD PTR [RSP+80],RBP
            movsd QWORD PTR [RSP+40],XMM0
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            movsd QWORD PTR [RSP+48],XMM0
            mov DWORD PTR [RSP+16],1
            lea RDX,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+56],XMM0
            mov DWORD PTR [RSP+20],R13D
            mov RCX,RSP
            mov QWORD PTR [RSP+24],RAX
            sub RSP,8
.L_42c932:

            mov ESI,4
            push 320
            mov RDI,R12
            push 4849688
            push 4849688
            push 0
            push 0
            lea R9,QWORD PTR [RSP+80]
            lea R8,QWORD PTR [RSP+64]
            call .L_40f180

            add RSP,48
            mov RDI,RBX
            mov RBP,RAX
            call .L_403ea0

            mov RDX,QWORD PTR [RSP+104]
            xor RDX,QWORD PTR FS:[40]
            jne .L_42c989

            add RSP,120
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42c989:

            call __stack_chk_fail@PLT
.L_42c98e:

            nop
            nop
.L_42c990:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            sub RSP,88
.L_42c9a7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_402dd0

            xor EDX,EDX
            mov ESI,R12D
            mov RDI,RBP
            mov R13,RAX
            call .L_429090

            test EAX,EAX
            jne .L_42ca10
.L_42c9d0:

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            xor EAX,EAX
            mov QWORD PTR [RBX],0
.L_42c9e9:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42cb21

            add RSP,88
.L_42ca01:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ca10:

            xor EDX,EDX
            mov ESI,2
            mov RDI,RBP
            call .L_40aa30

            mov RDI,RBP
            mov R14D,EAX
            call .L_403530

            lea RCX,QWORD PTR [RSP+4]
            lea RDX,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov EDI,EAX
            call .L_40c890

            test EAX,EAX
            je .L_42c9d0

            mov EAX,R14D
            shr EAX,3
            and EAX,15
            cmp EAX,DWORD PTR [RSP+4]
            jne .L_42c9d0

            xor ESI,ESI
            mov RDI,R13
            call .L_411ff0

            test RAX,RAX
            mov R15,RAX
            je .L_42c9d0

            sub RSP,8
.L_42ca6a:

            mov EDX,R14D
            mov RSI,RBP
            push 320
            mov R9D,R12D
            mov R8D,4849688
            mov RCX,RAX
            mov RDI,R13
            call .L_40f990

            mov RDI,R15
            mov RBP,RAX
            call .L_403ea0

            test RBP,RBP
            pop RAX
            pop RDX
            je .L_42c9d0

            lea R12,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+8]
            mov ECX,1
            mov RDI,RBP
            mov RDX,R12
            call .L_40edf0

            movsd XMM0,QWORD PTR [RIP+.L_42e2b0]
            mov QWORD PTR [RSP+32],0
            movsd XMM1,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            ucomisd XMM1,XMM0
            jbe .L_42cae5

            movsd QWORD PTR [RSP+16],XMM0
.L_42cae5:

            mov RDI,RBP
            call .L_40e980

            lea RSI,QWORD PTR [RSP+48]
            xor EDI,EDI
            mov RDX,R12
            call .L_40ade0

            test RBX,RBX
            mov EAX,1
            je .L_42c9e9

            mov RDX,QWORD PTR [RSP+64]
            movdqa XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RBX+16],RDX
            movups XMMWORD PTR [RBX],XMM0
            jmp .L_42c9e9
.L_42cb21:

            call __stack_chk_fail@PLT
.L_42cb26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cb30:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBX,RDI
            mov RDI,RSI
            mov RBP,RSI
            sub RSP,96
.L_42cb44:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_403550

            cmp EAX,1818848875
            sete CL
            cmp EAX,1633842036
            sete DL
            or CL,DL
            jne .L_42cb7a

            cmp EAX,1852662636
            je .L_42cb7a

            cmp R12D,2
            jbe .L_42cbb0
.L_42cb7a:

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            xor EAX,EAX
            mov QWORD PTR [RBX],0
.L_42cb93:

            mov RSI,QWORD PTR [RSP+88]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42cd28

            add RSP,96
.L_42cbab:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42cbb0:

            mov RDI,RBP
            call .L_403570

            cmp EAX,67108863
            jbe .L_42cbc8

            test R12D,4294967293
            je .L_42cbe0
.L_42cbc8:

            cmp R12D,1
            je .L_42cc18
.L_42cbce:

            mov RDX,RBX
            mov ESI,R12D
            mov RDI,RBP
            call .L_42c990

            jmp .L_42cb93
          .byte 0x66
          .byte 0x90
.L_42cbe0:

            mov RDI,RBP
            call .L_428ff0

            test EAX,EAX
            jne .L_42cc67

            mov RAX,QWORD PTR [RIP+.L_432d28]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RIP+.L_432d30]
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RIP+.L_432d38]
            mov QWORD PTR [RBX+16],RAX
            mov EAX,1
            jmp .L_42cb93
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cc18:

            mov RDI,RBP
            call .L_403550

            cmp EAX,1886549106
            jne .L_42cbce

            mov RDI,RBP
            call .L_403530

            cmp EAX,1129142603
            jne .L_42cbce

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call .L_429090

            test EAX,EAX
            jne .L_42cc7c

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            mov EAX,1
            mov QWORD PTR [RBX],0
            jmp .L_42cb93
.L_42cc67:

            mov RDX,RBX
            mov ESI,1
            mov RDI,RBP
            call .L_42c990

            jmp .L_42cb93
.L_42cc7c:

            xor ESI,ESI
            mov RDI,RBP
            call .L_42c890

            test RAX,RAX
            mov RBP,RAX
            je .L_42cb7a

            lea R12,QWORD PTR [RSP+32]
            mov RSI,RSP
            mov ECX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+8],0
            mov RDX,R12
            mov QWORD PTR [RSP],0
            call .L_40edf0

            movsd XMM0,QWORD PTR [RIP+.L_42e2b0]
            movsd XMM1,QWORD PTR [RSP+32]
            ucomisd XMM1,XMM0
            jbe .L_42ccde

            movsd QWORD PTR [RSP+32],XMM0
.L_42ccde:

            mov RDI,RBP
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+40],0
            call .L_40e980

            lea RSI,QWORD PTR [RSP+64]
            xor EDI,EDI
            mov RDX,R12
            call .L_40ade0

            test RBX,RBX
            je .L_42cd2d

            mov RAX,QWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov QWORD PTR [RBX+16],RAX
            mov EAX,1
            movups XMMWORD PTR [RBX],XMM0
            jmp .L_42cb93
.L_42cd28:

            call __stack_chk_fail@PLT
.L_42cd2d:

            mov EAX,1
            jmp .L_42cb93
.L_42cd37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cd40:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,10568
.L_42cd5d:

            mov DWORD PTR [RSP+16],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+10552],RAX
            xor EAX,EAX
            call .L_403550

            cmp EAX,1818848875
            sete CL
            cmp EAX,1633842036
            sete DL
            or CL,DL
            jne .L_42cd9b

            cmp EAX,1852662636
            je .L_42cd9b

            cmp DWORD PTR [RSP+16],2
            jbe .L_42cde0
.L_42cd9b:

            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+8],0
            xor EAX,EAX
            mov QWORD PTR [RBP],0
.L_42cdb5:

            mov RDI,QWORD PTR [RSP+10552]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42d48f

            add RSP,10568
.L_42cdd3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42cde0:

            mov RDI,RBX
            call .L_403570

            cmp EAX,67108863
            mov RDI,RBX
            jbe .L_42ce00

            test DWORD PTR [RSP+16],4294967293
            je .L_42d30c
.L_42ce00:

            call .L_403530

            mov ESI,DWORD PTR [RSP+16]
            mov EDX,1
            mov RDI,RBX
            mov R13D,EAX
            call .L_4290c0

            test EAX,EAX
            je .L_42cf90

            cmp R13D,1196573017
            setne DL
            cmp R13D,1380401696
            setne AL
            test DL,AL
            je .L_42ce46

            cmp R13D,1129142603
            jne .L_42cf90
.L_42ce46:

            cmp DWORD PTR [RSP+16],1
            je .L_42cfa7

            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
.L_42ce6c:

            mov ESI,DWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_42c890

            mov R12,RAX
            xor EAX,EAX
            test R12,R12
            je .L_42cdb5

            lea RAX,QWORD PTR [RSP+96]
            xor R15D,R15D
            lea R13,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RIP+.L_432d40]
            lea RBX,QWORD PTR [RSP+304]
            mov QWORD PTR [RSP+8],RAX
            lea R14,QWORD PTR [RSP+2352]
            jmp .L_42cf4d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cec0:

            movsd XMM7,QWORD PTR [RIP+.L_42e2b0]
            minsd XMM7,XMM0
            movapd XMM0,XMM7
.L_42ced0:

            movsd QWORD PTR [RSP+136],XMM0
            movsd XMM0,QWORD PTR [RSP+80]
            ucomisd XMM1,XMM0
            ja .L_42cfe0

            movsd XMM6,QWORD PTR [RIP+.L_42e2b0]
            minsd XMM6,XMM0
            movapd XMM0,XMM6
.L_42cef9:

            mov RDX,QWORD PTR [RSP+8]
            mov ECX,1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+144],XMM0
            call .L_40edf0

            movsd XMM0,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RBX+R15*8],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            movsd QWORD PTR [R14+R15*8],XMM0
            add R15,1
            cmp R15,256
            je .L_42cff0
.L_42cf4d:

            pxor XMM0,XMM0
            cvtsi2sd XMM0,R15D
            mulsd XMM0,QWORD PTR [RIP+.L_42d9c8]
            divsd XMM0,QWORD PTR [RIP+.L_42df58]
            movsd QWORD PTR [RSP+128],XMM0
            movsd XMM0,QWORD PTR [RSP+72]
            ucomisd XMM1,XMM0
            jbe .L_42cec0

            movapd XMM0,XMM1
            jmp .L_42ced0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cf90:

            mov EDX,DWORD PTR [RSP+16]
            mov ECX,R12D
            mov RSI,RBX
            mov RDI,RBP
            call .L_42cb30

            jmp .L_42cdb5
.L_42cfa7:

            lea R13,QWORD PTR [RSP+128]
            mov ECX,R12D
            mov EDX,1
            mov RSI,RBX
            mov RDI,R13
            call .L_42cb30

            test EAX,EAX
            je .L_42cdb5

            lea RSI,QWORD PTR [RSP+64]
            mov RDX,R13
            xor EDI,EDI
            call .L_40ac70

            jmp .L_42ce6c
          .byte 0x66
          .byte 0x90
.L_42cfe0:

            movapd XMM0,XMM1
            jmp .L_42cef9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cff0:

            lea RAX,QWORD PTR [R14+2032]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d000:

            movsd XMM0,QWORD PTR [RAX]
            sub RAX,8
            minsd XMM0,QWORD PTR [RAX+16]
            movsd QWORD PTR [RAX+8],XMM0
            cmp R14,RAX
            jne .L_42d000

            movsd XMM1,QWORD PTR [RSP+2352]
            movsd XMM2,QWORD PTR [RSP+4392]
            ucomisd XMM2,XMM1
            jbe .L_42d340

            xor EDX,EDX
            cmp DWORD PTR [RSP+16],1
            subsd XMM2,XMM1
            movapd XMM0,XMM1
            je .L_42d362
.L_42d048:

            lea RCX,QWORD PTR [RSP+4400]
            jmp .L_42d05e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d058:

            movsd XMM0,QWORD PTR [R14+RDX*1]
.L_42d05e:

            subsd XMM0,XMM1
            divsd XMM0,XMM2
            movsd QWORD PTR [RCX+RDX*1],XMM0
            add RDX,8
            cmp RDX,2048
            jne .L_42d058

            cmp DWORD PTR [RSP+16],1
            je .L_42d3e9

            movsd XMM2,QWORD PTR [RIP+.L_432d50]
            movsd XMM1,QWORD PTR [RIP+.L_432d58]
.L_42d093:

            xor EAX,EAX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d0a0:

            movsd XMM0,QWORD PTR [RCX+RAX*1]
            ucomisd XMM0,XMM1
            jb .L_42d0ce

            ucomisd XMM2,XMM0
            jbe .L_42d0ce

            movsd XMM3,QWORD PTR [RBX+RAX*1]
            movsxd RSI,EDX
            add EDX,1
            movsd QWORD PTR [RSP+RSI*8+8496],XMM0
            movsd QWORD PTR [RSP+RSI*8+6448],XMM3
.L_42d0ce:

            add RAX,8
            cmp RAX,2048
            jne .L_42d0a0

            cmp EDX,2
            jle .L_42d340

            cmp EDX,3
            pxor XMM4,XMM4
            je .L_42d2c6

            lea EAX,DWORD PTR [RDX-1]
            pxor XMM4,XMM4
            pxor XMM9,XMM9
            lea RSI,QWORD PTR [RSP+6448]
            pxor XMM8,XMM8
            lea RCX,QWORD PTR [RSP+8496]
            pxor XMM7,XMM7
            lea RDI,QWORD PTR [RAX*8+8]
            pxor XMM10,XMM10
            xor EAX,EAX
            pxor XMM5,XMM5
            pxor XMM3,XMM3
            pxor XMM6,XMM6
.L_42d130:

            movsd XMM0,QWORD PTR [RSI+RAX*1]
            movsd XMM2,QWORD PTR [RCX+RAX*1]
            add RAX,8
            movapd XMM1,XMM0
            cmp RDI,RAX
            addsd XMM7,XMM2
            mulsd XMM2,XMM0
            mulsd XMM1,XMM0
            addsd XMM6,XMM0
            addsd XMM8,XMM2
            addsd XMM3,XMM1
            mulsd XMM1,XMM0
            addsd XMM5,XMM1
            mulsd XMM1,XMM0
            mulsd XMM0,XMM2
            addsd XMM10,XMM1
            addsd XMM9,XMM0
            jne .L_42d130

            pxor XMM0,XMM0
            lea RBX,QWORD PTR [RSP+224]
            movsd QWORD PTR [RSP+56],XMM4
            movapd XMM2,XMM3
            movsd QWORD PTR [RSP+48],XMM9
            movapd XMM1,XMM6
            mov RDI,RBX
            cvtsi2sd XMM0,EDX
            lea R14,QWORD PTR [RSP+160]
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM10
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM3
            movsd QWORD PTR [RSP+16],XMM6
            call .L_42c1a0

            movsd XMM6,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBX+24]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM0,XMM6
            movapd XMM2,XMM5
            movapd XMM1,XMM3
            call .L_42c1a0

            movsd XMM10,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+48]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM2,XMM10
            movapd XMM1,XMM5
            movapd XMM0,XMM3
            call .L_42c1a0

            movsd XMM9,QWORD PTR [RSP+48]
            mov RDI,R14
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movapd XMM2,XMM9
            movapd XMM1,XMM8
            movapd XMM0,XMM7
            call .L_42c1a0

            lea RDI,QWORD PTR [RSP+192]
            mov RDX,R14
            mov RSI,RBX
            call .L_42c800

            test EAX,EAX
            movsd XMM4,QWORD PTR [RSP+56]
            je .L_42d2c6

            movsd XMM1,QWORD PTR [RSP+208]
            movsd XMM5,QWORD PTR [RIP+.L_432d60]
            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RSP+200]
            movsd XMM0,QWORD PTR [RSP+192]
            andpd XMM3,XMMWORD PTR [RIP+.L_42d9e0]
            ucomisd XMM5,XMM3
            jbe .L_42d3fe

            xorpd XMM0,XMMWORD PTR [RIP+.L_42e2e0]
            movsd XMM1,QWORD PTR [RIP+.L_42e2b0]
            divsd XMM0,XMM2
            ucomisd XMM1,XMM0
            ja .L_42d2c6

            ucomisd XMM0,XMM4
            jbe .L_42d46f
.L_42d2c6:

            movsd QWORD PTR [RSP+128],XMM4
.L_42d2cf:

            movsd XMM0,QWORD PTR [RSP+72]
            mov RDX,R13
            mov RSI,RBP
            xor EDI,EDI
            movsd QWORD PTR [RSP+136],XMM0
            movsd XMM0,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+144],XMM0
            call .L_40ade0

            mov RDI,R12
            call .L_40e980

            mov EAX,1
            jmp .L_42cdb5
.L_42d30c:

            call .L_428ff0

            test EAX,EAX
            jne .L_42d34d

            mov RAX,QWORD PTR [RIP+.L_432d28]
            mov QWORD PTR [RBP],RAX
            mov RAX,QWORD PTR [RIP+.L_432d30]
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [RIP+.L_432d38]
            mov QWORD PTR [RBP+16],RAX
            mov EAX,1
            jmp .L_42cdb5
.L_42d340:

            mov RDI,R12
            call .L_40e980

            jmp .L_42cd9b
.L_42d34d:

            mov RDX,RBP
            mov ESI,1
            mov RDI,RBX
            call .L_42c990

            jmp .L_42cdb5
.L_42d362:

            movsd XMM3,QWORD PTR [RIP+.L_42e208]
            mov EAX,1
            movq XMM5,QWORD PTR [RIP+.L_42d9e0]
            xor ECX,ECX
            mulsd XMM3,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_42e148]
            addsd XMM3,XMM1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d390:

            movsd XMM0,QWORD PTR [RBX+RDX*1]
            ucomisd XMM3,XMM0
            jae .L_42d3ac

            subsd XMM0,QWORD PTR [R14+RDX*1]
            andpd XMM0,XMM5
            ucomisd XMM4,XMM0
            cmovbe EAX,ECX
.L_42d3ac:

            add RDX,8
            cmp RDX,2048
            jne .L_42d390

            xor EDX,EDX
            test EAX,EAX
            movapd XMM0,XMM1
            je .L_42d048

            lea RDX,QWORD PTR [RSP+64]
            mov RSI,RBP
            xor EDI,EDI
            mov DWORD PTR [RSP],EAX
            call .L_40ade0

            mov RDI,R12
            call .L_40e980

            mov EAX,DWORD PTR [RSP]
            jmp .L_42cdb5
.L_42d3e9:

            movsd XMM2,QWORD PTR [RIP+.L_42d568]
            movsd XMM1,QWORD PTR [RIP+.L_432d48]
            jmp .L_42d093
.L_42d3fe:

            movapd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_42e148]
            mulsd XMM3,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            subsd XMM0,XMM3
            ucomisd XMM4,XMM0
            jae .L_42d2c6

            movsd QWORD PTR [RSP],XMM4
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM0,XMM2
            addsd XMM1,XMM1
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42e2b0]
            ucomisd XMM0,XMM1
            ja .L_42d486

            movsd XMM4,QWORD PTR [RSP]
            ucomisd XMM4,XMM0
            ja .L_42d2c6
.L_42d46f:

            ucomisd XMM4,XMM0
            jbe .L_42d494

            mov QWORD PTR [RSP+128],0
            jmp .L_42d2cf
.L_42d486:

            movapd XMM4,XMM1
            jmp .L_42d2c6
.L_42d48f:

            call __stack_chk_fail@PLT
.L_42d494:

            movsd QWORD PTR [RSP+128],XMM0
            jmp .L_42d2cf
.L_42d4a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d4b0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_63dd30]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_63dd38]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 4197880

            test RBP,RBP
            je .L_42d506

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d4f0:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_42d4f0
.L_42d506:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42d515:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d520:

            ret 
.L_42d522:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_42d544:
          .string "rb"
.L_42d547:
          .byte 0x6d
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x63
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x21
.L_42d554:
          .zero 1
.L_42d555:
          .string "read error!"
          .zero 7
.L_42d568:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_42d570:
          .string "cmsio0.c"
.L_42d579:
          .string "(Icc != ((void *)0))"
.L_42d58e:
          .string "(i >= 0)"
.L_42d597:
          .string "Too many tags (%d)"
.L_42d5aa:
          .string "(AccessMode != ((void *)0))"
.L_42d5c6:
          .string "Unknown access mode \'%c\'"
.L_42d5df:
          .string "(FileName != ((void *)0))"
.L_42d5f9:
          .string "File \'%s\' not found"
.L_42d60d:
          .string "Cannot get size of file \'%s\'"
.L_42d62a:
          .string "wb"
.L_42d62d:
          .string "Couldn\'t create \'%s\'"
.L_42d642:
          .string "Cannot get size of stream"
.L_42d65c:
          .string "Couldn\'t write type \'%s\'"
.L_42d675:
          .string "(hProfile != ((void *)0))"
.L_42d68f:
          .string "w"
.L_42d691:
          .string "(BytesNeeded != ((void *)0))"
.L_42d6ae:
          .string "r"
.L_42d6b0:
          .string "Unknown tag type \'%s\' found."
.L_42d6cd:
          .string "Corrupted tag \'%s\'"
.L_42d6e0:
          .string "Unsupported tag \'%x\'"
          .zero 3
.L_42d6f8:
          .string "Read from memory error. Got %d bytes, block should be of %d bytes"
          .zero 6
.L_42d740:
          .string "Read error. Got %d bytes, block should be of %d bytes"
          .zero 2
.L_42d778:
          .string "Too few data; probably corrupted profile"
          .zero 7
.L_42d7a8:
          .string "Tell error; probably corrupted file"
          .zero 4
.L_42d7d0:
          .string "Seek error; probably corrupted file"
          .zero 4
.L_42d7f8:
          .string "Couldn\'t read profile from NULL pointer"
.L_42d820:
          .string "Couldn\'t allocate %ld bytes for profile"
.L_42d848:
          .string "not an ICC profile, invalid signature"
          .zero 2
.L_42d870:
          .string "(Internal) no handler for tag %x"
          .zero 7
.L_42d898:
          .string "\'%s\' Inconsistent number of items: expected %d, got %d"
          .zero 1
.L_42d8d0:
          .string "Unsupported type \'%s\' for tag \'%s\'"
          .zero 5
.L_42d8f8:
          .string "Malformed struct in type \'%s\' for tag \'%s\'"
          .zero 13
.L_42d930:
          .string "_cmsDeleteTagByPos"
          .zero 13
.L_42d950:
          .string "cmsSaveProfileToMem"
          .zero 12
.L_42d970:
          .string "cmsSaveProfileToIOhandler"
          .zero 6
.L_42d990:
          .string "cmsOpenIOhandlerFromFile"
          .zero 7
.L_42d9b0:
          .string "cmsOpenIOhandlerFromMem"
.L_42d9c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_42d9d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_42d9d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42d9e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d9f0:
          .string "cmsplugin.c"
.L_42d9fc:
          .string "(Result != ((void *)0))"
.L_42da14:
          .string "(io != ((void *)0))"
.L_42da28:
          .string "(Array != ((void *)0))"
.L_42da3f:
          .string "(XYZ != ((void *)0))"
.L_42da54:
          .string "(Dest != ((void *)0))"
.L_42da6a:
          .string "(Source != ((void *)0))"
.L_42da82:
          .string "(frm != ((void *)0))"
.L_42da97:
          .string "NULL memory pool on context"
.L_42dab3:
          .string "Unrecognized plugin"
.L_42dac7:
          .string "Unrecognized plugin type \'%X\'"
.L_42dae5:
          .string "(0)"
          .zero 7
.L_42daf0:
          .string "plugin needs Little CMS %d, current version is %d"
          .zero 6
.L_42db28:
          .string "Bad context client -- possible corruption"
          .zero 14
.L_42db60:
          .string "_cmsContextGetClientChunk"
          .zero 6
.L_42db80:
          .string "_cmsIOPrintf"
          .zero 3
.L_42db90:
          .string "_cmsWriteAlignment"
          .zero 13
.L_42dbb0:
          .string "_cmsReadAlignment"
          .zero 14
.L_42dbd0:
          .string "_cmsWriteTypeBase"
          .zero 14
.L_42dbf0:
          .string "_cmsReadTypeBase"
          .zero 15
.L_42dc10:
          .string "_cmsEncodeDateTimeNumber"
          .zero 7
.L_42dc30:
          .string "_cmsDecodeDateTimeNumber"
          .zero 7
.L_42dc50:
          .string "_cmsWriteXYZNumber"
          .zero 13
.L_42dc70:
          .string "_cmsWrite15Fixed16Number"
          .zero 7
.L_42dc90:
          .string "_cmsWriteUInt64Number"
          .zero 10
.L_42dcb0:
          .string "_cmsWriteFloat32Number"
          .zero 9
.L_42dcd0:
          .string "_cmsWriteUInt32Number"
          .zero 10
.L_42dcf0:
          .string "_cmsWriteUInt16Array"
          .zero 11
.L_42dd10:
          .string "_cmsWriteUInt16Number"
          .zero 10
.L_42dd30:
          .string "_cmsWriteUInt8Number"
          .zero 11
.L_42dd50:
          .string "_cmsReadXYZNumber"
          .zero 14
.L_42dd70:
          .string "_cmsRead15Fixed16Number"
          .zero 8
.L_42dd90:
          .string "_cmsReadUInt64Number"
          .zero 11
.L_42ddb0:
          .string "_cmsReadFloat32Number"
          .zero 10
.L_42ddd0:
          .string "_cmsReadUInt32Number"
          .zero 11
.L_42ddf0:
          .string "_cmsReadUInt16Array"
          .zero 12
.L_42de10:
          .string "_cmsReadUInt16Number"
          .zero 11
.L_42de30:
          .string "_cmsReadUInt8Number"
          .zero 12
.L_42de50:
          .string "_cmsAdjustEndianess64"
          .zero 10
.L_42de70:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42de80:
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x7f
.L_42de84:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
.L_42de88:
          .zero 8
.L_42de90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_42de98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3e
.L_42dea0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x40
.L_42dea8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3f
.L_42deb0:
          .string "cmspack.c"
.L_42deba:
          .string "(ctx != ((void *)0))"
.L_42decf:
          .string "(head != ((void *)0))"
          .zero 11
.L_42def0:
          .string "DupFormatterFactoryList"
          .zero 8
.L_42df10:
          .string "_cmsAllocFormattersPluginChunk"
          .zero 1
.L_42df30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_42df38:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_42df40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_42df48:
          .byte 0xcd
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0x7a
          .byte 0x84
          .byte 0x40
.L_42df50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
.L_42df58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_42df60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
.L_42df68:
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x42
.L_42df6c:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
.L_42df70:
          .byte 0x66
          .byte 0xd6
          .byte 0x23
          .byte 0x44
.L_42df74:
          .byte 0x0
          .byte 0xff
          .byte 0x7f
          .byte 0x47
.L_42df78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
.L_42df7c:
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x43
.L_42df80:
          .byte 0x59
          .byte 0x41
          .byte 0x52
          .byte 0x47
          .byte 0x20
          .byte 0x42
          .byte 0x47
          .byte 0x52
          .byte 0x59
          .byte 0x41
          .byte 0x52
          .byte 0x47
          .byte 0x20
          .byte 0x42
          .byte 0x47
          .byte 0x52
          .byte 0x20
          .byte 0x59
          .byte 0x4d
          .byte 0x43
          .byte 0x4b
          .byte 0x59
          .byte 0x4d
          .byte 0x43
          .byte 0x72
          .byte 0x62
          .byte 0x43
          .byte 0x59
          .byte 0x20
          .byte 0x76
          .byte 0x75
          .byte 0x4c
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0x20
          .byte 0x62
          .byte 0x61
          .byte 0x4c
          .byte 0x4b
          .byte 0x76
          .byte 0x75
          .byte 0x4c
          .byte 0x20
          .byte 0x56
          .byte 0x53
          .byte 0x48
          .byte 0x20
          .byte 0x53
          .byte 0x4c
          .byte 0x48
          .byte 0x20
          .byte 0x79
          .byte 0x78
          .byte 0x59
          .byte 0x31
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x32
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x33
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x34
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x35
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x36
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x37
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x38
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x39
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x41
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x42
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x43
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x44
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x45
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x46
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x20
          .byte 0x62
          .byte 0x61
          .byte 0x4c
.L_42dff8:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_42e000:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x40
.L_42e008:
          .byte 0xd8
          .byte 0x80
          .byte 0x8
          .byte 0x71
          .byte 0xe5
          .byte 0xfc
          .byte 0x1f
          .byte 0x40
.L_42e010:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x40
.L_42e018:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x40
.L_42e020:
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x3a
          .byte 0x8c
          .byte 0x40
.L_42e028:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3f
.L_42e030:
          .byte 0xe
          .byte 0xe5
          .byte 0x26
          .byte 0x15
          .byte 0x7b
          .byte 0xcb
          .byte 0xdb
          .byte 0x3f
.L_42e038:
          .byte 0xcd
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0x4c
          .byte 0x4b
          .byte 0x40
.L_42e040:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x23
          .byte 0x40
.L_42e048:
          .byte 0xd6
          .byte 0x7c
          .byte 0x8f
          .byte 0xd2
          .byte 0x54
          .byte 0x23
          .byte 0x82
          .byte 0x3f
.L_42e050:
          .byte 0x5f
          .byte 0x42
          .byte 0x7b
          .byte 0x9
          .byte 0xed
          .byte 0x25
          .byte 0x1f
          .byte 0x40
.L_42e058:
          .byte 0x96
          .byte 0x7b
          .byte 0x1a
          .byte 0x61
          .byte 0xb9
          .byte 0xa7
          .byte 0xc1
          .byte 0x3f
.L_42e060:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_42e068:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x40
.L_42e070:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x40
.L_42e078:
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x60
          .byte 0x3f
.L_42e080:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x74
          .byte 0x3f
.L_42e088:
          .byte 0x61
          .byte 0xb9
          .byte 0xa7
          .byte 0x11
          .byte 0x96
          .byte 0x7b
          .byte 0xca
          .byte 0x3f
.L_42e090:
          .byte 0x22
          .byte 0x9
          .byte 0xd2
          .byte 0xde
          .byte 0x4
          .byte 0x70
          .byte 0xc0
          .byte 0x3f
.L_42e098:
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x84
          .byte 0x40
.L_42e0a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x70
          .byte 0x40
.L_42e0a8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_42e0b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_42e0b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x59
          .byte 0x40
.L_42e0c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
.L_42e0c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0x5f
          .byte 0x40
.L_42e0d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x40
.L_42e0d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x5f
          .byte 0x40
.L_42e0e0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_42e0e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_42e0f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x40
.L_42e0f8:
          .byte 0xfa
          .byte 0x7e
          .byte 0x6a
          .byte 0xbc
          .byte 0x74
          .byte 0x93
          .byte 0xa8
          .byte 0x3f
.L_42e100:
          .byte 0x79
          .byte 0xe9
          .byte 0x26
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0x8c
          .byte 0x3f
.L_42e108:
          .byte 0xec
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0xa1
          .byte 0x3f
.L_42e110:
          .byte 0x9f
          .byte 0x3c
          .byte 0x2c
          .byte 0xd4
          .byte 0x9a
          .byte 0xe6
          .byte 0x6d
          .byte 0x3f
.L_42e118:
          .byte 0x79
          .byte 0xe9
          .byte 0x26
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0xe0
          .byte 0x3f
.L_42e120:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0xcb
          .byte 0x40
.L_42e128:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x6f
          .byte 0x40
.L_42e130:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x40
.L_42e138:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_42e140:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x40
.L_42e148:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_42e150:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x5c
          .byte 0x40
.L_42e158:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_42e160:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x59
          .byte 0x40
.L_42e168:
          .byte 0x29
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xf5
          .byte 0x28
          .byte 0xac
          .byte 0x3f
.L_42e170:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0xa4
          .byte 0x3f
.L_42e178:
          .byte 0xec
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0xb1
          .byte 0x3f
.L_42e180:
          .byte 0x4a
          .byte 0xc
          .byte 0x2
          .byte 0x2b
          .byte 0x87
          .byte 0x16
          .byte 0xa9
          .byte 0x3f
.L_42e188:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0x8e
          .byte 0x3f
.L_42e190:
          .byte 0xaa
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x10
          .byte 0xe4
          .byte 0x3f
.L_42e198:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x73
          .byte 0x40
.L_42e1a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x40
.L_42e1a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x61
          .byte 0x40
.L_42e1b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x71
          .byte 0x40
.L_42e1b8:
          .byte 0xa4
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0xa3
          .byte 0xd0
          .byte 0xbf
.L_42e1c0:
          .byte 0xa8
          .byte 0xc6
          .byte 0x4b
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0xd8
          .byte 0x3f
.L_42e1c8:
          .byte 0x27
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0x1c
          .byte 0x5a
          .byte 0xe4
          .byte 0x3f
.L_42e1d0:
          .byte 0x21
          .byte 0xb0
          .byte 0x72
          .byte 0x68
          .byte 0x91
          .byte 0xed
          .byte 0xcc
          .byte 0x3f
.L_42e1d8:
          .byte 0xa2
          .byte 0x45
          .byte 0xb6
          .byte 0xf3
          .byte 0xfd
          .byte 0xd4
          .byte 0xc8
          .byte 0x3f
.L_42e1e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0xb0
          .byte 0x90
          .byte 0x41
.L_42e1e8:
          .byte 0x27
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0x1c
          .byte 0x5a
          .byte 0xe0
          .byte 0x3f
.L_42e1f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x64
          .byte 0x40
.L_42e1f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x75
          .byte 0x40
.L_42e200:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x40
.L_42e208:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xc9
          .byte 0x3f
.L_42e210:
          .byte 0xec
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0xe1
          .byte 0x3f
.L_42e218:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x40
.L_42e220:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xd9
          .byte 0x3f
.L_42e228:
          .byte 0xa
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0x3f
.L_42e230:
          .byte 0xda
          .byte 0x1b
          .byte 0x7c
          .byte 0x61
          .byte 0x32
          .byte 0x55
          .byte 0xb0
          .byte 0x3f
.L_42e238:
          .byte 0xc0
          .byte 0xec
          .byte 0x9e
          .byte 0x3c
          .byte 0x2c
          .byte 0xd4
          .byte 0x8a
          .byte 0x3f
.L_42e240:
          .byte 0xd1
          .byte 0x22
          .byte 0xdb
          .byte 0xf9
          .byte 0x7e
          .byte 0x6a
          .byte 0xe4
          .byte 0x3f
.L_42e248:
          .byte 0x42
          .byte 0x3e
          .byte 0xe8
          .byte 0xd9
          .byte 0xac
          .byte 0xfa
          .byte 0xa4
          .byte 0x3f
.L_42e250:
          .byte 0x50
          .byte 0xfc
          .byte 0x18
          .byte 0x73
          .byte 0xd7
          .byte 0x12
          .byte 0x92
          .byte 0x3f
.L_42e258:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x9d
          .byte 0x40
.L_42e260:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
.L_42e268:
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1e
          .byte 0xc4
          .byte 0xbc
          .byte 0xf6
          .byte 0x41
.L_42e270:
          .byte 0xf4
          .byte 0xde
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_42e278:
          .byte 0xf4
          .byte 0xde
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0xc0
.L_42e280:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x40
.L_42e288:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
.L_42e290:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4f
          .byte 0x40
.L_42e298:
          .byte 0xc3
          .byte 0xf5
          .byte 0x28
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xc5
          .byte 0x3f
.L_42e2a0:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0xce
          .byte 0x3f
.L_42e2a8:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0xd4
          .byte 0x3f
.L_42e2b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x40
.L_42e2b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x40
.L_42e2c0:
          .byte 0xa
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xa7
          .byte 0x3f
.L_42e2c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x71
          .byte 0x40
.L_42e2d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e2e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e2f0:
          .string "cmswtpnt.c"
.L_42e2fb:
          .string "(WhitePoint != ((void *)0))"
.L_42e317:
          .string "(TempK != ((void *)0))"
.L_42e32e:
          .string "(Illuminant != ((void *)0))"
.L_42e34a:
          .string "(Value != ((void *)0))"
          .zero 7
.L_42e368:
          .string "cmsWhitePointFromTemp: invalid temp"
          .zero 4
.L_42e390:
          .string "(SourceWhitePt != ((void *)0))"
          .zero 17
.L_42e3c0:
          .string "cmsAdaptToIlluminant"
          .zero 11
.L_42e3e0:
          .string "cmsTempFromWhitePoint"
          .zero 10
.L_42e400:
          .string "cmsWhitePointFromTemp"
          .zero 10
.L_42e420:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0xac
          .byte 0xa8
          .byte 0xc1
          .byte 0x34
          .byte 0xc
          .byte 0xc7
          .byte 0x3f
          .byte 0x4
          .byte 0xe2
          .byte 0x75
          .byte 0xfd
          .byte 0x82
          .byte 0xdd
          .byte 0xd0
          .byte 0x3f
          .byte 0x63
          .byte 0x7a
          .byte 0xc2
          .byte 0x12
          .byte 0xf
          .byte 0x28
          .byte 0xcf
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
          .byte 0x8e
          .byte 0x1
          .byte 0xd9
          .byte 0xeb
          .byte 0xdd
          .byte 0x1f
          .byte 0xc7
          .byte 0x3f
          .byte 0x15
          .byte 0x57
          .byte 0x95
          .byte 0x7d
          .byte 0x57
          .byte 0x4
          .byte 0xd1
          .byte 0x3f
          .byte 0x3
          .byte 0x43
          .byte 0x56
          .byte 0xb7
          .byte 0x7a
          .byte 0x4e
          .byte 0xd0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x40
          .byte 0xa0
          .byte 0x4f
          .byte 0xe4
          .byte 0x49
          .byte 0xd2
          .byte 0x35
          .byte 0xc7
          .byte 0x3f
          .byte 0xad
          .byte 0x2f
          .byte 0x12
          .byte 0xda
          .byte 0x72
          .byte 0x2e
          .byte 0xd1
          .byte 0x3f
          .byte 0xfa
          .byte 0x44
          .byte 0x9e
          .byte 0x24
          .byte 0x5d
          .byte 0x33
          .byte 0xd1
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x40
          .byte 0x1f
          .byte 0xba
          .byte 0xa0
          .byte 0xbe
          .byte 0x65
          .byte 0x4e
          .byte 0xc7
          .byte 0x3f
          .byte 0xb3
          .byte 0x24
          .byte 0x40
          .byte 0x4d
          .byte 0x2d
          .byte 0x5b
          .byte 0xd1
          .byte 0x3f
          .byte 0x87
          .byte 0xbf
          .byte 0x26
          .byte 0x6b
          .byte 0xd4
          .byte 0x43
          .byte 0xd2
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x40
          .byte 0x27
          .byte 0x88
          .byte 0xba
          .byte 0xf
          .byte 0x40
          .byte 0x6a
          .byte 0xc7
          .byte 0x3f
          .byte 0x5f
          .byte 0x24
          .byte 0xb4
          .byte 0xe5
          .byte 0x5c
          .byte 0x8a
          .byte 0xd1
          .byte 0x3f
          .byte 0x39
          .byte 0xd6
          .byte 0xc5
          .byte 0x6d
          .byte 0x34
          .byte 0x80
          .byte 0xd3
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x40
          .byte 0xb6
          .byte 0xb9
          .byte 0x31
          .byte 0x3d
          .byte 0x61
          .byte 0x89
          .byte 0xc7
          .byte 0x3f
          .byte 0xeb
          .byte 0x1c
          .byte 0x3
          .byte 0xb2
          .byte 0xd7
          .byte 0xbb
          .byte 0xd1
          .byte 0x3f
          .byte 0xb6
          .byte 0xf3
          .byte 0xfd
          .byte 0xd4
          .byte 0x78
          .byte 0xe9
          .byte 0xd4
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
          .byte 0x5c
          .byte 0x72
          .byte 0xdc
          .byte 0x29
          .byte 0x1d
          .byte 0xac
          .byte 0xc7
          .byte 0x3f
          .byte 0x3b
          .byte 0xc7
          .byte 0x80
          .byte 0xec
          .byte 0xf5
          .byte 0xee
          .byte 0xd1
          .byte 0x3f
          .byte 0x8e
          .byte 0x3b
          .byte 0xa5
          .byte 0x83
          .byte 0xf5
          .byte 0x7f
          .byte 0xd6
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x51
          .byte 0x40
          .byte 0x18
          .byte 0xb2
          .byte 0xba
          .byte 0xd5
          .byte 0x73
          .byte 0xd2
          .byte 0xc7
          .byte 0x3f
          .byte 0x88
          .byte 0x11
          .byte 0xc2
          .byte 0xa3
          .byte 0x8d
          .byte 0x23
          .byte 0xd2
          .byte 0x3f
          .byte 0x4e
          .byte 0xd1
          .byte 0x91
          .byte 0x5c
          .byte 0xfe
          .byte 0x43
          .byte 0xd8
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x40
          .byte 0x78
          .byte 0x9c
          .byte 0xa2
          .byte 0x23
          .byte 0xb9
          .byte 0xfc
          .byte 0xc7
          .byte 0x3f
          .byte 0xb7
          .byte 0xb4
          .byte 0x1a
          .byte 0x12
          .byte 0xf7
          .byte 0x58
          .byte 0xd2
          .byte 0x3f
          .byte 0x4b
          .byte 0xea
          .byte 0x4
          .byte 0x34
          .byte 0x11
          .byte 0x36
          .byte 0xda
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x40
          .byte 0xed
          .byte 0xd
          .byte 0xbe
          .byte 0x30
          .byte 0x99
          .byte 0x2a
          .byte 0xc8
          .byte 0x3f
          .byte 0x3b
          .byte 0x8d
          .byte 0xb4
          .byte 0x54
          .byte 0xde
          .byte 0x8e
          .byte 0xd2
          .byte 0x3f
          .byte 0x11
          .byte 0xaa
          .byte 0xd4
          .byte 0xec
          .byte 0x81
          .byte 0x56
          .byte 0xdc
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
          .byte 0x6
          .byte 0x2a
          .byte 0xe3
          .byte 0xdf
          .byte 0x67
          .byte 0x5c
          .byte 0xc8
          .byte 0x3f
          .byte 0xbf
          .byte 0x65
          .byte 0x4e
          .byte 0x97
          .byte 0xc5
          .byte 0xc4
          .byte 0xd2
          .byte 0x3f
          .byte 0xbc
          .byte 0x57
          .byte 0xad
          .byte 0x4c
          .byte 0xf8
          .byte 0xa5
          .byte 0xde
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x5f
          .byte 0x40
          .byte 0xef
          .byte 0xe1
          .byte 0x92
          .byte 0xe3
          .byte 0x4e
          .byte 0xe9
          .byte 0xc8
          .byte 0x3f
          .byte 0xb5
          .byte 0xfd
          .byte 0x2b
          .byte 0x2b
          .byte 0x4d
          .byte 0x4a
          .byte 0xd3
          .byte 0x3f
          .byte 0xc7
          .byte 0xd7
          .byte 0x9e
          .byte 0x59
          .byte 0x12
          .byte 0xa0
          .byte 0xe2
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x62
          .byte 0x40
          .byte 0x93
          .byte 0x52
          .byte 0xd0
          .byte 0xed
          .byte 0x25
          .byte 0x8d
          .byte 0xc9
          .byte 0x3f
          .byte 0x7c
          .byte 0x27
          .byte 0x66
          .byte 0xbd
          .byte 0x18
          .byte 0xca
          .byte 0xd3
          .byte 0x3f
          .byte 0xcc
          .byte 0x40
          .byte 0x65
          .byte 0xfc
          .byte 0xfb
          .byte 0x8c
          .byte 0xe6
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x65
          .byte 0x40
          .byte 0x12
          .byte 0x83
          .byte 0xc0
          .byte 0xca
          .byte 0xa1
          .byte 0x45
          .byte 0xca
          .byte 0x3f
          .byte 0x53
          .byte 0x91
          .byte 0xa
          .byte 0x63
          .byte 0xb
          .byte 0x41
          .byte 0xd4
          .byte 0x3f
          .byte 0x42
          .byte 0x43
          .byte 0xff
          .byte 0x4
          .byte 0x17
          .byte 0x2b
          .byte 0xeb
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x40
          .byte 0x72
          .byte 0x33
          .byte 0xdc
          .byte 0x80
          .byte 0xcf
          .byte 0xf
          .byte 0xcb
          .byte 0x3f
          .byte 0xcb
          .byte 0xbe
          .byte 0x2b
          .byte 0x82
          .byte 0xff
          .byte 0xad
          .byte 0xd4
          .byte 0x3f
          .byte 0x5f
          .byte 0x98
          .byte 0x4c
          .byte 0x15
          .byte 0x8c
          .byte 0x4a
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x6c
          .byte 0x40
          .byte 0x61
          .byte 0x8e
          .byte 0x1e
          .byte 0xbf
          .byte 0xb7
          .byte 0xe9
          .byte 0xcb
          .byte 0x3f
          .byte 0x72
          .byte 0x33
          .byte 0xdc
          .byte 0x80
          .byte 0xcf
          .byte 0xf
          .byte 0xd5
          .byte 0x3f
          .byte 0x64
          .byte 0x5d
          .byte 0xdc
          .byte 0x46
          .byte 0x3
          .byte 0x78
          .byte 0xf3
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x6f
          .byte 0x40
          .byte 0xe3
          .byte 0x53
          .byte 0x0
          .byte 0x8c
          .byte 0x67
          .byte 0xd0
          .byte 0xcc
          .byte 0x3f
          .byte 0x11
          .byte 0x1
          .byte 0x87
          .byte 0x50
          .byte 0xa5
          .byte 0x66
          .byte 0xd5
          .byte 0x3f
          .byte 0x80
          .byte 0x48
          .byte 0xbf
          .byte 0x7d
          .byte 0x1d
          .byte 0x38
          .byte 0xf7
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x71
          .byte 0x40
          .byte 0x1a
          .byte 0x8b
          .byte 0xa6
          .byte 0xb3
          .byte 0x93
          .byte 0xc1
          .byte 0xcd
          .byte 0x3f
          .byte 0x34
          .byte 0x4b
          .byte 0x2
          .byte 0xd4
          .byte 0xd4
          .byte 0xb2
          .byte 0xd5
          .byte 0x3f
          .byte 0xcc
          .byte 0xee
          .byte 0xc9
          .byte 0xc3
          .byte 0x42
          .byte 0xad
          .byte 0xfb
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x72
          .byte 0x40
          .byte 0x41
          .byte 0x82
          .byte 0xe2
          .byte 0xc7
          .byte 0x98
          .byte 0xbb
          .byte 0xce
          .byte 0x3f
          .byte 0xf7
          .byte 0x58
          .byte 0xfa
          .byte 0xd0
          .byte 0x5
          .byte 0xf5
          .byte 0xd5
          .byte 0x3f
          .byte 0xa6
          .byte 0xa
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x82
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x74
          .byte 0x40
          .byte 0x1f
          .byte 0x9d
          .byte 0xba
          .byte 0xf2
          .byte 0x59
          .byte 0x9e
          .byte 0xcf
          .byte 0x3f
          .byte 0x76
          .byte 0x71
          .byte 0x1b
          .byte 0xd
          .byte 0xe0
          .byte 0x2d
          .byte 0xd6
          .byte 0x3f
          .byte 0x91
          .byte 0xf
          .byte 0x7a
          .byte 0x36
          .byte 0xab
          .byte 0xbe
          .byte 0x3
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x75
          .byte 0x40
          .byte 0xff
          .byte 0x9
          .byte 0x2e
          .byte 0x56
          .byte 0xd4
          .byte 0x60
          .byte 0xd0
          .byte 0x3f
          .byte 0x58
          .byte 0xff
          .byte 0xe7
          .byte 0x30
          .byte 0x5f
          .byte 0x5e
          .byte 0xd6
          .byte 0x3f
          .byte 0xbc
          .byte 0x96
          .byte 0x90
          .byte 0xf
          .byte 0x7a
          .byte 0xb6
          .byte 0x7
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x77
          .byte 0x40
          .byte 0x4c
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0x60
          .byte 0xe5
          .byte 0xd0
          .byte 0x3f
          .byte 0xba
          .byte 0x49
          .byte 0xc
          .byte 0x2
          .byte 0x2b
          .byte 0x87
          .byte 0xd6
          .byte 0x3f
          .byte 0xbb
          .byte 0x27
          .byte 0xf
          .byte 0xb
          .byte 0xb5
          .byte 0xa6
          .byte 0xc
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x40
          .byte 0x96
          .byte 0x4
          .byte 0xa8
          .byte 0xa9
          .byte 0x65
          .byte 0x6b
          .byte 0xd1
          .byte 0x3f
          .byte 0x7e
          .byte 0xa9
          .byte 0x9f
          .byte 0x37
          .byte 0x15
          .byte 0xa9
          .byte 0xd6
          .byte 0x3f
          .byte 0x15
          .byte 0x8c
          .byte 0x4a
          .byte 0xea
          .byte 0x4
          .byte 0x74
          .byte 0x11
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x7a
          .byte 0x40
          .byte 0x35
          .byte 0x7
          .byte 0x8
          .byte 0xe6
          .byte 0xe8
          .byte 0xf1
          .byte 0xd1
          .byte 0x3f
          .byte 0x85
          .byte 0x77
          .byte 0xb9
          .byte 0x88
          .byte 0xef
          .byte 0xc4
          .byte 0xd6
          .byte 0x3f
          .byte 0x53
          .byte 0x5
          .byte 0xa3
          .byte 0x92
          .byte 0x3a
          .byte 0x81
          .byte 0x15
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x7c
          .byte 0x40
          .byte 0x29
          .byte 0x3f
          .byte 0xa9
          .byte 0xf6
          .byte 0xe9
          .byte 0x78
          .byte 0xd2
          .byte 0x3f
          .byte 0xec
          .byte 0xfa
          .byte 0x5
          .byte 0xbb
          .byte 0x61
          .byte 0xdb
          .byte 0xd6
          .byte 0x3f
          .byte 0xba
          .byte 0x6b
          .byte 0x9
          .byte 0xf9
          .byte 0xa0
          .byte 0xe7
          .byte 0x1a
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x7d
          .byte 0x40
          .byte 0x8f
          .byte 0x53
          .byte 0x74
          .byte 0x24
          .byte 0x97
          .byte 0xff
          .byte 0xd2
          .byte 0x3f
          .byte 0x93
          .byte 0x8c
          .byte 0x9c
          .byte 0x85
          .byte 0x3d
          .byte 0xed
          .byte 0xd6
          .byte 0x3f
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0x60
          .byte 0xe5
          .byte 0x30
          .byte 0x21
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x40
          .byte 0x67
          .byte 0x44
          .byte 0x69
          .byte 0x6f
          .byte 0xf0
          .byte 0x85
          .byte 0xd3
          .byte 0x3f
          .byte 0xd0
          .byte 0x61
          .byte 0xbe
          .byte 0xbc
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x3f
          .byte 0xd9
          .byte 0xce
          .byte 0xf7
          .byte 0x53
          .byte 0xe3
          .byte 0xa5
          .byte 0x26
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x80
          .byte 0x40
          .byte 0x5d
          .byte 0xdc
          .byte 0x46
          .byte 0x3
          .byte 0x78
          .byte 0xb
          .byte 0xd4
          .byte 0x3f
          .byte 0x30
          .byte 0x9e
          .byte 0x41
          .byte 0x43
          .byte 0xff
          .byte 0x4
          .byte 0xd7
          .byte 0x3f
          .byte 0xa8
          .byte 0xc6
          .byte 0x4b
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0x2f
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x81
          .byte 0x40
          .byte 0xab
          .byte 0x9
          .byte 0xa2
          .byte 0xee
          .byte 0x3
          .byte 0x90
          .byte 0xd4
          .byte 0x3f
          .byte 0x95
          .byte 0x9a
          .byte 0x3d
          .byte 0xd0
          .byte 0xa
          .byte 0xc
          .byte 0xd7
          .byte 0x3f
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x53
          .byte 0x37
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x81
          .byte 0x40
          .byte 0x88
          .byte 0xba
          .byte 0xf
          .byte 0x40
          .byte 0x6a
          .byte 0x13
          .byte 0xd5
          .byte 0x3f
          .byte 0x8d
          .byte 0x7a
          .byte 0x88
          .byte 0x46
          .byte 0x77
          .byte 0x10
          .byte 0xd7
          .byte 0x3f
          .byte 0xc3
          .byte 0xf5
          .byte 0x28
          .byte 0x5c
          .byte 0x8f
          .byte 0x62
          .byte 0x44
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x82
          .byte 0x40
          .byte 0x68
          .byte 0xcb
          .byte 0xb9
          .byte 0x14
          .byte 0x57
          .byte 0x95
          .byte 0xd5
          .byte 0x3f
          .byte 0xa6
          .byte 0x61
          .byte 0xf8
          .byte 0x88
          .byte 0x98
          .byte 0x12
          .byte 0xd7
          .byte 0x3f
          .byte 0xcd
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0x1c
          .byte 0x5d
          .byte 0xc0
.L_42e800:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xaf
          .byte 0x40
.L_42e808:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0xbb
          .byte 0x40
.L_42e810:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0xcd
          .byte 0xcd
          .byte 0x41
.L_42e818:
          .byte 0x21
          .byte 0xb0
          .byte 0x72
          .byte 0x68
          .byte 0x91
          .byte 0x6d
          .byte 0x12
          .byte 0xc0
.L_42e820:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x2e
          .byte 0x41
.L_42e828:
          .byte 0xe7
          .byte 0x8c
          .byte 0x28
          .byte 0xed
          .byte 0xd
          .byte 0xbe
          .byte 0x7
          .byte 0x40
.L_42e830:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0x40
.L_42e838:
          .byte 0x1e
          .byte 0xe1
          .byte 0xb4
          .byte 0xe0
          .byte 0x45
          .byte 0x5f
          .byte 0xb9
          .byte 0x3f
.L_42e840:
          .byte 0x6b
          .byte 0xf2
          .byte 0x94
          .byte 0xd5
          .byte 0x74
          .byte 0x3d
          .byte 0xcf
          .byte 0x3f
.L_42e848:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0xd8
          .byte 0x40
.L_42e850:
          .byte 0x22
          .byte 0x8e
          .byte 0x75
          .byte 0x71
          .byte 0x1b
          .byte 0xd
          .byte 0x0
          .byte 0xc0
.L_42e858:
          .byte 0x59
          .byte 0x86
          .byte 0x38
          .byte 0xd6
          .byte 0xc5
          .byte 0x6d
          .byte 0xfe
          .byte 0x3f
.L_42e860:
          .byte 0x93
          .byte 0x0
          .byte 0x35
          .byte 0xb5
          .byte 0x6c
          .byte 0xad
          .byte 0xcf
          .byte 0x3f
.L_42e868:
          .byte 0xf3
          .byte 0x2
          .byte 0xec
          .byte 0xa3
          .byte 0x53
          .byte 0x57
          .byte 0xce
          .byte 0x3f
.L_42e870:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
.L_42e878:
          .byte 0xf6
          .byte 0x28
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xf5
          .byte 0x6
          .byte 0x40
.L_42e880:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xd1
          .byte 0x3f
.L_42e888:
          .byte 0x63
          .byte 0x7a
          .byte 0xc2
          .byte 0x12
          .byte 0xf
          .byte 0x28
          .byte 0xcf
          .byte 0xbf
.L_42e890:
          .byte 0x4
          .byte 0xe2
          .byte 0x75
          .byte 0xfd
          .byte 0x82
          .byte 0xdd
          .byte 0xd0
          .byte 0x3f
.L_42e898:
          .byte 0x5c
          .byte 0xac
          .byte 0xa8
          .byte 0xc1
          .byte 0x34
          .byte 0xc
          .byte 0xc7
          .byte 0x3f
.L_42e8a0:
          .byte 0x86
          .byte 0xc9
          .byte 0x54
          .byte 0xc1
          .byte 0xa8
          .byte 0xa4
          .byte 0xec
          .byte 0x3f
.L_42e8a8:
          .byte 0xb1
          .byte 0xe1
          .byte 0xe9
          .byte 0x95
          .byte 0xb2
          .byte 0xc
          .byte 0xd1
          .byte 0x3f
.L_42e8b0:
          .byte 0xf0
          .byte 0x85
          .byte 0xc9
          .byte 0x54
          .byte 0xc1
          .byte 0xa8
          .byte 0xc4
          .byte 0xbf
.L_42e8b8:
          .byte 0xc4
          .byte 0xb1
          .byte 0x2e
          .byte 0x6e
          .byte 0xa3
          .byte 0x1
          .byte 0xe8
          .byte 0xbf
.L_42e8c0:
          .byte 0xd1
          .byte 0x22
          .byte 0xdb
          .byte 0xf9
          .byte 0x7e
          .byte 0x6a
          .byte 0xfb
          .byte 0x3f
.L_42e8c8:
          .byte 0x27
          .byte 0xc2
          .byte 0x86
          .byte 0xa7
          .byte 0x57
          .byte 0xca
          .byte 0xa2
          .byte 0x3f
.L_42e8d0:
          .byte 0x9
          .byte 0xf9
          .byte 0xa0
          .byte 0x67
          .byte 0xb3
          .byte 0xea
          .byte 0xa3
          .byte 0x3f
.L_42e8d8:
          .byte 0xf0
          .byte 0xa7
          .byte 0xc6
          .byte 0x4b
          .byte 0x37
          .byte 0x89
          .byte 0xb1
          .byte 0xbf
.L_42e8e0:
          .byte 0xb7
          .byte 0x62
          .byte 0x7f
          .byte 0xd9
          .byte 0x3d
          .byte 0x79
          .byte 0xf0
          .byte 0x3f
.L_42e8e8:
          .string "cmsxform.c"
.L_42e8f3:
          .string "(NewAlarm != ((void *)0))"
.L_42e90d:
          .string "(OldAlarm != ((void *)0))"
.L_42e927:
          .string "(p != ((void *)0))"
.L_42e93a:
          .string "Unsupported raster format"
.L_42e954:
          .string "(CMMcargo != ((void *)0))"
.L_42e96e:
          .string "Couldn\'t link the profiles"
          .zero 7
.L_42e990:
          .string "(ContextAlarmCodes != ((void *)0))"
          .zero 5
.L_42e9b8:
          .string "NULL input profiles on transform"
          .zero 7
.L_42e9e0:
          .string "Wrong input color space on transform"
          .zero 3
.L_42ea08:
          .string "Wrong output color space on transform"
          .zero 2
.L_42ea30:
          .string "Channel count doesn\'t match. Profile is corrupted"
          .zero 6
.L_42ea68:
          .string "Wrong number of profiles. 1..255 expected, %d found."
          .zero 3
.L_42eaa0:
          .string "cmsChangeBuffersFormat works only on transforms created originally with at least 16 bits of precision"
          .zero 26
.L_42eb20:
          .string "_cmsGetTransformFormattersFloat"
.L_42eb40:
          .string "_cmsGetTransformFormatters16"
          .zero 3
.L_42eb60:
          .string "_cmsGetTransformUserData"
          .zero 7
.L_42eb80:
          .string "_cmsSetTransformUserData"
          .zero 7
.L_42eba0:
          .string "cmsDeleteTransform"
          .zero 13
.L_42ebc0:
          .string "cmsGetAlarmCodes"
          .zero 15
.L_42ebe0:
          .string "cmsSetAlarmCodes"
          .zero 15
.L_42ec00:
          .string "cmsGetAlarmCodesTHR"
          .zero 12
.L_42ec20:
          .string "cmsSetAlarmCodesTHR"
          .zero 4
.L_42ec38:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_42ec40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
.L_42ec48:
          .zero 8
.L_42ec50:
          .byte 0xd0
          .byte 0xb3
          .byte 0x59
          .byte 0xf5
          .byte 0xb9
          .byte 0xda
          .byte 0xee
          .byte 0x3f
.L_42ec58:
          .byte 0x84
          .byte 0xd
          .byte 0x4f
          .byte 0xaf
          .byte 0x94
          .byte 0x65
          .byte 0xea
          .byte 0x3f
.L_42ec60:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ec68:
          .string "Color %d out of range; ignored"
.L_42ec87:
          .string "cmsnamed.c"
.L_42ec92:
          .string "(dict != ((void *)0))"
.L_42eca8:
          .string "(Name != ((void *)0))"
.L_42ecbe:
          .string "(old_dict != ((void *)0))"
          .zero 8
.L_42ece0:
          .string "cmsDictDup"
          .zero 5
.L_42ecf0:
          .string "cmsDictAddEntry"
.L_42ed00:
          .string "cmsDictFree"
.L_42ed0c:
          .string "US"
.L_42ed0f:
          .string "en"
.L_42ed12:
          .string "Little CMS"
.L_42ed1d:
          .string "Linearization built-in"
.L_42ed34:
          .string "ink-limiting built-in"
.L_42ed4a:
          .string "cmsvirt.c"
.L_42ed54:
          .string "(hTransform != ((void *)0))"
.L_42ed70:
          .string "N"
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42edd8:
          .string "R"
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ee10:
          .string "g"
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ee48:
          .string "L"
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eea8:
          .string "i"
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ef00:
          .string "L"
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ef58:
          .string "X"
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42efb0:
          .string "s"
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42efe8:
          .string "B"
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f020:
          .string "N"
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f078:
          .string "N"
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f0a8:
          .string "d"
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f0e0:
          .zero 16
.L_42f0f0:
          .string "cmsTransform2DeviceLink"
          .zero 24
.L_42f120:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f2b0:
          .string "InkLimiting: Only CMYK currently supported"
          .zero 5
.L_42f2e0:
          .string "InkLimiting: Limit should be between 0..400"
          .zero 4
.L_42f310:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x11
          .byte 0x40
.L_42f318:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x40
.L_42f320:
          .byte 0xcd
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0x0
          .byte 0x40
.L_42f328:
          .byte 0x88
          .byte 0x63
          .byte 0x5d
          .byte 0xdc
          .byte 0x46
          .byte 0x3
          .byte 0xd4
          .byte 0x3f
.L_42f330:
          .byte 0x75
          .byte 0x93
          .byte 0x18
          .byte 0x4
          .byte 0x56
          .byte 0xe
          .byte 0xd5
          .byte 0x3f
.L_42f338:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0xe4
          .byte 0x3f
.L_42f340:
          .byte 0x1f
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0xd5
          .byte 0x3f
.L_42f348:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0xd3
          .byte 0x3f
.L_42f350:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0xe3
          .byte 0x3f
.L_42f358:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0xc3
          .byte 0x3f
.L_42f360:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0xae
          .byte 0x3f
.L_42f368:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x3
          .byte 0x40
.L_42f370:
          .byte 0x60
          .byte 0xeb
          .byte 0xa
          .byte 0xcd
          .byte 0xed
          .byte 0x54
          .byte 0xee
          .byte 0x3f
.L_42f378:
          .byte 0x3
          .byte 0x4a
          .byte 0x51
          .byte 0x2f
          .byte 0x23
          .byte 0xb1
          .byte 0xaa
          .byte 0x3f
.L_42f380:
          .byte 0x80
          .byte 0xb5
          .byte 0x49
          .byte 0x21
          .byte 0x72
          .byte 0xd0
          .byte 0xb3
          .byte 0x3f
.L_42f388:
          .byte 0x12
          .byte 0x14
          .byte 0x3f
          .byte 0xc6
          .byte 0xdc
          .byte 0xb5
          .byte 0xa4
          .byte 0x3f
.L_42f390:
          .string "Multisegment or Inverted parametric curves cannot be written"
          .zero 3
.L_42f3d0:
          .string "Unsupported number of channels for VCGT \'%d\'"
          .zero 3
.L_42f400:
          .string "Unsupported bit depth for VCGT \'%d\'"
          .zero 4
.L_42f428:
          .string "Unsupported tag type for VCGT \'%d\'"
          .zero 5
.L_42f450:
          .string "LUT8 needs 256 entries on prelinearization"
          .zero 5
.L_42f480:
          .string "LUT is not suitable to be saved as LUT8"
.L_42f4a8:
          .string "Unknown parametric curve type \'%d\'"
          .zero 5
.L_42f4d0:
          .string "Cannot save floating point data, CLUT are 8 or 16 bit only"
          .zero 5
.L_42f510:
          .string "Too many device coordinates \'%d\'"
          .zero 7
.L_42f538:
          .string "(!(Array == ((void *)0) && n > 0))"
          .zero 5
.L_42f560:
          .string "multiLocalizedUnicodeType of len != 12 is not supported."
          .zero 7
.L_42f5a0:
          .string "LUT is not suitable to be saved as LUT16"
          .zero 7
.L_42f5d0:
          .string "Unknown curve element type \'%s\' found."
          .zero 1
.L_42f5f8:
          .string "Unknown record length in dictionary \'%d\'"
          .zero 7
.L_42f628:
          .string "LUT is not suitable to be saved as LutAToB"
          .zero 5
.L_42f658:
          .string "LUT is not suitable to be saved as LutBToA"
.L_42f683:
          .string "Unsupported parametric curve"
.L_42f6a0:
          .string "Too many colorants \'%d\'"
.L_42f6b8:
          .string "Found unknown MPE type \'%s\'"
.L_42f6d4:
          .string "Too many named colors \'%d\'"
.L_42f6ef:
          .string "cmstypes.c"
.L_42f6fa:
          .string "(Tables != ((void *)0))"
.L_42f712:
          .string "PS"
.L_42f715:
          .string "nm"
.L_42f718:
          .string "#0"
.L_42f71b:
          .string "#1"
.L_42f71e:
          .string "#2"
.L_42f721:
          .string "#3"
.L_42f724:
          .string "Bad dictionary Name/Value"
.L_42f73e:
          .string "Unknown precision of \'%d\'"
.L_42f758:
          .string "Unknown curve type \'%s\'"
.L_42f770:
          .string "Unknown MPE type \'%s\' found."
          .zero 3
.L_42f790:
          .zero 16
.L_42f7a0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f7c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f7e0:
          .string "Write16bitTables"
          .zero 15
.L_42f800:
          .string "_cmsReadWCharArray"
          .zero 13
.L_42f820:
          .string "_cmsWriteWCharArray"
.L_42f834:
          .zero 4
.L_42f838:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
.L_42f840:
          .byte 0x78
          .byte 0x86
          .byte 0x7
          .byte 0xe4
.L_42f844:
          .string "cmsopt.c"
.L_42f84d:
          .string "(Lut -> InputChannels < 16)"
.L_42f869:
          .string "(Lut -> OutputChannels < 16)"
          .zero 2
.L_42f888:
          .string "(internal) Attempt to PatchLUT on non-lut stage"
.L_42f8b8:
          .string "(internal) %d Channels are not supported on PatchLUT"
          .zero 3
.L_42f8f0:
          .string "OptimizeByResampling"
          .zero 3
.L_42f908:
          .string "XFormSampler16"
          .zero 9
.L_42f920:
          .string "DupPluginOptimizationList"
          .zero 6
.L_42f940:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x40
.L_42f948:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x3f
.L_42f950:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xaf
          .byte 0x40
.L_42f958:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xb5
          .byte 0xf8
          .byte 0xe4
          .byte 0x3e
.L_42f960:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x94
          .byte 0x3f
.L_42f968:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f980:
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x17
          .byte 0x16
          .byte 0x15
          .byte 0x14
          .byte 0x13
          .byte 0x12
          .byte 0x11
          .byte 0x10
          .byte 0xf
          .byte 0xe
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0xd
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x17
          .byte 0x16
          .byte 0x15
          .byte 0x14
          .byte 0x13
          .byte 0x12
          .byte 0x11
          .byte 0x10
          .byte 0xf
          .byte 0xe
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0xd
.L_42fb80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x80
          .byte 0x2
          .byte 0x80
          .byte 0x4
          .byte 0x80
          .byte 0x8
          .byte 0x80
          .byte 0x10
          .byte 0x80
          .byte 0x20
          .byte 0x80
          .byte 0x40
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
.L_42ff80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x80
.L_430008:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x86
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc7
.L_430080:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
.L_430100:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x80
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x81
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x82
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x83
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x85
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x86
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x87
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x88
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x89
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x90
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x91
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x92
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x93
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x94
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x95
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x96
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x97
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x98
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x99
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xaa
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xab
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xac
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xad
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xae
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xaf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xba
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbe
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xca
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xcb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xcc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xcd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xce
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xcf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xda
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xdb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xdc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xdd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xde
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xdf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xea
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xeb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xec
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xed
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xee
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xef
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfa
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfe
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xff
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7f
          .byte 0x38
.L_432100:
          .string "Unrecognized alpha channel width"
.L_432121:
          .string "ColorSpace mismatch"
.L_432135:
          .string "Couldn\'t link \'%d\' profiles"
.L_432151:
          .string "Unsupported intent \'%d\'"
          .zero 7
.L_432170:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0x3f
.L_432178:
          .byte 0x18
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x8
          .byte 0x3f
.L_432180:
          .string "cmserr.c"
          .zero 7
.L_432190:
          .string "_cmsAllocMemPluginChunk"
.L_4321a8:
          .string "Couldn\'t create tone curve of more than 65530 entries"
          .zero 2
.L_4321e0:
          .string "Couldn\'t create tone curve with zero segments and no table"
          .zero 5
.L_432220:
          .string "Invalid parametric curve type %d"
          .zero 7
.L_432248:
          .string "cmsSmoothToneCurve: too many points."
          .zero 3
.L_432270:
          .string "cmsSmoothToneCurve: Non-Monotonic."
          .zero 5
.L_432298:
          .string "cmsSmoothToneCurve: Degenerated, mostly zeros."
          .zero 1
.L_4322c8:
          .string "cmsSmoothToneCurve: Degenerated, mostly poles."
.L_4322f7:
          .string "cmsgamma.c"
.L_432302:
          .string "(t != ((void *)0))"
.L_432315:
          .string "(Segments != ((void *)0))"
.L_43232f:
          .string "(Params != ((void *)0))"
.L_432347:
          .string "(Curve != ((void *)0))"
.L_43235e:
          .string "(InCurve != ((void *)0))"
.L_432377:
          .string "(InGamma != ((void *)0))"
.L_432390:
          .string "(X != ((void *)0))"
.L_4323a3:
          .string "(Y != ((void *)0))"
          .zero 10
.L_4323c0:
          .string "cmsEstimateGamma"
          .zero 15
.L_4323e0:
          .string "cmsEvalToneCurve16"
          .zero 13
.L_432400:
          .string "cmsEvalToneCurveFloat"
          .zero 10
.L_432420:
          .string "cmsGetToneCurveParametricType"
          .zero 2
.L_432440:
          .string "cmsIsToneCurveMultisegment"
          .zero 5
.L_432460:
          .string "cmsIsToneCurveDescending"
          .zero 7
.L_432480:
          .string "cmsIsToneCurveMonotonic"
          .zero 8
.L_4324a0:
          .string "cmsIsToneCurveLinear"
          .zero 11
.L_4324c0:
          .string "cmsReverseToneCurve"
          .zero 12
.L_4324e0:
          .string "cmsReverseToneCurveEx"
          .zero 10
.L_432500:
          .string "cmsJoinToneCurve"
          .zero 15
.L_432520:
          .string "cmsFreeToneCurveTriple"
          .zero 9
.L_432540:
          .string "cmsBuildParametricToneCurve"
          .zero 4
.L_432560:
          .string "cmsBuildSegmentedToneCurve"
          .zero 5
.L_432580:
          .string "cmsGetToneCurveEstimatedTable"
          .zero 2
.L_4325a0:
          .string "cmsGetToneCurveEstimatedTableEntries"
          .zero 11
.L_4325d0:
          .string "DupPluginCurvesList"
          .zero 12
.L_4325f0:
          .string "_cmsAllocCurvesPluginChunk"
          .zero 5
.L_432610:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x80
          .byte 0x44
.L_432618:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x80
          .byte 0xc4
.L_432620:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_432628:
          .byte 0x2d
          .byte 0x43
          .byte 0x1c
          .byte 0xeb
          .byte 0xe2
          .byte 0x36
          .byte 0x1a
          .byte 0x3f
.L_432630:
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x50
          .byte 0x3f
.L_432638:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3f
.L_432640:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
.L_432644:
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
.L_432648:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc0
.L_43264c:
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x40
.L_432650:
          .string "Wrong position of PCS. 1..255 expected, %d found."
.L_432682:
          .string "Invalid angle"
.L_432690:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x40
.L_432698:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x73
          .byte 0x40
.L_4326a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x60
          .byte 0x40
.L_4326a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x6c
          .byte 0x40
.L_4326b0:
          .string "cmsintrp.c"
.L_4326bb:
          .string "(from != ((void *)0))"
          .zero 15
.L_4326e0:
          .long .L_427b70-.L_4326e0
          .long .L_427b50-.L_4326e0
          .long .L_427c40-.L_4326e0
          .long .L_427bc0-.L_4326e0
          .long .L_427c00-.L_4326e0
          .long .L_427be8-.L_4326e0
          .long .L_427c20-.L_4326e0
          .long .L_427ba0-.L_4326e0
          .long .L_427b80-.L_4326e0
          .zero 12
.L_432710:
          .string "_cmsAllocInterpPluginChunk"
          .zero 5
.L_432730:
          .string "Too many input channels (%d channels, max=%d)"
          .zero 2
.L_432760:
          .string "Unsupported interpolation (%d->%d channels)"
          .zero 4
.L_432790:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
.L_432794:
          .string "cmsio1.c"
.L_43279d:
          .string "Unexpected direction (%d)"
          .zero 9
.L_4327c0:
          .string "_cmsReadCHAD"
          .zero 3
.L_4327d0:
          .string "_cmsReadMediaWhitePoint"
          .zero 8
.L_4327f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432810:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432830:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432850:
          .byte 0x3
          .byte 0x84
          .byte 0x32
          .byte 0xd0
          .byte 0xd8
          .byte 0xda
          .byte 0xde
          .byte 0x3f
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x82
          .byte 0x22
          .byte 0xfe
          .byte 0x14
          .byte 0xaf
          .byte 0x65
          .byte 0xda
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432870:
          .byte 0x30
          .byte 0x44
          .byte 0x32
          .byte 0x42
          .byte 0x31
          .byte 0x44
          .byte 0x32
          .byte 0x42
          .byte 0x32
          .byte 0x44
          .byte 0x32
          .byte 0x42
          .byte 0x33
          .byte 0x44
          .byte 0x32
          .byte 0x42
.L_432880:
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x31
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x31
          .byte 0x41
          .byte 0x32
          .byte 0x42
.L_432890:
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x44
          .byte 0x31
          .byte 0x42
          .byte 0x32
          .byte 0x44
          .byte 0x32
          .byte 0x42
          .byte 0x32
          .byte 0x44
          .byte 0x33
          .byte 0x42
          .byte 0x32
          .byte 0x44
.L_4328a0:
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x31
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x31
          .byte 0x42
          .byte 0x32
          .byte 0x41
.L_4328b0:
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4328b8:
          .string "cmslut.c"
.L_4328c1:
          .string "(mpe ->InputChannels <= 128)"
.L_4328de:
          .string "(mpe ->OutputChannels <= 128)"
.L_4328fc:
          .string "(Dims != ((void *)0))"
.L_432912:
          .string "(mpe != ((void *)0))"
.L_432927:
          .string "(clutPoints != ((void *)0))"
.L_432943:
          .string "(lut != ((void *)0))"
          .zero 8
.L_432960:
          .string "cmsPipelineEvalFloat"
          .zero 11
.L_432980:
          .string "cmsPipelineEval16"
          .zero 14
.L_4329a0:
          .string "cmsPipelineOutputChannels"
          .zero 6
.L_4329c0:
          .string "cmsPipelineInputChannels"
          .zero 7
.L_4329e0:
          .string "cmsGetPipelineContextID"
          .zero 8
.L_432a00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432a50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432a80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432ae0:
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432b30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xe0
          .byte 0x3f
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432b60:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x70
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x70
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432bc0:
          .byte 0x20
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432c20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432c70:
          .string "cmsStageAllocCLutFloatGranular"
          .zero 1
.L_432c90:
          .string "CubeSize"
          .zero 7
.L_432ca0:
          .string "EvaluateCLUTfloatIn16"
          .zero 10
.L_432cc0:
          .string "cmsStageAllocCLut16bitGranular"
          .zero 1
.L_432ce0:
          .string "EvaluateCurves"
          .zero 1
.L_432cf0:
          .string "CurveSetElemTypeFree"
          .zero 3
.L_432d08:
          .byte 0x40
          .byte 0x8c
          .byte 0xb5
          .byte 0x78
          .byte 0x1d
          .byte 0xaf
          .byte 0x15
          .byte 0x44
.L_432d10:
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xd9
          .byte 0xce
          .byte 0xf7
          .byte 0xef
          .byte 0x3f
.L_432d18:
          .byte 0x6f
          .byte 0x12
          .byte 0x83
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432d20:
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xf0
          .byte 0x3e
.L_432d28:
          .byte 0xbc
          .byte 0x79
          .byte 0xaa
          .byte 0x43
          .byte 0x6e
          .byte 0x86
          .byte 0x6b
          .byte 0x3f
.L_432d30:
          .byte 0xf0
          .byte 0xb8
          .byte 0x4d
          .byte 0x5d
          .byte 0x9e
          .byte 0x73
          .byte 0x6c
          .byte 0x3f
.L_432d38:
          .byte 0xa6
          .byte 0xf2
          .byte 0x76
          .byte 0x84
          .byte 0xd3
          .byte 0x82
          .byte 0x67
          .byte 0x3f
.L_432d40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xc0
.L_432d48:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb9
          .byte 0x3f
.L_432d50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3f
.L_432d58:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0x9e
          .byte 0x3f
.L_432d60:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
#===================================
# end section .rodata
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_63dd30:
          .quad .L_4020f0
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_63dd38:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

.L_63dd40:
          .quad .L_41e600
          .quad .L_41e380
          .quad .L_41e6b0
          .quad .L_41e390
          .quad .L_41e3b0
          .quad .L_41e3d0
          .quad .L_41e610
          .quad .L_41e680
          .quad .L_41e3f0
          .quad .L_41e410
          .quad .L_41e780
          .quad .L_41e720
          .quad .L_41e610
          .quad .L_41e700
          .quad .L_41e6e0
          .quad .L_41e430
          .quad .L_41e480
          .quad .L_41e660
          .quad .L_41e620
          .quad .L_41e4e0
          .quad .L_41e4f0
          .quad .L_41e540
          .quad .L_41e640
          .quad .L_41e590
          .quad .L_41e630
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 32
.L_63e1a0:
          .zero 8
.L_63e1a8:
          .zero 16
          .quad .L_641b00
          .quad .L_63ea20
          .quad .L_63ea40
          .quad .L_641b20
          .quad .L_641d48
          .quad .L_641d38
          .quad .L_641c88
          .quad .L_641cf0
          .quad .L_641ce8
          .quad .L_641d28
          .quad .L_641cf8
          .quad .L_641d18
          .quad .L_641cd8
          .quad .L_641ae0
          .zero 56
.L_63e260:
          .byte 0x1c
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a030
          .byte 0x1c
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a180
          .byte 0x18
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a100
          .byte 0x18
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a230
          .byte 0x4
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_409080
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_409230
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_409830
          .zero 16
.L_63e2e0:
          .byte 0x18
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a6a0
          .byte 0x18
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a610
          .byte 0x1c
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_409cb0
          .byte 0x1c
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a540
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_408d30
          .byte 0x4
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_408ed0
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_409a70
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408150
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408190
          .byte 0x89
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4081b0
          .byte 0x9
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408170
          .byte 0x19
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407c70
          .byte 0x99
          .byte 0x40
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407cf0
          .byte 0x1a
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407d70
          .byte 0x19
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407e10
          .byte 0x99
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407f60
          .byte 0x99
          .byte 0x40
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407fd0
          .byte 0x99
          .byte 0x44
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4080b0
          .byte 0x99
          .byte 0x4
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408040
          .byte 0x19
          .byte 0x4
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407e80
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407dc0
          .byte 0x99
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407f10
          .byte 0x99
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407f80
          .byte 0x99
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408060
          .byte 0x99
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ff0
          .byte 0x19
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407e30
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407810
          .byte 0x31
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4078a0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4079b0
          .byte 0x21
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407a10
          .byte 0x21
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407a80
          .byte 0x21
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ae0
          .byte 0x21
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407b40
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_408b40
          .byte 0x1
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_4076d0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4081d0
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408200
          .byte 0x8a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408210
          .byte 0xa
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4081e0
          .byte 0xa
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4081f0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ea0
          .byte 0x1a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ec0
          .byte 0x1a
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ee0
          .byte 0x9a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4080d0
          .byte 0x9a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4080f0
          .byte 0x9a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408110
          .byte 0x9a
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408130
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ba0
          .byte 0x22
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407bd0
          .byte 0x22
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407c00
          .byte 0x22
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407c30
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407930
          .byte 0x32
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407970
          .byte 0x2
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .quad .L_407770
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .quad .L_408c30
          .zero 16
.L_63e660:
          .byte 0x18
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_409d80
          .byte 0x1c
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_409e40
          .byte 0x18
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_409ee0
          .byte 0x1c
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_409f80
          .byte 0x4
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .quad .L_4087f0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .quad .L_408990
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .quad .L_4093d0
          .zero 16
.L_63e6e0:
          .byte 0x18
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a4b0
          .byte 0x18
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a360
          .byte 0x1c
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a3f0
          .byte 0x1c
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a2a0
          .quad .L_430008
          .quad .L_407670
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_408410
          .byte 0x4
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_408600
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_4095e0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407350
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407370
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407390
          .byte 0x9
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4073b0
          .byte 0x11
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407320
          .byte 0x19
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407220
          .byte 0x99
          .byte 0x40
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407280
          .byte 0x1a
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4072e0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407110
          .byte 0x19
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4071f0
          .byte 0x99
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407140
          .byte 0x99
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4071b0
          .byte 0x99
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407180
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_406fb0
          .byte 0x21
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_406ff0
          .byte 0x21
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407050
          .byte 0x21
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407090
          .byte 0x21
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4070d0
          .byte 0x1
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_406f10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_408220
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4075f0
          .byte 0xa
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407610
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407630
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407650
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407570
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407480
          .byte 0x1a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407590
          .byte 0x9a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4075d0
          .byte 0x9a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4075b0
          .byte 0x22
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4074b0
          .byte 0x22
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4074e0
          .byte 0x22
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407510
          .byte 0x22
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407540
          .byte 0x2
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .quad .L_4073d0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .quad .L_408310
.L_63e990:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
.L_63e998:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_63e9a0:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x0
          .byte 0x0
.L_63e9a8:
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x0
          .byte 0x0
.L_63e9b0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
.L_63e9b8:
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63e9c0:
          .byte 0xd0
          .byte 0xb3
          .byte 0x59
          .byte 0xf5
          .byte 0xb9
          .byte 0xda
          .byte 0xee
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x84
          .byte 0xd
          .byte 0x4f
          .byte 0xaf
          .byte 0x94
          .byte 0x65
          .byte 0xea
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63e9e0:
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63ea00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63ea20:
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63ea40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63ea60:
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412fc0
          .quad .L_63ead0
.L_63ead0:
          .string "1B2A"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412fc0
          .quad .L_63eb40
.L_63eb40:
          .string "2B2A"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412fc0
          .quad .L_63ebb0
.L_63ebb0:
          .string "0A2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412ff0
          .quad .L_63ec20
.L_63ec20:
          .string "1A2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412ff0
          .quad .L_63ec90
.L_63ec90:
          .string "2A2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412ff0
          .quad .L_63ed00
.L_63ed00:
          .string "ZYXr"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412f70
          .quad .L_63ed70
.L_63ed70:
          .string "ZYXg"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412f70
          .quad .L_63ede0
.L_63ede0:
          .string "ZYXb"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412f70
          .quad .L_63ee50
.L_63ee50:
          .string "CRTr"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x70
          .byte 0x0
          .byte 0xee
          .byte 0x78
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_415b50
          .quad .L_63eec0
.L_63eec0:
          .string "CRTg"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x70
          .byte 0x0
          .byte 0xee
          .byte 0x78
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_415b50
          .quad .L_63ef30
.L_63ef30:
          .string "CRTb"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x70
          .byte 0x0
          .byte 0xee
          .byte 0x78
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_415b50
          .quad .L_63efa0
.L_63efa0:
          .string "tlac"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x69
          .byte 0x74
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f010
.L_63f010:
          .string "grat"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f080
.L_63f080:
          .string "dahc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x33
          .byte 0x66
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f0f0
.L_63f0f0:
          .string "mrhc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x72
          .byte 0x68
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f160
.L_63f160:
          .string "orlc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x72
          .byte 0x6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f1d0
.L_63f1d0:
          .string "trlc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x72
          .byte 0x6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f240
.L_63f240:
          .string "tolc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x72
          .byte 0x6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f2b0
.L_63f2b0:
          .string "trpc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412f80
          .quad .L_63f320
.L_63f320:
          .string "mitd"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x69
          .byte 0x74
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f390
.L_63f390:
          .string "dnmd"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412fa0
          .quad .L_63f400
.L_63f400:
          .string "ddmd"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412fa0
          .quad .L_63f470
.L_63f470:
          .string "tmag"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412ff0
          .quad .L_63f4e0
.L_63f4e0:
          .string "CRTk"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_415b50
          .quad .L_63f550
.L_63f550:
          .string "imul"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f5c0
.L_63f5c0:
          .string "tpkb"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f630
.L_63f630:
          .string "tptw"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f6a0
.L_63f6a0:
          .string "2lcn"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x6c
          .byte 0x63
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f710
.L_63f710:
          .string "0erp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412ff0
          .quad .L_63f780
.L_63f780:
          .string "1erp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412ff0
          .quad .L_63f7f0
.L_63f7f0:
          .string "2erp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412ff0
          .quad .L_63f860
.L_63f860:
          .string "csed"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412fa0
          .quad .L_63f8d0
.L_63f8d0:
          .string "qesp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x65
          .byte 0x73
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f940
.L_63f940:
          .string "hcet"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x69
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f9b0
.L_63f9b0:
          .string "siic"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x69
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fa20
.L_63fa20:
          .string "0gir"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x69
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fa90
.L_63fa90:
          .string "2gir"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x69
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fb00
.L_63fb00:
          .string "saem"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x61
          .byte 0x65
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fb70
.L_63fb70:
          .string "0dsp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fbe0
.L_63fbe0:
          .string "1dsp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fc50
.L_63fc50:
          .string "2dsp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fcc0
.L_63fcc0:
          .string "3dsp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fd30
.L_63fd30:
          .string "s2sp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fda0
.L_63fda0:
          .string "i2sp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fe10
.L_63fe10:
          .string "deuv"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_412fa0
          .quad .L_63fe80
.L_63fe80:
          .string " dfb"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x64
          .byte 0x66
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fef0
.L_63fef0:
          .string "idrc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x64
          .byte 0x72
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63ff60
.L_63ff60:
          .string "0B2D"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63ffd0
.L_63ffd0:
          .string "1B2D"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640040
.L_640040:
          .string "2B2D"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6400b0
.L_6400b0:
          .string "3B2D"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640120
.L_640120:
          .string "0D2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640190
.L_640190:
          .string "1D2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640200
.L_640200:
          .string "2D2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640270
.L_640270:
          .string "3D2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6402e0
.L_6402e0:
          .string "drcs"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640350
.L_640350:
          .string "weiv"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x65
          .byte 0x69
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6403c0
.L_6403c0:
          .string "nrcs"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x72
          .byte 0x63
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640430
.L_640430:
          .string "tgcv"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x67
          .byte 0x63
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6404a0
.L_6404a0:
          .string "atem"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x63
          .byte 0x69
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640510
.L_640510:
          .string "disp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x69
          .byte 0x73
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640580
.L_640580:
          .string "mcsd"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6405f0
.L_6405f0:
          .string "stra"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x33
          .byte 0x66
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_640660:
          .byte 0x6d
          .byte 0x72
          .byte 0x68
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414030
          .quad .L_41a3a0
          .quad .L_414340
          .quad .L_413250
          .zero 16
          .quad .L_6406a0
.L_6406a0:
          .string "orlc"
          .zero 3
          .quad .L_413e50
          .quad .L_4133c0
          .quad .L_414330
          .quad .L_413260
          .zero 16
          .quad .L_6406e0
.L_6406e0:
          .string "23fs"
          .zero 3
          .quad .L_413a00
          .quad .L_413420
          .quad .L_414310
          .quad .L_413270
          .zero 16
          .quad .L_640720
.L_640720:
          .string "23fu"
          .zero 3
          .quad .L_413800
          .quad .L_415690
          .quad .L_414320
          .quad .L_413280
          .zero 16
          .quad .L_640760
.L_640760:
          .string "txet"
          .zero 3
          .quad .L_415200
          .quad .L_414d80
          .quad .L_414c80
          .quad .L_413f20
          .zero 16
          .quad .L_6407a0
.L_6407a0:
          .string "csed"
          .zero 3
          .quad .L_414fe0
          .quad .L_4169c0
          .quad .L_41b100
          .quad .L_41b1e0
          .zero 16
          .quad .L_6407e0
.L_6407e0:
          .string "vruc"
          .zero 3
          .quad .L_415540
          .quad .L_419a20
          .quad .L_413350
          .quad .L_414b00
          .zero 16
          .quad .L_640820
.L_640820:
          .string "arap"
          .zero 3
          .quad .L_4162f0
          .quad .L_4138f0
          .quad .L_41b110
          .quad .L_41b1f0
          .zero 16
          .quad .L_640860
.L_640860:
          .string "mitd"
          .zero 3
          .quad .L_4154a0
          .quad .L_415440
          .quad .L_4142e0
          .quad .L_4132b0
          .zero 16
          .quad .L_6408a0
.L_6408a0:
          .string "1tfm"
          .zero 3
          .quad .L_418ba0
          .quad .L_415b90
          .quad .L_414480
          .quad .L_414470
          .zero 16
          .quad .L_6408e0
.L_6408e0:
          .string "2tfm"
          .zero 3
          .quad .L_4186f0
          .quad .L_4178e0
          .quad .L_41b130
          .quad .L_41b190
          .zero 16
          .quad .L_640920
.L_640920:
          .string "trlc"
          .zero 3
          .quad .L_415300
          .quad .L_416600
          .quad .L_4152f0
          .quad .L_4152e0
          .zero 16
          .quad .L_640960
.L_640960:
          .string "2lcn"
          .zero 3
          .quad .L_416700
          .quad .L_419860
          .quad .L_41b150
          .quad .L_41b1d0
          .zero 16
          .quad .L_6409a0
.L_6409a0:
          .string "culm"
          .zero 3
          .quad .L_417370
          .quad .L_416d20
          .quad .L_41b120
          .quad .L_41b180
          .zero 16
          .quad .L_6409e0
.L_6409e0:
          .string "qesp"
          .zero 3
          .quad .L_417750
          .quad .L_41a280
          .quad .L_4141d0
          .quad .L_4141c0
          .zero 16
          .quad .L_640a20
.L_640a20:
          .string " gis"
          .zero 3
          .quad .L_414d30
          .quad .L_4133b0
          .quad .L_4142d0
          .quad .L_413290
          .zero 16
          .quad .L_640a60
.L_640a60:
          .string "saem"
          .zero 3
          .quad .L_416410
          .quad .L_417e80
          .quad .L_4142f0
          .quad .L_4132c0
          .zero 16
          .quad .L_640aa0
.L_640aa0:
          .string "atad"
          .zero 3
          .quad .L_414c90
          .quad .L_413360
          .quad .L_4142c0
          .quad .L_4132a0
          .zero 16
          .quad .L_640ae0
.L_640ae0:
          .string " BAm"
          .zero 3
          .quad .L_419f10
          .quad .L_41a520
          .quad .L_41b140
          .quad .L_41b1c0
          .zero 16
          .quad .L_640b20
.L_640b20:
          .string " ABm"
          .zero 3
          .quad .L_419c80
          .quad .L_41a980
          .quad .L_41adc0
          .quad .L_41b1a0
          .zero 16
          .quad .L_640b60
.L_640b60:
          .string " dfb"
          .zero 3
          .quad .L_414e20
          .quad .L_4195a0
          .quad .L_414c30
          .quad .L_414ab0
          .zero 16
          .quad .L_640ba0
.L_640ba0:
          .string "idrc"
          .zero 3
          .quad .L_419470
          .quad .L_418b00
          .quad .L_41add0
          .quad .L_41b170
          .zero 16
          .quad .L_640be0
.L_640be0:
          .string "tepm"
          .zero 3
          .quad .L_414b10
          .quad .L_415770
          .quad .L_41b0f0
          .quad .L_41b200
          .zero 16
          .quad .L_640c20
.L_640c20:
          .string "nrcs"
          .zero 3
          .quad .L_413f30
          .quad .L_4161d0
          .quad .L_4142b0
          .quad .L_4132d0
          .zero 16
          .quad .L_640c60
.L_640c60:
          .string "weiv"
          .zero 3
          .quad .L_4143d0
          .quad .L_417e20
          .quad .L_414300
          .quad .L_4132e0
          .zero 16
          .quad .L_640ca0
.L_640ca0:
          .string " ZYX"
          .zero 3
          .quad .L_414360
          .quad .L_414350
          .quad .L_4142a0
          .quad .L_413240
          .zero 16
          .quad .L_640ce0
.L_640ce0:
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414360
          .quad .L_414350
          .quad .L_4142a0
          .quad .L_413240
          .zero 16
          .quad .L_640d20
.L_640d20:
          .byte 0x0
          .byte 0xee
          .byte 0x78
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_415540
          .quad .L_419a20
          .quad .L_413350
          .quad .L_414b00
          .zero 16
          .quad .L_640d60
.L_640d60:
          .string "disp"
          .zero 3
          .quad .L_4141e0
          .quad .L_41b090
          .quad .L_41b160
          .quad .L_41b1b0
          .zero 16
          .quad .L_640da0
.L_640da0:
          .string "tcid"
          .zero 3
          .quad .L_418fa0
          .quad .L_416f30
          .quad .L_413e40
          .quad .L_413e30
          .zero 16
          .quad .L_640de0
.L_640de0:
          .string "tgcv"
          .zero 3
          .quad .L_413ab0
          .quad .L_413480
          .quad .L_4132f0
          .quad .L_413180
          .zero 24
.L_640e20:
          .byte 0x53
          .byte 0x43
          .byte 0x41
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640e60
.L_640e60:
          .string "SCAe"
          .zero 51
          .quad .L_640ea0
.L_640ea0:
          .string "tsvc"
          .zero 3
          .quad .L_414940
          .quad .L_41b010
          .quad .L_414930
          .quad .L_414720
          .zero 16
          .quad .L_640ee0
.L_640ee0:
          .string "ftam"
          .zero 3
          .quad .L_414730
          .quad .L_414490
          .quad .L_414930
          .quad .L_414720
          .zero 16
          .quad .L_640f20
.L_640f20:
          .string "tulc"
          .zero 3
          .quad .L_414580
          .quad .L_4164f0
          .quad .L_414930
          .quad .L_414720
          .zero 24
.L_640f60:
          .quad .L_41c440
          .quad .L_640f70
.L_640f70:
          .quad .L_41dad0
          .quad .L_640f80
.L_640f80:
          .quad .L_41da70
          .quad .L_640f90
.L_640f90:
          .quad .L_41c850
          .zero 8
.L_640fa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x65
          .byte 0x72
          .byte 0x63
          .byte 0x65
          .byte 0x70
          .byte 0x74
          .byte 0x75
          .byte 0x61
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41fda0
          .quad .L_6410b8
.L_6410b8:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x65
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41fda0
          .quad .L_6411d0
.L_6411d0:
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41fda0
          .quad .L_6412e8
.L_6412e8:
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x62
          .byte 0x73
          .byte 0x6f
          .byte 0x6c
          .byte 0x75
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41fda0
          .quad .L_641400
.L_641400:
          .string "\n"
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x65
          .byte 0x72
          .byte 0x63
          .byte 0x65
          .byte 0x70
          .byte 0x74
          .byte 0x75
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_420580
          .quad .L_641518
.L_641518:
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x65
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_420580
          .quad .L_641630
.L_641630:
          .string ""
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_420580
          .quad .L_641748
.L_641748:
          .string "\r"
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x65
          .byte 0x72
          .byte 0x63
          .byte 0x65
          .byte 0x70
          .byte 0x74
          .byte 0x75
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x70
          .byte 0x6c
          .byte 0x61
          .byte 0x6e
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4201d0
          .quad .L_641860
.L_641860:
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x65
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x70
          .byte 0x6c
          .byte 0x61
          .byte 0x6e
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4201d0
          .quad .L_641978
.L_641978:
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x70
          .byte 0x6c
          .byte 0x61
          .byte 0x6e
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4201d0
          .zero 24
.L_641aa0:
          .quad .L_420dc0
          .quad .L_420ea0
          .quad .L_420da0
          .quad .L_420d90
.L_641ac0:
          .quad .L_420c10
          .zero 24
.L_641ae0:
          .quad .L_420dc0
          .quad .L_420ea0
          .quad .L_420da0
          .quad .L_420d90
.L_641b00:
          .quad .L_420c10
          .zero 24
.L_641b20:
          .quad .L_420c60
          .quad .L_420ce0
.L_641b30:
          .quad .L_420c40
          .quad .L_420c20
.L_641b40:
          .quad .L_420d20
          .quad .L_420c80
          .zero 16
.L_641b60:
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x18
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_641c18:
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

.L_641c20:
          .zero 32
.L_641c40:
          .zero 32
.L_641c60:
          .zero 40
.L_641c88:
          .zero 8
.L_641c90:
          .zero 8
.L_641c98:
          .zero 8
.L_641ca0:
          .zero 8
.L_641ca8:
          .zero 8
.L_641cb0:
          .zero 16
.L_641cc0:
          .zero 24
.L_641cd8:
          .zero 8
.L_641ce0:
          .zero 8
.L_641ce8:
          .zero 8
.L_641cf0:
          .zero 8
.L_641cf8:
          .zero 8
.L_641d00:
          .zero 8
.L_641d08:
          .zero 8
.L_641d10:
          .zero 8
.L_641d18:
          .zero 8
.L_641d20:
          .zero 8
.L_641d28:
          .zero 8
.L_641d30:
          .zero 8
.L_641d38:
          .zero 8
.L_641d40:
          .zero 8
.L_641d48:
          .zero 8
.L_641d50:
          .zero 8
#===================================
# end section .bss
#===================================
