#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 16
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_4015a4:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_44db04]
            call fopen@PLT

            test RAX,RAX
            je .L_401628

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_40164f

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_401632

            mov RSI,RBP
            mov RDI,R12
            call .L_401760

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_401622:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_401628:

            mov EDI,1
            call exit@PLT
.L_401632:

            lea RSI,QWORD PTR [RIP+.L_44db16]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,3
            call exit@PLT
.L_40164f:

            lea RSI,QWORD PTR [RIP+.L_44db07]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,2
            call exit@PLT
.L_40166c:

            nop
            nop
            nop
            nop
.L_4016a0:

            ret 
.L_4016a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4016b0:

            push RBP
            mov EAX,OFFSET 356536
            cmp RAX,OFFSET 356536
            mov RBP,RSP
            je .L_4016d8

            mov EAX,0
            test RAX,RAX
            je .L_4016d8

            pop RBP
            mov EDI,OFFSET 356536
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4016d8:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4016e0:

            mov ESI,OFFSET 356536
            push RBP
            sub RSI,OFFSET 356536
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_401718

            mov EAX,0
            test RAX,RAX
            je .L_401718

            pop RBP
            mov EDI,OFFSET 356536
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401718:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401750:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_4016e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401760:

            push R15
            push R14
            xor R8D,R8D
            push R13
            push R12
            xor ECX,ECX
            push RBP
            push RBX
            mov EDX,1
            mov R12,RSI
            mov R13,RDI
            sub RSP,104
.L_40177e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_401a90

            xor ESI,ESI
            mov RDI,RAX
            mov R14,RAX
            call .L_4070c0

            mov RDI,RAX
            mov R15,RAX
            call .L_40a810

            mov RBX,RAX
            mov RDI,RAX
            call .L_40f170

            mov EDX,12
            mov ESI,12
            mov RDI,RBX
            call .L_40ae30

            movdqa XMM0,XMMWORD PTR [RIP+.L_44db30]
            mov DWORD PTR [RSP+80],2171946
            movaps XMMWORD PTR [RSP+64],XMM0
            call .L_4035d0

            mov R8D,4294967295
            lea RSI,QWORD PTR [RSP+64]
            mov RBP,RAX
            mov EDX,R8D
            mov RDI,RAX
            xor ECX,ECX
            call .L_403c60

            mov RDI,RBP
            call .L_403c50

            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call .L_40bcb0

            mov RDI,RBP
            call .L_403690

            cmp R12,64
            jbe .L_401890

            movdqu XMM0,XMMWORD PTR [R13+R12*1-64]
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [R13+R12*1-48]
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [R13+R12*1-32]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [R13+R12*1-16]
            movaps XMMWORD PTR [RSP+48],XMM0
            call .L_4035d0

            mov RSI,RSP
            mov RBP,RAX
            mov RDI,RAX
            mov R8D,4294967295
            xor ECX,ECX
            mov EDX,16
            call .L_4045a0

            mov RDI,RBP
            call .L_403c50

            mov RDI,RBX
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RBP
            call .L_40bcb0

            mov RDI,RBP
            call .L_403690
.L_401890:

            mov RDI,RBX
            call .L_40a9e0

            mov RDI,R15
            call .L_4077a0

            mov RDI,R14
            call .L_401950

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4018c9

            add RSP,104
.L_4018be:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4018c9:

            call __stack_chk_fail@PLT
.L_4018ce:

            nop
            nop
.L_4018d0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4018dd:

            mov R12D,DWORD PTR [RDI+128]
            mov R13,QWORD PTR [RDI+120]
            mov RDI,R12
            call malloc@PLT

            mov RBP,RAX
            xor EAX,EAX
            test RBP,RBP
            je .L_401945

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call memcpy@PLT

            mov RAX,QWORD PTR [RBX+144]
            test RAX,RAX
            je .L_40191d

            mov RDI,QWORD PTR [RBX+136]
            call RAX
.L_40191d:

            mov RAX,QWORD PTR [RIP+free@GOTPCREL]
            mov DWORD PTR [RBX+132],2
            mov QWORD PTR [RBX+120],RBP
            mov QWORD PTR [RBX+136],RBP
            mov QWORD PTR [RBX+144],RAX
            mov EAX,1
.L_401945:

            add RSP,8
.L_401949:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_401950:

            test RDI,RDI
            je .L_4019a0

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4019a0

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_401980

            lock sub DWORD PTR [RDI],1
            je .L_4019a8

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401980:

            lea RCX,QWORD PTR [RIP+.L_401fe0]
            lea RSI,QWORD PTR [RIP+.L_401e4b]
            lea RDI,QWORD PTR [RIP+.L_401e60]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x90
.L_4019a0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4019a8:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_401a10

            mov RDI,QWORD PTR [RDI+56]
            cmp R12,RDI
            je .L_4019cb

            call free@PLT
.L_4019cb:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_4019db:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RAX,QWORD PTR [RBX+144]
            test RAX,RAX
            je .L_4019f8

            mov RDI,QWORD PTR [RBX+136]
            call RAX
.L_4019f8:

            mov RDI,RBX
            pop RBX
.L_4019fc:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401a10:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_401a5e
.L_401a1f:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_401a10

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_401a1f
.L_401a5e:

            mov RDI,QWORD PTR [RBX+56]
            cmp R12,RDI
            je .L_401a6c

            call free@PLT
.L_401a6c:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_4019db
.L_401a89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401a90:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,R8
            sub RSP,8
            test ESI,ESI
            jg .L_401ad0
.L_401aa8:

            test RBP,RBP
            je .L_401b78

            lea RBX,QWORD PTR [RIP+.L_402060]
            mov RDI,R13
            call RBP
.L_401abd:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_401ad0:

            mov R15,RDI
            mov R12D,ESI
            mov EDI,1
            mov ESI,152
            mov R14D,EDX
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_401aa8

            lea RDI,QWORD PTR [RAX+8]
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            test R14D,R14D
            mov QWORD PTR [RBX+120],R15
            mov DWORD PTR [RBX+128],R12D
            mov DWORD PTR [RBX+132],R14D
            mov QWORD PTR [RBX+136],R13
            movups XMMWORD PTR [RBX+48],XMM0
            mov QWORD PTR [RBX+144],RBP
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            jne .L_401abd

            cmp BYTE PTR [RBX+112],0
            mov DWORD PTR [RBX+132],1
            jne .L_401b60

            mov RDI,RBX
            call .L_4018d0

            test AL,AL
            jne .L_401abd

            nop
            nop
            nop
            nop
            nop
            nop
.L_401b60:

            mov RDI,RBX
            lea RBX,QWORD PTR [RIP+.L_402060]
            call .L_401950

            jmp .L_401abd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_401b78:

            lea RBX,QWORD PTR [RIP+.L_402060]
            jmp .L_401abd
.L_401b84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401b90:

            test EDX,EDX
            je .L_401be8

            mov EAX,DWORD PTR [RDI+128]
            cmp EAX,ESI
            jbe .L_401be8

            mov ECX,DWORD PTR [RDI]
            cmp ECX,-1
            je .L_401bb7

            test ECX,ECX
            mov BYTE PTR [RDI+112],1
            jle .L_401bf0

            lock add DWORD PTR [RDI],1
            mov EAX,DWORD PTR [RDI+128]
.L_401bb7:

            sub EAX,ESI
            lea R8,QWORD PTR [RIP+.L_401950]
            mov RCX,RDI
            cmp EAX,EDX
            cmovbe EDX,EAX
            mov EAX,ESI
            add RAX,QWORD PTR [RDI+120]
            mov R9D,EDX
            mov EDX,1
            mov ESI,R9D
            mov RDI,RAX
            jmp .L_401a90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401be8:

            lea RAX,QWORD PTR [RIP+.L_402060]
            ret 
.L_401bf0:

            lea RCX,QWORD PTR [RIP+.L_402020]
            lea RSI,QWORD PTR [RIP+.L_401e4b]
            lea RDI,QWORD PTR [RIP+.L_401e60]
            sub RSP,8

            mov EDX,160
            call __assert_fail@PLT
.L_401c13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401c20:

            lea RAX,QWORD PTR [RIP+.L_402060]
            ret 
.L_401c28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401c30:

            test RDI,RDI
            je .L_401c44

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_401c44

            test EAX,EAX
            jle .L_401c50

            lock add DWORD PTR [RDI],1
.L_401c44:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401c50:

            lea RCX,QWORD PTR [RIP+.L_402020]
            lea RSI,QWORD PTR [RIP+.L_401e4b]
            lea RDI,QWORD PTR [RIP+.L_401e60]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_401c73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401c80:

            test RDI,RDI
            je .L_401ca8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_401ca8

            sub RSP,8
            test EAX,EAX
            jle .L_401cb0

            add RDI,8
            call .L_4068c0

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401ca8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401cb0:

            lea RCX,QWORD PTR [RIP+.L_401f00]
            lea RSI,QWORD PTR [RIP+.L_401e4b]
            lea RDI,QWORD PTR [RIP+.L_401e60]
            mov EDX,187
            call __assert_fail@PLT
.L_401ccf:

            nop
.L_401cd0:

            test RDI,RDI
            je .L_401d18

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_401d18

            test EAX,EAX
            jle .L_401cf0

            add RDI,8
            jmp .L_406b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401cf0:

            lea RCX,QWORD PTR [RIP+.L_401e80]
            lea RSI,QWORD PTR [RIP+.L_401e4b]
            lea RDI,QWORD PTR [RIP+.L_401e60]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401d18:

            xor EAX,EAX
            ret 
.L_401d1b:

            nop
            nop
            nop
            nop
            nop
.L_401d20:

            cmp DWORD PTR [RDI],-1
            je .L_401d29

            mov BYTE PTR [RDI+112],1
.L_401d29:

            ret 
.L_401d2b:

            nop
            nop
            nop
            nop
            nop
.L_401d30:

            movzx EAX,BYTE PTR [RDI+112]
            ret 
.L_401d35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401d40:

            mov EAX,DWORD PTR [RDI+128]
            ret 
.L_401d47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401d50:

            test RSI,RSI
            je .L_401d5d

            mov EAX,DWORD PTR [RDI+128]
            mov DWORD PTR [RSI],EAX
.L_401d5d:

            mov RAX,QWORD PTR [RDI+120]
            ret 
.L_401d62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401d70:

            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
            cmp BYTE PTR [RDI+112],0
            jne .L_401da2

            mov EAX,DWORD PTR [RDI+132]
            mov RBX,RDI
            cmp EAX,2
            je .L_401e10

            cmp EAX,3
            je .L_401dc0
.L_401d96:

            mov RDI,RBX
            call .L_4018d0

            test AL,AL
            jne .L_401e10
.L_401da2:

            xor EAX,EAX
            test RBP,RBP
            je .L_401e22

            mov DWORD PTR [RBP],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401dc0:

            mov EDI,30
            call sysconf@PLT

            cmp RAX,-1
            je .L_401e30

            mov ESI,DWORD PTR [RBX+128]
            mov RDX,QWORD PTR [RBX+120]
            mov RCX,RAX
            neg RCX
            mov RDI,RCX
            and RDI,RDX
            lea RDX,QWORD PTR [RDX+RSI*1-1]
            lea RSI,QWORD PTR [RDX+RAX*1]
            mov EDX,3
            and RSI,RCX
            sub RSI,RDI
            call mprotect@PLT

            cmp EAX,-1
            je .L_401e30

            mov DWORD PTR [RBX+132],2
            nop
            nop
.L_401e10:

            test RBP,RBP
            je .L_401e1e

            mov EAX,DWORD PTR [RBX+128]
            mov DWORD PTR [RBP],EAX
.L_401e1e:

            mov RAX,QWORD PTR [RBX+120]
.L_401e22:

            add RSP,8
.L_401e26:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401e30:

            call __errno_location@PLT

            mov EDI,DWORD PTR [RAX]
            call strerror@PLT

            mov DWORD PTR [RBX+132],1
            jmp .L_401d96
.L_401e4b:
          .string "hb-object-private.hh"
.L_401e60:
          .string "hb_object_is_valid (obj)"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401e80:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_blob_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 5
.L_401f00:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_blob_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 11
.L_401fe0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_blob_t]"
          .zero 10
.L_402020:
          .string "Type* hb_object_reference(Type*) [with Type = hb_blob_t]"
          .zero 7
.L_402060:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402100:

            push RBX
            sub EDX,1
            sub RSP,32
.L_402108:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp EDX,ESI
            jbe .L_4021ec

            mov R8D,EDX
            mov ECX,ESI
            nop
            nop
            nop
.L_402128:

            mov R10,QWORD PTR [RDI+200]
            mov EAX,ECX
            mov R9D,R8D
            lea R9,QWORD PTR [R9+R9*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            add ECX,1
            sub R8D,1
            lea RAX,QWORD PTR [R10+RAX*4]
            movdqu XMM1,XMMWORD PTR [R10+R9*4]
            lea R11,QWORD PTR [R9*4]
            cmp ECX,R8D
            movdqu XMM0,XMMWORD PTR [RAX]
            mov EBX,DWORD PTR [RAX+16]
            movups XMMWORD PTR [RAX],XMM1
            mov R10D,DWORD PTR [R10+R11*1+16]
            movaps XMMWORD PTR [RSP],XMM0
            mov DWORD PTR [RAX+16],R10D
            mov RAX,QWORD PTR [RDI+200]
            mov DWORD PTR [RSP+16],EBX
            movups XMMWORD PTR [RAX+R9*4],XMM0
            mov DWORD PTR [RAX+R11*1+16],EBX
            jb .L_402128

            cmp BYTE PTR [RDI+178],0
            je .L_4021ec

            nop
.L_402190:

            mov R8,QWORD PTR [RDI+216]
            mov EAX,ESI
            mov ECX,EDX
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            add ESI,1
            sub EDX,1
            lea RAX,QWORD PTR [R8+RAX*4]
            movdqu XMM1,XMMWORD PTR [R8+RCX*4]
            lea R9,QWORD PTR [RCX*4]
            cmp ESI,EDX
            movdqu XMM0,XMMWORD PTR [RAX]
            mov R10D,DWORD PTR [RAX+16]
            movups XMMWORD PTR [RAX],XMM1
            mov R8D,DWORD PTR [R8+R9*1+16]
            movaps XMMWORD PTR [RSP],XMM0
            mov DWORD PTR [RAX+16],R8D
            mov RAX,QWORD PTR [RDI+216]
            mov DWORD PTR [RSP+16],R10D
            movups XMMWORD PTR [RAX+RCX*4],XMM0
            mov DWORD PTR [RAX+R9*1+16],R10D
            jb .L_402190
.L_4021ec:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_402202

            add RSP,32
.L_402200:

            pop RBX
            ret 
.L_402202:

            call __stack_chk_fail@PLT
.L_402207:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402210:

            mov EAX,ESI
            push R13
            mov R10,QWORD PTR [RDI+200]
            push R12
            lea R8D,DWORD PTR [RSI+1]
            push RBP
            push RBX
.L_402223:

            lea RBX,QWORD PTR [RAX+RAX*4]
            shl RBX,2
            cmp R8D,EDX
            mov EAX,DWORD PTR [R10+RBX*1+8]
            jae .L_40226b

            lea R9D,DWORD PTR [RDX-2]
            lea RCX,QWORD PTR [R8+R8*4]
            sub R9D,ESI
            lea RCX,QWORD PTR [R10+RCX*4+8]
            add R8,R9
            lea R8,QWORD PTR [R8+R8*4]
            lea R9,QWORD PTR [R10+R8*4+28]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402258:

            mov R8D,DWORD PTR [RCX]
            cmp EAX,R8D
            cmova EAX,R8D
            add RCX,20
            cmp RCX,R9
            jne .L_402258
.L_40226b:

            mov R12D,DWORD PTR [RDI+184]
            cmp EDX,R12D
            jae .L_4022dc

            mov R11D,EDX
            lea R8D,DWORD PTR [RDX-1]
            lea RCX,QWORD PTR [R11+R11*4]
            lea R8,QWORD PTR [R8+R8*4]
            shl RCX,2
            mov R9D,DWORD PTR [R10+RCX*1+8]
            cmp DWORD PTR [R10+R8*4+8],R9D
            jne .L_4022dc

            mov R9,R11
            add EDX,1
            lea R8,QWORD PTR [R10+RCX*1+8]
            neg R9
            lea R13,QWORD PTR [RDX+RDX*4]
            mov RCX,RDX
            shl R9,2
            sub R9,R11
            shl R13,2
            shl R9,2
            jmp .L_4022d5

            nop
            nop
            nop
            nop
.L_4022c0:

            mov EBP,DWORD PTR [R8]
            add R8,20
            lea R11,QWORD PTR [R8+R9*1]
            cmp EBP,DWORD PTR [R11+R13*1-20]
            jne .L_4022dc

            add ECX,1
.L_4022d5:

            cmp ECX,R12D
            mov EDX,ECX
            jne .L_4022c0
.L_4022dc:

            mov R11D,DWORD PTR [RDI+180]
            lea RCX,QWORD PTR [R10+RBX*1+8]
            jmp .L_40230c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4022f0:

            lea R8D,DWORD PTR [RSI-1]
            sub RCX,20
            mov EBX,DWORD PTR [RCX+20]
            mov R9,R8
            lea R8,QWORD PTR [R8+R8*4]
            cmp DWORD PTR [R10+R8*4+8],EBX
            jne .L_402380

            mov ESI,R9D
.L_40230c:

            cmp R11D,ESI
            jb .L_4022f0

            jne .L_402380

            mov ECX,DWORD PTR [RDI+188]
            test ECX,ECX
            je .L_402380

            lea R8D,DWORD PTR [RCX-1]
            lea R9,QWORD PTR [R8+R8*4]
            mov RCX,R8
            mov R8,QWORD PTR [RDI+208]
            lea R8,QWORD PTR [R8+R9*4]
            mov R9D,ESI
            lea R11,QWORD PTR [R9+R9*4]
            mov EBX,DWORD PTR [R8+8]
            shl R11,2
            cmp DWORD PTR [R10+R11*1+8],EBX
            je .L_402378

            jmp .L_402380
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402350:

            lea R8D,DWORD PTR [RCX-1]
            lea R9,QWORD PTR [R8+R8*4]
            mov RCX,R8
            mov R8,QWORD PTR [RDI+208]
            lea R8,QWORD PTR [R8+R9*4]
            mov R9,QWORD PTR [RDI+200]
            mov EBX,DWORD PTR [R9+R11*1+8]
            cmp DWORD PTR [R8+8],EBX
            jne .L_402380
.L_402378:

            test ECX,ECX
            mov DWORD PTR [R8+8],EAX
            jne .L_402350
.L_402380:

            cmp ESI,EDX
            jae .L_4023bc

            sub EDX,1
            mov R8D,ESI
            sub EDX,ESI
            lea RCX,QWORD PTR [R8+R8*4]
            lea RDX,QWORD PTR [R8+RDX*1+1]
            shl RCX,2
            lea RSI,QWORD PTR [RDX+RDX*4]
            shl RSI,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4023a8:

            mov RDX,QWORD PTR [RDI+200]
            mov DWORD PTR [RDX+RCX*1+8],EAX
            add RCX,20
            cmp RSI,RCX
            jne .L_4023a8
.L_4023bc:

            pop RBX
.L_4023bd:

            pop RBP
            pop R12
            pop R13
            ret 
.L_4023c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4023d0:

            xor EAX,EAX
            mov RDX,QWORD PTR [RSI]
            cmp QWORD PTR [RDI],RDX
            je .L_4023e0
.L_4023da:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4023e0:

            mov RCX,QWORD PTR [RSI+8]
            cmp QWORD PTR [RDI+8],RCX
            jne .L_4023da

            mov RCX,QWORD PTR [RSI+16]
            cmp QWORD PTR [RDI+16],RCX
            jne .L_4023da

            mov RAX,QWORD PTR [RSI+24]
            cmp QWORD PTR [RDI+24],RAX
            sete AL
            movzx EAX,AL
            ret 
.L_402403:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402410:

            mov EAX,DWORD PTR [RDI]
            xor EAX,DWORD PTR [RDI+4]
            xor EAX,DWORD PTR [RDI+8]
            ret 
.L_402419:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402420:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
            movzx R12D,BYTE PTR [RDI+176]
            test R12B,R12B
            je .L_402450

            xor R12D,R12D
.L_40243e:

            add RSP,24
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_402450:

            cmp DWORD PTR [RDI+136],ESI
            jae .L_402468

            mov BYTE PTR [RDI+176],1
            jmp .L_40243e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402468:

            cmp ESI,214748363
            mov RBP,RDI
            mov EBX,DWORD PTR [RDI+192]
            mov RDX,QWORD PTR [RDI+208]
            mov R15,QWORD PTR [RDI+200]
            jbe .L_4024c8
.L_402487:

            cmp RDX,R15
            mov BYTE PTR [RBP+176],1
            mov EAX,1
            jne .L_402536
.L_40249c:

            mov RDX,QWORD PTR [RBP+200]
            test AL,AL
            mov QWORD PTR [RBP+208],RDX
            jne .L_40243e
.L_4024ae:

            mov DWORD PTR [RBP+192],EBX
            mov R12D,1
            jmp .L_40243e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4024c0:

            mov EAX,EBX
            shr EAX,1
            lea EBX,DWORD PTR [RBX+RAX*1+32]
.L_4024c8:

            cmp ESI,EBX
            jae .L_4024c0

            cmp EBX,214748363
            ja .L_402487

            mov EAX,EBX
            mov RDI,QWORD PTR [RBP+216]
            mov QWORD PTR [RSP+8],RDX
            lea R13,QWORD PTR [RAX+RAX*4]
            shl R13,2
            mov RSI,R13
            call realloc@PLT

            mov RDI,QWORD PTR [RBP+200]
            mov R14,RAX
            mov RSI,R13
            call realloc@PLT

            test R14,R14
            mov RDX,QWORD PTR [RSP+8]
            je .L_402551

            test RAX,RAX
            je .L_402551
.L_402513:

            mov QWORD PTR [RBP+216],R14
.L_40251a:

            test RAX,RAX
            je .L_402526

            mov QWORD PTR [RBP+200],RAX
.L_402526:

            cmp RDX,R15
            movzx EAX,BYTE PTR [RBP+176]
            je .L_40249c
.L_402536:

            mov RDX,QWORD PTR [RBP+216]
            test AL,AL
            mov QWORD PTR [RBP+208],RDX
            jne .L_40243e

            jmp .L_4024ae
.L_402551:

            test R14,R14
            mov BYTE PTR [RBP+176],1
            jne .L_402513

            jmp .L_40251a
.L_40255f:

            nop
.L_402560:

            push R13
            push R12
            mov EAX,EDX
            push RBP
            push RBX
            sub RSP,8
            add EAX,DWORD PTR [RDI+188]
            je .L_402594

            cmp EAX,DWORD PTR [RDI+192]
            mov EBP,EDX
            mov R13D,ESI
            mov RBX,RDI
            jae .L_4025b0

            mov RSI,QWORD PTR [RBX+208]
            cmp RSI,QWORD PTR [RBX+200]
            je .L_4025ce
.L_402594:

            mov R12D,1
.L_40259a:

            add RSP,8
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4025b0:

            mov ESI,EAX
            call .L_402420

            test AL,AL
            mov R12D,EAX
            je .L_40259a

            mov RSI,QWORD PTR [RBX+208]
            cmp RSI,QWORD PTR [RBX+200]
            jne .L_402594
.L_4025ce:

            mov EAX,DWORD PTR [RBX+188]
            add R13D,DWORD PTR [RBX+180]
            lea EDX,DWORD PTR [RAX+RBP*1]
            cmp EDX,R13D
            jbe .L_402594

            movzx R12D,BYTE PTR [RBX+177]
            test R12B,R12B
            je .L_402619

            mov RDI,QWORD PTR [RBX+216]
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            mov QWORD PTR [RBX+208],RDI
            call memcpy@PLT

            add RSP,8
.L_40260f:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_402619:

            lea RCX,QWORD PTR [RIP+.L_406240]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_4057e4]
            mov EDX,170
            call __assert_fail@PLT
.L_402638:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402640:

            push R12
            push RBP
            push RBX
.L_402644:

            movzx R12D,BYTE PTR [RDI+177]
            test R12B,R12B
            je .L_40271b

            mov EAX,DWORD PTR [RDI+184]
            mov EBP,ESI
            mov RBX,RDI
            mov ESI,EAX
            add ESI,EBP
            jne .L_4026c0
.L_402666:

            mov ECX,DWORD PTR [RBX+180]
            mov RDI,QWORD PTR [RBX+200]
            sub EAX,ECX
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RSI,QWORD PTR [RDI+RAX*4]
            mov EAX,EBP
            shl RDX,2
            add RAX,RCX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDI,QWORD PTR [RDI+RAX*4]
            call memmove@PLT

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+184]
            add EDX,EBP
            cmp EDX,EAX
            ja .L_4026e0
.L_4026a9:

            add EBP,EAX
            mov DWORD PTR [RBX+180],EDX
            mov EAX,R12D
            mov DWORD PTR [RBX+184],EBP
            pop RBX
.L_4026bb:

            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_4026c0:

            cmp ESI,DWORD PTR [RDI+192]
            jb .L_402666

            call .L_402420

            test AL,AL
            je .L_402710

            mov EAX,DWORD PTR [RBX+184]
            jmp .L_402666
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4026e0:

            lea RCX,QWORD PTR [RAX+RAX*4]
            sub EDX,EAX
            mov RAX,QWORD PTR [RBX+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            xor ESI,ESI
            lea RDI,QWORD PTR [RAX+RCX*4]
            shl RDX,2
            call memset@PLT

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+184]
            add EDX,EBP
            jmp .L_4026a9
.L_402710:

            xor R12D,R12D
            mov EAX,R12D
            pop RBX
.L_402717:

            pop RBP
            pop R12
            ret 
.L_40271b:

            lea RCX,QWORD PTR [RIP+.L_406200]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_4057e4]
            mov EDX,182
            call __assert_fail@PLT
.L_40273a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402740:

            test BYTE PTR [RDI+216],7
            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],0
            mov BYTE PTR [RDI+178],0
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
            jne .L_402786

            mov EAX,DWORD PTR [RDI+192]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shr RAX,1
            mov DWORD PTR [RSI],EAX
            mov RAX,QWORD PTR [RDI+216]
            ret 
.L_402786:

            lea RCX,QWORD PTR [RIP+.L_4061a0]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_405878]
            sub RSP,8

            mov EDX,207
            call __assert_fail@PLT
.L_4027a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4027b0:

            cmp DWORD PTR [RDI],-1
            je .L_40286c

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDI+200]
            mov DWORD PTR [RDI+144],0
            mov DWORD PTR [RDI+148],0
            mov QWORD PTR [RDI+152],0
            mov QWORD PTR [RDI+160],0
            mov QWORD PTR [RDI+168],0
            movups XMMWORD PTR [RDI+228],XMM0
            mov DWORD PTR [RDI+132],0
            mov DWORD PTR [RDI+140],0
            movups XMMWORD PTR [RDI+244],XMM0
            mov BYTE PTR [RDI+176],0
            mov BYTE PTR [RDI+177],0
            mov BYTE PTR [RDI+178],0
            mov QWORD PTR [RDI+180],0
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
            mov DWORD PTR [RDI+224],0
            mov QWORD PTR [RDI+260],0
            mov QWORD PTR [RDI+268],0
.L_40286c:

            ret 
.L_40286e:

            nop
            nop
.L_402870:

            cmp DWORD PTR [RDI],-1
            je .L_4028a8

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+112]
            call .L_40d6a0

            call .L_40d4e0

            mov DWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+112],RAX
            mov RDI,RBX
            mov DWORD PTR [RBX+128],65533
            pop RBX
            jmp .L_4027b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4028a8:

            ret 
.L_4028aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4028b0:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,24
.L_4028bb:

            mov EAX,DWORD PTR [RDI+184]
            mov ESI,EAX
            add ESI,1
            je .L_402908

            cmp ESI,DWORD PTR [RDI+192]
            jae .L_402910
.L_4028d0:

            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RCX*4]
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX],EBP
            mov DWORD PTR [RAX+4],1
            mov DWORD PTR [RAX+8],EDX
            add DWORD PTR [RBX+184],1
.L_4028fa:

            add RSP,24
.L_4028fe:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402908:

            mov EAX,4294967295
            jmp .L_4028d0
          .byte 0x90
.L_402910:

            mov DWORD PTR [RSP+12],EDX
            call .L_402420

            test AL,AL
            je .L_4028fa

            mov EAX,DWORD PTR [RBX+184]
            mov EDX,DWORD PTR [RSP+12]
            jmp .L_4028d0
.L_402929:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402930:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RDI+184]
            mov ESI,EAX
            add ESI,1
            je .L_402980

            cmp ESI,DWORD PTR [RDI+192]
            jae .L_402990
.L_402951:

            mov RDX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movdqu XMM0,XMMWORD PTR [RBP]
            lea RAX,QWORD PTR [RDX+RAX*4]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RBP+16]
            mov DWORD PTR [RAX+16],EDX
            add DWORD PTR [RBX+184],1
.L_402975:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402980:

            mov EAX,4294967295
            jmp .L_402951
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402990:

            call .L_402420

            test AL,AL
            je .L_402975

            mov EAX,DWORD PTR [RBX+184]
            jmp .L_402951
.L_4029a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4029b0:

            cmp DWORD PTR [RDI],-1
            je .L_4029db

            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],0
            mov BYTE PTR [RDI+178],0
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
.L_4029db:

            ret 
.L_4029dd:

            nop
            nop
            nop
.L_4029e0:

            cmp DWORD PTR [RDI],-1
            je .L_402a0b

            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],1
            mov BYTE PTR [RDI+178],0
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
.L_402a0b:

            ret 
.L_402a0d:

            nop
            nop
            nop
.L_402a10:

            cmp DWORD PTR [RDI],-1
            je .L_402a60

            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],0
            xor ESI,ESI
            mov BYTE PTR [RDI+178],1
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
            mov EAX,DWORD PTR [RDI+184]
            mov RDI,QWORD PTR [RDI+216]
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            jmp memset@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402a60:

            ret 
.L_402a62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402a70:

            cmp BYTE PTR [RDI+176],0
            jne .L_402ad3

            cmp BYTE PTR [RDI+177],0
            je .L_402ad5

            mov RDX,QWORD PTR [RDI+208]
            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],0
            cmp RDX,RAX
            je .L_402ab1

            mov QWORD PTR [RDI+200],RDX
            mov QWORD PTR [RDI+208],RAX
            mov QWORD PTR [RDI+216],RAX
.L_402ab1:

            mov EAX,DWORD PTR [RDI+184]
            mov EDX,DWORD PTR [RDI+188]
            mov DWORD PTR [RDI+180],0
            mov DWORD PTR [RDI+184],EDX
            mov DWORD PTR [RDI+188],EAX
.L_402ad3:

            ret 
.L_402ad5:

            lea RCX,QWORD PTR [RIP+.L_406160]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_4057e4]
            sub RSP,8

            mov EDX,333
            call __assert_fail@PLT
.L_402af8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402b00:

            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,EDX
            mov RBX,RCX
            sub RSP,40
.L_402b16:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_402560

            test AL,AL
            je .L_402bd8

            cmp R13D,1
            mov ECX,DWORD PTR [RBP+180]
            jbe .L_402b49

            cmp DWORD PTR [RBP+124],2
            jne .L_402bf8
.L_402b49:

            mov RDX,QWORD PTR [RBP+200]
            mov EAX,ECX
            test R12D,R12D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            movdqu XMM0,XMMWORD PTR [RAX]
            mov ESI,DWORD PTR [RAX+16]
            mov EAX,DWORD PTR [RBP+188]
            movaps XMMWORD PTR [RSP],XMM0
            lea RDI,QWORD PTR [RAX+RAX*4]
            mov RDX,RAX
            mov RAX,QWORD PTR [RBP+208]
            mov DWORD PTR [RSP+16],ESI
            lea RAX,QWORD PTR [RAX+RDI*4]
            je .L_402bc4

            lea EDX,DWORD PTR [R12-1]
            mov RCX,RBX
            lea RDX,QWORD PTR [RDX+RDX*4+5]
            lea RDI,QWORD PTR [RAX+RDX*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402ba0:

            movups XMMWORD PTR [RAX],XMM0
            mov DWORD PTR [RAX+16],ESI
            mov EDX,DWORD PTR [RCX]
            add RAX,20
            add RCX,4
            mov DWORD PTR [RAX-20],EDX
            cmp RAX,RDI
            jne .L_402ba0

            mov ECX,DWORD PTR [RBP+180]
            mov EDX,DWORD PTR [RBP+188]
.L_402bc4:

            add R13D,ECX
            add R12D,EDX
            mov DWORD PTR [RBP+180],R13D
            mov DWORD PTR [RBP+188],R12D
.L_402bd8:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_402c11

            add RSP,40
.L_402bec:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402bf8:

            lea EDX,DWORD PTR [RCX+R13*1]
            mov ESI,ECX
            mov RDI,RBP
            call .L_402210

            mov ECX,DWORD PTR [RBP+180]
            jmp .L_402b49
.L_402c11:

            call __stack_chk_fail@PLT
.L_402c16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402c20:

            push RBP
            push RBX
            mov EBP,ESI
            mov EDX,1
            xor ESI,ESI
            mov RBX,RDI
            sub RSP,8
.L_402c32:

            call .L_402560

            test AL,AL
            je .L_402c90

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [RBX+188]
            mov RSI,QWORD PTR [RBX+208]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov DWORD PTR [RAX],EBP
            add DWORD PTR [RBX+188],1
.L_402c90:

            add RSP,8
.L_402c94:

            pop RBX
            pop RBP
            ret 
.L_402c97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402ca0:

            push RBP
            push RBX
            mov RBP,RSI
            mov EDX,1
            xor ESI,ESI
            mov RBX,RDI
            sub RSP,8
            call .L_402560

            test AL,AL
            je .L_402ce6

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            movdqu XMM0,XMMWORD PTR [RBP]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RBP+16]
            mov DWORD PTR [RAX+16],EDX
            add DWORD PTR [RBX+188],1
.L_402ce6:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_402ced:

            nop
            nop
            nop
.L_402cf0:

            push RBX

            xor ESI,ESI
            mov EDX,1
            mov RBX,RDI
            call .L_402560

            test AL,AL
            je .L_402d42

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            add DWORD PTR [RBX+188],1
.L_402d42:

            pop RBX

            ret 
.L_402d44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402d50:

            push R12
            push RBP
            push RBX
            movzx EBP,BYTE PTR [RDI+177]
            mov RBX,RDI
            test BPL,BPL
            jne .L_402d88

            cmp DWORD PTR [RDI+184],ESI
            jb .L_402eae

            mov DWORD PTR [RDI+180],ESI
            mov EBP,1
.L_402d7a:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402d88:

            cmp BYTE PTR [RDI+176],0
            jne .L_402e1e

            mov EAX,DWORD PTR [RDI+188]
            mov ECX,DWORD PTR [RDI+184]
            mov EDX,DWORD PTR [RDI+180]
            add ECX,EAX
            sub ECX,EDX
            cmp ECX,ESI
            jb .L_402ecd

            cmp EAX,ESI
            jb .L_402e30

            jbe .L_402d7a

            mov R12D,EAX
            sub R12D,ESI
            cmp EDX,R12D
            jb .L_402e10
.L_402dc4:

            sub EAX,R12D
            sub EDX,R12D
            mov DWORD PTR [RBX+188],EAX
            lea RSI,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+208]
            mov ECX,EDX
            mov DWORD PTR [RBX+180],EDX
            lea RDX,QWORD PTR [R12+R12*4]
            lea RSI,QWORD PTR [RAX+RSI*4]
            mov EAX,ECX
            shl RDX,2
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RDI,QWORD PTR [RAX+RCX*4]
            call memmove@PLT

            mov EAX,EBP
            pop RBX
.L_402e08:

            pop RBP
            pop R12
            ret 

            nop
            nop
            nop
            nop
.L_402e10:

            lea ESI,DWORD PTR [R12+32]
            call .L_402640

            test AL,AL
            jne .L_402e98
.L_402e1e:

            xor EBP,EBP
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402e30:

            sub ESI,EAX
            mov EDX,ESI
            mov R12D,ESI
            call .L_402560

            test AL,AL
            mov EBP,EAX
            je .L_402e1e

            mov EAX,R12D
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov EAX,DWORD PTR [RBX+180]
            shl RDX,2
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RAX+RCX*4]
            mov EAX,DWORD PTR [RBX+188]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+208]
            lea RDI,QWORD PTR [RAX+RCX*4]
            call memmove@PLT

            add DWORD PTR [RBX+180],R12D
            add DWORD PTR [RBX+188],R12D
            mov EAX,EBP
            pop RBX
.L_402e8d:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402e98:

            mov EDX,DWORD PTR [RBX+180]
            cmp EDX,R12D
            jb .L_402eec

            mov EAX,DWORD PTR [RBX+188]
            jmp .L_402dc4
.L_402eae:

            lea RCX,QWORD PTR [RIP+.L_406120]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_4057f0]
            mov EDX,412
            call __assert_fail@PLT
.L_402ecd:

            lea RCX,QWORD PTR [RIP+.L_406120]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_4057f9]
            mov EDX,419
            call __assert_fail@PLT
.L_402eec:

            lea RCX,QWORD PTR [RIP+.L_406120]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_405814]
            mov EDX,439
            call __assert_fail@PLT
.L_402f0b:

            nop
            nop
            nop
            nop
            nop
.L_402f10:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
            mov RDX,QWORD PTR [RDI+208]
            cmp RDX,QWORD PTR [RDI+200]
            je .L_402f50
.L_402f2b:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            jne .L_402f80

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402f50:

            mov EAX,DWORD PTR [RDI+180]
            cmp DWORD PTR [RDI+188],EAX
            jne .L_402f2b
.L_402f5e:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov DWORD PTR [RDX+RAX*4],EBP
            add DWORD PTR [RBX+180],1
            add DWORD PTR [RBX+188],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402f80:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov RDX,QWORD PTR [RBX+208]
            mov EAX,DWORD PTR [RBX+188]
            jmp .L_402f5e
.L_402fc6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402fd0:

            test EDX,EDX
            je .L_40307f

            mov R11D,EDX
            and EDX,ESI
            test ECX,ECX
            not R11D
            mov EAX,DWORD PTR [RDI+184]
            jne .L_403038

            cmp R8D,-1
            jne .L_403038

            test EAX,EAX
            je .L_40307f

            sub EAX,1
            lea RSI,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RSI,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403010:

            mov R8,QWORD PTR [RDI+200]
            add R8,RAX
            add RAX,20
            mov ECX,DWORD PTR [R8+4]
            and ECX,R11D
            or ECX,EDX
            cmp RSI,RAX
            mov DWORD PTR [R8+4],ECX
            jne .L_403010

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403038:

            test EAX,EAX
            je .L_40307f

            sub EAX,1
            lea RSI,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RSI,2
            nop
            nop
            nop
            nop
            nop
            nop
.L_403050:

            mov R10,QWORD PTR [RDI+200]
            add R10,RAX
            mov R9D,DWORD PTR [R10+8]
            cmp R9D,ECX
            jb .L_403076

            cmp R9D,R8D
            jae .L_403076

            mov R9D,DWORD PTR [R10+4]
            and R9D,R11D
            or R9D,EDX
            mov DWORD PTR [R10+4],R9D
.L_403076:

            add RAX,20
            cmp RSI,RAX
            jne .L_403050
.L_40307f:

            ret 
.L_403081:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403090:

            mov EAX,EDX
            sub EAX,ESI
            cmp EAX,1
            jbe .L_4030a0

            jmp .L_402100
          .byte 0x66
          .byte 0x90
.L_4030a0:

            ret 
.L_4030a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4030b0:

            mov EDX,DWORD PTR [RDI+184]
            cmp EDX,1
            ja .L_4030c0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4030c0:

            xor ESI,ESI
            jmp .L_402100
.L_4030c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4030d0:

            mov EAX,DWORD PTR [RDI+184]
            test EAX,EAX
            jne .L_4030e0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4030e0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_4030ed:

            call .L_4030b0

            mov R13D,DWORD PTR [R12+184]
            mov RDX,QWORD PTR [R12+200]
            cmp R13D,1
            mov ECX,DWORD PTR [RDX+8]
            jbe .L_403180

            mov EBP,20
            xor ESI,ESI
            mov EBX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403120:

            mov EAX,DWORD PTR [RDX+RBP*1+8]
            cmp ECX,EAX
            je .L_40314b

            mov ECX,EBX
            sub ECX,ESI
            cmp ECX,1
            jbe .L_403147

            mov EDX,EBX
            mov RDI,R12
            call .L_402100

            mov RDX,QWORD PTR [R12+200]
            mov EAX,DWORD PTR [RDX+RBP*1+8]
.L_403147:

            mov ECX,EAX
            mov ESI,EBX
.L_40314b:

            add EBX,1
            add RBP,20
            cmp R13D,EBX
            jne .L_403120

            mov EAX,R13D
            sub EAX,ESI
            cmp EAX,1
            jbe .L_403180

            add RSP,8
.L_403165:

            mov EDX,R13D
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_402100
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403180:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40318b:

            nop
            nop
            nop
            nop
            nop
.L_403190:

            cmp DWORD PTR [RDI+124],2
            je .L_4031a0

            jmp .L_402210
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4031a0:

            ret 
.L_4031a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4031b0:

            cmp DWORD PTR [RDI+124],2
            je .L_4033a8

            mov R8D,EDX
            sub R8D,ESI
            cmp R8D,1
            jbe .L_4033a8

            mov R10,QWORD PTR [RDI+208]
            mov EAX,ESI
            push R12
            lea RAX,QWORD PTR [RAX+RAX*4]
            push RBP
            push RBX
.L_4031db:

            mov R11D,DWORD PTR [R10+RAX*4+8]
            lea EAX,DWORD PTR [RSI+1]
            cmp EDX,EAX
            jbe .L_4033c8

            sub R8D,2
            lea RCX,QWORD PTR [RAX+RAX*4]
            add RAX,R8
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [R10+RCX*4+8]
            lea R9,QWORD PTR [R10+RAX*4+28]
            mov EAX,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403210:

            mov R8D,DWORD PTR [RCX]
            cmp EAX,R8D
            cmova EAX,R8D
            add RCX,20
            cmp RCX,R9
            jne .L_403210
.L_403223:

            test ESI,ESI
            je .L_4033d0

            lea ECX,DWORD PTR [RSI-1]
            mov R8,RCX
            lea RCX,QWORD PTR [RCX+RCX*4]
            shl RCX,2
            cmp R11D,DWORD PTR [R10+RCX*1+8]
            jne .L_4033e0

            lea RCX,QWORD PTR [R10+RCX*1+8]
            jmp .L_40326c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403250:

            lea ESI,DWORD PTR [R8-1]
            sub RCX,20
            mov EBX,DWORD PTR [RCX+20]
            mov R9,RSI
            lea RSI,QWORD PTR [RSI+RSI*4]
            cmp DWORD PTR [R10+RSI*4+8],EBX
            jne .L_403271

            mov R8D,R9D
.L_40326c:

            test R8D,R8D
            jne .L_403250
.L_403271:

            mov EBX,DWORD PTR [RDI+188]
            cmp EDX,EBX
            jae .L_4033b0

            mov R11D,EDX
            lea ESI,DWORD PTR [RDX-1]
            lea RCX,QWORD PTR [R11+R11*4]
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl RCX,2
            mov R9D,DWORD PTR [R10+RCX*1+8]
            cmp DWORD PTR [R10+RSI*4+8],R9D
            jne .L_4033c0

            mov R9,R11
            add EDX,1
            lea RSI,QWORD PTR [R10+RCX*1+8]
            neg R9
            lea R12,QWORD PTR [RDX+RDX*4]
            mov RCX,RDX
            shl R9,2
            sub R9,R11
            shl R12,2
            shl R9,2
            jmp .L_4032e8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4032d0:

            mov EBP,DWORD PTR [RSI]
            add RSI,20
            lea R11,QWORD PTR [RSI+R9*1]
            cmp EBP,DWORD PTR [R11+R12*1-20]
            jne .L_4033c0

            add ECX,1
.L_4032e8:

            cmp ECX,EBX
            mov EDX,ECX
            jne .L_4032d0
.L_4032ee:

            mov ECX,DWORD PTR [RDI+180]
            cmp ECX,DWORD PTR [RDI+184]
            jae .L_403360

            mov ESI,ECX
            sub EDX,1
            lea R9,QWORD PTR [RSI+RSI*4]
            mov RSI,QWORD PTR [RDI+200]
            lea RSI,QWORD PTR [RSI+R9*4]
            lea R9,QWORD PTR [RDX+RDX*4]
            shl R9,2
            mov EDX,DWORD PTR [R10+R9*1+8]
            cmp DWORD PTR [RSI+8],EDX
            je .L_40334a

            jmp .L_403360
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403328:

            mov EDX,ECX
            lea RSI,QWORD PTR [RDX+RDX*4]
            mov RDX,QWORD PTR [RDI+200]
            lea RSI,QWORD PTR [RDX+RSI*4]
            mov RDX,QWORD PTR [RDI+208]
            mov EDX,DWORD PTR [RDX+R9*1+8]
            cmp DWORD PTR [RSI+8],EDX
            jne .L_403360
.L_40334a:

            mov DWORD PTR [RSI+8],EAX
            add ECX,1
            cmp DWORD PTR [RDI+184],ECX
            ja .L_403328

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403360:

            cmp EBX,R8D
            jbe .L_40339c

            mov ECX,R8D
            not R8D
            lea ESI,DWORD PTR [R8+RBX*1]
            lea RDX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RCX+RSI*1+1]
            shl RDX,2
            lea RSI,QWORD PTR [RCX+RCX*4]
            shl RSI,2
            nop
            nop
            nop
            nop
.L_403388:

            mov RCX,QWORD PTR [RDI+208]
            mov DWORD PTR [RCX+RDX*1+8],EAX
            add RDX,20
            cmp RSI,RDX
            jne .L_403388
.L_40339c:

            pop RBX
.L_40339d:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4033a8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4033b0:

            je .L_4032ee

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4033c0:

            mov EBX,EDX
            jmp .L_403360
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4033c8:

            mov EAX,R11D
            jmp .L_403223
.L_4033d0:

            xor R8D,R8D
            jmp .L_403271
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4033e0:

            mov R8D,ESI
            jmp .L_403271
.L_4033e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4033f0:

            push RBX
.L_4033f1:

            mov EAX,DWORD PTR [RDI+180]
            mov RBX,RDI
            mov RDX,QWORD PTR [RDI+200]
            mov RSI,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea ECX,DWORD PTR [RSI+1]
            cmp ECX,DWORD PTR [RBX+184]
            mov EDI,DWORD PTR [RDX+RAX*4+8]
            jae .L_403450

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp DWORD PTR [RDX+RAX*4+8],EDI
            je .L_403447

            mov EAX,DWORD PTR [RBX+188]
            test EAX,EAX
            jne .L_40345a

            cmp DWORD PTR [RBX+124],2
            je .L_403447

            lea EDX,DWORD PTR [RSI+2]
            mov RDI,RBX
            call .L_402210
.L_40343e:

            mov EAX,DWORD PTR [RBX+180]
            lea ECX,DWORD PTR [RAX+1]
.L_403447:

            mov DWORD PTR [RBX+180],ECX
            pop RBX
.L_40344e:

            ret 
          .byte 0x90
.L_403450:

            mov EAX,DWORD PTR [RBX+188]
            test EAX,EAX
            je .L_403447
.L_40345a:

            lea EDX,DWORD PTR [RAX-1]
            lea RSI,QWORD PTR [RDX+RDX*4]
            mov RAX,RDX
            mov RDX,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RSI*4]
            mov ESI,DWORD PTR [RDX+8]
            cmp ESI,EDI
            ja .L_40349a

            jmp .L_403447
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403480:

            lea EDX,DWORD PTR [RAX-1]
            lea RCX,QWORD PTR [RDX+RDX*4]
            mov RAX,RDX
            mov RDX,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RCX*4]
            cmp ESI,DWORD PTR [RDX+8]
            jne .L_40343e
.L_40349a:

            test EAX,EAX
            mov DWORD PTR [RDX+8],EDI
            jne .L_403480

            mov EAX,DWORD PTR [RBX+180]
            lea ECX,DWORD PTR [RAX+1]
            jmp .L_403447
.L_4034ac:

            nop
            nop
            nop
            nop
.L_4034b0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RDI+140]
            cmp EAX,1
            je .L_4034f8

            or EAX,DWORD PTR [RDI+184]
            jne .L_4035ab
.L_4034d0:

            mov EAX,DWORD PTR [RBX+144]
            test EAX,EAX
            je .L_403568

            cmp QWORD PTR [RBX+152],0
            je .L_403587
.L_4034ec:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4034f8:

            mov R8D,DWORD PTR [RDI+148]
            test R8D,R8D
            jne .L_4034d0

            mov EDI,DWORD PTR [RDI+184]
            test EDI,EDI
            je .L_4034d0

            xor EBP,EBP
.L_403510:

            mov RSI,QWORD PTR [RBX+200]
            mov EAX,EBP
            mov RCX,QWORD PTR [RBX+112]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov RDX,QWORD PTR [RCX+224]
            mov RDI,RCX
            mov ESI,DWORD PTR [RAX]
            call QWORD PTR [RCX+160]

            cmp EAX,1517910393
            setne CL
            cmp EAX,1516858984
            setne DL
            test CL,DL
            je .L_403552

            cmp EAX,1517976186
            jne .L_4035a0
.L_403552:

            add EBP,1
            cmp DWORD PTR [RBX+184],EBP
            ja .L_403510

            jmp .L_4034d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403568:

            mov EDI,DWORD PTR [RBX+148]
            call .L_406760

            cmp QWORD PTR [RBX+152],0
            mov DWORD PTR [RBX+144],EAX
            jne .L_4034ec
.L_403587:

            call .L_406630

            mov QWORD PTR [RBX+152],RAX
            add RSP,8
.L_403597:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4035a0:

            mov DWORD PTR [RBX+148],EAX
            jmp .L_4034d0
.L_4035ab:

            lea RCX,QWORD PTR [RIP+.L_4060e0]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_4058b0]
            mov EDX,644
            call __assert_fail@PLT
.L_4035ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4035d0:

            push RBX

            mov ESI,304
            mov EDI,1
            lea RBX,QWORD PTR [RIP+.L_657260]
            call calloc@PLT

            test RAX,RAX
            je .L_403626

            lea RDI,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX],1
            xor ESI,ESI
            mov RBX,RAX
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            mov DWORD PTR [RBX+136],128
            mov RDI,RBX
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            call .L_402870
.L_403626:

            mov RAX,RBX
            pop RBX

            ret 
.L_40362b:

            nop
            nop
            nop
            nop
            nop
.L_403630:

            lea RAX,QWORD PTR [RIP+.L_657260]
            ret 
.L_403638:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403640:

            test RDI,RDI
            je .L_403654

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_403654

            test EAX,EAX
            jle .L_403660

            lock add DWORD PTR [RDI],1
.L_403654:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403660:

            lea RCX,QWORD PTR [RIP+.L_4060a0]
            lea RSI,QWORD PTR [RIP+.L_405821]
            lea RDI,QWORD PTR [RIP+.L_405836]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_403683:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403690:

            test RDI,RDI
            je .L_4036c0

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4036c0

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_4036c8

            lock sub DWORD PTR [RDI],1
            je .L_4036f0

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4036c0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4036c8:

            lea RCX,QWORD PTR [RIP+.L_406060]
            lea RSI,QWORD PTR [RIP+.L_405821]
            lea RDI,QWORD PTR [RIP+.L_405836]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4036f0:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_403778

            mov RDI,QWORD PTR [RDI+56]
            cmp R12,RDI
            je .L_403713

            call free@PLT
.L_403713:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_403723:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RDI,QWORD PTR [RBX+112]
            call .L_40d6a0

            mov RDI,QWORD PTR [RBX+200]
            call free@PLT

            mov RDI,QWORD PTR [RBX+216]
            call free@PLT

            mov RAX,QWORD PTR [RBX+296]
            test RAX,RAX
            je .L_403761

            mov RDI,QWORD PTR [RBX+288]
            call RAX
.L_403761:

            mov RDI,RBX
            pop RBX
.L_403765:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403778:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_4037c6
.L_403787:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_403778

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_403787
.L_4037c6:

            mov RDI,QWORD PTR [RBX+56]
            cmp R12,RDI
            je .L_4037d4

            call free@PLT
.L_4037d4:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_403723
.L_4037f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403800:

            test RDI,RDI
            je .L_403828

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_403828

            sub RSP,8
            test EAX,EAX
            jle .L_403830

            add RDI,8
            call .L_4068c0

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403828:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403830:

            lea RCX,QWORD PTR [RIP+.L_405f80]
            lea RSI,QWORD PTR [RIP+.L_405821]
            lea RDI,QWORD PTR [RIP+.L_405836]
            mov EDX,187
            call __assert_fail@PLT
.L_40384f:

            nop
.L_403850:

            test RDI,RDI
            je .L_403898

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_403898

            test EAX,EAX
            jle .L_403870

            add RDI,8
            jmp .L_406b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403870:

            lea RCX,QWORD PTR [RIP+.L_405f00]
            lea RSI,QWORD PTR [RIP+.L_405821]
            lea RDI,QWORD PTR [RIP+.L_405836]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403898:

            xor EAX,EAX
            ret 
.L_40389b:

            nop
            nop
            nop
            nop
            nop
.L_4038a0:

            mov DWORD PTR [RDI+140],ESI
            ret 
.L_4038a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4038b0:

            mov EAX,DWORD PTR [RDI+140]
            ret 
.L_4038b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4038c0:

            cmp DWORD PTR [RDI],-1
            je .L_4038f8

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            test RSI,RSI
            je .L_403900
.L_4038d6:

            mov RDI,RBX
            call .L_40d650

            mov RDI,QWORD PTR [RBP+112]
            call .L_40d6a0

            mov QWORD PTR [RBP+112],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4038f8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403900:

            call .L_40d4e0

            mov RBX,RAX
            jmp .L_4038d6
.L_40390a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403910:

            mov RAX,QWORD PTR [RDI+112]
            ret 
.L_403915:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403920:

            cmp DWORD PTR [RDI],-1
            je .L_40392b

            mov DWORD PTR [RDI+144],ESI
.L_40392b:

            ret 
.L_40392d:

            nop
            nop
            nop
.L_403930:

            mov EAX,DWORD PTR [RDI+144]
            ret 
.L_403937:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403940:

            cmp DWORD PTR [RDI],-1
            je .L_40394b

            mov DWORD PTR [RDI+148],ESI
.L_40394b:

            ret 
.L_40394d:

            nop
            nop
            nop
.L_403950:

            mov EAX,DWORD PTR [RDI+148]
            ret 
.L_403957:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403960:

            cmp DWORD PTR [RDI],-1
            je .L_40396c

            mov QWORD PTR [RDI+152],RSI
.L_40396c:

            ret 
.L_40396e:

            nop
            nop
.L_403970:

            mov RAX,QWORD PTR [RDI+152]
            ret 
.L_403978:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403980:

            cmp DWORD PTR [RDI],-1
            je .L_40399c

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RDI+144],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RDI+160],XMM0
.L_40399c:

            ret 
.L_40399e:

            nop
            nop
.L_4039a0:

            movdqu XMM0,XMMWORD PTR [RDI+144]
            movups XMMWORD PTR [RSI],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+160]
            movups XMMWORD PTR [RSI+16],XMM0
            ret 
.L_4039b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4039c0:

            cmp DWORD PTR [RDI],-1
            je .L_4039c8

            mov DWORD PTR [RDI+120],ESI
.L_4039c8:

            ret 
.L_4039ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4039d0:

            mov EAX,DWORD PTR [RDI+120]
            ret 
.L_4039d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4039e0:

            cmp DWORD PTR [RDI],-1
            je .L_4039e8

            mov DWORD PTR [RDI+124],ESI
.L_4039e8:

            ret 
.L_4039ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4039f0:

            mov EAX,DWORD PTR [RDI+124]
            ret 
.L_4039f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403a00:

            cmp DWORD PTR [RDI],-1
            je .L_403a0b

            mov DWORD PTR [RDI+128],ESI
.L_403a0b:

            ret 
.L_403a0d:

            nop
            nop
            nop
.L_403a10:

            mov EAX,DWORD PTR [RDI+128]
            ret 
.L_403a17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403a20:

            jmp .L_402870
.L_403a25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403a30:

            jmp .L_4027b0
.L_403a35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403a40:

            test ESI,ESI
            mov EAX,1
            je .L_403a51

            cmp ESI,DWORD PTR [RDI+192]
            jae .L_403a58
.L_403a51:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403a58:

            sub RSP,8
            call .L_402420

            add RSP,8
            movzx EAX,AL
            ret 
.L_403a69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403a70:

            movzx EAX,BYTE PTR [RDI+176]
            xor EAX,1
            movzx EAX,AL
            ret 
.L_403a7e:

            nop
            nop
.L_403a80:

            push RBX
            mov RBX,RDI
            call .L_4028b0

            mov DWORD PTR [RBX+272],0
            pop RBX
            ret 
.L_403a95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403aa0:

            cmp DWORD PTR [RDI],-1
            je .L_403b80

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
            test ESI,ESI
            jne .L_403af0

            mov DWORD PTR [RDI+184],0
            mov DWORD PTR [RDI+140],0
            mov DWORD PTR [RDI+268],0
.L_403ad6:

            mov DWORD PTR [RBX+272],0
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403af0:

            cmp ESI,DWORD PTR [RDI+192]
            jb .L_403b01

            call .L_402420

            test AL,AL
            je .L_403b40
.L_403b01:

            mov EAX,DWORD PTR [RBX+184]
            cmp EBP,EAX
            jbe .L_403b36

            mov EDX,EBP
            lea RCX,QWORD PTR [RAX+RAX*4]
            xor ESI,ESI
            sub EDX,EAX
            mov RAX,QWORD PTR [RBX+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RAX+RCX*4]
            shl RDX,2
            call memset@PLT

            cmp BYTE PTR [RBX+178],0
            jne .L_403b50
.L_403b36:

            mov DWORD PTR [RBX+184],EBP
            jmp .L_403ad6
          .byte 0x66
          .byte 0x90
.L_403b40:

            add RSP,8
.L_403b44:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b50:

            mov EAX,DWORD PTR [RBX+184]
            mov EDX,EBP
            xor ESI,ESI
            sub EDX,EAX
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+216]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RAX+RCX*4]
            shl RDX,2
            call memset@PLT

            jmp .L_403b36
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403b80:

            xor EAX,EAX
            test ESI,ESI
            sete AL
            ret 
.L_403b88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403b90:

            mov EAX,DWORD PTR [RDI+184]
            ret 
.L_403b97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403ba0:

            test RSI,RSI
            je .L_403bad

            mov EAX,DWORD PTR [RDI+184]
            mov DWORD PTR [RSI],EAX
.L_403bad:

            mov RAX,QWORD PTR [RDI+200]
            ret 
.L_403bb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403bc0:

            push RBX
            mov RBX,RDI
            sub RSP,16
            cmp BYTE PTR [RDI+178],0
            je .L_403bf0
.L_403bd1:

            test RSI,RSI
            je .L_403bde

            mov EAX,DWORD PTR [RBX+184]
            mov DWORD PTR [RSI],EAX
.L_403bde:

            mov RAX,QWORD PTR [RBX+216]
            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403bf0:

            mov QWORD PTR [RSP+8],RSI
            call .L_402a10

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_403bd1
.L_403c01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c10:

            jmp .L_4030b0
.L_403c15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c20:

            mov EAX,EDX
            sub EAX,ESI
            cmp EAX,1
            jbe .L_403c30

            jmp .L_402100
          .byte 0x66
          .byte 0x90
.L_403c30:

            ret 
.L_403c32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c40:

            jmp .L_4030d0
.L_403c45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c50:

            jmp .L_4034b0
.L_403c55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c60:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            movsxd R12,EDX
            mov RBX,RDI
            sub RSP,24
.L_403c7a:

            mov EAX,DWORD PTR [RDI+140]
            mov EBP,DWORD PTR [RDI+128]
            cmp EAX,1
            je .L_403c97

            or EAX,DWORD PTR [RDI+184]
            jne .L_404295
.L_403c97:

            cmp DWORD PTR [RBX],-1
            je .L_403ddf

            cmp R12D,-1
            jne .L_403cbb

            mov RDI,R13
            mov DWORD PTR [RSP+12],R8D
            call strlen@PLT

            mov R8D,DWORD PTR [RSP+12]
            movsxd R12,EAX
.L_403cbb:

            mov EAX,R12D
            sub EAX,R15D
            cmp R8D,-1
            cmove R8D,EAX
            mov EAX,DWORD PTR [RBX+184]
            movsxd R14,R8D
            mov RSI,R14
            shr RSI,2
            add ESI,EAX
            jne .L_404008
.L_403ce1:

            mov EDI,R15D
            add RDI,R13
            test R15D,R15D
            je .L_403cf4

            test EAX,EAX
            je .L_404060
.L_403cf4:

            add R14,RDI
            cmp R14,RDI
            jbe .L_403df0
.L_403d00:

            movzx ESI,BYTE PTR [RDI]
            mov RDX,RDI
            lea R15,QWORD PTR [RDI+1]
            sub RDX,R13
            cmp ESI,127
            jbe .L_403d48

            lea EAX,DWORD PTR [RSI-194]
            cmp EAX,29
            ja .L_403d60

            cmp R14,R15
            jbe .L_403f70

            movzx EAX,BYTE PTR [RDI+1]
            add EAX,-128
            cmp EAX,63
            ja .L_404048

            shl ESI,6
            lea R15,QWORD PTR [RDI+2]
            and ESI,1984
            or ESI,EAX
            nop
            nop
            nop
.L_403d48:

            mov RDI,RBX
            call .L_4028b0

            cmp R14,R15
            jbe .L_403df8
.L_403d59:

            mov RDI,R15
            jmp .L_403d00
          .byte 0x66
          .byte 0x90
.L_403d60:

            lea EAX,DWORD PTR [RSI-224]
            cmp EAX,15
            ja .L_403f80

            mov RAX,R14
            sub RAX,R15
            cmp RAX,1
            jle .L_403dc0

            movzx EAX,BYTE PTR [RDI+1]
            add EAX,-128
            cmp EAX,63
            ja .L_403dc0

            movzx ECX,BYTE PTR [RDI+2]
            add ECX,-128
            cmp ECX,63
            ja .L_403dc0

            shl ESI,12
            shl EAX,6
            movzx ESI,SI
            or ESI,EAX
            or ESI,ECX
            cmp ESI,2047
            jbe .L_403dc0

            lea EAX,DWORD PTR [RSI-55296]
            cmp EAX,2047
            ja .L_4041c0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403dc0:

            mov ESI,EBP
            jmp .L_403d48
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403dc8:

            mov DWORD PTR [RBX+272],EDI
            mov DWORD PTR [RBX+RDX*4+248],EBP
.L_403dd5:

            mov DWORD PTR [RBX+140],1
.L_403ddf:

            add RSP,24
.L_403de3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_403df0:

            mov R15,RDI
            nop
            nop
            nop
            nop
            nop
.L_403df8:

            add R13,R12
            xor ESI,ESI
            mov DWORD PTR [RBX+272],0
            cmp R13,R15
            jbe .L_403dd5

            nop
            nop
            nop
            nop
.L_403e10:

            movzx EAX,BYTE PTR [R15]
            mov EDX,ESI
            lea R8,QWORD PTR [R15+1]
            lea EDI,DWORD PTR [RSI+1]
            cmp EAX,127
            jbe .L_403e58

            lea ECX,DWORD PTR [RAX-194]
            cmp ECX,29
            ja .L_403e90

            cmp R13,R8
            jbe .L_403dc8

            movzx EDX,BYTE PTR [R15+1]
            add EDX,-128
            cmp EDX,63
            ja .L_404030

            shl EAX,6
            lea R8,QWORD PTR [R15+2]
            and EAX,1984
            or EAX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e58:

            cmp R13,R8
            mov DWORD PTR [RBX+272],EDI
            mov DWORD PTR [RBX+RSI*4+248],EAX
            jbe .L_403dd5
.L_403e6e:

            add RSI,1
            mov R15,R8
            cmp RSI,5
            jne .L_403e10

            mov DWORD PTR [RBX+140],1
            jmp .L_403ddf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403e90:

            lea EDX,DWORD PTR [RAX-224]
            cmp EDX,15
            ja .L_403f00

            mov RDX,R13
            sub RDX,R8
            cmp RDX,1
            jle .L_403ef0

            movzx EDX,BYTE PTR [R15+1]
            add EDX,-128
            cmp EDX,63
            ja .L_403ef0

            movzx ECX,BYTE PTR [R15+2]
            add ECX,-128
            cmp ECX,63
            ja .L_403ef0

            shl EAX,12
            shl EDX,6
            movzx EAX,AX
            or EAX,EDX
            or EAX,ECX
            cmp EAX,2047
            jbe .L_403ef0

            lea EDX,DWORD PTR [RAX-55296]
            cmp EDX,2047
            ja .L_4041b0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403ef0:

            mov EAX,EBP
            jmp .L_403e58
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403f00:

            lea EDX,DWORD PTR [RAX-240]
            cmp EDX,4
            ja .L_403ef0

            mov RDX,R13
            sub RDX,R8
            cmp RDX,2
            jle .L_403ef0

            movzx EDX,BYTE PTR [R15+1]
            add EDX,-128
            cmp EDX,63
            ja .L_403ef0

            movzx ECX,BYTE PTR [R15+2]
            add ECX,-128
            cmp ECX,63
            ja .L_403ef0

            movzx R9D,BYTE PTR [R15+3]
            add R9D,-128
            cmp R9D,63
            ja .L_403ef0

            shl EAX,18
            shl EDX,12
            shl ECX,6
            and EAX,1835008
            or EAX,EDX
            or EAX,R9D
            or EAX,ECX
            lea EDX,DWORD PTR [RAX-65536]
            cmp EDX,1048575
            ja .L_403ef0

            lea R8,QWORD PTR [R15+4]
            jmp .L_403e58
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403f70:

            mov ESI,EBP
            mov RDI,RBX
            call .L_4028b0

            jmp .L_403df8
          .byte 0x90
.L_403f80:

            lea EAX,DWORD PTR [RSI-240]
            cmp EAX,4
            ja .L_403dc0

            mov RAX,R14
            sub RAX,R15
            cmp RAX,2
            jle .L_403dc0

            movzx EAX,BYTE PTR [RDI+1]
            add EAX,-128
            cmp EAX,63
            ja .L_403dc0

            movzx ECX,BYTE PTR [RDI+2]
            add ECX,-128
            cmp ECX,63
            ja .L_403dc0

            movzx R8D,BYTE PTR [RDI+3]
            add R8D,-128
            cmp R8D,63
            ja .L_403dc0

            shl ESI,18
            shl EAX,12
            shl ECX,6
            and ESI,1835008
            or ESI,EAX
            or ESI,R8D
            or ESI,ECX
            lea EAX,DWORD PTR [RSI-65536]
            cmp EAX,1048575
            ja .L_403dc0

            lea R15,QWORD PTR [RDI+4]
            jmp .L_403d48
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404008:

            cmp ESI,DWORD PTR [RBX+192]
            jb .L_403ce1

            mov RDI,RBX
            call .L_402420

            mov EAX,DWORD PTR [RBX+184]
            jmp .L_403ce1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404030:

            mov DWORD PTR [RBX+272],EDI
            mov DWORD PTR [RBX+RSI*4+248],EBP
            jmp .L_403e6e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404048:

            mov ESI,EBP
            mov RDI,RBX
            call .L_4028b0

            jmp .L_403d59
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404060:

            cmp R13,RDI
            mov DWORD PTR [RBX+268],0
            jae .L_403cf4

            mov RSI,RDI
            mov R8D,1
            nop
            nop
            nop
            nop
.L_404080:

            lea R9,QWORD PTR [RSI-1]
            movzx ECX,BYTE PTR [RSI-1]
            cmp R13,R9
            jae .L_404110

            mov EAX,ECX
            and EAX,4294967232
            cmp AL,128
            jne .L_404110

            mov R10,R9
            jmp .L_4040b8
          .byte 0x90
.L_4040a0:

            mov EAX,ECX
            and EAX,4294967232
            cmp AL,128
            jne .L_4040c6

            mov RAX,RSI
            sub RAX,RDX
            cmp RAX,3
            jg .L_4040c6

            mov R10,RDX
.L_4040b8:

            lea RDX,QWORD PTR [R10-1]
            movzx ECX,BYTE PTR [R10-1]
            cmp R13,RDX
            jne .L_4040a0
.L_4040c6:

            cmp ECX,127
            jbe .L_404172

            lea EAX,DWORD PTR [RCX-194]
            cmp EAX,29
            ja .L_404130

            cmp R10,RSI
            jae .L_404170

            movzx EAX,BYTE PTR [RDX+1]
            add EAX,-128
            cmp EAX,63
            ja .L_404177

            shl ECX,6
            lea R10,QWORD PTR [RDX+2]
            and ECX,1984
            or ECX,EAX
            cmp R10,RSI
            jne .L_404177
.L_404107:

            mov RSI,RDX
            jmp .L_40417c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404110:

            cmp ECX,127
            jbe .L_404283

            lea EAX,DWORD PTR [RCX-194]
            mov RDX,R9
            mov R10,RSI
            cmp EAX,29
            jbe .L_40428b

            nop
            nop
.L_404130:

            lea EAX,DWORD PTR [RCX-224]
            cmp EAX,15
            ja .L_4041d0

            mov RAX,RSI
            sub RAX,R10
            cmp RAX,1
            jle .L_404170

            movzx EAX,BYTE PTR [RDX+1]
            add EAX,-128
            cmp EAX,63
            ja .L_404170

            movzx R11D,BYTE PTR [RDX+2]
            add R11D,-128
            cmp R11D,63
            jbe .L_40424f

            nop
            nop
            nop
            nop
            nop
            nop
.L_404170:

            mov ECX,EBP
.L_404172:

            cmp R10,RSI
            je .L_404107
.L_404177:

            mov ECX,EBP
            mov RSI,R9
.L_40417c:

            cmp R13,RSI
            mov DWORD PTR [RBX+268],R8D
            mov DWORD PTR [RBX+R8*4+224],ECX
            jae .L_403cf4

            add R8,1
            cmp R8,6
            jne .L_404080

            jmp .L_403cf4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4041b0:

            lea R8,QWORD PTR [R15+3]
            jmp .L_403e58
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4041c0:

            lea R15,QWORD PTR [RDI+3]
            jmp .L_403d48
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4041d0:

            lea EAX,DWORD PTR [RCX-240]
            cmp EAX,4
            ja .L_404170

            mov RAX,RSI
            sub RAX,R10
            cmp RAX,2
            jle .L_404170

            movzx R11D,BYTE PTR [RDX+1]
            add R11D,-128
            cmp R11D,63
            ja .L_404170

            movzx EAX,BYTE PTR [RDX+2]
            add EAX,-128
            cmp EAX,63
            ja .L_404170

            movzx R15D,BYTE PTR [RDX+3]
            add R15D,-128
            cmp R15D,63
            ja .L_404170

            shl ECX,18
            shl R11D,12
            shl EAX,6
            and ECX,1835008
            or ECX,R15D
            or ECX,R11D
            or ECX,EAX
            lea EAX,DWORD PTR [RCX-65536]
            cmp EAX,1048575
            ja .L_404170

            lea R10,QWORD PTR [RDX+4]
            jmp .L_404172
.L_40424f:

            shl ECX,12
            shl EAX,6
            movzx ECX,CX
            or ECX,R11D
            or ECX,EAX
            cmp ECX,2047
            jbe .L_404170

            lea EAX,DWORD PTR [RCX-55296]
            cmp EAX,2047
            jbe .L_404170

            lea R10,QWORD PTR [RDX+3]
            jmp .L_404172
.L_404283:

            mov RSI,R9
            jmp .L_40417c
.L_40428b:

            mov ECX,EBP
            mov R10,RSI
            jmp .L_404172
.L_404295:

            lea RCX,QWORD PTR [RIP+.L_405e20]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_405920]
            mov EDX,1471
            call __assert_fail@PLT
.L_4042b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042c0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_4042d4:

            mov EAX,DWORD PTR [RDI+140]
            mov R12D,DWORD PTR [RDI+128]
            cmp EAX,1
            je .L_4042f2

            or EAX,DWORD PTR [RDI+184]
            jne .L_40457a
.L_4042f2:

            cmp DWORD PTR [RBX],-1
            je .L_40442c

            cmp EDX,-1
            je .L_404528
.L_404304:

            movsxd RAX,EDX
            lea RBP,QWORD PTR [R14+RAX*2]
.L_40430b:

            sub EDX,ECX
            cmp R8D,-1
            mov EAX,DWORD PTR [RBX+184]
            cmove R8D,EDX
            movsxd R13,R8D
            add R13,R13
            mov RSI,R13
            shr RSI,2
            add ESI,EAX
            jne .L_404440
.L_404330:

            mov EDX,ECX
            test EAX,EAX
            lea RDX,QWORD PTR [R14+RDX*2]
            jne .L_404342

            test ECX,ECX
            jne .L_404498
.L_404342:

            add R13,RDX
            cmp R13,RDX
            jbe .L_404568

            nop
            nop
.L_404350:

            movzx ESI,WORD PTR [RDX]
            lea R15,QWORD PTR [RDX+2]
            lea EAX,DWORD PTR [RSI-55296]
            cmp EAX,2047
            ja .L_404393

            cmp ESI,56319
            ja .L_404390

            cmp R13,R15
            jbe .L_404390

            movzx EAX,WORD PTR [RDX+2]
            lea ECX,DWORD PTR [RAX-56320]
            cmp ECX,1023
            jbe .L_404480

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404390:

            mov ESI,R12D
.L_404393:

            sub RDX,R14
            mov RDI,RBX
            sar RDX,1
            call .L_4028b0

            cmp R13,R15
            mov RDX,R15
            ja .L_404350
.L_4043a9:

            cmp R15,RBP
            mov DWORD PTR [RBX+272],0
            mov EAX,1
            jae .L_404422

            nop
            nop
            nop
.L_4043c0:

            movzx EDX,WORD PTR [R15]
            lea RCX,QWORD PTR [R15+2]
            lea ESI,DWORD PTR [RDX-55296]
            cmp ESI,2047
            ja .L_404403

            cmp EDX,56319
            ja .L_404400

            cmp RBP,RCX
            jbe .L_404400

            movzx ESI,WORD PTR [R15+2]
            lea EDI,DWORD PTR [RSI-56320]
            cmp EDI,1023
            jbe .L_404470

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404400:

            mov EDX,R12D
.L_404403:

            cmp RBP,RCX
            mov DWORD PTR [RBX+272],EAX
            mov DWORD PTR [RBX+RAX*4+244],EDX
            jbe .L_404422

            add RAX,1
            mov R15,RCX
            cmp RAX,6
            jne .L_4043c0
.L_404422:

            mov DWORD PTR [RBX+140],1
.L_40442c:

            add RSP,24
.L_404430:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404440:

            cmp ESI,DWORD PTR [RBX+192]
            jb .L_404330

            mov RDI,RBX
            mov DWORD PTR [RSP+12],ECX
            call .L_402420

            mov EAX,DWORD PTR [RBX+184]
            mov ECX,DWORD PTR [RSP+12]
            jmp .L_404330
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404470:

            shl EDX,10
            lea RCX,QWORD PTR [R15+4]
            lea EDX,DWORD PTR [RSI+RDX*1-56613888]
            jmp .L_404403
.L_404480:

            shl ESI,10
            lea R15,QWORD PTR [RDX+4]
            lea ESI,DWORD PTR [RAX+RSI*1-56613888]
            jmp .L_404393
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404498:

            cmp R14,RDX
            mov DWORD PTR [RBX+268],0
            jae .L_404342

            mov RDI,RDX
            mov EAX,1
            nop
            nop
            nop
            nop
            nop
.L_4044b8:

            movzx ECX,WORD PTR [RDI-2]
            lea RSI,QWORD PTR [RDI-2]
            lea R8D,DWORD PTR [RCX-55296]
            cmp R8D,2047
            ja .L_4044fb

            cmp ECX,56319
            jbe .L_4044f8

            cmp R14,RSI
            jae .L_4044f8

            movzx R8D,WORD PTR [RDI-4]
            lea R9D,DWORD PTR [R8-55296]
            cmp R9D,1023
            jbe .L_404550

            nop
            nop
            nop
            nop
            nop
            nop
.L_4044f8:

            mov ECX,R12D
.L_4044fb:

            cmp R14,RSI
            mov DWORD PTR [RBX+268],EAX
            mov DWORD PTR [RBX+RAX*4+224],ECX
            jae .L_404342

            add RAX,1
            mov RDI,RSI
            cmp RAX,6
            jne .L_4044b8

            jmp .L_404342
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404528:

            cmp WORD PTR [R14],0
            lea RAX,QWORD PTR [R14+2]
            je .L_404570

            xor EDX,EDX
            nop
            nop
            nop
.L_404538:

            add RAX,2
            add EDX,1
            cmp WORD PTR [RAX-2],0
            jne .L_404538

            jmp .L_404304
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404550:

            shl R8D,10
            lea RSI,QWORD PTR [RDI-4]
            lea ECX,DWORD PTR [RCX+R8*1-56613888]
            jmp .L_4044fb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404568:

            mov R15,RDX
            jmp .L_4043a9
.L_404570:

            mov RBP,R14
            xor EDX,EDX
            jmp .L_40430b
.L_40457a:

            lea RCX,QWORD PTR [RIP+.L_405d40]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_405920]
            mov EDX,1471
            call __assert_fail@PLT
.L_404599:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4045a0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_4045b4:

            mov EAX,DWORD PTR [RDI+140]
            mov EBP,DWORD PTR [RDI+128]
            cmp EAX,1
            je .L_4045d1

            or EAX,DWORD PTR [RDI+184]
            jne .L_4047e7
.L_4045d1:

            cmp DWORD PTR [RBX],-1
            je .L_404702

            cmp EDX,-1
            je .L_4047b8
.L_4045e3:

            movsxd RAX,EDX
            lea RAX,QWORD PTR [R14+RAX*4]
            mov QWORD PTR [RSP+8],RAX
.L_4045ef:

            sub EDX,ECX
            mov EAX,DWORD PTR [RBX+184]
            cmp R8D,-1
            cmove R8D,EDX
            mov ESI,R8D
            add ESI,EAX
            jne .L_404718
.L_40460a:

            mov EDX,ECX
            test ECX,ECX
            lea R13,QWORD PTR [R14+RDX*4]
            je .L_40461c

            test EAX,EAX
            je .L_404750
.L_40461c:

            movsxd R8,R8D
            lea R12,QWORD PTR [R13+R8*4]
            cmp R12,R13
            jbe .L_40468a

            mov RAX,R13
            mov R15,R13
            not RAX
            add RAX,R12
            mov QWORD PTR [RSP+16],RAX
            and RAX,-4
            lea R12,QWORD PTR [R13+RAX*1+4]
            nop
            nop
            nop
            nop
            nop
.L_404648:

            mov ESI,DWORD PTR [R15]
            lea EAX,DWORD PTR [RSI-57344]
            cmp EAX,1056767
            jbe .L_404661

            cmp ESI,55295
            cmova ESI,EBP
.L_404661:

            mov RDX,R15
            mov RDI,RBX
            add R15,4
            sub RDX,R14
            sar RDX,2
            call .L_4028b0

            cmp R12,R15
            jne .L_404648

            mov R12,QWORD PTR [RSP+16]
            shr R12,2
            lea R13,QWORD PTR [R13+R12*4+4]
.L_40468a:

            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RBX+272],0
            cmp R13,RDI
            jae .L_4046f8

            mov RAX,R13
            not RAX
            lea RSI,QWORD PTR [RAX+RDI*1]
            mov EAX,1
            shr RSI,2
            add RSI,1
            jmp .L_4046ca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4046c0:

            add RAX,1
            cmp RAX,6
            je .L_4046f8
.L_4046ca:

            mov EDX,DWORD PTR [R13+RAX*4-4]
            lea ECX,DWORD PTR [RDX-57344]
            cmp ECX,1056767
            jbe .L_4046e6

            cmp EDX,55295
            cmova EDX,EBP
.L_4046e6:

            cmp RSI,RAX
            mov DWORD PTR [RBX+272],EAX
            mov DWORD PTR [RBX+RAX*4+244],EDX
            jne .L_4046c0
.L_4046f8:

            mov DWORD PTR [RBX+140],1
.L_404702:

            add RSP,40
.L_404706:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404718:

            cmp ESI,DWORD PTR [RBX+192]
            jb .L_40460a

            mov RDI,RBX
            mov DWORD PTR [RSP+28],R8D
            mov DWORD PTR [RSP+16],ECX
            call .L_402420

            mov EAX,DWORD PTR [RBX+184]
            mov R8D,DWORD PTR [RSP+28]
            mov ECX,DWORD PTR [RSP+16]
            jmp .L_40460a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404750:

            cmp R14,R13
            mov DWORD PTR [RBX+268],0
            jae .L_40461c

            mov RCX,R13
            mov EDX,1
            jmp .L_40477e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404770:

            add RDX,1
            cmp RDX,6
            je .L_40461c
.L_40477e:

            sub RCX,4
            mov EAX,DWORD PTR [RCX]
            lea ESI,DWORD PTR [RAX-57344]
            cmp ESI,1056767
            jbe .L_40479a

            cmp EAX,55295
            cmova EAX,EBP
.L_40479a:

            cmp R14,RCX
            mov DWORD PTR [RBX+268],EDX
            mov DWORD PTR [RBX+RDX*4+224],EAX
            jb .L_404770

            jmp .L_40461c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4047b8:

            mov EDI,DWORD PTR [R14]
            lea RAX,QWORD PTR [R14+4]
            test EDI,EDI
            je .L_4047db

            xor EDX,EDX
            nop
            nop
            nop
.L_4047c8:

            add RAX,4
            mov ESI,DWORD PTR [RAX-4]
            add EDX,1
            test ESI,ESI
            jne .L_4047c8

            jmp .L_4045e3
.L_4047db:

            mov QWORD PTR [RSP+8],R14
            xor EDX,EDX
            jmp .L_4045ef
.L_4047e7:

            lea RCX,QWORD PTR [RIP+.L_405c60]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_405920]
            mov EDX,1471
            call __assert_fail@PLT
.L_404806:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404810:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,16
.L_404822:

            mov EAX,DWORD PTR [RDI+140]
            cmp EAX,1
            je .L_404839

            or EAX,DWORD PTR [RDI+184]
            jne .L_4049bc
.L_404839:

            cmp DWORD PTR [RBP],-1
            je .L_4048fb

            cmp EDX,-1
            je .L_404990
.L_40484c:

            movsxd R12,EDX
            add R12,R13
.L_404852:

            sub EDX,ECX
            cmp R8D,-1
            mov EAX,DWORD PTR [RBP+184]
            cmove R8D,EDX
            movsxd R14,R8D
            mov RSI,R14
            shr RSI,2
            add ESI,EAX
            jne .L_404910
.L_404874:

            mov EBX,ECX
            add RBX,R13
            test ECX,ECX
            je .L_404885

            test EAX,EAX
            je .L_404940
.L_404885:

            add R14,RBX
            cmp R14,RBX
            jbe .L_4048ad

            nop
            nop
            nop
.L_404890:

            movzx ESI,BYTE PTR [RBX]
            mov RDX,RBX
            mov RDI,RBP
            sub RDX,R13
            add RBX,1
            call .L_4028b0

            cmp R14,RBX
            jne .L_404890

            mov RBX,R14
.L_4048ad:

            cmp RBX,R12
            mov DWORD PTR [RBP+272],0
            jae .L_4048f1

            sub R12,RBX
            mov EAX,1
            jmp .L_4048da
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4048d0:

            add RAX,1
            cmp RAX,6
            je .L_4048f1
.L_4048da:

            movzx EDX,BYTE PTR [RBX+RAX*1-1]
            cmp R12,RAX
            mov DWORD PTR [RBP+272],EAX
            mov DWORD PTR [RBP+RAX*4+244],EDX
            jne .L_4048d0
.L_4048f1:

            mov DWORD PTR [RBP+140],1
.L_4048fb:

            add RSP,16
.L_4048ff:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404910:

            cmp ESI,DWORD PTR [RBP+192]
            jb .L_404874

            mov RDI,RBP
            mov DWORD PTR [RSP+12],ECX
            call .L_402420

            mov EAX,DWORD PTR [RBP+184]
            mov ECX,DWORD PTR [RSP+12]
            jmp .L_404874
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404940:

            cmp R13,RBX
            mov DWORD PTR [RBP+268],0
            jae .L_404885

            mov RDX,RBX
            mov EAX,1
            jmp .L_40496e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404960:

            add RAX,1
            cmp RAX,6
            je .L_404885
.L_40496e:

            sub RDX,1
            movzx ECX,BYTE PTR [RDX]
            mov DWORD PTR [RBP+268],EAX
            cmp R13,RDX
            mov DWORD PTR [RBP+RAX*4+224],ECX
            jne .L_404960

            jmp .L_404885
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404990:

            cmp BYTE PTR [R13],0
            lea RAX,QWORD PTR [R13+1]
            je .L_4049b2

            xor EDX,EDX
            nop
            nop
            nop
.L_4049a0:

            add RAX,1
            add EDX,1
            cmp BYTE PTR [RAX-1],0
            jne .L_4049a0

            jmp .L_40484c
.L_4049b2:

            mov R12,R13
            xor EDX,EDX
            jmp .L_404852
.L_4049bc:

            lea RCX,QWORD PTR [RIP+.L_405b80]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_405920]
            mov EDX,1471
            call __assert_fail@PLT
.L_4049db:

            nop
            nop
            nop
            nop
            nop
.L_4049e0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_4049f4:

            mov EAX,DWORD PTR [RDI+140]
            cmp EAX,1
            je .L_404a0b

            or EAX,DWORD PTR [RDI+184]
            jne .L_404bce
.L_404a0b:

            cmp DWORD PTR [RBP],-1
            je .L_404b03

            cmp EDX,-1
            je .L_404ba0
.L_404a1e:

            movsxd RAX,EDX
            lea RAX,QWORD PTR [R14+RAX*4]
            mov QWORD PTR [RSP],RAX
.L_404a29:

            sub EDX,ECX
            mov EAX,DWORD PTR [RBP+184]
            cmp R8D,-1
            cmove R8D,EDX
            mov ESI,R8D
            add ESI,EAX
            jne .L_404b18
.L_404a44:

            mov EDX,ECX
            test ECX,ECX
            lea R15,QWORD PTR [R14+RDX*4]
            je .L_404a56

            test EAX,EAX
            je .L_404b50
.L_404a56:

            movsxd R8,R8D
            lea R12,QWORD PTR [R15+R8*4]
            cmp R12,R15
            jbe .L_404aa6

            mov RAX,R15
            mov RBX,R15
            not RAX
            add R12,RAX
            mov RAX,R12
            and RAX,-4
            lea R13,QWORD PTR [R15+RAX*1+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a80:

            mov ESI,DWORD PTR [RBX]
            mov RDX,RBX
            mov RDI,RBP
            sub RDX,R14
            add RBX,4
            sar RDX,2
            call .L_4028b0

            cmp RBX,R13
            jne .L_404a80

            shr R12,2
            lea R15,QWORD PTR [R15+R12*4+4]
.L_404aa6:

            mov RDI,QWORD PTR [RSP]
            mov DWORD PTR [RBP+272],0
            cmp R15,RDI
            jae .L_404af9

            mov RAX,R15
            not RAX
            lea RCX,QWORD PTR [RAX+RDI*1]
            mov EAX,1
            shr RCX,2
            add RCX,1
            jmp .L_404ae2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404ad8:

            add RAX,1
            cmp RAX,6
            je .L_404af9
.L_404ae2:

            mov EDX,DWORD PTR [R15+RAX*4-4]
            cmp RCX,RAX
            mov DWORD PTR [RBP+272],EAX
            mov DWORD PTR [RBP+RAX*4+244],EDX
            jne .L_404ad8
.L_404af9:

            mov DWORD PTR [RBP+140],1
.L_404b03:

            add RSP,24
.L_404b07:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404b18:

            cmp ESI,DWORD PTR [RBP+192]
            jb .L_404a44

            mov RDI,RBP
            mov DWORD PTR [RSP+12],R8D
            mov DWORD PTR [RSP+8],ECX
            call .L_402420

            mov EAX,DWORD PTR [RBP+184]
            mov R8D,DWORD PTR [RSP+12]
            mov ECX,DWORD PTR [RSP+8]
            jmp .L_404a44
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404b50:

            cmp R14,R15
            mov DWORD PTR [RBP+268],0
            jae .L_404a56

            mov RDX,R15
            mov EAX,1
            jmp .L_404b7e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404b70:

            add RAX,1
            cmp RAX,6
            je .L_404a56
.L_404b7e:

            sub RDX,4
            mov ECX,DWORD PTR [RDX]
            mov DWORD PTR [RBP+268],EAX
            cmp R14,RDX
            mov DWORD PTR [RBP+RAX*4+224],ECX
            jb .L_404b70

            jmp .L_404a56
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404ba0:

            mov EDI,DWORD PTR [R14]
            lea RAX,QWORD PTR [R14+4]
            test EDI,EDI
            je .L_404bc3

            xor EDX,EDX
            nop
            nop
            nop
.L_404bb0:

            add RAX,4
            mov ESI,DWORD PTR [RAX-4]
            add EDX,1
            test ESI,ESI
            jne .L_404bb0

            jmp .L_404a1e
.L_404bc3:

            mov QWORD PTR [RSP],R14
            xor EDX,EDX
            jmp .L_404a29
.L_404bce:

            lea RCX,QWORD PTR [RIP+.L_405aa0]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_405920]
            mov EDX,1471
            call __assert_fail@PLT
.L_404bed:

            nop
            nop
            nop
.L_404bf0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,136
.L_404c01:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RBX
            xor EBX,EBX
            cmp BYTE PTR [RDI+178],0
            mov QWORD PTR [RSP+56],RDI
            je .L_405504

            mov RAX,QWORD PTR [RSP+56]
            cmp DWORD PTR [RAX+140],2
            jne .L_4054e5

            mov RAX,QWORD PTR [RSP+56]
            mov EBX,DWORD PTR [RAX+144]
            mov DWORD PTR [RSP+8],EBX
            and EBX,4294967293
            mov DWORD PTR [RSP+80],EBX
            mov EBX,DWORD PTR [RAX+184]
            test EBX,EBX
            mov DWORD PTR [RSP+84],EBX
            je .L_4050f1

            mov RDI,QWORD PTR [RAX+200]
            cmp EBX,1
            mov RSI,QWORD PTR [RAX+216]
            mov QWORD PTR [RSP+64],RDI
            jbe .L_4054bd

            lea EAX,DWORD PTR [RBX-2]
            mov QWORD PTR [RSP+16],20
            mov R14D,1
            xor R9D,R9D
            add RAX,2
            mov QWORD PTR [RSP+72],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404ca0:

            mov EDX,R9D
            mov RAX,QWORD PTR [RSP+64]
            mov R10,QWORD PTR [RSP+16]
            lea RBX,QWORD PTR [RDX+RDX*4]
            mov ECX,R14D
            mov DWORD PTR [RSP+24],R14D
            shl RBX,2
            mov R11D,DWORD PTR [RAX+R10*1+8]
            cmp DWORD PTR [RAX+RBX*1+8],R11D
            mov RDI,RBX
            je .L_404ee2

            cmp R9D,R14D
            jae .L_40532d

            sub ECX,R9D
            lea RAX,QWORD PTR [RSI+RBX*1]
            xor R8D,R8D
            sub ECX,1
            xor EDI,EDI
            add RDX,RCX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RSI+RDX*4+20]
            mov RDX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404d00:

            add EDI,DWORD PTR [RDX]
            add R8D,DWORD PTR [RDX+4]
            add RDX,20
            cmp RCX,RDX
            jne .L_404d00

            xor R10D,R10D
            xor ECX,ECX
            nop
            nop
            nop
            nop
.L_404d18:

            add DWORD PTR [RAX+8],ECX
            add DWORD PTR [RAX+12],R10D
            add RAX,20
            add ECX,DWORD PTR [RAX-20]
            add R10D,DWORD PTR [RAX-16]
            mov DWORD PTR [RAX-20],0
            mov DWORD PTR [RAX-16],0
            cmp RDX,RAX
            jne .L_404d18
.L_404d3d:

            mov EAX,DWORD PTR [RSP+24]
            lea R13D,DWORD PTR [RAX-1]
            sub R13D,R9D
            cmp DWORD PTR [RSP+80],5
            mov DWORD PTR [RSP+8],R13D
            je .L_4051b0

            mov ECX,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RSI+RBX*1]
            lea EDX,DWORD PTR [R9+1]
            add DWORD PTR [RAX],EDI
            add DWORD PTR [RAX+4],R8D
            cmp EDX,ECX
            jae .L_404d9f

            sub ECX,R9D
            lea RAX,QWORD PTR [RDX+RDX*4]
            sub ECX,2
            add RDX,RCX
            lea RAX,QWORD PTR [RSI+RAX*4+8]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4+28]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404d90:

            sub DWORD PTR [RAX],EDI
            sub DWORD PTR [RAX+4],R8D
            add RAX,20
            cmp RDX,RAX
            jne .L_404d90
.L_404d9f:

            add RBX,20
            mov RAX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RAX+216]
            lea R13,QWORD PTR [RSI+RBX*1]
            add RBX,QWORD PTR [RAX+200]
            cmp DWORD PTR [RSP+8],1
            jbe .L_405337

            lea RAX,QWORD PTR [RBX-20]
            mov QWORD PTR [RSP+88],R14
            mov EBP,20
            mov R15D,1
            mov R12,RBX
            mov R14,R13
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
.L_404de8:

            mov RAX,QWORD PTR [RSP+32]
            mov EDI,DWORD PTR [R12+RBP*1]
            lea RDX,QWORD PTR [RAX+RBP*1]
            mov EAX,R15D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404e00:

            mov ECX,EDI
            sub ECX,DWORD PTR [RDX]
            lea ESI,DWORD PTR [RAX-1]
            test ECX,ECX
            jle .L_405120

            sub RDX,20
            test ESI,ESI
            mov EAX,ESI
            jne .L_404e00

            mov R13,R12
            mov RBX,RBP
            mov R11D,20
            mov QWORD PTR [RSP+40],0
.L_404e2e:

            mov EAX,DWORD PTR [R12+RBP*1+16]
            lea RDI,QWORD PTR [R12+R11*1]
            mov RDX,RBX
            movdqu XMM0,XMMWORD PTR [R12+RBP*1]
            mov RSI,R13
            mov QWORD PTR [RSP+48],R11
            movaps XMMWORD PTR [RSP+96],XMM0
            mov DWORD PTR [RSP+112],EAX
            call memmove@PLT

            test R14,R14
            mov EAX,DWORD PTR [RSP+112]
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [R13+16],EAX
            movups XMMWORD PTR [R13],XMM0
            je .L_404eb1

            mov RDX,RBX
            mov R13,QWORD PTR [RSP+40]
            mov R11,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [R14+RBP*1+16]
            movdqu XMM0,XMMWORD PTR [R14+RBP*1]
            add R13,R14
            lea RDI,QWORD PTR [R14+R11*1]
            mov RSI,R13
            mov DWORD PTR [RSP+112],EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [R13],XMM0
            mov DWORD PTR [R13+16],EAX
.L_404eb1:

            add R15D,1
            add RBP,20
            cmp R15D,DWORD PTR [RSP+8]
            jne .L_404de8
.L_404ec4:

            mov RAX,QWORD PTR [RSP+56]
            mov R14,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            mov R9D,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+216]
            mov RDX,R14
.L_404ee2:

            add R14,1
            add QWORD PTR [RSP+16],20
            cmp QWORD PTR [RSP+72],R14
            jne .L_404ca0

            mov EAX,DWORD PTR [RSP+84]
            lea EBP,DWORD PTR [RAX-1]
            mov EBX,EBP
            sub EBX,R9D
            cmp R9D,EAX
            jae .L_4054d5
.L_404f0c:

            mov R11D,DWORD PTR [RSP+84]
            mov EAX,R9D
            xor R10D,R10D
            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
            nop
.L_404f20:

            mov ECX,EAX
            add EAX,1
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RSI+RCX*4]
            add R8D,DWORD PTR [RCX]
            add R10D,DWORD PTR [RCX+4]
            cmp R11D,EAX
            ja .L_404f20

            mov R13D,DWORD PTR [RSP+84]
            mov ECX,R9D
            xor R12D,R12D
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404f50:

            mov EAX,ECX
            add ECX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            add DWORD PTR [RAX+8],R11D
            add DWORD PTR [RAX+12],R12D
            add R11D,DWORD PTR [RAX]
            add R12D,DWORD PTR [RAX+4]
            cmp R13D,ECX
            mov QWORD PTR [RAX],0
            ja .L_404f50
.L_404f78:

            cmp DWORD PTR [RSP+80],5
            je .L_405349

            mov R11D,DWORD PTR [RSP+84]
            lea ECX,DWORD PTR [R9+1]
            add RDI,RSI
            add DWORD PTR [RDI],R8D
            add DWORD PTR [RDI+4],R10D
            cmp ECX,R11D
            jae .L_404fd0

            mov EDI,ECX
            mov ECX,R11D
            sub ECX,2
            lea RAX,QWORD PTR [RDI+RDI*4]
            sub ECX,R9D
            add RCX,RDI
            lea RAX,QWORD PTR [RSI+RAX*4+8]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RSI+RCX*4+28]
            nop
            nop
            nop
            nop
            nop
.L_404fc0:

            sub DWORD PTR [RAX],R8D
            sub DWORD PTR [RAX+4],R10D
            add RAX,20
            cmp RCX,RAX
            jne .L_404fc0
.L_404fd0:

            lea R13,QWORD PTR [RDX+RDX*4+5]
            mov RAX,QWORD PTR [RSP+56]
            shl R13,2
            mov R15,QWORD PTR [RAX+216]
            add R15,R13
            add R13,QWORD PTR [RAX+200]
            cmp EBX,1
            jbe .L_4050f1

            lea RAX,QWORD PTR [R13-20]
            mov R14,R15
            mov R12D,20
            mov EBP,1
            mov R15,R13
            mov DWORD PTR [RSP+16],EBX
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405020:

            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [R15+R12*1]
            lea RDX,QWORD PTR [RAX+R12*1]
            mov EAX,EBP
            nop
.L_405030:

            mov ECX,EDI
            sub ECX,DWORD PTR [RDX]
            lea ESI,DWORD PTR [RAX-1]
            test ECX,ECX
            jle .L_405168

            sub RDX,20
            test ESI,ESI
            mov EAX,ESI
            jne .L_405030

            mov R13,R15
            mov RBX,R12
            mov ECX,20
            mov QWORD PTR [RSP+24],0
.L_40505d:

            mov EAX,DWORD PTR [R15+R12*1+16]
            lea RDI,QWORD PTR [R15+RCX*1]
            mov RDX,RBX
            movdqu XMM0,XMMWORD PTR [R15+R12*1]
            mov RSI,R13
            mov QWORD PTR [RSP+32],RCX
            movaps XMMWORD PTR [RSP+96],XMM0
            mov DWORD PTR [RSP+112],EAX
            call memmove@PLT

            test R14,R14
            mov EAX,DWORD PTR [RSP+112]
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [R13+16],EAX
            movups XMMWORD PTR [R13],XMM0
            je .L_4050e0

            mov RDX,RBX
            mov R13,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [R14+R12*1+16]
            movdqu XMM0,XMMWORD PTR [R14+R12*1]
            add R13,R14
            lea RDI,QWORD PTR [R14+RCX*1]
            mov RSI,R13
            mov DWORD PTR [RSP+112],EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [R13],XMM0
            mov DWORD PTR [R13+16],EAX
.L_4050e0:

            add EBP,1
            add R12,20
            cmp EBP,DWORD PTR [RSP+16]
            jne .L_405020
.L_4050f1:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4054e0

            add RSP,136
.L_40510c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405120:

            cmp R15D,EAX
            je .L_404eb1

            mov EDX,R15D
            sub EDX,EAX
            lea R10,QWORD PTR [RDX+RDX*4]
            mov EDX,EAX
            add EAX,1
            lea R13,QWORD PTR [RDX+RDX*4]
            lea R11,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [R10*4]
            lea RDI,QWORD PTR [R13*4]
            shl R11,2
            mov QWORD PTR [RSP+40],RDI
            lea R13,QWORD PTR [R12+RDI*1]
            jmp .L_404e2e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405168:

            cmp EBP,EAX
            je .L_4050e0

            mov EDX,EBP
            sub EDX,EAX
            lea R9,QWORD PTR [RDX+RDX*4]
            mov EDX,EAX
            add EAX,1
            lea R13,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [R9*4]
            lea RSI,QWORD PTR [R13*4]
            shl RCX,2
            mov QWORD PTR [RSP+24],RSI
            lea R13,QWORD PTR [R15+RSI*1]
            jmp .L_40505d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4051b0:

            mov RAX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RSI+RAX*1-20]
            mov DWORD PTR [RAX],EDI
            mov DWORD PTR [RAX+4],R8D
            mov RAX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RAX+216]
            lea R13,QWORD PTR [RSI+RBX*1]
            add RBX,QWORD PTR [RAX+200]
            cmp DWORD PTR [RSP+8],1
            jbe .L_405337

            lea RAX,QWORD PTR [RBX-20]
            mov QWORD PTR [RSP+88],R14
            mov EBP,20
            mov R15D,1
            mov R12,RBX
            mov R14,R13
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405208:

            mov RAX,QWORD PTR [RSP+32]
            mov EDI,DWORD PTR [R12+RBP*1]
            lea RDX,QWORD PTR [RAX+RBP*1]
            mov EAX,R15D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405220:

            mov ECX,EDI
            sub ECX,DWORD PTR [RDX]
            lea ESI,DWORD PTR [RAX-1]
            test ECX,ECX
            jle .L_4052f0

            sub RDX,20
            test ESI,ESI
            mov EAX,ESI
            jne .L_405220

            mov R13,R12
            mov RBX,RBP
            mov R11D,20
            mov QWORD PTR [RSP+48],0
.L_40524e:

            mov EAX,DWORD PTR [R12+RBP*1+16]
            lea RDI,QWORD PTR [R12+R11*1]
            mov RDX,RBX
            movdqu XMM0,XMMWORD PTR [R12+RBP*1]
            mov RSI,R13
            mov QWORD PTR [RSP+40],R11
            movaps XMMWORD PTR [RSP+96],XMM0
            mov DWORD PTR [RSP+112],EAX
            call memmove@PLT

            test R14,R14
            mov EAX,DWORD PTR [RSP+112]
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [R13+16],EAX
            movups XMMWORD PTR [R13],XMM0
            je .L_4052d1

            mov RDX,RBX
            mov R13,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [R14+RBP*1+16]
            movdqu XMM0,XMMWORD PTR [R14+RBP*1]
            add R13,R14
            lea RDI,QWORD PTR [R14+R11*1]
            mov RSI,R13
            mov DWORD PTR [RSP+112],EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [R13],XMM0
            mov DWORD PTR [R13+16],EAX
.L_4052d1:

            add R15D,1
            add RBP,20
            cmp R15D,DWORD PTR [RSP+8]
            jne .L_405208

            jmp .L_404ec4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4052f0:

            cmp R15D,EAX
            je .L_4052d1

            mov EDX,R15D
            sub EDX,EAX
            lea R10,QWORD PTR [RDX+RDX*4]
            mov EDX,EAX
            add EAX,1
            lea R13,QWORD PTR [RDX+RDX*4]
            lea R11,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [R10*4]
            lea RDI,QWORD PTR [R13*4]
            shl R11,2
            mov QWORD PTR [RSP+48],RDI
            lea R13,QWORD PTR [R12+RDI*1]
            jmp .L_40524e
.L_40532d:

            xor R8D,R8D
            xor EDI,EDI
            jmp .L_404d3d
.L_405337:

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,R14
            mov R9D,DWORD PTR [RSP+24]
            jmp .L_404ee2
.L_405349:

            lea RAX,QWORD PTR [RBP+RBP*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov DWORD PTR [RAX],R8D
            mov DWORD PTR [RAX+4],R10D
            mov RAX,QWORD PTR [RSP+56]
            mov R14,QWORD PTR [RAX+216]
            add R14,RDI
            add RDI,QWORD PTR [RAX+200]
            cmp EBX,1
            jbe .L_4050f1

            lea RAX,QWORD PTR [RDI-20]
            mov R13,R14
            mov R12D,20
            mov R15D,1
            mov R14,RDI
            mov DWORD PTR [RSP+16],EBX
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4053a0:

            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [R14+R12*1]
            lea RDX,QWORD PTR [RAX+R12*1]
            mov EAX,R15D
.L_4053b0:

            mov ECX,EDI
            sub ECX,DWORD PTR [RDX]
            lea ESI,DWORD PTR [RAX-1]
            test ECX,ECX
            jle .L_405480

            sub RDX,20
            test ESI,ESI
            mov EAX,ESI
            jne .L_4053b0

            mov RBP,R14
            mov RBX,R12
            mov R9D,20
            mov QWORD PTR [RSP+24],0
.L_4053de:

            mov EAX,DWORD PTR [R14+R12*1+16]
            lea RDI,QWORD PTR [R14+R9*1]
            mov RDX,RBX
            movdqu XMM0,XMMWORD PTR [R14+R12*1]
            mov RSI,RBP
            mov QWORD PTR [RSP+32],R9
            movaps XMMWORD PTR [RSP+96],XMM0
            mov DWORD PTR [RSP+112],EAX
            call memmove@PLT

            test R13,R13
            mov EAX,DWORD PTR [RSP+112]
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [RBP+16],EAX
            movups XMMWORD PTR [RBP],XMM0
            je .L_40545f

            mov RDX,RBX
            mov RBP,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [R13+R12*1+16]
            movdqu XMM0,XMMWORD PTR [R13+R12*1]
            add RBP,R13
            lea RDI,QWORD PTR [R13+R9*1]
            mov RSI,RBP
            mov DWORD PTR [RSP+112],EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [RBP],XMM0
            mov DWORD PTR [RBP+16],EAX
.L_40545f:

            add R15D,1
            add R12,20
            cmp R15D,DWORD PTR [RSP+16]
            jne .L_4053a0

            jmp .L_4050f1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405480:

            cmp R15D,EAX
            je .L_40545f

            mov EDX,R15D
            sub EDX,EAX
            lea R10,QWORD PTR [RDX+RDX*4]
            mov EDX,EAX
            add EAX,1
            lea RBP,QWORD PTR [RDX+RDX*4]
            lea R9,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [R10*4]
            lea RDI,QWORD PTR [RBP*4]
            shl R9,2
            mov QWORD PTR [RSP+24],RDI
            lea RBP,QWORD PTR [R14+RDI*1]
            jmp .L_4053de
.L_4054bd:

            xor EBX,EBX
            xor EBP,EBP
            xor EDI,EDI
            xor EDX,EDX
            mov DWORD PTR [RSP+84],1
            xor R9D,R9D
            jmp .L_404f0c
.L_4054d5:

            xor R10D,R10D
            xor R8D,R8D
            jmp .L_404f78
.L_4054e0:

            call __stack_chk_fail@PLT
.L_4054e5:

            lea RCX,QWORD PTR [RIP+.L_405a60]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_4059a8]
            mov EDX,1739
            call __assert_fail@PLT
.L_405504:

            lea RCX,QWORD PTR [RIP+.L_405a60]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_40584f]
            mov EDX,1738
            call __assert_fail@PLT
.L_405523:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405530:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_40553e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+178],0
            mov DWORD PTR [RSP+4],ESI
            mov DWORD PTR [RSP+28],EDX
            mov QWORD PTR [RSP+8],RCX
            jne .L_4056b2

            mov EAX,DWORD PTR [RSP+4]
            lea R12D,DWORD PTR [RAX+1]
            cmp R12D,DWORD PTR [RSP+28]
            jae .L_405693

            mov EAX,R12D
            mov R15,RDI
            lea RBP,QWORD PTR [RAX+RAX*4]
            shl RBP,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405590:

            cmp DWORD PTR [RSP+4],R12D
            lea EAX,DWORD PTR [R12+1]
            mov DWORD PTR [RSP+24],EAX
            jae .L_40567f

            lea EAX,DWORD PTR [R12-1]
            mov R13D,R12D
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [RDX*4]
            jmp .L_4055cd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4055c0:

            sub R14,20
            cmp EBX,DWORD PTR [RSP+4]
            mov R13D,EBX
            je .L_4055ea
.L_4055cd:

            mov RDI,QWORD PTR [R15+200]
            mov RAX,QWORD PTR [RSP+8]
            lea EBX,DWORD PTR [R13-1]
            lea RSI,QWORD PTR [RDI+RBP*1]
            add RDI,R14
            call RAX

            test EAX,EAX
            jg .L_4055c0
.L_4055ea:

            cmp R12D,R13D
            je .L_40567f

            mov EDX,DWORD PTR [RSP+24]
            mov EAX,EDX
            sub EAX,R13D
            cmp EAX,1
            jbe .L_405613

            cmp DWORD PTR [R15+124],2
            je .L_405613

            mov ESI,R13D
            mov RDI,R15
            call .L_402210
.L_405613:

            mov RAX,QWORD PTR [R15+200]
            lea ECX,DWORD PTR [R13+1]
            sub R12D,R13D
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov EDX,DWORD PTR [RAX+RBP*1+16]
            movdqu XMM0,XMMWORD PTR [RAX+RBP*1]
            lea RDI,QWORD PTR [RAX+RCX*4]
            mov DWORD PTR [RSP+48],EDX
            mov EDX,R13D
            lea R9,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+R12*4]
            movaps XMMWORD PTR [RSP+32],XMM0
            lea RBX,QWORD PTR [R9*4]
            shl RDX,2
            mov QWORD PTR [RSP+16],R9
            lea RSI,QWORD PTR [RAX+RBX*1]
            call memmove@PLT

            mov RAX,QWORD PTR [R15+200]
            mov R9,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+48]
            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RAX+R9*4],XMM0
            mov DWORD PTR [RAX+RBX*1+16],EDX
.L_40567f:

            add RBP,20
            mov R12D,DWORD PTR [RSP+24]
            cmp DWORD PTR [RSP+28],R12D
            jne .L_405590
.L_405693:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4056d1

            add RSP,72
.L_4056a7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4056b2:

            lea RCX,QWORD PTR [RIP+.L_4059e0]
            lea RSI,QWORD PTR [RIP+.L_4057d7]
            lea RDI,QWORD PTR [RIP+.L_405866]
            mov EDX,1760
            call __assert_fail@PLT
.L_4056d1:

            call __stack_chk_fail@PLT
.L_4056d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4056e0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov R12,RCX
            sub RSP,8
            mov RAX,QWORD PTR [RDI+296]
            test RAX,RAX
            je .L_40570b

            mov RDI,QWORD PTR [RDI+288]
            call RAX
.L_40570b:

            test RBP,RBP
            je .L_405730

            mov QWORD PTR [RBX+280],RBP
            mov QWORD PTR [RBX+288],R13
            mov QWORD PTR [RBX+296],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_405730:

            mov QWORD PTR [RBX+280],0
            mov QWORD PTR [RBX+288],0
            mov QWORD PTR [RBX+296],0
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40575c:

            nop
            nop
            nop
            nop
.L_405760:

            push R12
            push RBP
            mov R8,RDX
            push RBX
            mov R9,RCX
            mov RBX,RDI
            mov R12,RSI
            mov ECX,100
            mov EDX,1
            sub RSP,112
.L_40577e:

            mov ESI,100
            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call __vsnprintf_chk@PLT

            mov RDX,RBP
            mov RCX,QWORD PTR [RBX+288]
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            test EAX,EAX
            setne AL
            mov RDX,QWORD PTR [RSP+104]
            xor RDX,QWORD PTR FS:[40]
            jne .L_4057d2

            add RSP,112
.L_4057cd:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_4057d2:

            call __stack_chk_fail@PLT
.L_4057d7:
          .string "hb-buffer.cc"
.L_4057e4:
          .string "have_output"
.L_4057f0:
          .string "i <= len"
.L_4057f9:
          .string "i <= out_len + (len - idx)"
.L_405814:
          .string "idx >= count"
.L_405821:
          .string "hb-object-private.hh"
.L_405836:
          .string "hb_object_is_valid (obj)"
.L_40584f:
          .string "buffer->have_positions"
.L_405866:
          .string "!have_positions"
          .byte 0x66
          .byte 0x90
.L_405878:
          .string "(uintptr_t) pos % sizeof (scratch_buffer_t) == 0"
          .zero 7
.L_4058b0:
          .string "content_type == HB_BUFFER_CONTENT_TYPE_UNICODE || (!len && content_type == HB_BUFFER_CONTENT_TYPE_INVALID)"
          .zero 5
.L_405920:
          .string "buffer->content_type == HB_BUFFER_CONTENT_TYPE_UNICODE || (!buffer->len && buffer->content_type == HB_BUFFER_CONTENT_TYPE_INVALID)"
          .zero 5
.L_4059a8:
          .string "buffer->content_type == HB_BUFFER_CONTENT_TYPE_GLYPHS"
          .byte 0x66
          .byte 0x90
.L_4059e0:
          .string "void hb_buffer_t::sort(unsigned int, unsigned int, int (*)(const hb_glyph_info_t*, const hb_glyph_info_t*))"
          .zero 20
.L_405a60:
          .string "void hb_buffer_normalize_glyphs(hb_buffer_t*)"
          .zero 18
.L_405aa0:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_utf32_t<false>; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = unsigned int]"
          .zero 23
.L_405b80:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_latin1_t; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = unsigned char]"
          .zero 28
.L_405c60:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_utf32_t<>; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = unsigned int]"
          .zero 28
.L_405d40:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_utf16_t; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = short unsigned int]"
          .zero 24
.L_405e20:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_utf8_t; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = unsigned char]"
          .zero 30
.L_405f00:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_buffer_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 3
.L_405f80:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_buffer_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 9
.L_406060:
          .string "bool hb_object_destroy(Type*) [with Type = hb_buffer_t]"
          .zero 8
.L_4060a0:
          .string "Type* hb_object_reference(Type*) [with Type = hb_buffer_t]"
          .zero 5
.L_4060e0:
          .string "void hb_buffer_t::guess_segment_properties()"
          .zero 19
.L_406120:
          .string "bool hb_buffer_t::move_to(unsigned int)"
          .zero 24
.L_406160:
          .string "void hb_buffer_t::swap_buffers()"
          .zero 31
.L_4061a0:
          .string "hb_buffer_t::scratch_buffer_t* hb_buffer_t::get_scratch_buffer(unsigned int*)"
          .zero 18
.L_406200:
          .string "bool hb_buffer_t::shift_forward(unsigned int)"
          .zero 18
.L_406240:
          .string "bool hb_buffer_t::make_room_for(unsigned int, unsigned int)"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406280:

            mov RAX,QWORD PTR [RIP+.L_6582b8]
            test RAX,RAX
            je .L_4062c0

            push RBX
            nop
            nop
            nop
.L_406290:

            mov RDI,QWORD PTR [RAX+8]
            mov RBX,QWORD PTR [RAX]
            call free@PLT

            mov RDI,QWORD PTR [RIP+.L_6582b8]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RIP+.L_6582b8],RBX
            mov RAX,RBX
            jne .L_406290

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4062c0:

            ret 
.L_4062c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4062d0:

            push R13
            push R12
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_406c80]
            mov RBP,RDI
            sub RSP,8
.L_4062e4:

            mfence 
            mov R12,QWORD PTR [RIP+.L_6582b8]
            test R12,R12
            je .L_406352

            movzx EAX,BYTE PTR [RBP]
            mov R13,R12
            movsx R8D,BYTE PTR [RBX+RAX*1]
            mov R9D,R8D
            nop
            nop
            nop
            nop
            nop
            nop
.L_406308:

            mov RDX,QWORD PTR [R13+8]
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_4063b8

            cmp EAX,R8D
            jne .L_406349

            mov RCX,RBP
            jmp .L_40632c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406328:

            cmp EAX,EDI
            jne .L_406349
.L_40632c:

            add RCX,1
            movzx ESI,BYTE PTR [RCX]
            add RDX,1
            movzx EAX,BYTE PTR [RDX]
            movsx EDI,BYTE PTR [RBX+RSI*1]
            test AL,AL
            mov ESI,EDI
            jne .L_406328
.L_406344:

            test SIL,SIL
            je .L_4063a5
.L_406349:

            mov R13,QWORD PTR [R13]
            test R13,R13
            jne .L_406308
.L_406352:

            mov ESI,16
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_4063a5

            mov QWORD PTR [RAX],R12
            mov RDI,RBP
            call strdup@PLT

            mov QWORD PTR [R13+8],RAX
            movzx EDX,BYTE PTR [RAX]
            test DL,DL
            je .L_406392

            nop
.L_406380:

            movzx EDX,BYTE PTR [RBX+RDX*1]
            add RAX,1
            mov BYTE PTR [RAX-1],DL
            movzx EDX,BYTE PTR [RAX]
            test DL,DL
            jne .L_406380
.L_406392:

            mov RAX,R12
            lock cmpxchg QWORD PTR [RIP+.L_6582b8],R13
            jne .L_4063cb

            test R12,R12
            je .L_4063bd
.L_4063a5:

            add RSP,8
.L_4063a9:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4063b8:

            mov ESI,R9D
            jmp .L_406344
.L_4063bd:

            lea RDI,QWORD PTR [RIP+.L_406280]
            call .L_44dae0

            jmp .L_4063a5
.L_4063cb:

            mov RDI,QWORD PTR [R13+8]
            call free@PLT

            mov RDI,R13
            call free@PLT

            jmp .L_4062e4
.L_4063e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4063f0:

            lea RDI,QWORD PTR [RIP+.L_406c39]
            sub RSP,8
            call getenv@PLT

            xor EDX,EDX
            test RAX,RAX
            je .L_40641c

            lea RSI,QWORD PTR [RIP+.L_406c44]
            mov RDI,RAX
            call strstr@PLT

            test RAX,RAX
            setne DL
.L_40641c:

            and EDX,1
            add EDX,EDX
            or EDX,1
            mov DWORD PTR [RIP+.L_6582a8],EDX
            add RSP,8
            ret 
.L_40642f:

            nop
.L_406430:

            sub RSP,24
.L_406434:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_406490

            test ESI,ESI
            je .L_406490

            movzx ECX,BYTE PTR [RDI]
            test CL,CL
            je .L_406492

            mov EAX,4
            cmp ESI,4
            lea R8,QWORD PTR [RSP+3]
            cmova ESI,EAX
            mov EAX,1
            jmp .L_40647d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406470:

            add RAX,1
            movzx ECX,BYTE PTR [RDI+RAX*1-1]
            test CL,CL
            je .L_4064b0
.L_40647d:

            cmp EAX,ESI
            mov BYTE PTR [R8+RAX*1],CL
            mov EDX,EAX
            jb .L_406470

            jmp .L_4064ba
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406490:

            xor EAX,EAX
.L_406492:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4064c7

            add RSP,24
.L_4064a6:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4064b0:

            mov EAX,EDX
            add EDX,1
            mov BYTE PTR [RSP+RAX*1+4],32
.L_4064ba:

            cmp EDX,4
            jne .L_4064b0

            mov EAX,DWORD PTR [RSP+4]
            bswap EAX
            jmp .L_406492
.L_4064c7:

            call __stack_chk_fail@PLT
.L_4064cc:

            nop
            nop
            nop
            nop
.L_4064d0:

            mov EAX,EDI
            mov BYTE PTR [RSI+3],DIL
            shr EAX,24
            mov BYTE PTR [RSI],AL
            mov EAX,EDI
            shr EAX,16
            mov BYTE PTR [RSI+1],AL
            mov EAX,EDI
            mov BYTE PTR [RSI+2],AH
            ret 
.L_4064e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4064f0:

            test RDI,RDI
            je .L_406530

            test ESI,ESI
            je .L_406530

            movzx ECX,BYTE PTR [RDI]
            xor EAX,EAX
            test CL,CL
            je .L_406532

            lea ESI,DWORD PTR [RCX-65]
            lea EDX,DWORD PTR [RCX+32]
            cmp SIL,26
            cmovae EDX,ECX
            cmp DL,108
            je .L_406538

            cmp DL,114
            je .L_406540

            cmp DL,116
            je .L_406550

            cmp DL,98
            mov EDX,7
            cmove EAX,EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406530:

            xor EAX,EAX
.L_406532:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406538:

            mov EAX,4
            ret 
          .byte 0x66
          .byte 0x90
.L_406540:

            mov EAX,5
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406550:

            mov EAX,6
            ret 
.L_406556:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406560:

            sub EDI,4
            lea RAX,QWORD PTR [RIP+.L_406c5d]
            cmp EDI,3
            ja .L_40657d

            lea RAX,QWORD PTR [RIP+.L_406d80]
            movsxd RDI,EDI
            lea RAX,QWORD PTR [RAX+RDI*4]
.L_40657d:

            ret 
.L_40657f:

            nop
.L_406580:

            push RBX
            sub RSP,80
.L_406585:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test ESI,ESI
            je .L_406600

            test RDI,RDI
            je .L_406600

            cmp BYTE PTR [RDI],0
            je .L_406600

            test ESI,ESI
            js .L_406608

            cmp ESI,62
            jle .L_4065f8

            mov EDX,63
            mov EBX,63
.L_4065b6:

            mov R8,RSP
            mov RSI,RDI
            mov ECX,64
            mov RDI,R8
            call __memcpy_chk@PLT

            mov RDI,RAX
            mov BYTE PTR [RSP+RBX*1],0
            call .L_4062d0
.L_4065d5:

            test RAX,RAX
            je .L_406600

            mov RAX,QWORD PTR [RAX+8]
.L_4065de:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40660f

            add RSP,80
.L_4065f2:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4065f8:

            movsxd RBX,ESI
            mov RDX,RBX
            jmp .L_4065b6
.L_406600:

            xor EAX,EAX
            jmp .L_4065de
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406608:

            call .L_4062d0

            jmp .L_4065d5
.L_40660f:

            call __stack_chk_fail@PLT
.L_406614:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406620:

            mov RAX,RDI
            ret 
.L_406624:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406630:

            push RBX
            mfence 
            mov RBX,QWORD PTR [RIP+.L_6582b0]
            test RBX,RBX
            je .L_406648

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406648:

            xor ESI,ESI
            xor EDI,EDI
            call setlocale@PLT

            mov ESI,4294967295
            mov RDI,RAX
            call .L_406580

            mov RDX,RAX
            mov RAX,RBX
            lock cmpxchg QWORD PTR [RIP+.L_6582b0],RDX
            mov RBX,QWORD PTR [RIP+.L_6582b0]
            mov RAX,RBX
            pop RBX
            ret 
.L_406679:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406680:

            xor EAX,EAX
            test EDI,EDI
            je .L_4066cc

            mov EAX,EDI
            and EAX,3755991007
            or EAX,2105376
            cmp EAX,1365336419
            je .L_406720

            jbe .L_4066d0

            cmp EAX,1400468069
            je .L_4066b6

            jbe .L_4066c0

            cmp EAX,1400468074
            je .L_4066b6

            cmp EAX,1400468078
            jne .L_4066f0
.L_4066b6:

            mov EAX,1400468067
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4066c0:

            cmp EAX,1365336425
            jne .L_4066f0

            mov EAX,1516858984
.L_4066cc:

            ret 
          .byte 0x66
          .byte 0x90
.L_4066d0:

            cmp EAX,1132032627
            je .L_406710

            jb .L_4066f0

            lea EDX,DWORD PTR [RAX-1281455206]
            cmp EDX,1
            ja .L_4066f0

            mov EAX,1281455214
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4066f0:

            and EDI,3233857728
            mov EDX,1517976186
            or EDI,2105376
            cmp EDI,1080057952
            cmovne EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406710:

            mov EAX,1132032620
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406720:

            mov EAX,1131376756
            ret 
.L_406726:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406730:

            sub RSP,8
            call .L_406430

            add RSP,8
            mov EDI,EAX
            jmp .L_406680
.L_406744:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406750:

            mov EAX,EDI
            ret 
.L_406753:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406760:

            cmp EDI,1298494063
            je .L_4067a2

            jbe .L_4067b0

            cmp EDI,1349020784
            je .L_4067a2

            ja .L_406810

            cmp EDI,1315663727
            je .L_4067a2

            jbe .L_4068a0

            cmp EDI,1348562029
            je .L_4067a2

            cmp EDI,1349020777
            je .L_4067a2

            cmp EDI,1332898664
            jne .L_40683a
.L_4067a2:

            mov EAX,5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4067b0:

            cmp EDI,1215655527
            je .L_4067a2

            ja .L_4067e0

            cmp EDI,1098018153
            je .L_4067a2

            jbe .L_406840

            cmp EDI,1131442804
            je .L_4067a2

            cmp EDI,1214603890
            je .L_4067a2

            cmp EDI,1098281844
            jne .L_40683a

            jmp .L_4067a2
          .byte 0x66
          .byte 0x90
.L_4067e0:

            cmp EDI,1298230884
            je .L_4067a2

            jbe .L_406880

            cmp EDI,1298493028
            je .L_4067a2

            cmp EDI,1298494051
            je .L_4067a2

            cmp EDI,1298230889
            jne .L_40683a

            jmp .L_4067a2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406810:

            cmp EDI,1398893938
            je .L_4067a2

            jbe .L_406860

            cmp EDI,1400468067
            je .L_4067a2

            cmp EDI,1416126817
            je .L_4067a2

            cmp EDI,1398895202
            je .L_4067a2
.L_40683a:

            mov EAX,4
            ret 
.L_406840:

            cmp EDI,1097100397
            je .L_4067a2

            cmp EDI,1098015074
            jne .L_40683a

            jmp .L_4067a2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406860:

            cmp EDI,1349021304
            je .L_4067a2

            cmp EDI,1349678185
            jne .L_40683a

            jmp .L_4067a2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406880:

            cmp EDI,1265131890
            je .L_4067a2

            cmp EDI,1283023977
            jne .L_40683a

            jmp .L_4067a2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4068a0:

            cmp EDI,1315009122
            je .L_4067a2

            cmp EDI,1315070324
            jne .L_40683a

            jmp .L_4067a2
.L_4068bd:

            nop
            nop
            nop
.L_4068c0:

            push R15
            push R14
            push R13
            push R12
            xor R12D,R12D
            push RBP
            push RBX
            sub RSP,24
.L_4068d1:

            test RSI,RSI
            je .L_406998

            test R8D,R8D
            mov R15D,R8D
            mov R14,RCX
            mov R13,RDX
            mov RBX,RSI
            mov RBP,RDI
            je .L_406904

            test RDX,RDX
            sete R12B
            test RCX,RCX
            sete AL
            and R12B,AL
            jne .L_4069f8
.L_406904:

            call pthread_mutex_lock@PLT

            mov R12D,DWORD PTR [RBP+40]
            mov RCX,QWORD PTR [RBP+48]
            test R12D,R12D
            je .L_406a40

            cmp QWORD PTR [RCX],RBX
            je .L_4069b0

            lea EDX,DWORD PTR [R12-1]
            lea RAX,QWORD PTR [RCX+24]
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDI,QWORD PTR [RAX+RDX*8]
            jmp .L_40694d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406940:

            mov RSI,RAX
            add RAX,24
            cmp RBX,QWORD PTR [RAX-24]
            je .L_4069b8
.L_40694d:

            cmp RAX,RDI
            jne .L_406940
.L_406952:

            mov EAX,DWORD PTR [RBP+44]
            cmp R12D,EAX
            jb .L_406a58

            mov EDX,EAX
            shr EDX,1
            lea R15D,DWORD PTR [RAX+RDX*1+8]
            lea RDX,QWORD PTR [RBP+56]
            cmp RCX,RDX
            je .L_406b38

            cmp R15D,178956969
            ja .L_406986

            cmp EAX,R15D
            jbe .L_406afb
.L_406986:

            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406990:

            mov RDI,RBP
            call pthread_mutex_unlock@PLT
.L_406998:

            add RSP,24
.L_40699c:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4069b0:

            mov RSI,RCX
            nop
            nop
            nop
            nop
            nop
.L_4069b8:

            test R15D,R15D
            je .L_406ae0

            mov R15,QWORD PTR [RSI+16]
            mov R12,QWORD PTR [RSI+8]
            mov RDI,RBP
            mov QWORD PTR [RSI],RBX
            mov QWORD PTR [RSI+8],R13
            mov QWORD PTR [RSI+16],R14
            call pthread_mutex_unlock@PLT

            test R15,R15
            je .L_406af0

            mov RDI,R12
            mov R12D,1
            call R15

            jmp .L_406998
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4069f8:

            call pthread_mutex_lock@PLT

            mov ESI,DWORD PTR [RBP+40]
            test ESI,ESI
            je .L_406990

            mov RDI,QWORD PTR [RBP+48]
            cmp RBX,QWORD PTR [RDI]
            je .L_406a8e

            lea EDX,DWORD PTR [RSI-1]
            lea RAX,QWORD PTR [RDI+24]
            mov RSI,RDX
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RCX,QWORD PTR [RAX+RDX*8]
            jmp .L_406a35
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406a28:

            mov RDX,RAX
            add RAX,24
            cmp RBX,QWORD PTR [RAX-24]
            je .L_406a98
.L_406a35:

            cmp RAX,RCX
            jne .L_406a28

            jmp .L_406990
          .byte 0x90
.L_406a40:

            test RCX,RCX
            jne .L_406952

            lea RAX,QWORD PTR [RBP+56]
            mov DWORD PTR [RBP+44],2
            mov QWORD PTR [RBP+48],RAX
.L_406a58:

            lea EDX,DWORD PTR [R12+1]
            mov RAX,QWORD PTR [RBP+48]
            mov DWORD PTR [RBP+40],EDX
            lea RDX,QWORD PTR [R12+R12*2]
            lea RAX,QWORD PTR [RAX+RDX*8]
.L_406a6c:

            xor R12D,R12D
            test RAX,RAX
            je .L_406990

            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],R13
            mov R12D,1
            mov QWORD PTR [RAX+16],R14
            jmp .L_406990
.L_406a8e:

            mov RDX,RDI
            sub ESI,1
            nop
            nop
            nop
            nop
.L_406a98:

            mov EAX,ESI
            mov RBX,QWORD PTR [RDX+8]
            mov R13,QWORD PTR [RDX+16]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RDI+RAX*8]
            mov RDI,RBP
            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RDX],XMM0
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RDX+16],RAX
            mov DWORD PTR [RBP+40],ESI
            call pthread_mutex_unlock@PLT

            test R13,R13
            je .L_406998

            mov RDI,RBX
            call R13

            jmp .L_406998
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406ae0:

            mov RDI,RBP
            xor R12D,R12D
            call pthread_mutex_unlock@PLT

            jmp .L_406998
.L_406af0:

            mov R12D,1
            jmp .L_406998
.L_406afb:

            mov EAX,R15D
            mov RDI,RCX
            lea RSI,QWORD PTR [RAX+RAX*2]
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov R8,RAX
            je .L_406986
.L_406b1a:

            mov EAX,DWORD PTR [RBP+40]
            mov QWORD PTR [RBP+48],R8
            mov DWORD PTR [RBP+44],R15D
            lea EDX,DWORD PTR [RAX+1]
            lea RAX,QWORD PTR [RAX+RAX*2]
            mov DWORD PTR [RBP+40],EDX
            lea RAX,QWORD PTR [R8+RAX*8]
            jmp .L_406a6c
.L_406b38:

            mov EDI,R15D
            mov ESI,24
            mov QWORD PTR [RSP+8],RCX
            call calloc@PLT

            test RAX,RAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_406986

            mov EDX,R12D
            mov RSI,RCX
            mov RDI,RAX
            imul RDX,RDX,24
            call memcpy@PLT

            mov R8,RAX
            jmp .L_406b1a
.L_406b6f:

            nop
.L_406b70:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
.L_406b7c:

            call pthread_mutex_lock@PLT

            mov ECX,DWORD PTR [RBP+40]
            test ECX,ECX
            je .L_406bba

            mov RDX,QWORD PTR [RBP+48]
            cmp QWORD PTR [RDX],RBX
            je .L_406bd0

            lea RAX,QWORD PTR [RDX+24]
            lea EDX,DWORD PTR [RCX-1]
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RCX,QWORD PTR [RAX+RDX*8]
            jmp .L_406bb5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406ba8:

            mov RDX,RAX
            add RAX,24
            cmp RBX,QWORD PTR [RAX-24]
            je .L_406bd0
.L_406bb5:

            cmp RCX,RAX
            jne .L_406ba8
.L_406bba:

            mov RDI,RBP
            xor EBX,EBX
            call pthread_mutex_unlock@PLT

            add RSP,8
.L_406bc8:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_406bd0:

            mov RBX,QWORD PTR [RDX+8]
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_406be6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406bf0:

            mov DWORD PTR [RDI],1
            mov DWORD PTR [RSI],3
            mov DWORD PTR [RDX],2
            ret 
.L_406c03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406c10:

            lea RAX,QWORD PTR [RIP+.L_406c65]
            ret 
.L_406c18:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406c20:

            imul ESI,ESI,100
            xor EAX,EAX
            imul EDI,EDI,10000
            add EDX,ESI
            add EDX,EDI
            cmp EDX,10302
            setbe AL
            ret 
.L_406c39:
          .string "HB_OPTIONS"
.L_406c44:
          .string "uniscribe-bug-compatible"
.L_406c5d:
          .string "invalid"
.L_406c65:
          .string "1.3.2"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_406c80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x67
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x67
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406d80:
          .string "ltr"
# WARNING: found overlapping blocks at address 6b53

            jb 27594
            insb BYTE PTR [RDI],DX
            add BYTE PTR [RSP+RSI*2+98],DH
            add BYTE PTR [RDX+116],AH
            je .L_406d90
.L_406d90:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call .L_401950

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_406da5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406db0:

            test ESI,ESI
            push R12
            push RBP
            push RBX
.L_406db6:

            mov R12,QWORD PTR [RDX]
            je .L_406ea8

            mov RDI,R12
            mov RBX,RDX
            mov EBP,ESI
            call .L_401d20

            xor ESI,ESI
            mov RDI,R12
            call .L_401d50

            lea R8,QWORD PTR [RIP+.L_6582c0]
            test RAX,RAX
            cmove RAX,R8
            movzx ESI,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            movzx EDX,BYTE PTR [RAX+3]
            mov EDI,ESI
            shl ECX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RCX*1]
            movzx ECX,BYTE PTR [RAX+2]
            shl ECX,8
            add ECX,ESI
            add ECX,EDX
            cmp ECX,1953658213
            je .L_406fdc

            jle .L_406fc8

            cmp ECX,1953784678
            jne .L_406eb8

            movzx ECX,BYTE PTR [RAX+4]
            movzx EDX,BYTE PTR [RAX+5]
            shl ECX,8
            lea ECX,DWORD PTR [RCX+RDX*1-1]
            mov RDX,R8
            cmp CX,1
            ja .L_406ecb

            movzx ECX,BYTE PTR [RAX+8]
            movzx EDX,BYTE PTR [RAX+9]
            mov EDI,DWORD PTR [RBX+8]
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RAX+10]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RAX+11]
            add EDX,ECX
            cmp EDI,EDX
            jb .L_406fb8
.L_406e6c:

            movzx EDX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EDX,24
            shl ECX,16
            lea EDX,DWORD PTR [RDX+RCX*1]
            movzx ECX,BYTE PTR [R8+2]
            shl ECX,8
            add ECX,EDX
            movzx EDX,BYTE PTR [R8+3]
            add EDX,ECX
            add RAX,RDX
            test EDX,EDX
            lea RDX,QWORD PTR [RIP+.L_6582c0]
            cmovne RDX,RAX
            jmp .L_406ecb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406ea8:

            pop RBX
.L_406ea9:

            mov RDI,R12
            pop RBP
            pop R12
            jmp .L_401c30
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406eb8:

            cmp ECX,1954115633
            je .L_406fdc
.L_406ec4:

            lea RDX,QWORD PTR [RIP+.L_6582c0]
.L_406ecb:

            movzx ECX,BYTE PTR [RDX+4]
            movzx EDI,BYTE PTR [RDX+5]
            mov R8D,EBP
            mov EAX,EBP
            mov ESI,EBP
            shr R8D,24
            shr EAX,16
            shr ESI,8
            shl ECX,8
            add ECX,EDI
            test CX,CX
            movzx R9D,CX
            je .L_406fe8

            shl EAX,16
            shl R8D,24
            shl ESI,8
            and EAX,16711680
            movzx EBP,BPL
            add EAX,R8D
            movzx R8D,SI
            add R8D,EAX
            lea RAX,QWORD PTR [RDX+12]
            xor EDX,EDX
            add R8D,EBP
            jmp .L_406f30
          .byte 0x66
          .byte 0x90
.L_406f20:

            add EDX,1
            add RAX,16
            cmp R9D,EDX
            je .L_406fe8
.L_406f30:

            movzx ESI,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            mov EDI,ESI
            shl ECX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RCX*1]
            movzx ECX,BYTE PTR [RAX+2]
            shl ECX,8
            add ECX,ESI
            movzx ESI,BYTE PTR [RAX+3]
            add ECX,ESI
            cmp R8D,ECX
            jne .L_406f20

            cmp EDX,R9D
            lea RDX,QWORD PTR [RIP+.L_6582c0]
            cmovae RAX,RDX
.L_406f64:

            movzx ECX,BYTE PTR [RAX+12]
            movzx EDX,BYTE PTR [RAX+13]
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RAX+14]
            movzx ESI,BYTE PTR [RAX+9]
            shl EDX,8
            shl ESI,16
            add EDX,ECX
            movzx ECX,BYTE PTR [RAX+15]
            add EDX,ECX
            movzx ECX,BYTE PTR [RAX+8]
            mov EDI,ECX
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RSI*1]
            movzx ESI,BYTE PTR [RAX+10]
            movzx EAX,BYTE PTR [RAX+11]
            mov RDI,QWORD PTR [RBX]
            pop RBX
.L_406fa5:

            pop RBP
            pop R12
            shl ESI,8
            add ESI,ECX
            add ESI,EAX
            jmp .L_401b90
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406fb8:

            lea R8,QWORD PTR [RAX+RDI*4+12]
            jmp .L_406e6c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406fc8:

            cmp ECX,65536
            je .L_406fdc

            cmp ECX,1330926671
            jne .L_406ec4
.L_406fdc:

            mov RDX,RAX
            jmp .L_406ecb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406fe8:

            lea RAX,QWORD PTR [RIP+.L_6582c0]
            jmp .L_406f64
.L_406ff4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407000:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,8
.L_407010:

            test RDI,RDI
            je .L_407088

            mov R12,RDI
            mov ESI,184
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_407088

            lea RDI,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX],1
            xor ESI,ESI
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            movabs RAX,-4294967296
            mov QWORD PTR [RBX+148],RAX
            mov QWORD PTR [RBX+120],R12
            mov RAX,RBX
            mov QWORD PTR [RBX+128],R13
            mov QWORD PTR [RBX+136],RBP
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            add RSP,8
.L_40707e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407088:

            test RBP,RBP
            je .L_4070b0

            lea RBX,QWORD PTR [RIP+.L_6581e0]
            mov RDI,R13
            call RBP
.L_407099:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4070b0:

            lea RBX,QWORD PTR [RIP+.L_6581e0]
            jmp .L_407099
.L_4070b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4070c0:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_4070d1:

            test RDI,RDI
            je .L_4073e8
.L_4070da:

            call .L_401c30

            mov RDI,RAX
            mov R12,RAX
            xor R13D,R13D
            call .L_401c30

            mov RBP,RAX
.L_4070f0:

            xor ESI,ESI
            mov RDI,RBP
            call .L_401d50

            mov RDI,RBP
            mov RBX,RAX
            call .L_401d40

            mov EAX,EAX
            add RAX,RBX
            jb .L_407719

            test RBX,RBX
            je .L_407190

            cmp RAX,RBX
            jae .L_4071a0
.L_40711e:

            mov RDI,RBP
            call .L_401950

            mov RDI,R12
            call .L_401950

            call .L_401c20

            mov R12,RAX
.L_407136:

            mov ESI,16
            mov EDI,1
            call calloc@PLT

            mov RSI,RAX
            lea RAX,QWORD PTR [RIP+.L_6581e0]
            test RSI,RSI
            je .L_40717c

            lea RDX,QWORD PTR [RIP+.L_406d90]
            lea RDI,QWORD PTR [RIP+.L_406db0]
            mov QWORD PTR [RSI],R12
            mov DWORD PTR [RSI+8],R14D
            call .L_407000

            mov EDX,DWORD PTR [RAX+112]
            test EDX,EDX
            jne .L_40717c

            mov DWORD PTR [RAX+144],R14D
.L_40717c:

            add RSP,40
.L_407180:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40718b:

            test R8D,R8D
            jne .L_40711e
.L_407190:

            mov RDI,RBP
            call .L_401950

            jmp .L_407136
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4071a0:

            mov RDX,RAX
            sub RDX,RBX
            cmp EDX,3
            mov R10D,EDX
            jbe .L_40711e

            movzx ECX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EDX,ECX
            cmp EDX,1953658213
            je .L_40737c

            jle .L_407368

            cmp EDX,1953784678
            jne .L_4073d0

            lea R9,QWORD PTR [RBX+4]
            cmp RBX,R9
            ja .L_40711e

            cmp RAX,R9
            jb .L_40711e

            mov RDX,RAX
            sub RDX,R9
            cmp EDX,3
            jbe .L_40711e

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            lea EDX,DWORD PTR [RDX+RCX*1-1]
            cmp DX,1
            ja .L_407190

            lea R15,QWORD PTR [RBX+8]
            cmp RBX,R15
            ja .L_40711e

            cmp RAX,R15
            jb .L_40711e

            mov RDX,RAX
            sub RDX,R15
            cmp EDX,3
            jbe .L_40711e

            movzx ECX,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            shl ECX,24
            shl EDX,16
            lea ECX,DWORD PTR [RCX+RDX*1]
            movzx EDX,BYTE PTR [RBX+10]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+11]
            add EDX,ECX
            cmp EDX,1073741822
            ja .L_40711e

            lea RDI,QWORD PTR [RBX+12]
            cmp RBX,RDI
            mov QWORD PTR [RSP+16],RDI
            ja .L_40711e

            cmp RAX,RDI
            jb .L_40711e

            mov RCX,RAX
            lea ESI,DWORD PTR [RDX*4]
            sub RCX,RDI
            cmp ESI,ECX
            ja .L_40711e

            test EDX,EDX
            je .L_407190

            cmp ECX,3
            jbe .L_40711e

            lea RCX,QWORD PTR [RBX+16]
            sub EDX,1
            mov DWORD PTR [RSP+12],0
            lea R11,QWORD PTR [R15+RDX*4+8]
            mov QWORD PTR [RSP+24],RCX
            mov RSI,RCX
            mov RCX,RDI
.L_4072e0:

            movzx EDI,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EDI,24
            shl EDX,16
            lea EDI,DWORD PTR [RDI+RDX*1]
            movzx EDX,BYTE PTR [RCX+2]
            shl EDX,8
            add EDX,EDI
            movzx EDI,BYTE PTR [RCX+3]
            add EDX,EDI
            je .L_407408

            mov EDX,EDX
            add RDX,RBX
            jb .L_407315

            cmp RAX,RDX
            jae .L_407460
.L_407315:

            mov EDI,DWORD PTR [RSP+12]
            cmp EDI,2
            ja .L_407430

            add EDI,1
            test R13B,R13B
            mov DWORD PTR [RSP+12],EDI
            jne .L_4073f5

            nop
            nop
            nop
            nop
            nop
            nop
.L_407338:

            xor ESI,ESI
            mov RDI,R12
            mov R13D,1
            call .L_401d70

            mov RDI,R12
            mov RBX,RAX
            call .L_401d40

            test RBX,RBX
            jne .L_4070f0

            jmp .L_40711e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407368:

            cmp EDX,65536
            je .L_40737c

            cmp EDX,1330926671
            jne .L_407190
.L_40737c:

            cmp R10D,11
            jbe .L_40711e

            lea RDX,QWORD PTR [RBX+12]
            cmp RBX,RDX
            ja .L_40711e

            cmp RAX,RDX
            jb .L_40711e

            movzx ECX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            sub RAX,RDX
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            shl ECX,4
            cmp ECX,EAX
            ja .L_40711e

            mov RDI,RBP
            call .L_401950

            jmp .L_407136
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4073d0:

            cmp EDX,1954115633
            je .L_40737c

            mov RDI,RBP
            call .L_401950

            jmp .L_407136
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4073e8:

            call .L_401c20

            mov RDI,RAX
            jmp .L_4070da
.L_4073f5:

            mov BYTE PTR [RCX],0
            mov BYTE PTR [RCX+1],0
            mov BYTE PTR [RCX+2],0
            mov BYTE PTR [RCX+3],0
            nop
            nop
            nop
            nop
.L_407408:

            cmp R11,RSI
            je .L_4074b8
.L_407411:

            cmp RBX,RSI
            ja .L_40741b

            cmp RAX,RSI
            jae .L_407440
.L_40741b:

            cmp DWORD PTR [RSP+12],0
            je .L_40711e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407430:

            test R13B,R13B
            je .L_407338

            jmp .L_40711e
          .byte 0x66
          .byte 0x90
.L_407440:

            mov RDX,RAX
            add RCX,4
            sub RDX,RSI
            add RSI,4
            cmp EDX,3
            jbe .L_40741b

            jmp .L_4072e0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407460:

            mov RDI,RAX
            sub RDI,RDX
            cmp EDI,11
            jbe .L_407315

            lea RDI,QWORD PTR [RDX+12]
            cmp RBX,RDI
            ja .L_407315

            cmp RAX,RDI
            jb .L_407315

            movzx R8D,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            shl R8D,8
            add EDX,R8D
            mov R8,RAX
            movzx EDX,DX
            sub R8,RDI
            shl EDX,4
            cmp EDX,R8D
            ja .L_407315

            cmp R11,RSI
            jne .L_407411

            nop
            nop
            nop
            nop
            nop
.L_4074b8:

            mov ECX,DWORD PTR [RSP+12]
            test ECX,ECX
            je .L_407190

            movzx ECX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl ECX,24
            shl EDX,16
            lea ECX,DWORD PTR [RCX+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EDX,ECX
            cmp EDX,1953658213
            je .L_407678

            jle .L_407664

            cmp EDX,1953784678
            jne .L_4076bc

            cmp RBX,R9
            ja .L_40711e

            cmp RAX,R9
            jb .L_40711e

            mov RDX,RAX
            sub RDX,R9
            cmp EDX,3
            jbe .L_40711e

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            lea EDX,DWORD PTR [RDX+RCX*1-1]
            cmp DX,1
            ja .L_407190

            cmp RBX,R15
            ja .L_40711e

            cmp RAX,R15
            jb .L_40711e

            mov RDX,RAX
            sub RDX,R15
            cmp EDX,3
            jbe .L_40711e

            movzx EDX,BYTE PTR [RBX+8]
            movzx ECX,BYTE PTR [RBX+9]
            shl EDX,24
            shl ECX,16
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+10]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+11]
            add EDX,ECX
            cmp EDX,1073741822
            ja .L_40711e

            mov R11,QWORD PTR [RSP+16]
            cmp RBX,R11
            ja .L_40711e

            cmp RAX,R11
            jb .L_40711e

            mov RCX,RAX
            lea ESI,DWORD PTR [RDX*4]
            sub RCX,R11
            cmp ESI,ECX
            ja .L_40711e

            test EDX,EDX
            je .L_407190

            cmp ECX,3
            jbe .L_40711e

            sub EDX,1
            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R11
            lea R9,QWORD PTR [R15+RDX*4+8]
            xor R8D,R8D
.L_4075d7:

            movzx EDX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            shl EDX,24
            shl ECX,16
            add EDX,ECX
            movzx ECX,BYTE PTR [RSI+2]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RSI+3]
            add EDX,ECX
            je .L_40762d

            mov EDX,EDX
            add RDX,RBX
            jb .L_407607

            cmp RAX,RDX
            jae .L_4076ca
.L_407607:

            cmp R8D,2
            ja .L_40711e

            add R8D,1
            test R13B,R13B
            je .L_40711e

            mov BYTE PTR [RSI],0
            mov BYTE PTR [RSI+1],0
            mov BYTE PTR [RSI+2],0
            mov BYTE PTR [RSI+3],0
.L_40762d:

            cmp R9,RDI
            je .L_40718b

            cmp RAX,RDI
            jb .L_40711e

            cmp RBX,RDI
            ja .L_40711e

            mov RDX,RAX
            add RSI,4
            sub RDX,RDI
            add RDI,4
            cmp EDX,3
            jbe .L_40711e

            jmp .L_4075d7
.L_407664:

            cmp EDX,65536
            je .L_407678

            cmp EDX,1330926671
            jne .L_407190
.L_407678:

            cmp R10D,11
            jbe .L_40711e

            mov RSI,QWORD PTR [RSP+16]
            cmp RBX,RSI
            ja .L_40711e

            cmp RAX,RSI
            jb .L_40711e

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            sub RAX,RSI
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            shl EDX,4
            cmp EDX,EAX
            jbe .L_407190

            jmp .L_40711e
.L_4076bc:

            cmp EDX,1954115633
            jne .L_407190

            jmp .L_407678
.L_4076ca:

            mov RCX,RAX
            sub RCX,RDX
            cmp ECX,11
            jbe .L_407607

            lea RCX,QWORD PTR [RDX+12]
            cmp RAX,RCX
            jb .L_407607

            cmp RBX,RCX
            ja .L_407607

            movzx R10D,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            mov R15,RAX
            sub R15,RCX
            shl R10D,8
            add EDX,R10D
            movzx EDX,DX
            shl EDX,4
            cmp EDX,R15D
            jbe .L_40762d

            jmp .L_407607
.L_407719:

            lea RCX,QWORD PTR [RIP+.L_408020]
            lea RSI,QWORD PTR [RIP+.L_407dd1]
            lea RDI,QWORD PTR [RIP+.L_407de9]
            mov EDX,218
            call __assert_fail@PLT
.L_407738:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407740:

            lea RAX,QWORD PTR [RIP+.L_6581e0]
            ret 
.L_407748:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407750:

            test RDI,RDI
            je .L_407764

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_407764

            test EAX,EAX
            jle .L_407770

            lock add DWORD PTR [RDI],1
.L_407764:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407770:

            lea RCX,QWORD PTR [RIP+.L_407fe0]
            lea RSI,QWORD PTR [RIP+.L_407e02]
            lea RDI,QWORD PTR [RIP+.L_407e17]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_407793:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4077a0:

            test RDI,RDI
            je .L_4077f0

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4077f0

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            jle .L_4077d0

            lock sub DWORD PTR [RDI],1
            je .L_4077f8

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4077d0:

            lea RCX,QWORD PTR [RIP+.L_407fa0]
            lea RSI,QWORD PTR [RIP+.L_407e02]
            lea RDI,QWORD PTR [RIP+.L_407e17]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x90
.L_4077f0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4077f8:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBX,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_4078c8

            mov RDI,QWORD PTR [RDI+56]
            cmp RDI,R12
            je .L_40781f

            call free@PLT
.L_40781f:

            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+56],0
.L_40782f:

            mov RDI,RBX
            call pthread_mutex_destroy@PLT

            mov RBX,QWORD PTR [RBP+176]
            test RBX,RBX
            je .L_407864

            nop
            nop
            nop
            nop
            nop
.L_407848:

            mov RDI,QWORD PTR [RBX]
            mov R12,QWORD PTR [RBX+8]
            call .L_40c2d0

            mov RDI,RBX
            mov RBX,R12
            call free@PLT

            test R12,R12
            jne .L_407848
.L_407864:

            mov RDI,QWORD PTR [RBP+160]
            test RDI,RDI
            je .L_407881

            cmp RDI,-1
            je .L_407881

            cmp RDI,1
            je .L_407881

            call .L_412670
.L_407881:

            mov RDI,QWORD PTR [RBP+168]
            test RDI,RDI
            je .L_40789e

            cmp RDI,-1
            je .L_40789e

            cmp RDI,1
            je .L_40789e

            call .L_430c60
.L_40789e:

            mov RAX,QWORD PTR [RBP+136]
            test RAX,RAX
            je .L_4078b3

            mov RDI,QWORD PTR [RBP+128]
            call RAX
.L_4078b3:

            pop RBX
.L_4078b4:

            mov RDI,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4078c8:

            mov RDI,RBX
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBP+48]
            test EAX,EAX
            je .L_407916
.L_4078d7:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBX
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBP+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBP+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_4078c8

            mov RDI,R13
            call R14

            mov RDI,RBX
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBP+48]
            test EAX,EAX
            jne .L_4078d7
.L_407916:

            mov RDI,QWORD PTR [RBP+56]
            cmp RDI,R12
            je .L_407924

            call free@PLT
.L_407924:

            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+56],0
            mov RDI,RBX
            call pthread_mutex_unlock@PLT

            jmp .L_40782f
.L_407941:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407950:

            test RDI,RDI
            je .L_407978

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_407978

            sub RSP,8
            test EAX,EAX
            jle .L_407980

            add RDI,8
            call .L_4068c0

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407978:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407980:

            lea RCX,QWORD PTR [RIP+.L_407ec0]
            lea RSI,QWORD PTR [RIP+.L_407e02]
            lea RDI,QWORD PTR [RIP+.L_407e17]
            mov EDX,187
            call __assert_fail@PLT
.L_40799f:

            nop
.L_4079a0:

            test RDI,RDI
            je .L_4079e8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4079e8

            test EAX,EAX
            jle .L_4079c0

            add RDI,8
            jmp .L_406b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4079c0:

            lea RCX,QWORD PTR [RIP+.L_407e40]
            lea RSI,QWORD PTR [RIP+.L_407e02]
            lea RDI,QWORD PTR [RIP+.L_407e17]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4079e8:

            xor EAX,EAX
            ret 
.L_4079eb:

            nop
            nop
            nop
            nop
            nop
.L_4079f0:

            cmp DWORD PTR [RDI],-1
            je .L_4079fc

            mov DWORD PTR [RDI+112],1
.L_4079fc:

            ret 
.L_4079fe:

            nop
            nop
.L_407a00:

            mov EAX,DWORD PTR [RDI+112]
            ret 
.L_407a04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a10:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_407a34

            sub RSP,8
            mov RDX,QWORD PTR [RDI+128]
            call RAX

            test RAX,RAX
            je .L_407a30

            add RSP,8
            ret 
.L_407a30:

            add RSP,8
.L_407a34:

            jmp .L_401c20
.L_407a39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a40:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_407a6c

            sub RSP,8
            xor ESI,ESI
            mov RDX,QWORD PTR [RDI+128]
            call RAX

            test RAX,RAX
            je .L_407a68

            add RSP,8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407a68:

            add RSP,8
.L_407a6c:

            jmp .L_401c20
.L_407a71:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a80:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_407a8d

            mov DWORD PTR [RDI+144],ESI
.L_407a8d:

            ret 
.L_407a8f:

            nop
.L_407a90:

            mov EAX,DWORD PTR [RDI+144]
            ret 
.L_407a97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407aa0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_407aad

            mov DWORD PTR [RDI+148],ESI
.L_407aad:

            ret 
.L_407aaf:

            nop
.L_407ab0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_407abd:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_407bf0

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1751474532
            call RAX

            test RAX,RAX
            mov RBX,RAX
            je .L_407bf0
.L_407ae4:

            mov RDI,RBX
            call .L_401c30

            xor ESI,ESI
            mov RBP,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,RBP
            mov R13,RAX
            call .L_401d40

            mov EDX,EAX
            add RDX,R13
            jb .L_407bfd

            test R13,R13
            je .L_407bda

            cmp EAX,53
            ja .L_407b90
.L_407b1d:

            mov RDI,RBP
            call .L_401950

            mov RDI,RBX
            call .L_401950

            call .L_401c20

            mov RBX,RAX
.L_407b35:

            mov RDI,RBX
            call .L_401d20

            mov RDI,RBX
            xor ESI,ESI
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_6582c0]
            test RAX,RAX
            mov RDI,RBX
            cmove RAX,RDX
            movzx EDX,BYTE PTR [RAX+18]
            movzx EAX,BYTE PTR [RAX+19]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            lea EDX,DWORD PTR [RAX-16]
            cmp EDX,16369
            mov EDX,1000
            cmovae EAX,EDX
            mov DWORD PTR [R12+148],EAX
            add RSP,8
.L_407b85:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_401950
.L_407b90:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_407b1d

            movzx EDX,BYTE PTR [R13+12]
            movzx EAX,BYTE PTR [R13+13]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R13+14]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R13+15]
            add EAX,EDX
            cmp EAX,1594834165
            jne .L_407b1d
.L_407bda:

            mov RDI,RBP
            call .L_401950

            jmp .L_407b35
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407bf0:

            call .L_401c20

            mov RBX,RAX
            jmp .L_407ae4
.L_407bfd:

            lea RCX,QWORD PTR [RIP+.L_408020]
            lea RSI,QWORD PTR [RIP+.L_407dd1]
            lea RDI,QWORD PTR [RIP+.L_407de9]
            mov EDX,218
            call __assert_fail@PLT
.L_407c1c:

            nop
            nop
            nop
            nop
.L_407c20:

            mov EAX,DWORD PTR [RDI+148]
            test EAX,EAX
            jne .L_407c40

            push RBX
            mov RBX,RDI
            call .L_407ab0

            mov EAX,DWORD PTR [RBX+148]
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407c40:

            ret 
.L_407c42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c50:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_407c5d

            mov DWORD PTR [RDI+152],ESI
.L_407c5d:

            ret 
.L_407c5f:

            nop
.L_407c60:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_407c6d:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_407d80

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1835104368
            call RAX

            test RAX,RAX
            mov RBX,RAX
            je .L_407d80
.L_407c94:

            mov RDI,RBX
            call .L_401c30

            xor ESI,ESI
            mov RBP,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,RBP
            mov R13,RAX
            call .L_401d40

            mov EDX,EAX
            add RDX,R13
            jb .L_407d8d

            test R13,R13
            je .L_407d70

            cmp EAX,5
            ja .L_407d30
.L_407ccd:

            mov RDI,RBP
            call .L_401950

            mov RDI,RBX
            call .L_401950

            call .L_401c20

            mov RBX,RAX
.L_407ce5:

            mov RDI,RBX
            call .L_401d20

            mov RDI,RBX
            xor ESI,ESI
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_6582c0]
            test RAX,RAX
            mov RDI,RBX
            cmove RAX,RDX
            movzx EDX,BYTE PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+5]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R12+152],EAX
            add RSP,8
.L_407d24:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_401950
          .byte 0x90
.L_407d30:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_407d70

            test AX,AX
            jne .L_407ccd

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            cmp AX,20480
            jne .L_407ccd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407d70:

            mov RDI,RBP
            call .L_401950

            jmp .L_407ce5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407d80:

            call .L_401c20

            mov RBX,RAX
            jmp .L_407c94
.L_407d8d:

            lea RCX,QWORD PTR [RIP+.L_408020]
            lea RSI,QWORD PTR [RIP+.L_407dd1]
            lea RDI,QWORD PTR [RIP+.L_407de9]
            mov EDX,218
            call __assert_fail@PLT
.L_407dac:

            nop
            nop
            nop
            nop
.L_407db0:

            mov EAX,DWORD PTR [RDI+152]
            cmp EAX,-1
            je .L_407dc0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407dc0:

            push RBX
            mov RBX,RDI
            call .L_407c60

            mov EAX,DWORD PTR [RBX+152]
            pop RBX
            ret 
.L_407dd1:
          .string "hb-open-type-private.hh"
.L_407de9:
          .string "this->start <= this->end"
.L_407e02:
          .string "hb-object-private.hh"
.L_407e17:
          .string "hb_object_is_valid (obj)"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407e40:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_face_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 5
.L_407ec0:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_face_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 11
.L_407fa0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_face_t]"
          .zero 10
.L_407fe0:

            push RSP
            jns .L_408053
          .byte 0x65
          .byte 0x2a
          .byte 0x20
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x6f
          .byte 0x62
          .byte 0x6a
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x5f
          .byte 0x72
          .byte 0x65
          .byte 0x66
          .byte 0x65
          .byte 0x72
          .byte 0x65
          .byte 0x6e
          .byte 0x63
          .byte 0x65
          .byte 0x28
          .byte 0x54
          .byte 0x79
          .byte 0x70
          .byte 0x65
          .byte 0x2a
          .byte 0x29
          .byte 0x20
          .byte 0x5b
          .byte 0x77
          .byte 0x69
          .byte 0x74
          .byte 0x68
          .byte 0x20
          .byte 0x54
          .byte 0x79
          .byte 0x70
          .byte 0x65
          .byte 0x20
          .byte 0x3d
          .byte 0x20
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x66
          .byte 0x61
          .byte 0x63
          .byte 0x65
          .byte 0x5f
          .byte 0x74
          .byte 0x5d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408020:
          .string "void OT::hb_sanitize_context_t::start_processing()"
.L_408053:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408060:

            mov DWORD PTR [RCX],0
            xor EAX,EAX
            ret 
.L_408069:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408070:

            mov RDI,QWORD PTR [RDI+120]
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            jmp R9
.L_408099:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4080a0:

            mov DWORD PTR [R8],0
            xor EAX,EAX
            ret 
.L_4080aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4080b0:

            mov RDI,QWORD PTR [RDI+120]
            mov DWORD PTR [R8],0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+368]
            mov R9,QWORD PTR [RAX+144]
            jmp R10
.L_4080da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4080e0:

            mov EAX,DWORD PTR [RDI+136]
            ret 
.L_4080e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4080f0:

            mov EAX,DWORD PTR [RDI+140]
            ret 
.L_4080f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408100:

            mov DWORD PTR [R8],0
            mov EAX,1
            mov DWORD PTR [RCX],0
            ret 
.L_408113:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408120:

            mov DWORD PTR [R8],0
            xor EAX,EAX
            mov DWORD PTR [RCX],0
            ret 
.L_408130:

            xor EAX,EAX
            ret 
.L_408133:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408140:

            mov DWORD PTR [R9],0
            xor EAX,EAX
            mov DWORD PTR [R8],0
            ret 
.L_408151:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408160:

            test R8D,R8D
            je .L_408168

            mov BYTE PTR [RCX],0
.L_408168:

            xor EAX,EAX
            ret 
.L_40816b:

            nop
            nop
            nop
            nop
            nop
.L_408170:

            test R8D,R8D
            mov RDI,QWORD PTR [RDI+120]
            je .L_40817c

            mov BYTE PTR [RCX],0
.L_40817c:

            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+440]
            mov R9,QWORD PTR [RAX+216]
            jmp R10
.L_40819b:

            nop
            nop
            nop
            nop
            nop
.L_4081a0:

            mov DWORD PTR [R8],0
            xor EAX,EAX
            ret 
.L_4081aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4081b0:

            mov RAX,QWORD PTR [R8+24]
            mov R9,QWORD PTR [R8]
            mov R8,RCX
            xor ECX,ECX
            jmp RAX
.L_4081be:

            nop
            nop
.L_4081c0:

            mov RAX,QWORD PTR [R9+24]
            mov R9,QWORD PTR [R9]
            jmp RAX
.L_4081c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4081d0:

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,QWORD PTR [RDI+120]
            mov RBP,R8
            mov DWORD PTR [R9],0
            mov DWORD PTR [R8],0
            mov RBX,R9
            sub RSP,8
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            push QWORD PTR [RAX+208]
            call QWORD PTR [RAX+432]

            test EAX,EAX
            mov ECX,EAX
            pop RDX
            pop RSI
            jne .L_408220

            pop RBX
            mov EAX,ECX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408220:

            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBP]
            test RDX,RDX
            je .L_40824a

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [R12+136]
            cmp ESI,EDX
            je .L_40824a

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40824a:

            mov DWORD PTR [RBP],EAX
            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_408276

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [R12+140]
            cmp ESI,EDX
            je .L_408276

            imul RAX,RDX
            cqo 
            idiv RSI
.L_408276:

            mov DWORD PTR [RBX],EAX
            mov EAX,ECX
            pop RBX
.L_40827b:

            pop RBP
            pop R12
            ret 
.L_40827f:

            nop
.L_408280:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov RDX,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_4082c9

            movsxd RCX,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBX+136]
            cmp ECX,EDX
            je .L_4082c9

            cdqe 
            imul RAX,RDX
            cqo 
            idiv RCX
.L_4082c9:

            pop RBX

            ret 
.L_4082cb:

            nop
            nop
            nop
            nop
            nop
.L_4082d0:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+160]
            call QWORD PTR [RAX+384]

            mov RDX,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_408319

            movsxd RCX,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBX+140]
            cmp ECX,EDX
            je .L_408319

            cdqe 
            imul RAX,RDX
            cqo 
            idiv RCX
.L_408319:

            pop RBX

            ret 
.L_40831b:

            nop
            nop
            nop
            nop
            nop
.L_408320:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+184]
            call QWORD PTR [RAX+408]

            mov RDX,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_408369

            movsxd RCX,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBX+136]
            cmp ECX,EDX
            je .L_408369

            cdqe 
            imul RAX,RDX
            cqo 
            idiv RCX
.L_408369:

            pop RBX

            ret 
.L_40836b:

            nop
            nop
            nop
            nop
            nop
.L_408370:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+192]
            call QWORD PTR [RAX+416]

            mov RDX,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_4083b9

            movsxd RCX,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBX+140]
            cmp ECX,EDX
            je .L_4083b9

            cdqe 
            imul RAX,RDX
            cqo 
            idiv RCX
.L_4083b9:

            pop RBX

            ret 
.L_4083bb:

            nop
            nop
            nop
            nop
            nop
.L_4083c0:

            pxor XMM0,XMM0
            xor EAX,EAX
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            ret 
.L_4083d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4083e0:

            pxor XMM0,XMM0
            xor EAX,EAX
            movups XMMWORD PTR [RCX],XMM0
            ret 
.L_4083ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4083f0:

            sub DWORD PTR [RDI+16],1
            jne .L_408418

            push RBX
            mov RAX,QWORD PTR [RDI+8]
            mov RBX,RDI
            test RAX,RAX
            je .L_408408

            mov RDI,QWORD PTR [RDI]
            call RAX
.L_408408:

            mov RDI,RBX
            pop RBX
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408418:

            ret 
.L_40841a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_408420:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RBX,RDX
            sub RSP,8
.L_408430:

            mov RDI,QWORD PTR [RDI+120]
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+120]
            call QWORD PTR [RAX+344]

            test EAX,EAX
            mov ECX,EAX
            je .L_4084dc

            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_408484

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_408484

            imul RAX,RDX
            cqo 
            idiv RSI
.L_408484:

            mov DWORD PTR [RBX],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+4]
            test RDX,RDX
            je .L_4084ae

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_4084ae

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4084ae:

            mov DWORD PTR [RBX+4],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+8]
            test RDX,RDX
            je .L_4084d9

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_4084d9

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4084d9:

            mov DWORD PTR [RBX+8],EAX
.L_4084dc:

            add RSP,8
.L_4084e0:

            mov EAX,ECX
            pop RBX
            pop RBP
            ret 
.L_4084e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4084f0:

            xor EAX,EAX
            ret 
.L_4084f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408500:

            pxor XMM0,XMM0
            xor EAX,EAX
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            ret 
.L_408512:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408520:

            push RBX
            sub RSP,16

            cmp ECX,-1
            mov RBX,QWORD PTR [RDI+120]
            mov DWORD PTR [R8],0
            jne .L_408551

            mov RDI,RDX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP],RDX
            call strlen@PLT

            mov R8,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov ECX,EAX
.L_408551:

            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov R10,QWORD PTR [RAX+448]
            mov R9,QWORD PTR [RAX+224]
            add RSP,16

            pop RBX
            jmp R10
.L_408578:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408580:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RBX,RDX
            sub RSP,8
.L_408590:

            mov RDI,QWORD PTR [RDI+120]
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+128]
            call QWORD PTR [RAX+352]

            test EAX,EAX
            mov ECX,EAX
            je .L_40863f

            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_4085e7

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_4085e7

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4085e7:

            mov DWORD PTR [RBX],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+4]
            test RDX,RDX
            je .L_408611

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_408611

            imul RAX,RDX
            cqo 
            idiv RSI
.L_408611:

            mov DWORD PTR [RBX+4],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+8]
            test RDX,RDX
            je .L_40863c

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_40863c

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40863c:

            mov DWORD PTR [RBX+8],EAX
.L_40863f:

            add RSP,8
.L_408643:

            mov EAX,ECX
            pop RBX
            pop RBP
            ret 
.L_408648:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408650:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RBX,RCX
            sub RSP,8
            mov RDI,QWORD PTR [RDI+120]
            movups XMMWORD PTR [RCX],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov ECX,EAX
            jne .L_408698

            add RSP,8
            mov EAX,ECX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408698:

            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_4086bf

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_4086bf

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4086bf:

            mov DWORD PTR [RBX],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+4]
            test RDX,RDX
            je .L_4086e9

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_4086e9

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4086e9:

            mov DWORD PTR [RBX+4],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+8]
            test RDX,RDX
            je .L_408714

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_408714

            imul RAX,RDX
            cqo 
            idiv RSI
.L_408714:

            mov DWORD PTR [RBX+8],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+12]
            test RDX,RDX
            je .L_40873f

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_40873f

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40873f:

            mov DWORD PTR [RBX+12],EAX
            add RSP,8
.L_408746:

            mov EAX,ECX
            pop RBX
            pop RBP
            ret 
.L_40874b:

            nop
            nop
            nop
            nop
            nop
.L_408750:

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,QWORD PTR [RDI+120]
            mov RBP,RCX
            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RBX,R8
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            mov ECX,EAX
            jne .L_4087a0

            pop RBX
            mov EAX,ECX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4087a0:

            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBP]
            test RDX,RDX
            je .L_4087ca

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [R12+136]
            cmp ESI,EDX
            je .L_4087ca

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4087ca:

            mov DWORD PTR [RBP],EAX
            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_4087f6

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [R12+140]
            cmp ESI,EDX
            je .L_4087f6

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4087f6:

            mov DWORD PTR [RBX],EAX
            mov EAX,ECX
            pop RBX
.L_4087fb:

            pop RBP
            pop R12
            ret 
.L_4087ff:

            nop
.L_408800:

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,QWORD PTR [RDI+120]
            mov RBP,RCX
            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RBX,R8
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            mov ECX,EAX
            jne .L_408850

            pop RBX
            mov EAX,ECX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408850:

            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBP]
            test RDX,RDX
            je .L_40887a

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [R12+136]
            cmp ESI,EDX
            je .L_40887a

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40887a:

            mov DWORD PTR [RBP],EAX
            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_4088a6

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [R12+140]
            cmp ESI,EDX
            je .L_4088a6

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4088a6:

            mov DWORD PTR [RBX],EAX
            mov EAX,ECX
            pop RBX
.L_4088ab:

            pop RBP
            pop R12
            ret 
.L_4088af:

            nop
.L_4088b0:

            push RBX

            mov ESI,456
            mov EDI,1
            lea RBX,QWORD PTR [RIP+.L_657460]
            call calloc@PLT

            test RAX,RAX
            je .L_408961

            lea RDI,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX],1
            xor ESI,ESI
            mov RBX,RAX
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6575b8]
            movups XMMWORD PTR [RBX+344],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6575c8]
            movups XMMWORD PTR [RBX+360],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6575d8]
            movups XMMWORD PTR [RBX+376],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6575e8]
            movups XMMWORD PTR [RBX+392],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6575f8]
            movups XMMWORD PTR [RBX+408],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_657608]
            movups XMMWORD PTR [RBX+424],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_657618]
            movups XMMWORD PTR [RBX+440],XMM0
.L_408961:

            mov RAX,RBX
            pop RBX

            ret 
.L_408966:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408970:

            lea RAX,QWORD PTR [RIP+.L_657460]
            ret 
.L_408978:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408980:

            test RDI,RDI
            je .L_408994

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_408994

            test EAX,EAX
            jle .L_4089a0

            lock add DWORD PTR [RDI],1
.L_408994:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4089a0:

            lea RCX,QWORD PTR [RIP+.L_40b400]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_4089c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4089d0:

            test RDI,RDI
            je .L_408a20

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_408a20

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_408a00

            lock sub DWORD PTR [RDI],1
            je .L_408a28

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408a00:

            lea RCX,QWORD PTR [RIP+.L_40b3c0]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x90
.L_408a20:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408a28:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_408ba0

            mov RDI,QWORD PTR [RDI+56]
            cmp RDI,R12
            je .L_408a4f

            call free@PLT
.L_408a4f:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_408a5f:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RAX,QWORD PTR [RBX+232]
            test RAX,RAX
            je .L_408a79

            mov RDI,QWORD PTR [RBX+120]
            call RAX
.L_408a79:

            mov RAX,QWORD PTR [RBX+240]
            test RAX,RAX
            je .L_408a8e

            mov RDI,QWORD PTR [RBX+128]
            call RAX
.L_408a8e:

            mov RAX,QWORD PTR [RBX+248]
            test RAX,RAX
            je .L_408aa3

            mov RDI,QWORD PTR [RBX+136]
            call RAX
.L_408aa3:

            mov RAX,QWORD PTR [RBX+256]
            test RAX,RAX
            je .L_408ab8

            mov RDI,QWORD PTR [RBX+144]
            call RAX
.L_408ab8:

            mov RAX,QWORD PTR [RBX+264]
            test RAX,RAX
            je .L_408acd

            mov RDI,QWORD PTR [RBX+152]
            call RAX
.L_408acd:

            mov RAX,QWORD PTR [RBX+272]
            test RAX,RAX
            je .L_408ae2

            mov RDI,QWORD PTR [RBX+160]
            call RAX
.L_408ae2:

            mov RAX,QWORD PTR [RBX+280]
            test RAX,RAX
            je .L_408af7

            mov RDI,QWORD PTR [RBX+168]
            call RAX
.L_408af7:

            mov RAX,QWORD PTR [RBX+288]
            test RAX,RAX
            je .L_408b0c

            mov RDI,QWORD PTR [RBX+176]
            call RAX
.L_408b0c:

            mov RAX,QWORD PTR [RBX+296]
            test RAX,RAX
            je .L_408b21

            mov RDI,QWORD PTR [RBX+184]
            call RAX
.L_408b21:

            mov RAX,QWORD PTR [RBX+304]
            test RAX,RAX
            je .L_408b36

            mov RDI,QWORD PTR [RBX+192]
            call RAX
.L_408b36:

            mov RAX,QWORD PTR [RBX+312]
            test RAX,RAX
            je .L_408b4b

            mov RDI,QWORD PTR [RBX+200]
            call RAX
.L_408b4b:

            mov RAX,QWORD PTR [RBX+320]
            test RAX,RAX
            je .L_408b60

            mov RDI,QWORD PTR [RBX+208]
            call RAX
.L_408b60:

            mov RAX,QWORD PTR [RBX+328]
            test RAX,RAX
            je .L_408b75

            mov RDI,QWORD PTR [RBX+216]
            call RAX
.L_408b75:

            mov RAX,QWORD PTR [RBX+336]
            test RAX,RAX
            je .L_408b8a

            mov RDI,QWORD PTR [RBX+224]
            call RAX
.L_408b8a:

            mov RDI,RBX
            pop RBX
.L_408b8e:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408ba0:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_408bee
.L_408baf:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_408ba0

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_408baf
.L_408bee:

            mov RDI,QWORD PTR [RBX+56]
            cmp RDI,R12
            je .L_408bfc

            call free@PLT
.L_408bfc:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_408a5f
.L_408c19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408c20:

            test RDI,RDI
            je .L_408c48

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_408c48

            sub RSP,8
            test EAX,EAX
            jle .L_408c50

            add RDI,8
            call .L_4068c0

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408c48:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408c50:

            lea RCX,QWORD PTR [RIP+.L_40b2e0]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            mov EDX,187
            call __assert_fail@PLT
.L_408c6f:

            nop
.L_408c70:

            test RDI,RDI
            je .L_408cb8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_408cb8

            test EAX,EAX
            jle .L_408c90

            add RDI,8
            jmp .L_406b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408c90:

            lea RCX,QWORD PTR [RIP+.L_40b240]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408cb8:

            xor EAX,EAX
            ret 
.L_408cbb:

            nop
            nop
            nop
            nop
            nop
.L_408cc0:

            cmp DWORD PTR [RDI],-1
            je .L_408ccc

            mov DWORD PTR [RDI+112],1
.L_408ccc:

            ret 
.L_408cce:

            nop
            nop
.L_408cd0:

            mov EAX,DWORD PTR [RDI+112]
            ret 
.L_408cd4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408ce0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408cf8

            test RCX,RCX
            je .L_408d48

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408cf8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+232]
            test RAX,RAX
            je .L_408d20

            mov RDI,QWORD PTR [RDI+120]
            call RAX
.L_408d20:

            test RBP,RBP
            je .L_408d50

            mov QWORD PTR [RBX+344],RBP
            mov QWORD PTR [RBX+120],R13
            mov QWORD PTR [RBX+232],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408d48:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408d50:

            lea RAX,QWORD PTR [RIP+.L_408420]
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+232],0
            mov QWORD PTR [RBX+344],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408d7c:

            nop
            nop
            nop
            nop
.L_408d80:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408d98

            test RCX,RCX
            je .L_408df0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408d98:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+240]
            test RAX,RAX
            je .L_408dc3

            mov RDI,QWORD PTR [RDI+128]
            call RAX
.L_408dc3:

            test RBP,RBP
            je .L_408df8

            mov QWORD PTR [RBX+352],RBP
            mov QWORD PTR [RBX+128],R13
            mov QWORD PTR [RBX+240],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408df0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408df8:

            lea RAX,QWORD PTR [RIP+.L_408580]
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+240],0
            mov QWORD PTR [RBX+352],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408e27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408e30:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408e48

            test RCX,RCX
            je .L_408ea0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408e48:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+248]
            test RAX,RAX
            je .L_408e73

            mov RDI,QWORD PTR [RDI+136]
            call RAX
.L_408e73:

            test RBP,RBP
            je .L_408ea8

            mov QWORD PTR [RBX+360],RBP
            mov QWORD PTR [RBX+136],R13
            mov QWORD PTR [RBX+248],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408ea0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408ea8:

            lea RAX,QWORD PTR [RIP+.L_408070]
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+248],0
            mov QWORD PTR [RBX+360],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408ed7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408ee0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408ef8

            test RCX,RCX
            je .L_408f50

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408ef8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+256]
            test RAX,RAX
            je .L_408f23

            mov RDI,QWORD PTR [RDI+144]
            call RAX
.L_408f23:

            test RBP,RBP
            je .L_408f58

            mov QWORD PTR [RBX+368],RBP
            mov QWORD PTR [RBX+144],R13
            mov QWORD PTR [RBX+256],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408f50:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408f58:

            lea RAX,QWORD PTR [RIP+.L_4080b0]
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+256],0
            mov QWORD PTR [RBX+368],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408f87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408f90:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408fa8

            test RCX,RCX
            je .L_409000

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408fa8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+264]
            test RAX,RAX
            je .L_408fd3

            mov RDI,QWORD PTR [RDI+152]
            call RAX
.L_408fd3:

            test RBP,RBP
            je .L_409008

            mov QWORD PTR [RBX+376],RBP
            mov QWORD PTR [RBX+152],R13
            mov QWORD PTR [RBX+264],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409000:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409008:

            lea RAX,QWORD PTR [RIP+.L_408280]
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+264],0
            mov QWORD PTR [RBX+376],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_409037:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409040:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_409058

            test RCX,RCX
            je .L_4090b0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409058:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+272]
            test RAX,RAX
            je .L_409083

            mov RDI,QWORD PTR [RDI+160]
            call RAX
.L_409083:

            test RBP,RBP
            je .L_4090b8

            mov QWORD PTR [RBX+384],RBP
            mov QWORD PTR [RBX+160],R13
            mov QWORD PTR [RBX+272],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4090b0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4090b8:

            lea RAX,QWORD PTR [RIP+.L_4082d0]
            mov QWORD PTR [RBX+160],0
            mov QWORD PTR [RBX+272],0
            mov QWORD PTR [RBX+384],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4090e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4090f0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_409108

            test RCX,RCX
            je .L_409160

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409108:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+280]
            test RAX,RAX
            je .L_409133

            mov RDI,QWORD PTR [RDI+168]
            call RAX
.L_409133:

            test RBP,RBP
            je .L_409168

            mov QWORD PTR [RBX+392],RBP
            mov QWORD PTR [RBX+168],R13
            mov QWORD PTR [RBX+280],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409160:

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_409168:

            lea RAX,QWORD PTR [RIP+.L_408750]
            mov QWORD PTR [RBX+168],0
            mov QWORD PTR [RBX+280],0
            mov QWORD PTR [RBX+392],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_409197:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4091a0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_4091b8

            test RCX,RCX
            je .L_409210

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4091b8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+288]
            test RAX,RAX
            je .L_4091e3

            mov RDI,QWORD PTR [RDI+176]
            call RAX
.L_4091e3:

            test RBP,RBP
            je .L_409218

            mov QWORD PTR [RBX+400],RBP
            mov QWORD PTR [RBX+176],R13
            mov QWORD PTR [RBX+288],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409210:

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_409218:

            lea RAX,QWORD PTR [RIP+.L_408800]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+288],0
            mov QWORD PTR [RBX+400],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_409247:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409250:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_409268

            test RCX,RCX
            je .L_4092c0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409268:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+296]
            test RAX,RAX
            je .L_409293

            mov RDI,QWORD PTR [RDI+184]
            call RAX
.L_409293:

            test RBP,RBP
            je .L_4092c8

            mov QWORD PTR [RBX+408],RBP
            mov QWORD PTR [RBX+184],R13
            mov QWORD PTR [RBX+296],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4092c0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4092c8:

            lea RAX,QWORD PTR [RIP+.L_408320]
            mov QWORD PTR [RBX+184],0
            mov QWORD PTR [RBX+296],0
            mov QWORD PTR [RBX+408],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4092f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409300:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_409318

            test RCX,RCX
            je .L_409370

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409318:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+304]
            test RAX,RAX
            je .L_409343

            mov RDI,QWORD PTR [RDI+192]
            call RAX
.L_409343:

            test RBP,RBP
            je .L_409378

            mov QWORD PTR [RBX+416],RBP
            mov QWORD PTR [RBX+192],R13
            mov QWORD PTR [RBX+304],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409370:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409378:

            lea RAX,QWORD PTR [RIP+.L_408370]
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+304],0
            mov QWORD PTR [RBX+416],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4093a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4093b0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_4093c8

            test RCX,RCX
            je .L_409420

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4093c8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+312]
            test RAX,RAX
            je .L_4093f3

            mov RDI,QWORD PTR [RDI+200]
            call RAX
.L_4093f3:

            test RBP,RBP
            je .L_409428

            mov QWORD PTR [RBX+424],RBP
            mov QWORD PTR [RBX+200],R13
            mov QWORD PTR [RBX+312],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409420:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409428:

            lea RAX,QWORD PTR [RIP+.L_408650]
            mov QWORD PTR [RBX+200],0
            mov QWORD PTR [RBX+312],0
            mov QWORD PTR [RBX+424],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_409457:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409460:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_409478

            test RCX,RCX
            je .L_4094d0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409478:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+320]
            test RAX,RAX
            je .L_4094a3

            mov RDI,QWORD PTR [RDI+208]
            call RAX
.L_4094a3:

            test RBP,RBP
            je .L_4094d8

            mov QWORD PTR [RBX+432],RBP
            mov QWORD PTR [RBX+208],R13
            mov QWORD PTR [RBX+320],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4094d0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4094d8:

            lea RAX,QWORD PTR [RIP+.L_4081d0]
            mov QWORD PTR [RBX+208],0
            mov QWORD PTR [RBX+320],0
            mov QWORD PTR [RBX+432],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_409507:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409510:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_409528

            test RCX,RCX
            je .L_409580

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409528:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+328]
            test RAX,RAX
            je .L_409553

            mov RDI,QWORD PTR [RDI+216]
            call RAX
.L_409553:

            test RBP,RBP
            je .L_409588

            mov QWORD PTR [RBX+440],RBP
            mov QWORD PTR [RBX+216],R13
            mov QWORD PTR [RBX+328],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409580:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409588:

            lea RAX,QWORD PTR [RIP+.L_408170]
            mov QWORD PTR [RBX+216],0
            mov QWORD PTR [RBX+328],0
            mov QWORD PTR [RBX+440],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4095b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4095c0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_4095d8

            test RCX,RCX
            je .L_409630

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4095d8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+336]
            test RAX,RAX
            je .L_409603

            mov RDI,QWORD PTR [RDI+224]
            call RAX
.L_409603:

            test RBP,RBP
            je .L_409638

            mov QWORD PTR [RBX+448],RBP
            mov QWORD PTR [RBX+224],R13
            mov QWORD PTR [RBX+336],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409630:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409638:

            lea RAX,QWORD PTR [RIP+.L_408520]
            mov QWORD PTR [RBX+224],0
            mov QWORD PTR [RBX+336],0
            mov QWORD PTR [RBX+448],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_409667:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409670:

            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+120]
            test RDI,RDI
            je .L_409690

            lea RAX,QWORD PTR [RIP+.L_6573a0]
            cmp RDI,RAX
            jne .L_4096c0
.L_409690:

            mov RDX,QWORD PTR [RBP+152]
            lea RAX,QWORD PTR [RIP+.L_657460]
            mov ESI,EBX
            mov RAX,QWORD PTR [RAX+RSI*8+344]
            cmp QWORD PTR [RDX+RSI*8+344],RAX
            setne AL
.L_4096b3:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4096c0:

            call .L_409670

            test AL,AL
            je .L_409690

            jmp .L_4096b3
.L_4096cb:

            nop
            nop
            nop
            nop
            nop
.L_4096d0:

            pxor XMM0,XMM0
            mov RDX,RSI
            movups XMMWORD PTR [RSI],XMM0
            movups XMMWORD PTR [RSI+16],XMM0
            movups XMMWORD PTR [RSI+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+120]
            jmp QWORD PTR [RAX+344]
.L_4096fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_409700:

            pxor XMM0,XMM0
            mov RDX,RSI
            movups XMMWORD PTR [RSI],XMM0
            movups XMMWORD PTR [RSI+16],XMM0
            movups XMMWORD PTR [RSI+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+128]
            jmp QWORD PTR [RAX+352]
.L_40972d:

            nop
            nop
            nop
.L_409730:

            test EDX,EDX
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            je .L_409760

            mov R8,RCX
            mov R10,QWORD PTR [RAX+368]
            mov ECX,EDX
            mov R9,QWORD PTR [RAX+144]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            jmp R10
.L_409760:

            mov EDX,ESI
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            mov RSI,QWORD PTR [RDI+160]
            jmp R9
.L_40977a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_409780:

            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            jmp R9
.L_4097aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4097b0:

            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov R8,RCX
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+368]
            mov R9,QWORD PTR [RAX+144]
            jmp R10
.L_4097dc:

            nop
            nop
            nop
            nop
.L_4097e0:

            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+152]
            jmp QWORD PTR [RAX+376]
.L_4097fd:

            nop
            nop
            nop
.L_409800:

            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+160]
            jmp QWORD PTR [RAX+384]
.L_40981d:

            nop
            nop
            nop
.L_409820:

            mov DWORD PTR [RCX],0
            mov DWORD PTR [RDX],0
            mov R8,RCX
            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+392]
            mov R9,QWORD PTR [RAX+168]
            jmp R10
.L_409853:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409860:

            mov DWORD PTR [RCX],0
            mov DWORD PTR [RDX],0
            mov R8,RCX
            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+400]
            mov R9,QWORD PTR [RAX+176]
            jmp R10
.L_409893:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4098a0:

            mov RAX,QWORD PTR [RDI+152]
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+408]
            mov R8,QWORD PTR [RAX+184]
            jmp R9
.L_4098c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4098d0:

            mov RAX,QWORD PTR [RDI+152]
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+416]
            mov R8,QWORD PTR [RAX+192]
            jmp R9
.L_4098f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409900:

            pxor XMM0,XMM0
            mov RCX,RDX
            movups XMMWORD PTR [RDX],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+424]
            mov R8,QWORD PTR [RAX+200]
            jmp R9
.L_40992b:

            nop
            nop
            nop
            nop
            nop
.L_409930:

            sub RSP,16
            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov R9,R8
            mov R8,RCX
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            push QWORD PTR [RAX+208]
            call QWORD PTR [RAX+432]

            add RSP,24
            ret 
.L_40996a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_409970:

            test ECX,ECX
            mov R8D,ECX
            je .L_40997a

            mov BYTE PTR [RDX],0
.L_40997a:

            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+440]
            mov R9,QWORD PTR [RAX+216]
            jmp R10
.L_40999e:

            nop
            nop
.L_4099a0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov R8,RCX
            sub RSP,24
.L_4099af:

            cmp EDX,-1
            mov DWORD PTR [RCX],0
            jne .L_4099ce

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RCX
            call strlen@PLT

            mov R8,QWORD PTR [RSP+8]
            mov EDX,EAX
.L_4099ce:

            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            mov ECX,EDX
            mov RDI,RBX
            mov RDX,RBP
            mov R10,QWORD PTR [RAX+448]
            mov R9,QWORD PTR [RAX+224]
            add RSP,24
.L_4099f6:

            pop RBX
            pop RBP
            jmp R10
.L_4099fb:

            nop
            nop
            nop
            nop
            nop
.L_409a00:

            push RBP
            pxor XMM0,XMM0
            push RBX
            and ESI,4294967294
            mov RBP,RDI
            mov RBX,RDX
            sub RSP,8
.L_409a13:

            cmp ESI,4
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            je .L_409a70

            mov RCX,QWORD PTR [RAX+128]
            mov RSI,QWORD PTR [RDI+160]
            call QWORD PTR [RAX+352]

            test EAX,EAX
            jne .L_409a65

            mov EDX,DWORD PTR [RBP+136]
            mov EAX,EDX
            shr EAX,31
            add EAX,EDX
            sar EAX,1
            mov DWORD PTR [RBX],EAX
            mov EDX,DWORD PTR [RBP+136]
            mov DWORD PTR [RBX+8],0
            sub EDX,EAX
            mov DWORD PTR [RBX+4],EDX
.L_409a65:

            add RSP,8
.L_409a69:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409a70:

            mov RCX,QWORD PTR [RAX+120]
            mov RSI,QWORD PTR [RDI+160]
            call QWORD PTR [RAX+344]

            test EAX,EAX
            jne .L_409a65

            pxor XMM0,XMM0
            cvtsi2sd XMM0,DWORD PTR [RBP+140]
            mulsd XMM0,QWORD PTR [RIP+.L_40b440]
            cvttsd2si EAX,XMM0
            mov DWORD PTR [RBX],EAX
            mov EDX,DWORD PTR [RBP+140]
            mov DWORD PTR [RBX+8],0
            sub EDX,EAX
            mov DWORD PTR [RBX+4],EDX
            add RSP,8
.L_409ab5:

            pop RBX
            pop RBP
            ret 
.L_409ab8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409ac0:

            push RBP
            push RBX
            and EDX,4294967294
            mov RBP,RCX
            mov RBX,R8
            sub RSP,8
            cmp EDX,4
            je .L_409b00

            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+160]
            call QWORD PTR [RAX+384]

            mov DWORD PTR [RBX],EAX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_409b00:

            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov DWORD PTR [RBP],EAX
            mov DWORD PTR [RBX],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_409b2d:

            nop
            nop
            nop
.L_409b30:

            push R13
            push R12
            and EDX,4294967294
            push RBP
            push RBX
            mov R13D,ESI
            mov RBX,RDI
            mov R12,RCX
            mov RBP,R8
            sub RSP,8
.L_409b49:

            cmp EDX,4
            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            je .L_409c00

            mov R9,QWORD PTR [RAX+176]
            mov EDX,R13D
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_409bf2

            mov DWORD PTR [RBP],0
            mov DWORD PTR [R12],0
            mov R8,RBP
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R12
            mov EDX,R13D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_409bf2

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RBX+140]
            shr EDX,31
            add EAX,EDX
            sar EAX,1
            add DWORD PTR [R12],EAX
            add DWORD PTR [RBP],ECX
.L_409bf2:

            add RSP,8
.L_409bf6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409c00:

            mov R9,QWORD PTR [RAX+168]
            mov EDX,R13D
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_409bf2

            mov DWORD PTR [RBP],0
            mov DWORD PTR [R12],0
            mov R8,RBP
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R12
            mov EDX,R13D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_409bf2

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RBX+140]
            shr EDX,31
            add EAX,EDX
            sar EAX,1
            sub DWORD PTR [R12],EAX
            sub DWORD PTR [RBP],ECX
            add RSP,8
.L_409c89:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_409c90:

            push R15
            push R14
            and EDX,4294967294
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R12,R8
            sub RSP,24
.L_409cac:

            mov RSI,QWORD PTR [RDI+160]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp EDX,4
            mov RAX,QWORD PTR [RDI+152]
            mov DWORD PTR [RSP+4],0
            mov DWORD PTR [RSP],0
            lea R15,QWORD PTR [RSP+4]
            mov R14,RSP
            je .L_409d80

            mov R9,QWORD PTR [RAX+176]
            mov R8,R15
            mov RCX,R14
            mov EDX,EBP
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_409e40

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,EBP
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_409e40

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,EBP
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP]
            jmp .L_409e10
          .byte 0x90
.L_409d80:

            mov R9,QWORD PTR [RAX+168]
            mov R8,R15
            mov RCX,R14
            mov EDX,EBP
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_409e40

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,EBP
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_409e40

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,EBP
            mov RDI,RBX
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov EDI,DWORD PTR [RSP]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub EDI,EAX
            mov EAX,EDI
.L_409e10:

            add DWORD PTR [R13],EAX
            add DWORD PTR [R12],EDX
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_409e49

            add RSP,24
.L_409e2c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409e40:

            mov EAX,DWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+4]
            jmp .L_409e10
.L_409e49:

            call __stack_chk_fail@PLT
.L_409e4e:

            nop
            nop
.L_409e50:

            push R15
            push R14
            and EDX,4294967294
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R12,R8
            sub RSP,24
.L_409e6c:

            mov RSI,QWORD PTR [RDI+160]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp EDX,4
            mov RAX,QWORD PTR [RDI+152]
            mov DWORD PTR [RSP+4],0
            mov DWORD PTR [RSP],0
            lea R15,QWORD PTR [RSP+4]
            mov R14,RSP
            je .L_409f40

            mov R9,QWORD PTR [RAX+176]
            mov R8,R15
            mov RCX,R14
            mov EDX,EBP
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_40a000

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,EBP
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_40a000

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,EBP
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP]
            jmp .L_409fd0
          .byte 0x90
.L_409f40:

            mov R9,QWORD PTR [RAX+168]
            mov R8,R15
            mov RCX,R14
            mov EDX,EBP
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_40a000

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,EBP
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_40a000

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,EBP
            mov RDI,RBX
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov EDI,DWORD PTR [RSP]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub EDI,EAX
            mov EAX,EDI
.L_409fd0:

            sub DWORD PTR [R13],EAX
            sub DWORD PTR [R12],EDX
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40a009

            add RSP,24
.L_409fec:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a000:

            mov EAX,DWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+4]
            jmp .L_409fd0
.L_40a009:

            call __stack_chk_fail@PLT
.L_40a00e:

            nop
            nop
.L_40a010:

            push RBP
            push RBX
            and ECX,4294967294
            mov RBP,R8
            mov RBX,R9
            sub RSP,8
            cmp ECX,4
            je .L_40a058

            mov DWORD PTR [R8],0
            mov RAX,QWORD PTR [RDI+152]
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+192]
            call QWORD PTR [RAX+416]

            mov DWORD PTR [RBX],EAX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a058:

            mov RAX,QWORD PTR [RDI+152]
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+184]
            call QWORD PTR [RAX+408]

            mov DWORD PTR [RBP],EAX
            mov DWORD PTR [RBX],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40a087:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a090:

            push R15
            pxor XMM0,XMM0
            push R14
            push R13
            mov R14D,EDX
            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov RBP,RCX
            mov RBX,RDI
            mov EDX,R12D
            sub RSP,24
.L_40a0b1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            movups XMMWORD PTR [RCX],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R13D,EAX
            jne .L_40a110
.L_40a0e6:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_40a291

            add RSP,24
.L_40a101:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a110:

            and R14D,4294967294
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            cmp R14D,4
            mov DWORD PTR [RSP+4],0
            mov DWORD PTR [RSP],0
            lea R15,QWORD PTR [RSP+4]
            mov R14,RSP
            je .L_40a1e0

            mov R9,QWORD PTR [RAX+176]
            mov R8,R15
            mov RCX,R14
            mov EDX,R12D
            mov RDI,RBX
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_40a288

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,R12D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_40a288

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R12D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP]
            jmp .L_40a276
          .byte 0x66
          .byte 0x90
.L_40a1e0:

            mov R9,QWORD PTR [RAX+168]
            mov R8,R15
            mov RCX,R14
            mov EDX,R12D
            mov RDI,RBX
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_40a288

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,R12D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_40a288

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R12D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RSP]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub ECX,EAX
            mov EAX,ECX
.L_40a276:

            sub DWORD PTR [RBP],EAX
            sub DWORD PTR [RBP+4],EDX
            jmp .L_40a0e6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a288:

            mov EAX,DWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+4]
            jmp .L_40a276
.L_40a291:

            call __stack_chk_fail@PLT
.L_40a296:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a2a0:

            push R15
            push R14
            mov R14D,ECX
            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov ECX,EDX
            mov RBX,RDI
            mov EDX,R13D
            mov R12,R8
            sub RSP,48
            mov DWORD PTR [R9],0
            mov DWORD PTR [R8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+32],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RBP,R9
            push QWORD PTR [RAX+208]
            call QWORD PTR [RAX+432]

            test EAX,EAX
            mov R15D,EAX
            pop RDX
            pop RCX
            jne .L_40a330
.L_40a303:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_40a4da

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a330:

            and R14D,4294967294
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            cmp R14D,4
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            je .L_40a410

            lea RDI,QWORD PTR [RSP+20]
            lea R14,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+176]
            mov EDX,R13D
            mov QWORD PTR [RSP+8],RDI
            mov R8,RDI
            mov RCX,R14
            mov RDI,RBX
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_40a4d0

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+20],0
            mov RCX,R14
            mov DWORD PTR [RSP+16],0
            mov RSI,QWORD PTR [RBX+160]
            mov EDX,R13D
            mov R8,QWORD PTR [RSP+8]
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_40a4d0

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP+16]
            jmp .L_40a4bc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a410:

            lea R10,QWORD PTR [RSP+20]
            lea R14,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+168]
            mov EDX,R13D
            mov RDI,RBX
            mov R8,R10
            mov QWORD PTR [RSP+8],R10
            mov RCX,R14
            call QWORD PTR [RAX+392]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            jne .L_40a4d0

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+20],0
            mov R8,R10
            mov DWORD PTR [RSP+16],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,R13D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_40a4d0

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RSP+16]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub ECX,EAX
            mov EAX,ECX
.L_40a4bc:

            sub DWORD PTR [R12],EAX
            sub DWORD PTR [RBP],EDX
            jmp .L_40a303
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a4d0:

            mov EAX,DWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+20]
            jmp .L_40a4bc
.L_40a4da:

            call __stack_chk_fail@PLT
.L_40a4df:

            nop
.L_40a4e0:

            test ECX,ECX
            je .L_40a520

            push R12
            push RBP
            mov EBP,ESI
            push RBX
            mov BYTE PTR [RDX],0
            mov R8D,ECX
            mov RAX,QWORD PTR [RDI+152]
            mov R12D,ECX
            mov RBX,RDX
            mov RCX,RDX
            mov RSI,QWORD PTR [RDI+160]
            mov EDX,EBP
            mov R9,QWORD PTR [RAX+216]
            call QWORD PTR [RAX+440]

            test EAX,EAX
            je .L_40a550

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_40a520:

            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            xor R8D,R8D
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+440]
            mov R9,QWORD PTR [RAX+216]
            jmp R10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a550:

            mov ESI,R12D
            mov R9D,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            lea R8,QWORD PTR [RIP+.L_40b035]
            mov RCX,-1
            mov EDX,1
            jmp __snprintf_chk@PLT
.L_40a575:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a580:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov EBX,EDX
            mov RBP,RDI
            sub RSP,120
.L_40a599:

            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            cmp EBX,-1
            je .L_40a6b8

            mov RAX,QWORD PTR [RDI+152]
            mov R8,RCX
            mov RSI,QWORD PTR [RDI+160]
            mov ECX,EBX
            mov RDX,R13
            mov R9,QWORD PTR [RAX+224]
            call QWORD PTR [RAX+448]

            test EAX,EAX
            jne .L_40a646
.L_40a5df:

            cmp EBX,63
            lea R15,QWORD PTR [RSP+32]
            mov R12D,63
            cmovbe R12,RBX
            mov ECX,64
            mov RSI,R13
            mov RDX,R12
            mov RDI,R15
            call __strncpy_chk@PLT

            mov BYTE PTR [RSP+R12*1+32],0
            call __errno_location@PLT

            mov R12,RAX
            mov DWORD PTR [RAX],0
            lea RAX,QWORD PTR [RSP+24]
            mov EDX,10
            mov RDI,R15
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            call strtoul@PLT

            mov ESI,DWORD PTR [R12]
            test ESI,ESI
            jne .L_40a670

            mov RDX,QWORD PTR [RSP+24]
            cmp BYTE PTR [RDX],0
            jne .L_40a670
.L_40a643:

            mov DWORD PTR [R14],EAX
.L_40a646:

            mov EAX,1
.L_40a64b:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40a804

            add RSP,120
.L_40a663:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40a670:

            cmp EBX,3
            jle .L_40a6ad

            lea RDI,QWORD PTR [RIP+.L_40b03b]
            mov ECX,3
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40a700
.L_40a68f:

            lea RDI,QWORD PTR [RIP+.L_40b03f]
            mov ECX,3
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40a770
.L_40a6ad:

            xor EAX,EAX
            jmp .L_40a64b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a6b8:

            mov RDI,RSI
            call strlen@PLT

            mov R10,QWORD PTR [RBP+152]
            mov RSI,QWORD PTR [RBP+160]
            mov R8,R14
            mov ECX,EAX
            mov RDX,R13
            mov RDI,RBP
            mov R9,QWORD PTR [R10+224]
            call QWORD PTR [R10+448]

            test EAX,EAX
            jne .L_40a646

            mov RDI,R13
            call strlen@PLT

            mov EBX,EAX
            jmp .L_40a5df
          .byte 0x66
          .byte 0x90
.L_40a700:

            lea R9D,DWORD PTR [RBX-3]
            mov EAX,63
            lea RSI,QWORD PTR [R13+3]
            mov ECX,64
            mov RDI,R15
            cmp R9D,63
            cmovg R9D,EAX
            movsxd RDX,R9D
            mov DWORD PTR [RSP+12],R9D
            call __strncpy_chk@PLT

            mov R9D,DWORD PTR [RSP+12]
            mov RSI,QWORD PTR [RSP]
            mov EDX,10
            mov DWORD PTR [R12],0
            mov RDI,R15
            mov BYTE PTR [RSP+R9*1+32],0
            call strtoul@PLT

            mov ECX,DWORD PTR [R12]
            test ECX,ECX
            jne .L_40a68f

            mov RDX,QWORD PTR [RSP+24]
            cmp BYTE PTR [RDX],0
            je .L_40a643

            jmp .L_40a68f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a770:

            sub EBX,3
            mov EAX,63
            lea RSI,QWORD PTR [R13+3]
            cmp EBX,63
            mov ECX,64
            mov RDI,R15
            cmovg EBX,EAX
            movsxd RDX,EBX
            mov EBX,EBX
            call __strncpy_chk@PLT

            mov RSI,QWORD PTR [RSP]
            mov EDX,16
            mov DWORD PTR [R12],0
            mov RDI,R15
            mov BYTE PTR [RSP+RBX*1+32],0
            call strtoul@PLT

            mov EDX,DWORD PTR [R12]
            test EDX,EDX
            jne .L_40a6ad

            mov RDX,QWORD PTR [RSP+24]
            cmp BYTE PTR [RDX],0
            jne .L_40a6ad

            mov DWORD PTR [R14],0
            mov R9,QWORD PTR [RBP+152]
            mov RCX,R14
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,EAX
            mov RDI,RBP
            mov R8,QWORD PTR [R9+136]
            call QWORD PTR [R9+360]

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_40a64b
.L_40a804:

            call __stack_chk_fail@PLT
.L_40a809:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a810:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_40a819:

            test RDI,RDI
            je .L_40a8b0
.L_40a822:

            mov ESI,192
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_40a8c0

            lea RDI,QWORD PTR [RAX+8]
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            mov RDI,RBP
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            call .L_4079f0

            lea RAX,QWORD PTR [RIP+.L_6573a0]
            mov RDI,RBP
            mov QWORD PTR [RBX+120],RAX
            call .L_407750

            mov QWORD PTR [RBX+128],RAX
            lea RAX,QWORD PTR [RIP+.L_657460]
            mov RDI,RBP
            mov QWORD PTR [RBX+152],RAX
            call .L_407c20

            mov DWORD PTR [RBX+140],EAX
            mov DWORD PTR [RBX+136],EAX
            add RSP,8
.L_40a8aa:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_40a8b0:

            call .L_407740

            mov RBP,RAX
            jmp .L_40a822
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a8c0:

            lea RBX,QWORD PTR [RIP+.L_6573a0]
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_40a8d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a8e0:

            test RDI,RDI
            push RBX
.L_40a8e4:

            je .L_40a940

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+128]
            call .L_40a810

            cmp DWORD PTR [RAX],-1
            je .L_40a93d

            mov EDX,DWORD PTR [RBX]
            cmp EDX,-1
            je .L_40a909

            test EDX,EDX
            jle .L_40a960

            lock add DWORD PTR [RBX],1
.L_40a909:

            mov QWORD PTR [RAX+120],RBX
            mov EDX,DWORD PTR [RBX+136]
            mov DWORD PTR [RAX+136],EDX
            mov EDX,DWORD PTR [RBX+140]
            mov DWORD PTR [RAX+140],EDX
            mov EDX,DWORD PTR [RBX+144]
            mov DWORD PTR [RAX+144],EDX
            mov EDX,DWORD PTR [RBX+148]
            mov DWORD PTR [RAX+148],EDX
.L_40a93d:

            pop RBX
.L_40a93e:

            ret 
          .byte 0x90
.L_40a940:

            lea RDI,QWORD PTR [RIP+.L_6581e0]
            lea RBX,QWORD PTR [RIP+.L_6573a0]
            call .L_40a810

            cmp DWORD PTR [RAX],-1
            jne .L_40a909

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a960:

            lea RCX,QWORD PTR [RIP+.L_40b200]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            mov EDX,160
            call __assert_fail@PLT
.L_40a97f:

            nop
.L_40a980:

            lea RAX,QWORD PTR [RIP+.L_6573a0]
            ret 
.L_40a988:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a990:

            test RDI,RDI
            je .L_40a9a4

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40a9a4

            test EAX,EAX
            jle .L_40a9b0

            lock add DWORD PTR [RDI],1
.L_40a9a4:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a9b0:

            lea RCX,QWORD PTR [RIP+.L_40b200]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_40a9d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a9e0:

            test RDI,RDI
            je .L_40aa10

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40aa10

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_40aa18

            lock sub DWORD PTR [RDI],1
            je .L_40aa40

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40aa10:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40aa18:

            lea RCX,QWORD PTR [RIP+.L_40b1c0]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aa40:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_40ab00

            mov RDI,QWORD PTR [RDI+56]
            cmp RDI,R12
            je .L_40aa67

            call free@PLT
.L_40aa67:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_40aa77:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RDI,QWORD PTR [RBX+176]
            test RDI,RDI
            je .L_40aa9c

            cmp RDI,-1
            je .L_40aa9c

            cmp RDI,1
            je .L_40aa9c

            call .L_412690
.L_40aa9c:

            mov RDI,QWORD PTR [RBX+184]
            test RDI,RDI
            je .L_40aab9

            cmp RDI,-1
            je .L_40aab9

            cmp RDI,1
            je .L_40aab9

            call .L_430c80
.L_40aab9:

            mov RAX,QWORD PTR [RBX+168]
            test RAX,RAX
            je .L_40aace

            mov RDI,QWORD PTR [RBX+160]
            call RAX
.L_40aace:

            mov RDI,QWORD PTR [RBX+120]
            call .L_40a9e0

            mov RDI,QWORD PTR [RBX+128]
            call .L_4077a0

            mov RDI,QWORD PTR [RBX+152]
            call .L_4089d0

            mov RDI,RBX
            pop RBX
.L_40aaf3:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0x90
.L_40ab00:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_40ab4e
.L_40ab0f:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_40ab00

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_40ab0f
.L_40ab4e:

            mov RDI,QWORD PTR [RBX+56]
            cmp RDI,R12
            je .L_40ab5c

            call free@PLT
.L_40ab5c:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_40aa77
.L_40ab79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ab80:

            test RDI,RDI
            je .L_40aba8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40aba8

            sub RSP,8
            test EAX,EAX
            jle .L_40abb0

            add RDI,8
            call .L_4068c0

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40aba8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40abb0:

            lea RCX,QWORD PTR [RIP+.L_40b0e0]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            mov EDX,187
            call __assert_fail@PLT
.L_40abcf:

            nop
.L_40abd0:

            test RDI,RDI
            je .L_40ac18

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40ac18

            test EAX,EAX
            jle .L_40abf0

            add RDI,8
            jmp .L_406b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40abf0:

            lea RCX,QWORD PTR [RIP+.L_40b060]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ac18:

            xor EAX,EAX
            ret 
.L_40ac1b:

            nop
            nop
            nop
            nop
            nop
.L_40ac20:

            cmp DWORD PTR [RDI],-1
            je .L_40ac40

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            test RDI,RDI
            jne .L_40ac48

            mov DWORD PTR [RBX+112],1
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ac40:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ac48:

            call .L_40ac20

            mov DWORD PTR [RBX+112],1
            pop RBX
            ret 
.L_40ac56:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ac60:

            mov EAX,DWORD PTR [RDI+112]
            ret 
.L_40ac64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ac70:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_40aca0

            test RSI,RSI
            mov RDX,QWORD PTR [RDI+120]
            je .L_40aca8

            mov EAX,DWORD PTR [RSI]
            cmp EAX,-1
            je .L_40ac8f

            test EAX,EAX
            jle .L_40acc0

            lock add DWORD PTR [RSI],1
.L_40ac8f:

            mov QWORD PTR [RDI+120],RSI
            mov RDI,RDX
            jmp .L_40a9e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40aca0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40aca8:

            lea RSI,QWORD PTR [RIP+.L_6573a0]
            mov QWORD PTR [RDI+120],RSI
            mov RDI,RDX
            jmp .L_40a9e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40acc0:

            lea RCX,QWORD PTR [RIP+.L_40b200]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            sub RSP,8

            mov EDX,160
            call __assert_fail@PLT
.L_40ace3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40acf0:

            mov RAX,QWORD PTR [RDI+120]
            ret 
.L_40acf5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ad00:

            mov RAX,QWORD PTR [RDI+128]
            ret 
.L_40ad08:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ad10:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            sub RSP,8
            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_40ad40

            test RCX,RCX
            je .L_40ad92

            add RSP,8
            mov RDI,RDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ad40:

            mov RAX,QWORD PTR [RDI+168]
            mov RBX,RDI
            mov RBP,RSI
            test RAX,RAX
            je .L_40ad5b

            mov RDI,QWORD PTR [RDI+160]
            call RAX
.L_40ad5b:

            test RBP,RBP
            je .L_40ada0

            mov EAX,DWORD PTR [RBP]
            cmp EAX,-1
            je .L_40ad71

            test EAX,EAX
            jle .L_40adb0

            lock add DWORD PTR [RBP],1
.L_40ad71:

            mov RDI,QWORD PTR [RBX+152]
            call .L_4089d0

            mov QWORD PTR [RBX+152],RBP
            mov QWORD PTR [RBX+160],R13
            mov QWORD PTR [RBX+168],R12
.L_40ad92:

            add RSP,8
.L_40ad96:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ada0:

            lea RBP,QWORD PTR [RIP+.L_657460]
            jmp .L_40ad71
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40adb0:

            lea RCX,QWORD PTR [RIP+.L_40b400]
            lea RSI,QWORD PTR [RIP+.L_40b007]
            lea RDI,QWORD PTR [RIP+.L_40b01c]
            mov EDX,160
            call __assert_fail@PLT
.L_40adcf:

            nop
.L_40add0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_40ade8

            test RDX,RDX
            je .L_40ae20

            mov RDI,RSI
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ade8:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RAX,QWORD PTR [RDI+168]
            mov RBP,RDX
            mov RBX,RDI
            test RAX,RAX
            je .L_40ae0a

            mov RDI,QWORD PTR [RDI+160]
            call RAX
.L_40ae0a:

            mov QWORD PTR [RBX+160],R12
            mov QWORD PTR [RBX+168],RBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ae20:

            ret 
.L_40ae22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ae30:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_40ae43

            mov DWORD PTR [RDI+136],ESI
            mov DWORD PTR [RDI+140],EDX
.L_40ae43:

            ret 
.L_40ae45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ae50:

            test RSI,RSI
            je .L_40ae5d

            mov EAX,DWORD PTR [RDI+136]
            mov DWORD PTR [RSI],EAX
.L_40ae5d:

            test RDX,RDX
            je .L_40ae6a

            mov EAX,DWORD PTR [RDI+140]
            mov DWORD PTR [RDX],EAX
.L_40ae6a:

            ret 
.L_40ae6c:

            nop
            nop
            nop
            nop
.L_40ae70:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_40ae83

            mov DWORD PTR [RDI+144],ESI
            mov DWORD PTR [RDI+148],EDX
.L_40ae83:

            ret 
.L_40ae85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ae90:

            test RSI,RSI
            je .L_40ae9d

            mov EAX,DWORD PTR [RDI+144]
            mov DWORD PTR [RSI],EAX
.L_40ae9d:

            test RDX,RDX
            je .L_40aeaa

            mov EAX,DWORD PTR [RDI+148]
            mov DWORD PTR [RDX],EAX
.L_40aeaa:

            ret 
.L_40aeac:

            nop
            nop
            nop
            nop
.L_40aeb0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov ESI,32
            push RBX
.L_40aec0:

            mov RBP,RDI
            mov EDI,1
            mov R13,RDX
            mov R12,RCX
            call calloc@PLT

            test RAX,RAX
            je .L_40afc0

            mov RBX,RAX
            mov QWORD PTR [RAX],R13
            mov QWORD PTR [RAX+8],R12
            mov DWORD PTR [RAX+16],1
            mov QWORD PTR [RAX+24],R14
            mov EAX,DWORD PTR [RBP+112]
            test EAX,EAX
            jne .L_40af90

            mov RAX,QWORD PTR [RBP+248]
            test RAX,RAX
            je .L_40afd8

            mov RDI,QWORD PTR [RBP+136]
            lea R12,QWORD PTR [RIP+.L_4083f0]
            call RAX

            mov EAX,DWORD PTR [RBX+16]
            lea RCX,QWORD PTR [RIP+.L_4081b0]
            mov EDX,DWORD PTR [RBP+112]
            mov QWORD PTR [RBP+136],RBX
            mov QWORD PTR [RBP+360],RCX
            lea RCX,QWORD PTR [RIP+.L_4083f0]
            add EAX,1
            test EDX,EDX
            mov QWORD PTR [RBP+248],RCX
            mov DWORD PTR [RBX+16],EAX
            jne .L_40afaf
.L_40af4f:

            mov RAX,QWORD PTR [RBP+256]
            test RAX,RAX
            je .L_40af64

            mov RDI,QWORD PTR [RBP+144]
            call RAX
.L_40af64:

            lea RAX,QWORD PTR [RIP+.L_4081c0]
            mov QWORD PTR [RBP+144],RBX
            mov QWORD PTR [RBP+256],R12
            mov QWORD PTR [RBP+368],RAX
.L_40af80:

            pop RBX
.L_40af81:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40af90:

            mov RDI,RBX
            lea R12,QWORD PTR [RIP+.L_4083f0]
            call .L_4083f0

            mov EAX,DWORD PTR [RBX+16]
            mov EDX,DWORD PTR [RBP+112]
            add EAX,1
            test EDX,EDX
            mov DWORD PTR [RBX+16],EAX
            je .L_40af4f
.L_40afaf:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_4083f0
          .byte 0x90
.L_40afc0:

            test R12,R12
            je .L_40af80

            pop RBX
            mov RDI,R13
            mov RAX,R12
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40afd8:

            lea RAX,QWORD PTR [RIP+.L_4081b0]
            lea R12,QWORD PTR [RIP+.L_4083f0]
            mov QWORD PTR [RBP+136],RBX
            mov DWORD PTR [RBX+16],2
            mov QWORD PTR [RBP+360],RAX
            mov QWORD PTR [RBP+248],R12
            jmp .L_40af4f
.L_40b007:
          .string "hb-object-private.hh"
.L_40b01c:
          .string "hb_object_is_valid (obj)"
.L_40b035:
          .string "gid%u"
.L_40b03b:
          .byte 0x67
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_40b03f:
          .byte 0x75
          .byte 0x6e
          .byte 0x69
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b060:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_font_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 5
.L_40b0e0:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_font_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 11
.L_40b1c0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_font_t]"
          .zero 10
.L_40b200:
          .string "Type* hb_object_reference(Type*) [with Type = hb_font_t]"
          .zero 7
.L_40b240:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_font_funcs_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 31
.L_40b2e0:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_font_funcs_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 5
.L_40b3c0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_font_funcs_t]"
          .zero 4
.L_40b400:
          .string "Type* hb_object_reference(Type*) [with Type = hb_font_funcs_t]"
          .byte 0x90
.L_40b440:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xe9
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b450:

            mov RAX,QWORD PTR [RDI]
            cmp RSI,RAX
            jbe .L_40b47c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b460:

            movzx EDX,BYTE PTR [RAX]
            cmp DL,32
            je .L_40b470

            sub EDX,9
            cmp DL,4
            ja .L_40b47c
.L_40b470:

            add RAX,1
            cmp RAX,RSI
            mov QWORD PTR [RDI],RAX
            jne .L_40b460
.L_40b47c:

            mov EAX,1
            ret 
.L_40b482:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b490:

            push R13
            push R12
            mov ECX,32
            push RBP
            push RBX
            mov RBX,RSI
            mov R13,RDI
            mov R12,RDX
            sub RSP,72
.L_40b4a8:

            mov RSI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov EAX,31
            lea RBP,QWORD PTR [RSP+16]
            sub RBX,RSI
            cmp EBX,31
            mov RDI,RBP
            cmova EBX,EAX
            mov EBX,EBX
            mov RDX,RBX
            call __strncpy_chk@PLT

            mov BYTE PTR [RSP+RBX*1+16],0
            mov QWORD PTR [RSP+8],RBP
            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov RBX,RAX
            mov DWORD PTR [RAX],0
            mov RDI,RBP
            call strtol@PLT

            mov ECX,DWORD PTR [RBX]
            xor EDX,EDX
            test ECX,ECX
            jne .L_40b524

            mov RCX,QWORD PTR [RSP+8]
            cmp RCX,RBP
            je .L_40b524

            mov DWORD PTR [R12],EAX
            sub RCX,RBP
            add QWORD PTR [R13],RCX
            mov EDX,1
.L_40b524:

            mov RDI,QWORD PTR [RSP+56]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40b541

            add RSP,72
.L_40b53a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40b541:

            call __stack_chk_fail@PLT
.L_40b546:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b550:

            mov RDI,QWORD PTR [RIP+.L_6583d0]
            jmp free@PLT
.L_40b55c:

            nop
            nop
            nop
            nop
.L_40b560:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_40b572:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test ESI,ESI
            mov QWORD PTR [RSP+8],RDI
            jns .L_40b592

            call strlen@PLT

            mov ESI,EAX
.L_40b592:

            movsxd RSI,ESI
            lea RBP,QWORD PTR [RSP+8]
            add RBX,RSI
            mov RSI,RBX
            mov RDI,RBP
            call .L_40b450

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40b5bb

            cmp BYTE PTR [RAX],45
            je .L_40b788
.L_40b5bb:

            mov RSI,RBX
            mov RDI,RBP
            call .L_40b450

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40b5d9

            cmp BYTE PTR [RAX],43
            je .L_40b7a0
.L_40b5d9:

            mov DWORD PTR [RSP+20],1
.L_40b5e1:

            mov RSI,RBX
            mov RDI,RBP
            call .L_40b450

            mov R13,QWORD PTR [RSP+8]
            cmp RBX,R13
            jbe .L_40b750

            movzx EDX,BYTE PTR [R13]
            cmp DL,39
            je .L_40b7b0

            xor R14D,R14D
            cmp DL,34
            je .L_40b7b0
.L_40b614:

            mov RSI,R13
            jmp .L_40b623
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b620:

            movzx EDX,BYTE PTR [RSI]
.L_40b623:

            mov EAX,EDX
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_40b637

            sub EDX,48
            cmp DL,9
            ja .L_40b645
.L_40b637:

            add RSI,1
            cmp RBX,RSI
            mov QWORD PTR [RSP+8],RSI
            ja .L_40b620
.L_40b645:

            cmp R13,RSI
            je .L_40b750

            sub RSI,R13
            cmp RSI,4
            jg .L_40b750

            mov RDI,R13
            call .L_406430

            test R14B,R14B
            mov DWORD PTR [RSP+16],EAX
            je .L_40b6a0

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,RAX
            sub RDX,R13
            cmp RDX,4
            jne .L_40b750

            cmp RBX,RAX
            je .L_40b750

            cmp BYTE PTR [RAX],R14B
            jne .L_40b750

            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
.L_40b6a0:

            mov RSI,RBX
            mov RDI,RBP
            lea R14,QWORD PTR [RSP+16]
            call .L_40b450

            movabs RAX,-4294967296
            mov QWORD PTR [RSP+24],RAX
            call .L_40b450

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40b6d7

            cmp BYTE PTR [RAX],91
            je .L_40b7ce
.L_40b6d7:

            mov RSI,RBX
            mov RDI,RBP
            xor R13D,R13D
            call .L_40b450

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40b703

            cmp BYTE PTR [RAX],61
            jne .L_40b703

            add RAX,1
            mov R13D,1
            mov QWORD PTR [RSP+8],RAX
.L_40b703:

            lea RDX,QWORD PTR [R14+4]
            mov RSI,RBX
            mov RDI,RBP
            call .L_40b490

            test AL,AL
            je .L_40b83f
.L_40b71a:

            mov RSI,RBX
            mov RDI,RBP
            call .L_40b450

            test AL,AL
            je .L_40b750

            cmp RBX,QWORD PTR [RSP+8]
            jne .L_40b750

            test R12,R12
            je .L_40b740

            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [R12],XMM0
.L_40b740:

            mov EAX,1
            jmp .L_40b760
.L_40b747:

            test R13B,R13B
            je .L_40b71a

            nop
            nop
            nop
            nop
.L_40b750:

            test R12,R12
            je .L_40b75e

            pxor XMM0,XMM0
            movups XMMWORD PTR [R12],XMM0
.L_40b75e:

            xor EAX,EAX
.L_40b760:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40b923

            add RSP,48
.L_40b778:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b788:

            add RAX,1
            mov DWORD PTR [RSP+20],0
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40b5e1
          .byte 0x66
          .byte 0x90
.L_40b7a0:

            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40b5d9
          .byte 0x66
          .byte 0x90
.L_40b7b0:

            lea RAX,QWORD PTR [R13+1]
            cmp RBX,RAX
            mov QWORD PTR [RSP+8],RAX
            jbe .L_40b750

            mov R14D,EDX
            movzx EDX,BYTE PTR [R13+1]
            mov R13,RAX
            jmp .L_40b614
.L_40b7ce:

            lea RDX,QWORD PTR [R14+8]
            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            call .L_40b490

            mov RSI,RBX
            mov RDI,RBP
            mov ECX,EAX
            call .L_40b450

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40b800

            cmp BYTE PTR [RAX],58
            je .L_40b90c
.L_40b800:

            test CL,CL
            je .L_40b80f

            mov EAX,DWORD PTR [RSP+24]
            add EAX,1
            mov DWORD PTR [RSP+28],EAX
.L_40b80f:

            mov RSI,RBX
            mov RDI,RBP
            call .L_40b450

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40b750

            cmp BYTE PTR [RAX],93
            jne .L_40b750

            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40b6d7
.L_40b83f:

            mov RSI,RBX
            mov RDI,RBP
            call .L_40b450

            mov R8,QWORD PTR [RSP+8]
            cmp RBX,R8
            jbe .L_40b8e5

            movzx EAX,BYTE PTR [R8]
            lea RDX,QWORD PTR [R8+1]
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_40b884

            jmp .L_40b8e5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b870:

            movzx EAX,BYTE PTR [RDX]
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            ja .L_40b891

            mov RDX,RCX
.L_40b884:

            cmp RBX,RDX
            mov QWORD PTR [RSP+8],RDX
            jne .L_40b870

            mov RDX,RBX
.L_40b891:

            sub RDX,R8
            cmp RDX,2
            je .L_40b8ff

            lea RDI,QWORD PTR [RIP+.L_40bcb5]
            mov ECX,2
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40b8ff

            cmp RDX,3
            je .L_40b8d8
.L_40b8ba:

            lea RDI,QWORD PTR [RIP+.L_40bcb8]
            mov ECX,2
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40b747
.L_40b8d8:

            mov DWORD PTR [RSP+20],0
            jmp .L_40b71a
.L_40b8e5:

            lea RDI,QWORD PTR [RIP+.L_40bcb5]
            mov ECX,2
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40b8ba
.L_40b8ff:

            mov DWORD PTR [RSP+20],1
            jmp .L_40b71a
.L_40b90c:

            lea RDX,QWORD PTR [R14+12]
            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            call .L_40b490

            jmp .L_40b80f
.L_40b923:

            call __stack_chk_fail@PLT
.L_40b928:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b930:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_40b941:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test EDX,EDX
            je .L_40ba7a

            mov EAX,DWORD PTR [RDI+4]
            mov R14,RDI
            mov RBP,RSI
            mov R12D,EDX
            test EAX,EAX
            je .L_40baa8

            mov R13,RSP
            mov R15D,4
            mov RSI,R13
.L_40b97c:

            mov EDI,DWORD PTR [R14]
            call .L_4064d0

            lea ECX,DWORD PTR [R15-1]
            mov RDX,RCX
            add RCX,R13
            jmp .L_40b993
.L_40b990:

            sub EDX,1
.L_40b993:

            cmp BYTE PTR [RCX],32
            mov EBX,EDX
            jne .L_40bb78

            sub RCX,1
            test EDX,EDX
            mov R15D,EDX
            jne .L_40b990
.L_40b9a9:

            mov R9D,DWORD PTR [R14+8]
            test R9D,R9D
            jne .L_40bb10

            mov R9D,DWORD PTR [R14+12]
            cmp R9D,-1
            je .L_40ba09

            mov EDX,EBX
            cmp R9D,1
            lea EAX,DWORD PTR [RBX+1]
            mov BYTE PTR [RSP+RDX*1],91
            je .L_40bb80

            add EBX,2
            mov BYTE PTR [RSP+RAX*1],58
.L_40b9da:

            mov EDI,EBX
            mov ESI,128
            lea R8,QWORD PTR [RIP+.L_40bcbc]
            sub ESI,EBX
            add RDI,R13
            mov RCX,-1
            mov EDX,1
            xor EAX,EAX
            call __snprintf_chk@PLT

            add EAX,EBX
            lea EBX,DWORD PTR [RAX+1]
            mov BYTE PTR [RSP+RAX*1],93
.L_40ba09:

            mov R9D,DWORD PTR [R14+4]
            cmp R9D,1
            jbe .L_40ba45

            lea EDI,DWORD PTR [RBX+1]
            mov ESI,128
            lea R8,QWORD PTR [RIP+.L_40bcbc]
            mov RCX,-1
            mov EDX,1
            xor EAX,EAX
            mov R14,RDI
            sub ESI,EDI
            add RDI,R13
            mov BYTE PTR [RSP+RBX*1],61
            call __snprintf_chk@PLT

            lea EBX,DWORD PTR [RAX+R14*1]
.L_40ba45:

            sub R12D,1
            cmp R12D,EBX
            cmovbe EBX,R12D
            cmp EBX,8
            mov EAX,EBX
            jae .L_40bac0

            test BL,4
            jne .L_40bb95

            test EBX,EBX
            je .L_40ba75

            movzx EDX,BYTE PTR [R13]
            and EBX,2
            mov BYTE PTR [RBP],DL
            jne .L_40bb85
.L_40ba75:

            mov BYTE PTR [RBP+RAX*1],0
.L_40ba7a:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40bbaa

            add RSP,152
.L_40ba98:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40baa8:

            mov R13,RSP
            mov BYTE PTR [RSP],45
            mov R15D,5
            lea RSI,QWORD PTR [R13+1]
            jmp .L_40b97c
          .byte 0x66
          .byte 0x90
.L_40bac0:

            mov RDX,QWORD PTR [RSP]
            mov RCX,RBP
            mov QWORD PTR [RBP],RDX
            mov RDX,QWORD PTR [R13+RAX*1-8]
            mov QWORD PTR [RBP+RAX*1-8],RDX
            lea RDX,QWORD PTR [RBP+8]
            and RDX,-8
            sub RCX,RDX
            add EBX,ECX
            sub R13,RCX
            and EBX,4294967288
            cmp EBX,8
            jb .L_40ba75

            and EBX,4294967288
            xor ECX,ECX
.L_40baf2:

            mov ESI,ECX
            add ECX,8
            mov RDI,QWORD PTR [R13+RSI*1]
            cmp ECX,EBX
            mov QWORD PTR [RDX+RSI*1],RDI
            jb .L_40baf2

            jmp .L_40ba75
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bb10:

            lea EDI,DWORD PTR [RBX+1]
            mov ESI,128
            lea R8,QWORD PTR [RIP+.L_40bcbc]
            mov EDX,1
            xor EAX,EAX
            mov RCX,-1
            sub ESI,EDI
            mov R15,RDI
            add RDI,R13
            mov BYTE PTR [RSP+RBX*1],91
            call __snprintf_chk@PLT

            mov EDI,DWORD PTR [R14+8]
            mov R9D,DWORD PTR [R14+12]
            add EAX,R15D
            lea EBX,DWORD PTR [RAX+1]
            lea EDX,DWORD PTR [RDI+1]
            cmp R9D,EDX
            je .L_40bb6b

            mov EDX,EAX
            cmp R9D,-1
            mov BYTE PTR [RSP+RDX*1],58
            jne .L_40b9da

            lea EDX,DWORD PTR [RAX+2]
            mov EAX,EBX
            mov EBX,EDX
.L_40bb6b:

            mov BYTE PTR [RSP+RAX*1],93
            jmp .L_40ba09
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40bb78:

            mov EBX,R15D
            jmp .L_40b9a9
.L_40bb80:

            add EBX,2
            jmp .L_40bb6b
.L_40bb85:

            movzx EDX,WORD PTR [R13+RAX*1-2]
            mov WORD PTR [RBP+RAX*1-2],DX
            jmp .L_40ba75
.L_40bb95:

            mov EDX,DWORD PTR [R13]
            mov DWORD PTR [RBP],EDX
            mov EDX,DWORD PTR [R13+RAX*1-4]
            mov DWORD PTR [RBP+RAX*1-4],EDX
            jmp .L_40ba75
.L_40bbaa:

            call __stack_chk_fail@PLT
.L_40bbaf:

            nop
.L_40bbb0:

            push RBP
            push RBX
            xor EBP,EBP
            sub RSP,8
.L_40bbb8:

            mfence 
            mov RBX,QWORD PTR [RIP+.L_6583d0]
            test RBX,RBX
            je .L_40bbd8
.L_40bbc7:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bbd8:

            mov ESI,8
            mov EDI,3
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_40bc28

            call .L_40d1e0

            mov QWORD PTR [RBX],RAX
            add RAX,24
            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],RAX
            mov RAX,RBP
            lock cmpxchg QWORD PTR [RIP+.L_6583d0],RBX
            jne .L_40bc31

            lea RDI,QWORD PTR [RIP+.L_40b550]
            call .L_44dae0

            jmp .L_40bbc7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bc28:

            lea RBX,QWORD PTR [RIP+.L_6583c8]
            jmp .L_40bbc7
.L_40bc31:

            mov RDI,RBX
            call free@PLT

            jmp .L_40bbb8
.L_40bc3e:

            nop
            nop
.L_40bc40:

            push R14
            push R13
            mov R14D,ECX
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40bc4e:

            mov RDI,QWORD PTR [RDI+128]
            mov R13,RDX
            mov RBX,RSI
            add RSI,144
            call .L_40c7b0

            mov RSI,RBP
            mov R12,RAX
            mov R8D,R14D
            mov RCX,R13
            mov RDX,RBX
            mov RDI,RAX
            call .L_40c4e0

            mov RDI,R12
            mov EBP,EAX
            call .L_40c2d0

            test EBP,EBP
            je .L_40bc96

            mov DWORD PTR [RBX+140],2
.L_40bc96:

            pop RBX
.L_40bc97:

            mov EAX,EBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_40bca1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bcb0:

            xor R8D,R8D
            jmp .L_40bc40
.L_40bcb5:
          .byte 0x6f
          .byte 0x6e
          .byte 0x0
.L_40bcb8:
          .byte 0x6f
          .byte 0x66
          .byte 0x66
          .byte 0x0
.L_40bcbc:
          .string "%u"
          .byte 0x90
.L_40bcc0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov R12D,ECX
            mov RBX,R8
            sub RSP,40
.L_40bcda:

            test RDI,RDI
            mov QWORD PTR [RSP+8],RDX
            je .L_40bea8
.L_40bce8:

            test RBP,RBP
            je .L_40be68

            test R12D,R12D
            jne .L_40be88

            xor R14D,R14D
.L_40bcfd:

            mov ESI,208
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_40be60

            lea RDI,QWORD PTR [RAX+8]
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [R15+48]
            movups XMMWORD PTR [R15+48],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            movups XMMWORD PTR [RAX+32],XMM0
            movups XMMWORD PTR [RAX+48],XMM0
            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_40c247

            mov RDI,R13
            call .L_4079f0

            movdqu XMM0,XMMWORD PTR [RBP]
            xor EAX,EAX
            test RBX,RBX
            mov QWORD PTR [R15+120],R13
            mov DWORD PTR [R15+184],R12D
            movups XMMWORD PTR [R15+128],XMM0
            sete AL
            test R12D,R12D
            mov QWORD PTR [R15+176],R14
            movdqu XMM0,XMMWORD PTR [RBP+16]
            mov DWORD PTR [R15+112],EAX
            movups XMMWORD PTR [R15+144],XMM0
            jne .L_40beb8

            call .L_40d1e0

            test RBX,RBX
            mov R13,RAX
            je .L_40bedd
.L_40bda7:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_40be6f

            lea RBP,QWORD PTR [RIP+.L_40cc79]
            lea R13,QWORD PTR [RIP+.L_40cc7c]
            mov R14,-1
            jmp .L_40bdf6

            nop
            nop
            nop
            nop
            nop
            nop
.L_40bdd0:

            mov RSI,RAX
            mov ECX,9
            mov RDI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40bfe0
.L_40bdea:

            add RBX,8
            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_40be6f
.L_40bdf6:

            mov ECX,3
            mov RSI,RAX
            mov RDI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_40bdd0

            mov RCX,QWORD PTR [R15+120]
.L_40be11:

            mfence 
            mov RDX,QWORD PTR [RCX+160]
            test RDX,RDX
            je .L_40bf68

            sub RDX,1
.L_40be28:

            cmp RDX,-3
            ja .L_40bdea

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R15
            call .L_4126a0

            mov QWORD PTR [R15+192],RAX
            lea RAX,QWORD PTR [RIP+.L_413350]
            mov QWORD PTR [R15+168],RBP
            mov QWORD PTR [R15+160],RAX
            jmp .L_40be6f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40be60:

            mov RDI,R14
            call free@PLT
.L_40be68:

            lea R15,QWORD PTR [RIP+.L_40d0e0]
.L_40be6f:

            add RSP,40
.L_40be73:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40be88:

            mov EDI,R12D
            mov ESI,16
            call calloc@PLT

            test RAX,RAX
            mov R14,RAX
            jne .L_40bcfd

            jmp .L_40be68
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bea8:

            call .L_407740

            mov R13,RAX
            jmp .L_40bce8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40beb8:

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R14
            shl RDX,4
            call memcpy@PLT

            call .L_40d1e0

            test RBX,RBX
            mov R13,RAX
            jne .L_40bda7
.L_40bedd:

            lea R14,QWORD PTR [RIP+.L_413350]
            lea RBP,QWORD PTR [RIP+.L_430cb0]
            jmp .L_40bf07
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bef0:

            cmp RAX,RBP
            je .L_40c040
.L_40bef9:

            add RBX,24
            cmp RBX,48
            je .L_40be6f
.L_40bf07:

            mov RAX,QWORD PTR [R13+RBX*1+16]
            cmp RAX,R14
            jne .L_40bef0

            mov RSI,QWORD PTR [R15+120]
.L_40bf15:

            mfence 
            mov RDX,QWORD PTR [RSI+160]
            test RDX,RDX
            je .L_40c0a0

            sub RDX,1
.L_40bf2c:

            cmp RDX,-3
            ja .L_40bef9

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R15
            call .L_4126a0

            mov QWORD PTR [R15+192],RAX
            lea RAX,QWORD PTR [RIP+.L_40cc79]
            mov QWORD PTR [R15+160],R14
            mov QWORD PTR [R15+168],RAX
            jmp .L_40be6f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bf68:

            mov RDI,RCX
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+24],RDX
            call .L_412660

            mov RCX,QWORD PTR [RSP+16]
            test RAX,RAX
            mov RDI,RAX
            lea RSI,QWORD PTR [RCX+160]
            je .L_40c220

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,RDX
            lock cmpxchg QWORD PTR [RSI],RDI
            sete AL
            lea RDX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40be28

            cmp RDX,-3
            ja .L_40be11

            cmp RDI,1
            je .L_40be11

            mov QWORD PTR [RSP+16],RCX
            call .L_412670

            mov RCX,QWORD PTR [RSP+16]
            jmp .L_40be11
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bfe0:

            mov RCX,QWORD PTR [R15+120]
.L_40bfe4:

            mfence 
            mov RDX,QWORD PTR [RCX+168]
            test RDX,RDX
            je .L_40c110

            sub RDX,1
.L_40bffb:

            cmp RDX,-3
            ja .L_40bdea

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R15
            call .L_430c90

            mov QWORD PTR [R15+200],RAX
            lea RAX,QWORD PTR [RIP+.L_430cb0]
            mov QWORD PTR [R15+168],R13
            mov QWORD PTR [R15+160],RAX
            jmp .L_40be6f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c040:

            mov RSI,QWORD PTR [R15+120]
.L_40c044:

            mfence 
            mov RDX,QWORD PTR [RSI+168]
            test RDX,RDX
            je .L_40c1b0

            sub RDX,1
.L_40c05b:

            cmp RDX,-3
            ja .L_40bef9

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R15
            call .L_430c90

            mov QWORD PTR [R15+200],RAX
            lea RAX,QWORD PTR [RIP+.L_40cc7c]
            mov QWORD PTR [R15+160],RBP
            mov QWORD PTR [R15+168],RAX
            jmp .L_40be6f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c0a0:

            mov RDI,RSI
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            call .L_412660

            mov RSI,QWORD PTR [RSP+16]
            test RAX,RAX
            mov RDI,RAX
            lea R9,QWORD PTR [RSI+160]
            je .L_40c180

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,RDX
            lock cmpxchg QWORD PTR [R9],RDI
            sete AL
            lea RDX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40bf2c

            cmp RDI,1
            je .L_40bf15

            cmp RDX,-3
            ja .L_40bf15

            mov QWORD PTR [RSP+16],RSI
            call .L_412670

            mov RSI,QWORD PTR [RSP+16]
            jmp .L_40bf15
          .byte 0x66
          .byte 0x90
.L_40c110:

            mov RDI,RCX
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+24],RDX
            call .L_430c50

            mov RCX,QWORD PTR [RSP+16]
            test RAX,RAX
            mov RDI,RAX
            lea RSI,QWORD PTR [RCX+168]
            je .L_40c1a0

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,RDX
            lock cmpxchg QWORD PTR [RSI],RDI
            sete AL
            lea RDX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40bffb

            cmp RDX,-3
            ja .L_40bfe4

            cmp RDI,1
            je .L_40bfe4

            mov QWORD PTR [RSP+16],RCX
            call .L_430c60

            mov RCX,QWORD PTR [RSP+16]
            jmp .L_40bfe4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c180:

            mov RCX,-1
            lock cmpxchg QWORD PTR [R9],RCX
            je .L_40bef9

            jmp .L_40bf15
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c1a0:

            lock cmpxchg QWORD PTR [RSI],R14
            je .L_40bdea

            jmp .L_40bfe4
.L_40c1b0:

            mov RDI,RSI
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            call .L_430c50

            mov RSI,QWORD PTR [RSP+16]
            test RAX,RAX
            mov RDI,RAX
            lea R9,QWORD PTR [RSI+168]
            je .L_40c230

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,RDX
            lock cmpxchg QWORD PTR [R9],RDI
            sete AL
            lea RDX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40c05b

            cmp RDI,1
            je .L_40c044

            cmp RDX,-3
            ja .L_40c044

            mov QWORD PTR [RSP+16],RSI
            call .L_430c60

            mov RSI,QWORD PTR [RSP+16]
            jmp .L_40c044
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c220:

            lock cmpxchg QWORD PTR [RSI],R14
            je .L_40bdea

            jmp .L_40be11
.L_40c230:

            mov RCX,-1
            lock cmpxchg QWORD PTR [R9],RCX
            je .L_40bef9

            jmp .L_40c044
.L_40c247:

            lea RCX,QWORD PTR [RIP+.L_40d040]
            lea RSI,QWORD PTR [RIP+.L_40cc68]
            lea RDI,QWORD PTR [RIP+.L_40ccd0]
            mov EDX,138
            call __assert_fail@PLT
.L_40c266:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c270:

            lea RAX,QWORD PTR [RIP+.L_40d0e0]
            ret 
.L_40c278:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c280:

            test RDI,RDI
            je .L_40c294

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40c294

            test EAX,EAX
            jle .L_40c2a0

            lock add DWORD PTR [RDI],1
.L_40c294:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c2a0:

            lea RCX,QWORD PTR [RIP+.L_40d000]
            lea RSI,QWORD PTR [RIP+.L_40cc85]
            lea RDI,QWORD PTR [RIP+.L_40cc9a]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_40c2c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c2d0:

            test RDI,RDI
            je .L_40c320

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40c320

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_40c300

            lock sub DWORD PTR [RDI],1
            je .L_40c328

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c300:

            lea RCX,QWORD PTR [RIP+.L_40cfc0]
            lea RSI,QWORD PTR [RIP+.L_40cc85]
            lea RDI,QWORD PTR [RIP+.L_40cc9a]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x90
.L_40c320:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c328:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_40c3c0

            mov RDI,QWORD PTR [RDI+56]
            cmp R12,RDI
            je .L_40c34f

            call free@PLT
.L_40c34f:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_40c35f:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RDI,QWORD PTR [RBX+192]
            test RDI,RDI
            je .L_40c384

            cmp RDI,-1
            je .L_40c384

            cmp RDI,1
            je .L_40c384

            call .L_413260
.L_40c384:

            mov RDI,QWORD PTR [RBX+200]
            test RDI,RDI
            je .L_40c3a1

            cmp RDI,-1
            je .L_40c3a1

            cmp RDI,1
            je .L_40c3a1

            call .L_430ca0
.L_40c3a1:

            mov RDI,QWORD PTR [RBX+176]
            call free@PLT

            mov RDI,RBX
            pop RBX
.L_40c3b1:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c3c0:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_40c40e
.L_40c3cf:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_40c3c0

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_40c3cf
.L_40c40e:

            mov RDI,QWORD PTR [RBX+56]
            cmp R12,RDI
            je .L_40c41c

            call free@PLT
.L_40c41c:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_40c35f
.L_40c439:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c440:

            test RDI,RDI
            je .L_40c468

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40c468

            sub RSP,8
            test EAX,EAX
            jle .L_40c470

            add RDI,8
            call .L_4068c0

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c468:

            xor EAX,EAX
            ret 

            nop
            nop
            nop
            nop
            nop
.L_40c470:

            lea RCX,QWORD PTR [RIP+.L_40cee0]
            lea RSI,QWORD PTR [RIP+.L_40cc85]
            lea RDI,QWORD PTR [RIP+.L_40cc9a]
            mov EDX,187
            call __assert_fail@PLT
.L_40c48f:

            nop
.L_40c490:

            test RDI,RDI
            je .L_40c4d8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40c4d8

            test EAX,EAX
            jle .L_40c4b0

            add RDI,8
            jmp .L_406b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c4b0:

            lea RCX,QWORD PTR [RIP+.L_40ce40]
            lea RSI,QWORD PTR [RIP+.L_40cc85]
            lea RDI,QWORD PTR [RIP+.L_40cc9a]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c4d8:

            xor EAX,EAX
            ret 
.L_40c4db:

            nop
            nop
            nop
            nop
            nop
.L_40c4e0:

            mov EAX,DWORD PTR [RDX+184]
            test EAX,EAX
            jne .L_40c4f0

            mov EAX,1
            ret 
.L_40c4f0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13D,R8D
            push RBP
            push RBX
            mov R12,RCX
            mov RBX,RDX
            mov RBP,RDI
            sub RSP,24
.L_40c50d:

            cmp DWORD PTR [RDX],-1
            je .L_40c588

            cmp DWORD PTR [RDX+140],1
            jne .L_40c78e

            cmp DWORD PTR [RDI],-1
            je .L_40c573

            mov RAX,QWORD PTR [RSI+128]
            cmp QWORD PTR [RDI+120],RAX
            jne .L_40c76f

            lea RSI,QWORD PTR [RDX+144]
            lea RDI,QWORD PTR [RDI+128]
            call .L_4023d0

            test EAX,EAX
            je .L_40c750

            mov RAX,QWORD PTR [RBP+160]
            lea RDX,QWORD PTR [RIP+.L_413350]
            cmp RAX,RDX
            je .L_40c5b0

            lea RDX,QWORD PTR [RIP+.L_430cb0]
            cmp RAX,RDX
            je .L_40c600
.L_40c573:

            xor EAX,EAX
.L_40c575:

            add RSP,24
.L_40c579:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c588:

            lea RCX,QWORD PTR [RIP+.L_40cdc0]
            lea RSI,QWORD PTR [RIP+.L_40cc68]
            lea RDI,QWORD PTR [RIP+.L_40ccb3]
            mov EDX,300
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c5b0:

            cmp QWORD PTR [RBP+192],0
            mov RDX,-1
            je .L_40c573
.L_40c5c1:

            mfence 
            mov R15,QWORD PTR [R14+176]
            test R15,R15
            je .L_40c660

            sub R15,1
.L_40c5d8:

            cmp R15,-3
            ja .L_40c573

            mov R8D,R13D
            mov RCX,R12
            mov RDX,RBX
            mov RSI,R14
            mov RDI,RBP
            call .L_413350

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_40c575
          .byte 0x90
.L_40c600:

            cmp QWORD PTR [RBP+200],0
            mov RDX,-1
            je .L_40c573
.L_40c615:

            mfence 
            mov R15,QWORD PTR [R14+184]
            test R15,R15
            je .L_40c6c8

            sub R15,1
.L_40c62c:

            cmp R15,-3
            ja .L_40c573

            mov R8D,R13D
            mov RCX,R12
            mov RDX,RBX
            mov RSI,R14
            mov RDI,RBP
            call .L_430cb0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_40c575
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c660:

            mov RDI,R14
            mov QWORD PTR [RSP+8],RDX
            call .L_412680

            test RAX,RAX
            mov RDI,RAX
            lea RCX,QWORD PTR [R14+176]
            mov RDX,QWORD PTR [RSP+8]
            je .L_40c730

            mov RAX,R15
            lock cmpxchg QWORD PTR [RCX],RDI
            sete AL
            lea R15,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40c5d8

            cmp RDI,1
            je .L_40c5c1

            cmp R15,-3
            ja .L_40c5c1

            mov QWORD PTR [RSP+8],RDX
            call .L_412690

            mov RDX,QWORD PTR [RSP+8]
            jmp .L_40c5c1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c6c8:

            mov RDI,R14
            mov QWORD PTR [RSP+8],RDX
            call .L_430c70

            test RAX,RAX
            mov RDI,RAX
            lea RCX,QWORD PTR [R14+184]
            mov RDX,QWORD PTR [RSP+8]
            je .L_40c740

            mov RAX,R15
            lock cmpxchg QWORD PTR [RCX],RDI
            sete AL
            lea R15,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40c62c

            cmp RDI,1
            je .L_40c615

            cmp R15,-3
            ja .L_40c615

            mov QWORD PTR [RSP+8],RDX
            call .L_430c80

            mov RDX,QWORD PTR [RSP+8]
            jmp .L_40c615
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c730:

            lock cmpxchg QWORD PTR [RCX],RDX
            je .L_40c573

            jmp .L_40c5c1
.L_40c740:

            lock cmpxchg QWORD PTR [RCX],RDX
            je .L_40c573

            jmp .L_40c615
.L_40c750:

            lea RCX,QWORD PTR [RIP+.L_40cdc0]
            lea RSI,QWORD PTR [RIP+.L_40cc68]
            lea RDI,QWORD PTR [RIP+.L_40cd60]
            mov EDX,307
            call __assert_fail@PLT
.L_40c76f:

            lea RCX,QWORD PTR [RIP+.L_40cdc0]
            lea RSI,QWORD PTR [RIP+.L_40cc68]
            lea RDI,QWORD PTR [RIP+.L_40cd38]
            mov EDX,306
            call __assert_fail@PLT
.L_40c78e:

            lea RCX,QWORD PTR [RIP+.L_40cdc0]
            lea RSI,QWORD PTR [RIP+.L_40cc68]
            lea RDI,QWORD PTR [RIP+.L_40cd00]
            mov EDX,301
            call __assert_fail@PLT
.L_40c7ad:

            nop
            nop
            nop
.L_40c7b0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,R8
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_40c7ca:

            movdqu XMM0,XMMWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+48],XMM0
            test R8,R8
            mov QWORD PTR [RSP],RDX
            mov DWORD PTR [RSP+12],ECX
            movdqu XMM0,XMMWORD PTR [RSI+16]
            mov QWORD PTR [RSP+100],0
            mov DWORD PTR [RSP+108],0
            movaps XMMWORD PTR [RSP+64],XMM0
            mov QWORD PTR [RSP+80],R8
            mov QWORD PTR [RSP+88],RDX
            mov DWORD PTR [RSP+96],ECX
            je .L_40c8d8

            mov RSI,QWORD PTR [R8]
            test RSI,RSI
            je .L_40cbf1

            lea RAX,QWORD PTR [RDI+160]
            lea RBP,QWORD PTR [RIP+.L_40cc79]
            mov R13,-1
            lea R14,QWORD PTR [RIP+.L_40cc7c]
            mov QWORD PTR [RSP+16],R15
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+32],RAX
            mov R12,RDI
            mov RBX,R8
            jmp .L_40c88a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c860:

            mov RSI,QWORD PTR [RBX]
            mov ECX,9
            mov RDI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40ca80
.L_40c87a:

            add RBX,8
            mov RSI,QWORD PTR [RBX]
            test RSI,RSI
            je .L_40cbd8
.L_40c88a:

            mov ECX,3
            mov RDI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40c860
.L_40c89d:

            mfence 
            mov R15,QWORD PTR [R12+160]
            test R15,R15
            je .L_40cac0

            lea RCX,QWORD PTR [R15-1]
.L_40c8b5:

            cmp RCX,-3
            ja .L_40c860

            mov RBX,R12
            lea RAX,QWORD PTR [RIP+.L_413350]
            mov R15,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],RAX
            nop
            nop
            nop
            nop
.L_40c8d8:

            mov EAX,DWORD PTR [RSP+12]
            mov RDX,QWORD PTR [RSP]
            lea RBP,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],R15
            mov QWORD PTR [RSP+24],R12
            sub EAX,1
            add RDX,24
            shl RAX,4
            mov QWORD PTR [RSP+32],RDX
            add RAX,RDX
            mov R14,RAX
.L_40c905:

            mfence 
            mov R13,QWORD PTR [RBX+176]
            test R13,R13
            je .L_40cb10

            mov R12,R13
            jmp .L_40c92e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c920:

            mov R12,QWORD PTR [R12+8]
            test R12,R12
            je .L_40cb10
.L_40c92e:

            mov R15,QWORD PTR [R12]
            mov RSI,RBP
            lea RDI,QWORD PTR [R15+128]
            call .L_4023d0

            test EAX,EAX
            je .L_40c920

            mov ECX,DWORD PTR [R15+184]
            cmp ECX,DWORD PTR [RSP+96]
            jne .L_40c920

            test ECX,ECX
            je .L_40c9d3

            mov RDX,QWORD PTR [R15+176]
            mov RAX,QWORD PTR [RSP+88]
            mov EDI,DWORD PTR [RAX]
            cmp DWORD PTR [RDX],EDI
            jne .L_40c920

            mov EDI,DWORD PTR [RDX+4]
            cmp DWORD PTR [RAX+4],EDI
            jne .L_40c920

            mov EDI,DWORD PTR [RAX+8]
            cmp DWORD PTR [RDX+8],EDI
            jne .L_40c920

            lea EDI,DWORD PTR [RCX-1]
            add RAX,16
            add RDX,16
            shl RDI,4
            add RDI,RAX
            jmp .L_40c9ba
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c990:

            mov R10D,DWORD PTR [RDX]
            cmp DWORD PTR [RAX],R10D
            jne .L_40c920

            mov R11D,DWORD PTR [RDX+4]
            cmp DWORD PTR [RAX+4],R11D
            jne .L_40c920

            add RAX,16
            add RDX,16
            mov ECX,DWORD PTR [RCX+8]
            cmp DWORD PTR [RSI+8],ECX
            jne .L_40c920
.L_40c9ba:

            mov R9D,DWORD PTR [RDX-4]
            cmp DWORD PTR [RAX-4],R9D
            mov RSI,RAX
            mov RCX,RDX
            jne .L_40c920

            cmp RDI,RAX
            jne .L_40c990
.L_40c9d3:

            mov EAX,DWORD PTR [R15+112]
            test EAX,EAX
            je .L_40c9e3

            cmp QWORD PTR [RSP+80],0
            je .L_40c9f5
.L_40c9e3:

            mov RAX,QWORD PTR [RSP+104]
            cmp QWORD PTR [R15+160],RAX
            jne .L_40c920
.L_40c9f5:

            mov RDX,QWORD PTR [R12]
.L_40c9f9:

            test RDX,RDX
            je .L_40cc20

            mov EAX,DWORD PTR [RDX]
            cmp EAX,-1
            je .L_40ca15

            test EAX,EAX
            jle .L_40cc00

            lock add DWORD PTR [RDX],1
.L_40ca15:

            mov RBX,QWORD PTR [RSP+120]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,RDX
            jne .L_40cc50

            add RSP,136
.L_40ca33:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40ca40:

            mov RDI,R12
            call .L_430c50

            test RAX,RAX
            mov RDI,RAX
            lea RSI,QWORD PTR [R12+168]
            je .L_40cc40

            mov RAX,R15
            lock cmpxchg QWORD PTR [RSI],RDI
            sete AL
            lea RCX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40ca94

            cmp RCX,-3
            ja .L_40ca80

            cmp RDI,1
            je .L_40ca80

            call .L_430c60
.L_40ca80:

            mfence 
            mov R15,QWORD PTR [R12+168]
            test R15,R15
            je .L_40ca40

            lea RCX,QWORD PTR [R15-1]
.L_40ca94:

            cmp RCX,-3
            ja .L_40c87a

            lea RAX,QWORD PTR [RIP+.L_430cb0]
            mov RBX,R12
            mov R15,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],RAX
            jmp .L_40c8d8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40cac0:

            mov RDI,R12
            call .L_412660

            test RAX,RAX
            mov RDI,RAX
            mov RDX,QWORD PTR [RSP+32]
            je .L_40cc30

            mov RAX,R15
            lock cmpxchg QWORD PTR [RDX],RDI
            sete AL
            lea RCX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40c8b5

            cmp RCX,-3
            ja .L_40c89d

            cmp RDI,1
            je .L_40c89d

            call .L_412670

            jmp .L_40c89d
          .byte 0x66
          .byte 0x90
.L_40cb10:

            mov R12D,DWORD PTR [RSP+12]
            mov R15,QWORD PTR [RSP]
            mov RDI,RBX
            mov R8,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov RDX,R15
            mov ECX,R12D
            call .L_40bcc0

            cmp DWORD PTR [RBX],-1
            mov RDX,RAX
            je .L_40ca15

            test R12D,R12D
            je .L_40cb7d

            mov ESI,DWORD PTR [R15+8]
            test ESI,ESI
            jne .L_40ca15

            cmp DWORD PTR [R15+12],-1
            jne .L_40ca15

            mov RAX,QWORD PTR [RSP+32]
            jmp .L_40cb78
.L_40cb60:

            mov ECX,DWORD PTR [RAX]
            test ECX,ECX
            jne .L_40ca15

            add RAX,16
            cmp DWORD PTR [RAX-12],-1
            jne .L_40ca15
.L_40cb78:

            cmp RAX,R14
            jne .L_40cb60
.L_40cb7d:

            mov ESI,16
            mov EDI,1
            mov QWORD PTR [RSP+40],RDX
            call calloc@PLT

            test RAX,RAX
            mov R12,RAX
            mov RDX,QWORD PTR [RSP+40]
            je .L_40ca15

            mov RAX,R13
            mov QWORD PTR [R12],RDX
            mov QWORD PTR [R12+8],R13
            lock cmpxchg QWORD PTR [RBX+176],R12
            je .L_40c9f9

            mov RDI,RDX
            call .L_40c2d0

            mov RDI,R12
            call free@PLT

            jmp .L_40c905
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cbd8:

            cmp QWORD PTR [RSP+104],0
            mov RBX,R12
            mov R15,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+24]
            jne .L_40c8d8
.L_40cbf1:

            lea RDX,QWORD PTR [RIP+.L_40d0e0]
            jmp .L_40ca15
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cc00:

            lea RCX,QWORD PTR [RIP+.L_40d000]
            lea RSI,QWORD PTR [RIP+.L_40cc85]
            lea RDI,QWORD PTR [RIP+.L_40cc9a]
            mov EDX,160
            call __assert_fail@PLT
          .byte 0x90
.L_40cc20:

            xor EDX,EDX
            jmp .L_40ca15
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cc30:

            lock cmpxchg QWORD PTR [RDX],R13
            je .L_40c860

            jmp .L_40c89d
.L_40cc40:

            lock cmpxchg QWORD PTR [RSI],R13
            je .L_40c87a

            jmp .L_40ca80
.L_40cc50:

            call __stack_chk_fail@PLT
.L_40cc55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cc60:

            mov RAX,QWORD PTR [RDI+168]
            ret 
.L_40cc68:
          .string "hb-shape-plan.cc"
.L_40cc79:
          .byte 0x6f
          .byte 0x74
          .byte 0x0
.L_40cc7c:
          .string "fallback"
.L_40cc85:
          .string "hb-object-private.hh"
.L_40cc9a:
          .string "hb_object_is_valid (obj)"
.L_40ccb3:
          .string "!hb_object_is_inert (buffer)"
.L_40ccd0:
          .string "props->direction != HB_DIRECTION_INVALID"
          .zero 7
.L_40cd00:
          .string "buffer->content_type == HB_BUFFER_CONTENT_TYPE_UNICODE"
          .zero 1
.L_40cd38:
          .string "shape_plan->face_unsafe == font->face"
          .zero 2
.L_40cd60:
          .string "hb_segment_properties_equal (&shape_plan->props, &buffer->props)"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_40cdc0:
          .string "hb_bool_t hb_shape_plan_execute(hb_shape_plan_t*, hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int)"
          .zero 17
.L_40ce40:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_shape_plan_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 31
.L_40cee0:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_shape_plan_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 5
.L_40cfc0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_shape_plan_t]"
          .zero 4
.L_40d000:
          .string "Type* hb_object_reference(Type*) [with Type = hb_shape_plan_t]"
          .zero 1
.L_40d040:
          .string "hb_shape_plan_t* hb_shape_plan_create(hb_face_t*, const hb_segment_properties_t*, const hb_feature_t*, unsigned int, const char* const*)"
          .zero 23
.L_40d0e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_40d1b0:

            mov RDI,QWORD PTR [RIP+.L_6583d8]
            lea RAX,QWORD PTR [RIP+.L_657820]
            cmp RDI,RAX
            je .L_40d1d0

            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d1d0:

            ret 
.L_40d1d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d1e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
.L_40d1fe:

            mfence 
            mov R13,QWORD PTR [RIP+.L_6583d8]
            test R13,R13
            je .L_40d238
.L_40d20d:

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_40d437

            add RSP,72
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d238:

            lea RDI,QWORD PTR [RIP+.L_40d449]
            call getenv@PLT

            test RAX,RAX
            mov RBP,RAX
            je .L_40d420

            cmp BYTE PTR [RAX],0
            je .L_40d420

            mov ESI,48
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_40d420

            movdqa XMM0,XMMWORD PTR [RIP+.L_657820]
            xor R12D,R12D
            movdqa XMM1,XMMWORD PTR [RIP+.L_657830]
            movdqa XMM2,XMMWORD PTR [RIP+.L_657840]
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM1
            movups XMMWORD PTR [RAX+32],XMM2
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d2a0:

            mov ESI,44
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            mov R14,RAX
            je .L_40d3e8
.L_40d2b9:

            cmp R12D,1
            ja .L_40d330

            mov R8D,R12D
            mov R9,R14
            mov R15D,R12D
            lea RAX,QWORD PTR [R8+R8*2]
            sub R9,RBP
            lea RBX,QWORD PTR [R13+RAX*8]
            mov RCX,RBX
.L_40d2d7:

            mov EAX,DWORD PTR [RCX]
            add RCX,4
            lea EDX,DWORD PTR [RAX-16843009]
            not EAX
            and EDX,EAX
            and EDX,2155905152
            je .L_40d2d7

            mov EAX,EDX
            shr EAX,16
            test EDX,32896
            cmove EDX,EAX
            lea RAX,QWORD PTR [RCX+2]
            cmove RCX,RAX
            mov EAX,EDX
            add AL,DL
            sbb RCX,3
            sub RCX,RBX
            movsxd RCX,ECX
            cmp RCX,R9
            je .L_40d348
.L_40d318:

            add RBX,24
            cmp R15D,1
            je .L_40d330

            mov R15D,1
            mov RCX,RBX
            jmp .L_40d2d7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d330:

            cmp BYTE PTR [R14],0
            je .L_40d400

            lea RBP,QWORD PTR [R14+1]
            jmp .L_40d2a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d348:

            mov RDX,R9
            mov RSI,RBP
            mov RDI,RBX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R9
            call strncmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            jne .L_40d318

            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],R9
            movdqu XMM0,XMMWORD PTR [RBX]
            mov QWORD PTR [RSP+48],RAX
            mov EAX,R15D
            sub EAX,R12D
            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [R8+R8*2]
            lea R8D,DWORD PTR [R12+1]
            movaps XMMWORD PTR [RSP+32],XMM0
            lea RCX,QWORD PTR [R13+RAX*8]
            lea RAX,QWORD PTR [R8+R8*2]
            shl RDX,3
            mov R12,R8
            lea RDI,QWORD PTR [R13+RAX*8]
            mov RSI,RCX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+48]
            movdqa XMM0,XMMWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+16]
            movups XMMWORD PTR [RCX],XMM0
            mov QWORD PTR [RCX+16],RAX
            jmp .L_40d318
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d3e8:

            mov RDI,RBP
            call strlen@PLT

            lea R14,QWORD PTR [RBP+RAX*1]
            jmp .L_40d2b9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d400:

            xor EAX,EAX
            lock cmpxchg QWORD PTR [RIP+.L_6583d8],R13
            jne .L_40d43c

            lea RDI,QWORD PTR [RIP+.L_40d1b0]
            call .L_44dae0

            jmp .L_40d20d
          .byte 0x66
          .byte 0x90
.L_40d420:

            lea R13,QWORD PTR [RIP+.L_657820]
            xor EAX,EAX
            lock cmpxchg QWORD PTR [RIP+.L_6583d8],R13
            jmp .L_40d20d
.L_40d437:

            call __stack_chk_fail@PLT
.L_40d43c:

            mov RDI,R13
            call free@PLT

            jmp .L_40d1fe
.L_40d449:
          .string "HB_SHAPER_LIST"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d460:

            xor EAX,EAX
            ret 
.L_40d463:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d470:

            mov EAX,1
            ret 
.L_40d476:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d480:

            mov EAX,7
            ret 
.L_40d486:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d490:

            mov EAX,ESI
            ret 
.L_40d493:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d4a0:

            mov EAX,1517976186
            ret 
.L_40d4a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d4b0:

            xor EAX,EAX
            ret 
.L_40d4b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d4c0:

            xor EAX,EAX
            ret 
.L_40d4c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d4d0:

            xor EAX,EAX
            ret 
.L_40d4d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d4e0:

            jmp .L_4312a0
.L_40d4e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d4f0:

            push RBP
            push RBX
            mov RBP,RDI
            mov ESI,320
            mov EDI,1
            sub RSP,8
.L_40d503:

            call calloc@PLT

            test RAX,RAX
            je .L_40d610

            lea RDI,QWORD PTR [RAX+8]
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            mov RBX,RAX
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            test RBP,RBP
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            je .L_40d628

            mov EAX,DWORD PTR [RBP]
            cmp EAX,-1
            je .L_40d55b

            test EAX,EAX
            mov BYTE PTR [RBP+120],1
            jle .L_40d5e8

            lock add DWORD PTR [RBP],1
.L_40d55b:

            movdqu XMM0,XMMWORD PTR [RBP+128]
            mov RAX,RBX
            mov QWORD PTR [RBX+112],RBP
            movups XMMWORD PTR [RBX+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+144]
            movups XMMWORD PTR [RBX+144],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+160]
            movups XMMWORD PTR [RBX+160],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+176]
            movups XMMWORD PTR [RBX+176],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+192]
            movups XMMWORD PTR [RBX+192],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+208]
            movups XMMWORD PTR [RBX+208],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+224]
            movups XMMWORD PTR [RBX+224],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+240]
            movups XMMWORD PTR [RBX+240],XMM0
            add RSP,8
.L_40d5de:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d5e8:

            lea RCX,QWORD PTR [RIP+.L_40e140]
            lea RSI,QWORD PTR [RIP+.L_40df43]
            lea RDI,QWORD PTR [RIP+.L_40df58]
            mov EDX,160
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d610:

            lea RBX,QWORD PTR [RIP+.L_657860]
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d628:

            lea RBP,QWORD PTR [RIP+.L_657860]
            jmp .L_40d55b
.L_40d634:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d640:

            lea RAX,QWORD PTR [RIP+.L_657860]
            ret 
.L_40d648:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d650:

            test RDI,RDI
            je .L_40d664

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40d664

            test EAX,EAX
            jle .L_40d670

            lock add DWORD PTR [RDI],1
.L_40d664:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d670:

            lea RCX,QWORD PTR [RIP+.L_40e140]
            lea RSI,QWORD PTR [RIP+.L_40df43]
            lea RDI,QWORD PTR [RIP+.L_40df58]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_40d693:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d6a0:

            test RDI,RDI
            je .L_40d6d0

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40d6d0

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_40d6d8

            lock sub DWORD PTR [RDI],1
            je .L_40d700

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d6d0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d6d8:

            lea RCX,QWORD PTR [RIP+.L_40e100]
            lea RSI,QWORD PTR [RIP+.L_40df43]
            lea RDI,QWORD PTR [RIP+.L_40df58]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d700:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_40d800

            mov RDI,QWORD PTR [RDI+56]
            cmp R12,RDI
            je .L_40d727

            call free@PLT
.L_40d727:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_40d737:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RAX,QWORD PTR [RBX+256]
            test RAX,RAX
            je .L_40d754

            mov RDI,QWORD PTR [RBX+192]
            call RAX
.L_40d754:

            mov RAX,QWORD PTR [RBX+264]
            test RAX,RAX
            je .L_40d769

            mov RDI,QWORD PTR [RBX+200]
            call RAX
.L_40d769:

            mov RAX,QWORD PTR [RBX+272]
            test RAX,RAX
            je .L_40d77e

            mov RDI,QWORD PTR [RBX+208]
            call RAX
.L_40d77e:

            mov RAX,QWORD PTR [RBX+280]
            test RAX,RAX
            je .L_40d793

            mov RDI,QWORD PTR [RBX+216]
            call RAX
.L_40d793:

            mov RAX,QWORD PTR [RBX+288]
            test RAX,RAX
            je .L_40d7a8

            mov RDI,QWORD PTR [RBX+224]
            call RAX
.L_40d7a8:

            mov RAX,QWORD PTR [RBX+296]
            test RAX,RAX
            je .L_40d7bd

            mov RDI,QWORD PTR [RBX+232]
            call RAX
.L_40d7bd:

            mov RAX,QWORD PTR [RBX+304]
            test RAX,RAX
            je .L_40d7d2

            mov RDI,QWORD PTR [RBX+240]
            call RAX
.L_40d7d2:

            mov RAX,QWORD PTR [RBX+312]
            test RAX,RAX
            je .L_40d7e7

            mov RDI,QWORD PTR [RBX+248]
            call RAX
.L_40d7e7:

            mov RDI,QWORD PTR [RBX+112]
            call .L_40d6a0

            mov RDI,RBX
            pop RBX
.L_40d7f4:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
.L_40d800:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_40d84e
.L_40d80f:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_40d800

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_40d80f
.L_40d84e:

            mov RDI,QWORD PTR [RBX+56]
            cmp R12,RDI
            je .L_40d85c

            call free@PLT
.L_40d85c:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_40d737
.L_40d879:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d880:

            test RDI,RDI
            je .L_40d8a8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40d8a8

            sub RSP,8
            test EAX,EAX
            jle .L_40d8b0

            add RDI,8
            call .L_4068c0

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d8a8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d8b0:

            lea RCX,QWORD PTR [RIP+.L_40e020]
            lea RSI,QWORD PTR [RIP+.L_40df43]
            lea RDI,QWORD PTR [RIP+.L_40df58]
            mov EDX,187
            call __assert_fail@PLT
.L_40d8cf:

            nop
.L_40d8d0:

            test RDI,RDI
            je .L_40d918

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40d918

            test EAX,EAX
            jle .L_40d8f0

            add RDI,8
            jmp .L_406b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d8f0:

            lea RCX,QWORD PTR [RIP+.L_40df80]
            lea RSI,QWORD PTR [RIP+.L_40df43]
            lea RDI,QWORD PTR [RIP+.L_40df58]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d918:

            xor EAX,EAX
            ret 
.L_40d91b:

            nop
            nop
            nop
            nop
            nop
.L_40d920:

            cmp DWORD PTR [RDI],-1
            je .L_40d929

            mov BYTE PTR [RDI+120],1
.L_40d929:

            ret 
.L_40d92b:

            nop
            nop
            nop
            nop
            nop
.L_40d930:

            movzx EAX,BYTE PTR [RDI+120]
            ret 
.L_40d935:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d940:

            mov RAX,QWORD PTR [RDI+112]
            lea RDX,QWORD PTR [RIP+.L_657860]
            test RAX,RAX
            cmove RAX,RDX
            ret 
.L_40d953:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d960:

            cmp BYTE PTR [RDI+120],0
            jne .L_40d9c0

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+256]
            test RAX,RAX
            je .L_40d991

            mov RDI,QWORD PTR [RDI+192]
            call RAX
.L_40d991:

            test RBP,RBP
            je .L_40d9c8

            mov QWORD PTR [RBX+128],RBP
            mov QWORD PTR [RBX+192],R13
            mov QWORD PTR [RBX+256],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d9c0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d9c8:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+128]
            mov QWORD PTR [RBX+128],RDX
            mov RAX,QWORD PTR [RAX+192]
            mov QWORD PTR [RBX+256],0
            mov QWORD PTR [RBX+192],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40d9fe:

            nop
            nop
.L_40da00:

            cmp BYTE PTR [RDI+120],0
            jne .L_40da60

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+264]
            test RAX,RAX
            je .L_40da31

            mov RDI,QWORD PTR [RDI+200]
            call RAX
.L_40da31:

            test RBP,RBP
            je .L_40da68

            mov QWORD PTR [RBX+136],RBP
            mov QWORD PTR [RBX+200],R13
            mov QWORD PTR [RBX+264],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40da60:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40da68:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+136]
            mov QWORD PTR [RBX+136],RDX
            mov RAX,QWORD PTR [RAX+200]
            mov QWORD PTR [RBX+264],0
            mov QWORD PTR [RBX+200],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40da9e:

            nop
            nop
.L_40daa0:

            cmp BYTE PTR [RDI+120],0
            jne .L_40db00

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+272]
            test RAX,RAX
            je .L_40dad1

            mov RDI,QWORD PTR [RDI+208]
            call RAX
.L_40dad1:

            test RBP,RBP
            je .L_40db08

            mov QWORD PTR [RBX+144],RBP
            mov QWORD PTR [RBX+208],R13
            mov QWORD PTR [RBX+272],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40db00:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40db08:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+144]
            mov QWORD PTR [RBX+144],RDX
            mov RAX,QWORD PTR [RAX+208]
            mov QWORD PTR [RBX+272],0
            mov QWORD PTR [RBX+208],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40db3e:

            nop
            nop
.L_40db40:

            cmp BYTE PTR [RDI+120],0
            jne .L_40dba0

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+280]
            test RAX,RAX
            je .L_40db71

            mov RDI,QWORD PTR [RDI+216]
            call RAX
.L_40db71:

            test RBP,RBP
            je .L_40dba8

            mov QWORD PTR [RBX+152],RBP
            mov QWORD PTR [RBX+216],R13
            mov QWORD PTR [RBX+280],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dba0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dba8:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+152]
            mov QWORD PTR [RBX+152],RDX
            mov RAX,QWORD PTR [RAX+216]
            mov QWORD PTR [RBX+280],0
            mov QWORD PTR [RBX+216],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40dbde:

            nop
            nop
.L_40dbe0:

            cmp BYTE PTR [RDI+120],0
            jne .L_40dc40

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+288]
            test RAX,RAX
            je .L_40dc11

            mov RDI,QWORD PTR [RDI+224]
            call RAX
.L_40dc11:

            test RBP,RBP
            je .L_40dc48

            mov QWORD PTR [RBX+160],RBP
            mov QWORD PTR [RBX+224],R13
            mov QWORD PTR [RBX+288],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dc40:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dc48:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+160]
            mov QWORD PTR [RBX+160],RDX
            mov RAX,QWORD PTR [RAX+224]
            mov QWORD PTR [RBX+288],0
            mov QWORD PTR [RBX+224],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40dc7e:

            nop
            nop
.L_40dc80:

            cmp BYTE PTR [RDI+120],0
            jne .L_40dce0

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+296]
            test RAX,RAX
            je .L_40dcb1

            mov RDI,QWORD PTR [RDI+232]
            call RAX
.L_40dcb1:

            test RBP,RBP
            je .L_40dce8

            mov QWORD PTR [RBX+168],RBP
            mov QWORD PTR [RBX+232],R13
            mov QWORD PTR [RBX+296],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dce0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dce8:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+168]
            mov QWORD PTR [RBX+168],RDX
            mov RAX,QWORD PTR [RAX+232]
            mov QWORD PTR [RBX+296],0
            mov QWORD PTR [RBX+232],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40dd1e:

            nop
            nop
.L_40dd20:

            cmp BYTE PTR [RDI+120],0
            jne .L_40dd80

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+304]
            test RAX,RAX
            je .L_40dd51

            mov RDI,QWORD PTR [RDI+240]
            call RAX
.L_40dd51:

            test RBP,RBP
            je .L_40dd88

            mov QWORD PTR [RBX+176],RBP
            mov QWORD PTR [RBX+240],R13
            mov QWORD PTR [RBX+304],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dd80:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dd88:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+176]
            mov QWORD PTR [RBX+176],RDX
            mov RAX,QWORD PTR [RAX+240]
            mov QWORD PTR [RBX+304],0
            mov QWORD PTR [RBX+240],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40ddbe:

            nop
            nop
.L_40ddc0:

            cmp BYTE PTR [RDI+120],0
            jne .L_40de20

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+312]
            test RAX,RAX
            je .L_40ddf1

            mov RDI,QWORD PTR [RDI+248]
            call RAX
.L_40ddf1:

            test RBP,RBP
            je .L_40de28

            mov QWORD PTR [RBX+184],RBP
            mov QWORD PTR [RBX+248],R13
            mov QWORD PTR [RBX+312],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40de20:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40de28:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+184]
            mov QWORD PTR [RBX+184],RDX
            mov RAX,QWORD PTR [RAX+248]
            mov QWORD PTR [RBX+312],0
            mov QWORD PTR [RBX+248],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40de5e:

            nop
            nop
.L_40de60:

            mov RDX,QWORD PTR [RDI+192]
            jmp QWORD PTR [RDI+128]
.L_40de6d:

            nop
            nop
            nop
.L_40de70:

            mov RDX,QWORD PTR [RDI+200]
            jmp QWORD PTR [RDI+136]
.L_40de7d:

            nop
            nop
            nop
.L_40de80:

            mov RDX,QWORD PTR [RDI+208]
            jmp QWORD PTR [RDI+144]
.L_40de8d:

            nop
            nop
            nop
.L_40de90:

            mov RDX,QWORD PTR [RDI+216]
            jmp QWORD PTR [RDI+152]
.L_40de9d:

            nop
            nop
            nop
.L_40dea0:

            mov RDX,QWORD PTR [RDI+224]
            jmp QWORD PTR [RDI+160]
.L_40dead:

            nop
            nop
            nop
.L_40deb0:

            test ESI,ESI
            mov DWORD PTR [RCX],0
            je .L_40ded0

            test EDX,EDX
            je .L_40ded0

            mov RAX,QWORD PTR [RDI+168]
            mov R8,QWORD PTR [RDI+232]
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_40ded0:

            xor EAX,EAX
            ret 
.L_40ded3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dee0:

            mov DWORD PTR [RDX],ESI
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+176]
            mov R8,QWORD PTR [RDI+240]
            jmp RAX
.L_40def8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40df00:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDX
            sub RSP,8
            mov RCX,QWORD PTR [RDI+248]
            call QWORD PTR [RDI+184]

            cmp EAX,1
            je .L_40df30
.L_40df1d:

            mov EDX,EAX
            mov DWORD PTR [RBX+RDX*4],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40df30:

            cmp EBP,DWORD PTR [RBX]
            jne .L_40df1d

            mov DWORD PTR [RBX],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_40df43:
          .string "hb-object-private.hh"
.L_40df58:
          .string "hb_object_is_valid (obj)"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40df80:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_unicode_funcs_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 28
.L_40e020:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_unicode_funcs_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 2
.L_40e100:
          .string "bool hb_object_destroy(Type*) [with Type = hb_unicode_funcs_t]"
          .zero 1
.L_40e140:
          .string "Type* hb_object_reference(Type*) [with Type = hb_unicode_funcs_t]"
          .zero 30
.L_40e1a0:
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0x16
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x17
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0xe
          .byte 0x18
          .byte 0xc
          .byte 0x19
          .byte 0xd
          .byte 0xa
          .byte 0xb
          .byte 0x1a
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x1b
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x28
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x3a
          .byte 0x3b
          .byte 0x3c
          .byte 0x3d
          .byte 0x3e
          .byte 0x3f
          .byte 0x40
          .byte 0x41
          .byte 0x42
          .byte 0x43
          .byte 0x44
          .byte 0x45
          .byte 0x46
          .byte 0x47
          .byte 0x48
          .byte 0x49
          .byte 0x4a
          .byte 0x4b
          .byte 0x4c
          .byte 0x4d
          .byte 0x4e
          .byte 0x4f
          .byte 0x50
          .byte 0x51
          .byte 0x52
          .byte 0x53
          .byte 0x0
          .byte 0x55
          .byte 0x56
          .byte 0x57
          .byte 0x58
          .byte 0x59
          .byte 0x5a
          .byte 0x0
          .byte 0x5c
          .byte 0x5d
          .byte 0x5e
          .byte 0x5f
          .byte 0x60
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x3
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x7b
          .byte 0x7c
          .byte 0x7d
          .byte 0x7e
          .byte 0x7f
          .byte 0x80
          .byte 0x81
          .byte 0x82
          .byte 0x83
          .byte 0x80
          .byte 0x85
          .byte 0x86
          .byte 0x87
          .byte 0x88
          .byte 0x89
          .byte 0x8a
          .byte 0x8b
          .byte 0x8c
          .byte 0x8d
          .byte 0x8e
          .byte 0x8f
          .byte 0x90
          .byte 0x91
          .byte 0x92
          .byte 0x93
          .byte 0x94
          .byte 0x95
          .byte 0x96
          .byte 0x97
          .byte 0x98
          .byte 0x99
          .byte 0x9a
          .byte 0x9b
          .byte 0x9c
          .byte 0x9d
          .byte 0x9e
          .byte 0x9f
          .byte 0xa0
          .byte 0xa1
          .byte 0xa2
          .byte 0xa3
          .byte 0xa4
          .byte 0xa5
          .byte 0xa6
          .byte 0xa7
          .byte 0xa8
          .byte 0xa9
          .byte 0xaa
          .byte 0xab
          .byte 0xac
          .byte 0xad
          .byte 0xae
          .byte 0xaf
          .byte 0xb0
          .byte 0xb1
          .byte 0xb2
          .byte 0xb3
          .byte 0xb4
          .byte 0xb5
          .byte 0xb6
          .byte 0xb7
          .byte 0xb8
          .byte 0xb9
          .byte 0xba
          .byte 0xbb
          .byte 0xbc
          .byte 0xbd
          .byte 0xbe
          .byte 0xbf
          .byte 0xc0
          .byte 0xc1
          .byte 0xc2
          .byte 0xc3
          .byte 0xc4
          .byte 0xc5
          .byte 0xc6
          .byte 0xc7
          .byte 0xc8
          .byte 0xc9
          .byte 0xca
          .byte 0xcb
          .byte 0xcc
          .byte 0xcd
          .byte 0xce
          .byte 0xcf
          .byte 0xd0
          .byte 0xd1
          .byte 0xd2
          .byte 0xd3
          .byte 0xd4
          .byte 0xd5
          .byte 0xd6
          .byte 0xd7
          .byte 0xd8
          .byte 0xd9
          .byte 0xda
          .byte 0xdb
          .byte 0xdc
          .byte 0xdd
          .byte 0xde
          .byte 0xdf
          .byte 0xe0
          .byte 0xe1
          .byte 0xe2
          .byte 0xe3
          .byte 0xe4
          .byte 0xe5
          .byte 0xe6
          .byte 0xe7
          .byte 0xe8
          .byte 0xe9
          .byte 0xea
          .byte 0xeb
          .byte 0xec
          .byte 0xed
          .byte 0xee
          .byte 0xef
          .byte 0xf0
          .byte 0xf1
          .byte 0xf2
          .byte 0xf3
          .byte 0xf4
          .byte 0xf5
          .byte 0xf6
          .byte 0xf7
          .byte 0xf8
          .byte 0xf9
          .byte 0xfa
          .byte 0xfb
          .byte 0xfc
          .byte 0xfd
          .byte 0xfe
          .byte 0xff
.L_40e2a0:

            sub RSP,8
            mov RAX,RSI
            mov ESI,EDX
            mov RDI,QWORD PTR [RAX+8]
            mov RDX,RCX
            call QWORD PTR [RAX]

            add RSP,8
            movzx EAX,AL
            ret 
.L_40e2ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40e2c0:

            mov RDI,QWORD PTR [RIP+.L_6583e0]
            jmp .L_4089d0
.L_40e2cc:

            nop
            nop
            nop
            nop
.L_40e2d0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_40e2d9:

            mov RDI,QWORD PTR [RDI+72]
            call .L_401950

            mov RDI,QWORD PTR [RBX+112]
            call .L_401950

            mov RDI,QWORD PTR [RBX+152]
            call .L_401950

            mov RBP,QWORD PTR [RBX+168]
            test RBP,RBP
            je .L_40e32d

            lea RAX,QWORD PTR [RIP+.L_658400]
            cmp RBP,RAX
            je .L_40e32d

            mov RDI,QWORD PTR [RBP+24]
            call .L_401950

            mov RDI,QWORD PTR [RBP+32]
            call .L_401950

            mov RDI,QWORD PTR [RBX+168]
            call free@PLT
.L_40e32d:

            add RSP,8
.L_40e331:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp free@PLT
.L_40e33b:

            nop
            nop
            nop
            nop
            nop
.L_40e340:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40e34a:

            mov R11,QWORD PTR [RSI+64]
            movzx EAX,BYTE PTR [R11+6]
            movzx R13D,BYTE PTR [R11+7]
            shl EAX,24
            shl R13D,16
            add EAX,R13D
            movzx R13D,BYTE PTR [R11+8]
            shl R13D,8
            add R13D,EAX
            movzx EAX,BYTE PTR [R11+9]
            add R13D,EAX
            mov EBX,R13D
            sub EBX,1
            js .L_40e3e6

            lea RBP,QWORD PTR [R11+6]
            xor R12D,R12D
            jmp .L_40e39f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e390:

            je .L_40e5a0

            lea R12D,DWORD PTR [R9+1]
            cmp R12D,EBX
            jg .L_40e3e6
.L_40e39f:

            lea EAX,DWORD PTR [RBX+R12*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RDI,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [RAX+RDI*2+4]
            add R10,RBP
            movzx EAX,BYTE PTR [R10]
            shl EAX,16
            mov EDI,EAX
            movzx EAX,BYTE PTR [R10+1]
            shl EAX,8
            add EAX,EDI
            movzx EDI,BYTE PTR [R10+2]
            add EAX,EDI
            cmp ECX,EAX
            jae .L_40e390

            lea EBX,DWORD PTR [R9-1]
            cmp R12D,EBX
            jle .L_40e39f
.L_40e3e6:

            lea RBP,QWORD PTR [RIP+.L_658400]
.L_40e3ed:

            movzx ECX,BYTE PTR [RBP+3]
            movzx EAX,BYTE PTR [RBP+4]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBP+5]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBP+6]
            lea R12D,DWORD PTR [RAX+RCX*1]
            mov RAX,R12
            add R12,R11
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_658400]
            cmove R12,RAX
            movzx ECX,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R12+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R12+3]
            lea R10D,DWORD PTR [RAX+RCX*1-1]
            test R10D,R10D
            js .L_40e4ab

            xor EBX,EBX
            jmp .L_40e461
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e458:

            lea R10D,DWORD PTR [RDI-1]
            cmp EBX,R10D
            jg .L_40e4ab
.L_40e461:

            lea EAX,DWORD PTR [R10+RBX*1]
            mov EDI,EAX
            shr EDI,31
            add EDI,EAX
            sar EDI,1
            movsxd RAX,EDI
            lea R9,QWORD PTR [R12+RAX*4+4]
            movzx EAX,BYTE PTR [R9]
            shl EAX,16
            mov ECX,EAX
            movzx EAX,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R9+2]
            add EAX,ECX
            cmp EDX,EAX
            jb .L_40e458

            movzx ECX,BYTE PTR [R9+3]
            add EAX,ECX
            cmp EDX,EAX
            jbe .L_40e570

            lea EBX,DWORD PTR [RDI+1]
            cmp EBX,R10D
            jle .L_40e461
.L_40e4ab:

            movzx ECX,BYTE PTR [RBP+7]
            movzx EAX,BYTE PTR [RBP+8]
            mov ESI,ECX
            shl EAX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [RBP+9]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBP+10]
            add ECX,EAX
            lea RAX,QWORD PTR [RIP+.L_658400]
            add R11,RCX
            test ECX,ECX
            cmove R11,RAX
            movzx EAX,BYTE PTR [R11]
            movzx EBX,BYTE PTR [R11+1]
            shl EAX,24
            shl EBX,16
            lea EAX,DWORD PTR [RAX+RBX*1]
            movzx EBX,BYTE PTR [R11+2]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R11+3]
            add EBX,EAX
            mov R9D,EBX
            sub R9D,1
            js .L_40e55b

            xor R10D,R10D
            jmp .L_40e51f
          .byte 0x66
          .byte 0x90
.L_40e510:

            je .L_40e5c0

            lea R10D,DWORD PTR [RSI+1]
            cmp R10D,R9D
            jg .L_40e55b
.L_40e51f:

            lea EAX,DWORD PTR [R10+R9*1]
            mov ESI,EAX
            shr ESI,31
            add ESI,EAX
            sar ESI,1
            movsxd RAX,ESI
            lea RDI,QWORD PTR [RAX+RAX*4+4]
            add RDI,R11
            movzx EAX,BYTE PTR [RDI]
            shl EAX,16
            mov ECX,EAX
            movzx EAX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+2]
            add EAX,ECX
            cmp EDX,EAX
            jae .L_40e510

            lea R9D,DWORD PTR [RSI-1]
            cmp R10D,R9D
            jle .L_40e51f
.L_40e55b:

            add RSP,8
.L_40e55f:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e570:

            cmp EDI,-1
            je .L_40e4ab

            mov EAX,EDX
            mov RCX,RSI
            mov RDI,QWORD PTR [RSI+8]
            mov RDX,R8
            mov ESI,EAX
            call QWORD PTR [RCX]

            add RSP,8
            movzx EAX,AL
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e5a0:

            cmp R9D,R13D
            jae .L_40e3e6

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*4]
            lea RAX,QWORD PTR [R9+RAX*2+4]
            add RBP,RAX
            jmp .L_40e3ed
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e5c0:

            cmp ESI,-1
            je .L_40e55b

            cmp ESI,EBX
            lea RDX,QWORD PTR [RIP+.L_658400]
            jae .L_40e5da

            mov ESI,ESI
            lea RDX,QWORD PTR [RSI+RSI*4+4]
            add RDX,R11
.L_40e5da:

            movzx EAX,BYTE PTR [RDX+3]
            movzx EDX,BYTE PTR [RDX+4]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R8],EAX
            add RSP,8
.L_40e5f1:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40e5fd:

            nop
            nop
            nop
.L_40e600:

            push RBP
            push RBX
            sub RSP,8
.L_40e606:

            mov R8D,DWORD PTR [RSI+80]
            mov RBX,QWORD PTR [RDI+128]
            movsxd RAX,DWORD PTR [RDI+136]
            cmp EDX,R8D
            movsxd RCX,DWORD PTR [RBX+148]
            jb .L_40e660

            test R8D,R8D
            je .L_40e6c8

            test ECX,ECX
            jne .L_40e640

            mov RDI,RBX
            call .L_407ab0

            movsxd RCX,DWORD PTR [RBX+148]
.L_40e640:

            xor EBP,EBP
.L_40e642:

            mov EAX,ECX
            add RSP,8
.L_40e648:

            shr EAX,31
            add EAX,ECX
            sar EAX,1
            cdqe 
            add RAX,RBP
            cqo 
            idiv RCX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e660:

            mov EDI,DWORD PTR [RSI+84]
            mov RSI,QWORD PTR [RSI+104]
            lea R8D,DWORD PTR [RDI-1]
            cmp EDX,EDI
            cmovae EDX,R8D
            mov EDX,EDX
            lea RDX,QWORD PTR [RSI+RDX*4]
            movzx ESI,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EDX
            movzx ESI,SI
.L_40e686:

            movsx RSI,SI
            imul RAX,RSI
            test ECX,ECX
            mov RBP,RAX
            jne .L_40e6a4

            mov RDI,RBX
            call .L_407ab0

            movsxd RCX,DWORD PTR [RBX+148]
.L_40e6a4:

            test RBP,RBP
            jns .L_40e642

            mov EAX,ECX
            add RSP,8
.L_40e6af:

            shr EAX,31
            add EAX,ECX
            sar EAX,1
            neg EAX
            cdqe 
            add RAX,RBP
            cqo 
            idiv RCX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e6c8:

            mov ESI,DWORD PTR [RSI+88]
            jmp .L_40e686
.L_40e6cd:

            nop
            nop
            nop
.L_40e6d0:

            push RBP
            push RBX
            sub RSP,8
.L_40e6d6:

            mov EAX,DWORD PTR [RSI+120]
            mov RBP,QWORD PTR [RDI+128]
            movsxd RBX,DWORD PTR [RDI+140]
            cmp EDX,EAX
            mov R8D,DWORD PTR [RBP+148]
            jb .L_40e730

            test EAX,EAX
            je .L_40e790

            test R8D,R8D
            jne .L_40e7a0

            mov RDI,RBP
            xor EBX,EBX
            call .L_407ab0

            mov EDX,DWORD PTR [RBP+148]
.L_40e713:

            mov EAX,EDX
            shr EAX,31
            add EAX,EDX
            sar EAX,1
            cdqe 
.L_40e71e:

            add RAX,RBX
            movsxd RCX,EDX
            add RSP,8
.L_40e728:

            cqo 
            idiv RCX
            pop RBX
            pop RBP
            ret 
.L_40e730:

            mov EAX,DWORD PTR [RSI+124]
            lea ECX,DWORD PTR [RAX-1]
            cmp EDX,EAX
            mov RAX,QWORD PTR [RSI+144]
            cmovae EDX,ECX
            mov EDX,EDX
            lea RAX,QWORD PTR [RAX+RDX*4]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
.L_40e757:

            neg ECX
            movsx RAX,CX
            imul RBX,RAX
            test R8D,R8D
            jne .L_40e775

            mov RDI,RBP
            call .L_407ab0

            mov R8D,DWORD PTR [RBP+148]
.L_40e775:

            test RBX,RBX
            mov EDX,R8D
            jns .L_40e713

            mov EAX,R8D
            shr EAX,31
            add EAX,R8D
            sar EAX,1
            neg EAX
            cdqe 
            jmp .L_40e71e
          .byte 0x66
          .byte 0x90
.L_40e790:

            mov ECX,DWORD PTR [RSI+128]
            jmp .L_40e757
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e7a0:

            mov EDX,R8D
            xor EBX,EBX
            jmp .L_40e713
.L_40e7aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40e7b0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            mov RBP,RDX
            sub RSP,8
.L_40e7c7:

            mov R15,QWORD PTR [RDI+128]
            movzx EBX,WORD PTR [RSI+92]
            mov R14D,DWORD PTR [RDI+140]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40e7f3

            mov RDI,R15
            call .L_407ab0

            movsxd RCX,DWORD PTR [R15+148]
.L_40e7f3:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40e80e

            neg EDX
.L_40e80e:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R13+94]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP],EAX
            mov R15,QWORD PTR [R12+128]
            mov R14D,DWORD PTR [R12+140]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40e84b

            mov RDI,R15
            call .L_407ab0

            movsxd RCX,DWORD PTR [R15+148]
.L_40e84b:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40e866

            neg EDX
.L_40e866:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R13+96]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP+4],EAX
            mov R13D,DWORD PTR [R12+140]
            mov R12,QWORD PTR [R12+128]
            movsxd RCX,DWORD PTR [R12+148]
            test ECX,ECX
            jne .L_40e8a5

            mov RDI,R12
            call .L_407ab0

            movsxd RCX,DWORD PTR [R12+148]
.L_40e8a5:

            movsxd RDX,R13D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40e8c0

            neg EDX
.L_40e8c0:

            movsxd RDX,EDX
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP+8],EAX
            add RSP,8
.L_40e8d2:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40e8e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e8f0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            mov RBP,RDX
            sub RSP,8
.L_40e907:

            mov R15,QWORD PTR [RDI+128]
            movzx EBX,WORD PTR [RSI+132]
            mov R14D,DWORD PTR [RDI+136]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40e936

            mov RDI,R15
            call .L_407ab0

            movsxd RCX,DWORD PTR [R15+148]
.L_40e936:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40e951

            neg EDX
.L_40e951:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R13+134]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP],EAX
            mov R15,QWORD PTR [R12+128]
            mov R14D,DWORD PTR [R12+136]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40e991

            mov RDI,R15
            call .L_407ab0

            movsxd RCX,DWORD PTR [R15+148]
.L_40e991:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40e9ac

            neg EDX
.L_40e9ac:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R13+136]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP+4],EAX
            mov R13D,DWORD PTR [R12+136]
            mov R12,QWORD PTR [R12+128]
            movsxd RCX,DWORD PTR [R12+148]
            test ECX,ECX
            jne .L_40e9ee

            mov RDI,R12
            call .L_407ab0

            movsxd RCX,DWORD PTR [R12+148]
.L_40e9ee:

            movsxd RDX,R13D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40ea09

            neg EDX
.L_40ea09:

            movsxd RDX,EDX
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP+8],EAX
            add RSP,8
.L_40ea1b:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40ea2b:

            nop
            nop
            nop
            nop
            nop
.L_40ea30:

            push R15
            push R14
            mov R15D,EDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_658400]
            mov RBP,RSI
            mov R12,RCX
            sub RSP,56
.L_40ea51:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_40ea61:

            mfence 
            mov R14,QWORD PTR [RBP+168]
            test R14,R14
            je .L_40edb0
.L_40ea74:

            cmp R15D,DWORD PTR [R14+4]
            jb .L_40ec00
.L_40ea7e:

            mov EAX,DWORD PTR [R12]
            xor EBP,EBP
.L_40ea84:

            mov R15,QWORD PTR [R13+128]
            mov EBX,EAX
            mov R14D,DWORD PTR [R13+136]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            je .L_40ed68
.L_40eaa3:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40eabe

            neg EDX
.L_40eabe:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R12+4]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [R12],EAX
            mov R15,QWORD PTR [R13+128]
            mov R14D,DWORD PTR [R13+140]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40eafb

            mov RDI,R15
            call .L_407ab0

            movsxd RCX,DWORD PTR [R15+148]
.L_40eafb:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40eb16

            neg EDX
.L_40eb16:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R12+8]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [R12+4],EAX
            mov R15,QWORD PTR [R13+128]
            mov R14D,DWORD PTR [R13+136]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40eb54

            mov RDI,R15
            call .L_407ab0

            movsxd RCX,DWORD PTR [R15+148]
.L_40eb54:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40eb6f

            neg EDX
.L_40eb6f:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R12+12]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [R12+8],EAX
            mov R14D,DWORD PTR [R13+140]
            mov R13,QWORD PTR [R13+128]
            movsxd RCX,DWORD PTR [R13+148]
            test ECX,ECX
            jne .L_40ebad

            mov RDI,R13
            call .L_407ab0

            movsxd RCX,DWORD PTR [R13+148]
.L_40ebad:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40ebc8

            neg EDX
.L_40ebc8:

            movsxd RDX,EDX
            add RAX,RDX
            cqo 
            idiv RCX
            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            mov DWORD PTR [R12+12],EAX
            mov EAX,EBP
            jne .L_40f13e

            add RSP,56
.L_40ebf2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ec00:

            cmp BYTE PTR [R14],0
            mov R9,QWORD PTR [R14+8]
            mov EAX,R15D
            lea R10D,DWORD PTR [R15+1]
            jne .L_40ed80

            lea R8,QWORD PTR [R9+RAX*4]
            movzx EAX,BYTE PTR [R8]
            movzx EDI,BYTE PTR [R8+1]
            movzx EDX,BYTE PTR [R8+3]
            shl EDI,16
            shl EAX,24
            lea EAX,DWORD PTR [RAX+RDI*1]
            movzx EDI,BYTE PTR [R8+2]
            lea R8,QWORD PTR [R9+R10*4]
            shl EDI,8
            add EDI,EAX
            movzx EAX,BYTE PTR [R8+1]
            add EDI,EDX
            movzx EDX,BYTE PTR [R8]
            shl EAX,16
            mov ESI,EDX
            shl ESI,24
            lea EDX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R8+3]
            add EAX,EDX
.L_40ec65:

            cmp EDI,EAX
            ja .L_40ea7e

            cmp EAX,DWORD PTR [R14+40]
            ja .L_40ea7e

            sub EAX,EDI
            cmp EAX,9
            jbe .L_40eee0

            mov EDX,EDI
            add RDX,QWORD PTR [R14+16]
            movzx ECX,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX+3]
            movzx ESI,BYTE PTR [RDX+7]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDX+6]
            shl EAX,8
            add EAX,ESI
            cmp CX,AX
            jge .L_40ef90

            movzx EAX,WORD PTR [RDX+2]
.L_40ecaf:

            rol AX,8
            cwde 
            mov DWORD PTR [R12],EAX
            movzx ESI,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            movzx EDI,BYTE PTR [RDX+9]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [RDX+8]
            shl ECX,8
            add ECX,EDI
            cmp SI,CX
            jle .L_40ef80

            movzx ESI,WORD PTR [RDX+4]
.L_40ecdf:

            rol SI,8
            movsx ESI,SI
            mov DWORD PTR [R12+4],ESI
            movzx EDI,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            movzx R8D,BYTE PTR [RDX+7]
            shl EDI,8
            add EDI,ECX
            movzx ECX,BYTE PTR [RDX+6]
            shl ECX,8
            add ECX,R8D
            cmp DI,CX
            jle .L_40ef70

            movzx ECX,WORD PTR [RDX+2]
.L_40ed14:

            rol CX,8
            movsx ECX,CX
            sub ECX,EAX
            mov DWORD PTR [R12+8],ECX
            movzx EDI,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            movzx R8D,BYTE PTR [RDX+9]
            shl EDI,8
            add EDI,ECX
            movzx ECX,BYTE PTR [RDX+8]
            shl ECX,8
            add ECX,R8D
            cmp DI,CX
            jge .L_40ef60

            movzx EDX,WORD PTR [RDX+4]
.L_40ed4b:

            rol DX,8
            mov EBP,1
            movsx EDX,DX
            sub EDX,ESI
            mov DWORD PTR [R12+12],EDX
            jmp .L_40ea84
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ed68:

            mov RDI,R15
            call .L_407ab0

            movsxd RCX,DWORD PTR [R15+148]
            jmp .L_40eaa3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ed80:

            lea RAX,QWORD PTR [R9+RAX*2]
            movzx EDI,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,EDX
            lea RDX,QWORD PTR [R9+R10*2]
            movzx EDI,DI
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            add EDI,EDI
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            add EAX,EAX
            jmp .L_40ec65
          .byte 0x90
.L_40edb0:

            mov ESI,48
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R14,RAX
            je .L_40ef50

            mov RDI,QWORD PTR [RBP+160]
            mov RAX,QWORD PTR [RDI+120]
            mov QWORD PTR [RSP+24],RDI
            test RAX,RAX
            je .L_40eef0

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1751474532
            call RAX

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_40eef0
.L_40edff:

            mov RDI,QWORD PTR [RSP]
            call .L_401c30

            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_401d50

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RAX
            call .L_401d40

            mov RDX,QWORD PTR [RSP+16]
            mov ESI,EAX
            add RSI,RDX
            jb .L_40f143

            test RDX,RDX
            je .L_40ef41

            cmp EAX,53
            ja .L_40ef00
.L_40ee48:

            mov RDI,QWORD PTR [RSP+8]
            call .L_401950

            mov RDI,QWORD PTR [RSP]
            call .L_401950

            call .L_401c20

            mov QWORD PTR [RSP],RAX
.L_40ee64:

            mov RDI,QWORD PTR [RSP]
            call .L_401d20

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_401d50

            test RAX,RAX
            cmove RAX,RBX
            movzx EDX,BYTE PTR [RAX+50]
            movzx ESI,BYTE PTR [RAX+51]
            shl EDX,8
            add EDX,ESI
            movsx ESI,DX
            cmp ESI,1
            ja .L_40eea8

            movzx ESI,BYTE PTR [RAX+52]
            movzx EAX,BYTE PTR [RAX+53]
            shl ESI,8
            add SI,AX
            je .L_40efa0
.L_40eea8:

            mov RDI,QWORD PTR [RSP]
            call .L_401950
.L_40eeb1:

            xor EAX,EAX
            lock cmpxchg QWORD PTR [RBP+168],R14
            je .L_40ea74

            mov RDI,QWORD PTR [R14+24]
            call .L_401950

            mov RDI,QWORD PTR [R14+32]
            call .L_401950

            jmp .L_40ea61
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40eee0:

            mov EAX,DWORD PTR [R12]
            mov EBP,1
            jmp .L_40ea84
          .byte 0x66
          .byte 0x90
.L_40eef0:

            call .L_401c20

            mov QWORD PTR [RSP],RAX
            jmp .L_40edff
          .byte 0x66
          .byte 0x90
.L_40ef00:

            movzx EAX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_40ee48

            movzx ESI,BYTE PTR [RDX+12]
            movzx EAX,BYTE PTR [RDX+13]
            shl ESI,24
            shl EAX,16
            lea ESI,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [RDX+14]
            movzx EDX,BYTE PTR [RDX+15]
            shl EAX,8
            add EAX,ESI
            add EAX,EDX
            cmp EAX,1594834165
            jne .L_40ee48
.L_40ef41:

            mov RDI,QWORD PTR [RSP+8]
            call .L_401950

            jmp .L_40ee64
.L_40ef50:

            lea R14,QWORD PTR [RIP+.L_658400]
            jmp .L_40ea74
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ef60:

            movzx EDX,WORD PTR [RDX+8]
            jmp .L_40ed4b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ef70:

            movzx ECX,WORD PTR [RDX+6]
            jmp .L_40ed14
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef80:

            movzx ESI,WORD PTR [RDX+8]
            jmp .L_40ecdf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef90:

            movzx EAX,WORD PTR [RDX+6]
            jmp .L_40ecaf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40efa0:

            mov RDI,QWORD PTR [RSP]
            test DX,DX
            sete BYTE PTR [R14]
            call .L_401950

            mov RDI,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_40f118

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1819239265
            call RAX

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_40f118
.L_40efdd:

            mov RDI,QWORD PTR [RSP]
            call .L_401c30

            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_401d50

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RAX
            call .L_401d40

            mov RDX,QWORD PTR [RSP+16]
            mov EAX,EAX
            add RAX,RDX
            jb .L_40f143

            mov RDI,QWORD PTR [RSP+8]
            call .L_401950

            mov RAX,QWORD PTR [RSP]
            mov RDI,RAX
            mov QWORD PTR [R14+24],RAX
            call .L_401d20

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+24]
            test RAX,RAX
            cmove RAX,RBX
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_40f130

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1735162214
            call RAX

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_40f130
.L_40f071:

            mov RDI,QWORD PTR [RSP]
            call .L_401c30

            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_401d50

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RAX
            call .L_401d40

            mov RDX,QWORD PTR [RSP+16]
            mov EAX,EAX
            add RAX,RDX
            jb .L_40f143

            mov RDI,QWORD PTR [RSP+8]
            call .L_401950

            mov RAX,QWORD PTR [RSP]
            mov RDI,RAX
            mov QWORD PTR [R14+32],RAX
            call .L_401d20

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [R14+24]
            test RAX,RAX
            cmove RAX,RBX
            mov QWORD PTR [R14+16],RAX
            call .L_401d40

            cmp BYTE PTR [R14],0
            mov EDX,4
            mov ESI,2
            mov RDI,QWORD PTR [R14+32]
            cmove ESI,EDX
            xor EDX,EDX
            div ESI
            cmp EAX,1
            adc EAX,-1
            mov DWORD PTR [R14+4],EAX
            call .L_401d40

            mov DWORD PTR [R14+40],EAX
            jmp .L_40eeb1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f118:

            call .L_401c20

            mov QWORD PTR [RSP],RAX
            jmp .L_40efdd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f130:

            call .L_401c20

            mov QWORD PTR [RSP],RAX
            jmp .L_40f071
.L_40f13e:

            call __stack_chk_fail@PLT
.L_40f143:

            lea RCX,QWORD PTR [RIP+.L_412620]
            lea RSI,QWORD PTR [RIP+.L_40f801]
            lea RDI,QWORD PTR [RIP+.L_40f819]
            mov EDX,218
            call __assert_fail@PLT
.L_40f162:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f170:

            push R15
            push R14
            mov ESI,176
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            sub RSP,8
.L_40f186:

            mov RBP,QWORD PTR [RDI+128]
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_40f530

            mov RBX,RAX
            mov RDI,RAX
            mov RSI,RBP
            call .L_411430

            lea RDI,QWORD PTR [RBX+80]
            mov R8D,1330851634
            mov ECX,1752003704
            mov EDX,1751672161
            mov RSI,RBP
            call .L_411090

            mov EAX,DWORD PTR [RBP+148]
            test EAX,EAX
            je .L_40f438
.L_40f1d8:

            mov DWORD PTR [RBX+128],EAX
            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_40f418

            mov RDX,QWORD PTR [RBP+128]
            mov ESI,1986553185
            mov RDI,RBP
            call RAX

            test RAX,RAX
            mov R12,RAX
            je .L_40f418
.L_40f208:

            mov RDI,R12
            call .L_401c30

            xor ESI,ESI
            mov R13,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R13
            mov R15,RAX
            call .L_401d40

            mov EDX,EAX
            add RDX,R15
            jb .L_40f53f

            test R15,R15
            je .L_40f408

            cmp EAX,35
            ja .L_40f3f0
.L_40f245:

            mov RDI,R13
            call .L_401950

            mov RDI,R12
            call .L_401950

            call .L_401c20

            mov R12,RAX
.L_40f25d:

            mov RDI,R12
            call .L_401d20

            xor ESI,ESI
            mov RDI,R12
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658400]
            test RAX,RAX
            mov RDI,R12
            cmove RAX,RDX
            movzx EDX,BYTE PTR [RAX+34]
            movzx ECX,BYTE PTR [RAX+35]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            mov DWORD PTR [RBX+124],EDX
            movzx EDX,BYTE PTR [RAX+4]
            movzx ECX,BYTE PTR [RAX+5]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+132],DX
            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+134],DX
            movzx EDX,BYTE PTR [RAX+8]
            movzx EAX,BYTE PTR [RAX+9]
            shl EDX,8
            add EAX,EDX
            mov WORD PTR [RBX+136],AX
            call .L_401950

            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_40f428

            mov RDX,QWORD PTR [RBP+128]
            mov ESI,1986884728
            mov RDI,RBP
            call RAX

            test RAX,RAX
            mov R12,RAX
            je .L_40f428
.L_40f2fe:

            mov RDI,R12
            call .L_401c30

            xor ESI,ESI
            mov R13,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R13
            mov R15,RAX
            call .L_401d40

            mov EAX,EAX
            add RAX,R15
            jb .L_40f53f

            mov RDI,R13
            call .L_401950

            mov QWORD PTR [RBX+152],R12
            mov RDI,R12
            call .L_401d40

            mov EDX,DWORD PTR [RBX+124]
            lea ECX,DWORD PTR [RDX*4]
            cmp EAX,ECX
            jae .L_40f35d

            mov EDX,EAX
            shr EDX,2
            lea ECX,DWORD PTR [RDX*4]
            mov DWORD PTR [RBX+124],EDX
.L_40f35d:

            sub EAX,ECX
            mov R12,QWORD PTR [RBX+152]
            shr EAX,1
            add EAX,EDX
            test EDX,EDX
            mov DWORD PTR [RBX+120],EAX
            je .L_40f450
.L_40f375:

            mov RDI,R12
            call .L_401d20

            xor ESI,ESI
            mov RDI,R12
            lea R12,QWORD PTR [RIP+.L_40e7b0]
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658400]
            test RAX,RAX
            mov QWORD PTR [RBX+160],RBP
            mov QWORD PTR [RBX+168],0
            cmove RAX,RDX
            mov QWORD PTR [RBX+144],RAX
.L_40f3b5:

            mfence 
            mov RBP,QWORD PTR [RIP+.L_6583e0]
            test RBP,RBP
            je .L_40f478
.L_40f3c8:

            add RSP,8
.L_40f3cc:

            mov RDX,RBX
            mov RSI,RBP
            pop RBX
            mov RDI,R14
            lea RCX,QWORD PTR [RIP+.L_40e2d0]
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_40ad10
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f3f0:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_40f245
.L_40f408:

            mov RDI,R13
            call .L_401950

            jmp .L_40f25d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f418:

            call .L_401c20

            mov R12,RAX
            jmp .L_40f208
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f428:

            call .L_401c20

            mov R12,RAX
            jmp .L_40f2fe
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f438:

            mov RDI,RBP
            call .L_407ab0

            mov EAX,DWORD PTR [RBP+148]
            jmp .L_40f1d8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f450:

            mov RDI,R12
            mov QWORD PTR [RBX+120],0
            call .L_401950

            call .L_401c20

            mov R12,RAX
            mov QWORD PTR [RBX+152],RAX
            jmp .L_40f375
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f478:

            call .L_4088b0

            xor ECX,ECX
            mov RDI,RAX
            xor EDX,EDX
            mov RSI,R12
            mov RBP,RAX
            call .L_408ce0

            lea RSI,QWORD PTR [RIP+.L_40e8f0]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_408d80

            lea RSI,QWORD PTR [RIP+.L_40e2a0]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_408e30

            lea RSI,QWORD PTR [RIP+.L_40e340]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_408ee0

            lea RSI,QWORD PTR [RIP+.L_40e600]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_408f90

            lea RSI,QWORD PTR [RIP+.L_40e6d0]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_409040

            lea RSI,QWORD PTR [RIP+.L_40ea30]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_4093b0

            mov RDI,RBP
            call .L_408cc0

            xor EAX,EAX
            lock cmpxchg QWORD PTR [RIP+.L_6583e0],RBP
            jne .L_40f55e

            lea RDI,QWORD PTR [RIP+.L_40e2c0]
            call .L_44dae0

            jmp .L_40f3c8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f530:

            add RSP,8
.L_40f534:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f53f:

            lea RCX,QWORD PTR [RIP+.L_412620]
            lea RSI,QWORD PTR [RIP+.L_40f801]
            lea RDI,QWORD PTR [RIP+.L_40f819]
            mov EDX,218
            call __assert_fail@PLT
.L_40f55e:

            mov RDI,RBP
            call .L_4089d0

            jmp .L_40f3b5
.L_40f56b:

            nop
            nop
            nop
            nop
            nop
.L_40f570:

            push R12
            push RBP
            mov EBP,DWORD PTR [RDI+40]
            push RBX
.L_40f577:

            mov R11,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            mov R9D,EBP
            sub R9D,1
            js .L_40f5ea

            xor R10D,R10D
            jmp .L_40f599
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f590:

            lea R9D,DWORD PTR [RCX-1]
            cmp R9D,R10D
            jl .L_40f5ea
.L_40f599:

            lea EAX,DWORD PTR [R10+R9*1]
            mov ECX,EAX
            shr ECX,31
            add ECX,EAX
            sar ECX,1
            movsxd R8,ECX
            add R8,R8
            lea R12,QWORD PTR [R11+R8*1]
            movzx EAX,BYTE PTR [R12]
            movzx R12D,BYTE PTR [R12+1]
            shl EAX,8
            add EAX,R12D
            movzx EAX,AX
            cmp EAX,ESI
            ja .L_40f590

            add R8,RBX
            movzx EAX,BYTE PTR [R8]
            movzx R8D,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,R8D
            movzx EAX,AX
            cmp EAX,ESI
            jae .L_40f5f8

            lea R10D,DWORD PTR [RCX+1]
            cmp R9D,R10D
            jge .L_40f599
.L_40f5ea:

            xor EAX,EAX
.L_40f5ec:

            pop RBX
.L_40f5ed:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f5f8:

            mov R9,QWORD PTR [RDI+24]
            mov R8D,ECX
            add R8,R8
            add R9,R8
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add AX,R9W
            je .L_40f690

            sub ESI,EBP
            add R11,R8
            add ESI,ECX
            movzx ECX,AX
            mov EAX,ECX
            shr EAX,1
            lea ECX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [R11]
            movzx ESI,BYTE PTR [R11+1]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            sub ECX,EAX
            xor EAX,EAX
            cmp DWORD PTR [RDI+44],ECX
            jbe .L_40f5ec

            mov RSI,QWORD PTR [RDI+32]
            lea RSI,QWORD PTR [RSI+RCX*2]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            test CX,CX
            movzx R9D,CX
            je .L_40f5ec

            add R8,QWORD PTR [RDI+16]
            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            add ESI,R9D
.L_40f677:

            and ESI,65535
            mov EAX,1
            pop RBX
.L_40f683:

            mov DWORD PTR [RDX],ESI
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f690:

            add R8,QWORD PTR [RDI+16]
            movzx EAX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            add ESI,EAX
            jmp .L_40f677
.L_40f6a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f6b0:

            movzx EAX,BYTE PTR [RDI+12]
            movzx R11D,BYTE PTR [RDI+13]
            shl EAX,24
            shl R11D,16
            add EAX,R11D
            movzx R11D,BYTE PTR [RDI+14]
            shl R11D,8
            add R11D,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add R11D,EAX
            mov R10D,R11D
            sub R10D,1
            js .L_40f7fe

            push RBP
            push RBX
.L_40f6e5:

            add RDI,12
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
.L_40f6f0:

            lea EAX,DWORD PTR [R10+RBP*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBX,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [RBX]
            movzx EAX,BYTE PTR [RBX+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40f7f8

            movzx ECX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40f7e0

            cmp R9D,-1
            je .L_40f7ed

            cmp R9D,R11D
            lea R8,QWORD PTR [RIP+.L_658400]
            jb .L_40f7d0
.L_40f772:

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            pop RBX
.L_40f77d:

            pop RBP
.L_40f77e:

            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+11]
            add EAX,ECX
            movzx ECX,BYTE PTR [R8]
            add ESI,EAX
            movzx EAX,BYTE PTR [R8+1]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+3]
            add EAX,ECX
            sub ESI,EAX
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f7d0:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [RDI+RAX*4+4]
            jmp .L_40f772
          .byte 0x66
          .byte 0x90
.L_40f7e0:

            lea EBP,DWORD PTR [R9+1]
.L_40f7e4:

            cmp EBP,R10D
            jle .L_40f6f0
.L_40f7ed:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f7f8:

            lea R10D,DWORD PTR [R9-1]
            jmp .L_40f7e4
.L_40f7fe:

            xor EAX,EAX
            ret 
.L_40f801:
          .string "hb-open-type-private.hh"
.L_40f819:
          .string "this->start <= this->end"
# WARNING: found overlapping blocks at address f5eb
# WARNING: found overlapping blocks at address f5f4
# WARNING: found overlapping blocks at address f5fd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f840:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,13
            ja .L_40fd68

            lea RCX,QWORD PTR [RIP+.L_40fd6c]
            movzx EAX,AX
            push R15
            push R14
            push R13
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            push R12
            push RBP
            push RBX
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f878:

            lea EBP,DWORD PTR [R9+1]
.L_40f87c:

            cmp EBP,R10D
            jle .L_40fa40
.L_40f885:

            xor EAX,EAX
.L_40f887:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_40f898:

            movzx R11D,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            lea RBP,QWORD PTR [RDI+14]
            shl R11D,8
            add R11D,EAX
            shr R11W,1
            movzx EAX,R11W
            movzx R11D,R11W
            lea R12,QWORD PTR [RAX+RAX*1+2]
            lea R9D,DWORD PTR [R11-1]
            lea RBX,QWORD PTR [RBP+R12*1]
            sub R12,2
            cmp R9D,-1
            lea R13,QWORD PTR [RBX+R12*1]
            lea R14,QWORD PTR [R13+R12*1]
            je .L_40f885

            xor R10D,R10D
            jmp .L_40f8e9
          .byte 0x66
          .byte 0x90
.L_40f8e0:

            lea R9D,DWORD PTR [RCX-1]
.L_40f8e4:

            cmp R10D,R9D
            jg .L_40f885
.L_40f8e9:

            lea ECX,DWORD PTR [R10+R9*1]
            sar ECX,1
            movsxd R8,ECX
            add R8,R8
            lea R15,QWORD PTR [RBX+R8*1]
            movzx EAX,BYTE PTR [R15]
            movzx R15D,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,R15D
            movzx EAX,AX
            cmp ESI,EAX
            jb .L_40f8e0

            lea R15,QWORD PTR [RBP+R8*1]
            movzx R10D,BYTE PTR [R15]
            movzx R15D,BYTE PTR [R15+1]
            shl R10D,8
            add R10D,R15D
            movzx R10D,R10W
            cmp ESI,R10D
            jbe .L_40fcb0

            lea R10D,DWORD PTR [RCX+1]
            jmp .L_40f8e4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f940:

            movzx EAX,BYTE PTR [RDI+6]
            movzx ECX,BYTE PTR [RDI+7]
            lea R8,QWORD PTR [RIP+.L_658400]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+9]
            movzx EAX,AX
            sub ESI,EAX
            movzx EAX,BYTE PTR [RDI+8]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_40f972

            lea R8,QWORD PTR [RDI+RSI*2+10]
.L_40f972:

            movzx ECX,BYTE PTR [R8]
            movzx ESI,BYTE PTR [R8+1]
            xor EAX,EAX
            shl ECX,8
            add CX,SI
            je .L_40f887

            movzx ECX,CX
.L_40f98c:

            pop RBX
.L_40f98d:

            mov EAX,1
            mov DWORD PTR [RDX],ECX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40f9a0:

            movzx ECX,BYTE PTR [RDI+12]
            movzx EAX,BYTE PTR [RDI+13]
            lea R8,QWORD PTR [RIP+.L_658400]
            shl EAX,16
            shl ECX,24
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+14]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+15]
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+16]
            sub ESI,EAX
            movzx EAX,BYTE PTR [RDI+17]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+18]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+19]
            add EAX,ECX
            cmp ESI,EAX
            jae .L_40f972

            lea R8,QWORD PTR [RDI+RSI*2+20]
            jmp .L_40f972
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fa00:

            movzx EAX,BYTE PTR [RDI+12]
            movzx R11D,BYTE PTR [RDI+13]
            shl EAX,24
            shl R11D,16
            lea EAX,DWORD PTR [RAX+R11*1]
            movzx R11D,BYTE PTR [RDI+14]
            shl R11D,8
            add R11D,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add R11D,EAX
            mov R10D,R11D
            sub R10D,1
            js .L_40f885

            add RDI,12
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fa40:

            lea EAX,DWORD PTR [RBP+R10*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBX,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [RBX]
            movzx EAX,BYTE PTR [RBX+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40fca0

            movzx ECX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40f878

            cmp R9D,-1
            je .L_40f885

            cmp R9D,R11D
            lea R8,QWORD PTR [RIP+.L_658400]
            jb .L_40fc48
.L_40fac7:

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+11]
            add EAX,ECX
            movzx ECX,BYTE PTR [R8]
            add ESI,EAX
            movzx EAX,BYTE PTR [R8+1]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+3]
            add EAX,ECX
            sub ESI,EAX
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40f887
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fb28:

            movzx EAX,BYTE PTR [RDI+12]
            movzx R11D,BYTE PTR [RDI+13]
            shl EAX,24
            shl R11D,16
            lea EAX,DWORD PTR [RAX+R11*1]
            movzx R11D,BYTE PTR [RDI+14]
            shl R11D,8
            add R11D,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add R11D,EAX
            mov R10D,R11D
            sub R10D,1
            js .L_40f885

            add RDI,12
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fb68:

            lea EAX,DWORD PTR [RBP+R10*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBX,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [RBX]
            movzx EAX,BYTE PTR [RBX+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40fc90

            movzx ECX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40fc78

            cmp R9D,-1
            je .L_40f885

            cmp R9D,R11D
            lea R8,QWORD PTR [RIP+.L_658400]
            jb .L_40fc60
.L_40fbeb:

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            mov ESI,ECX
            shl EAX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [R8+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+11]
            add EAX,ECX
            mov DWORD PTR [RDX],EAX
            mov EAX,1
            jmp .L_40f887
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40fc20:

            xor EAX,EAX
            cmp ESI,255
            ja .L_40f887

            mov ESI,ESI
            movzx ECX,BYTE PTR [RDI+RSI*1+6]
            test ECX,ECX
            je .L_40f887

            jmp .L_40f98c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fc48:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [RDI+RAX*4+4]
            jmp .L_40fac7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fc60:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [RDI+RAX*4+4]
            jmp .L_40fbeb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fc78:

            lea EBP,DWORD PTR [R9+1]
.L_40fc7c:

            cmp EBP,R10D
            jle .L_40fb68

            jmp .L_40f885
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fc90:

            lea R10D,DWORD PTR [R9-1]
            jmp .L_40fc7c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fca0:

            lea R10D,DWORD PTR [R9-1]
            jmp .L_40f87c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fcb0:

            lea R10,QWORD PTR [R14+R8*1]
            movzx R9D,BYTE PTR [R10]
            movzx R10D,BYTE PTR [R10+1]
            shl R9D,8
            add R9W,R10W
            jne .L_40fcf0

            add R8,R13
            movzx EAX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            add ESI,EAX
.L_40fcdd:

            and ESI,65535
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40f887
          .byte 0x90
.L_40fcf0:

            sub ESI,R11D
            movzx R9D,R9W
            shl R11D,3
            add ECX,ESI
            shr R9D,1
            sub ECX,EAX
            movzx EAX,BYTE PTR [RDI+3]
            add R9D,ECX
            movzx ECX,BYTE PTR [RDI+2]
            shl ECX,8
            add ECX,EAX
            xor EAX,EAX
            movzx ECX,CX
            sub ECX,16
            sub ECX,R11D
            shr ECX,1
            cmp R9D,ECX
            jae .L_40f887

            lea RCX,QWORD PTR [R12+R9*2]
            add R14,RCX
            movzx ECX,BYTE PTR [R14]
            movzx ESI,BYTE PTR [R14+1]
            shl ECX,8
            add ECX,ESI
            test CX,CX
            movzx EDI,CX
            je .L_40f887

            add R8,R13
            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            add ESI,EDI
            jmp .L_40fcdd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fd68:

            xor EAX,EAX
            ret 
.L_40fd6b:
          .byte 0x90
.L_40fd6c:
          .long .L_40fc20-.L_40fd6c
          .long .L_40f885-.L_40fd6c
          .long .L_40f885-.L_40fd6c
          .long .L_40f885-.L_40fd6c
          .long .L_40f898-.L_40fd6c
          .long .L_40f885-.L_40fd6c
          .long .L_40f940-.L_40fd6c
          .long .L_40f885-.L_40fd6c
          .long .L_40f885-.L_40fd6c
          .long .L_40f885-.L_40fd6c
          .long .L_40f9a0-.L_40fd6c
          .long .L_40f885-.L_40fd6c
          .long .L_40fa00-.L_40fd6c
          .long .L_40fb28-.L_40fd6c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_40fdb0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_40fdba:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,13
            ja .L_410534

            lea R9,QWORD PTR [RIP+.L_410838]
            movzx R8D,AX
            movsxd RCX,DWORD PTR [R9+R8*4]
            add RCX,R9
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fde8:

            movzx EAX,BYTE PTR [RDI+6]
            movzx ECX,BYTE PTR [RDI+7]
            lea RBX,QWORD PTR [RDI+14]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+3]
            shr AX,1
            movzx R13D,AX
            movzx EAX,AX
            lea RBP,QWORD PTR [RAX+RAX*1+2]
            movzx EAX,BYTE PTR [RDI+2]
            lea R12D,DWORD PTR [R13-1]
            lea R11,QWORD PTR [RBX+RBP*1]
            sub RBP,2
            shl EAX,8
            lea R14,QWORD PTR [R11+RBP*1]
            add EAX,ECX
            lea ECX,DWORD PTR [R13*8]
            movzx EAX,AX
            lea R15,QWORD PTR [R14+RBP*1]
            sub EAX,16
            sub EAX,ECX
            shr EAX,1
            cmp R12D,-1
            mov DWORD PTR [RSP-4],EAX
            je .L_410470

            mov R9D,R12D
            xor R10D,R10D
            jmp .L_40fe65
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fe58:

            lea R9D,DWORD PTR [RDI-1]
.L_40fe5c:

            cmp R9D,R10D
            jl .L_410470
.L_40fe65:

            lea EDI,DWORD PTR [R9+R10*1]
            sar EDI,1
            movsxd R8,EDI
            add R8,R8
            lea RCX,QWORD PTR [R11+R8*1]
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jb .L_40fe58

            lea R10,QWORD PTR [RBX+R8*1]
            movzx ECX,BYTE PTR [R10]
            movzx R10D,BYTE PTR [R10+1]
            shl ECX,8
            add ECX,R10D
            movzx ECX,CX
            cmp ESI,ECX
            jbe .L_4105b0

            lea R10D,DWORD PTR [RDI+1]
            jmp .L_40fe5c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40feb0:

            movzx ECX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            mov R8D,ESI
            movzx R9D,BYTE PTR [RDI+9]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+8]
            movzx ECX,CX
            sub R8D,ECX
            shl EAX,8
            add EAX,R9D
            lea R9,QWORD PTR [RIP+.L_658400]
            movzx EAX,AX
            cmp R8D,EAX
            jae .L_40fee9

            lea R9,QWORD PTR [RDI+R8*2+10]
.L_40fee9:

            movzx R8D,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl R8D,8
            add R8W,R9W
            jne .L_40ff94

            cmp ESI,255
            jbe .L_410570

            nop
            nop
            nop
            nop
.L_40ff10:

            xor EAX,EAX
.L_40ff12:

            pop RBX
.L_40ff13:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ff20:

            movzx ECX,BYTE PTR [RDI+12]
            movzx EAX,BYTE PTR [RDI+13]
            mov R10D,ESI
            movzx R8D,BYTE PTR [RDI+16]
            lea R9,QWORD PTR [RIP+.L_658400]
            shl EAX,16
            shl ECX,24
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+14]
            shl R8D,24
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+15]
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+17]
            sub R10D,EAX
            shl ECX,16
            lea R8D,DWORD PTR [R8+RCX*1]
            movzx ECX,BYTE PTR [RDI+18]
            shl ECX,8
            add ECX,R8D
            movzx R8D,BYTE PTR [RDI+19]
            add ECX,R8D
            cmp R10D,ECX
            jae .L_40ff7d

            lea R9,QWORD PTR [RDI+R10*2+20]
.L_40ff7d:

            movzx R8D,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl R8D,8
            add R8W,R9W
            je .L_4104f8
.L_40ff94:

            movzx R8D,R8W
            mov EAX,1
            mov DWORD PTR [RDX],R8D
.L_40ffa0:

            pop RBX
.L_40ffa1:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ffb0:

            movzx EAX,BYTE PTR [RDI+12]
            movzx EBP,BYTE PTR [RDI+13]
            shl EAX,24
            shl EBP,16
            lea EAX,DWORD PTR [RAX+RBP*1]
            movzx EBP,BYTE PTR [RDI+14]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add EBP,EAX
            mov R13D,EBP
            sub R13D,1
            js .L_41024d

            lea R12,QWORD PTR [RDI+12]
            mov EBX,R13D
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fff0:

            lea EAX,DWORD PTR [RBX+R11*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [R12+RAX*4+4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_410450

            movzx ECX,BYTE PTR [R10+4]
            movzx EAX,BYTE PTR [R10+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_410240

            cmp R9D,-1
            je .L_41024d

            cmp R9D,EBP
            lea R8,QWORD PTR [RIP+.L_658400]
            jb .L_410210
.L_41007e:

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+11]
            add EAX,ECX
            movzx ECX,BYTE PTR [R8]
            add ESI,EAX
            movzx EAX,BYTE PTR [R8+1]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+3]
            add EAX,ECX
            sub ESI,EAX
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40ffa0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4100e0:

            movzx EAX,BYTE PTR [RDI+12]
            movzx EBP,BYTE PTR [RDI+13]
            shl EAX,24
            shl EBP,16
            lea EAX,DWORD PTR [RAX+RBP*1]
            movzx EBP,BYTE PTR [RDI+14]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add EBP,EAX
            mov R13D,EBP
            sub R13D,1
            js .L_410365

            lea R12,QWORD PTR [RDI+12]
            mov EBX,R13D
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410120:

            lea EAX,DWORD PTR [RBX+R11*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [R12+RAX*4+4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_410460

            movzx ECX,BYTE PTR [R10+4]
            movzx EAX,BYTE PTR [R10+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_410358

            cmp R9D,-1
            je .L_410365

            cmp R9D,EBP
            lea RDI,QWORD PTR [RIP+.L_658400]
            jb .L_410228
.L_4101aa:

            movzx ECX,BYTE PTR [RDI+8]
            movzx EAX,BYTE PTR [RDI+9]
            mov ESI,ECX
            shl EAX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [RDI+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+11]
            add EAX,ECX
            mov DWORD PTR [RDX],EAX
            mov EAX,1
            jmp .L_40ffa0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4101e0:

            cmp ESI,255
            ja .L_40ff10

            mov ESI,ESI
            movzx EAX,BYTE PTR [RDI+RSI*1+6]
            test EAX,EAX
            je .L_40ff10
.L_4101fb:

            mov DWORD PTR [RDX],EAX
            mov EAX,1
            jmp .L_40ffa0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410210:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [R12+RAX*4+4]
            jmp .L_41007e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410228:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea RDI,QWORD PTR [R12+RAX*4+4]
            jmp .L_4101aa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410240:

            lea R11D,DWORD PTR [R9+1]
.L_410244:

            cmp R11D,EBX
            jle .L_40fff0
.L_41024d:

            cmp ESI,255
            ja .L_40ff10

            add ESI,61440
.L_41025f:

            test R13D,R13D
            js .L_40ff10

            add RDI,12
            xor R11D,R11D
            nop
.L_410270:

            lea EAX,DWORD PTR [R13+R11*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_41067e

            movzx ECX,BYTE PTR [R10+4]
            movzx EAX,BYTE PTR [R10+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_4105f0

            cmp R9D,-1
            je .L_40ff10

            cmp R9D,EBP
            lea RCX,QWORD PTR [RIP+.L_658400]
            jae .L_410307

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea RCX,QWORD PTR [RDI+RAX*4+4]
.L_410307:

            movzx EAX,BYTE PTR [RCX+8]
            movzx EDI,BYTE PTR [RCX+9]
            shl EAX,24
            shl EDI,16
            add EAX,EDI
            movzx EDI,BYTE PTR [RCX+10]
            shl EDI,8
            add EAX,EDI
            movzx EDI,BYTE PTR [RCX+11]
            add EAX,EDI
            movzx EDI,BYTE PTR [RCX+1]
            add ESI,EAX
            movzx EAX,BYTE PTR [RCX]
            shl EDI,16
            shl EAX,24
            add EAX,EDI
            movzx EDI,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EDI,8
            add EAX,EDI
            add EAX,ECX
            sub ESI,EAX
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40ffa0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410358:

            lea R11D,DWORD PTR [R9+1]
.L_41035c:

            cmp EBX,R11D
            jge .L_410120
.L_410365:

            cmp ESI,255
            ja .L_40ff10

            add ESI,61440
.L_410377:

            test R13D,R13D
            js .L_40ff10

            add RDI,12
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410390:

            lea EAX,DWORD PTR [R11+R13*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_410678

            movzx ECX,BYTE PTR [R10+4]
            movzx EAX,BYTE PTR [R10+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_410608

            cmp R9D,-1
            je .L_40ff10

            cmp R9D,EBP
            lea RCX,QWORD PTR [RIP+.L_658400]
            jae .L_410426

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea RCX,QWORD PTR [RDI+RAX*4+4]
.L_410426:

            movzx EAX,BYTE PTR [RCX+8]
            movzx ESI,BYTE PTR [RCX+9]
            shl EAX,24
            shl ESI,16
            add EAX,ESI
            movzx ESI,BYTE PTR [RCX+10]
            movzx ECX,BYTE PTR [RCX+11]
            shl ESI,8
            add EAX,ESI
            add EAX,ECX
            jmp .L_4101fb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410450:

            lea EBX,DWORD PTR [R9-1]
            jmp .L_410244
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410460:

            lea EBX,DWORD PTR [R9-1]
            jmp .L_41035c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410470:

            cmp ESI,255
            ja .L_40ff10

            add ESI,61440
.L_410482:

            cmp R12D,-1
            je .L_40ff10

            xor R8D,R8D
            jmp .L_4104a5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410498:

            lea R12D,DWORD PTR [RCX-1]
.L_41049c:

            cmp R8D,R12D
            jg .L_40ff10
.L_4104a5:

            lea ECX,DWORD PTR [R12+R8*1]
            sar ECX,1
            movsxd RDI,ECX
            add RDI,RDI
            lea R9,QWORD PTR [R11+RDI*1]
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
            cmp EAX,ESI
            ja .L_410498

            lea R9,QWORD PTR [RBX+RDI*1]
            movzx R8D,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            cmp R8D,ESI
            jae .L_410687

            lea R8D,DWORD PTR [RCX+1]
            jmp .L_41049c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4104f8:

            cmp ESI,255
            ja .L_40ff10

            add ESI,61440
.L_41050a:

            sub ESI,EAX
            lea R8,QWORD PTR [RIP+.L_658400]
            cmp ESI,ECX
            jae .L_41051c

            lea R8,QWORD PTR [RDI+RSI*2+20]
.L_41051c:

            movzx EAX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EAX,8
            add AX,CX
            jne .L_41059b

            xor EAX,EAX
            jmp .L_40ff12
.L_410534:

            cmp ESI,255
            ja .L_40ff10

            sub EAX,4
            add ESI,61440
            cmp AX,9
            ja .L_40ff10

            lea RCX,QWORD PTR [RIP+.L_410870]
            movzx EAX,AX
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410570:

            add ESI,61440
.L_410576:

            sub ESI,ECX
            lea RCX,QWORD PTR [RIP+.L_658400]
            cmp ESI,EAX
            jae .L_410588

            lea RCX,QWORD PTR [RDI+RSI*2+10]
.L_410588:

            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add AX,CX
            je .L_40ff10
.L_41059b:

            movzx EAX,AX
            mov DWORD PTR [RDX],EAX
            mov EAX,1
            jmp .L_40ffa0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4105b0:

            lea R9,QWORD PTR [R15+R8*1]
            movzx ECX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl ECX,8
            add CX,R9W
            jne .L_410620

            add R8,R14
            movzx EAX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            add ESI,EAX
.L_4105dc:

            and ESI,65535
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40ffa0
          .byte 0x66
          .byte 0x90
.L_4105f0:

            lea R11D,DWORD PTR [R9+1]
.L_4105f4:

            cmp R11D,R13D
            jle .L_410270

            xor EAX,EAX
            jmp .L_40ff12
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410608:

            lea R11D,DWORD PTR [R9+1]
.L_41060c:

            cmp R11D,R13D
            jle .L_410390

            xor EAX,EAX
            jmp .L_40ff12
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410620:

            mov R9D,ESI
            movzx ECX,CX
            sub R9D,R13D
            shr ECX,1
            add EDI,R9D
            sub EDI,EAX
            lea EAX,DWORD PTR [RDI+RCX*1]
            cmp EAX,DWORD PTR [RSP-4]
            jae .L_410470

            lea RAX,QWORD PTR [RBP+RAX*2]
            add RAX,R15
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,EAX
            test CX,CX
            movzx EAX,CX
            je .L_410470

            add R8,R14
            movzx ESI,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,ECX
            movzx ESI,SI
            add ESI,EAX
            jmp .L_4105dc
.L_410678:

            lea R13D,DWORD PTR [R9-1]
            jmp .L_41060c
.L_41067e:

            lea R13D,DWORD PTR [R9-1]
            jmp .L_4105f4
.L_410687:

            lea R9,QWORD PTR [R15+RDI*1]
            movzx R8D,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl R8D,8
            add R8W,R9W
            jne .L_4106b7

            add RDI,R14
            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            add ESI,EAX
            jmp .L_4105dc
.L_4106b7:

            sub ESI,R13D
            add ECX,ESI
            sub ECX,EAX
            movzx EAX,R8W
            shr EAX,1
            add ECX,EAX
            xor EAX,EAX
            cmp ECX,DWORD PTR [RSP-4]
            jae .L_40ffa0

            add RCX,RCX
            add RBP,RCX
            add R15,RBP
            movzx ECX,BYTE PTR [R15]
            movzx ESI,BYTE PTR [R15+1]
            shl ECX,8
            add ECX,ESI
            test CX,CX
            movzx R8D,CX
            je .L_40ffa0

            add RDI,R14
            movzx ESI,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            add ESI,R8D
            jmp .L_4105dc
.L_410710:

            movzx EBP,BYTE PTR [RDI+12]
            movzx EAX,BYTE PTR [RDI+13]
            shl EBP,24
            shl EAX,16
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+14]
            shl EAX,8
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add EBP,EAX
            lea R13D,DWORD PTR [RBP-1]
            jmp .L_41025f
.L_410738:

            movzx EAX,BYTE PTR [RDI+6]
            movzx ECX,BYTE PTR [RDI+7]
            lea RBX,QWORD PTR [RDI+14]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+3]
            shr AX,1
            movzx R13D,AX
            movzx EAX,AX
            add RAX,1
            lea R12D,DWORD PTR [R13-1]
            add RAX,RAX
            lea RBP,QWORD PTR [RAX-2]
            lea R11,QWORD PTR [RBX+RAX*1]
            add RAX,RBP
            lea R14,QWORD PTR [RBX+RAX*1]
            add RAX,RBP
            lea R15,QWORD PTR [RBX+RAX*1]
            movzx EAX,BYTE PTR [RDI+2]
            shl EAX,8
            add EAX,ECX
            lea ECX,DWORD PTR [R13*8]
            movzx EAX,AX
            sub EAX,16
            sub EAX,ECX
            shr EAX,1
            mov DWORD PTR [RSP-4],EAX
            jmp .L_410482
.L_41079c:

            movzx EBP,BYTE PTR [RDI+12]
            movzx EAX,BYTE PTR [RDI+13]
            shl EBP,24
            shl EAX,16
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+14]
            shl EAX,8
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add EBP,EAX
            lea R13D,DWORD PTR [RBP-1]
            jmp .L_410377
.L_4107c4:

            movzx ECX,BYTE PTR [RDI+16]
            movzx EAX,BYTE PTR [RDI+17]
            movzx R8D,BYTE PTR [RDI+13]
            shl EAX,16
            shl ECX,24
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+18]
            shl R8D,16
            shl EAX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+19]
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+12]
            shl EAX,24
            add EAX,R8D
            movzx R8D,BYTE PTR [RDI+14]
            shl R8D,8
            add EAX,R8D
            movzx R8D,BYTE PTR [RDI+15]
            add EAX,R8D
            jmp .L_41050a
.L_41080f:

            movzx ECX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            movzx R8D,BYTE PTR [RDI+9]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+8]
            movzx ECX,CX
            shl EAX,8
            add EAX,R8D
            movzx EAX,AX
            jmp .L_410576
.L_410836:
          .byte 0x66
          .byte 0x90
.L_410838:
          .long .L_4101e0-.L_410838
          .long .L_410534-.L_410838
          .long .L_410534-.L_410838
          .long .L_410534-.L_410838
          .long .L_40fde8-.L_410838
          .long .L_410534-.L_410838
          .long .L_40feb0-.L_410838
          .long .L_410534-.L_410838
          .long .L_410534-.L_410838
          .long .L_410534-.L_410838
          .long .L_40ff20-.L_410838
          .long .L_410534-.L_410838
          .long .L_40ffb0-.L_410838
          .long .L_4100e0-.L_410838
.L_410870:
          .long .L_410738-.L_410870
          .long .L_40ff10-.L_410870
          .long .L_41080f-.L_410870
          .long .L_40ff10-.L_410870
          .long .L_40ff10-.L_410870
          .long .L_40ff10-.L_410870
          .long .L_4107c4-.L_410870
          .long .L_40ff10-.L_410870
          .long .L_410710-.L_410870
          .long .L_41079c-.L_410870
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4108a0:

            mov R8,QWORD PTR [RSI+8]
            cmp RDI,R8
            jb .L_4108d0

            push R15
            mov R15,QWORD PTR [RSI+16]
            push R14
            push R13
            push R12
            push RBP
            cmp RDI,R15
            push RBX
            jbe .L_4108d8
.L_4108bc:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4108d0:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4108d8:

            mov RAX,R15
            sub RAX,RDI
            cmp EAX,3
            jbe .L_4108bc

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,DX
            jne .L_4108bc

            lea RAX,QWORD PTR [RDI+2]
            cmp RAX,R8
            jb .L_4108bc

            cmp RAX,R15
            ja .L_4108bc

            mov RDX,R15
            sub RDX,RAX
            cmp EDX,1
            jbe .L_4108bc

            lea RDX,QWORD PTR [RDI+4]
            cmp R8,RDX
            ja .L_4108bc

            cmp R15,RDX
            jb .L_4108bc

            movzx ECX,BYTE PTR [RDI+2]
            movzx R9D,BYTE PTR [RDI+3]
            mov RBX,R15
            sub RBX,RDX
            shl ECX,8
            add ECX,R9D
            movzx R9D,CX
            lea R10D,DWORD PTR [R9*8]
            cmp R10D,EBX
            ja .L_4108bc

            test CX,CX
            je .L_410ef0

            cmp EBX,7
            jbe .L_4108bc

            lea RCX,QWORD PTR [RDI+8]
            cmp R8,RCX
            ja .L_4108bc

            cmp R15,RCX
            jb .L_4108bc

            mov RDX,R15
            sub RDX,RCX
            cmp EDX,3
            jbe .L_4108bc

            lea EDX,DWORD PTR [R9-1]
            lea R11,QWORD PTR [RDI+12]
            lea R12,QWORD PTR [RIP+.L_411048]
            lea R14,QWORD PTR [RAX+RDX*8+10]
            lea RAX,QWORD PTR [RDI+16]
            sub RAX,RCX
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4109a0:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RCX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+3]
            add EAX,EDX
            je .L_410ac0

            mov EAX,EAX
            add RAX,RDI
            cmp RAX,R8
            jb .L_410a90

            cmp RAX,R15
            ja .L_410a90

            mov R9,R15
            sub R9,RAX
            cmp R9D,1
            jbe .L_410a90

            movzx EDX,BYTE PTR [RAX]
            movzx R10D,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,R10D
            cmp DX,14
            ja .L_410ac0

            movzx EDX,DX
            movsxd RDX,DWORD PTR [R12+RDX*4]
            add RDX,R12
            jmp RDX
.L_410a10:

            cmp R9D,15
            jbe .L_410a90

            lea RDX,QWORD PTR [RAX+12]
            cmp R8,RDX
            ja .L_410a90

            cmp R15,RDX
            jb .L_410a90

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,3
            jbe .L_410a90

            movzx R9D,BYTE PTR [RAX+12]
            movzx EDX,BYTE PTR [RAX+13]
            mov R10D,R9D
            shl EDX,16
            shl R10D,24
            lea R9D,DWORD PTR [R10+RDX*1]
            movzx EDX,BYTE PTR [RAX+14]
            shl EDX,8
            add EDX,R9D
            movzx R9D,BYTE PTR [RAX+15]
            add EDX,R9D
            cmp EDX,357913940
            ja .L_410a90

            add RAX,16
            cmp R8,RAX
            ja .L_410a90

            cmp R15,RAX
            jb .L_410a90

            lea EDX,DWORD PTR [RDX+RDX*2]
            sub R15,RAX
            shl EDX,2
            cmp EDX,R15D
            jbe .L_410ac0

            jmp .L_410a90
          .byte 0x66
          .byte 0x90
.L_410a80:

            cmp R9D,261
            seta AL
.L_410a8a:

            test AL,AL
            jne .L_410ac0

            nop
            nop
.L_410a90:

            movzx R8D,BYTE PTR [RSI+24]
            mov EDX,DWORD PTR [RSI+28]
.L_410a98:

            cmp EDX,2
            ja .L_4108bc

            add EDX,1
            test R8B,R8B
            mov DWORD PTR [RSI+28],EDX
            je .L_4108bc

            mov BYTE PTR [RCX],0
            mov BYTE PTR [RCX+1],0
            mov BYTE PTR [RCX+2],0
            mov BYTE PTR [RCX+3],0
            nop
.L_410ac0:

            cmp R14,R11
            je .L_410ef0

            mov R8,QWORD PTR [RSI+8]
            cmp R11,R8
            jb .L_4108bc

            mov R15,QWORD PTR [RSI+16]
            cmp R11,R15
            ja .L_4108bc

            mov RAX,R15
            sub RAX,R11
            cmp EAX,7
            jbe .L_4108bc

            add RCX,R13
            cmp R8,RCX
            ja .L_4108bc

            cmp R15,RCX
            jb .L_4108bc

            lea RAX,QWORD PTR [R11+4]
            mov RBX,R15
            add R11,8
            sub RBX,RAX
            cmp EBX,3
            jbe .L_4108bc

            jmp .L_4109a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410b28:

            cmp R9D,9
            jbe .L_410a90

            lea R9,QWORD PTR [RAX+6]
            cmp R8,R9
            ja .L_410a90

            cmp R15,R9
            jb .L_410a90

            mov RDX,R15
            sub RDX,R9
            cmp EDX,3
            jbe .L_410a90

            movzx R10D,BYTE PTR [RAX+6]
            movzx EDX,BYTE PTR [RAX+7]
            mov EBX,R10D
            shl EDX,16
            shl EBX,24
            lea R10D,DWORD PTR [RBX+RDX*1]
            movzx EDX,BYTE PTR [RAX+8]
            shl EDX,8
            add EDX,R10D
            movzx R10D,BYTE PTR [RAX+9]
            add EDX,R10D
            cmp EDX,390451571
            ja .L_410a90

            lea R10,QWORD PTR [RAX+10]
            cmp R8,R10
            ja .L_410a90

            cmp R15,R10
            jb .L_410a90

            lea EBP,DWORD PTR [RDX+RDX*4]
            mov RBX,R15
            sub RBX,R10
            lea EBP,DWORD PTR [RDX+RBP*2]
            cmp EBP,EBX
            ja .L_410a90

            test EDX,EDX
            je .L_410ac0

            cmp R10,R8
            jb .L_410a90

            cmp EBX,10
            jbe .L_410a90

            lea RBX,QWORD PTR [RAX+13]
            cmp RBX,R8
            jb .L_410a90

            cmp R15,RBX
            jb .L_410a90

            mov R10,R15
            sub R10,RBX
            cmp R10D,3
            jbe .L_410a90

            sub EDX,1
            lea R9,QWORD PTR [RAX+24]
            lea RBP,QWORD PTR [RAX+21]
            lea R10,QWORD PTR [RDX+RDX*4]
            sub R9,RBX
            lea RDX,QWORD PTR [RDX+R10*2]
            mov QWORD PTR [RSP-8],R9
            add RDX,RBX
            mov QWORD PTR [RSP-16],RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410c20:

            movzx R9D,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            mov R10D,R9D
            shl EDX,16
            shl R10D,24
            lea R9D,DWORD PTR [R10+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            shl EDX,8
            add EDX,R9D
            movzx R9D,BYTE PTR [RBX+3]
            add EDX,R9D
            jne .L_410f00
.L_410c4e:

            lea RDX,QWORD PTR [RBP-4]
            cmp RDX,R8
            jb .L_410a90

            mov R10,QWORD PTR [RSI+16]
            cmp RDX,R10
            ja .L_410a90

            mov R15,R10
            sub R15,RDX
            cmp R15D,3
            jbe .L_410a90

            movzx R9D,BYTE PTR [RBP-4]
            movzx EDX,BYTE PTR [RBP-3]
            mov R15D,R9D
            shl EDX,16
            shl R15D,24
            lea R9D,DWORD PTR [R15+RDX*1]
            movzx EDX,BYTE PTR [RBP-2]
            shl EDX,8
            add EDX,R9D
            movzx R9D,BYTE PTR [RBP-1]
            add EDX,R9D
            je .L_410ce8

            mov EDX,EDX
            add RDX,RAX
            cmp R8,RDX
            jbe .L_410fb8
.L_410cb1:

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_4108bc

            movzx R8D,BYTE PTR [RSI+24]
            add EDX,1
            mov DWORD PTR [RSI+28],EDX
            test R8B,R8B
            je .L_410a98

            mov BYTE PTR [RBP-4],0
            mov BYTE PTR [RBP-3],0
            mov BYTE PTR [RBP-2],0
            mov BYTE PTR [RBP-1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410ce8:

            cmp RBX,QWORD PTR [RSP-16]
            je .L_410ac0

            mov R8,QWORD PTR [RSI+8]
            cmp RBP,R8
            jb .L_410a90

            mov R15,QWORD PTR [RSI+16]
            cmp RBP,R15
            ja .L_410a90

            mov RDX,R15
            sub RDX,RBP
            cmp EDX,10
            jbe .L_410a90

            add RBX,QWORD PTR [RSP-8]
            cmp RBX,R8
            jb .L_410a90

            cmp RBX,R15
            ja .L_410a90

            lea RDX,QWORD PTR [RBP+3]
            mov R10,R15
            add RBP,11
            sub R10,RDX
            cmp R10D,3
            jbe .L_410a90

            jmp .L_410c20
.L_410d50:

            cmp R9D,19
            jbe .L_410a90

            lea RDX,QWORD PTR [RAX+16]
            cmp R8,RDX
            ja .L_410a90

            cmp R15,RDX
            jb .L_410a90

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,3
            jbe .L_410a90

            movzx R9D,BYTE PTR [RAX+16]
            movzx EDX,BYTE PTR [RAX+17]
            mov R10D,R9D
            shl EDX,16
            shl R10D,24
            lea R9D,DWORD PTR [R10+RDX*1]
            movzx EDX,BYTE PTR [RAX+18]
            shl EDX,8
            add EDX,R9D
            movzx R9D,BYTE PTR [RAX+19]
            add EDX,R9D
            cmp EDX,2147483646
            ja .L_410a90

            add RAX,20
            cmp R8,RAX
            ja .L_410a90

            cmp R15,RAX
            jb .L_410a90

            add EDX,EDX
            sub R15,RAX
            cmp EDX,R15D
            jbe .L_410ac0

            jmp .L_410a90
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410de0:

            cmp R9D,9
            jbe .L_410a90

            lea RDX,QWORD PTR [RAX+8]
            cmp R8,RDX
            ja .L_410a90

            cmp R15,RDX
            jb .L_410a90

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,1
            jbe .L_410a90

            lea RDX,QWORD PTR [RAX+10]
            cmp R8,RDX
            ja .L_410a90

            cmp R15,RDX
            jb .L_410a90

            movzx R8D,BYTE PTR [RAX+8]
            movzx EAX,BYTE PTR [RAX+9]
            sub R15,RDX
            shl R8D,8
            add EAX,R8D
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,R15D
            jbe .L_410ac0

            jmp .L_410a90
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410e50:

            cmp R9D,13
            jbe .L_410a90

            movzx R8D,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            shl R8D,8
            add R8D,EDX
            movzx R8D,R8W
            cmp R9D,R8D
            jae .L_410ec8

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_4108bc

            movzx R10D,BYTE PTR [RSI+24]
            lea R8D,DWORD PTR [RDX+1]
            mov DWORD PTR [RSI+28],R8D
            test R10B,R10B
            je .L_411031

            cmp R9,65535
            mov EBX,65535
            cmova R9,RBX
            mov EDX,R9D
            movzx R8D,R9B
            mov BYTE PTR [RAX+3],R9B
            shr DX,8
            mov BYTE PTR [RAX+2],DL
            shl EDX,8
            add R8D,EDX
            movzx R8D,R8W
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410ec8:

            movzx EDX,BYTE PTR [RAX+6]
            movzx EAX,BYTE PTR [RAX+7]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            lea EAX,DWORD PTR [RAX*4+16]
            cmp R8D,EAX
            setae AL
            jmp .L_410a8a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410ef0:

            pop RBX
.L_410ef1:

            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_410f00:

            mov EDX,EDX
            add RDX,RAX
            cmp R8,RDX
            jbe .L_410f48
.L_410f0a:

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_4108bc

            movzx R8D,BYTE PTR [RSI+24]
            add EDX,1
            mov DWORD PTR [RSI+28],EDX
            test R8B,R8B
            je .L_410a98

            mov BYTE PTR [RBX],0
            mov BYTE PTR [RBX+1],0
            mov BYTE PTR [RBX+2],0
            mov BYTE PTR [RBX+3],0
            mov R8,QWORD PTR [RSI+8]
            jmp .L_410c4e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410f48:

            cmp RDX,R15
            ja .L_410f0a

            mov R9,R15
            sub R9,RDX
            cmp R9D,3
            jbe .L_410f0a

            movzx R10D,BYTE PTR [RDX]
            movzx R9D,BYTE PTR [RDX+1]
            shl R10D,24
            shl R9D,16
            add R10D,R9D
            movzx R9D,BYTE PTR [RDX+2]
            shl R9D,8
            add R9D,R10D
            movzx R10D,BYTE PTR [RDX+3]
            add R9D,R10D
            cmp R9D,1073741822
            ja .L_410f0a

            add RDX,4
            cmp R8,RDX
            ja .L_410f0a

            cmp R15,RDX
            jb .L_410f0a

            shl R9D,2
            sub R15,RDX
            cmp R9D,R15D
            jbe .L_410c4e

            jmp .L_410f0a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410fb8:

            cmp R10,RDX
            jb .L_410cb1

            mov R9,R10
            sub R9,RDX
            cmp R9D,3
            jbe .L_410cb1

            movzx R15D,BYTE PTR [RDX]
            movzx R9D,BYTE PTR [RDX+1]
            shl R15D,24
            shl R9D,16
            add R15D,R9D
            movzx R9D,BYTE PTR [RDX+2]
            shl R9D,8
            add R9D,R15D
            movzx R15D,BYTE PTR [RDX+3]
            add R9D,R15D
            cmp R9D,858993458
            ja .L_410cb1

            add RDX,4
            cmp R8,RDX
            ja .L_410cb1

            cmp R10,RDX
            jb .L_410cb1

            lea R8D,DWORD PTR [R9+R9*4]
            sub R10,RDX
            cmp R8D,R10D
            jbe .L_410ce8

            jmp .L_410cb1
.L_411031:

            cmp R8D,3
            je .L_4108bc

            add EDX,2
            mov DWORD PTR [RSI+28],EDX
            jmp .L_4108bc
.L_411046:
          .byte 0x66
          .byte 0x90
.L_411048:
          .long .L_410a80-.L_411048
          .long .L_410ac0-.L_411048
          .long .L_410ac0-.L_411048
          .long .L_410ac0-.L_411048
          .long .L_410e50-.L_411048
          .long .L_410ac0-.L_411048
          .long .L_410de0-.L_411048
          .long .L_410ac0-.L_411048
          .long .L_410ac0-.L_411048
          .long .L_410ac0-.L_411048
          .long .L_410d50-.L_411048
          .long .L_410ac0-.L_411048
          .long .L_410a10-.L_411048
          .long .L_410a10-.L_411048
          .long .L_410b28-.L_411048
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_411090:

            push R15
            push R14
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,24
.L_4110a7:

            mov EAX,DWORD PTR [RSI+148]
            mov DWORD PTR [RSP+8],ECX
            test EAX,EAX
            jne .L_4110cd

            mov RDI,RSI
            mov DWORD PTR [RSP+12],R8D
            call .L_407ab0

            mov EAX,DWORD PTR [RBP+148]
            mov R8D,DWORD PTR [RSP+12]
.L_4110cd:

            xor R14D,R14D
            test R8D,R8D
            mov DWORD PTR [RBX+8],EAX
            jne .L_411300
.L_4110dc:

            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_4112a8

            mov ESI,R12D
            mov RDX,QWORD PTR [RBP+128]
            mov RDI,RBP
            call RAX

            test RAX,RAX
            mov R12,RAX
            je .L_4112a8
.L_411104:

            mov RDI,R12
            call .L_401c30

            xor ESI,ESI
            mov R13,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R13
            mov R15,RAX
            call .L_401d40

            mov ECX,EAX
            add RCX,R15
            jb .L_41140d

            test R15,R15
            je .L_411298

            cmp EAX,35
            ja .L_411280
.L_411141:

            mov RDI,R13
            call .L_401950

            mov RDI,R12
            call .L_401950

            call .L_401c20

            mov R12,RAX
.L_411159:

            mov RDI,R12
            call .L_401d20

            xor ESI,ESI
            mov RDI,R12
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658400]
            test RAX,RAX
            cmove RAX,RDX
            movzx EDX,BYTE PTR [RAX+34]
            movzx ECX,BYTE PTR [RAX+35]
            shl EDX,8
            add EDX,ECX
            test R14B,R14B
            movzx EDX,DX
            mov DWORD PTR [RBX+4],EDX
            je .L_4112c8
.L_411195:

            mov RDI,R12
            call .L_401950

            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_4112b8

            mov RDX,QWORD PTR [RBP+128]
            mov RDI,RBP
            mov ESI,DWORD PTR [RSP+8]
            call RAX

            test RAX,RAX
            mov RBP,RAX
            je .L_4112b8
.L_4111c6:

            mov RDI,RBP
            call .L_401c30

            xor ESI,ESI
            mov R12,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R12
            mov R13,RAX
            call .L_401d40

            mov EAX,EAX
            add RAX,R13
            jb .L_41140d

            mov RDI,R12
            call .L_401950

            mov QWORD PTR [RBX+32],RBP
            mov RDI,RBP
            call .L_401d40

            mov EDX,DWORD PTR [RBX+4]
            lea ECX,DWORD PTR [RDX*4]
            cmp ECX,EAX
            jbe .L_411222

            mov EDX,EAX
            shr EDX,2
            lea ECX,DWORD PTR [RDX*4]
            mov DWORD PTR [RBX+4],EDX
.L_411222:

            sub EAX,ECX
            mov RBP,QWORD PTR [RBX+32]
            shr EAX,1
            add EAX,EDX
            test EDX,EDX
            mov DWORD PTR [RBX],EAX
            jne .L_41124d

            mov RDI,RBP
            mov QWORD PTR [RBX],0
            call .L_401950

            call .L_401c20

            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
.L_41124d:

            mov RDI,RBP
            call .L_401d20

            xor ESI,ESI
            mov RDI,RBP
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658400]
            test RAX,RAX
            cmove RAX,RDX
            mov QWORD PTR [RBX+24],RAX
            add RSP,24
.L_411275:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_411280:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_411141
.L_411298:

            mov RDI,R13
            call .L_401950

            jmp .L_411159
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4112a8:

            call .L_401c20

            mov R12,RAX
            jmp .L_411104
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4112b8:

            call .L_401c20

            mov RBP,RAX
            jmp .L_4111c6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4112c8:

            movzx EDX,BYTE PTR [RAX+4]
            movzx ECX,BYTE PTR [RAX+5]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+12],DX
            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+14],DX
            movzx EDX,BYTE PTR [RAX+8]
            movzx EAX,BYTE PTR [RAX+9]
            shl EDX,8
            add EAX,EDX
            mov WORD PTR [RBX+16],AX
            jmp .L_411195
.L_411300:

            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_411400

            mov RDX,QWORD PTR [RBP+128]
            mov ESI,R8D
            mov RDI,RBP
            call RAX

            test RAX,RAX
            mov R13,RAX
            je .L_411400
.L_411328:

            mov RDI,R13
            call .L_401c30

            xor ESI,ESI
            mov R14,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R14
            mov R15,RAX
            call .L_401d40

            mov ECX,EAX
            add RCX,R15
            jb .L_41140d

            test R15,R15
            je .L_4113f0

            cmp EAX,77
            ja .L_4113f0

            mov RDI,R14
            call .L_401950

            mov RDI,R13
            call .L_401950

            call .L_401c20

            mov R13,RAX
.L_41137d:

            mov RDI,R13
            call .L_401d20

            xor ESI,ESI
            mov RDI,R13
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658400]
            test RAX,RAX
            cmove RAX,RDX
            xor R14D,R14D
            test BYTE PTR [RAX+63],128
            je .L_4113e0

            movzx EDX,BYTE PTR [RAX+68]
            movzx ECX,BYTE PTR [RAX+69]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+12],DX
            movzx ECX,BYTE PTR [RAX+70]
            movzx ESI,BYTE PTR [RAX+71]
            shl ECX,8
            add ECX,ESI
            mov WORD PTR [RBX+14],CX
            movzx ESI,BYTE PTR [RAX+72]
            movzx EAX,BYTE PTR [RAX+73]
            shl ESI,8
            add EAX,ESI
            or CX,DX
            mov WORD PTR [RBX+16],AX
            setne R14B
.L_4113e0:

            mov RDI,R13
            call .L_401950

            jmp .L_4110dc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4113f0:

            mov RDI,R14
            call .L_401950

            jmp .L_41137d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411400:

            call .L_401c20

            mov R13,RAX
            jmp .L_411328
.L_41140d:

            lea RCX,QWORD PTR [RIP+.L_412620]
            lea RSI,QWORD PTR [RIP+.L_40f801]
            lea RDI,QWORD PTR [RIP+.L_40f819]
            mov EDX,218
            call __assert_fail@PLT
.L_41142c:

            nop
            nop
            nop
            nop
.L_411430:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_41143e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+120]
            mov QWORD PTR [RSP+24],RDI
            test RAX,RAX
            je .L_4119e0

            mov RDI,RSI
            mov RDX,QWORD PTR [RSI+128]
            mov ESI,1668112752
            call RAX

            test RAX,RAX
            mov R14,RAX
            je .L_4119e0
.L_41147d:

            mov RDI,R14
            lea R13,QWORD PTR [RIP+.L_4125c8]
            mov DWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            mov BYTE PTR [RSP+56],0
            mov DWORD PTR [RSP+60],0
            mov QWORD PTR [RSP+64],0
            call .L_401c30

            mov BYTE PTR [RSP+56],0
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
.L_4114c9:

            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+64]
            mov RBX,RAX
            mov QWORD PTR [RSP+40],RAX
            call .L_401d40

            mov RDI,QWORD PTR [RSP+40]
            mov EAX,EAX
            add RAX,RBX
            mov QWORD PTR [RSP+48],RAX
            cmp RAX,RDI
            jb .L_4125a4

            test RDI,RDI
            mov DWORD PTR [RSP+60],0
            mov DWORD PTR [RSP+32],0
            je .L_4118b0

            mov RDX,RAX
            sub RDX,RDI
            cmp EDX,3
            jbe .L_411540

            movzx EDX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EDX,8
            add DX,CX
            jne .L_411540

            lea RDX,QWORD PTR [RDI+2]
            cmp RAX,RDX
            jb .L_411540

            cmp RDI,RDX
            jbe .L_4118c0

            nop
.L_411540:

            mov RDI,QWORD PTR [RSP+64]
            call .L_401950

            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+40],0
.L_411565:

            mov RDI,R14
            call .L_401950

            call .L_401c20

            mov R14,RAX
            nop
            nop
            nop
.L_411578:

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,R14
            mov QWORD PTR [RAX+72],R14
            call .L_401d20

            xor ESI,ESI
            mov RDI,R14
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658400]
            test RAX,RAX
            cmove RAX,RDX
            movzx EDI,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            shl EDI,8
            add EDI,EDX
            test DI,DI
            movzx R8D,DI
            je .L_41172a

            lea R9,QWORD PTR [RAX+2]
            lea RSI,QWORD PTR [RAX+4]
            xor R10D,R10D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4115d0:

            movzx EDX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,3
            jne .L_411798

            movzx EDX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            shl EDX,8
            add EDX,ECX
            cmp DX,10
            jne .L_411798

            lea RDX,QWORD PTR [RIP+.L_658400]
            cmp R8D,R10D
            cmovbe RSI,RDX
            movzx EDX,BYTE PTR [RSI+4]
            movzx ECX,BYTE PTR [RSI+5]
            shl EDX,24
            shl ECX,16
            lea EDX,DWORD PTR [RDX+RCX*1]
            movzx ECX,BYTE PTR [RSI+6]
            shl ECX,8
            add ECX,EDX
            movzx EDX,BYTE PTR [RSI+7]
            add ECX,EDX
            je .L_4117a9

            mov ECX,ECX
            add RCX,RAX
            je .L_4117a9

            lea RDX,QWORD PTR [R9+2]
            xor R10D,R10D
.L_411643:

            xor R9D,R9D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411650:

            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            shl ESI,8
            add SI,DI
            jne .L_411778

            movzx ESI,BYTE PTR [RDX+2]
            movzx EDI,BYTE PTR [RDX+3]
            shl ESI,8
            add ESI,EDI
            cmp SI,5
            jne .L_411778

            lea R11,QWORD PTR [RIP+.L_658400]
            cmp R8D,R9D
            cmovbe RDX,R11
            movzx EDI,BYTE PTR [RDX+4]
            movzx ESI,BYTE PTR [RDX+5]
            shl EDI,24
            shl ESI,16
            lea EDI,DWORD PTR [RDI+RSI*1]
            movzx ESI,BYTE PTR [RDX+6]
            movzx EDX,BYTE PTR [RDX+7]
            shl ESI,8
            add ESI,EDI
            add ESI,EDX
            je .L_411789

            mov ESI,ESI
            add RAX,RSI
            je .L_4116c9

            movzx EDX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ESI
            cmp DX,14
            cmove R11,RAX
.L_4116c9:

            mov RAX,QWORD PTR [RSP+24]
            test R10B,R10B
            mov QWORD PTR [RAX+64],R11
            mov QWORD PTR [RAX+8],RCX
            je .L_411740

            mov RAX,QWORD PTR [RSP+24]
            lea RBX,QWORD PTR [RIP+.L_40fdb0]
            mov QWORD PTR [RAX],RBX
.L_4116ea:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4125c3

            add RSP,88
.L_411702:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411710:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_4117b3

            test DI,DI
            jne .L_41259b
.L_41172a:

            mov RAX,QWORD PTR [RSP+24]
            lea RCX,QWORD PTR [RIP+.L_658400]
            mov QWORD PTR [RAX+64],RCX
            mov QWORD PTR [RAX+8],RCX
            nop
            nop
.L_411740:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,4
            je .L_411f48

            cmp AX,12
            jne .L_411ec0

            mov RAX,QWORD PTR [RSP+24]
            lea RBX,QWORD PTR [RIP+.L_40f6b0]
            mov QWORD PTR [RAX],RBX
            jmp .L_4116ea
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411778:

            add R9D,1
            add RDX,8
            cmp R8D,R9D
            ja .L_411650
.L_411789:

            lea R11,QWORD PTR [RIP+.L_658400]
            jmp .L_4116c9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411798:

            add R10D,1
            add RSI,8
            cmp R8D,R10D
            jne .L_4115d0
.L_4117a9:

            lea RDX,QWORD PTR [R9+2]
            xor R11D,R11D
            mov RCX,RDX
.L_4117b3:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_411710

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,6
            jne .L_411710

            lea RSI,QWORD PTR [RIP+.L_658400]
            cmp R11D,R8D
            cmovae RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_411826

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_4118a7
.L_411826:

            mov RCX,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
.L_411830:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_412110

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,4
            jne .L_412110

            lea RSI,QWORD PTR [RIP+.L_658400]
            cmp R8D,R11D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_41212e

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            je .L_41212e
.L_4118a7:

            xor R10D,R10D
            jmp .L_411643
          .byte 0x90
.L_4118b0:

            mov RDI,QWORD PTR [RSP+64]
            call .L_401950

            jmp .L_411578
          .byte 0x90
.L_4118c0:

            mov RCX,RAX
            sub RCX,RDX
            cmp ECX,1
            jbe .L_411540

            lea RCX,QWORD PTR [RDI+4]
            cmp RDI,RCX
            ja .L_411540

            cmp RAX,RCX
            jb .L_411540

            movzx ESI,BYTE PTR [RDI+2]
            movzx R8D,BYTE PTR [RDI+3]
            mov RBX,RAX
            sub RBX,RCX
            shl ESI,8
            add ESI,R8D
            movzx R8D,SI
            lea R9D,DWORD PTR [R8*8]
            cmp R9D,EBX
            ja .L_411540

            test SI,SI
            je .L_4118b0

            cmp EBX,7
            jbe .L_411540

            lea RCX,QWORD PTR [RDI+8]
            cmp RDI,RCX
            ja .L_411540

            cmp RAX,RCX
            jb .L_411540

            sub RAX,RCX
            cmp EAX,3
            jbe .L_411540

            lea EAX,DWORD PTR [R8-1]
            lea R9,QWORD PTR [RDI+12]
            mov R8,RDI
            mov DWORD PTR [RSP+4],0
            lea RBP,QWORD PTR [RDX+RAX*8+10]
            lea RDX,QWORD PTR [RDI+16]
            sub RDX,RCX
            mov R12,RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411968:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            mov ESI,EDX
            shl EAX,16
            shl ESI,24
            lea EDX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [RCX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+3]
            add EAX,EDX
            je .L_411a68

            mov EAX,EAX
            add RAX,RDI
            cmp R8,RAX
            ja .L_411ab0

            mov R15,QWORD PTR [RSP+48]
            cmp RAX,R15
            ja .L_411ab0

            mov RSI,R15
            sub RSI,RAX
            cmp ESI,1
            jbe .L_411ab0

            movzx EDX,BYTE PTR [RAX]
            movzx R10D,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,R10D
            cmp DX,14
            ja .L_411a68

            movzx EDX,DX
            movsxd RDX,DWORD PTR [R13+RDX*4]
            add RDX,R13
            jmp RDX
          .byte 0x90
.L_4119e0:

            call .L_401c20

            mov R14,RAX
            jmp .L_41147d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4119f0:

            cmp ESI,15
            jbe .L_411ab0

            lea RDX,QWORD PTR [RAX+12]
            cmp R8,RDX
            ja .L_411ab0

            cmp R15,RDX
            jb .L_411ab0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,3
            jbe .L_411ab0

            movzx ESI,BYTE PTR [RAX+12]
            movzx EDX,BYTE PTR [RAX+13]
            shl ESI,24
            shl EDX,16
            lea ESI,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RAX+14]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [RAX+15]
            add EDX,ESI
            cmp EDX,357913940
            ja .L_411ab0

            add RAX,16
            cmp R8,RAX
            ja .L_411ab0

            cmp R15,RAX
            jb .L_411ab0

            lea EDX,DWORD PTR [RDX+RDX*2]
            sub R15,RAX
            shl EDX,2
            cmp EDX,R15D
            ja .L_411ab0

            nop
            nop
            nop
            nop
            nop
            nop
.L_411a68:

            cmp RBP,R9
            je .L_411db8
.L_411a71:

            mov R8,QWORD PTR [RSP+40]
            cmp R9,R8
            jae .L_411ed8
.L_411a7f:

            cmp DWORD PTR [RSP+4],0
            je .L_411540

            nop
            nop
            nop
            nop
            nop
            nop
.L_411a90:

            cmp BYTE PTR [RSP+56],0
            je .L_411ad0

            jmp .L_411540
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411aa0:

            cmp ESI,261
            seta AL
.L_411aa9:

            test AL,AL
            jne .L_411a68

            nop
            nop
            nop
.L_411ab0:

            mov EBX,DWORD PTR [RSP+4]
            movzx EAX,BYTE PTR [RSP+56]
            cmp EBX,2
            ja .L_411a90

            mov EDX,EBX
            add EDX,1
            test AL,AL
            mov DWORD PTR [RSP+60],EDX
            jne .L_411f28

            nop
.L_411ad0:

            xor ESI,ESI
            mov RDI,R14
            call .L_401d70

            mov RDI,R14
            mov RBX,RAX
            mov QWORD PTR [RSP+40],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            cmp QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],RBX
            je .L_411540

            mov BYTE PTR [RSP+56],1
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_4114c9
          .byte 0x90
.L_411b10:

            cmp ESI,9
            jbe .L_411ab0

            lea RDX,QWORD PTR [RAX+6]
            cmp R8,RDX
            ja .L_411ab0

            cmp R15,RDX
            jb .L_411ab0

            mov RSI,R15
            sub RSI,RDX
            cmp ESI,3
            jbe .L_411ab0

            movzx R10D,BYTE PTR [RAX+6]
            movzx ESI,BYTE PTR [RAX+7]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RAX+8]
            shl ESI,8
            add ESI,R10D
            movzx R10D,BYTE PTR [RAX+9]
            add ESI,R10D
            cmp ESI,390451571
            ja .L_411ab0

            lea R10,QWORD PTR [RAX+10]
            cmp R8,R10
            ja .L_411ab0

            cmp R15,R10
            jb .L_411ab0

            lea R11D,DWORD PTR [RSI+RSI*4]
            mov R8,R15
            sub R8,R10
            lea R11D,DWORD PTR [RSI+R11*2]
            cmp R11D,R8D
            ja .L_411ab0

            test ESI,ESI
            je .L_411a68

            mov R11,QWORD PTR [RSP+40]
            cmp R10,R11
            jb .L_411ab0

            cmp R8D,10
            jbe .L_411ab0

            lea R10,QWORD PTR [RAX+13]
            cmp R11,R10
            ja .L_411ab0

            cmp R15,R10
            jb .L_411ab0

            mov R8,R15
            sub R8,R10
            cmp R8D,3
            jbe .L_411ab0

            sub ESI,1
            add RDX,18
            lea RBX,QWORD PTR [RAX+21]
            lea R8,QWORD PTR [RSI+RSI*4]
            sub RDX,R10
            mov QWORD PTR [RSP+16],RDX
            lea RSI,QWORD PTR [RSI+R8*2]
            add RSI,R10
            mov QWORD PTR [RSP+8],RSI
            nop
            nop
            nop
.L_411c00:

            movzx ESI,BYTE PTR [R10]
            movzx EDX,BYTE PTR [R10+1]
            shl ESI,24
            shl EDX,16
            lea ESI,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [R10+2]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [R10+3]
            add EDX,ESI
            jne .L_412050
.L_411c29:

            lea RDX,QWORD PTR [RBX-4]
            cmp R11,RDX
            ja .L_411ab0

            mov R8,QWORD PTR [RSP+48]
            cmp R8,RDX
            jb .L_411ab0

            mov RSI,R8
            sub RSI,RDX
            cmp ESI,3
            jbe .L_411ab0

            movzx ESI,BYTE PTR [RBX-4]
            movzx EDX,BYTE PTR [RBX-3]
            shl ESI,24
            shl EDX,16
            lea ESI,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RBX-2]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [RBX-1]
            add EDX,ESI
            je .L_411fe0

            mov EDX,EDX
            add RDX,RAX
            cmp R11,RDX
            jbe .L_412430
.L_411c87:

            mov ESI,DWORD PTR [RSP+4]
            cmp ESI,2
            ja .L_411a90

            mov EDX,ESI
            add EDX,1
            cmp BYTE PTR [RSP+56],0
            mov DWORD PTR [RSP+60],EDX
            jne .L_411fc7
.L_411ca8:

            cmp EDX,3
            je .L_411a90

            add EDX,1
            mov DWORD PTR [RSP+60],EDX
            jmp .L_411ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411cc0:

            cmp ESI,19
            jbe .L_411ab0

            lea RDX,QWORD PTR [RAX+16]
            cmp R8,RDX
            ja .L_411ab0

            cmp R15,RDX
            jb .L_411ab0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,3
            jbe .L_411ab0

            movzx ESI,BYTE PTR [RAX+16]
            movzx EDX,BYTE PTR [RAX+17]
            shl ESI,24
            shl EDX,16
            lea ESI,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RAX+18]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [RAX+19]
            add EDX,ESI
            cmp EDX,2147483646
            ja .L_411ab0

            add RAX,20
            cmp R8,RAX
            ja .L_411ab0

            cmp R15,RAX
            jb .L_411ab0

            add EDX,EDX
            sub R15,RAX
            cmp EDX,R15D
            jbe .L_411a68

            jmp .L_411ab0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411d48:

            cmp ESI,9
            jbe .L_411ab0

            lea RDX,QWORD PTR [RAX+8]
            cmp R8,RDX
            ja .L_411ab0

            cmp R15,RDX
            jb .L_411ab0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,1
            jbe .L_411ab0

            lea RDX,QWORD PTR [RAX+10]
            cmp R8,RDX
            ja .L_411ab0

            cmp R15,RDX
            jb .L_411ab0

            movzx ESI,BYTE PTR [RAX+8]
            movzx EAX,BYTE PTR [RAX+9]
            sub R15,RDX
            shl ESI,8
            add EAX,ESI
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,R15D
            ja .L_411ab0

            cmp RBP,R9
            jne .L_411a71

            nop
            nop
            nop
            nop
            nop
.L_411db8:

            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            je .L_4118b0

            lea RSI,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+60],0
            call .L_4108a0

            mov EDX,DWORD PTR [RSP+60]
            mov EBX,EAX
            test EDX,EDX
            jne .L_411540

            mov RDI,QWORD PTR [RSP+64]
            call .L_401950

            test BL,BL
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+40],0
            jne .L_411578

            jmp .L_411565
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411e20:

            cmp ESI,13
            jbe .L_411ab0

            movzx EDX,BYTE PTR [RAX+2]
            movzx R8D,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,R8D
            movzx EDX,DX
            cmp ESI,EDX
            jae .L_411e98

            mov EBX,DWORD PTR [RSP+4]
            cmp EBX,2
            ja .L_411a90

            mov EDX,EBX
            add EDX,1
            cmp BYTE PTR [RSP+56],0
            mov DWORD PTR [RSP+60],EDX
            je .L_411ca8

            cmp RSI,65535
            mov EBX,65535
            cmova RSI,RBX
            mov EDX,ESI
            mov BYTE PTR [RAX+3],SIL
            movzx ESI,SIL
            shr DX,8
            mov BYTE PTR [RAX+2],DL
            mov EBX,DWORD PTR [RSP+60]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            mov DWORD PTR [RSP+4],EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411e98:

            movzx ESI,BYTE PTR [RAX+6]
            movzx EAX,BYTE PTR [RAX+7]
            shl ESI,8
            add EAX,ESI
            movzx EAX,AX
            lea EAX,DWORD PTR [RAX*4+16]
            cmp EAX,EDX
            setbe AL
            jmp .L_411aa9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411ec0:

            mov RAX,QWORD PTR [RSP+24]
            lea RBX,QWORD PTR [RIP+.L_40f840]
            mov QWORD PTR [RAX],RBX
            jmp .L_4116ea
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411ed8:

            mov RAX,QWORD PTR [RSP+48]
            cmp R9,RAX
            ja .L_411a7f

            mov RDX,RAX
            sub RDX,R9
            cmp EDX,7
            jbe .L_411a7f

            add RCX,R12
            cmp R8,RCX
            ja .L_411a7f

            cmp RAX,RCX
            jb .L_411a7f

            lea RDX,QWORD PTR [R9+4]
            add R9,8
            sub RAX,RDX
            cmp EAX,3
            jbe .L_411a7f

            jmp .L_411968
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411f28:

            mov BYTE PTR [RCX],0
            mov BYTE PTR [RCX+1],0
            mov BYTE PTR [RCX+2],0
            mov BYTE PTR [RCX+3],0
            mov EAX,DWORD PTR [RSP+60]
            mov DWORD PTR [RSP+4],EAX
            jmp .L_411a68
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411f48:

            movzx EDX,BYTE PTR [RCX+6]
            movzx EAX,BYTE PTR [RCX+7]
            mov RBX,QWORD PTR [RSP+24]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RCX+14]
            shr DX,1
            movzx ESI,DX
            movzx EDX,DX
            mov QWORD PTR [RBX+16],RAX
            lea RDX,QWORD PTR [RDX+RDX*1+2]
            mov DWORD PTR [RBX+56],ESI
            shl ESI,3
            add RAX,RDX
            sub RDX,2
            mov QWORD PTR [RBX+24],RAX
            add RAX,RDX
            mov QWORD PTR [RBX+32],RAX
            add RAX,RDX
            mov QWORD PTR [RBX+40],RAX
            add RAX,RDX
            mov QWORD PTR [RBX+48],RAX
            movzx EAX,BYTE PTR [RCX+2]
            movzx EDX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            sub EAX,16
            sub EAX,ESI
            shr EAX,1
            mov DWORD PTR [RBX+60],EAX
            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            lea RAX,QWORD PTR [RIP+.L_40f570]
            mov QWORD PTR [RBX],RAX
            jmp .L_4116ea
.L_411fc7:

            mov BYTE PTR [RBX-4],0
            mov BYTE PTR [RBX-3],0
            mov BYTE PTR [RBX-2],0
            mov BYTE PTR [RBX-1],0
            mov ESI,DWORD PTR [RSP+60]
            mov DWORD PTR [RSP+4],ESI
            nop
.L_411fe0:

            cmp R10,QWORD PTR [RSP+8]
            je .L_411a68

            mov R11,QWORD PTR [RSP+40]
            cmp R11,RBX
            ja .L_411ab0

            mov R15,QWORD PTR [RSP+48]
            cmp R15,RBX
            jb .L_411ab0

            mov RDX,R15
            sub RDX,RBX
            cmp EDX,10
            jbe .L_411ab0

            add R10,QWORD PTR [RSP+16]
            cmp R11,R10
            ja .L_411ab0

            cmp R15,R10
            jb .L_411ab0

            lea RDX,QWORD PTR [RBX+3]
            mov RSI,R15
            add RBX,11
            sub RSI,RDX
            cmp ESI,3
            ja .L_411c00

            jmp .L_411ab0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412050:

            mov EDX,EDX
            add RDX,RAX
            cmp RDX,R11
            jae .L_4120a0
.L_41205a:

            mov ESI,DWORD PTR [RSP+4]
            cmp ESI,2
            ja .L_411a90

            mov EDX,ESI
            add EDX,1
            cmp BYTE PTR [RSP+56],0
            mov DWORD PTR [RSP+60],EDX
            je .L_411ca8

            mov BYTE PTR [R10],0
            mov BYTE PTR [R10+1],0
            mov BYTE PTR [R10+2],0
            mov BYTE PTR [R10+3],0
            mov ESI,DWORD PTR [RSP+60]
            mov R11,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+4],ESI
            jmp .L_411c29
.L_4120a0:

            cmp RDX,R15
            ja .L_41205a

            mov RSI,R15
            sub RSI,RDX
            cmp ESI,3
            jbe .L_41205a

            movzx R8D,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl R8D,24
            shl ESI,16
            add R8D,ESI
            movzx ESI,BYTE PTR [RDX+2]
            shl ESI,8
            add ESI,R8D
            movzx R8D,BYTE PTR [RDX+3]
            add ESI,R8D
            cmp ESI,1073741822
            ja .L_41205a

            add RDX,4
            cmp RDX,R11
            jb .L_41205a

            cmp R15,RDX
            jb .L_41205a

            shl ESI,2
            sub R15,RDX
            cmp ESI,R15D
            jbe .L_411c29

            jmp .L_41205a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412110:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_411830

            test R8D,R8D
            lea RDX,QWORD PTR [R9+2]
            je .L_412561
.L_41212e:

            mov R10,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
.L_412138:

            movzx ECX,BYTE PTR [R10]
            movzx ESI,BYTE PTR [R10+1]
            shl ECX,8
            add ECX,ESI
            cmp CX,3
            jne .L_412578

            movzx ECX,BYTE PTR [R10+2]
            movzx ESI,BYTE PTR [R10+3]
            shl ECX,8
            add ECX,ESI
            cmp CX,1
            jne .L_412578

            lea RCX,QWORD PTR [RIP+.L_658400]
            cmp R11D,R8D
            cmovae R10,RCX
            movzx ESI,BYTE PTR [R10+4]
            movzx ECX,BYTE PTR [R10+5]
            shl ESI,24
            shl ECX,16
            lea ESI,DWORD PTR [RSI+RCX*1]
            movzx ECX,BYTE PTR [R10+6]
            shl ECX,8
            add ECX,ESI
            movzx ESI,BYTE PTR [R10+7]
            add ECX,ESI
            je .L_4121a8

            mov ECX,ECX
            add RCX,RAX
            jne .L_4118a7
.L_4121a8:

            mov RCX,RDX
            xor R11D,R11D
            nop
            nop
.L_4121b0:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_412550

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,3
            jne .L_412550

            lea RSI,QWORD PTR [RIP+.L_658400]
            cmp R8D,R11D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_412223

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_4118a7
.L_412223:

            mov RCX,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412230:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_412528

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,2
            jne .L_412528

            lea RSI,QWORD PTR [RIP+.L_658400]
            cmp R8D,R11D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_4122a3

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_4118a7
.L_4122a3:

            mov RCX,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4122b0:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_412500

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,1
            jne .L_412500

            lea RSI,QWORD PTR [RIP+.L_658400]
            cmp R8D,R11D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_412323

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_4118a7
.L_412323:

            mov RCX,RDX
            xor R10D,R10D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412330:

            movzx ESI,BYTE PTR [RCX]
            movzx R11D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R11W
            jne .L_4124d8

            movzx ESI,BYTE PTR [RCX+2]
            movzx R11D,BYTE PTR [RCX+3]
            shl ESI,8
            add SI,R11W
            jne .L_4124d8

            lea RSI,QWORD PTR [RIP+.L_658400]
            cmp R8D,R10D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_4123a0

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_4118a7
.L_4123a0:

            mov R10,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4123b0:

            movzx ECX,BYTE PTR [R10]
            movzx ESI,BYTE PTR [R10+1]
            shl ECX,8
            add ECX,ESI
            cmp CX,3
            jne .L_4124a8

            movzx ECX,BYTE PTR [R10+2]
            movzx ESI,BYTE PTR [R10+3]
            shl ECX,8
            add CX,SI
            jne .L_4124a8

            lea R9,QWORD PTR [RIP+.L_658400]
            cmp R8D,R11D
            cmovbe R10,R9
            movzx ESI,BYTE PTR [R10+4]
            movzx ECX,BYTE PTR [R10+5]
            mov EDI,ESI
            shl ECX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RCX*1]
            movzx ECX,BYTE PTR [R10+6]
            shl ECX,8
            add ECX,ESI
            movzx ESI,BYTE PTR [R10+7]
            add ECX,ESI
            je .L_412425

            mov ECX,ECX
            mov R10D,1
            add RCX,RAX
            jne .L_411643
.L_412425:

            xor R10D,R10D
            mov RCX,R9
            jmp .L_411643
.L_412430:

            cmp R8,RDX
            jb .L_411c87

            mov RSI,R8
            sub RSI,RDX
            cmp ESI,3
            jbe .L_411c87

            movzx R15D,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl R15D,24
            shl ESI,16
            add R15D,ESI
            movzx ESI,BYTE PTR [RDX+2]
            shl ESI,8
            add ESI,R15D
            movzx R15D,BYTE PTR [RDX+3]
            add ESI,R15D
            cmp ESI,858993458
            ja .L_411c87

            add RDX,4
            cmp R11,RDX
            ja .L_411c87

            cmp R8,RDX
            jb .L_411c87

            lea ESI,DWORD PTR [RSI+RSI*4]
            sub R8,RDX
            cmp ESI,R8D
            jbe .L_411fe0

            jmp .L_411c87
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4124a8:

            add R11D,1
            add R10,8
            cmp R8D,R11D
            ja .L_4123b0

            test DI,DI
            je .L_41172a

            xor R10D,R10D
            lea RCX,QWORD PTR [RIP+.L_658400]
            lea RDX,QWORD PTR [R9+2]
            jmp .L_411643
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4124d8:

            add R10D,1
            add RCX,8
            cmp R8D,R10D
            ja .L_412330

            test DI,DI
            lea RDX,QWORD PTR [R9+2]
            jne .L_4123a0

            jmp .L_41172a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412500:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_4122b0

            test DI,DI
            je .L_41172a

            lea RDX,QWORD PTR [R9+2]
            jmp .L_412323
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412528:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_412230

            test DI,DI
            je .L_41172a

            lea RDX,QWORD PTR [R9+2]
            jmp .L_4122a3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412550:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_4121b0
.L_412561:

            test DI,DI
            je .L_41172a

            lea RDX,QWORD PTR [R9+2]
            jmp .L_412223
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412578:

            add R11D,1
            add R10,8
            cmp R8D,R11D
            ja .L_412138

            test DI,DI
            je .L_41172a

            lea RDX,QWORD PTR [R9+2]
            jmp .L_4121a8
.L_41259b:

            lea RDX,QWORD PTR [R9+2]
            jmp .L_411826
.L_4125a4:

            lea RCX,QWORD PTR [RIP+.L_412620]
            lea RSI,QWORD PTR [RIP+.L_40f801]
            lea RDI,QWORD PTR [RIP+.L_40f819]
            mov EDX,218
            call __assert_fail@PLT
.L_4125c3:

            call __stack_chk_fail@PLT
.L_4125c8:
          .long .L_411aa0-.L_4125c8
          .long .L_411a68-.L_4125c8
          .long .L_411a68-.L_4125c8
          .long .L_411a68-.L_4125c8
          .long .L_411e20-.L_4125c8
          .long .L_411a68-.L_4125c8
          .long .L_411d48-.L_4125c8
          .long .L_411a68-.L_4125c8
          .long .L_411a68-.L_4125c8
          .long .L_411a68-.L_4125c8
          .long .L_411cc0-.L_4125c8
          .long .L_411a68-.L_4125c8
          .long .L_4119f0-.L_4125c8
          .long .L_4119f0-.L_4125c8
          .long .L_411b10-.L_4125c8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412620:
          .byte 0x76
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x4f
          .byte 0x54
          .byte 0x3a
          .byte 0x3a
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x73
          .byte 0x61
          .byte 0x6e
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x5f
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x5f
          .byte 0x74
          .byte 0x3a
          .byte 0x3a
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x72
          .byte 0x74
          .byte 0x5f
          .byte 0x70
          .byte 0x72
          .string "ocessing()"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412660:

            jmp .L_437530
.L_412665:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412670:

            jmp .L_434c70
.L_412675:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412680:

            mov EAX,1
            ret 
.L_412686:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412690:

            ret 
.L_412692:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4126a0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EDI,1
            sub RSP,1368
.L_4126b9:

            mov QWORD PTR [RSP+8],RSI
            mov ESI,1096
            mov DWORD PTR [RSP+4],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1352],RAX
            xor EAX,EAX
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_412c3a

            movdqu XMM0,XMMWORD PTR [R13+128]
            lea RBP,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R13+120]
            mov QWORD PTR [RSP+56],0
            movups XMMWORD PTR [RSP+24],XMM0
            lea RDX,QWORD PTR [RBP+8]
            lea RDI,QWORD PTR [RBP+48]
            movdqu XMM0,XMMWORD PTR [R13+144]
            mov QWORD PTR [RSP+16],RSI
            movups XMMWORD PTR [RSP+40],XMM0
            call .L_44b140

            mov EAX,DWORD PTR [RSP+28]
            cmp EAX,1298229354
            je .L_412f18

            ja .L_412c70

            cmp EAX,1198877298
            je .L_412fdb

            jbe .L_41300c

            cmp EAX,1265131890
            je .L_412f18

            ja .L_412f60

            cmp EAX,1214603890
            lea RDX,QWORD PTR [RIP+.L_657a60]
            je .L_412790

            ja .L_4131d4

            cmp EAX,1214344807
            lea RDX,QWORD PTR [RIP+.L_657a00]
            jne .L_413147

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412790:

            mov EAX,DWORD PTR [R13+128]
            mov QWORD PTR [RSP+56],RDX
            cmp EAX,4
            je .L_412e90

            cmp EAX,5
            jne .L_4127d9

            lea R12,QWORD PTR [RBP+48]
            mov ECX,1
            mov EDX,1
            mov ESI,1920232545
            mov RDI,R12
            call .L_44b250

            xor ECX,ECX
            mov EDX,1
            mov ESI,1920232557
            mov RDI,R12
            call .L_44b250
.L_4127d9:

            lea R12,QWORD PTR [RBP+48]
            xor ECX,ECX
            mov EDX,1
            mov ESI,1718772067
            mov RDI,R12
            call .L_44b250

            xor ECX,ECX
            mov EDX,1
            mov ESI,1853189490
            mov RDI,R12
            call .L_44b250

            xor ECX,ECX
            mov EDX,1
            mov ESI,1684959085
            mov RDI,R12
            call .L_44b250

            mov RAX,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_41282c

            mov RDI,RBP
            call RAX
.L_41282c:

            lea R15,QWORD PTR [RIP+.L_414e10]
            lea R12,QWORD PTR [RBP+48]
            mov ESI,1667460464
            lea R14,QWORD PTR [R15+20]
.L_412840:

            mov ECX,1
            mov EDX,1
            mov RDI,R12
            add R15,4
            call .L_44b250

            cmp R14,R15
            je .L_412cf8

            mov ESI,DWORD PTR [R15]
            jmp .L_412840
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412868:

            mov ECX,9
            mov EDX,1
            mov ESI,1986359924
            mov RDI,R12
            call .L_44b250
.L_41287f:

            mov RAX,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_412892

            mov RDI,RBP
            call RAX
.L_412892:

            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            je .L_4128e1

            mov R12,QWORD PTR [RSP+8]
            sub EAX,1
            shl RAX,4
            lea R13,QWORD PTR [R12+RAX*1+16]
            nop
            nop
            nop
            nop
            nop
.L_4128b0:

            mov EDX,DWORD PTR [R12+8]
            xor ECX,ECX
            test EDX,EDX
            jne .L_4128c6

            xor ECX,ECX
            cmp DWORD PTR [R12+12],-1
            sete CL
.L_4128c6:

            mov EDX,DWORD PTR [R12+4]
            mov ESI,DWORD PTR [R12]
            lea RDI,QWORD PTR [RBP+48]
            add R12,16
            call .L_44b250

            cmp R12,R13
            jne .L_4128b0
.L_4128e1:

            movdqu XMM0,XMMWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+48]
            lea RSI,QWORD PTR [RBX+40]
            mov RAX,QWORD PTR [RSP+56]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+40]
            mov QWORD PTR [RBX+32],RAX
            movups XMMWORD PTR [RBX+16],XMM0
            call .L_44b5c0

            mov ECX,DWORD PTR [RBX+56]
            mov RAX,QWORD PTR [RBX+64]
            xor EDI,EDI
            mov R10,RCX
.L_412916:

            cmp RDI,R10
            jae .L_412967

            lea RSI,QWORD PTR [RDI+R10*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R9,QWORD PTR [RAX+RDX*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1920232557
            ja .L_412962

            jmp .L_412de8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412940:

            lea RDX,QWORD PTR [RDI+RSI*1]
            shr RDX,1
            lea R8,QWORD PTR [RDX+RDX*8]
            lea R9,QWORD PTR [RAX+R8*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1920232557
            jbe .L_412df0

            mov RSI,RDX
.L_412962:

            cmp RDI,RSI
            jb .L_412940
.L_412967:

            xor EDX,EDX
.L_412969:

            mov DWORD PTR [RBX+1072],EDX
            mov R10,RCX
            xor EDI,EDI
.L_412974:

            cmp RDI,R10
            jae .L_4129c7

            lea RSI,QWORD PTR [RDI+R10*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R9,QWORD PTR [RAX+RDX*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1718772067
            ja .L_4129c2

            jmp .L_412e08
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4129a0:

            lea RDX,QWORD PTR [RDI+RSI*1]
            shr RDX,1
            lea R8,QWORD PTR [RDX+RDX*8]
            lea R9,QWORD PTR [RAX+R8*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1718772067
            jbe .L_412e10

            mov RSI,RDX
.L_4129c2:

            cmp RDI,RSI
            jb .L_4129a0
.L_4129c7:

            xor EDI,EDI
.L_4129c9:

            mov DWORD PTR [RBX+1076],EDI
            mov R11,RCX
            xor R8D,R8D
.L_4129d5:

            cmp R8,R11
            jae .L_412a27

            lea RSI,QWORD PTR [R8+R11*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R10,QWORD PTR [RAX+RDX*4]
            mov R9D,DWORD PTR [R10]
            cmp R9D,1853189490
            ja .L_412a22

            jmp .L_412e28
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412a00:

            lea RDX,QWORD PTR [R8+RSI*1]
            shr RDX,1
            lea R9,QWORD PTR [RDX+RDX*8]
            lea R10,QWORD PTR [RAX+R9*4]
            mov R9D,DWORD PTR [R10]
            cmp R9D,1853189490
            jbe .L_412e30

            mov RSI,RDX
.L_412a22:

            cmp R8,RSI
            jb .L_412a00
.L_412a27:

            xor R9D,R9D
.L_412a2a:

            mov DWORD PTR [RBX+1080],R9D
            mov R12,RCX
            xor R8D,R8D
.L_412a37:

            cmp R8,R12
            jae .L_412a87

            lea RSI,QWORD PTR [R8+R12*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R11,QWORD PTR [RAX+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1684959085
            ja .L_412a82

            jmp .L_412d90
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412a60:

            lea RDX,QWORD PTR [R8+RSI*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [RAX+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1684959085
            jbe .L_412da0

            mov RSI,RDX
.L_412a82:

            cmp R8,RSI
            jb .L_412a60
.L_412a87:

            xor R13D,R13D
.L_412a8a:

            mov EDX,DWORD PTR [RBX]
            mov R12D,1986753134
            mov DWORD PTR [RBX+1084],R13D
            mov R14,RCX
            and EDX,4294967294
            cmp EDX,4
            mov EDX,1801810542
            cmove R12D,EDX
            xor R8D,R8D
.L_412aae:

            cmp R8,R14
            jae .L_412af3

            lea RSI,QWORD PTR [R8+R14*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R11,QWORD PTR [RAX+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R12D,R10D
            jb .L_412aee

            jmp .L_412dc0
          .byte 0x90
.L_412ad0:

            lea RDX,QWORD PTR [R8+RSI*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [RAX+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,R12D
            jbe .L_412dd0

            mov RSI,RDX
.L_412aee:

            cmp R8,RSI
            jb .L_412ad0
.L_412af3:

            xor ESI,ESI
            xor EDX,EDX
.L_412af7:

            test EDI,EDI
            mov DWORD PTR [RBX+1088],EDX
            mov R8D,1
            jne .L_412b17

            test R13D,R13D
            setne DL
            test R9D,R9D
            setne R8B
            and R8D,EDX
.L_412b17:

            movzx EDX,BYTE PTR [RBX+1092]
            add ESI,ESI
            xor EDI,EDI
            and EDX,4294967292
            or EDX,R8D
            or EDX,ESI
            mov BYTE PTR [RBX+1092],DL
.L_412b30:

            cmp RDI,RCX
            jae .L_412b7f

            lea RSI,QWORD PTR [RDI+RCX*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R9,QWORD PTR [RAX+RDX*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1835102827
            ja .L_412b7a

            jmp .L_412d60
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412b58:

            lea RDX,QWORD PTR [RSI+RDI*1]
            shr RDX,1
            lea RCX,QWORD PTR [RDX+RDX*8]
            lea R9,QWORD PTR [RAX+RCX*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1835102827
            jbe .L_412d70

            mov RSI,RDX
.L_412b7a:

            cmp RSI,RDI
            ja .L_412b58
.L_412b7f:

            xor EAX,EAX
.L_412b81:

            lea EDX,DWORD PTR [RAX*4]
            movzx EAX,BYTE PTR [RBX+1092]
            and EAX,4294967291
            or EAX,EDX
            mov BYTE PTR [RBX+1092],AL
            mov RAX,QWORD PTR [RBX+32]
            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            je .L_412bbf

            mov RDI,RBX
            call RAX

            mov QWORD PTR [RBX+1064],RAX
            test RAX,RAX
            mov EAX,0
            cmove RBX,RAX
.L_412bbf:

            mov RDI,QWORD PTR [RSP+152]
            lea RAX,QWORD PTR [RBP+144]
            cmp RDI,RAX
            je .L_412bd8

            call free@PLT
.L_412bd8:

            mov RDI,QWORD PTR [RSP+1064]
            lea RAX,QWORD PTR [RBP+1056]
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            cmp RDI,RAX
            je .L_412c09

            call free@PLT
.L_412c09:

            mov RDI,QWORD PTR [RSP+1208]
            add RBP,1200
            mov QWORD PTR [RSP+1056],0
            mov QWORD PTR [RSP+1064],0
            cmp RDI,RBP
            je .L_412c3a

            call free@PLT
.L_412c3a:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+1352]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41325b

            add RSP,1368
.L_412c5b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412c70:

            cmp EAX,1399415908
            je .L_412f18

            ja .L_412ed0

            cmp EAX,1299803506
            je .L_412f32

            ja .L_413050

            cmp EAX,1298954605
            je .L_412fdb

            ja .L_413121

            cmp EAX,1298230889
            je .L_412cbc

            cmp EAX,1298231907
            je .L_412f18

            cmp EAX,1298230884
            jne .L_412ce8
.L_412cbc:

            cmp DWORD PTR [RSP+104],1145457748
            jne .L_412ccd

            cmp EAX,1098015074
            jne .L_412ce8
.L_412ccd:

            mov EAX,DWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_6579a0]
            and EAX,4294967294
            cmp EAX,4
            je .L_412790

            nop
            nop
            nop
            nop
.L_412ce8:

            lea RDX,QWORD PTR [RIP+.L_4195e0]
            jmp .L_412790
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412cf8:

            mov EAX,DWORD PTR [R13+128]
            and EAX,4294967294
            cmp EAX,4
            jne .L_412868

            lea R14,QWORD PTR [RIP+.L_414df0]
            mov ESI,1667329140
            xor ECX,ECX
            lea R12,QWORD PTR [RBP+48]
            lea R13,QWORD PTR [R14+20]
            jmp .L_412d3d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412d28:

            mov ESI,DWORD PTR [R14+4]
            xor ECX,ECX
            cmp ESI,1801810542
            sete CL
            add R14,4
            add ECX,ECX
.L_412d3d:

            or ECX,1
            mov EDX,1
            mov RDI,R12
            call .L_44b250

            cmp R13,R14
            jne .L_412d28

            jmp .L_41287f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412d60:

            mov RDX,RSI
            mov RSI,RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412d70:

            cmp R8D,1835102827
            je .L_412e45

            lea RDI,QWORD PTR [RDX+1]
            mov RCX,RSI
            jmp .L_412b30
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412d90:

            mov RDX,RSI
            mov RSI,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412da0:

            cmp R10D,1684959085
            je .L_412e53

            lea R8,QWORD PTR [RDX+1]
            mov R12,RSI
            jmp .L_412a37
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412dc0:

            mov RDX,RSI
            mov RSI,R14
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412dd0:

            cmp R12D,R10D
            jbe .L_412e65

            lea R8,QWORD PTR [RDX+1]
            mov R14,RSI
            jmp .L_412aae
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412de8:

            mov RDX,RSI
            mov RSI,R10
            nop
            nop
.L_412df0:

            cmp R8D,1920232557
            je .L_412e74

            lea RDI,QWORD PTR [RDX+1]
            mov R10,RSI
            jmp .L_412916
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412e08:

            mov RDX,RSI
            mov RSI,R10
            nop
            nop
.L_412e10:

            cmp R8D,1718772067
            je .L_412e7d

            lea RDI,QWORD PTR [RDX+1]
            mov R10,RSI
            jmp .L_412974
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412e28:

            mov RDX,RSI
            mov RSI,R11
            nop
            nop
.L_412e30:

            cmp R9D,1853189490
            je .L_412e5c

            lea R8,QWORD PTR [RDX+1]
            mov R11,RSI
            jmp .L_4129d5
.L_412e45:

            mov EAX,DWORD PTR [R9+28]
            test EAX,EAX
            setne AL
            jmp .L_412b81
.L_412e53:

            mov R13D,DWORD PTR [R11+28]
            jmp .L_412a8a
.L_412e5c:

            mov R9D,DWORD PTR [R10+28]
            jmp .L_412a2a
.L_412e65:

            mov EDX,DWORD PTR [R11+24]
            test EDX,EDX
            setne SIL
            jmp .L_412af7
.L_412e74:

            mov EDX,DWORD PTR [R9+28]
            jmp .L_412969
.L_412e7d:

            mov EDI,DWORD PTR [R9+28]
            jmp .L_4129c9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412e90:

            lea R12,QWORD PTR [RBP+48]
            mov ECX,1
            mov EDX,1
            mov ESI,1819570785
            mov RDI,R12
            call .L_44b250

            mov ECX,1
            mov EDX,1
            mov ESI,1819570797
            mov RDI,R12
            call .L_44b250

            jmp .L_4127d9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412ed0:

            cmp EAX,1415670885
            je .L_412f18

            jbe .L_413090

            cmp EAX,1415999079
            je .L_412f18

            jbe .L_413188

            cmp EAX,1416126825
            je .L_413000

            jbe .L_41324b

            cmp EAX,1416192628
            lea RDX,QWORD PTR [RIP+.L_657be0]
            je .L_412790

            cmp EAX,1416196712
            jne .L_412ce8
.L_412f18:

            cmp DWORD PTR [RSP+104],1145457748
            lea RDX,QWORD PTR [RIP+.L_657c40]
            jne .L_412790

            jmp .L_412ce8
.L_412f32:

            mov EAX,DWORD PTR [RSP+104]
            lea RDX,QWORD PTR [RIP+.L_657b20]
            cmp EAX,1836674354
            je .L_412790

            cmp EAX,1836674418
            lea RDX,QWORD PTR [RIP+.L_426000]
            jne .L_412ce8

            jmp .L_412790
          .byte 0x90
.L_412f60:

            cmp EAX,1265920105
            je .L_412f18

            ja .L_412ff5

            cmp EAX,1265135466
            je .L_412f18

            cmp EAX,1265525857
            je .L_412fdb

            cmp EAX,1265134962
            jne .L_412ce8

            cmp BYTE PTR [RSP+112],0
            je .L_412ce8

            mov ECX,DWORD PTR [RSP+124]
            mov EDX,DWORD PTR [RSP+116]
            xor R9D,R9D
            mov RDI,QWORD PTR [RSP+16]
            mov R8D,1886545254
            mov ESI,1196643650
            call .L_4362c0

            test EAX,EAX
            jne .L_412fe9

            jmp .L_412ce8
.L_412fba:

            cmp EAX,1114139507
            je .L_412f18

            cmp EAX,1114792296
            je .L_412f18

            cmp EAX,1113943655
            jne .L_412ce8
.L_412fdb:

            cmp DWORD PTR [RSP+104],1145457748
            je .L_412ce8
.L_412fe9:

            lea RDX,QWORD PTR [RIP+.L_657ac0]
            jmp .L_412790
.L_412ff5:

            cmp EAX,1281453935
            jne .L_413162
.L_413000:

            lea RDX,QWORD PTR [RIP+.L_657b80]
            jmp .L_412790
.L_41300c:

            cmp EAX,1114990441
            je .L_412f18

            ja .L_4130c7

            cmp EAX,1113683051
            je .L_412f18

            ja .L_412fba

            cmp EAX,1098015074
            je .L_412cbc

            cmp EAX,1113681001
            je .L_412f18

            cmp EAX,1097363309
            jne .L_412ce8

            jmp .L_412f18
.L_413050:

            cmp EAX,1349017959
            je .L_412cbc

            ja .L_413100

            cmp EAX,1315663727
            je .L_412cbc

            cmp EAX,1332902241
            je .L_412fdb

            cmp EAX,1315272545
            jne .L_412ce8

            jmp .L_412f18
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413090:

            cmp EAX,1400466543
            je .L_412f18

            jbe .L_4131ae

            cmp EAX,1415669602
            je .L_412f18

            cmp EAX,1415670642
            je .L_412f18

            cmp EAX,1400468067
            je .L_412cbc

            jmp .L_412ce8
.L_4130c7:

            cmp EAX,1147500129
            je .L_412fdb

            ja .L_4131fa

            cmp EAX,1130457965
            je .L_412f18

            cmp EAX,1130914157
            je .L_412f18

            cmp EAX,1114990692
            jne .L_412ce8

            jmp .L_412f18
          .byte 0x66
          .byte 0x90
.L_413100:

            cmp EAX,1382706791
            je .L_412f18

            ja .L_413220

            cmp EAX,1349020784
            je .L_412cbc

            jmp .L_412ce8
.L_413121:

            cmp EAX,1299148391
            je .L_412cbc

            cmp EAX,1299473769
            je .L_412f18

            cmp EAX,1299145833
            jne .L_412ce8

            jmp .L_412f18
.L_413147:

            cmp EAX,1214344815
            je .L_412f18

            cmp EAX,1198879349
            je .L_412fdb

            jmp .L_412ce8
.L_413162:

            jbe .L_41323b

            cmp EAX,1281716323
            je .L_412f18

            cmp EAX,1281977698
            jne .L_412ce8

            jmp .L_412f18
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413188:

            cmp EAX,1415673460
            je .L_412f18

            cmp EAX,1415933045
            je .L_412fdb

            cmp EAX,1415671148
            jne .L_412ce8

            jmp .L_412fdb
.L_4131ae:

            cmp EAX,1399418472
            je .L_412fdb

            cmp EAX,1400204900
            je .L_412f18

            cmp EAX,1399418468
            jne .L_412ce8

            jmp .L_412f18
.L_4131d4:

            cmp EAX,1247901281
            je .L_412f18

            cmp EAX,1264675945
            je .L_412f18

            cmp EAX,1215131239
            jne .L_412ce8

            jmp .L_412f18
.L_4131fa:

            cmp EAX,1164409200
            je .L_412f18

            cmp EAX,1198678382
            je .L_412f18

            cmp EAX,1148547180
            jne .L_412ce8

            jmp .L_412f18
.L_413220:

            cmp EAX,1398895986
            je .L_412f18

            cmp EAX,1399353956
            jne .L_412ce8

            jmp .L_412f18
.L_41323b:

            cmp EAX,1281453665
            jne .L_412ce8

            jmp .L_412f18
.L_41324b:

            cmp EAX,1416064103
            jne .L_412ce8

            jmp .L_412f18
.L_41325b:

            call __stack_chk_fail@PLT
.L_413260:

            push RBX

            mov RAX,QWORD PTR [RDI+32]
            mov RBX,RDI
            mov RAX,QWORD PTR [RAX+32]
            test RAX,RAX
            je .L_41327a

            mov RDI,QWORD PTR [RDI+1064]
            call RAX
.L_41327a:

            mov RDI,QWORD PTR [RBX+64]
            lea RAX,QWORD PTR [RBX+72]
            cmp RDI,RAX
            je .L_41328c

            call free@PLT
.L_41328c:

            mov RDI,QWORD PTR [RBX+368]
            lea RAX,QWORD PTR [RBX+376]
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+64],0
            cmp RDI,RAX
            je .L_4132b4

            call free@PLT
.L_4132b4:

            mov RDI,QWORD PTR [RBX+912]
            lea RAX,QWORD PTR [RBX+920]
            mov QWORD PTR [RBX+360],0
            mov QWORD PTR [RBX+368],0
            cmp RDI,RAX
            je .L_4132e2

            call free@PLT
.L_4132e2:

            mov RDI,QWORD PTR [RBX+640]
            lea RAX,QWORD PTR [RBX+648]
            mov QWORD PTR [RBX+904],0
            mov QWORD PTR [RBX+912],0
            cmp RDI,RAX
            je .L_413310

            call free@PLT
.L_413310:

            mov RDI,QWORD PTR [RBX+992]
            lea RAX,QWORD PTR [RBX+1000]
            mov QWORD PTR [RBX+632],0
            mov QWORD PTR [RBX+640],0
            cmp RDI,RAX
            je .L_41333e

            call free@PLT
.L_41333e:

            mov RDI,RBX
            pop RBX

            jmp free@PLT
.L_413347:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413350:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDX
            sub RSP,168
.L_413367:

            mov R12,QWORD PTR [RDI+192]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+128]
            mov QWORD PTR [RSP+32],RCX
            mov DWORD PTR [RSP+24],R8D
            mov DWORD PTR [RDX+132],0
            mov QWORD PTR [RSP+16],RAX
            mov EAX,DWORD PTR [RDX+184]
            cmp EAX,1431655764
            ja .L_4133c2

            lea EAX,DWORD PTR [RAX+RAX*2]
            mov EDX,8
            cmp EAX,8
            cmovb EAX,EDX
            mov DWORD PTR [RBX+136],EAX
.L_4133c2:

            mov EAX,DWORD PTR [RBX+144]
            mov RDI,RBX
            mov DWORD PTR [RSP+64],EAX
            call .L_4029e0

            mov EAX,DWORD PTR [RBX+184]
            mov R15,QWORD PTR [RBX+200]
            test EAX,EAX
            je .L_4134d7

            sub EAX,1
            mov QWORD PTR [RSP+40],RBP
            mov QWORD PTR [RSP+8],R12
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RBP,RBX
            lea RAX,QWORD PTR [R15+RAX*4+20]
            mov RBX,RAX
            nop
            nop
            nop
.L_413408:

            mov R12,QWORD PTR [RBP+112]
            mov R13D,DWORD PTR [R15]
            mov RDX,QWORD PTR [R12+208]
            mov ESI,R13D
            mov RDI,R12
            call QWORD PTR [R12+144]

            cmp R13D,127
            mov R14D,EAX
            jbe .L_4134b8

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R13D
            shr EDX,16
            test EDX,EDX
            je .L_413e08

            cmp EDX,1
            je .L_414820

            cmp EDX,14
            jne .L_413d70

            lea EDX,DWORD PTR [R13-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413480:

            test EDX,EDX
            je .L_413d70
.L_413488:

            or EAX,3
            cmp R13D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_414848
.L_41349e:

            cmp R13D,8205
            jne .L_414708

            or R14D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_4134b8:

            mov WORD PTR [R15+16],R14W
            add R15,20
            cmp RBX,R15
            jne .L_413408
.L_4134ca:

            mov RBX,RBP
            mov R12,QWORD PTR [RSP+8]
            mov RBP,QWORD PTR [RSP+40]
.L_4134d7:

            test BYTE PTR [RBX+120],1
            je .L_4134ed

            mov R13D,DWORD PTR [RBX+268]
            test R13D,R13D
            je .L_4140af
.L_4134ed:

            test BYTE PTR [RBX+132],1
            je .L_4135a8

            mov R9D,DWORD PTR [RBX+124]
            test R9D,R9D
            jne .L_4135a8

            mov R15D,DWORD PTR [RBX+184]
            mov R14,QWORD PTR [RBX+200]
            cmp R15D,1
            jbe .L_4135a8

            add R14,36
            xor ESI,ESI
            mov R13D,1
            mov ECX,7168
            jmp .L_413548
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413538:

            mov ESI,R13D
.L_41353b:

            add R13D,1
            add R14,20
            cmp R15D,R13D
            je .L_41358d
.L_413548:

            movzx EDX,WORD PTR [R14]
            mov EAX,EDX
            and EAX,31
            bt ECX,EAX
            jb .L_41353b

            cmp AX,1
            je .L_4145b3
.L_413560:

            mov EAX,R13D
            sub EAX,ESI
            cmp EAX,1
            jbe .L_413538

            mov EDX,R13D
            mov RDI,RBX
            mov DWORD PTR [RSP+8],ECX
            call .L_403190

            mov ESI,R13D
            add R13D,1
            add R14,20
            cmp R15D,R13D
            mov ECX,DWORD PTR [RSP+8]
            jne .L_413548
.L_41358d:

            mov EAX,R15D
            sub EAX,ESI
            cmp EAX,1
            jbe .L_4135a8

            mov EDX,R15D
            mov RDI,RBX
            call .L_403190

            nop
            nop
            nop
            nop
            nop
            nop
.L_4135a8:

            mov R13D,DWORD PTR [RBX+144]
            mov EAX,R13D
            and EAX,4294967294
            cmp EAX,4
            je .L_414210

            cmp EAX,6
            jne .L_4135cd

            cmp R13D,6
            jne .L_414224
.L_4135cd:

            mov RAX,QWORD PTR [R12+32]
            mov RAX,QWORD PTR [RAX+40]
            test RAX,RAX
            je .L_4135e6

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call RAX
.L_4135e6:

            mov ESI,DWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RBX+184]
            mov ECX,DWORD PTR [R12+52]
            and ESI,4294967293
            test R8D,R8D
            je .L_4136f5

            xor EDX,EDX
            nop
            nop
            nop
            nop
.L_413608:

            mov EAX,EDX
            mov RDI,QWORD PTR [RBX+200]
            add EDX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov DWORD PTR [RAX+4],ECX
            mov EAX,DWORD PTR [RBX+184]
            cmp EAX,EDX
            ja .L_413608

            cmp ESI,4
            je .L_4136f5

            test EAX,EAX
            mov R13,QWORD PTR [RBX+112]
            mov EDI,DWORD PTR [R12+1072]
            mov R9,QWORD PTR [RBX+200]
            je .L_4136f5

            sub EAX,1
            mov QWORD PTR [RSP+40],R12
            mov QWORD PTR [RSP+48],RBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov R12,RBP
            mov R14,R9
            mov RBP,R13
            mov EBX,EDI
            lea R15,QWORD PTR [R9+RAX*4+20]
            lea RAX,QWORD PTR [RSP+92]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_41368c

            nop
            nop
            nop
            nop
            nop
            nop
.L_413680:

            mov DWORD PTR [R14],R13D
            add R14,20
            cmp R15,R14
            je .L_4136e8
.L_41368c:

            mov RDX,QWORD PTR [RBP+216]
            mov ESI,DWORD PTR [R14]
            mov RDI,RBP
            call QWORD PTR [RBP+152]

            cmp EAX,DWORD PTR [R14]
            mov R13D,EAX
            je .L_4136db

            mov RAX,QWORD PTR [R12+152]
            mov DWORD PTR [RSP+92],0
            mov EDX,R13D
            mov RSI,QWORD PTR [R12+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,R12
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_413680
.L_4136db:

            or DWORD PTR [R14+4],EBX
            add R14,20
            cmp R15,R14
            jne .L_41368c
.L_4136e8:

            mov RBP,R12
            mov RBX,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+40]
.L_4136f5:

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call .L_42ba80

            test BYTE PTR [RBX+132],1
            je .L_4138a0

            test BYTE PTR [R12+1092],1
            je .L_4138a0

            mov R11D,DWORD PTR [RBX+184]
            mov R9,QWORD PTR [RBX+200]
            test R11D,R11D
            je .L_4138a0

            xor ESI,ESI
            mov R15D,4294967294
            lea R14,QWORD PTR [R9+24]
            jmp .L_413753
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413748:

            cmp R11D,EDI
            mov ESI,EDI
            jbe .L_4138a0
.L_413753:

            mov EAX,ESI
            lea EDI,DWORD PTR [RSI+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [R9+RAX*4]
            cmp DWORD PTR [R10],8260
            jne .L_413748

            test ESI,ESI
            je .L_41491e

            lea EAX,DWORD PTR [RSI-1]
            mov RDX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [R9+RAX*4+16]
            and EAX,31
            cmp AX,13
            je .L_4137ab

            jmp .L_414963
          .byte 0x90
.L_413790:

            lea EAX,DWORD PTR [RDX-1]
            mov RCX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [R9+RAX*4+16]
            and EAX,31
            cmp AX,13
            jne .L_4137af

            mov EDX,ECX
.L_4137ab:

            test EDX,EDX
            jne .L_413790
.L_4137af:

            cmp R11D,EDI
            jbe .L_414908
.L_4137b8:

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [R9+RAX*4+16]
            and EAX,31
            cmp AX,13
            jne .L_414908

            lea EAX,DWORD PTR [RSI+2]
            mov ECX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R9+RAX*4+16]
            jmp .L_4137f9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4137e8:

            movzx EAX,WORD PTR [R8]
            add R8,20
            and EAX,31
            cmp AX,13
            jne .L_413801
.L_4137f9:

            add ECX,1
            cmp R11D,ECX
            ja .L_4137e8
.L_413801:

            cmp EDX,ESI
            mov EAX,DWORD PTR [R12+1076]
            jae .L_41384c

            mov R13D,EAX
            jmp .L_413820

            nop
            nop
            nop
            nop
            nop
            nop
.L_413818:

            mov R13D,DWORD PTR [R12+1076]
.L_413820:

            mov EAX,EDX
            add EDX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R9+RAX*4]
            mov EAX,DWORD PTR [R8+4]
            or EAX,DWORD PTR [R12+1080]
            or EAX,R13D
            cmp EDX,ESI
            mov DWORD PTR [R8+4],EAX
            jb .L_413818

            mov EAX,DWORD PTR [R12+1076]
.L_41384c:

            or DWORD PTR [R10+4],EAX
            cmp ECX,EDI
            jbe .L_41388b

            mov EDX,R15D
            lea RAX,QWORD PTR [RDI+RDI*4]
            sub EDX,ESI
            add EDX,ECX
            lea RAX,QWORD PTR [R9+RAX*4+4]
            add RDX,RDI
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [R14+RDX*4]
            nop
.L_413870:

            mov EDX,DWORD PTR [R12+1076]
            or EDX,DWORD PTR [R12+1084]
            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RSI,RAX
            jne .L_413870
.L_41388b:

            mov EDI,ECX
.L_41388d:

            cmp R11D,EDI
            mov ESI,EDI
            ja .L_413753

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4138a0:

            mov RAX,QWORD PTR [R12+32]
            mov RAX,QWORD PTR [RAX+80]
            test RAX,RAX
            je .L_4138b9

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call RAX
.L_4138b9:

            mov EAX,DWORD PTR [RSP+24]
            test EAX,EAX
            je .L_41396c

            mov R14,QWORD PTR [RSP+32]
            sub EAX,1
            shl RAX,4
            lea R13,QWORD PTR [R14+RAX*1+16]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4138e0:

            mov R10D,DWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+12]
            test R10D,R10D
            jne .L_4138f3

            cmp R8D,-1
            je .L_41395f
.L_4138f3:

            mov R15D,DWORD PTR [R12+56]
            mov R9D,DWORD PTR [R14]
            xor ECX,ECX
            mov R11,QWORD PTR [R12+64]
.L_413902:

            cmp RCX,R15
            jae .L_41394a

            lea RDX,QWORD PTR [RCX+R15*1]
            shr RDX,1
            lea RAX,QWORD PTR [RDX+RDX*8]
            lea RSI,QWORD PTR [R11+RAX*4]
            mov EDI,DWORD PTR [RSI]
            cmp R9D,EDI
            jb .L_413945

            jmp .L_413e60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413928:

            lea RAX,QWORD PTR [RCX+RDX*1]
            shr RAX,1
            lea RSI,QWORD PTR [RAX+RAX*8]
            lea RSI,QWORD PTR [R11+RSI*4]
            mov EDI,DWORD PTR [RSI]
            cmp R9D,EDI
            jae .L_413e70

            mov RDX,RAX
.L_413945:

            cmp RCX,RDX
            jb .L_413928
.L_41394a:

            xor ECX,ECX
            xor EDX,EDX
.L_41394e:

            mov ESI,DWORD PTR [R14+4]
            mov RDI,RBX
            shl ESI,CL
            mov ECX,R10D
            call .L_402fd0
.L_41395f:

            add R14,16
            cmp R13,R14
            jne .L_4138e0
.L_41396c:

            mov RDI,QWORD PTR [RSP+16]
            call .L_436be0

            test EAX,EAX
            je .L_41451b
.L_41397e:

            mov EDX,DWORD PTR [RBX+184]
            mov RAX,QWORD PTR [RBX+200]
            test EDX,EDX
            je .L_4139af

            sub EDX,1
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RDX*4+20]
            nop
            nop
            nop
            nop
            nop
.L_4139a0:

            mov EDX,DWORD PTR [RAX+12]
            add RAX,20
            mov DWORD PTR [RAX-20],EDX
            cmp RCX,RAX
            jne .L_4139a0
.L_4139af:

            mov RSI,RBX
            mov RDI,RBP
            mov DWORD PTR [RBX+140],2
            call .L_436a90

            lea RAX,QWORD PTR [R12+40]
            mov RDX,RBP
            mov RCX,RBX
            mov RSI,R12
            mov RDI,RAX
            mov QWORD PTR [RSP+24],RAX
            call .L_438c90

            mov RDI,RBX
            call .L_402a10

            mov RAX,QWORD PTR [RBX+200]
            mov EDX,DWORD PTR [RBX+184]
            mov R14,QWORD PTR [RBX+216]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RBX+144]
            and EAX,4294967294
            cmp EAX,4
            je .L_4143f5

            test EDX,EDX
            je .L_413ae1

            lea EAX,DWORD PTR [RDX-1]
            lea R15,QWORD PTR [R14+4]
            lea RDI,QWORD PTR [RSP+88]
            mov R13,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],RBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov QWORD PTR [RSP+8],R12
            mov R12,RBP
            mov RBP,R15
            mov R15,RDI
            lea RAX,QWORD PTR [R14+RAX*4+24]
            lea R14,QWORD PTR [RSP+92]
            mov RBX,R14
            mov R14,RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_413a58:

            mov RAX,QWORD PTR [R12+152]
            mov EDX,DWORD PTR [R13]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+160]
            add R13,20
            mov RCX,QWORD PTR [RAX+160]
            call QWORD PTR [RAX+384]

            mov DWORD PTR [RBP],EAX
            mov RAX,QWORD PTR [R12+152]
            mov R8,RBX
            mov EDX,DWORD PTR [R13-20]
            mov RSI,QWORD PTR [R12+160]
            mov RCX,R15
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+88],0
            mov RDI,R12
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            mov EAX,DWORD PTR [RSP+88]
            sub DWORD PTR [RBP+4],EAX
            mov EAX,DWORD PTR [RSP+92]
            sub DWORD PTR [RBP+8],EAX
            add RBP,20
            cmp R14,RBP
            jne .L_413a58
.L_413ad4:

            mov RBP,R12
            mov RBX,QWORD PTR [RSP+32]
            mov R12,QWORD PTR [RSP+8]
.L_413ae1:

            test BYTE PTR [RBX+132],4
            je .L_413af8

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_4306b0
.L_413af8:

            mov RSI,RBX
            mov RDI,RBP
            call .L_436c10

            mov RDI,QWORD PTR [RSP+16]
            mov R13D,DWORD PTR [RBX+184]
            call .L_436be0

            test EAX,EAX
            mov RDX,QWORD PTR [R12+32]
            jne .L_413e90

            cmp BYTE PTR [RDX+92],0
            mov ECX,DWORD PTR [RDX+88]
            je .L_414083
.L_413b2e:

            cmp ECX,1
            je .L_4142b9

            mov R13D,1
            xor R15D,R15D
.L_413b40:

            cmp ECX,2
            je .L_413fec
.L_413b49:

            mov RSI,RBX
            mov RDI,RBP
            call .L_436c60

            test BYTE PTR [RBX+132],2
            je .L_413bc6

            test BYTE PTR [RBX+120],4
            jne .L_413bc6

            mov EAX,DWORD PTR [RBX+184]
            mov RDX,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+216]
            test EAX,EAX
            je .L_413bc6

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RCX,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413b90:

            test BYTE PTR [RDX+RAX*1+16],32
            je .L_413bbd

            test BYTE PTR [RDX+RAX*1+12],32
            jne .L_413bbd

            mov DWORD PTR [RSI+RAX*1+12],0
            mov DWORD PTR [RSI+RAX*1+8],0
            mov DWORD PTR [RSI+RAX*1+4],0
            mov DWORD PTR [RSI+RAX*1],0
.L_413bbd:

            add RAX,20
            cmp RCX,RAX
            jne .L_413b90
.L_413bc6:

            mov RSI,RBX
            mov RDI,RBP
            call .L_436c70

            test R13B,R13B
            je .L_4143b8

            mov RAX,QWORD PTR [R12+32]
            cmp BYTE PTR [RAX+92],0
            jne .L_4147b6

            mov EAX,DWORD PTR [RBX+144]
            and EAX,4294967293
            cmp EAX,5
            je .L_4147d6
.L_413bfb:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_42fed0
.L_413c09:

            test BYTE PTR [RBX+132],2
            je .L_414358

            test BYTE PTR [RBX+120],4
            jne .L_414358

            mov R14D,DWORD PTR [RBX+184]
            mov R15,QWORD PTR [RBX+200]
            mov R9,QWORD PTR [RBX+216]
            test R14D,R14D
            je .L_414358

            lea RAX,QWORD PTR [R15+12]
            xor R13D,R13D
            nop
            nop
            nop
.L_413c48:

            test BYTE PTR [RAX+4],32
            je .L_414340

            test BYTE PTR [RAX],32
            jne .L_414340

            cmp R14D,R13D
            mov QWORD PTR [RSP+8],R9
            je .L_414358

            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+92],0
            lea RCX,QWORD PTR [RSP+92]
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,32
            mov RDI,RBP
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            jne .L_4146be

            cmp R14D,R13D
            mov ECX,R13D
            jbe .L_4147eb

            mov QWORD PTR [RSP+8],RBP
            mov RBP,RBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_413cc0:

            mov EAX,R13D
            lea EBX,DWORD PTR [R13+1]
            lea RSI,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RSI*4]
            lea RAX,QWORD PTR [R15+RDX*1]
            test BYTE PTR [RAX+16],32
            je .L_414750

            test BYTE PTR [RAX+12],32
            jne .L_414750

            cmp R14D,EBX
            mov ESI,DWORD PTR [RAX+8]
            ja .L_414995

            test ECX,ECX
            je .L_4147e3

            lea EDX,DWORD PTR [RCX-1]
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R15+RDX*4]
            mov EDI,DWORD PTR [RDX+8]
            cmp ESI,EDI
            jb .L_413d2c

            jmp .L_4147e3
.L_413d19:

            lea EDX,DWORD PTR [RAX-1]
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R15+RDX*4]
            cmp DWORD PTR [RDX+8],EDI
            jne .L_413d38
.L_413d2c:

            test EAX,EAX
            mov DWORD PTR [RDX+8],ESI
            jne .L_413d19

            nop
            nop
            nop
            nop
            nop
.L_413d38:

            cmp R14D,EBX
            jbe .L_4147e3
.L_413d41:

            mov R13D,EBX
            jmp .L_413cc0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413d50:

            cmp EDX,3
            je .L_414558

            cmp EDX,6
            je .L_414050

            test EDX,EDX
            je .L_4142a8

            nop
            nop
            nop
            nop
            nop
            nop
.L_413d70:

            mov EAX,16782336
            bt EAX,R14D
            jae .L_4134b8

            mov ESI,DWORD PTR [R15]
            cmp ESI,4151
            je .L_414734

            cmp ESI,6752
            je .L_41473e

            cmp ESI,4038
            je .L_41473e

            cmp ESI,3897
            mov EAX,32512
            je .L_413dd6
.L_413db3:

            mov RDI,R12
            mov RDX,QWORD PTR [R12+192]
            call QWORD PTR [R12+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_413dd6:

            sub R13D,127995
            or EAX,R14D
            mov R14D,11
            cmp R13D,4
            cmova R14D,EAX
            add R15,20
            mov WORD PTR [R15-4],R14W
            cmp RBX,R15
            jne .L_413408

            jmp .L_4134ca
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413e08:

            mov EDX,R13D
            shr EDX,8
            cmp EDX,23
            je .L_41459e

            jbe .L_413d50

            cmp EDX,32
            je .L_414569

            jbe .L_4143d7

            cmp EDX,254
            je .L_414061

            cmp EDX,255
            jne .L_413d70

            lea EDX,DWORD PTR [R13-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_413480
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413e60:

            mov RAX,RDX
            mov RDX,R15
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413e70:

            cmp R9D,EDI
            jbe .L_413e81

            lea RCX,QWORD PTR [RAX+1]
            mov R15,RDX
            jmp .L_413902
.L_413e81:

            mov ECX,DWORD PTR [RSI+20]
            mov EDX,DWORD PTR [RSI+24]
            jmp .L_41394e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413e90:

            xor R15D,R15D
            cmp DWORD PTR [RDX+88],1
            je .L_4142b9
.L_413e9d:

            mov RDI,QWORD PTR [RBX+200]
            mov R14,QWORD PTR [RBX+216]
            mov ESI,6
            mov QWORD PTR [RSP+8],RDI
            mov RDI,RBP
            mov QWORD PTR [RSP+16],R14
            call .L_409670

            test AL,AL
            jne .L_4145c1

            mov RDI,QWORD PTR [RSP+24]
            mov RCX,RBX
            mov RDX,RBP
            mov RSI,R12
            call .L_438c20

            mov ESI,6
            mov RDI,RBP
            call .L_409670

            test AL,AL
            je .L_413fd8

            test R13D,R13D
            je .L_413fd8

            lea RAX,QWORD PTR [RSP+88]
            lea R14,QWORD PTR [RSP+92]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+16]
            add RAX,12
            mov QWORD PTR [RSP+40],RAX
            lea EAX,DWORD PTR [R13-1]
            mov DWORD PTR [RSP+16],EAX
            mov RAX,QWORD PTR [RSP+8]
            add RAX,20
            mov QWORD PTR [RSP+48],RAX
.L_413f2e:

            mov EAX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],RBX
            mov RBX,R14
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],R12
            mov BYTE PTR [RSP+16],R15B
            mov R15,RBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov R12,R11
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov RBP,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413f70:

            mov RAX,QWORD PTR [R15+152]
            mov EDX,DWORD PTR [R12]
            mov R8,RBX
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+88],0
            mov RCX,R14
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            add R12,20
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            mov EAX,DWORD PTR [RSP+88]
            sub DWORD PTR [R13-4],EAX
            mov EAX,DWORD PTR [RSP+92]
            sub DWORD PTR [R13],EAX
            add R13,20
            cmp RBP,R12
            jne .L_413f70

            mov RBP,R15
            movzx R15D,BYTE PTR [RSP+16]
            mov R12,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
.L_413fd8:

            mov RAX,QWORD PTR [R12+32]
            xor R13D,R13D
            mov ECX,DWORD PTR [RAX+88]
            cmp ECX,2
            jne .L_413b49
.L_413fec:

            mov EAX,DWORD PTR [RBX+184]
            mov RSI,QWORD PTR [RBX+200]
            test EAX,EAX
            je .L_413b49

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RCX,2
            nop
.L_414010:

            test BYTE PTR [RSI+RAX*1+12],8
            je .L_414042

            mov RDX,QWORD PTR [RBX+216]
            add RDX,RAX
            test R15B,R15B
            je .L_41403b

            mov EDI,DWORD PTR [RDX]
            sub DWORD PTR [RDX+8],EDI
            mov EDI,DWORD PTR [RDX+4]
            sub DWORD PTR [RDX+12],EDI
            mov RDX,QWORD PTR [RBX+216]
            add RDX,RAX
.L_41403b:

            mov QWORD PTR [RDX],0
.L_414042:

            add RAX,20
            cmp RCX,RAX
            jne .L_414010

            jmp .L_413b49
.L_414050:

            xor EDX,EDX
            cmp R13D,1564
            sete DL
            jmp .L_413480
.L_414061:

            lea EDX,DWORD PTR [R13-65024]
            cmp EDX,15
            setbe DL
            cmp R13D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_413480
.L_414083:

            mov ESI,DWORD PTR [RBX+144]
            and ESI,4294967293
            cmp ESI,5
            je .L_413b2e

            cmp ECX,1
            je .L_41487a

            mov R13D,1
            mov R15D,1
            jmp .L_413b40
.L_4140af:

            mov RAX,QWORD PTR [RBX+200]
            movzx EAX,WORD PTR [RAX+16]
            and EAX,31
            cmp AX,12
            jne .L_4134ed

            mov RAX,QWORD PTR [RBP+152]
            lea R14,QWORD PTR [RSP+92]
            mov DWORD PTR [RSP+92],0
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,9676
            mov RDI,RBP
            mov RCX,R14
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_4134ed

            mov R13,QWORD PTR [RBX+112]
            pxor XMM0,XMM0
            mov ESI,9676
            movups XMMWORD PTR [RSP+100],XMM0
            mov RDX,QWORD PTR [R13+208]
            mov RDI,R13
            call QWORD PTR [R13+144]

            mov R14D,EAX
            mov EAX,16782336
            or DWORD PTR [RBX+132],1
            bt EAX,R14D
            jb .L_414967
.L_41413e:

            mov RDI,RBX
            call .L_4029e0

            mov WORD PTR [RSP+112],R14W
            lea RSI,QWORD PTR [RSP+128]
            mov RDI,RBX
            mov EAX,DWORD PTR [RSP+112]
            mov DWORD PTR [RSP+96],9676
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [RBX+180],0
            mov DWORD PTR [RSP+144],EAX
            mov RAX,QWORD PTR [RBX+200]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov EDX,DWORD PTR [RAX+8]
            mov DWORD PTR [RSP+136],EDX
            mov EAX,DWORD PTR [RAX+4]
            mov DWORD PTR [RSP+132],EAX
            call .L_402ca0

            mov EAX,DWORD PTR [RBX+180]
            mov EDX,DWORD PTR [RBX+184]
.L_4141ae:

            cmp EAX,EDX
            jae .L_414866

            cmp BYTE PTR [RBX+176],0
            jne .L_414866

            cmp BYTE PTR [RBX+177],0
            je .L_4147a8

            mov RDI,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RDI
            je .L_414791
.L_4141e4:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            jne .L_4148ba

            mov EAX,DWORD PTR [RBX+180]
            mov EDX,DWORD PTR [RBX+184]
            jmp .L_4141ae
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414210:

            mov EDI,DWORD PTR [RBX+148]
            call .L_406760

            cmp R13D,EAX
            je .L_4135cd
.L_414224:

            mov R13D,DWORD PTR [RBX+184]
            mov RAX,QWORD PTR [RBX+200]
            cmp R13D,1
            jbe .L_414873

            mov EDX,DWORD PTR [RBX+124]
            lea R14,QWORD PTR [RAX+36]
            xor ECX,ECX
            mov R15D,1
            jmp .L_414274
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414250:

            mov EDX,R15D
            mov ESI,ECX
            mov RDI,RBX
            call .L_403090

            mov EDX,DWORD PTR [RBX+124]
            mov ECX,R15D
.L_414263:

            add R15D,1
            add R14,20
            cmp R13D,R15D
            je .L_41452e
.L_414274:

            movzx EAX,WORD PTR [R14]
            mov EDI,7168
            bt EDI,EAX
            jb .L_414263

            cmp EDX,1
            jne .L_414250

            mov EAX,R15D
            sub EAX,ECX
            cmp EAX,1
            jbe .L_414250

            mov ESI,ECX
            mov EDX,R15D
            mov RDI,RBX
            mov DWORD PTR [RSP+8],ECX
            call .L_403190

            mov ECX,DWORD PTR [RSP+8]
            jmp .L_414250
.L_4142a8:

            xor EDX,EDX
            cmp R13D,173
            sete DL
            jmp .L_413480
.L_4142b9:

            mov ECX,DWORD PTR [RBX+184]
            xor R15D,R15D
            mov RDI,QWORD PTR [RBX+200]
            test ECX,ECX
            je .L_41431f
.L_4142cd:

            lea EDX,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RDX+RDX*4+5]
            xor EDX,EDX
            shl RSI,2
            nop
            nop
            nop
            nop
            nop
.L_4142e0:

            test BYTE PTR [RDI+RDX*1+12],8
            je .L_414316

            mov RCX,QWORD PTR [RBX+216]
            add RCX,RDX
            test R15B,R15B
            je .L_41430f

            mov R8D,DWORD PTR [RCX]
            sub DWORD PTR [RCX+8],R8D
            mov R8D,DWORD PTR [RCX+4]
            sub DWORD PTR [RCX+12],R8D
            mov RCX,QWORD PTR [RBX+216]
            add RCX,RDX
.L_41430f:

            mov QWORD PTR [RCX],0
.L_414316:

            add RDX,20
            cmp RSI,RDX
            jne .L_4142e0
.L_41431f:

            test EAX,EAX
            jne .L_413e9d

            mov RDX,QWORD PTR [R12+32]
.L_41432c:

            mov ECX,DWORD PTR [RDX+88]
            mov R13D,1
            jmp .L_413b40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414340:

            add R13D,1
            add RAX,20
            cmp R14D,R13D
            jne .L_413c48

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414358:

            mov RAX,QWORD PTR [R12+32]
            mov RAX,QWORD PTR [RAX+48]
            test RAX,RAX
            je .L_414371

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call RAX
.L_414371:

            mov EAX,DWORD PTR [RSP+64]
            mov DWORD PTR [RBX+136],128
            mov DWORD PTR [RBX+144],EAX
            mov EAX,1
            mov RBX,QWORD PTR [RSP+152]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4149c8

            add RSP,168
.L_4143a8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4143b8:

            mov EAX,DWORD PTR [RBX+144]
            and EAX,4294967293
            cmp EAX,5
            jne .L_413c09

            mov RDI,RBX
            call .L_403c10

            jmp .L_413c09
.L_4143d7:

            cmp EDX,24
            jne .L_413d70

            lea EDX,DWORD PTR [R13-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_413480
.L_4143f5:

            test EDX,EDX
            je .L_41489a

            mov RDI,QWORD PTR [RSP+8]
            lea EAX,DWORD PTR [RDX-1]
            mov QWORD PTR [RSP+32],RBX
            mov R15,R14
            mov DWORD PTR [RSP+40],EAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov R13,RDI
            add RDI,20
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov QWORD PTR [RSP+48],RDI
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414430:

            mov RAX,QWORD PTR [RBP+152]
            mov EDX,DWORD PTR [R13]
            add R13,20
            mov RSI,QWORD PTR [RBP+160]
            mov RDI,RBP
            add R15,20
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov DWORD PTR [R15-20],EAX
            cmp RBX,R13
            jne .L_414430

            mov ESI,6
            mov RDI,RBP
            mov RBX,QWORD PTR [RSP+32]
            call .L_409670

            test AL,AL
            je .L_413ae1

            mov EAX,DWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [R14+12]
            mov R15,QWORD PTR [RSP+8]
            lea R14,QWORD PTR [RSP+92]
            mov QWORD PTR [RSP+8],R12
            mov QWORD PTR [RSP+32],RBX
            mov R12,RBP
            mov RBX,R14
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RBP,R15
            lea RAX,QWORD PTR [RDI+RAX*4]
            lea RDI,QWORD PTR [RSP+88]
            mov R14,RAX
            mov R15,RDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_4144c0:

            mov RAX,QWORD PTR [R12+152]
            mov EDX,DWORD PTR [RBP]
            mov R8,RBX
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+88],0
            mov RCX,R15
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            add RBP,20
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            mov EAX,DWORD PTR [RSP+88]
            sub DWORD PTR [R13-4],EAX
            mov EAX,DWORD PTR [RSP+92]
            sub DWORD PTR [R13],EAX
            add R13,20
            cmp R14,RBP
            jne .L_4144c0

            jmp .L_413ad4
.L_41451b:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_42ebe0

            jmp .L_41397e
.L_41452e:

            cmp EDX,1
            je .L_4147f6
.L_414537:

            mov EDX,R13D
            mov ESI,ECX
            mov RDI,RBX
            call .L_403090

            mov RDI,RBX
            call .L_4030b0

            xor DWORD PTR [RBX+144],1
            jmp .L_4135cd
.L_414558:

            xor EDX,EDX
            cmp R13D,847
            sete DL
            jmp .L_413480
.L_414569:

            lea EDX,DWORD PTR [R13-8203]
            cmp EDX,4
            jbe .L_413488

            lea EDX,DWORD PTR [R13-8234]
            cmp EDX,4
            jbe .L_413488

            lea EDX,DWORD PTR [R13-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_413480
.L_41459e:

            lea EDX,DWORD PTR [R13-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_413480
.L_4145b3:

            and DH,3
            jne .L_41353b

            jmp .L_413560
.L_4145c1:

            test R13D,R13D
            je .L_41493e

            lea EAX,DWORD PTR [R13-1]
            mov RDI,QWORD PTR [RSP+8]
            add R14,12
            mov R10,R14
            mov QWORD PTR [RSP+40],R14
            lea R14,QWORD PTR [RSP+92]
            mov DWORD PTR [RSP+16],EAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov QWORD PTR [RSP+56],R12
            mov R11,RDI
            add RDI,20
            mov BYTE PTR [RSP+71],R15B
            lea R13,QWORD PTR [RDI+RAX*4]
            lea RAX,QWORD PTR [RSP+88]
            mov R12,RBP
            mov QWORD PTR [RSP+72],RBX
            mov QWORD PTR [RSP+48],RDI
            mov RBP,R11
            mov RBX,R13
            mov QWORD PTR [RSP+32],RAX
            mov R13,R10
            mov R15,RAX
            nop
            nop
            nop
            nop
.L_414628:

            mov RAX,QWORD PTR [R12+152]
            mov EDX,DWORD PTR [RBP]
            mov R8,R14
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+88],0
            mov RCX,R15
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            add RBP,20
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            mov EAX,DWORD PTR [RSP+88]
            add DWORD PTR [R13-4],EAX
            mov EAX,DWORD PTR [RSP+92]
            add DWORD PTR [R13],EAX
            add R13,20
            cmp RBX,RBP
            jne .L_414628

            mov RBP,R12
            mov RBX,QWORD PTR [RSP+72]
            mov RDX,RBP
            mov R12,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            movzx R15D,BYTE PTR [RSP+71]
            mov RCX,RBX
            mov RSI,R12
            call .L_438c20

            mov ESI,6
            mov RDI,RBP
            call .L_409670

            test AL,AL
            jne .L_413f2e

            jmp .L_413fd8
.L_4146be:

            cmp R14D,R13D
            jbe .L_414358

            lea EDX,DWORD PTR [R14-1]
            mov ECX,R13D
            lea RAX,QWORD PTR [RCX+RCX*4]
            sub EDX,R13D
            add RDX,RCX
            lea RAX,QWORD PTR [R15+RAX*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R15+RDX*4+20]
            nop
            nop
            nop
.L_4146e8:

            test BYTE PTR [RAX+16],32
            je .L_4146fa

            test BYTE PTR [RAX+12],32
            jne .L_4146fa

            mov ECX,DWORD PTR [RSP+92]
            mov DWORD PTR [RAX],ECX
.L_4146fa:

            add RAX,20
            cmp RDX,RAX
            jne .L_4146e8

            jmp .L_414358
.L_414708:

            sub R13D,6155
            cmp R13D,2
            ja .L_4149cd

            or R14D,96
            add R15,20
            mov WORD PTR [R15-4],R14W
            cmp RBX,R15
            jne .L_413408

            jmp .L_4134ca
.L_414734:

            mov ESI,4154
            jmp .L_413db3
.L_41473e:

            mov EAX,65024
            jmp .L_413dd6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414750:

            cmp R13D,ECX
            je .L_414789

            mov EDI,ECX
            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDI,QWORD PTR [RDI+RDI*4]
            movups XMMWORD PTR [R15+RDI*4],XMM0
            mov EAX,DWORD PTR [RAX+16]
            lea R10,QWORD PTR [RDI*4]
            mov DWORD PTR [R15+R10*1+16],EAX
            movdqu XMM0,XMMWORD PTR [R9+RSI*4]
            movups XMMWORD PTR [R9+RDI*4],XMM0
            mov EAX,DWORD PTR [R9+RDX*1+16]
            mov DWORD PTR [R9+R10*1+16],EAX
.L_414789:

            add ECX,1
            jmp .L_413d38
.L_414791:

            cmp DWORD PTR [RBX+188],EAX
            jne .L_4141e4

            mov ECX,EAX
.L_41479f:

            add ECX,1
            mov DWORD PTR [RBX+188],ECX
.L_4147a8:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_4141ae
.L_4147b6:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_42edc0

            mov EAX,DWORD PTR [RBX+144]
            and EAX,4294967293
            cmp EAX,5
            jne .L_413bfb
.L_4147d6:

            mov RDI,RBX
            call .L_403c10

            jmp .L_413bfb
.L_4147e3:

            mov RBX,RBP
            mov RBP,QWORD PTR [RSP+8]
.L_4147eb:

            mov DWORD PTR [RBX+184],ECX
            jmp .L_414358
.L_4147f6:

            mov EAX,R13D
            sub EAX,ECX
            cmp EAX,1
            jbe .L_414537

            mov ESI,ECX
            mov EDX,R13D
            mov RDI,RBX
            mov DWORD PTR [RSP+8],ECX
            call .L_403190

            mov ECX,DWORD PTR [RSP+8]
            jmp .L_414537
          .byte 0x66
          .byte 0x90
.L_414820:

            lea EDX,DWORD PTR [R13-113824]
            cmp EDX,3
            jbe .L_4148ac

            lea EDX,DWORD PTR [R13-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_413480
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414848:

            or R14D,544
            add R15,20
            mov WORD PTR [R15-4],R14W
            cmp RBX,R15
            jne .L_413408

            jmp .L_4134ca
.L_414866:

            mov RDI,RBX
            call .L_402a70

            jmp .L_4134ed
.L_414873:

            xor ECX,ECX
            jmp .L_414537
.L_41487a:

            mov ECX,DWORD PTR [RBX+184]
            mov RDI,QWORD PTR [RBX+200]
            mov R15D,1
            test ECX,ECX
            jne .L_4142cd

            jmp .L_41432c
.L_41489a:

            mov ESI,6
            mov RDI,RBP
            call .L_409670

            jmp .L_413ae1
.L_4148ac:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_41349e
.L_4148ba:

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R11,QWORD PTR [RBX+200]
            mov R10,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R11+RDX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov ECX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov EDX,DWORD PTR [RBX+184]
            jmp .L_41479f
.L_414908:

            cmp EDX,ESI
            mov EAX,DWORD PTR [R12+1076]
            jae .L_414931

            mov ECX,EDI
            mov R13D,EAX
            jmp .L_413820
.L_41491e:

            xor EDX,EDX
.L_414920:

            cmp R11D,EDI
            ja .L_4137b8

            mov EAX,DWORD PTR [R12+1076]
.L_414931:

            mov ECX,EDI
            or DWORD PTR [R10+4],EAX
            mov EDI,ECX
            jmp .L_41388d
.L_41493e:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R12
            mov RCX,RBX
            mov RDX,RBP
            call .L_438c20

            mov ESI,6
            mov RDI,RBP
            call .L_409670

            jmp .L_413fd8
.L_414963:

            mov EDX,ESI
            jmp .L_414920
.L_414967:

            mov RDX,QWORD PTR [R13+192]
            mov ESI,9676
            mov RDI,R13
            call QWORD PTR [R13+128]

            lea RDX,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            shl EAX,8
            or R14D,EAX
            jmp .L_41413e
.L_414995:

            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp ESI,DWORD PTR [R15+RAX*4+8]
            je .L_413d41

            test ECX,ECX
            je .L_4149d6

            lea EDX,DWORD PTR [RCX-1]
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R15+RDX*4]
            mov EDI,DWORD PTR [RDX+8]
            cmp ESI,EDI
            jae .L_413d41

            jmp .L_413d2c
.L_4149c8:

            call __stack_chk_fail@PLT
.L_4149cd:

            or R14D,32
            jmp .L_4134b8
.L_4149d6:

            lea EDX,DWORD PTR [R13+2]
            mov ESI,R13D
            mov RDI,RBP
            mov DWORD PTR [RSP+24],ECX
            mov QWORD PTR [RSP+16],R9
            call .L_403190

            mov R9,QWORD PTR [RSP+16]
            mov ECX,DWORD PTR [RSP+24]
            jmp .L_413d41
.L_4149fc:

            nop
            nop
            nop
            nop
.L_414a00:

            cmp ESI,1196445523
            je .L_414a30

            cmp ESI,1196643650
            jne .L_414a28

            mov RDI,QWORD PTR [RDI+192]
            xor ESI,ESI
            add RDI,40
            jmp .L_44b3f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414a28:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414a30:

            mov RDI,QWORD PTR [RDI+192]
            mov ESI,1
            add RDI,40
            jmp .L_44b3f0
.L_414a45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414a50:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R10D,ECX
            push RBP
            push RBX
            mov ECX,128
            mov RBX,RDI
            mov R15,R8
            sub RSP,17816
.L_414a72:

            mov QWORD PTR [RSP+16],RSI
            lea RSI,QWORD PTR [RSP+104]
            lea R8,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+17800],RAX
            xor EAX,EAX
            mov RDI,RSI
            lea RSI,QWORD PTR [R14+144]
            mov QWORD PTR [RSP+56],0

            rep stosq QWORD PTR [RDI]

            mov RDI,QWORD PTR [RBX+128]
            lea RAX,QWORD PTR [RIP+.L_414dec]
            mov ECX,R10D
            lea RBP,QWORD PTR [RSP+44]
            mov QWORD PTR [RSP+48],RAX
            call .L_40c7b0

            mov EDI,DWORD PTR [R14+148]
            mov QWORD PTR [RSP+24],RAX
            call .L_406760

            mov DWORD PTR [RSP],EAX
            mov EAX,DWORD PTR [R14+184]
            mov R12,QWORD PTR [R14+200]
            test EAX,EAX
            je .L_414c21

            sub EAX,1
            lea RBP,QWORD PTR [RSP+44]
            mov R14,RBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4+20]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_414b71
          .byte 0x90
.L_414b10:

            cmp DWORD PTR [RSP],5
            jne .L_414b62

            mov RDX,QWORD PTR [RBX+216]
            mov ESI,R13D
            mov RDI,RBX
            call QWORD PTR [RBX+152]

            cmp R13D,EAX
            je .L_414b62

            mov R10,QWORD PTR [R14+152]
            mov DWORD PTR [RSP+44],0
            mov RCX,RBP
            mov RSI,QWORD PTR [R14+160]
            mov EDX,EAX
            mov RDI,R14
            mov R8,QWORD PTR [R10+136]
            call QWORD PTR [R10+360]

            test EAX,EAX
            jne .L_414be3
.L_414b62:

            add R12,20
            cmp QWORD PTR [RSP+8],R12
            je .L_414c1e
.L_414b71:

            mov RAX,QWORD PTR [RSP+16]
            mov R13D,DWORD PTR [R12]
            mov RCX,RBP
            mov DWORD PTR [RSP+44],0
            mov RSI,QWORD PTR [R14+160]
            mov RDI,R14
            mov RBX,QWORD PTR [RAX+112]
            mov RAX,QWORD PTR [R14+152]
            mov EDX,R13D
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_414b10

            mov ECX,DWORD PTR [RSP+44]
            cmp ECX,65535
            ja .L_414b10

            cmp BYTE PTR [R15+112],0
            jne .L_414b10

            mov EAX,ECX
            mov EDX,1
            shr EAX,5
            shl EDX,CL
            or DWORD PTR [R15+RAX*4+116],EDX
            jmp .L_414b10
.L_414be3:

            mov ECX,DWORD PTR [RSP+44]
            cmp ECX,65535
            ja .L_414b62

            cmp BYTE PTR [R15+112],0
            jne .L_414b62

            mov EAX,ECX
            mov EDX,1
            add R12,20
            shr EAX,5
            shl EDX,CL
            or DWORD PTR [R15+RAX*4+116],EDX
            cmp QWORD PTR [RSP+8],R12
            jne .L_414b71
.L_414c1e:

            mov RBX,R14
.L_414c21:

            lea R12,QWORD PTR [RSP+1168]
            xor ESI,ESI
            mov DWORD PTR [RSP+1168],1
            lea RDI,QWORD PTR [R12+8]
            call pthread_mutex_init@PLT

            cmp DWORD PTR [RSP+1168],-1
            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP+1216],XMM0
            movaps XMMWORD PTR [R12+64],XMM0
            movaps XMMWORD PTR [R12+80],XMM0
            movaps XMMWORD PTR [R12+96],XMM0
            je .L_414c97

            lea RDI,QWORD PTR [R12+120]
            mov ECX,1023
            xor EAX,EAX
            mov BYTE PTR [RSP+1280],0
            mov QWORD PTR [RSP+1284],0
            mov QWORD PTR [R12+8300],0

            rep stosq QWORD PTR [RDI]
.L_414c97:

            mov RAX,QWORD PTR [RSP+24]
            lea R14,QWORD PTR [RSP+9488]
            xor ESI,ESI
            mov RDX,R12
            mov RAX,QWORD PTR [RAX+192]
            lea RDI,QWORD PTR [RAX+40]
            mov QWORD PTR [RSP],RAX
            call .L_44b3f0

            lea RDI,QWORD PTR [R14+8]
            xor ESI,ESI
            mov DWORD PTR [RSP+9488],1
            call pthread_mutex_init@PLT

            cmp DWORD PTR [RSP+9488],-1
            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP+9536],XMM0
            movaps XMMWORD PTR [R14+64],XMM0
            movaps XMMWORD PTR [R14+80],XMM0
            movaps XMMWORD PTR [R14+96],XMM0
            movzx EAX,BYTE PTR [RSP+9600]
            je .L_414d2d

            lea RDI,QWORD PTR [R14+120]
            mov ECX,1023
            xor EAX,EAX
            mov BYTE PTR [RSP+9600],0
            mov QWORD PTR [RSP+9604],0
            mov QWORD PTR [R14+8300],0

            rep stosq QWORD PTR [RDI]
.L_414d2d:

            mov R13D,4294967295
            nop
            nop
            nop
            nop
            nop
.L_414d38:

            test AL,AL
            jne .L_414d5c

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414d48:

            mov EDX,DWORD PTR [R15+RAX*1]
            mov DWORD PTR [R14+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_414d48
.L_414d5c:

            mov DWORD PTR [RSP+44],R13D
            jmp .L_414d7b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414d68:

            mov RDI,QWORD PTR [RBX+128]
            mov ESI,DWORD PTR [RSP+44]
            mov RDX,R15
            call .L_436f00
.L_414d7b:

            mov RSI,RBP
            mov RDI,R12
            call .L_431990

            test EAX,EAX
            jne .L_414d68

            mov EAX,116
            jmp .L_414da4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414d98:

            add RAX,4
            cmp RAX,8308
            je .L_414db8
.L_414da4:

            mov ECX,DWORD PTR [R15+RAX*1]
            cmp DWORD PTR [R14+RAX*1],ECX
            je .L_414d98

            movzx EAX,BYTE PTR [RSP+9600]
            jmp .L_414d38
.L_414db8:

            mov RDI,QWORD PTR [RSP+24]
            call .L_40c2d0

            mov RAX,QWORD PTR [RSP+17800]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414de7

            add RSP,17816
.L_414ddc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414de7:

            call __stack_chk_fail@PLT
.L_414dec:
          .string "ot"
          .byte 0x90
.L_414df0:
          .byte 0x74
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x67
          .byte 0x69
          .byte 0x6c
          .byte 0x63
          .byte 0x73
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x6e
          .byte 0x72
          .byte 0x65
          .byte 0x6b
          .byte 0x61
          .byte 0x67
          .byte 0x69
          .byte 0x6c
          .byte 0x74
          .byte 0x6c
          .byte 0x63
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414e10:

            jo .L_414e7f
          .byte 0x63
          .byte 0x63
          .byte 0x6c
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6b
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x6b
          .byte 0x6d
          .byte 0x6b
          .byte 0x6d
          .byte 0x67
          .byte 0x69
          .byte 0x6c
          .byte 0x72
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_414e30:

            mov ECX,DWORD PTR [RDX+184]
            mov RDX,QWORD PTR [RDX+200]
            test ECX,ECX
            je .L_414e84

            sub ECX,1
            lea RAX,QWORD PTR [RDX+16]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RSI,QWORD PTR [RDX+RCX*4+36]
            jmp .L_414e61
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414e58:

            add RAX,20
            cmp RAX,RSI
            je .L_414e84
.L_414e61:

            movzx EDX,WORD PTR [RAX]
            mov ECX,EDX
            and ECX,31
            cmp CX,1
            jne .L_414e58

            test DH,1
            je .L_414e58

            xor DH,3
            add RAX,20
            mov WORD PTR [RAX-20],DX
.L_414e7f:

            cmp RAX,RSI
            jne .L_414e61
.L_414e84:

            ret 
.L_414e86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414e90:

            push R12
            push RBP
            mov ESI,48
            push RBX
.L_414e99:

            mov RBX,RDI
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_415078

            cmp DWORD PTR [RBX+4],1098015074
            movzx EDX,BYTE PTR [RAX+40]
            mov R10,QWORD PTR [RBX+64]
            mov EBX,DWORD PTR [RBX+56]
            sete CL
            and EDX,4294967294
            xor ESI,ESI
            or EDX,ECX
            mov R9,RBX
            mov BYTE PTR [RAX+40],DL
.L_414ed1:

            cmp RSI,R9
            jae .L_414f1e

            lea RCX,QWORD PTR [RSI+R9*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,1937007464
            ja .L_414f19

            jmp .L_41507d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414ef8:

            lea RDX,QWORD PTR [RSI+RCX*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,1937007464
            jbe .L_415088

            mov RCX,RDX
.L_414f19:

            cmp RSI,RCX
            jb .L_414ef8
.L_414f1e:

            xor EDX,EDX
.L_414f20:

            lea ECX,DWORD PTR [RDX+RDX*1]
            movzx EDX,BYTE PTR [RAX+40]
            lea RBP,QWORD PTR [RIP+.L_417a20]
            xor R11D,R11D
            mov R9D,1769172844
            and EDX,4294967293
            or EDX,ECX
            mov BYTE PTR [RAX+40],DL
            nop
.L_414f40:

            mov R12,RBX
            xor ESI,ESI
.L_414f45:

            cmp RSI,R12
            jae .L_414f87

            lea RCX,QWORD PTR [RSI+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp R9D,EDI
            jb .L_414f82

            jmp .L_414fd0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414f68:

            lea RDX,QWORD PTR [RSI+RCX*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            jbe .L_414fe0

            mov RCX,RDX
.L_414f82:

            cmp RSI,RCX
            jb .L_414f68
.L_414f87:

            xor EDX,EDX
.L_414f89:

            mov DWORD PTR [RAX+R11*1],EDX
            xor ECX,ECX
            test BYTE PTR [RAX+40],1
            je .L_414fa3

            lea EDX,DWORD PTR [R9-50]
            mov ECX,1
            cmp DL,1
            ja .L_415000
.L_414fa3:

            movzx EDX,BYTE PTR [RAX+40]
            add R11,4
            and EDX,4294967294
            or EDX,ECX
            cmp R11,28
            mov BYTE PTR [RAX+40],DL
            je .L_415078

            mov R9D,DWORD PTR [RBP+R11*1]
            jmp .L_414f40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414fd0:

            mov RDX,RCX
            mov RCX,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414fe0:

            cmp R9D,EDI
            jbe .L_414ff1

            lea RSI,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_414f45
.L_414ff1:

            mov EDX,DWORD PTR [R8+28]
            jmp .L_414f89
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415000:

            mov R12,RBX
            xor ESI,ESI
.L_415005:

            cmp RSI,R12
            jae .L_415047

            lea RCX,QWORD PTR [RSI+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            ja .L_415042

            jmp .L_41504e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415028:

            lea RDX,QWORD PTR [RCX+RSI*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            jbe .L_415058

            mov RCX,RDX
.L_415042:

            cmp RCX,RSI
            ja .L_415028
.L_415047:

            xor ECX,ECX
            jmp .L_414fa3
.L_41504e:

            mov RDX,RCX
            mov RCX,R12
            nop
            nop
            nop
            nop
.L_415058:

            cmp EDI,R9D
            jae .L_415066

            lea RSI,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_415005
.L_415066:

            movzx EDX,BYTE PTR [R8+32]
            mov ECX,EDX
            and ECX,1
            jmp .L_414fa3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415078:

            pop RBX
.L_415079:

            pop RBP
            pop R12
            ret 
.L_41507d:

            mov RDX,RCX
            mov RCX,R9
            nop
            nop
            nop
            nop
            nop
.L_415088:

            cmp EDI,1937007464
            je .L_41509c

            lea RSI,QWORD PTR [RDX+1]
            mov R9,RCX
            jmp .L_414ed1
.L_41509c:

            mov EDX,DWORD PTR [R8+28]
            test EDX,EDX
            setne DL
            jmp .L_414f20
.L_4150aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4150b0:

            push R13
            push R12
            lea RDX,QWORD PTR [RIP+.L_414e30]
            push RBP
            lea RBP,QWORD PTR [RDI+48]
            push RBX
            xor ESI,ESI
            mov R12,RDI
            lea RBX,QWORD PTR [RIP+.L_417a20]
            sub RSP,8
.L_4150d1:

            mov RDI,RBP
            call .L_44b450

            mov ECX,1
            mov EDX,1
            mov ESI,1937007464
            mov RDI,RBP
            lea R13,QWORD PTR [RBX+28]
            call .L_44b250

            lea RDX,QWORD PTR [RIP+.L_415350]
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            mov ECX,1
            mov EDX,1
            mov ESI,1667460464
            mov RDI,RBP
            call .L_44b250

            mov ECX,1
            mov EDX,1
            mov ESI,1819239276
            mov RDI,RBP
            call .L_44b250

            xor ESI,ESI
            xor EDX,EDX
            mov RDI,RBP
            call .L_44b450

            mov ESI,1769172844
            jmp .L_415152
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415150:

            mov ESI,DWORD PTR [RBX]
.L_415152:

            xor ECX,ECX
            cmp DWORD PTR [R12+12],1098015074
            jne .L_41516b

            lea EAX,DWORD PTR [RSI-50]
            xor ECX,ECX
            cmp AL,1
            seta CL
            add ECX,ECX
.L_41516b:

            mov EDX,1
            mov RDI,RBP
            add RBX,4
            call .L_44b250

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            cmp RBX,R13
            jne .L_415150

            mov ECX,3
            mov EDX,1
            mov ESI,1919707495
            mov RDI,RBP
            call .L_44b250

            cmp DWORD PTR [R12+12],1098015074
            je .L_4151f0
.L_4151af:

            mov RDI,RBP
            mov ECX,1
            mov EDX,1
            mov ESI,1667329140
            call .L_44b250

            add RSP,8
.L_4151ca:

            mov RDI,RBP
            mov ECX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            mov EDX,1
            mov ESI,1836279156
            jmp .L_44b250
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4151f0:

            lea RDX,QWORD PTR [RIP+.L_416540]
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            jmp .L_4151af
.L_415203:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415210:

            mov EAX,EDI
            shr EAX,12
            cmp EAX,30
            ja .L_415258

            lea RDX,QWORD PTR [RIP+.L_416f60]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415230:

            lea EAX,DWORD PTR [RDI-125184]
            cmp EAX,67
            ja .L_415258

            lea EAX,DWORD PTR [RDI-124038]
            lea RDX,QWORD PTR [RIP+.L_418020]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            nop
            nop
            nop
            nop
.L_415250:

            cmp EAX,8
            jne .L_41526c

            nop
            nop
            nop
.L_415258:

            mov EAX,6146
            mov ECX,ESI
            mov EDX,7
            shr EAX,CL
            and EAX,1
            cmovne EAX,EDX
.L_41526c:

            ret 
          .byte 0x66
          .byte 0x90
.L_415270:

            sub EDI,1536
            cmp EDI,738
            ja .L_415258

            lea RAX,QWORD PTR [RIP+.L_418020]
            movzx EAX,BYTE PTR [RAX+RDI*1]
            jmp .L_415250
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415290:

            lea EAX,DWORD PTR [RDI-6150]
            cmp EAX,164
            ja .L_415258

            lea EAX,DWORD PTR [RDI-5411]
            lea RDX,QWORD PTR [RIP+.L_418020]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_415250
.L_4152b0:

            lea EAX,DWORD PTR [RDI-8204]
            cmp EAX,93
            ja .L_415258

            lea EAX,DWORD PTR [RDI-7300]
            lea RDX,QWORD PTR [RIP+.L_418020]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_415250
          .byte 0x66
          .byte 0x90
.L_4152d0:

            lea EAX,DWORD PTR [RDI-43072]
            cmp EAX,51
            ja .L_415258

            lea EAX,DWORD PTR [RDI-42074]
            lea RDX,QWORD PTR [RIP+.L_418020]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_415250
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4152f8:

            lea EAX,DWORD PTR [RDI-68288]
            cmp EAX,47
            jbe .L_415330

            lea EAX,DWORD PTR [RDI-68480]
            cmp EAX,47
            ja .L_415258

            lea EAX,DWORD PTR [RDI-67382]
            lea RDX,QWORD PTR [RIP+.L_418020]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_415250
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415330:

            lea EAX,DWORD PTR [RDI-67238]
            lea RDX,QWORD PTR [RIP+.L_418020]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_415250
.L_415346:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415350:

            mov RAX,QWORD PTR [RDI+1064]
            test BYTE PTR [RAX+40],2
            je .L_4153b9

            mov ECX,DWORD PTR [RDX+184]
            mov RSI,QWORD PTR [RDX+200]
            test ECX,ECX
            je .L_4153b9

            sub ECX,1
            lea RAX,QWORD PTR [RSI+12]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RSI+RCX*4+32]
            nop
            nop
.L_415380:

            test BYTE PTR [RAX],64
            je .L_4153b0

            movzx ESI,BYTE PTR [RAX+2]
            mov EDI,8
            test SIL,16
            jne .L_4153a0

            and ESI,1
            lea EDI,DWORD PTR [RSI+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4153a0:

            mov BYTE PTR [RAX+6],DIL
            or DWORD PTR [RDX+132],16777216
            nop
            nop
.L_4153b0:

            add RAX,20
            cmp RCX,RAX
            jne .L_415380
.L_4153b9:

            ret 
.L_4153bb:

            nop
            nop
            nop
            nop
            nop
.L_4153c0:

            test BYTE PTR [RSI+135],1
            je .L_415700

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_4153de:

            mov EAX,DWORD PTR [RDX+136]
            mov QWORD PTR [RSP+40],RSI
            mov DWORD PTR [RSP+60],0
            mov DWORD PTR [RSP+32],0
            sar EAX,31
            or EAX,1
            mov DWORD PTR [RSP+48],EAX
.L_415403:

            mov RDI,QWORD PTR [RSP+40]
            mov R13D,DWORD PTR [RSP+60]
            mov EAX,DWORD PTR [RDI+184]
            mov R8,QWORD PTR [RDI+200]
            mov RBP,QWORD PTR [RDI+216]
            add R13D,EAX
            test EAX,EAX
            mov EBX,EAX
            mov DWORD PTR [RSP+76],EAX
            mov DWORD PTR [RSP+72],R13D
            je .L_4157bf

            lea RAX,QWORD PTR [RBP-20]
            mov R11,R15
            mov R12,RBP
            mov R15D,EBX
            mov RBX,R8
            mov QWORD PTR [RSP+64],RAX
            jmp .L_415467
          .byte 0x66
          .byte 0x90
.L_415450:

            cmp DWORD PTR [RSP+32],1
            je .L_4157df
.L_41545b:

            test R14D,R14D
            mov R15D,R14D
            je .L_4156c5
.L_415467:

            lea EAX,DWORD PTR [R15-1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov R14,RAX
            lea RAX,QWORD PTR [RDX*4]
            mov QWORD PTR [RSP+16],RAX
            add RAX,RBX
            mov QWORD PTR [RSP],RAX
            movzx EAX,BYTE PTR [RAX+18]
            sub EAX,8
            cmp EAX,1
            ja .L_415450

            mov RBP,QWORD PTR [RSP]
            xor EDI,EDI
            xor EAX,EAX
            mov QWORD PTR [RSP+24],R12
            mov DWORD PTR [RSP+36],R13D
            mov R13D,EAX
            mov DWORD PTR [RSP+56],R15D
            mov DWORD PTR [RSP+8],0
            mov R15,R11
            mov R12,RBP
            mov DWORD PTR [RSP+52],R14D
            mov EBP,EDI
            jmp .L_4154fb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4154c8:

            add R13D,EAX
            add EBP,1
            test R14D,R14D
            je .L_41552e
.L_4154d3:

            lea EAX,DWORD PTR [R14-1]
            mov RDX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            lea R12,QWORD PTR [RBX+RAX*1]
            movzx ECX,BYTE PTR [R12+18]
            sub ECX,8
            cmp ECX,1
            ja .L_415748

            mov R14D,EDX
.L_4154fb:

            mov RAX,QWORD PTR [R15+152]
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov EDX,DWORD PTR [R12]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            cmp BYTE PTR [R12+18],8
            jne .L_4154c8

            add DWORD PTR [RSP+8],EAX
            test R14D,R14D
            jne .L_4154d3
.L_41552e:

            mov R8D,R13D
            mov R11,R15
            mov R13D,DWORD PTR [RSP+36]
            mov R12,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+36],R14D
            mov R9D,EBP
            mov R14D,DWORD PTR [RSP+52]
            mov R15D,DWORD PTR [RSP+56]
            xor ESI,ESI
.L_415552:

            sub ESI,DWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RSP+48]
            imul ESI,EAX
            imul EAX,R8D
            test EAX,EAX
            mov ECX,EAX
            jle .L_415720

            cmp ESI,EAX
            jle .L_415720

            mov EAX,ESI
            cdq 
            idiv ECX
            mov EDX,ESI
            mov EDI,EAX
            mov DWORD PTR [RSP+24],EAX
            lea EAX,DWORD PTR [RAX-1]
            imul ECX,EDI
            sub EDX,ECX
            test EDX,EDX
            jle .L_415736
.L_415590:

            add EAX,2
            xor R10D,R10D
            imul EAX,DWORD PTR [RSP+48]
            imul EAX,R8D
            sub EAX,ESI
            test EAX,EAX
            jle .L_4155b3

            mov ECX,DWORD PTR [RSP+24]
            cdq 
            imul ECX,R9D
            idiv ECX
            mov R10D,EAX
.L_4155b3:

            mov EDX,DWORD PTR [RSP+32]
            test EDX,EDX
            je .L_4157c9

            mov EDI,DWORD PTR [RSP+36]
            cmp R15D,EDI
            jbe .L_4156b4

            mov RAX,QWORD PTR [RSP+16]
            sub R14D,EDI
            mov R15,QWORD PTR [RSP]
            mov DWORD PTR [RSP+16],R10D
            lea RBP,QWORD PTR [R12+RAX*1]
            add RAX,QWORD PTR [RSP+64]
            mov RDX,RAX
            lea RAX,QWORD PTR [R14+R14*4]
            xor R14D,R14D
            shl RAX,2
            sub RDX,RAX
            mov RAX,R12
            mov R12,RBX
            mov QWORD PTR [RSP+8],RDX
            mov RBX,RAX
            nop
            nop
            nop
.L_415608:

            mov RAX,QWORD PTR [R11+152]
            mov RSI,QWORD PTR [R11+160]
            mov RDI,R11
            mov QWORD PTR [RSP],R11
            mov EDX,DWORD PTR [R15]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            cmp BYTE PTR [R15+18],9
            mov R9D,1
            mov R11,QWORD PTR [RSP]
            je .L_415708
.L_415642:

            sub R14D,EAX
            xor ECX,ECX
            mov R10D,DWORD PTR [RSP+16]
            jmp .L_415656
          .byte 0x66
          .byte 0x90
.L_415650:

            sub R14D,EAX
            add R14D,R10D
.L_415656:

            lea EDX,DWORD PTR [R13-1]
            mov DWORD PTR [RBP+8],R14D
            add ECX,1
            movdqu XMM0,XMMWORD PTR [R15]
            cmp R9D,ECX
            mov R13,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            movups XMMWORD PTR [R12+RDX*4],XMM0
            mov EDI,DWORD PTR [R15+16]
            lea RSI,QWORD PTR [RDX*4]
            mov DWORD PTR [R12+RSI*1+16],EDI
            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RBX+RDX*4],XMM0
            mov EDX,DWORD PTR [RBP+16]
            mov DWORD PTR [RBX+RSI*1+16],EDX
            ja .L_415650
.L_415698:

            sub R15,20
            sub RBP,20
            cmp QWORD PTR [RSP+8],RBP
            jne .L_415608

            mov RAX,RBX
            mov RBX,R12
            mov R12,RAX
.L_4156b4:

            mov R14D,DWORD PTR [RSP+36]
            test R14D,R14D
            mov R15D,R14D
            jne .L_415467
.L_4156c5:

            mov R15,R11
.L_4156c8:

            mov EAX,DWORD PTR [RSP+32]
            test EAX,EAX
            je .L_415824

            test R13D,R13D
            jne .L_415858

            mov RAX,QWORD PTR [RSP+40]
            mov EDI,DWORD PTR [RSP+72]
            mov DWORD PTR [RAX+184],EDI
.L_4156ec:

            add RSP,88
.L_4156f0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
.L_415700:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415708:

            mov R9D,DWORD PTR [RSP+24]
            add R9D,1
            jne .L_415642

            jmp .L_415698
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415720:

            mov EDX,ESI
            xor EAX,EAX
            mov DWORD PTR [RSP+24],1
            sub EDX,ECX
            test EDX,EDX
            jg .L_415590
.L_415736:

            mov DWORD PTR [RSP+24],EAX
            xor R10D,R10D
            jmp .L_4155b3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415748:

            mov R9D,EBP
            mov R8D,R13D
            mov RBP,R12
            mov R13D,DWORD PTR [RSP+36]
            mov R11,R15
            mov DWORD PTR [RSP+36],R14D
            mov R12,QWORD PTR [RSP+24]
            mov R14D,DWORD PTR [RSP+52]
            xor ESI,ESI
            mov R15D,DWORD PTR [RSP+56]
            mov EDI,125893836
            nop
            nop
            nop
            nop
.L_415778:

            movzx ECX,WORD PTR [RBP+16]
            test CL,32
            je .L_415787

            test BYTE PTR [RBP+12],32
            je .L_415790
.L_415787:

            bt EDI,ECX
            jae .L_415552
.L_415790:

            add ESI,DWORD PTR [R12+RAX*1]
            test EDX,EDX
            je .L_415552

            lea EAX,DWORD PTR [RDX-1]
            mov RDX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            lea RBP,QWORD PTR [RBX+RAX*1]
            movzx ECX,BYTE PTR [RBP+18]
            sub ECX,8
            cmp ECX,1
            ja .L_415778

            jmp .L_415552
.L_4157bf:

            mov R13D,DWORD PTR [RSP+72]
            jmp .L_4156c8
.L_4157c9:

            mov EBP,DWORD PTR [RSP+24]
            mov R14D,DWORD PTR [RSP+36]
            imul EBP,R9D
            add DWORD PTR [RSP+60],EBP
            jmp .L_41545b
.L_4157df:

            mov RDI,QWORD PTR [RSP]
            lea EAX,DWORD PTR [R13-1]
            mov R13,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDI]
            lea RCX,QWORD PTR [RAX*4]
            movups XMMWORD PTR [RBX+RAX*4],XMM0
            mov ESI,DWORD PTR [RDI+16]
            mov DWORD PTR [RBX+RCX*1+16],ESI
            movdqu XMM0,XMMWORD PTR [R12+RDX*4]
            movups XMMWORD PTR [R12+RAX*4],XMM0
            mov RAX,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [R12+RAX*1+16]
            mov DWORD PTR [R12+RCX*1+16],EAX
            jmp .L_41545b
.L_415824:

            mov ESI,DWORD PTR [RSP+76]
            add ESI,DWORD PTR [RSP+60]
            je .L_41584b

            mov RAX,QWORD PTR [RSP+40]
            cmp ESI,DWORD PTR [RAX+192]
            jb .L_41584b

            mov RDI,RAX
            call .L_402420

            test AL,AL
            je .L_4156ec
.L_41584b:

            mov DWORD PTR [RSP+32],1
            jmp .L_415403
.L_415858:

            lea RCX,QWORD PTR [RIP+.L_417820]
            lea RSI,QWORD PTR [RIP+.L_4184de]
            lea RDI,QWORD PTR [RIP+.L_4184fc]
            mov EDX,591
            call __assert_fail@PLT
.L_415877:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415880:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_415889:

            mov EAX,DWORD PTR [RDI]
            test EAX,EAX
            je .L_4158cb

            mov EBX,1
            jmp .L_4158ab
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4158a0:

            mov EAX,EBX
            add RBX,1
            cmp DWORD PTR [RBP],EAX
            jbe .L_4158cb
.L_4158ab:

            mov RDI,QWORD PTR [RBP+RBX*8+24]
            test RDI,RDI
            je .L_4158a0

            cmp BYTE PTR [RBP+4],0
            je .L_4158a0

            call free@PLT

            mov EAX,EBX
            add RBX,1
            cmp DWORD PTR [RBP],EAX
            ja .L_4158ab
.L_4158cb:

            add RSP,8
.L_4158cf:

            mov RDI,RBP
            pop RBX
            pop RBP
            jmp free@PLT
.L_4158d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4158e0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_4158fe

            lea RAX,QWORD PTR [RIP+.L_417880]
            cmp RDI,RAX
            je .L_4158fe

            call .L_415880
.L_4158fe:

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_415907:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415910:

            push R15
            push R14
            lea RDX,QWORD PTR [RIP+.L_417a80]
            push R13
            push R12
            mov R15D,1569
            push RBP
            push RBX
            mov RBP,RDI
            xor R13D,R13D
            sub RSP,1720
.L_415934:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1704],RAX
            xor EAX,EAX
            mov EAX,ESI
            lea R12,QWORD PTR [RSP+48]
            lea RBX,QWORD PTR [RDX+RAX*2]
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+480]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
.L_415978:

            movzx R14D,WORD PTR [RBX+R15*8-12552]
            test R14D,R14D
            je .L_415a00

            xor EDX,EDX
            mov RCX,R12
            mov ESI,R15D
            mov RDI,RBP
            call .L_409730

            test EAX,EAX
            je .L_415a00

            mov RCX,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov ESI,R14D
            mov RDI,RBP
            call .L_409730

            test EAX,EAX
            je .L_415a00

            mov EAX,DWORD PTR [RSP+48]
            mov EDX,DWORD PTR [RSP+64]
            cmp EAX,EDX
            sete SIL
            cmp EAX,65535
            seta CL
            or SIL,CL
            jne .L_415a00

            cmp EDX,65535
            ja .L_415a00

            mov ECX,R13D
            add R13D,1
            lea RDI,QWORD PTR [RCX+RCX*1]
            mov RCX,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RCX+RDI*1]
            mov BYTE PTR [RSI],AH
            mov BYTE PTR [RSI+1],AL
            mov RAX,QWORD PTR [RSP+24]
            add RAX,RDI
            mov BYTE PTR [RAX],DH
            mov BYTE PTR [RAX+1],DL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415a00:

            add R15,1
            cmp R15,1748
            jne .L_415978

            test R13D,R13D
            je .L_415c8c

            cmp R13D,1
            lea RBP,QWORD PTR [RSP+112]
            jbe .L_415b1d

            lea EAX,DWORD PTR [R13-2]
            lea R14,QWORD PTR [RBP+1]
            lea RBX,QWORD PTR [RSP+480]
            mov R12D,1
            add RAX,2
            mov QWORD PTR [RSP+40],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415a50:

            movzx EDI,BYTE PTR [R14+1]
            movzx EAX,BYTE PTR [R14+2]
            lea R8,QWORD PTR [R12+R12*1]
            mov R10D,R12D
            mov RDX,R14
            mov ESI,R12D
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            nop
.L_415a70:

            movzx EAX,BYTE PTR [RDX-1]
            movzx R11D,BYTE PTR [RDX]
            lea R9D,DWORD PTR [RSI-1]
            shl EAX,8
            add EAX,R11D
            movzx EAX,AX
            sub EAX,EDI
            test EAX,EAX
            jle .L_415cc0

            sub RDX,2
            test R9D,R9D
            mov ESI,R9D
            jne .L_415a70

            mov R15,RBX
            mov R9D,2
            mov R10,RBP
.L_415aa7:

            movzx R11D,WORD PTR [R14+1]
            lea RDI,QWORD PTR [RBP+R9*1]
            mov RDX,R8
            mov RSI,R10
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R10
            mov DWORD PTR [RSP+36],R11D
            call memmove@PLT

            mov R10,QWORD PTR [RSP+8]
            mov R11D,DWORD PTR [RSP+36]
            mov RSI,R15
            mov R9,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+16]
            mov WORD PTR [R10],R11W
            movzx R10D,WORD PTR [RBX+R12*2]
            lea RDI,QWORD PTR [RBX+R9*1]
            mov RDX,R8
            mov DWORD PTR [RSP+8],R10D
            call memmove@PLT

            mov R10D,DWORD PTR [RSP+8]
            mov WORD PTR [R15],R10W
.L_415b0a:

            add R12,1
            add R14,2
            cmp QWORD PTR [RSP+40],R12
            jne .L_415a50
.L_415b1d:

            lea R8,QWORD PTR [RSP+848]
            movzx EBX,BYTE PTR [RSP+480]
            movzx EDX,BYTE PTR [RSP+113]
            xor ECX,ECX
            xor ESI,ESI
            xor EDI,EDI
            lea RAX,QWORD PTR [R8+844]
            mov DWORD PTR [RSP+848],0
            mov WORD PTR [RSP+852],CX
            mov WORD PTR [RSP+854],SI
            mov QWORD PTR [RSP+56],RBP
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [R8+10]
            shl EBX,8
            mov DWORD PTR [RSP+48],R13D
            mov QWORD PTR [RSP+72],R8
            mov QWORD PTR [RSP+88],RAX
            movzx EAX,BYTE PTR [RSP+481]
            mov BYTE PTR [RSP+96],0
            mov DWORD PTR [RSP+64],0
            mov BYTE PTR [RSP+849],1
            mov BYTE PTR [RSP+851],8
            mov BYTE PTR [RSP+853],1
            mov BYTE PTR [RSP+855],8
            add EBX,EAX
            movzx EAX,BYTE PTR [RSP+112]
            mov WORD PTR [RSP+856],DI
            movzx EBX,BX
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            sub EBX,EAX
            cmp R13D,1
            jbe .L_415cea

            lea R9D,DWORD PTR [R13-2]
            mov EDX,1
            lea RDI,QWORD PTR [RSP+480]
            add R9,2
            jmp .L_415bfd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415bf0:

            add RDX,1
            cmp RDX,R9
            je .L_415cea
.L_415bfd:

            xor EAX,EAX
            cmp R13D,EDX
            jbe .L_415c2b

            movzx EAX,BYTE PTR [RDI+RDX*2]
            movzx ESI,BYTE PTR [RDI+RDX*2+1]
            movzx R10D,BYTE PTR [RBP+RDX*2+1]
            shl EAX,8
            add EAX,ESI
            movzx ESI,BYTE PTR [RBP+RDX*2]
            movzx EAX,AX
            shl ESI,8
            add ESI,R10D
            movzx ESI,SI
            sub EAX,ESI
.L_415c2b:

            cmp EAX,EBX
            je .L_415bf0

            xor EDX,EDX
            movzx ECX,R13B
            lea RAX,QWORD PTR [R8+14]
            mov WORD PTR [RSP+858],DX
            mov EDX,R13D
            mov BYTE PTR [RSP+857],2
            shr DX,8
            mov QWORD PTR [RSP+88],RAX
            mov BYTE PTR [RSP+861],R13B
            mov BYTE PTR [RSP+860],DL
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea RDX,QWORD PTR [R8+RDX*2+14]
            cmp RDX,RAX
            jb .L_415e94

            sub RDX,RAX
            mov EDX,EDX
            cmp RDX,830
            jle .L_415d77
.L_415c8c:

            xor ECX,ECX
.L_415c8e:

            mov RBX,QWORD PTR [RSP+1704]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,RCX
            jne .L_415eb3

            add RSP,1720
.L_415caf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415cc0:

            cmp R10D,ESI
            je .L_415b0a

            mov R15D,ESI
            lea R9D,DWORD PTR [RSI+1]
            sub R10D,ESI
            add R15,R15
            lea R8,QWORD PTR [R10+R10*1]
            add R9,R9
            lea R10,QWORD PTR [RBP+R15*1]
            add R15,RBX
            jmp .L_415aa7
.L_415cea:

            lea RDI,QWORD PTR [R8+14]
            lea RDX,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+64]
            mov ECX,R13D
            mov DWORD PTR [RSP+858],0
            mov BYTE PTR [RSP+857],1
            mov QWORD PTR [RSP+88],RDI
            mov BYTE PTR [RSP+859],6
            call .L_418610

            test AL,AL
            je .L_415c8c

            mov BYTE PTR [RSP+860],BH
            mov BYTE PTR [RSP+861],BL
.L_415d36:

            cmp BYTE PTR [RSP+96],0
            jne .L_415e75

            mov RBP,QWORD PTR [RSP+72]
            mov RBX,QWORD PTR [RSP+88]
            sub EBX,EBP
            mov RDI,RBX
            call malloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_415c8e

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,RAX
            call memcpy@PLT

            mov RCX,RAX
            jmp .L_415c8e
.L_415d77:

            cmp EDX,8
            jae .L_415e12

            test DL,4
            jne .L_415e60

            test EDX,EDX
            jne .L_415e3c
.L_415d91:

            lea RDI,QWORD PTR [R8+RDX*1+14]
            lea ESI,DWORD PTR [R13-1]
            xor EAX,EAX
            mov QWORD PTR [RSP+88],RDI
            add RSI,1
            jmp .L_415dbe
.L_415da7:

            xor EDX,EDX
            xor ECX,ECX
.L_415dab:

            mov BYTE PTR [R8+RAX*2+14],CL
            mov BYTE PTR [R8+RAX*2+15],DL
            add RAX,1
            cmp RAX,RSI
            je .L_415dd5
.L_415dbe:

            cmp R13D,EAX
            jbe .L_415da7

            movzx ECX,BYTE PTR [RSP+RAX*2+480]
            movzx EDX,BYTE PTR [RSP+RAX*2+481]
            jmp .L_415dab
.L_415dd5:

            add R8,8
            mov RAX,RDI
            lea RSI,QWORD PTR [RSP+64]
            sub RAX,R8
            mov ECX,R13D
            mov EDX,EAX
            mov BYTE PTR [RSP+859],AL
            shr DX,8
            mov BYTE PTR [RSP+858],DL
            lea RDX,QWORD PTR [RSP+48]
            call .L_418610

            test AL,AL
            je .L_415c8c

            jmp .L_415d36
.L_415e12:

            lea RDI,QWORD PTR [R8+16]
            mov QWORD PTR [R8+14],0
            mov QWORD PTR [RAX+RDX*1-8],0
            sub RAX,RDI
            mov RCX,RAX
            xor EAX,EAX
            add ECX,EDX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            jmp .L_415d91
.L_415e3c:

            test DL,2
            mov BYTE PTR [R8+14],0
            je .L_415d91

            mov WORD PTR [RAX+RDX*1-2],0
            jmp .L_415d91
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415e60:

            mov DWORD PTR [R8+14],0
            mov DWORD PTR [RAX+RDX*1-4],0
            jmp .L_415d91
.L_415e75:

            lea RCX,QWORD PTR [RIP+.L_417540]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418503]
            mov EDX,434
            call __assert_fail@PLT
.L_415e94:

            lea RCX,QWORD PTR [RIP+.L_4175a0]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_4185a0]
            mov EDX,491
            call __assert_fail@PLT
.L_415eb3:

            call __stack_chk_fail@PLT
.L_415eb8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415ec0:

            push R15
            push R14
            xor EDX,EDX
            push R13
            push R12
            mov ESI,65247
            push RBP
            push RBX
            mov R14,RDI
            xor EBP,EBP
            sub RSP,536
.L_415edd:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+128]
            mov RCX,RAX
            mov QWORD PTR [RSP],RAX
            call .L_409730

            test EAX,EAX
            je .L_415f38

            mov EAX,DWORD PTR [RSP+128]
            mov DWORD PTR [RSP+184],0
            mov EBP,1
            mov DWORD PTR [RSP+176],0
            mov BYTE PTR [RSP+172],AH
            mov BYTE PTR [RSP+173],AL
.L_415f38:

            mov RCX,QWORD PTR [RSP]
            xor EDX,EDX
            mov ESI,65248
            mov RDI,R14
            call .L_409730

            test EAX,EAX
            je .L_4162a8

            mov EAX,EBP
            mov ECX,DWORD PTR [RSP+128]
            add EBP,1
            lea RDX,QWORD PTR [RSP+RAX*2+172]
            mov DWORD PTR [RSP+RAX*4+184],0
            mov DWORD PTR [RSP+RAX*4+176],1
            mov EAX,1
            mov BYTE PTR [RDX],CH
            mov BYTE PTR [RDX+1],CL
            jmp .L_415fd1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415f90:

            movzx EAX,WORD PTR [RSP+174]
            movzx EDX,WORD PTR [RSP+172]
            mov WORD PTR [RSP+172],AX
            mov WORD PTR [RSP+174],DX
            mov EAX,DWORD PTR [RSP+180]
            mov EDX,DWORD PTR [RSP+176]
            mov DWORD PTR [RSP+176],EAX
            mov DWORD PTR [RSP+180],EDX
            mov EAX,2
.L_415fd1:

            cmp EAX,EBP
            jae .L_416010

            movzx EAX,BYTE PTR [RSP+172]
            movzx EDX,BYTE PTR [RSP+173]
            movzx ECX,BYTE PTR [RSP+175]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RSP+174]
            movzx EAX,AX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            sub EAX,EDX
            test EAX,EAX
            jg .L_415f90

            mov EBP,2
.L_416010:

            lea RAX,QWORD PTR [RSP+176]
            xor R12D,R12D
            xor R15D,R15D
            mov DWORD PTR [RSP+20],EBP
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+40],RAX
.L_41604b:

            mov RAX,QWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RAX+R12*4]
            lea RBX,QWORD PTR [RAX+RAX*8]
            lea RAX,QWORD PTR [RIP+.L_417a40]
            add RBX,RBX
            lea RBP,QWORD PTR [RAX+RBX*1+2]
            add RAX,18
            add RBX,RAX
.L_41606e:

            movzx ESI,WORD PTR [RBP]
            test ESI,ESI
            je .L_4160f0

            mov RCX,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov RDI,R14
            movzx R13D,WORD PTR [RBP+2]
            call .L_409730

            test EAX,EAX
            je .L_4160f0

            mov RCX,QWORD PTR [RSP]
            xor EDX,EDX
            movzx ESI,R13W
            mov RDI,R14
            call .L_409730

            test EAX,EAX
            je .L_4160f0

            mov EDX,R15D
            mov RAX,QWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+128]
            lea RDI,QWORD PTR [RDX+RDX*1]
            mov DWORD PTR [RSP+RDX*4+224],2
            add DWORD PTR [RSP+R12*4+184],1
            mov EDX,DWORD PTR [RSP+112]
            add R15D,1
            lea RCX,QWORD PTR [RAX+RDI*1]
            mov EAX,ESI
            mov BYTE PTR [RCX],AH
            mov RAX,QWORD PTR [RSP+40]
            mov BYTE PTR [RCX+1],SIL
            add RAX,RDI
            mov BYTE PTR [RAX],DH
            mov BYTE PTR [RAX+1],DL
            nop
            nop
            nop
            nop
.L_4160f0:

            add RBP,4
            cmp RBX,RBP
            jne .L_41606e

            add R12,1
            cmp DWORD PTR [RSP+20],R12D
            ja .L_41604b

            test R15D,R15D
            mov EBP,DWORD PTR [RSP+20]
            je .L_4162b0

            lea RAX,QWORD PTR [RSP+172]
            lea RDX,QWORD PTR [RSP+512]
            xor ECX,ECX
            mov DWORD PTR [RSP+256],0
            mov WORD PTR [RSP+264],CX
            lea RDI,QWORD PTR [RSP+264]
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RSP+184]
            mov QWORD PTR [RSP+144],RDX
            xor EDX,EDX
            mov DWORD PTR [RSP+48],EBP
            mov DWORD PTR [RSP+64],EBP
            mov QWORD PTR [RSP+72],RAX
            lea RAX,QWORD PTR [RSP+192]
            mov WORD PTR [RSP+262],DX
            mov DWORD PTR [RSP+80],R15D
            mov DWORD PTR [RSP+96],R15D
            lea RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov DWORD PTR [RSP+112],R15D
            mov BYTE PTR [RSP+160],0
            mov DWORD PTR [RSP+128],0
            lea RDX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+104],RAX
            lea RAX,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+257],4
            mov BYTE PTR [RSP+259],8
            mov BYTE PTR [RSP+263],8
            mov R8D,EBP
            mov QWORD PTR [RSP+120],RAX
            lea RAX,QWORD PTR [RSP+256]
            mov BYTE PTR [RSP+265],1
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov WORD PTR [RSP+260],AX
            lea RAX,QWORD PTR [RSP+266]
            mov BYTE PTR [RSP+261],1
            mov QWORD PTR [RSP+152],RAX
            lea RAX,QWORD PTR [RSP+112]
            push RAX
.L_416220:

            lea RAX,QWORD PTR [RSP+104]
            push RAX
            mov RSI,QWORD PTR [RSP+16]
            lea R9,QWORD PTR [RSP+96]
            call .L_418c80

            test AL,AL
            pop RSI
            pop RDI
.L_416239:

            je .L_4162b0

            cmp BYTE PTR [RSP+160],0
            jne .L_4162b4

            mov RBP,QWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+152]
            sub EBX,EBP
            mov RDI,RBX
            call malloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_41627c

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,RAX
            call memcpy@PLT

            mov RCX,RAX
.L_41627c:

            mov RDI,QWORD PTR [RSP+520]
            xor RDI,QWORD PTR FS:[40]
            mov RAX,RCX
            jne .L_4162d3

            add RSP,536
.L_416299:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
.L_4162a8:

            test EBP,EBP
            jne .L_416010
.L_4162b0:

            xor ECX,ECX
            jmp .L_41627c
.L_4162b4:

            lea RCX,QWORD PTR [RIP+.L_417540]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418503]
            mov EDX,434
            call __assert_fail@PLT
.L_4162d3:

            call __stack_chk_fail@PLT
.L_4162d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4162e0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,1
            sub RSP,24
.L_4162f9:

            mov R12D,DWORD PTR [RSI+184]
            mov R14,QWORD PTR [RSI+200]
            mov DWORD PTR [RSP+12],EDX
            mov EDX,DWORD PTR [RSI+268]
            test EDX,EDX
            je .L_4164d3
.L_416319:

            mov RAX,QWORD PTR [R15+112]
            mov ESI,DWORD PTR [R15+RBX*4+224]
            mov RDX,QWORD PTR [RAX+208]
            mov RDI,RAX
            call QWORD PTR [RAX+144]

            mov EDI,DWORD PTR [R15+RBX*4+224]
            mov ESI,EAX
            call .L_415210

            cmp EAX,7
            je .L_4164c0

            lea RDX,QWORD PTR [RIP+.L_417960]
            mov EAX,EAX
            movzx EBX,WORD PTR [RDX+RAX*4+2]
.L_41635b:

            xor R9D,R9D
            test R12D,R12D
            mov R8,R14
            mov EBP,4294967295
            lea R10,QWORD PTR [RIP+.L_417960]
            jne .L_4163c3

            jmp .L_4163ea
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416378:

            lea RDX,QWORD PTR [RBX+RBX*2]
            mov EAX,EAX
            lea RDX,QWORD PTR [RAX+RDX*2]
            movzx EDX,BYTE PTR [R10+RDX*4]
            cmp DL,7
            je .L_41639b

            cmp EBP,-1
            je .L_41639b

            lea RSI,QWORD PTR [RBP+RBP*4]
            mov BYTE PTR [R14+RSI*4+18],DL
.L_41639b:

            lea RDX,QWORD PTR [RBX+RBX*2]
            mov EBP,R9D
            add R9D,1
            add R8,20
            lea RAX,QWORD PTR [RAX+RDX*2]
            movzx EDX,BYTE PTR [R10+RAX*4+1]
            movzx EBX,WORD PTR [R10+RAX*4+2]
            mov BYTE PTR [R8-2],DL
            cmp R12D,R9D
            je .L_4163ea
.L_4163c3:

            movzx ESI,WORD PTR [R8+16]
            mov EDI,DWORD PTR [R8]
            and ESI,31
            call .L_415210

            cmp EAX,7
            jne .L_416378

            add R9D,1
            mov BYTE PTR [R8+18],7
            add R8,20
            cmp R12D,R9D
            jne .L_4163c3
.L_4163ea:

            mov EAX,DWORD PTR [R15+272]
            mov R12D,1
            test EAX,EAX
            je .L_416453
.L_4163fb:

            mov RAX,QWORD PTR [R15+112]
            mov ESI,DWORD PTR [R15+R12*4+244]
            mov RDX,QWORD PTR [RAX+208]
            mov RDI,RAX
            call QWORD PTR [RAX+144]

            mov EDI,DWORD PTR [R15+R12*4+244]
            mov ESI,EAX
            call .L_415210

            cmp EAX,7
            je .L_4164a8

            lea RDX,QWORD PTR [RBX+RBX*2]
            mov EAX,EAX
            lea RDX,QWORD PTR [RAX+RDX*2]
            lea RAX,QWORD PTR [RIP+.L_417960]
            movzx EAX,BYTE PTR [RAX+RDX*4]
            cmp AL,7
            je .L_416453

            cmp EBP,-1
            je .L_416453

            lea RDX,QWORD PTR [RBP+RBP*4]
            mov BYTE PTR [R14+RDX*4+18],AL
.L_416453:

            cmp DWORD PTR [RSP+12],1299148391
            mov EDX,DWORD PTR [R15+184]
            mov RSI,QWORD PTR [R15+200]
            je .L_4164e0
.L_41646b:

            test EDX,EDX
            je .L_416494

            sub EDX,1
            lea RAX,QWORD PTR [RSI+4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RSI+RDX*4+24]
            nop
.L_416480:

            movzx EDX,BYTE PTR [RAX+14]
            mov EDX,DWORD PTR [R13+RDX*4]
            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RCX,RAX
            jne .L_416480
.L_416494:

            add RSP,24
.L_416498:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4164a8:

            mov EAX,R12D
            add R12,1
            cmp DWORD PTR [R15+272],EAX
            ja .L_4163fb

            jmp .L_416453
          .byte 0x66
          .byte 0x90
.L_4164c0:

            mov EAX,EBX
            add RBX,1
            cmp DWORD PTR [R15+268],EAX
            ja .L_416319
.L_4164d3:

            xor EBX,EBX
            jmp .L_41635b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4164e0:

            cmp EDX,1
            jbe .L_41646b

            sub EDX,2
            lea RAX,QWORD PTR [RSI+18]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [RSI+RDX*4+38]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416500:

            mov ECX,DWORD PTR [RAX+2]
            lea EDX,DWORD PTR [RCX-6155]
            cmp EDX,2
            ja .L_416514

            movzx EDX,BYTE PTR [RAX]
            mov BYTE PTR [RAX+20],DL
.L_416514:

            add RAX,20
            cmp RSI,RAX
            jne .L_416500

            mov EDX,DWORD PTR [R15+184]
            mov RSI,QWORD PTR [R15+200]
            jmp .L_41646b
.L_416530:

            mov EDX,DWORD PTR [RDI+4]
            mov RDI,QWORD PTR [RDI+1064]
            jmp .L_4162e0
.L_41653f:

            nop
.L_416540:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,328
.L_416551:

            mov R15,QWORD PTR [RDI+1064]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+312],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],RSI
            test BYTE PTR [R15+40],1
            je .L_416709

            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+24],RDX
.L_416585:

            mfence 
            mov R12,QWORD PTR [R15+32]
            test R12,R12
            je .L_416738
.L_416595:

            mov R13,R12
            mov R12,QWORD PTR [RSP+24]
            mov ECX,DWORD PTR [R13]
.L_4165a1:

            mov RAX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [R12+144]
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],3
            mov DWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+104],RAX
            mov RAX,QWORD PTR [RAX+128]
            mov DWORD PTR [RSP+128],EDX
            mov DWORD PTR [RSP+132],1
            mov BYTE PTR [RSP+136],1
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+112],RAX
            mov RAX,QWORD PTR [RAX+160]
            mov RDX,QWORD PTR [RAX+24]
            mov QWORD PTR [RSP+160],RDX
            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            mov QWORD PTR [RSP+208],0
            movaps XMMWORD PTR [RSP+192],XMM0
            mov QWORD PTR [RSP+216],0
            mov DWORD PTR [RSP+200],4294967295
            shl EAX,8
            add AX,DX
            mov EAX,4294967295
            setne BYTE PTR [RSP+168]
            test ECX,ECX
            mov BYTE PTR [RSP+204],0
            movaps XMMWORD PTR [RSP+256],XMM0
            mov QWORD PTR [RSP+272],0
            mov DWORD PTR [RSP+264],4294967295
            movaps XMMWORD PTR [RSP+176],XMM0
            movaps XMMWORD PTR [RSP+224],XMM0
            movaps XMMWORD PTR [RSP+240],XMM0
            movaps XMMWORD PTR [RSP+288],XMM0
            mov BYTE PTR [RSP+268],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+304],RAX
            je .L_416709

            lea RBP,QWORD PTR [R13+72]
            lea R12,QWORD PTR [RSP+96]
            mov EBX,1
            nop
            nop
            nop
            nop
.L_4166d8:

            mov RSI,QWORD PTR [R13+RBX*8+24]
            test RSI,RSI
            je .L_4166f9

            mov EAX,DWORD PTR [R13+RBX*4+4]
            mov RDX,RBP
            mov RDI,R12
            mov DWORD PTR [RSP+132],EAX
            call .L_438c10
.L_4166f9:

            mov EAX,EBX
            add RBP,24
            add RBX,1
            cmp DWORD PTR [R13],EAX
            ja .L_4166d8
.L_416709:

            mov RAX,QWORD PTR [RSP+312]
            xor RAX,QWORD PTR FS:[40]
            jne .L_416f5a

            add RSP,328
.L_416727:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416738:

            mov ESI,192
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_41694a

            mov DWORD PTR [RAX],0
            mov BYTE PTR [RAX+4],0
            mov R9D,1768843636
            mov QWORD PTR [RSP+16],0
            mov DWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+88],R15
.L_41677b:

            mov RAX,QWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+16]
            xor ECX,ECX
            mov R11D,DWORD PTR [RAX+56]
            mov R10,QWORD PTR [RAX+64]
.L_41678e:

            cmp RCX,R11
            jae .L_4167cf

            lea RDX,QWORD PTR [RCX+R11*1]
            shr RDX,1
            lea RAX,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RAX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            ja .L_4167ca

            jmp .L_416808
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4167b0:

            lea RAX,QWORD PTR [RCX+RDX*1]
            shr RAX,1
            lea RDI,QWORD PTR [RAX+RAX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            jbe .L_416810

            mov RDX,RAX
.L_4167ca:

            cmp RCX,RDX
            jb .L_4167b0
.L_4167cf:

            mov EAX,DWORD PTR [RSP+64]
            mov RBX,QWORD PTR [RSP+48]
            mov DWORD PTR [RBX+RAX*4+8],0
.L_4167e0:

            add QWORD PTR [RSP+16],1
            mov RBX,QWORD PTR [RSP+16]
            cmp RBX,5
            je .L_416f10

            lea RAX,QWORD PTR [RIP+.L_417940]
            mov R9D,DWORD PTR [RAX+RBX*4]
            jmp .L_41677b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416808:

            mov RAX,RDX
            mov RDX,R11
            nop
            nop
.L_416810:

            cmp EDI,R9D
            jae .L_416821

            lea RCX,QWORD PTR [RAX+1]
            mov R11,RDX
            jmp .L_41678e
.L_416821:

            mov EAX,DWORD PTR [R8+28]
            mov EBX,DWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+48]
            test EAX,EAX
            mov DWORD PTR [RDI+RBX*4+8],EAX
            je .L_4167e0

            cmp QWORD PTR [RSP+16],4
            mov RDI,QWORD PTR [RSP+8]
            jne .L_416b78

            call .L_415ec0

            mov R14,RAX
.L_41684f:

            mov RSI,QWORD PTR [RSP+48]
            test R14,R14
            mov QWORD PTR [RSI+RBX*8+32],R14
            je .L_4167e0

            lea RAX,QWORD PTR [RBX+RBX*2]
            mov DWORD PTR [RSP+104],0
            lea R12,QWORD PTR [RSI+RAX*8+72]
            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12+16],0
            mov QWORD PTR [RSP+96],R12
            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R14+5]
            mov WORD PTR [RSP+70],AX
            movzx EAX,BYTE PTR [R14+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_416f50

            lea ECX,DWORD PTR [RSI-1]
            xor R15D,R15D
            mov QWORD PTR [RSP+40],R14
            lea RBX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+72],RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4168e0:

            shl EAX,8
            lea RCX,QWORD PTR [RIP+.L_658520]
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_4168fe

            mov RAX,QWORD PTR [RSP+40]
            lea RCX,QWORD PTR [RAX+R15*2+6]
.L_4168fe:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_658520]
            movzx EBX,WORD PTR [RSP+70]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,QWORD PTR [RSP+40]
            test DX,DX
            cmove RAX,RDI
            cmp BX,8
            ja .L_416bb0

            movzx EDX,BX
            lea RBX,QWORD PTR [RIP+.L_416fdc]
            movsxd RDX,DWORD PTR [RBX+RDX*4]
            add RDX,RBX
            jmp RDX
.L_416942:

            mov RDI,R12
            call free@PLT
.L_41694a:

            lea RDX,QWORD PTR [RIP+.L_417880]
            xor EAX,EAX
            lock cmpxchg QWORD PTR [R15+32],RDX
            jne .L_416585

            mov R12,QWORD PTR [RSP+24]
            xor ECX,ECX
            mov R13,RDX
            jmp .L_4165a1
          .byte 0x66
          .byte 0x90
.L_416970:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
.L_41697c:

            cmp DX,1
            jne .L_416bb0
.L_416986:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
.L_416991:

            add EDX,ECX
            lea RBX,QWORD PTR [RIP+.L_658520]
            movzx ECX,DX
            add RAX,RCX
            test DX,DX
            cmove RAX,RBX
.L_4169a7:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_416e60

            cmp DX,2
            jne .L_416e3d

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EDI,SI
            je .L_416e3d

            mov QWORD PTR [RSP+80],R15
            lea R9,QWORD PTR [RAX+4]
            xor R11D,R11D
            mov EBX,1
            mov R15D,EDI
            jmp .L_416ab5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416a00:

            xor EBP,EBP
            xor EDI,EDI
            xor EDX,EDX
            mov R13D,4294967295
            xor ECX,ECX
            xor R10D,R10D
            mov R8D,1
            xor ESI,ESI
.L_416a19:

            mov R14,RBX
            shl R14,CL
            mov ECX,R10D
            mov R10D,2
            and ECX,63
            shl R10,CL
            sub R10,R14
            mov QWORD PTR [RSP+56],R10
            mov R10,RBX
            shl R10,CL
            cmp R14,R10
            mov R10,QWORD PTR [RSP+56]
            seta CL
            movzx ECX,CL
            sub R10,RCX
            or QWORD PTR [R12],R10
            cmp R13D,62
            jbe .L_416b2a
.L_416a5b:

            cmp EBP,62
            mov QWORD PTR [R12+8],-1
            ja .L_416b66
.L_416a6d:

            mov ECX,EDI
            mov RSI,RBX
            mov RDI,RBX
            shl RSI,CL
            mov ECX,EDX
            mov EDX,2
            and ECX,63
            shl RDX,CL
            shl RDI,CL
            sub RDX,RSI
            cmp RSI,RDI
            seta CL
            movzx ECX,CL
            sub RDX,RCX
            or QWORD PTR [R12+16],RDX
.L_416a9c:

            add R11D,1
            add R9,6
            cmp R15D,R11D
            je .L_416e38

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_416ab5:

            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp R11D,EDX
            jae .L_416a00

            movzx ESI,BYTE PTR [R9+2]
            movzx ECX,BYTE PTR [R9+3]
            movzx R8D,BYTE PTR [R9]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [R9+1]
            shl R8D,8
            movzx EDX,SI
            mov R10D,EDX
            mov R13D,EDX
            shr EDX,9
            shr R10D,4
            mov EBP,EDX
            add R8D,ECX
            mov R14D,R10D
            movzx EDI,R8W
            mov ECX,EDI
            sub R13D,EDI
            shr EDI,9
            shr ECX,4
            sub EBP,EDI
            sub R14D,ECX
            cmp R14D,62
            jbe .L_416a19

            cmp R13D,62
            mov QWORD PTR [R12],-1
            ja .L_416a5b
.L_416b2a:

            mov ECX,R8D
            mov R14,RBX
            shl R14,CL
            mov ECX,ESI
            mov ESI,2
            and ECX,63
            mov R8,R14
            shl RSI,CL
            sub RSI,R14
            mov R14,RBX
            shl R14,CL
            cmp R8,R14
            seta CL
            movzx ECX,CL
            sub RSI,RCX
            or QWORD PTR [R12+8],RSI
            cmp EBP,62
            jbe .L_416a6d
.L_416b66:

            mov QWORD PTR [R12+16],-1
            jmp .L_416a9c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416b78:

            call .L_415910

            mov R14,RAX
            jmp .L_41684f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416b88:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_416986

            cmp DX,2
            je .L_416986

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416bb0:

            lea RAX,QWORD PTR [RIP+.L_658520]
            jmp .L_4169a7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416bc0:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,2
            je .L_416986

            cmp DX,3
            jne .L_41697c

            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            shl EDX,8
            jmp .L_416991
.L_416bf0:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,2
            je .L_416986

            cmp DX,3
            jne .L_41697c

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            lea RBX,QWORD PTR [RIP+.L_658520]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea RDX,QWORD PTR [RAX+RDX*2+4]
            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            add RDX,2
            shl ECX,8
            add CX,SI
            cmove RDX,RBX
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx ECX,DX
            add RAX,RCX
            test DX,DX
            cmove RAX,RBX
            jmp .L_4169a7
          .byte 0x90
.L_416c60:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            jne .L_416bb0

            movzx ECX,BYTE PTR [RAX+4]
            movzx EDX,BYTE PTR [RAX+5]
            lea RBX,QWORD PTR [RIP+.L_658520]
            shl EDX,16
            shl ECX,24
            add ECX,EDX
            movzx EDX,BYTE PTR [RAX+6]
            shl EDX,8
            add ECX,EDX
            movzx EDX,BYTE PTR [RAX+7]
            add EDX,ECX
            mov RCX,RDX
            add RDX,RAX
            test ECX,ECX
            movzx ECX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            cmove RDX,RBX
            shl ECX,8
            add EAX,ECX
            cmp AX,8
            ja .L_416bb0

            lea RCX,QWORD PTR [RIP+.L_417000]
            movzx EAX,AX
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
.L_416cd2:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
.L_416cde:

            cmp AX,1
            jne .L_416bb0
.L_416ce8:

            movzx ECX,BYTE PTR [RDX+2]
            movzx ESI,BYTE PTR [RDX+3]
            lea RAX,QWORD PTR [RIP+.L_658520]
            shl ECX,8
            add CX,SI
            je .L_4169a7
.L_416d03:

            movzx EAX,CX
            add RAX,RDX
            jmp .L_4169a7
.L_416d0e:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            je .L_416ce8

            cmp AX,2
            je .L_416ce8

            jmp .L_416bb0
.L_416d2b:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,2
            je .L_416ce8

            cmp AX,3
            jne .L_416cde

            movzx ECX,BYTE PTR [RDX+6]
            movzx ESI,BYTE PTR [RDX+7]
            lea RAX,QWORD PTR [RIP+.L_658520]
            shl ECX,8
            add CX,SI
            je .L_4169a7

            jmp .L_416d03
.L_416d60:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,2
            je .L_416ce8

            cmp AX,3
            jne .L_416cde

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            lea EAX,DWORD PTR [RAX+RAX*1+2]
            lea RCX,QWORD PTR [RDX+RAX*1+2]
            lea RAX,QWORD PTR [RIP+.L_658520]
            movzx ESI,BYTE PTR [RCX]
            movzx EDI,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,DI
            je .L_416db3

            lea RAX,QWORD PTR [RCX+2]
.L_416db3:

            movzx ECX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            lea RAX,QWORD PTR [RIP+.L_658520]
            shl ECX,8
            add CX,SI
            je .L_4169a7

            jmp .L_416d03
.L_416dd2:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            sub AX,1
            jne .L_416bb0

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            lea RDI,QWORD PTR [RIP+.L_658520]
            shl ECX,16
            shl EAX,24
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+6]
            shl ECX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+7]
            add EAX,ECX
            je .L_416e16

            mov EAX,EAX
            lea RDI,QWORD PTR [RDX+RAX*1]
.L_416e16:

            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            lea RSI,QWORD PTR [RSP+96]
            shl EAX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_419430

            jmp .L_4169a7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416e38:

            mov R15,QWORD PTR [RSP+80]
.L_416e3d:

            add R15,1
            cmp QWORD PTR [RSP+72],R15
            je .L_416f50

            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            jmp .L_4168e0
          .byte 0x66
          .byte 0x90
.L_416e60:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EBP,SI
            je .L_416e3d

            mov RBX,QWORD PTR [R12]
            mov R11,QWORD PTR [R12+8]
            lea R9,QWORD PTR [RAX+4]
            mov R10,QWORD PTR [R12+16]
            xor EDI,EDI
            mov R8D,1
            jmp .L_416ea0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416e98:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_416ea0:

            shl EDX,8
            mov R14,R8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658520]
            movzx EDX,DX
            cmp EDI,EDX
            cmovb RCX,R9
            add EDI,1
            add R9,2
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            mov ECX,ESI
            shr ESI,9
            shr ECX,4
            shl R14,CL
            mov ECX,EDX
            mov RDX,R8
            or RBX,R14
            mov R14,R8
            shl R14,CL
            mov ECX,ESI
            mov QWORD PTR [R12],RBX
            shl RDX,CL
            or R11,R14
            or R10,RDX
            cmp EBP,EDI
            mov QWORD PTR [R12+8],R11
            mov QWORD PTR [R12+16],R10
            jne .L_416e98

            jmp .L_416e3d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416f10:

            mov EAX,DWORD PTR [RSP+64]
            mov R12,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+88]
            test EAX,EAX
            mov DWORD PTR [R12],EAX
            mov BYTE PTR [R12+4],1
            je .L_416942

            xor EAX,EAX
            lock cmpxchg QWORD PTR [R15+32],R12
            je .L_416595

            mov RDI,R12
            call .L_415880

            jmp .L_416585
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416f50:

            add DWORD PTR [RSP+64],1
            jmp .L_4167e0
.L_416f5a:

            call __stack_chk_fail@PLT
.L_416f5f:
          .byte 0x90
.L_416f60:
          .long .L_415270-.L_416f60
          .long .L_415290-.L_416f60
          .long .L_4152b0-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_4152d0-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_4152f8-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415258-.L_416f60
          .long .L_415230-.L_416f60
.L_416fdc:
          .long .L_416bb0-.L_416fdc
          .long .L_416b88-.L_416fdc
          .long .L_416970-.L_416fdc
          .long .L_416970-.L_416fdc
          .long .L_416970-.L_416fdc
          .long .L_416bc0-.L_416fdc
          .long .L_416bf0-.L_416fdc
          .long .L_416c60-.L_416fdc
          .long .L_416970-.L_416fdc
.L_417000:
          .long .L_416bb0-.L_417000
          .long .L_416d0e-.L_417000
          .long .L_416cd2-.L_417000
          .long .L_416cd2-.L_417000
          .long .L_416cd2-.L_417000
          .long .L_416d2b-.L_417000
          .long .L_416d60-.L_417000
          .long .L_416dd2-.L_417000
          .long .L_416cd2-.L_417000
          .zero 28
.L_417040:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::HeadlessArrayOf<OT::GlyphID>]"
          .zero 1
.L_4170a0:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::HeadlessArrayOf<OT::GlyphID>]"
          .zero 29
.L_417120:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::Ligature]"
          .zero 17
.L_417180:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2> >, OT::IntType<short unsigned int, 2> >]"
          .zero 16
.L_417240:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2> >, OT::IntType<short unsigned int, 2> >]"
          .zero 12
.L_417300:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::LigatureSet]"
          .zero 14
.L_417360:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2> >, OT::IntType<short unsigned int, 2> >]"
          .zero 13
.L_417420:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2> >, OT::IntType<short unsigned int, 2> >]"
          .zero 9
.L_4174e0:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::LigatureSubstFormat1]"
          .zero 5
.L_417540:
          .string "Type* OT::hb_serialize_context_t::copy() [with Type = OT::SubstLookup]"
          .zero 25
.L_4175a0:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::ArrayOf<OT::GlyphID, OT::IntType<short unsigned int, 2> >]"
          .zero 4
.L_417620:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::SortedArrayOf<OT::RangeRecord>]"
          .zero 31
.L_4176a0:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::CoverageFormat2]"
          .zero 10
.L_417700:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::SortedArrayOf<OT::GlyphID>]"
          .zero 3
.L_417760:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::CoverageFormat1]"
          .zero 10
.L_4177c0:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::Coverage]"
          .zero 17
.L_417820:
          .string "void apply_stch(const hb_ot_shape_plan_t*, hb_buffer_t*, hb_font_t*)"
          .zero 27
.L_417880:
          .zero 192
.L_417940:
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x69
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x61
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x6c
          .byte 0x6f
          .byte 0x73
          .byte 0x69
          .byte 0x67
          .byte 0x69
          .byte 0x6c
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417960:
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x5
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x5
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417a20:
          .byte 0x6c
          .byte 0x6f
          .byte 0x73
          .byte 0x69
          .byte 0x61
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x32
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x33
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x69
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x32
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417a40:
          .byte 0xdf
          .byte 0xfe
          .byte 0x88
          .byte 0xfe
          .byte 0xf9
          .byte 0xfe
          .byte 0x82
          .byte 0xfe
          .byte 0xf5
          .byte 0xfe
          .byte 0x8e
          .byte 0xfe
          .byte 0xfb
          .byte 0xfe
          .byte 0x84
          .byte 0xfe
          .byte 0xf7
          .byte 0xfe
          .byte 0xe0
          .byte 0xfe
          .byte 0x88
          .byte 0xfe
          .byte 0xfa
          .byte 0xfe
          .byte 0x82
          .byte 0xfe
          .byte 0xf6
          .byte 0xfe
          .byte 0x8e
          .byte 0xfe
          .byte 0xfc
          .byte 0xfe
          .byte 0x84
          .byte 0xfe
          .byte 0xf8
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417a80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0xfe
          .byte 0x81
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0xfe
          .byte 0x83
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0xfe
          .byte 0x85
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0xfe
          .byte 0x87
          .byte 0xfe
          .byte 0x8b
          .byte 0xfe
          .byte 0x8c
          .byte 0xfe
          .byte 0x8a
          .byte 0xfe
          .byte 0x89
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0xfe
          .byte 0x8d
          .byte 0xfe
          .byte 0x91
          .byte 0xfe
          .byte 0x92
          .byte 0xfe
          .byte 0x90
          .byte 0xfe
          .byte 0x8f
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xfe
          .byte 0x93
          .byte 0xfe
          .byte 0x97
          .byte 0xfe
          .byte 0x98
          .byte 0xfe
          .byte 0x96
          .byte 0xfe
          .byte 0x95
          .byte 0xfe
          .byte 0x9b
          .byte 0xfe
          .byte 0x9c
          .byte 0xfe
          .byte 0x9a
          .byte 0xfe
          .byte 0x99
          .byte 0xfe
          .byte 0x9f
          .byte 0xfe
          .byte 0xa0
          .byte 0xfe
          .byte 0x9e
          .byte 0xfe
          .byte 0x9d
          .byte 0xfe
          .byte 0xa3
          .byte 0xfe
          .byte 0xa4
          .byte 0xfe
          .byte 0xa2
          .byte 0xfe
          .byte 0xa1
          .byte 0xfe
          .byte 0xa7
          .byte 0xfe
          .byte 0xa8
          .byte 0xfe
          .byte 0xa6
          .byte 0xfe
          .byte 0xa5
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xfe
          .byte 0xa9
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0xfe
          .byte 0xab
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0xfe
          .byte 0xad
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xfe
          .byte 0xaf
          .byte 0xfe
          .byte 0xb3
          .byte 0xfe
          .byte 0xb4
          .byte 0xfe
          .byte 0xb2
          .byte 0xfe
          .byte 0xb1
          .byte 0xfe
          .byte 0xb7
          .byte 0xfe
          .byte 0xb8
          .byte 0xfe
          .byte 0xb6
          .byte 0xfe
          .byte 0xb5
          .byte 0xfe
          .byte 0xbb
          .byte 0xfe
          .byte 0xbc
          .byte 0xfe
          .byte 0xba
          .byte 0xfe
          .byte 0xb9
          .byte 0xfe
          .byte 0xbf
          .byte 0xfe
          .byte 0xc0
          .byte 0xfe
          .byte 0xbe
          .byte 0xfe
          .byte 0xbd
          .byte 0xfe
          .byte 0xc3
          .byte 0xfe
          .byte 0xc4
          .byte 0xfe
          .byte 0xc2
          .byte 0xfe
          .byte 0xc1
          .byte 0xfe
          .byte 0xc7
          .byte 0xfe
          .byte 0xc8
          .byte 0xfe
          .byte 0xc6
          .byte 0xfe
          .byte 0xc5
          .byte 0xfe
          .byte 0xcb
          .byte 0xfe
          .byte 0xcc
          .byte 0xfe
          .byte 0xca
          .byte 0xfe
          .byte 0xc9
          .byte 0xfe
          .byte 0xcf
          .byte 0xfe
          .byte 0xd0
          .byte 0xfe
          .byte 0xce
          .byte 0xfe
          .byte 0xcd
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0xfe
          .byte 0xd4
          .byte 0xfe
          .byte 0xd2
          .byte 0xfe
          .byte 0xd1
          .byte 0xfe
          .byte 0xd7
          .byte 0xfe
          .byte 0xd8
          .byte 0xfe
          .byte 0xd6
          .byte 0xfe
          .byte 0xd5
          .byte 0xfe
          .byte 0xdb
          .byte 0xfe
          .byte 0xdc
          .byte 0xfe
          .byte 0xda
          .byte 0xfe
          .byte 0xd9
          .byte 0xfe
          .byte 0xdf
          .byte 0xfe
          .byte 0xe0
          .byte 0xfe
          .byte 0xde
          .byte 0xfe
          .byte 0xdd
          .byte 0xfe
          .byte 0xe3
          .byte 0xfe
          .byte 0xe4
          .byte 0xfe
          .byte 0xe2
          .byte 0xfe
          .byte 0xe1
          .byte 0xfe
          .byte 0xe7
          .byte 0xfe
          .byte 0xe8
          .byte 0xfe
          .byte 0xe6
          .byte 0xfe
          .byte 0xe5
          .byte 0xfe
          .byte 0xeb
          .byte 0xfe
          .byte 0xec
          .byte 0xfe
          .byte 0xea
          .byte 0xfe
          .byte 0xe9
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0xfe
          .byte 0xed
          .byte 0xfe
          .byte 0xe8
          .byte 0xfb
          .byte 0xe9
          .byte 0xfb
          .byte 0xf0
          .byte 0xfe
          .byte 0xef
          .byte 0xfe
          .byte 0xf3
          .byte 0xfe
          .byte 0xf4
          .byte 0xfe
          .byte 0xf2
          .byte 0xfe
          .byte 0xf1
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0xfb
          .byte 0x50
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0xfb
          .byte 0x69
          .byte 0xfb
          .byte 0x67
          .byte 0xfb
          .byte 0x66
          .byte 0xfb
          .byte 0x60
          .byte 0xfb
          .byte 0x61
          .byte 0xfb
          .byte 0x5f
          .byte 0xfb
          .byte 0x5e
          .byte 0xfb
          .byte 0x54
          .byte 0xfb
          .byte 0x55
          .byte 0xfb
          .byte 0x53
          .byte 0xfb
          .byte 0x52
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0xfb
          .byte 0x59
          .byte 0xfb
          .byte 0x57
          .byte 0xfb
          .byte 0x56
          .byte 0xfb
          .byte 0x64
          .byte 0xfb
          .byte 0x65
          .byte 0xfb
          .byte 0x63
          .byte 0xfb
          .byte 0x62
          .byte 0xfb
          .byte 0x5c
          .byte 0xfb
          .byte 0x5d
          .byte 0xfb
          .byte 0x5b
          .byte 0xfb
          .byte 0x5a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0xfb
          .byte 0x79
          .byte 0xfb
          .byte 0x77
          .byte 0xfb
          .byte 0x76
          .byte 0xfb
          .byte 0x74
          .byte 0xfb
          .byte 0x75
          .byte 0xfb
          .byte 0x73
          .byte 0xfb
          .byte 0x72
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0xfb
          .byte 0x7d
          .byte 0xfb
          .byte 0x7b
          .byte 0xfb
          .byte 0x7a
          .byte 0xfb
          .byte 0x80
          .byte 0xfb
          .byte 0x81
          .byte 0xfb
          .byte 0x7f
          .byte 0xfb
          .byte 0x7e
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0xfb
          .byte 0x88
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0xfb
          .byte 0x84
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0xfb
          .byte 0x82
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xfb
          .byte 0x86
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0xfb
          .byte 0x8c
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0xfb
          .byte 0x8a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0xfb
          .byte 0x6d
          .byte 0xfb
          .byte 0x6b
          .byte 0xfb
          .byte 0x6a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0xfb
          .byte 0x71
          .byte 0xfb
          .byte 0x6f
          .byte 0xfb
          .byte 0x6e
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0xfb
          .byte 0x91
          .byte 0xfb
          .byte 0x8f
          .byte 0xfb
          .byte 0x8e
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xfb
          .byte 0xd6
          .byte 0xfb
          .byte 0xd4
          .byte 0xfb
          .byte 0xd3
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xfb
          .byte 0x95
          .byte 0xfb
          .byte 0x93
          .byte 0xfb
          .byte 0x92
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0xfb
          .byte 0x9d
          .byte 0xfb
          .byte 0x9b
          .byte 0xfb
          .byte 0x9a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0xfb
          .byte 0x99
          .byte 0xfb
          .byte 0x97
          .byte 0xfb
          .byte 0x96
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0xfb
          .byte 0x9e
          .byte 0xfb
          .byte 0xa2
          .byte 0xfb
          .byte 0xa3
          .byte 0xfb
          .byte 0xa1
          .byte 0xfb
          .byte 0xa0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0xfb
          .byte 0xad
          .byte 0xfb
          .byte 0xab
          .byte 0xfb
          .byte 0xaa
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0xfb
          .byte 0xa4
          .byte 0xfb
          .byte 0xa8
          .byte 0xfb
          .byte 0xa9
          .byte 0xfb
          .byte 0xa7
          .byte 0xfb
          .byte 0xa6
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0xfb
          .byte 0xe0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xfb
          .byte 0xd9
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0xfb
          .byte 0xd7
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xfb
          .byte 0xdb
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0xfb
          .byte 0xe2
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0xfb
          .byte 0xde
          .byte 0xfb
          .byte 0xfe
          .byte 0xfb
          .byte 0xff
          .byte 0xfb
          .byte 0xfd
          .byte 0xfb
          .byte 0xfc
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xfb
          .byte 0xe7
          .byte 0xfb
          .byte 0xe5
          .byte 0xfb
          .byte 0xe4
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0xfb
          .byte 0xae
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0xfb
          .byte 0xb0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418020:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x8
          .byte 0x2
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x2
          .byte 0x2
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x4
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x5
          .byte 0x5
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x5
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x5
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x1
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
.L_4184de:
          .string "hb-ot-shape-complex-arabic.cc"
.L_4184fc:

            push 32
            cmp EAX,3153981
.L_418503:

            and DWORD PTR [RAX+RBP*2+105],ESI
            jae .L_418536
          .byte 0x3e
          .byte 0x72
          .byte 0x61
          .byte 0x6e
          .byte 0x5f
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x5f
          .byte 0x6f
          .byte 0x66
          .byte 0x5f
          .byte 0x72
          .byte 0x6f
          .byte 0x6f
          .byte 0x6d
          .byte 0x0
.L_41851a:
          .string "hb-open-type-private.hh"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
.L_418536:

            add BYTE PTR [RAX],AL
.L_418538:
          .string "this->start <= (char *) &obj && (char *) &obj <= this->head && (char *) &obj + size >= this->head"
          .zero 6
.L_4185a0:
          .string "this->start < (char *) &obj && (char *) &obj <= this->head && (char *) &obj + size >= this->head"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418610:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41861e:

            cmp RDI,QWORD PTR [RSI+8]
            jb .L_418bdb

            mov R13,RDI
            mov RDI,QWORD PTR [RSI+24]
            mov R12,RSI
            cmp R13,RDI
            ja .L_418bdb

            lea R14,QWORD PTR [R13+2]
            cmp RDI,R14
            ja .L_418bdb

            movzx R15D,BYTE PTR [RSI+32]
            test R15B,R15B
            jne .L_4188d0

            mov RAX,QWORD PTR [RSI+16]
            mov EBP,ECX
            mov ECX,R14D
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_4188d0

            xor ESI,ESI
            mov RBX,RDX
            mov RDX,RCX
            mov QWORD PTR [RSP+8],RCX
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [RSP+8]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],RCX
            je .L_4188d9

            test R13,R13
            je .L_4188d9

            cmp EBP,1
            jbe .L_418bc0

            mov EDI,DWORD PTR [RBX]
            mov ESI,2
            mov ECX,1
            mov R8D,1
            jmp .L_4186f2
.L_4186c0:

            cmp EDI,ECX
            jbe .L_41871b

            mov RDX,QWORD PTR [RBX+8]
            mov EAX,1
.L_4186cd:

            lea R9,QWORD PTR [RDX+RSI*1]
            movzx EDX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EDX,8
            add EDX,R9D
            movzx EDX,DX
            cmp EAX,EDX
            jne .L_41871b

            add ECX,1
            add RSI,2
            cmp EBP,ECX
            je .L_41872a
.L_4186f2:

            lea EAX,DWORD PTR [RCX-1]
            cmp EDI,EAX
            jbe .L_4186c0

            mov RDX,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RDX+RSI*1-2]
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
            add EAX,1
            cmp EDI,ECX
            ja .L_4186cd
.L_41871b:

            add ECX,1
            add R8D,1
            add RSI,2
            cmp EBP,ECX
            jne .L_4186f2
.L_41872a:

            lea EDX,DWORD PTR [R8+R8*2]
.L_41872e:

            lea EAX,DWORD PTR [RBP+RBP*1]
            cmp EAX,EDX
            jae .L_418890

            mov EAX,256
            mov WORD PTR [R13],AX
            cmp QWORD PTR [R12+8],R13
            ja .L_418c19

            mov RDI,QWORD PTR [R12+24]
            cmp RDI,R13
            jb .L_418c19

            lea RCX,QWORD PTR [R13+4]
            cmp RDI,RCX
            ja .L_418c19

            cmp BYTE PTR [R12+32],0
            jne .L_4188d0

            mov RAX,QWORD PTR [R12+16]
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_4188d0

            mov RDX,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP+8],RCX
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [RSP+8]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],RCX
            je .L_4188d9

            test R13,R13
            je .L_4188d9

            mov EAX,EBP
            movzx EDX,BPL
            mov BYTE PTR [R13+3],BPL
            shr AX,8
            mov BYTE PTR [R13+2],AL
            shl EAX,8
            add EAX,EDX
            cmp R14,QWORD PTR [R12+8]
            movzx EAX,AX
            lea R13D,DWORD PTR [RAX+RAX*1+2]
            jbe .L_418bfa

            mov RDI,QWORD PTR [R12+24]
            cmp R14,RDI
            ja .L_418bfa

            add R13,R14
            cmp RDI,R13
            ja .L_418bfa

            cmp BYTE PTR [R12+32],0
            jne .L_4188d0

            mov RAX,QWORD PTR [R12+16]
            sub R13D,EDI
            sub RAX,RDI
            cmp RAX,R13
            jl .L_4188d0

            mov RDX,R13
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            add R13,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],R13
            je .L_4188d9

            test R14,R14
            je .L_4188d9

            test EBP,EBP
            je .L_418940

            lea ESI,DWORD PTR [RBP-1]
            xor EAX,EAX
            add RSI,1
            jmp .L_41887b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418860:

            xor EDX,EDX
            xor ECX,ECX
.L_418864:

            mov BYTE PTR [R14+RAX*2+2],CL
            mov BYTE PTR [R14+RAX*2+3],DL
            add RAX,1
            cmp RSI,RAX
            je .L_418940
.L_41887b:

            cmp DWORD PTR [RBX],EAX
            jbe .L_418860

            mov RDX,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RDX+RAX*2]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            jmp .L_418864
.L_418890:

            mov EDX,512
            mov WORD PTR [R13],DX
            cmp R13,QWORD PTR [R12+8]
            jb .L_418c38

            mov RDI,QWORD PTR [R12+24]
            cmp R13,RDI
            ja .L_418c38

            lea RCX,QWORD PTR [R13+4]
            cmp RDI,RCX
            ja .L_418c38

            cmp BYTE PTR [R12+32],0
            je .L_4188f0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4188d0:

            mov BYTE PTR [R12+32],1
            xor R15D,R15D
.L_4188d9:

            add RSP,24
.L_4188dd:

            mov EAX,R15D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4188f0:

            mov RAX,QWORD PTR [R12+16]
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_4188d0

            mov RDX,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP+8],RCX
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [RSP+8]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],RCX
            je .L_4188d9

            test R13,R13
            je .L_4188d9

            test EBP,EBP
            jne .L_418960

            xor EDI,EDI
            mov R15D,1
            mov WORD PTR [R13+2],DI
            jmp .L_4188d9

            nop
            nop
            nop
.L_418940:

            mov EAX,DWORD PTR [RBX]
            mov R15D,1
            cmp EBP,EAX
            cmova RBP,RAX
            sub EAX,EBP
            add RBP,RBP
            add QWORD PTR [RBX+8],RBP
            mov DWORD PTR [RBX],EAX
            jmp .L_4188d9
          .byte 0x66
          .byte 0x90
.L_418960:

            cmp EBP,1
            jbe .L_418bca

            mov EDI,DWORD PTR [RBX]
            mov ESI,2
            mov R8D,1
            mov ECX,1
            jmp .L_4189b1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418980:

            cmp ECX,EDI
            jae .L_4189da

            mov RDX,QWORD PTR [RBX+8]
            mov EAX,1
.L_41898d:

            add RDX,RSI
            movzx R9D,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl R9D,8
            add EDX,R9D
            movzx EDX,DX
            cmp EAX,EDX
            jne .L_4189da

            add ECX,1
            add RSI,2
            cmp EBP,ECX
            je .L_4189e9
.L_4189b1:

            lea EAX,DWORD PTR [RCX-1]
            cmp EDI,EAX
            jbe .L_418980

            mov RDX,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RDX+RSI*1-2]
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
            add EAX,1
            cmp ECX,EDI
            jb .L_41898d
.L_4189da:

            add ECX,1
            add R8D,1
            add RSI,2
            cmp EBP,ECX
            jne .L_4189b1
.L_4189e9:

            mov EAX,R8D
            mov EDX,R8D
            movzx R8D,R8B
            shr AX,8
            mov ESI,EAX
            shl EAX,8
            add R8D,EAX
            movzx R8D,R8W
            lea EAX,DWORD PTR [R8+R8*2]
            lea ECX,DWORD PTR [RAX+RAX*1+2]
.L_418a0b:

            mov BYTE PTR [R13+2],SIL
            mov BYTE PTR [R13+3],DL
            cmp R14,QWORD PTR [R12+8]
            jbe .L_418c57

            mov RDI,QWORD PTR [R12+24]
            cmp R14,RDI
            ja .L_418c57

            add RCX,R14
            cmp RDI,RCX
            ja .L_418c57

            cmp BYTE PTR [R12+32],0
            jne .L_4188d0

            mov RAX,QWORD PTR [R12+16]
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_4188d0

            mov RDX,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP+8],RCX
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [RSP+8]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],RCX
            je .L_4188d9

            test R14,R14
            je .L_4188d9

            mov ESI,DWORD PTR [RBX]
            test ESI,ESI
            jne .L_418bb0

            xor EAX,EAX
            xor EDX,EDX
.L_418a98:

            xor ECX,ECX
            cmp EBP,1
            mov BYTE PTR [R13+4],DL
            mov BYTE PTR [R13+5],AL
            mov WORD PTR [R13+8],CX
            jbe .L_418940

            mov ESI,2
            xor EDI,EDI
            mov ECX,1
            jmp .L_418b3b
          .byte 0x66
          .byte 0x90
.L_418ac0:

            cmp R8D,ECX
            jbe .L_418b71

            mov RDX,QWORD PTR [RBX+8]
            mov EAX,1
.L_418ad2:

            add RDX,RSI
            movzx R9D,BYTE PTR [RDX]
            movzx R10D,BYTE PTR [RDX+1]
            mov EDX,R9D
            mov R8D,R10D
            shl EDX,8
            add EDX,R10D
            movzx EDX,DX
            cmp EAX,EDX
            je .L_418b98

            add EDI,1
.L_418af8:

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R11,QWORD PTR [RAX+RAX*1]
            lea RDX,QWORD PTR [R14+R11*1+2]
            mov BYTE PTR [RDX],R9B
            mov BYTE PTR [RDX+1],R8B
            lea RDX,QWORD PTR [R14+R11*1+6]
            mov BYTE PTR [RDX],CH
            mov BYTE PTR [RDX+1],CL
            cmp DWORD PTR [RBX],ECX
            ja .L_418b80

            xor EDX,EDX
            xor R8D,R8D
.L_418b21:

            lea RAX,QWORD PTR [R14+R11*1+4]
            mov BYTE PTR [RAX],R8B
            mov BYTE PTR [RAX+1],DL
.L_418b2c:

            add ECX,1
            add RSI,2
            cmp EBP,ECX
            je .L_418940
.L_418b3b:

            mov R8D,DWORD PTR [RBX]
            lea EAX,DWORD PTR [RCX-1]
            cmp EAX,R8D
            jae .L_418ac0

            mov RDX,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RDX+RSI*1-2]
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
            add EAX,1
            cmp R8D,ECX
            ja .L_418ad2
.L_418b71:

            add EDI,1
            xor R8D,R8D
            xor R9D,R9D
            jmp .L_418af8
          .byte 0x90
.L_418b80:

            mov RDX,QWORD PTR [RBX+8]
            add RDX,RSI
            movzx R8D,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            jmp .L_418b21
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418b98:

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [R14+RAX*2+4]
            mov BYTE PTR [RAX],R9B
            mov BYTE PTR [RAX+1],R10B
            jmp .L_418b2c
          .byte 0x90
.L_418bb0:

            mov RAX,QWORD PTR [RBX+8]
            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            jmp .L_418a98
.L_418bc0:

            mov EDX,3
            jmp .L_41872e
.L_418bca:

            mov ECX,8
            mov EDX,1
            xor ESI,ESI
            jmp .L_418a0b
.L_418bdb:

            lea RCX,QWORD PTR [RIP+.L_4177c0]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_418bfa:

            lea RCX,QWORD PTR [RIP+.L_417700]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_4185a0]
            mov EDX,491
            call __assert_fail@PLT
.L_418c19:

            lea RCX,QWORD PTR [RIP+.L_417760]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_418c38:

            lea RCX,QWORD PTR [RIP+.L_4176a0]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_418c57:

            lea RCX,QWORD PTR [RIP+.L_417620]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_4185a0]
            mov EDX,491
            call __assert_fail@PLT
.L_418c76:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418c80:

            push R15
            push R14
            mov RAX,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_418c91:

            cmp RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RSP+64],RDI
            mov RDI,QWORD PTR [RSP+176]
            mov QWORD PTR [RSP+104],RDX
            mov QWORD PTR [RSP+80],RCX
            mov DWORD PTR [RSP+100],R8D
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+32],RDI
            mov R13,QWORD PTR [RSP+184]
            jb .L_419409

            mov RDI,QWORD PTR [RSI+24]
            mov RBP,RSI
            cmp RAX,RDI
            ja .L_419409

            lea R12,QWORD PTR [RAX+6]
            cmp RDI,R12
            ja .L_419409

            cmp BYTE PTR [RSI+32],0
            jne .L_419178

            mov RAX,QWORD PTR [RSI+16]
            mov EBX,R12D
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_419178

            xor ESI,ESI
            mov RDX,RBX
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RAX+RBX*1]
            test RAX,RAX
            mov QWORD PTR [RBP+24],RDI
            je .L_41917c

            mov RAX,QWORD PTR [RSP+64]
            test RAX,RAX
            je .L_41917c

            add RAX,4
            cmp RAX,QWORD PTR [RBP+8]
            mov QWORD PTR [RSP+72],RAX
            jb .L_4193ea

            cmp RAX,RDI
            ja .L_4193ea

            cmp RDI,R12
            ja .L_4193ea

            cmp BYTE PTR [RBP+32],0
            jne .L_419178

            mov RAX,QWORD PTR [RBP+16]
            sub R12D,EDI
            sub RAX,RDI
            cmp R12,RAX
            jg .L_419178

            mov RDX,R12
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            add R12,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],R12
            je .L_41917c

            mov RCX,QWORD PTR [RSP+72]
            test RCX,RCX
            je .L_41917c

            mov EBX,DWORD PTR [RSP+100]
            mov RSI,QWORD PTR [RSP+64]
            mov EAX,EBX
            movzx EDX,BL
            mov BYTE PTR [RSI+5],BL
            shr AX,8
            mov BYTE PTR [RSI+4],AL
            shl EAX,8
            add EAX,EDX
            cmp RCX,QWORD PTR [RBP+8]
            movzx EAX,AX
            lea EBX,DWORD PTR [RAX+RAX*1+2]
            jbe .L_4193cb

            mov RDI,QWORD PTR [RBP+24]
            cmp RCX,RDI
            ja .L_4193cb

            add RBX,RCX
            cmp RDI,RBX
            ja .L_4193cb

            cmp BYTE PTR [RBP+32],0
            jne .L_419178

            mov RAX,QWORD PTR [RBP+16]
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_419178

            xor ESI,ESI
            mov RDX,RBX
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            lea R15,QWORD PTR [RAX+RBX*1]
            test RAX,RAX
            mov QWORD PTR [RBP+24],R15
            je .L_41917c

            mov EAX,DWORD PTR [RSP+100]
            test EAX,EAX
            je .L_4192bd

            sub EAX,1
            mov QWORD PTR [RSP+56],0
            add RAX,1
            mov QWORD PTR [RSP+88],RAX
.L_418e43:

            mov RAX,R15
            sub RAX,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+56]
            mov RCX,QWORD PTR [RSP+72]
            mov DWORD PTR [RSP+96],0
            mov EDX,EAX
            mov BYTE PTR [RCX+RSI*2+3],AL
            mov RAX,QWORD PTR [RSP+80]
            shr DX,8
            mov BYTE PTR [RCX+RSI*2+2],DL
            cmp DWORD PTR [RAX],ESI
            jbe .L_418e7f

            mov RAX,QWORD PTR [RAX+8]
            mov EAX,DWORD PTR [RAX+RSI*4]
            mov DWORD PTR [RSP+96],EAX
.L_418e7f:

            cmp QWORD PTR [RBP+8],R15
            ja .L_4193ac

            mov RDI,QWORD PTR [RBP+24]
            cmp RDI,R15
            jb .L_4193ac

            lea R12,QWORD PTR [R15+2]
            cmp RDI,R12
            ja .L_4193ac

            cmp BYTE PTR [RBP+32],0
            jne .L_419178

            mov RAX,QWORD PTR [RBP+16]
            mov EBX,R12D
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_419178

            xor ESI,ESI
            mov RDX,RBX
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RAX+RBX*1]
            test RAX,RAX
            mov QWORD PTR [RBP+24],RDI
            je .L_41917c

            test R15,R15
            je .L_41917c

            cmp R15,QWORD PTR [RBP+8]
            jb .L_41936e

            cmp R15,RDI
            ja .L_41936e

            cmp RDI,R12
            ja .L_41936e

            cmp BYTE PTR [RBP+32],0
            jne .L_419178

            mov RAX,QWORD PTR [RBP+16]
            sub R12D,EDI
            sub RAX,RDI
            cmp RAX,R12
            jl .L_419178

            mov RDX,R12
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            add R12,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],R12
            je .L_41917c

            test R15,R15
            je .L_41917c

            mov EBX,DWORD PTR [RSP+96]
            mov EAX,EBX
            movzx EDX,BL
            mov BYTE PTR [R15+1],BL
            shr AX,8
            mov BYTE PTR [R15],AL
            shl EAX,8
            add EAX,EDX
            cmp R15,QWORD PTR [RBP+8]
            movzx EAX,AX
            lea EBX,DWORD PTR [RAX+RAX*1+2]
            jbe .L_41938d

            mov RDI,QWORD PTR [RBP+24]
            cmp R15,RDI
            ja .L_41938d

            add RBX,R15
            cmp RDI,RBX
            ja .L_41938d

            cmp BYTE PTR [RBP+32],0
            jne .L_419178

            mov RAX,QWORD PTR [RBP+16]
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_419178

            mov RDX,RBX
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            add RBX,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],RBX
            je .L_41917c

            mov EAX,DWORD PTR [RSP+96]
            test EAX,EAX
            je .L_41926b

            sub EAX,1
            xor R12D,R12D
            mov QWORD PTR [RSP+40],R15
            add RAX,1
            mov QWORD PTR [RSP+48],RAX
            jmp .L_41911e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418ff0:

            xor R15D,R15D
            xor R11D,R11D
.L_418ff6:

            cmp QWORD PTR [RBP+8],RBX
            ja .L_419311

            mov RDI,QWORD PTR [RBP+24]
            cmp RDI,RBX
            jb .L_419311

            lea RCX,QWORD PTR [RBX+4]
            cmp RDI,RCX
            ja .L_419311

            cmp BYTE PTR [RBP+32],0
            mov BYTE PTR [RSP],R11B
            jne .L_419178

            mov RAX,QWORD PTR [RBP+16]
            mov R9D,ECX
            mov QWORD PTR [RSP+16],RCX
            sub R9D,EDI
            sub RAX,RDI
            cmp RAX,R9
            jl .L_419178

            mov RDX,R9
            xor ESI,ESI
            mov QWORD PTR [RSP+8],R9
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            mov R9,QWORD PTR [RSP+8]
            add R9,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],R9
            je .L_41917c

            test RBX,RBX
            je .L_41917c

            movzx R11D,BYTE PTR [RSP]
            mov BYTE PTR [RBX+1],R15B
            lea R15,QWORD PTR [RBX+2]
            mov BYTE PTR [RBX],R11B
            cmp R15,QWORD PTR [RBP+8]
            jb .L_419330

            mov RDI,QWORD PTR [RBP+24]
            cmp R15,RDI
            ja .L_419330

            mov RCX,QWORD PTR [RSP+16]
            cmp RDI,RCX
            ja .L_419330

            cmp BYTE PTR [RBP+32],0
            jne .L_419178

            mov RAX,QWORD PTR [RBP+16]
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_419178

            mov RDX,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP],RCX
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            mov RCX,QWORD PTR [RSP]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],RCX
            je .L_41917c

            test R15,R15
            je .L_41917c

            mov EAX,R14D
            mov BYTE PTR [RBX+3],R14B
            shr AX,8
            test R14D,R14D
            mov BYTE PTR [RBX+2],AL
            jne .L_419190

            add R12,1
            cmp QWORD PTR [RSP+48],R12
            mov RBX,QWORD PTR [RBP+24]
            je .L_41926b
.L_41911e:

            mov RSI,QWORD PTR [RSP+40]
            mov RAX,RBX
            xor R14D,R14D
            mov EDX,R12D
            sub RAX,RSI
            mov ECX,EAX
            mov BYTE PTR [RSI+R12*2+3],AL
            mov RAX,QWORD PTR [RSP+32]
            shr CX,8
            mov BYTE PTR [RSI+R12*2+2],CL
            cmp DWORD PTR [RAX],R12D
            jbe .L_419151

            mov RAX,QWORD PTR [RAX+8]
            mov R14D,DWORD PTR [RAX+R12*4]
.L_419151:

            mov RAX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RAX],EDX
            jbe .L_418ff0

            mov RAX,QWORD PTR [RAX+8]
            lea RAX,QWORD PTR [RAX+R12*2]
            movzx R11D,BYTE PTR [RAX]
            movzx R15D,BYTE PTR [RAX+1]
            jmp .L_418ff6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419178:

            mov BYTE PTR [RBP+32],1
.L_41917c:

            add RSP,120
.L_419180:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419190:

            shl EAX,8
            movzx EDX,R14B
            add EAX,EDX
            movzx EBX,AX
            add EBX,EBX
            test AX,AX
            mov EAX,2
            cmove RBX,RAX
            cmp R15,QWORD PTR [RBP+8]
            jbe .L_41934f

            mov RDI,QWORD PTR [RBP+24]
            cmp R15,RDI
            ja .L_41934f

            add RBX,R15
            cmp RDI,RBX
            ja .L_41934f

            cmp BYTE PTR [RBP+32],0
            jne .L_419178

            mov RAX,QWORD PTR [RBP+16]
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_419178

            mov RDX,RBX
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            add RBX,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],RBX
            je .L_41917c

            mov ESI,R14D
            sub ESI,1
            je .L_419244

            lea EDI,DWORD PTR [R14-2]
            xor EAX,EAX
            add RDI,1
            jmp .L_419227
          .byte 0x90
.L_419210:

            xor EDX,EDX
            xor ECX,ECX
.L_419214:

            mov BYTE PTR [R15+RAX*2+2],CL
            mov BYTE PTR [R15+RAX*2+3],DL
            add RAX,1
            cmp RDI,RAX
            je .L_419240
.L_419227:

            cmp DWORD PTR [R13],EAX
            jbe .L_419210

            mov RDX,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RDX+RAX*2]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            jmp .L_419214
          .byte 0x66
          .byte 0x90
.L_419240:

            mov RBX,QWORD PTR [RBP+24]
.L_419244:

            mov EAX,DWORD PTR [R13]
            cmp EAX,ESI
            cmovbe ESI,EAX
            add R12,1
            sub EAX,ESI
            mov ESI,ESI
            add RSI,RSI
            add QWORD PTR [R13+8],RSI
            cmp QWORD PTR [RSP+48],R12
            mov DWORD PTR [R13],EAX
            jne .L_41911e
.L_41926b:

            mov RCX,QWORD PTR [RSP+24]
            mov R15,RBX
            mov EBX,DWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RCX]
            mov EAX,EBX
            cmp EBX,EDX
            cmova RAX,RDX
            sub EDX,EAX
            add RAX,RAX
            add QWORD PTR [RCX+8],RAX
            mov DWORD PTR [RCX],EDX
            mov EDX,DWORD PTR [RDI]
            mov EAX,EBX
            cmp EBX,EDX
            cmova RAX,RDX
            add QWORD PTR [RSP+56],1
            sub EDX,EAX
            shl RAX,2
            add QWORD PTR [RDI+8],RAX
            mov RAX,QWORD PTR [RSP+56]
            cmp QWORD PTR [RSP+88],RAX
            mov DWORD PTR [RDI],EDX
            jne .L_418e43
.L_4192bd:

            mov RBX,QWORD PTR [RSP+80]
            mov ECX,DWORD PTR [RSP+100]
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,DWORD PTR [RBX]
            mov EAX,ECX
            cmp ECX,EDX
            cmova RAX,RDX
            sub EDX,EAX
            shl RAX,2
            add QWORD PTR [RBX+8],RAX
            mov RAX,R15
            mov DWORD PTR [RBX],EDX
            sub RAX,RDI
            mov EDX,EAX
            mov BYTE PTR [RDI+3],AL
            shr DX,8
            mov BYTE PTR [RDI+2],DL
            mov RDX,QWORD PTR [RSP+104]
            add RSP,120
.L_4192ff:

            pop RBX
            mov RDI,R15
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_418610
.L_419311:

            lea RCX,QWORD PTR [RIP+.L_417120]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_419330:

            lea RCX,QWORD PTR [RIP+.L_4170a0]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_41934f:

            lea RCX,QWORD PTR [RIP+.L_417040]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_4185a0]
            mov EDX,491
            call __assert_fail@PLT
.L_41936e:

            lea RCX,QWORD PTR [RIP+.L_417240]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_41938d:

            lea RCX,QWORD PTR [RIP+.L_417180]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_4185a0]
            mov EDX,491
            call __assert_fail@PLT
.L_4193ac:

            lea RCX,QWORD PTR [RIP+.L_417300]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_4193cb:

            lea RCX,QWORD PTR [RIP+.L_417360]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_4185a0]
            mov EDX,491
            call __assert_fail@PLT
.L_4193ea:

            lea RCX,QWORD PTR [RIP+.L_417420]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_419409:

            lea RCX,QWORD PTR [RIP+.L_4174e0]
            lea RSI,QWORD PTR [RIP+.L_41851a]
            lea RDI,QWORD PTR [RIP+.L_418538]
            mov EDX,482
            call __assert_fail@PLT
.L_419428:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419430:

            lea RCX,QWORD PTR [RIP+.L_4195b8]
            lea RSI,QWORD PTR [RIP+.L_658520]
.L_41943e:

            cmp EDX,8
            ja .L_41949e

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_419450:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
.L_41945c:

            cmp AX,1
            jne .L_41949e
.L_419462:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
.L_41946d:

            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658520]
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419488:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_419570
.L_41949e:

            lea RAX,QWORD PTR [RIP+.L_658520]
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4194b0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_419462

            cmp AX,2
            je .L_419462

            jmp .L_41949e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4194d0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_419462

            cmp AX,3
            jne .L_41945c

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RSI,QWORD PTR [RIP+.L_658520]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea RDX,QWORD PTR [RDI+RAX*2+4]
            movzx ECX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            add RDX,2
            shl ECX,8
            add CX,AX
            cmove RDX,RSI
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx EAX,DX
            add RDI,RAX
            test DX,DX
            mov RAX,RSI
            cmovne RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419540:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_419462

            cmp AX,3
            jne .L_41945c

            movzx EDX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            shl EDX,8
            jmp .L_41946d
.L_419570:

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RDI
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RDI+2]
            movzx EDI,BYTE PTR [RDI+3]
            cmove RAX,RSI
            shl EDX,8
            add EDX,EDI
            mov RDI,RAX
            movzx EDX,DX
            jmp .L_41943e
.L_4195b7:
          .byte 0x90
.L_4195b8:
          .long .L_41949e-.L_4195b8
          .long .L_4194b0-.L_4195b8
          .long .L_419450-.L_4195b8
          .long .L_419450-.L_4195b8
          .long .L_419450-.L_4195b8
          .long .L_419540-.L_4195b8
          .long .L_4194d0-.L_4195b8
          .long .L_419488-.L_4195b8
          .long .L_419450-.L_4195b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4195e0:
          .string "default"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add AL,BYTE PTR [RAX]
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
.L_419640:

            mov RCX,QWORD PTR [RDI+1064]
            test RCX,RCX
            je .L_419683

            mov EDX,DWORD PTR [RSI+184]
            mov RAX,QWORD PTR [RSI+200]
            test EDX,EDX
            je .L_419683

            sub EDX,1
            lea RDX,QWORD PTR [RDX+RDX*4+5]
            lea RSI,QWORD PTR [RAX+RDX*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419670:

            movzx EDX,BYTE PTR [RAX+18]
            mov EDX,DWORD PTR [RCX+RDX*4]
            or DWORD PTR [RAX+4],EDX
            add RAX,20
            cmp RAX,RSI
            jne .L_419670
.L_419683:

            ret 
.L_419685:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419690:

            push RBX
            xor EDX,EDX
            mov RBX,RDI
            sub RSP,16
.L_41969a:

            lea RCX,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_409730

            xor EDX,EDX
            test EAX,EAX
            je .L_4196cb

            mov ESI,DWORD PTR [RSP+4]
            mov RDI,RBX
            call .L_4097e0

            test EAX,EAX
            sete DL
.L_4196cb:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_4196e3

            add RSP,16
.L_4196e1:

            pop RBX
            ret 
.L_4196e3:

            call __stack_chk_fail@PLT
.L_4196e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4196f0:

            jmp free@PLT
.L_4196f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419700:

            push R12
            push RBP
            mov ESI,16
            push RBX
.L_419709:

            mov RBX,RDI
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_4197bf

            lea R12,QWORD PTR [RIP+.L_41a580]
            mov R10,QWORD PTR [RBX+64]
            mov EBP,DWORD PTR [RBX+56]
            xor R9D,R9D
            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_419738:

            mov R11,RBP
            xor ESI,ESI
.L_41973d:

            cmp RSI,R11
            jae .L_41977f

            lea RCX,QWORD PTR [RSI+R11*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            ja .L_41977a

            jmp .L_419798
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419760:

            lea RDX,QWORD PTR [RCX+RSI*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp R9D,EDI
            jae .L_4197a0

            mov RCX,RDX
.L_41977a:

            cmp RCX,RSI
            ja .L_419760
.L_41977f:

            xor EDX,EDX
            mov DWORD PTR [RAX+RBX*1],EDX
            add RBX,4
            cmp RBX,16
            je .L_4197bf
.L_41978e:

            mov R9D,DWORD PTR [R12+RBX*1]
            jmp .L_419738
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419798:

            mov RDX,RCX
            mov RCX,R11
            nop
            nop
.L_4197a0:

            cmp R9D,EDI
            jbe .L_4197ae

            lea RSI,QWORD PTR [RDX+1]
            mov R11,RCX
            jmp .L_41973d
.L_4197ae:

            mov EDX,DWORD PTR [R8+28]
            mov DWORD PTR [RAX+RBX*1],EDX
            add RBX,4
            cmp RBX,16
            jne .L_41978e
.L_4197bf:

            pop RBX
.L_4197c0:

            pop RBP
            pop R12
            ret 
.L_4197c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4197d0:

            add RDI,48
            mov ECX,1
            xor EDX,EDX
            mov ESI,1667329140
            jmp .L_44b250
.L_4197e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4197f0:

            push RBX
            lea RBX,QWORD PTR [RDI+48]
            xor ECX,ECX
            mov EDX,1
            mov ESI,1818914159
            mov RDI,RBX
            call .L_44b250

            mov RDI,RBX
            xor ECX,ECX
            mov EDX,1
            mov ESI,1986686319
            call .L_44b250

            mov RDI,RBX
            xor ECX,ECX
            mov EDX,1
            pop RBX
            mov ESI,1953131887
            jmp .L_44b250
.L_419832:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419840:

            push R15
            push R14
            mov RDI,RSI
            push R13
            push R12
            xor R13D,R13D
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,104
.L_41985a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_4029e0

            lea RCX,QWORD PTR [RSP+60]
            lea RDI,QWORD PTR [RSP+56]
            mov R14D,DWORD PTR [RBX+184]
            mov DWORD PTR [RBX+180],0
            xor EAX,EAX
            mov DWORD PTR [RSP+20],0
            mov QWORD PTR [RSP+8],RCX
            lea RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+24],RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4198b0:

            cmp R14D,EAX
            jbe .L_419c50
.L_4198b9:

            cmp BYTE PTR [RBX+176],0
            jne .L_419c50

            mov RCX,QWORD PTR [RBX+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [RCX+RDX*4]
            mov R15D,DWORD PTR [RSI]
            lea EDX,DWORD PTR [R15-12334]
            cmp EDX,1
            jbe .L_419d20

            lea EDI,DWORD PTR [R15-4352]
            mov R13D,DWORD PTR [RBX+188]
            cmp EDI,95
            jbe .L_419b40

            lea EDX,DWORD PTR [R15-43360]
            cmp EDX,28
            jbe .L_419b40
.L_419911:

            lea R12D,DWORD PTR [R15-44032]
            cmp R12D,11171
            ja .L_419ca2

            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+60],0
            mov EDX,R15D
            mov RSI,QWORD PTR [RBP+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            mov DWORD PTR [RSP+16],EAX
            mov EAX,3739835469
            mul R12D
            shr EDX,9
            imul EAX,EDX,588
            mov R10D,EDX
            mov EDX,613566757
            sub R12D,EAX
            mov R11D,R12D
            shr R11D,2
            mov EAX,R11D
            mul EDX
            imul EAX,EDX,28
            mov R11D,EDX
            sub R12D,EAX
            jne .L_419cc0

            mov EAX,DWORD PTR [RBX+180]
            add EAX,1
            cmp EAX,R14D
            jae .L_419cc0

            mov RDX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EAX,DWORD PTR [RAX]
            lea EDX,DWORD PTR [RAX-4520]
            cmp EDX,26
            ja .L_419a0f

            lea EDX,DWORD PTR [RAX+R15*1-4519]
            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+44],R11D
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+60],0
            mov RDI,RBP
            mov DWORD PTR [RSP+56],EDX
            mov RSI,QWORD PTR [RBP+160]
            mov R8,QWORD PTR [RAX+136]
            mov RCX,QWORD PTR [RSP+8]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+40]
            mov R11D,DWORD PTR [RSP+44]
            jne .L_41a2e0
.L_419a0f:

            mov EAX,DWORD PTR [RSP+16]
            test EAX,EAX
            jne .L_41a470

            nop
            nop
            nop
            nop
            nop
.L_419a20:

            lea EAX,DWORD PTR [R12+4519]
            lea EDX,DWORD PTR [R10+4352]
            add R11D,4449
            mov DWORD PTR [RSP+68],R11D
            mov DWORD PTR [RSP+60],0
            mov RDI,RBP
            mov DWORD PTR [RSP+72],EAX
            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+64],EDX
            mov RSI,QWORD PTR [RBP+160]
            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_419c98

            mov RAX,QWORD PTR [RBP+152]
            mov R15,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov DWORD PTR [RSP+60],0
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,DWORD PTR [RSP+68]
            mov R8,QWORD PTR [RAX+136]
            mov RCX,R15
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_419c98

            test R12D,R12D
            je .L_41a038

            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+60],0
            mov RCX,R15
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,DWORD PTR [RSP+72]
            mov RDI,RBP
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_419c98

            mov RCX,QWORD PTR [RSP+24]
            mov EDX,3
            mov ESI,1
            mov RDI,RBX
            call .L_402b00

            cmp BYTE PTR [RBX+176],0
            je .L_41a180

            nop
            nop
            nop
            nop
            nop
            nop
.L_419b18:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41a575

            add RSP,104
.L_419b30:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419b40:

            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,R14D
            jae .L_419911

            lea RDX,QWORD PTR [RDX+RDX*4]
            mov R8D,DWORD PTR [RCX+RDX*4]
            lea EDX,DWORD PTR [R8-4448]
            cmp EDX,71
            jbe .L_419b70

            lea EDX,DWORD PTR [R8-55216]
            cmp EDX,22
            ja .L_419ca2
.L_419b70:

            add EAX,2
            cmp EAX,R14D
            jae .L_419ba2

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov R12D,DWORD PTR [RCX+RAX*4]
            lea EDX,DWORD PTR [R12-4520]
            cmp EDX,87
            jbe .L_419c60

            lea EAX,DWORD PTR [R12-55243]
            cmp EAX,48
            jbe .L_419c60
.L_419ba2:

            cmp EDI,18
            ja .L_419db8

            lea EDX,DWORD PTR [R8-4449]
            xor EAX,EAX
            xor R12D,R12D
            cmp EDX,20
            ja .L_419dc0
.L_419bc0:

            imul R9D,R15D,588
            mov DWORD PTR [RSP+60],0
            mov RSI,QWORD PTR [RBP+160]
            imul R8D,R8D,28
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RBP
            lea EDX,DWORD PTR [R9+R8*1-2639516]
            add EDX,EAX
            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+56],EDX
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_41a200

            xor ESI,ESI
            mov RCX,QWORD PTR [RSP+32]
            test R12D,R12D
            setne SIL
            mov EDX,1
            mov RDI,RBX
            add ESI,2
            call .L_402b00

            cmp BYTE PTR [RBX+176],0
            jne .L_419b18

            lea EAX,DWORD PTR [R13+1]
            mov DWORD PTR [RSP+20],EAX
            mov EAX,DWORD PTR [RBX+180]
.L_419c45:

            cmp R14D,EAX
            ja .L_4198b9

            nop
            nop
.L_419c50:

            mov RDI,RBX
            call .L_402a70

            jmp .L_419b18
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419c60:

            cmp EDI,18
            lea EAX,DWORD PTR [R12-4519]
            ja .L_419dc0

            lea ECX,DWORD PTR [R8-4449]
            cmp ECX,20
            ja .L_419dc0

            test R12D,R12D
            jne .L_41a198

            mov EAX,4294962777
            jmp .L_419bc0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419c98:

            mov R11D,DWORD PTR [RSP+16]
            test R11D,R11D
            jne .L_419ccc
.L_419ca2:

            cmp BYTE PTR [RBX+177],0
            jne .L_419ce0
.L_419cab:

            mov EAX,DWORD PTR [RBX+180]
.L_419cb1:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_4198b0
          .byte 0x90
.L_419cc0:

            mov EDX,DWORD PTR [RSP+16]
            test EDX,EDX
            je .L_419a20
.L_419ccc:

            cmp BYTE PTR [RBX+177],0
            lea EAX,DWORD PTR [R13+1]
            mov DWORD PTR [RSP+20],EAX
            je .L_419cab

            nop
            nop
            nop
.L_419ce0:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_419f30
.L_419cf4:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            jne .L_41a1b0

            nop
            nop
.L_419d10:

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_4198b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419d20:

            cmp R13D,DWORD PTR [RSP+20]
            jb .L_41a220
.L_419d2b:

            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+60],0
            mov EDX,9676
            mov RSI,QWORD PTR [RBP+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_419e40

            mov ESI,R15D
            mov RDI,RBP
            call .L_419690

            test AL,AL
            jne .L_419f58

            mov DWORD PTR [RSP+64],R15D
            mov DWORD PTR [RSP+68],9676
.L_419d83:

            mov RCX,QWORD PTR [RSP+24]
            mov EDX,2
            mov ESI,1
            mov RDI,RBX
            call .L_402b00

            mov EAX,DWORD PTR [RBX+180]
            mov R13D,DWORD PTR [RBX+188]
.L_419da7:

            mov DWORD PTR [RSP+20],R13D
            jmp .L_4198b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419db8:

            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
.L_419dc0:

            mov BYTE PTR [RSI+18],1
            cmp BYTE PTR [RBX+177],0
            jne .L_419ef0

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
.L_419dde:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_419de7:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov BYTE PTR [RDX+RAX*4+18],2
            cmp BYTE PTR [RBX+177],0
            jne .L_419e70

            mov EAX,DWORD PTR [RBX+180]
.L_419dff:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_419e08:

            lea EAX,DWORD PTR [R13+2]
            test R12D,R12D
            mov DWORD PTR [RSP+20],EAX
            jne .L_419ff0
.L_419e19:

            mov ECX,DWORD PTR [RBX+124]
            test ECX,ECX
            jne .L_419d10

            mov EDX,DWORD PTR [RSP+20]
            mov ESI,R13D
            mov RDI,RBX
            call .L_4031b0

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_4198b0
          .byte 0x66
          .byte 0x90
.L_419e40:

            cmp BYTE PTR [RBX+177],0
            jne .L_419f70

            mov R13D,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_419e5a:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_419da7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419e70:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_41a320
.L_419e84:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_419e08

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R10,QWORD PTR [RBX+200]
            mov R9,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R10+RDX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_41a334
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ef0:

            mov RDX,QWORD PTR [RBX+208]
            cmp RDX,QWORD PTR [RBX+200]
            je .L_41a348
.L_419f04:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            jne .L_41a418

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            jmp .L_419de7
.L_419f30:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_419cf4

            mov EAX,EDX
.L_419f44:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_419cb1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419f58:

            mov DWORD PTR [RSP+64],9676
            mov DWORD PTR [RSP+68],R15D
            jmp .L_419d83
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419f70:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_41a370
.L_419f84:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_41a2c8

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov R13D,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_41a387
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ff0:

            mov EAX,DWORD PTR [RBX+180]
            mov R8,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov BYTE PTR [RAX+18],3
            cmp BYTE PTR [RBX+177],0
            jne .L_41a100

            mov EAX,DWORD PTR [RBX+180]
.L_41a01c:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_41a025:

            lea EAX,DWORD PTR [R13+3]
            mov DWORD PTR [RSP+20],EAX
            jmp .L_419e19
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a038:

            mov RCX,QWORD PTR [RSP+24]
            mov EDX,2
            mov ESI,1
            mov RDI,RBX
            call .L_402b00

            cmp BYTE PTR [RBX+176],0
            jne .L_419b18

            mov R10D,DWORD PTR [RSP+16]
            mov R12,QWORD PTR [RBX+208]
            mov EAX,2
            test R10D,R10D
            jne .L_41a0d0
.L_41a072:

            lea EDI,DWORD PTR [RAX+R13*1]
            mov EAX,R13D
            lea EDX,DWORD PTR [R13+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov DWORD PTR [RSP+20],EDI
            mov BYTE PTR [R12+RAX*4+18],1
            lea EAX,DWORD PTR [R13+2]
            mov BYTE PTR [R12+RDX*4+18],2
            cmp EDI,EAX
            jbe .L_41a0a7

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov BYTE PTR [R12+RAX*4+18],3
.L_41a0a7:

            mov EDI,DWORD PTR [RBX+124]
            test EDI,EDI
            jne .L_419d10

            mov EDX,DWORD PTR [RSP+20]
            mov ESI,R13D
            mov RDI,RBX
            call .L_4031b0

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_4198b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a0d0:

            cmp BYTE PTR [RBX+177],0
            jne .L_41a3a0

            mov EAX,DWORD PTR [RBX+180]
.L_41a0e3:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_41a0ec:

            mov EAX,3
            jmp .L_41a072
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a100:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_41a4b5
.L_41a114:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_41a025

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_41a4c9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a180:

            mov R12,QWORD PTR [RBX+208]
            mov EAX,3
            jmp .L_41a072
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a198:

            cmp EDX,26
            jbe .L_419bc0

            jmp .L_419dc0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a1b0:

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RSI,QWORD PTR [RBX+200]
            mov RCX,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_419f44
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a200:

            mov EAX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RAX+RDX*4]
            jmp .L_419dc0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a220:

            mov EDI,DWORD PTR [RSP+20]
            cmp DWORD PTR [RBX+188],EDI
            jne .L_419d2b

            cmp BYTE PTR [RBX+177],0
            je .L_41a2ac

            cmp QWORD PTR [RBX+208],RCX
            jne .L_41a24a

            cmp EDI,EAX
            je .L_41a56c
.L_41a24a:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_41a2b5

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_41a2a3:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
.L_41a2ac:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_41a2b5:

            mov ESI,R15D
            mov RDI,RBP
            call .L_419690

            test AL,AL
            je .L_41a4f0
.L_41a2c8:

            mov EAX,DWORD PTR [RBX+180]
            mov R13D,DWORD PTR [RBX+188]
            jmp .L_419da7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a2e0:

            mov RCX,QWORD PTR [RSP+32]
            mov EDX,1
            mov ESI,2
            mov RDI,RBX
            call .L_402b00

            cmp BYTE PTR [RBX+176],0
            jne .L_419b18

            lea EAX,DWORD PTR [R13+1]
            mov DWORD PTR [RSP+20],EAX
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_419c45
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a320:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_419e84

            mov EAX,EDX
.L_41a334:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_419dff
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a348:

            mov ECX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],ECX
            jne .L_419f04

            mov EAX,ECX
.L_41a35c:

            add ECX,1
            mov DWORD PTR [RBX+188],ECX
            jmp .L_419dde
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a370:

            mov R13D,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],R13D
            jne .L_419f84

            mov EAX,R13D
.L_41a387:

            add R13D,1
            mov DWORD PTR [RBX+188],R13D
            jmp .L_419e5a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a3a0:

            cmp R12,QWORD PTR [RBX+200]
            je .L_41a4d7
.L_41a3ad:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_41a0ec

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R9,QWORD PTR [RBX+200]
            mov R8,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R9+RDX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_41a40a:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_41a0e3
.L_41a418:

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R15,QWORD PTR [RBX+200]
            mov R11,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R15+RDX*4]
            lea RAX,QWORD PTR [R11+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov ECX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            jmp .L_41a35c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a470:

            mov EAX,DWORD PTR [RBX+180]
            add EAX,1
            cmp EAX,R14D
            jae .L_419ccc

            mov R15,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R15+RAX*4]
            mov EAX,DWORD PTR [RAX]
            lea EDX,DWORD PTR [RAX-4520]
            cmp EDX,87
            jbe .L_419a20

            sub EAX,55243
            cmp EAX,48
            jbe .L_419a20

            jmp .L_419ccc
.L_41a4b5:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_41a114

            mov EAX,EDX
.L_41a4c9:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_41a01c
.L_41a4d7:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_41a3ad

            mov EAX,EDX
            jmp .L_41a40a
.L_41a4f0:

            mov R15D,DWORD PTR [RSP+20]
            mov ESI,R13D
            mov RDI,RBX
            lea EDX,DWORD PTR [R15+1]
            call .L_4031b0

            mov RAX,QWORD PTR [RBX+208]
            mov EDX,R15D
            lea ECX,DWORD PTR [R13+1]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RDX,QWORD PTR [RAX+RDX*4]
            lea RDI,QWORD PTR [RAX+RCX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movaps XMMWORD PTR [RSP+64],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RSP+80],EDX
            mov EDX,R13D
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R12,QWORD PTR [RAX+RDX*4]
            mov EDX,R15D
            sub EDX,R13D
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov RSI,R12
            shl RDX,2
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [R12],XMM0
            mov EAX,DWORD PTR [RSP+80]
            mov DWORD PTR [R12+16],EAX
            jmp .L_41a2c8
.L_41a56c:

            mov EDX,DWORD PTR [RSP+20]
            jmp .L_41a2a3
.L_41a575:

            call __stack_chk_fail@PLT
.L_41a57a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41a580:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x6d
          .byte 0x6a
          .byte 0x6c
          .byte 0x6f
          .byte 0x6d
          .byte 0x6a
          .byte 0x76
          .byte 0x6f
          .byte 0x6d
          .byte 0x6a
          .byte 0x74
.L_41a590:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,ESI
            mov EBX,EDX
            mov R12,RCX
            sub RSP,8
.L_41a5a4:

            test ESI,ESI
            mov RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RCX],0
            je .L_41a640

            test EDX,EDX
            je .L_41a640

            mov R8,QWORD PTR [RAX+232]
            mov RDI,RAX
            call QWORD PTR [RAX+168]

            test EAX,EAX
            setne AL
            jne .L_41a635

            mov RDX,QWORD PTR [R13]
            test BYTE PTR [RDX+1092],4
            jne .L_41a635

            nop
            nop
            nop
            nop
            nop
            nop
.L_41a5e8:

            sub EBX,1460
            cmp EBX,14
            ja .L_41a635

            lea RCX,QWORD PTR [RIP+.L_41a800]
            movsxd RDX,DWORD PTR [RCX+RBX*4]
            add RDX,RCX
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a608:

            cmp EBP,1499
            je .L_41a7d4

            cmp EBP,1508
            je .L_41a7c2

            cmp EBP,1489
            jne .L_41a635

            mov DWORD PTR [R12],64332
            mov EAX,1
.L_41a635:

            add RSP,8
.L_41a639:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41a640:

            mov RDX,QWORD PTR [R13]
            xor EAX,EAX
            test BYTE PTR [RDX+1092],4
            je .L_41a5e8

            jmp .L_41a635
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a658:

            cmp EBP,1513
            je .L_41a798

            cmp EBP,64329
            jne .L_41a635
.L_41a66c:

            mov DWORD PTR [R12],64301
            mov EAX,1
            jmp .L_41a635
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a680:

            cmp EBP,1497
            jne .L_41a635

            mov DWORD PTR [R12],64285
            mov EAX,1
            jmp .L_41a635
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a6a0:

            cmp EBP,1522
            je .L_41a7b0

            cmp EBP,1488
            jne .L_41a635

            mov DWORD PTR [R12],64302
            mov EAX,1
            jmp .L_41a635
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a6d0:

            cmp EBP,1488
            jne .L_41a635

            mov DWORD PTR [R12],64303
            mov EAX,1
            jmp .L_41a635
          .byte 0x66
          .byte 0x90
.L_41a6f0:

            cmp EBP,1493
            jne .L_41a635

            mov DWORD PTR [R12],64331
            mov EAX,1
            jmp .L_41a635
          .byte 0x66
          .byte 0x90
.L_41a710:

            lea EDX,DWORD PTR [RBP-1488]
            cmp EDX,26
            jbe .L_41a760

            cmp EBP,64298
            je .L_41a74c

            cmp EBP,64299
            jne .L_41a635

            jmp .L_41a66c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a738:

            cmp EBP,1513
            je .L_41a780

            cmp EBP,64329
            jne .L_41a635
.L_41a74c:

            mov DWORD PTR [R12],64300
            mov EAX,1
            jmp .L_41a635
          .byte 0x66
          .byte 0x90
.L_41a760:

            lea RAX,QWORD PTR [RIP+.L_41a840]
            mov EAX,DWORD PTR [RAX+RDX*4]
            test EAX,EAX
            mov DWORD PTR [R12],EAX
            setne AL
            jmp .L_41a635
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a780:

            mov DWORD PTR [R12],64298
            mov EAX,1
            jmp .L_41a635
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a798:

            mov DWORD PTR [R12],64299
            mov EAX,1
            jmp .L_41a635
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a7b0:

            mov DWORD PTR [R12],64287
            mov EAX,1
            jmp .L_41a635
.L_41a7c2:

            mov DWORD PTR [R12],64334
            mov EAX,1
            jmp .L_41a635
.L_41a7d4:

            mov DWORD PTR [R12],64333
            mov EAX,1
            jmp .L_41a635
.L_41a7e6:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a800:
          .long .L_41a680-.L_41a800
          .long .L_41a635-.L_41a800
          .long .L_41a635-.L_41a800
          .long .L_41a6a0-.L_41a800
          .long .L_41a6d0-.L_41a800
          .long .L_41a6f0-.L_41a800
          .long .L_41a635-.L_41a800
          .long .L_41a635-.L_41a800
          .long .L_41a710-.L_41a800
          .long .L_41a635-.L_41a800
          .long .L_41a635-.L_41a800
          .long .L_41a608-.L_41a800
          .long .L_41a635-.L_41a800
          .long .L_41a738-.L_41a800
          .long .L_41a658-.L_41a800
          .zero 4
.L_41a840:

            xor BL,BH
            add BYTE PTR [RAX],AL
            xor EBX,EDI
            add BYTE PTR [RAX],AL
            xor BH,BL
            add BYTE PTR [RAX],AL
            xor EDI,EBX
            add BYTE PTR [RAX],AL
            xor AL,251
            add BYTE PTR [RAX],AL
            xor EAX,905969915
            sti 
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            cmp BL,BH
            add BYTE PTR [RAX],AL
            cmp EBX,EDI
            add BYTE PTR [RAX],AL
            cmp BH,BL
            add BYTE PTR [RAX],AL
            cmp EDI,EBX
            add BYTE PTR [RAX],AL
            cmp AL,251
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            sti 
            add BYTE PTR [RAX],AL
            nop
            nop
            nop
            nop
.L_41a8b0:

            mov RCX,QWORD PTR [RDX+200]
            mov EDX,DWORD PTR [RDX+184]
            test EDX,EDX
            je .L_41a8e4

            sub EDX,1
            lea RAX,QWORD PTR [RCX+15]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a8d8:

            mov BYTE PTR [RAX],0
            add RAX,20
            cmp RAX,RDX
            jne .L_41a8d8
.L_41a8e4:

            ret 
.L_41a8e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a8f0:

            jmp free@PLT
.L_41a8f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a900:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RIP+.L_6582a8]
            test EAX,EAX
            jne .L_41a918

            call .L_4063f0
.L_41a918:

            test BYTE PTR [RIP+.L_6582a8],2
            lea RBP,QWORD PTR [RBX+48]
            je .L_41a92e

            cmp DWORD PTR [RBX+12],1265134962
            je .L_41a950
.L_41a92e:

            add RSP,8
            mov RDI,RBP
            mov ECX,1
            pop RBX
            pop RBP
            xor EDX,EDX
            mov ESI,1818847073
            jmp .L_44b250
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a950:

            mov ECX,1
            xor EDX,EDX
            mov ESI,1801810542
            mov RDI,RBP
            call .L_44b250

            jmp .L_41a92e
.L_41a966:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a970:

            push R12
            push RBP
            lea RBP,QWORD PTR [RDI+48]
            push RBX
.L_41a978:

            lea RDX,QWORD PTR [RIP+.L_41aaa0]
            xor ESI,ESI
            mov RDI,RBP
            lea RBX,QWORD PTR [RIP+.L_423f28]
            call .L_44b450

            mov ECX,1
            mov EDX,1
            mov ESI,1819239276
            mov RDI,RBP
            lea R12,QWORD PTR [RBX+88]
            call .L_44b250

            mov ECX,1
            mov EDX,1
            mov ESI,1667460464
            mov RDI,RBP
            call .L_44b250

            lea RDX,QWORD PTR [RIP+.L_41edd0]
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            mov ESI,1853188980
            mov ECX,1
            jmp .L_41a9e9
          .byte 0x90
.L_41a9e0:

            mov ECX,DWORD PTR [RBX+4]
            mov ESI,DWORD PTR [RBX]
            add RBX,8
.L_41a9e9:

            or ECX,4
            mov EDX,1
            mov RDI,RBP
            call .L_44b250

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            cmp RBX,R12
            jne .L_41a9e0

            lea RDX,QWORD PTR [RIP+.L_41c360]
            lea RBX,QWORD PTR [RIP+.L_423f88]
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            lea R12,QWORD PTR [RBX+64]
            mov ESI,1768843636
            xor ECX,ECX
            jmp .L_41aa39
          .byte 0x90
.L_41aa30:

            mov ECX,DWORD PTR [RBX+4]
            mov ESI,DWORD PTR [RBX]
            add RBX,8
.L_41aa39:

            or ECX,4
            mov EDX,1
            mov RDI,RBP
            call .L_44b250

            cmp R12,RBX
            jne .L_41aa30

            mov RDI,RBP
            mov ECX,1
            mov EDX,1
            mov ESI,1667329140
            call .L_44b250

            mov RDI,RBP
            mov EDX,1
            mov ESI,1668049255
            mov ECX,1
            call .L_44b250

            pop RBX
.L_41aa7d:

            mov RDI,RBP
            lea RDX,QWORD PTR [RIP+.L_41a8b0]
            xor ESI,ESI
            pop RBP
            pop R12
            jmp .L_44b450
.L_41aa91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aaa0:

            mov ECX,DWORD PTR [RDX+184]
            test ECX,ECX
            jne .L_41aab0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41aab0:

            push R15
            push R14
            lea R11,QWORD PTR [RIP+.L_423c44]
            push R13
            push R12
            lea R9,QWORD PTR [RIP+.L_420640]
            push RBP
            push RBX
.L_41aac8:

            lea R15,QWORD PTR [RIP+.L_4201e0]
            mov R10,QWORD PTR [RDX+200]
            lea R14,QWORD PTR [RIP+.L_41ffa0]
            mov R8D,1
            mov EBP,1
            xor EBX,EBX
            xor R12D,R12D
            xor R13D,R13D
            xor ESI,ESI
            mov EAX,18
            mov EDI,2118
.L_41aafc:

            mov EDX,ESI
            lea RDX,QWORD PTR [RDX+RDX*4]
            movzx EDX,BYTE PTR [R10+RDX*4+18]
            cmp DL,R8B
            jae .L_41ab70
.L_41ab0d:

            add RAX,RAX
.L_41ab10:

            add RAX,R9
            movsx EAX,WORD PTR [RAX+RDI*1]
.L_41ab17:

            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            jne .L_41ab88
.L_41ab27:

            add ESI,1
.L_41ab2a:

            cmp ECX,ESI
            je .L_41b6ad
.L_41ab32:

            lea RDI,QWORD PTR [RIP+.L_423480]
            lea R8,QWORD PTR [RIP+.L_4238c0]
            movsxd RAX,EDX
            movsx RDI,WORD PTR [RDI+RAX*2]
            movsx RAX,BYTE PTR [R8+RAX*1]
            add RDI,RDI
            test AL,AL
            jle .L_41ab0d

            lea R11D,DWORD PTR [RDX+RDX*1]
            lea RDX,QWORD PTR [RIP+.L_423ae0]
            movsxd R11,R11D
            add R11,RDX
            movzx R8D,BYTE PTR [R11]
            jmp .L_41aafc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ab70:

            cmp DL,BYTE PTR [R11+1]
            ja .L_41ab0d

            movzx EAX,DL
            sub EAX,R8D
            cdqe 
            add RAX,RAX
            jmp .L_41ab10
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ab88:

            cmp AL,24
            ja .L_41ab27

            lea RDI,QWORD PTR [RIP+.L_41f600]
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_41ab9c:

            mov ESI,ECX
            mov R12D,5
.L_41aba4:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_41abe0

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,3
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
.L_41abd0:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_41abd0

            nop
            nop
            nop
            nop
.L_41abe0:

            add EBP,1
            mov ESI,R13D
            mov EBX,R13D
            cmp EBP,16
            jne .L_41ab2a
.L_41abf2:

            mov EBP,1
            jmp .L_41ab2a
.L_41abfc:

            mov ESI,ECX
            mov R12D,5
.L_41ac04:

            cmp ESI,EBX
            jbe .L_41ac40

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,3
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
            nop
.L_41ac30:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_41ac30

            nop
            nop
            nop
            nop
.L_41ac40:

            add EBP,1
            mov EBX,ESI
            mov R13D,ESI
            cmp EBP,16
            jne .L_41ab2a

            jmp .L_41abf2
.L_41ac53:

            mov ESI,ECX
            mov R12D,5
.L_41ac5b:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_41abe0

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,2
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ac90:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_41ac90

            jmp .L_41abe0
.L_41aca1:

            mov ESI,ECX
            mov R12D,5
.L_41aca9:

            cmp ESI,EBX
            jbe .L_41ac40

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,2
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
            nop
            nop
            nop
            nop
.L_41acd8:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_41acd8

            jmp .L_41ac40
.L_41ace9:

            mov ESI,ECX
            mov R12D,5
.L_41acf1:

            cmp ESI,EBX
            jbe .L_41ac40

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,5
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
.L_41ad20:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_41ad20

            jmp .L_41ac40
.L_41ad31:

            mov ESI,ECX
            mov R12D,5
.L_41ad39:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_41abe0

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,4
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ad70:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_41ad70

            jmp .L_41abe0
.L_41ad81:

            mov ESI,ECX
            mov R12D,5
.L_41ad89:

            cmp ESI,EBX
            jbe .L_41ac40

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,4
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41adc0:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_41adc0

            jmp .L_41ac40
.L_41add1:

            mov ESI,ECX
            mov R12D,5
.L_41add9:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_41abe0

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,1
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ae10:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_41ae10

            jmp .L_41abe0
.L_41ae21:

            mov ESI,ECX
            mov R12D,5
.L_41ae29:

            cmp ESI,EBX
            jbe .L_41ac40

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,1
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ae60:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_41ae60

            jmp .L_41ac40
.L_41ae71:

            mov ESI,ECX
            mov R12D,5
.L_41ae79:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_41abe0

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
.L_41aea8:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_41aea8

            jmp .L_41abe0
.L_41aeb9:

            mov ESI,ECX
            mov R12D,5
.L_41aec1:

            cmp ESI,EBX
            jbe .L_41ac40

            lea EDI,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov R8D,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl R8D,4
            sub EDI,EBX
            add RDI,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
.L_41aef0:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RDI,RAX
            jne .L_41aef0

            jmp .L_41ac40
.L_41af01:

            mov EBX,ECX
            mov EBP,1
            mov ESI,ECX
.L_41af0a:

            lea RDI,QWORD PTR [RIP+.L_41f7e4]
.L_41af11:

            add ESI,1
            cmp ECX,ESI
            je .L_41b707

            mov R13D,ESI
            mov R12D,6
            jmp .L_41ab32
.L_41af2a:

            mov ESI,ECX
            mov R12D,5
.L_41af32:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_41abe0

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,5
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41af68:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RSI,RAX
            jne .L_41af68

            jmp .L_41abe0
.L_41af79:

            mov EBX,ESI
            mov ESI,ECX
.L_41af7d:

            lea RDI,QWORD PTR [RIP+.L_41f784]
.L_41af84:

            add ESI,1
            cmp ECX,ESI
            je .L_41b6c9

            mov R13D,ESI
            mov R12D,1
            jmp .L_41ab32
.L_41af9d:

            mov R13D,EBX
            mov R12D,5
.L_41afa6:

            cmp R13D,EBX
            jbe .L_41abe0

            lea EDI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov ESI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl ESI,4
            sub EDI,EBX
            or ESI,2
            add RDI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
.L_41afd8:

            mov BYTE PTR [RAX],SIL
            add RAX,20
            cmp RAX,RDI
            jne .L_41afd8

            jmp .L_41abe0
.L_41afe9:

            mov R13D,EBX
            mov R12D,5
.L_41aff2:

            cmp R13D,EBX
            jbe .L_41abe0

            lea EDI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov ESI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl ESI,4
            sub EDI,EBX
            or ESI,3
            add RDI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b028:

            mov BYTE PTR [RAX],SIL
            add RAX,20
            cmp RAX,RDI
            jne .L_41b028

            jmp .L_41abe0
.L_41b039:

            mov ESI,ECX
            mov EBP,1
.L_41b040:

            lea RDI,QWORD PTR [RIP+.L_41f664]
.L_41b047:

            add ESI,1
            cmp ECX,ESI
            je .L_41b315

            mov R13D,ESI
            mov R12D,5
            jmp .L_41ab32
.L_41b060:

            cmp R12D,5
            je .L_41b25b

            cmp R12D,6
            je .L_41b1e1

            cmp R12D,1
            jne .L_41ab27

            mov EDI,EBX
            mov EBX,R13D
.L_41b083:

            lea R12D,DWORD PTR [RBX-1]
            lea R11,QWORD PTR [R10+35]
.L_41b08b:

            cmp EDI,EBX
            jae .L_41b0bd

            mov ESI,R12D
            mov R13D,EDI
            mov R8D,EBP
            sub ESI,EDI
            shl R8D,4
            imul RAX,R13,20
            add RSI,R13
            imul RSI,RSI,20
            lea RAX,QWORD PTR [R10+RAX*1+15]
            add RSI,R11
.L_41b0b1:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_41b0b1
.L_41b0bd:

            add EBP,1
            cmp EBP,16
            je .L_41b2be

            cmp ECX,EBX
            je .L_41b363

            mov ESI,EBX
            mov R13D,EBX
            mov R12D,1
            jmp .L_41ab32
.L_41b0e1:

            mov R13D,EBX
            mov R12D,5
.L_41b0ea:

            cmp R13D,EBX
            jbe .L_41abe0

            lea EDI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov ESI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl ESI,4
            sub EDI,EBX
            or ESI,4
            add RDI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b120:

            mov BYTE PTR [RAX],SIL
            add RAX,20
            cmp RDI,RAX
            jne .L_41b120

            jmp .L_41abe0
.L_41b131:

            mov R13D,EBX
            mov R12D,5
.L_41b13a:

            cmp R13D,EBX
            jbe .L_41abe0

            lea EDI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov ESI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl ESI,4
            sub EDI,EBX
            or ESI,1
            add RDI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b170:

            mov BYTE PTR [RAX],SIL
            add RAX,20
            cmp RAX,RDI
            jne .L_41b170

            jmp .L_41abe0
.L_41b181:

            mov ESI,ECX
            mov R12D,5
.L_41b189:

            add ESI,1
            mov R13D,ESI
            jmp .L_41ab2a
.L_41b194:

            mov R13D,EBX
            mov R12D,5
.L_41b19d:

            cmp R13D,EBX
            jbe .L_41abe0

            lea ESI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            sub ESI,EBX
            add RSI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b1d0:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_41b1d0

            jmp .L_41abe0
.L_41b1e1:

            mov ESI,R13D
.L_41b1e4:

            lea R13D,DWORD PTR [RSI-1]
            lea R12,QWORD PTR [R10+35]
            lea R11,QWORD PTR [RIP+.L_41f844]
            mov EDI,EBX
.L_41b1f5:

            cmp EDI,ESI
            jae .L_41b237

            mov EBX,EDI
            mov R8D,EBP
            imul RAX,RBX,20
            shl R8D,4
            or R8D,5
            lea RAX,QWORD PTR [R10+RAX*1+15]
            mov QWORD PTR [RSP-8],RAX
            mov EAX,R13D
            sub EAX,EDI
            mov RDI,RAX
            mov RAX,QWORD PTR [RSP-8]
            add RDI,RBX
            imul RDI,RDI,20
            add RDI,R12
.L_41b22b:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RAX,RDI
            jne .L_41b22b
.L_41b237:

            add EBP,1
            cmp EBP,16
            je .L_41b2db

            cmp ECX,ESI
            je .L_41b8c5

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_41ab32
.L_41b25b:

            mov EDI,EBX
            mov EBX,R13D
.L_41b260:

            lea R11D,DWORD PTR [RBX-1]
            lea R8,QWORD PTR [R10+35]
.L_41b268:

            cmp EDI,EBX
            jae .L_41b29e

            mov ESI,R11D
            mov R13D,EDI
            mov R12D,EBP
            sub ESI,EDI
            shl R12D,4
            imul RAX,R13,20
            add RSI,R13
            or R12D,4
            imul RSI,RSI,20
            lea RAX,QWORD PTR [R10+RAX*1+15]
            add RSI,R8
.L_41b292:

            mov BYTE PTR [RAX],R12B
            add RAX,20
            cmp RSI,RAX
            jne .L_41b292
.L_41b29e:

            add EBP,1
            cmp EBP,16
            je .L_41b2f8

            cmp ECX,EBX
            je .L_41bc18

            mov ESI,EBX
            mov R13D,EBX
            mov R12D,5
            jmp .L_41ab32
.L_41b2be:

            cmp ECX,EBX
            je .L_41b907

            mov ESI,EBX
            mov R13D,EBX
            mov EBP,1
            mov R12D,1
            jmp .L_41ab32
.L_41b2db:

            cmp ECX,ESI
            je .L_41bc63

            mov EBX,ESI
            mov R13D,ESI
            mov EBP,1
            mov R12D,6
            jmp .L_41ab32
.L_41b2f8:

            cmp ECX,EBX
            je .L_41b3a8

            mov ESI,EBX
            mov R13D,EBX
            mov EBP,1
            mov R12D,5
            jmp .L_41ab32
.L_41b315:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41bee0

            sub EAX,1
            cmp AL,23
            ja .L_41bed0

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b358:

            pop RBX
.L_41b359:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41b363:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41b69d

            sub EAX,1
            cmp AL,23
            ja .L_41b68d

            lea RDI,QWORD PTR [RIP+.L_41f6c4]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_41b3a8:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41b590

            sub EAX,1
            mov ESI,ECX
            mov EBP,1
            cmp AL,23
            ja .L_41b57b

            lea RDI,QWORD PTR [RIP+.L_41f724]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_41b3f4:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41aba4
.L_41b401:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41ac04
.L_41b40e:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41aba4
.L_41b420:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41ac04
.L_41b432:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41ac5b
.L_41b444:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41aca9
.L_41b456:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41acf1
.L_41b468:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41ad39
.L_41b47a:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41ad89
.L_41b48c:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41add9
.L_41b49e:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41ae29
.L_41b4b0:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41ae79
.L_41b4c2:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41aec1
.L_41b4d4:

            mov ESI,ECX
            mov EBP,1
            jmp .L_41af0a
.L_41b4e0:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41af32
.L_41b4f2:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_41aff2
.L_41b505:

            mov ESI,ECX
            mov EBP,1
            jmp .L_41af7d
.L_41b511:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_41afa6
.L_41b524:

            mov EBP,1
.L_41b529:

            mov EDI,EBX
            jmp .L_41b268
.L_41b530:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_41b0ea
.L_41b543:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_41b13a
.L_41b556:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41b189
.L_41b568:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_41b19d
.L_41b57b:

            mov R13D,EBX
            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41ab27
.L_41b590:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41ab27
.L_41b5a5:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41ac5b
.L_41b5b2:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41aca9
.L_41b5bf:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41acf1
.L_41b5cc:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41ad39
.L_41b5d9:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41ad89
.L_41b5e6:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41add9
.L_41b5f3:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41ae29
.L_41b600:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41ae79
.L_41b60d:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41aec1
.L_41b61a:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41af32
.L_41b627:

            mov R13D,EBX
            mov R12D,1
            jmp .L_41aff2
.L_41b635:

            mov R13D,EBX
            mov R12D,1
            jmp .L_41afa6
.L_41b643:

            mov ESI,ECX
            jmp .L_41b040
.L_41b64a:

            mov EBP,1
.L_41b64f:

            mov EDI,EBX
            jmp .L_41b08b
.L_41b656:

            mov R13D,EBX
            mov R12D,1
            jmp .L_41b0ea
.L_41b664:

            mov R13D,EBX
            mov R12D,1
            jmp .L_41b13a
.L_41b672:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41b189
.L_41b67f:

            mov R13D,EBX
            mov R12D,1
            jmp .L_41b19d
.L_41b68d:

            mov R13D,EBX
            mov ESI,ECX
            mov R12D,1
            jmp .L_41ab27
.L_41b69d:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,1
            jmp .L_41ab27
.L_41b6ad:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            jmp .L_41ab17
.L_41b6c9:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41b69d

            sub EAX,1
            cmp AL,23
            ja .L_41b8b5

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_41b707:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41b87b

            sub EAX,1
            cmp AL,23
            ja .L_41b86b

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_41b749:

            mov R13D,ESI
            mov R12D,1
            jmp .L_41aff2
.L_41b757:

            mov R13D,ESI
            mov R12D,1
            jmp .L_41afa6
.L_41b765:

            mov EDI,EBX
            mov EBX,ESI
            jmp .L_41b083
.L_41b76e:

            mov ESI,ECX
            jmp .L_41af84
.L_41b775:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41aba4
.L_41b782:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41ac04
.L_41b78f:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41ac5b
.L_41b79c:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41aca9
.L_41b7a9:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41acf1
.L_41b7b6:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41ad39
.L_41b7c3:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41ad89
.L_41b7d0:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41add9
.L_41b7dd:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41ae29
.L_41b7ea:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41ae79
.L_41b7f7:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41aec1
.L_41b804:

            mov ESI,ECX
            jmp .L_41af11
.L_41b80b:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41af32
.L_41b818:

            mov R13D,ESI
            mov R12D,6
            jmp .L_41aff2
.L_41b826:

            mov R13D,ESI
            mov R12D,6
            jmp .L_41afa6
.L_41b834:

            mov R13D,ESI
            mov R12D,6
            jmp .L_41b0ea
.L_41b842:

            mov R13D,ESI
            mov R12D,6
            jmp .L_41b13a
.L_41b850:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41b189
.L_41b85d:

            mov R13D,ESI
            mov R12D,6
            jmp .L_41b19d
.L_41b86b:

            mov R13D,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41ab27
.L_41b87b:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,6
            jmp .L_41ab27
.L_41b88b:

            mov R13D,ESI
            mov R12D,1
            jmp .L_41b0ea
.L_41b899:

            mov R13D,ESI
            mov R12D,1
            jmp .L_41b13a
.L_41b8a7:

            mov R13D,ESI
            mov R12D,1
            jmp .L_41b19d
.L_41b8b5:

            mov R13D,ESI
            mov R12D,1
            mov ESI,ECX
            jmp .L_41ab27
.L_41b8c5:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41bc06

            sub EAX,1
            cmp AL,23
            ja .L_41bbf4

            movzx EAX,AL
            movsxd RAX,DWORD PTR [R11+RAX*4]
            add RAX,R11
            jmp RAX
.L_41b907:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41bacc

            sub EAX,1
            cmp AL,23
            ja .L_41bab7

            lea RDI,QWORD PTR [RIP+.L_41f8a4]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_41b950:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41aba4
.L_41b95f:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41ac04
.L_41b96e:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41aba4
.L_41b980:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41ac04
.L_41b992:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41ac5b
.L_41b9a4:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41aca9
.L_41b9b6:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41acf1
.L_41b9c8:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41ad39
.L_41b9da:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41ad89
.L_41b9ec:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41add9
.L_41b9fe:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41ae29
.L_41ba10:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41ae79
.L_41ba22:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41aec1
.L_41ba34:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41af32
.L_41ba46:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_41aff2
.L_41ba59:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_41afa6
.L_41ba6c:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_41b0ea
.L_41ba7f:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_41b13a
.L_41ba92:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41b189
.L_41baa4:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_41b19d
.L_41bab7:

            mov R13D,EBX
            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41ab27
.L_41bacc:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41ab27
.L_41bae1:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41ac5b
.L_41baf0:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41aca9
.L_41baff:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41acf1
.L_41bb0e:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41ad39
.L_41bb1d:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41ad89
.L_41bb2c:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41add9
.L_41bb3b:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41ae29
.L_41bb4a:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41ae79
.L_41bb59:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41aec1
.L_41bb68:

            mov EBX,ECX
            mov ESI,ECX
            jmp .L_41af0a
.L_41bb71:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41af32
.L_41bb80:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_41aff2
.L_41bb90:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_41afa6
.L_41bba0:

            mov EBX,ECX
            mov ESI,ECX
            jmp .L_41b040
.L_41bba9:

            mov EBP,1
.L_41bbae:

            mov EDI,ESI
            jmp .L_41b1f5
.L_41bbb5:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_41b0ea
.L_41bbc5:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_41b13a
.L_41bbd5:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41b189
.L_41bbe4:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_41b19d
.L_41bbf4:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41ab27
.L_41bc06:

            mov EBX,ECX
            mov R13D,ECX
            mov ESI,ECX
            mov R12D,6
            jmp .L_41ab27
.L_41bc18:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41bee0

            sub EAX,1
            mov ESI,ECX
            cmp AL,23
            ja .L_41be5c

            lea RDI,QWORD PTR [RIP+.L_41f904]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_41bc63:

            lea RAX,QWORD PTR [RIP+.L_41fb60]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41b358

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41be45

            sub EAX,1
            mov EBP,1
            mov EDI,ECX
            cmp AL,23
            ja .L_41be2e

            lea RBX,QWORD PTR [RIP+.L_41f964]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RBX+RAX*4]
            add RAX,RBX
            jmp RAX
.L_41bcb3:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41aba4
.L_41bcc7:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41ac04
.L_41bcdb:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41ac5b
.L_41bcef:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41aca9
.L_41bd03:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41acf1
.L_41bd17:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41ad39
.L_41bd2b:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41ad89
.L_41bd3f:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41add9
.L_41bd53:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41ae29
.L_41bd67:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41ae79
.L_41bd7b:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41aec1
.L_41bd8f:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41af32
.L_41bda3:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_41aff2
.L_41bdb8:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_41afa6
.L_41bdcd:

            mov EBX,EDI
            mov EBP,1
            mov ESI,ECX
            jmp .L_41b040
.L_41bddb:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_41b0ea
.L_41bdf0:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_41b13a
.L_41be05:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41b189
.L_41be19:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_41b19d
.L_41be2e:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41ab27
.L_41be45:

            mov EBX,ECX
            mov R13D,ECX
            mov ESI,ECX
            mov R12D,6
            mov EBP,1
            jmp .L_41ab27
.L_41be5c:

            mov R13D,EBX
            mov ESI,ECX
            mov R12D,5
            jmp .L_41ab27
.L_41be6c:

            mov ESI,ECX
            jmp .L_41af0a
.L_41be73:

            mov R13D,ESI
            mov R12D,5
            jmp .L_41aff2
.L_41be81:

            mov ESI,ECX
            jmp .L_41af7d
.L_41be88:

            mov R13D,ESI
            mov R12D,5
            jmp .L_41afa6
.L_41be96:

            mov ESI,ECX
            jmp .L_41b047
.L_41be9d:

            mov EDI,EBX
            mov EBX,ESI
            jmp .L_41b260
.L_41bea6:

            mov R13D,ESI
            mov R12D,5
            jmp .L_41b0ea
.L_41beb4:

            mov R13D,ESI
            mov R12D,5
            jmp .L_41b13a
.L_41bec2:

            mov R13D,ESI
            mov R12D,5
            jmp .L_41b19d
.L_41bed0:

            mov R13D,ESI
            mov R12D,5
            mov ESI,ECX
            jmp .L_41ab27
.L_41bee0:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,5
            jmp .L_41ab27
.L_41bef0:

            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            mov R12D,EDX
            sub RSP,8
.L_41bf05:

            mov RAX,QWORD PTR [RDI+24]
            mov RDX,QWORD PTR [RAX+208]
            mov RDI,RAX
            call QWORD PTR [RAX+144]

            mov ECX,7168
            xor EDX,EDX
            bt ECX,EAX
            jb .L_41bf6e

            cmp EBX,2479
            sete DL
            cmp R12D,2492
            sete AL
            and DL,AL
            jne .L_41bf80

            test EBX,EBX
            mov RAX,QWORD PTR [RBP+24]
            mov DWORD PTR [R13],0
            je .L_41bf6e

            test R12D,R12D
            je .L_41bf6e

            mov EDX,R12D
            mov R8,QWORD PTR [RAX+232]
            mov RCX,R13
            mov ESI,EBX
            mov RDI,RAX
            call QWORD PTR [RAX+168]

            test EAX,EAX
            setne DL
.L_41bf6e:

            add RSP,8
.L_41bf72:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bf80:

            mov DWORD PTR [R13],2527
            add RSP,8
            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41bf95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bfa0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41bfaa:

            mov EAX,DWORD PTR [RSI+184]
            mov RBP,QWORD PTR [RSI+200]
            test EAX,EAX
            je .L_41c138

            sub EAX,1
            lea R13,QWORD PTR [RIP+.L_424170]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R12,QWORD PTR [RBP+RAX*4+20]
            jmp .L_41c034
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bfd8:

            lea EDX,DWORD PTR [RBX-2674]
            cmp EDX,1
            jbe .L_41c100

            lea EDX,DWORD PTR [RBX-7413]
            cmp EDX,1
            jbe .L_41c100

            lea EDX,DWORD PTR [RBX-7394]
            cmp EDX,6
            jbe .L_41c009

            cmp EBX,7405
            jne .L_41c058
.L_41c009:

            mov EAX,10
            mov EDX,14
.L_41c013:

            cmp EBX,2817
            mov ECX,7
            cmove EDX,ECX
.L_41c021:

            mov BYTE PTR [RBP+18],AL
            mov BYTE PTR [RBP+19],DL
            add RBP,20
            cmp R12,RBP
            je .L_41c138
.L_41c034:

            mov EBX,DWORD PTR [RBP]
            mov EDI,EBX
            call .L_424230

            lea EDX,DWORD PTR [RBX-2387]
            cmp EDX,1
            ja .L_41bfd8

            mov EAX,8
.L_41c04e:

            mov EDX,14
            jmp .L_41c013
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c058:

            lea EDX,DWORD PTR [RBX-43250]
            cmp EDX,5
            jbe .L_41c0f0

            lea EDX,DWORD PTR [RBX-7401]
            cmp EDX,3
            jbe .L_41c0f0

            lea EDX,DWORD PTR [RBX-7406]
            cmp EDX,3
            jbe .L_41c0f0

            cmp EBX,6086
            movzx EDX,AH
            je .L_41c120

            lea ECX,DWORD PTR [RBX-8208]
            cmp ECX,1
            jbe .L_41c148

            cmp EBX,9676
            mov ECX,12
            je .L_41c0c0

            and EAX,127
            mov ESI,202758
            movzx ECX,AX
            bt ESI,ECX
            jae .L_41c152

            nop
            nop
            nop
            nop
.L_41c0c0:

            lea RAX,QWORD PTR [RIP+.L_424144]
            mov EDX,2352
            jmp .L_41c0d6
          .byte 0x66
          .byte 0x90
.L_41c0d0:

            mov EDX,DWORD PTR [RAX]
            add RAX,4
.L_41c0d6:

            cmp EBX,EDX
            je .L_41c110

            cmp R13,RAX
            jne .L_41c0d0

            mov EAX,ECX
            mov EDX,4
            jmp .L_41c013
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c0f0:

            mov EAX,18
            jmp .L_41c04e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c100:

            mov ECX,1
            jmp .L_41c0c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c110:

            mov EAX,16
            mov EDX,4
            jmp .L_41c013
          .byte 0x90
.L_41c120:

            mov EAX,3
            mov BYTE PTR [RBP+19],DL
            add RBP,20
            mov BYTE PTR [RBP-2],AL
            cmp R12,RBP
            jne .L_41c034
.L_41c138:

            add RSP,8
.L_41c13c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c148:

            mov ECX,11
            jmp .L_41c0c0
.L_41c152:

            cmp AX,7
            jne .L_41c33b

            cmp EDX,6
            je .L_41c290

            jbe .L_41c200

            cmp EDX,8
            je .L_41c220

            cmp EDX,11
            jne .L_41c2e0

            mov EAX,EBX
            and EAX,4294967168
            cmp EAX,2304
            je .L_41c280

            mov EDX,EBX
            xor DL,DL
            cmp EDX,2560
            je .L_41c270

            cmp EAX,2432
            je .L_41c270

            cmp EAX,2816
            je .L_41c311

            cmp EAX,2944
            je .L_41c270

            cmp EAX,3072
            je .L_41c2f9

            cmp EAX,3200
            je .L_41c320

            cmp EAX,3328
            je .L_41c270
.L_41c1df:

            cmp EAX,3456
            je .L_41c280

            cmp EAX,6016
            je .L_41c270
.L_41c1f1:

            mov EAX,7
            mov EDX,9
            jmp .L_41c013
.L_41c200:

            cmp EDX,3
            jne .L_41c2e0

            mov EAX,7
            mov EDX,2
            jmp .L_41c013
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c220:

            mov EAX,EBX
            xor AL,AL
            cmp EAX,2304
            je .L_41c280

            cmp EAX,2560
            je .L_41c270

            mov EDX,EBX
            and EDX,4294967168
            cmp EDX,2816
            je .L_41c1f1

            cmp EDX,2944
            je .L_41c270

            cmp EAX,3072
            je .L_41c2c8

            cmp EDX,3328
            je .L_41c270

            cmp EDX,3456
            je .L_41c280

            cmp EDX,6016
            jne .L_41c1f1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c270:

            mov EDX,12
            mov EAX,7
            jmp .L_41c021
          .byte 0x90
.L_41c280:

            mov EDX,9
            mov EAX,7
            jmp .L_41c021
          .byte 0x90
.L_41c290:

            mov EAX,EBX
            and EAX,4294967168
            cmp EAX,2304
            je .L_41c280

            cmp EAX,2560
            je .L_41c270

            cmp EAX,2688
            je .L_41c280

            cmp EAX,2816
            je .L_41c2ea

            cmp EAX,2944
            je .L_41c280

            mov EDX,EBX
            xor DL,DL
            cmp EDX,3072
            jne .L_41c1df
.L_41c2c8:

            mov EDX,7
            mov EAX,7
            jmp .L_41c021
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c2e0:

            mov EAX,7
            jmp .L_41c013
.L_41c2ea:

            mov EAX,7
            mov EDX,5
            jmp .L_41c013
.L_41c2f9:

            cmp EBX,3139
            mov EAX,7
            sbb EDX,EDX
            and EDX,4294967294
            add EDX,9
            jmp .L_41c021
.L_41c311:

            mov EAX,7
            mov EDX,12
            jmp .L_41c013
.L_41c320:

            sub EBX,3267
            mov EAX,7
            cmp EBX,20
            sbb EDX,EDX
            and EDX,2
            add EDX,7
            jmp .L_41c021
.L_41c33b:

            mov ESI,263936
            shr ESI,CL
            mov ECX,14
            and SIL,1
            cmovne EDX,ECX
            jmp .L_41c013
.L_41c353:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c360:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_41c36e:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RCX
            xor ECX,ECX
            mov ECX,DWORD PTR [RDX+184]
            mov QWORD PTR [RSP+16],RDI
            mov QWORD PTR [RSP+8],RDX
            test ECX,ECX
            mov DWORD PTR [RSP+28],ECX
            je .L_41c698

            mov R12,QWORD PTR [RDX+200]
            xor EBX,EBX
            add EBX,1
            cmp ECX,EBX
            movzx EDX,BYTE PTR [R12+15]
            lea RAX,QWORD PTR [R12+35]
            je .L_41c3c8

            nop
            nop
            nop
.L_41c3b8:

            add RAX,20
            cmp DL,BYTE PTR [RAX-20]
            jne .L_41c3cc

            add EBX,1
            cmp ECX,EBX
            jne .L_41c3b8
.L_41c3c8:

            mov EBX,DWORD PTR [RSP+28]
.L_41c3cc:

            xor ECX,ECX
            mov R15D,96
            mov R13D,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c3e0:

            mov RAX,QWORD PTR [RSP+16]
            mov ESI,R13D
            mov R8,QWORD PTR [RAX+1064]
            lea RAX,QWORD PTR [RSI+RSI*4]
            lea RCX,QWORD PTR [R12+RAX*4]
            mov EDX,DWORD PTR [R8+12]
            test EDX,EDX
            je .L_41c6c0

            cmp R13D,EBX
            jae .L_41cf40

            lea EDI,DWORD PTR [RBX-1]
            mov RAX,RCX
            sub EDI,R13D
            add RSI,RDI
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R12+RSI*4+20]
            jmp .L_41c431
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c428:

            add RAX,20
            cmp RAX,RSI
            je .L_41c460
.L_41c431:

            cmp EDX,DWORD PTR [RAX]
            jne .L_41c428

            movzx EDI,WORD PTR [RAX+12]
            mov R9D,EDI
            and R9D,96
            cmp R9W,96
            jne .L_41c428

            and EDI,4294967199
            mov BYTE PTR [RAX+18],4
            add RAX,20
            mov WORD PTR [RAX-8],DI
            cmp RAX,RSI
            jne .L_41c431

            nop
            nop
            nop
            nop
            nop
.L_41c460:

            mov EDX,DWORD PTR [R8+96]
            test EDX,EDX
            setne BYTE PTR [RSP]
            cmp BYTE PTR [RCX+19],3
            jbe .L_41c6dd
.L_41c474:

            lea R10D,DWORD PTR [R13+1]
            mov EBP,R13D
            nop
            nop
            nop
            nop
            nop
.L_41c480:

            cmp BYTE PTR [RSP],0
            je .L_41c4d0

            lea EAX,DWORD PTR [RBP+1]
            cmp EAX,EBX
            jae .L_41c4e8

            mov ESI,EAX
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RDI,QWORD PTR [R12+RSI*4]
            test DWORD PTR [RDI+4],EDX
            jne .L_41cf5e

            lea ESI,DWORD PTR [RBP+2]
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R12+RSI*4]
            jmp .L_41c4c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c4b0:

            mov RDI,RSI
            add RSI,20
            test DWORD PTR [RDI+4],EDX
            jne .L_41cf5e
.L_41c4c0:

            add EAX,1
            cmp EAX,EBX
            jb .L_41c4b0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c4d0:

            mov RAX,QWORD PTR [RSP+8]
            cmp DWORD PTR [RAX+148],1298954605
            je .L_41caa0

            nop
            nop
            nop
.L_41c4e8:

            cmp EBP,R13D
            jbe .L_41c4fe

            mov EAX,EBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            cmp BYTE PTR [RAX+19],5
            adc EBP,-1
.L_41c4fe:

            cmp EBP,EBX
            je .L_41c713
.L_41c506:

            cmp EBP,EBX
            jae .L_41c850

            cmp EBP,R13D
            jbe .L_41c577

            mov EAX,EBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_41cfe9

            movzx EAX,BYTE PTR [RAX+18]
            mov EDX,16408
            bt EDX,EAX
            jae .L_41cfe9

            lea EDX,DWORD PTR [RBP-1]
            mov EDI,16408
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4+12]
            jmp .L_41c570
          .byte 0x90
.L_41c550:

            test BYTE PTR [RDX],32
            mov RSI,RDX
            jne .L_41c830

            movzx ESI,BYTE PTR [RSI+6]
            sub RDX,20
            bt EDI,ESI
            jae .L_41c830

            sub EAX,1
.L_41c570:

            cmp EAX,R13D
            mov EBP,EAX
            jne .L_41c550
.L_41c577:

            cmp R10D,EBX
            mov R9D,R10D
            jae .L_41c58d
.L_41c57f:

            movzx EDI,BYTE PTR [RCX+19]
.L_41c583:

            cmp DIL,1
            je .L_41c870
.L_41c58d:

            cmp BYTE PTR [RSP],0
            je .L_41c5e8
.L_41c593:

            lea EDX,DWORD PTR [RBP+1]
            cmp EDX,EBX
            jae .L_41c5e8

            mov EAX,EDX
            mov EDI,DWORD PTR [R8+96]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R9,QWORD PTR [R12+RAX*4]
            test DWORD PTR [R9+4],EDI
            jne .L_41cd58

            lea EAX,DWORD PTR [RBP+2]
            mov R14D,EDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [R12+RAX*4]
            jmp .L_41c5d8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c5c8:

            mov RAX,RSI
            add RSI,20
            test DWORD PTR [RAX+4],EDI
            jne .L_41cd60
.L_41c5d8:

            add R14D,1
            cmp R14D,EBX
            jb .L_41c5c8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c5e8:

            cmp BYTE PTR [RCX+19],2
            je .L_41c800
.L_41c5f2:

            mov EDX,DWORD PTR [RIP+.L_6582a8]
            test EDX,EDX
            jne .L_41c601

            call .L_4063f0
.L_41c601:

            test BYTE PTR [RIP+.L_6582a8],2
            je .L_41c640

            mov RAX,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RAX+4]
            cmp EAX,1399418472
            je .L_41c640

            cmp EAX,1415671148
            je .L_41c640

            mov EAX,EBX
            sub EAX,R13D
            cmp EAX,1
            jbe .L_41c640

            mov RDI,QWORD PTR [RSP+8]
            mov EDX,EBX
            mov ESI,R13D
            call .L_403190

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c640:

            mov RAX,QWORD PTR [RSP+8]
            mov R12,QWORD PTR [RAX+200]
            mov ECX,DWORD PTR [RAX+184]
            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx ESI,BYTE PTR [R12+RAX*4+15]
            lea EAX,DWORD PTR [RBX+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R12+RAX*4+15]
            mov EAX,EBX
            jmp .L_41c67a
          .byte 0x66
          .byte 0x90
.L_41c670:

            add RDX,20
            cmp SIL,BYTE PTR [RDX-20]
            jne .L_41c681
.L_41c67a:

            add EAX,1
            cmp ECX,EAX
            ja .L_41c670
.L_41c681:

            cmp DWORD PTR [RSP+28],EBX
            mov R13D,EBX
            jbe .L_41c698

            mov EBX,EAX
            jmp .L_41c3e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c698:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41d280

            add RSP,120
.L_41c6b0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c6c0:

            mov EDX,DWORD PTR [R8+96]
            test EDX,EDX
            setne BYTE PTR [RSP]
            cmp R13D,EBX
            jae .L_41d2e5

            cmp BYTE PTR [RCX+19],3
            ja .L_41c474
.L_41c6dd:

            lea EAX,DWORD PTR [R13+1]
            mov EBP,R13D
            mov R10,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4+19]
            jmp .L_41c706
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c6f8:

            add RAX,20
            cmp BYTE PTR [RAX-20],3
            ja .L_41c480
.L_41c706:

            add EBP,1
            cmp EBP,EBX
            jb .L_41c6f8

            jne .L_41c850
.L_41c713:

            lea EAX,DWORD PTR [RBX-1]
            mov RBP,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_41c731

            cmp BYTE PTR [RAX+18],6
            je .L_41c506
.L_41c731:

            cmp R10D,EBX
            mov R9D,R10D
            mov EBP,EBX
            jae .L_41c58d
.L_41c73f:

            lea R14D,DWORD PTR [RBX-2]
            mov EBP,EBX
.L_41c745:

            mov RAX,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RAX+148]
            cmp EAX,1298954605
            je .L_41cc30

            cmp EAX,1415671148
            je .L_41cc30

            cmp R14D,R13D
            jbe .L_41c7a3

            mov EAX,R14D
            mov EDI,16528
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            nop
            nop
            nop
            nop
            nop
.L_41c780:

            test BYTE PTR [RAX+12],32
            mov RDX,RAX
            jne .L_41c796

            movzx ESI,BYTE PTR [RAX+18]
            bt EDI,ESI
            jb .L_41cbe4
.L_41c796:

            sub R14D,1
            sub RAX,20
            cmp R14D,R13D
            jne .L_41c780
.L_41c7a3:

            mov EAX,R14D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RDX+12],32
            je .L_41cbe0
.L_41c7b8:

            cmp R13D,EBP
            movzx EDI,BYTE PTR [RCX+19]
            jae .L_41c583

            cmp DIL,2
            je .L_41ce9e

            lea RAX,QWORD PTR [R10+R10*4]
            mov ESI,R13D
            lea RAX,QWORD PTR [R12+RAX*4+19]
            jmp .L_41c7ee
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c7e0:

            add RAX,20
            cmp BYTE PTR [RAX-20],2
            je .L_41cea8
.L_41c7ee:

            add ESI,1
            cmp ESI,EBP
            jne .L_41c7e0

            jmp .L_41c583
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c800:

            test R13D,R13D
            je .L_41c821

            lea EAX,DWORD PTR [R13-1]
            mov EDX,8190
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [R12+RAX*4+16]
            bt EDX,EAX
            jb .L_41c5f2
.L_41c821:

            mov EAX,DWORD PTR [R8+128]
            or DWORD PTR [RCX+4],EAX
            jmp .L_41c5f2
.L_41c830:

            cmp EBX,R10D
            mov R9D,R10D
            jbe .L_41c58d
.L_41c83c:

            cmp EBP,EBX
            je .L_41c73f
.L_41c844:

            lea R14D,DWORD PTR [RBP-1]
            jmp .L_41c745
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c850:

            cmp R10D,EBX
            mov R9D,R10D
            jae .L_41c58d

            cmp EBP,R13D
            jbe .L_41c57f

            jmp .L_41c83c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c870:

            cmp BYTE PTR [RCX+18],15
            movzx EAX,WORD PTR [RCX+12]
            sete DL
            xor ESI,ESI
            test AL,32
            je .L_41c88d

            shr AX,6
            xor EAX,1
            mov ESI,EAX
            and ESI,1
.L_41c88d:

            cmp DL,SIL
            je .L_41cfda

            mov RAX,QWORD PTR [R8]
            mov EAX,DWORD PTR [RAX+16]
            cmp EAX,1
            mov DWORD PTR [RSP+32],EAX
            je .L_41d2fc

            cmp DWORD PTR [RSP+32],12
            mov R11D,R9D
            je .L_41c919

            cmp R9D,EBP
            jae .L_41c903

            lea EDX,DWORD PTR [RBP-1]
            lea RAX,QWORD PTR [R11+R11*4]
            mov R14D,R9D
            mov EDI,16400
            sub EDX,R9D
            lea RAX,QWORD PTR [R12+RAX*4]
            add RDX,R11
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c8e0:

            test BYTE PTR [RAX+12],32
            mov R10,RAX
            jne .L_41c8f6

            movzx ESI,BYTE PTR [RAX+18]
            bt EDI,ESI
            jb .L_41ceee
.L_41c8f6:

            add RAX,20
            add R14D,1
            cmp RDX,RAX
            jne .L_41c8e0
.L_41c903:

            cmp DWORD PTR [RSP+32],5
            je .L_41d0b8

            cmp DWORD PTR [RSP+32],9
            je .L_41d04a
.L_41c919:

            cmp R9D,EBP
            jae .L_41c963

            lea EDX,DWORD PTR [RBP-1]
            lea RAX,QWORD PTR [R11+R11*4]
            mov R14D,R9D
            mov EDI,16400
            sub EDX,R9D
            lea RAX,QWORD PTR [R12+RAX*4]
            add RDX,R11
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4+20]
.L_41c940:

            test BYTE PTR [RAX+12],32
            mov R10,RAX
            jne .L_41c956

            movzx ESI,BYTE PTR [RAX+18]
            bt EDI,ESI
            jb .L_41ceee
.L_41c956:

            add RAX,20
            add R14D,1
            cmp RDX,RAX
            jne .L_41c940
.L_41c963:

            lea EAX,DWORD PTR [RBX-1]
            mov R14,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp R14D,R13D
            lea R10,QWORD PTR [R12+RAX*4]
            jbe .L_41c9a6

            cmp BYTE PTR [R10+19],14
            jne .L_41c9a6

            lea EAX,DWORD PTR [RBX-2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            jmp .L_41c99a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c990:

            sub RAX,20
            cmp BYTE PTR [RAX+39],14
            jne .L_41c9a6
.L_41c99a:

            sub R14D,1
            mov R10,RAX
            cmp R14D,R13D
            ja .L_41c990
.L_41c9a6:

            mov ESI,DWORD PTR [RIP+.L_6582a8]
            test ESI,ESI
            jne .L_41c9dd

            mov QWORD PTR [RSP+56],R11
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],R8
            call .L_4063f0

            mov R11,QWORD PTR [RSP+56]
            mov RCX,QWORD PTR [RSP+48]
            mov R10,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+32]
.L_41c9dd:

            test BYTE PTR [RIP+.L_6582a8],2
            je .L_41cffa
.L_41c9ea:

            cmp R14D,EBP
            lea EDX,DWORD PTR [R14+1]
            setae BYTE PTR [RSP+32]
.L_41c9f6:

            mov EAX,EDX
            sub EAX,R13D
            cmp EAX,1
            jbe .L_41ca35

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,R13D
            mov QWORD PTR [RSP+64],R11
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+48],R10
            mov QWORD PTR [RSP+40],R8
            call .L_403190

            mov R11,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+56]
            mov R10,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+40]
.L_41ca35:

            mov EAX,DWORD PTR [RCX+16]
            sub R14D,R13D
            mov RDI,RCX
            lea RDX,QWORD PTR [R14+R14*4]
            movdqu XMM0,XMMWORD PTR [RCX]
            mov QWORD PTR [RSP+48],R10
            mov QWORD PTR [RSP+40],R8
            mov DWORD PTR [RSP+96],EAX
            lea RAX,QWORD PTR [R11+R11*4]
            shl RDX,2
            movaps XMMWORD PTR [RSP+80],XMM0
            lea RSI,QWORD PTR [R12+RAX*4]
            call memmove@PLT

            mov R10,QWORD PTR [RSP+48]
            mov RCX,RAX
            mov EAX,DWORD PTR [RSP+96]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            cmp R13D,EBP
            mov R8,QWORD PTR [RSP+40]
            movups XMMWORD PTR [R10],XMM0
            mov DWORD PTR [R10+16],EAX
            jae .L_41c58d

            cmp BYTE PTR [RSP+32],1
            adc EBP,-1
            jmp .L_41c58d
          .byte 0x90
.L_41caa0:

            lea EDI,DWORD PTR [RBP+1]
            cmp EDI,EBX
            jae .L_41c4e8

            cmp EBX,EDI
            mov R11D,16400
            mov R14D,202758
            jbe .L_41cb89

            nop
.L_41cac0:

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RSI+12],32
            jne .L_41c4e8

            movzx EAX,BYTE PTR [RSI+18]
            bt R15D,EAX
            jae .L_41cb19

            lea EDX,DWORD PTR [RDI+1]
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            jmp .L_41caf3
          .byte 0x66
          .byte 0x90
.L_41caf0:

            add EAX,1
.L_41caf3:

            cmp EAX,EBX
            mov EDI,EAX
            je .L_41c4e8

            test BYTE PTR [RDX+12],32
            mov RSI,RDX
            jne .L_41c4e8

            movzx R9D,BYTE PTR [RSI+18]
            add RDX,20
            bt R15D,R9D
            jb .L_41caf0
.L_41cb19:

            movzx EAX,BYTE PTR [RSI+18]
            bt R11D,EAX
            jae .L_41c4e8

            lea EDX,DWORD PTR [RDI+1]
            cmp EDX,EBX
            jae .L_41cb76

            mov EAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RSI+12],32
            jne .L_41cb76

            movzx EAX,BYTE PTR [RSI+18]
            bt R15D,EAX
            jae .L_41cbb6

            lea EAX,DWORD PTR [RDI+2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            jmp .L_41cb6f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41cb58:

            test BYTE PTR [RAX+12],32
            mov RSI,RAX
            jne .L_41cbb0

            movzx EDI,BYTE PTR [RSI+18]
            add RAX,20
            bt R15D,EDI
            jae .L_41cbb0
.L_41cb6f:

            add EDX,1
            cmp EDX,EBX
            jb .L_41cb58
.L_41cb76:

            lea EDI,DWORD PTR [RDX+1]
            cmp EDI,EBX
            jae .L_41c4e8
.L_41cb81:

            cmp EBX,EDI
            ja .L_41cac0
.L_41cb89:

            je .L_41c4e8

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RSI+12],32
            je .L_41cb19

            jmp .L_41c4e8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cbb0:

            test BYTE PTR [RSI+12],32
            jne .L_41cb76
.L_41cbb6:

            movzx EAX,BYTE PTR [RSI+18]
            bt R14D,EAX
            jae .L_41cb76

            cmp BYTE PTR [RSI+19],8
            jne .L_41cb76

            lea EDI,DWORD PTR [RDX+1]
            mov BYTE PTR [RSI+19],4
            mov EBP,EDX
            cmp EDI,EBX
            jb .L_41cb81

            jmp .L_41c4e8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cbe0:

            movzx ESI,BYTE PTR [RDX+18]
.L_41cbe4:

            mov EAX,16400
            bt EAX,ESI
            jae .L_41c7b8

            cmp BYTE PTR [RDX+19],2
            je .L_41c7b8

            lea EAX,DWORD PTR [R14+1]
            cmp EAX,EBX
            jae .L_41d0a7

            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            test BYTE PTR [RDX+12],32
            jne .L_41d0a7

            movzx EDX,BYTE PTR [RDX+18]
            bt R15D,EDX
            jae .L_41d0a7

            mov R14D,EAX
            nop
            nop
            nop
.L_41cc30:

            cmp R14D,R13D
            jbe .L_41c7b8

            mov EAX,R14D
            lea RDX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [R12+RDX*4+19],2
            je .L_41c7b8
.L_41cc4c:

            lea EDX,DWORD PTR [R14-1]
            mov QWORD PTR [RSP+32],R12
            mov DWORD PTR [RSP+40],EBX
            mov QWORD PTR [RSP+56],R8
            mov DWORD PTR [RSP+64],R9D
            sub RAX,RDX
            lea RSI,QWORD PTR [RDX+RDX*4]
            mov QWORD PTR [RSP+72],RCX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov EBX,EDX
            lea R10,QWORD PTR [R12+RSI*4]
            shl RAX,2
            mov QWORD PTR [RSP+48],RAX
            mov EAX,R13D
            mov R12,R10
            mov R13D,R14D
            mov R14D,EAX
            jmp .L_41cca0
.L_41cc90:

            sub R12,20
            cmp EBX,R14D
            je .L_41cd38
.L_41cc9d:

            sub EBX,1
.L_41cca0:

            cmp BYTE PTR [R12+19],2
            jne .L_41cc90

            cmp EBX,EBP
            jae .L_41ccb2

            cmp R13D,EBP
            adc EBP,-1
.L_41ccb2:

            mov EAX,DWORD PTR [R12+16]
            mov RDI,R12
            movdqu XMM0,XMMWORD PTR [R12]
            mov DWORD PTR [RSP+96],EAX
            mov EAX,R13D
            sub EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RSP+48]
            movaps XMMWORD PTR [RSP+80],XMM0
            shl RDX,2
            lea RSI,QWORD PTR [RAX+R12*1]
            call memmove@PLT

            mov EAX,R13D
            mov RCX,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RSP+96]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX+16],EDX
            lea EDX,DWORD PTR [RBP+1]
            movups XMMWORD PTR [RAX],XMM0
            mov EAX,DWORD PTR [RSP+40]
            cmp EDX,EAX
            cmova EDX,EAX
            mov EAX,EDX
            sub EAX,R13D
            cmp EAX,1
            jbe .L_41cd27

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,R13D
            call .L_403190
.L_41cd27:

            sub R13D,1
            sub R12,20
            cmp EBX,R14D
            jne .L_41cc9d
.L_41cd38:

            mov R12,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+56]
            mov R13D,R14D
            mov EBX,DWORD PTR [RSP+40]
            mov R9D,DWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+72]
            jmp .L_41c57f
.L_41cd58:

            mov RAX,R9
            mov R14D,EDX
            nop
            nop
.L_41cd60:

            movzx ESI,WORD PTR [RAX+12]
            test SIL,32
            je .L_41c5e8

            and ESI,64
            jne .L_41c5e8

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RDI+148]
            cmp ESI,1415671148
            je .L_41d106

            cmp ESI,1298954605
            je .L_41d106

            cmp EBP,R13D
            jbe .L_41d271

            lea ESI,DWORD PTR [RBP-1]
            mov EDI,EBP
            mov QWORD PTR [RSP],R12
            mov DWORD PTR [RSP+32],EDX
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R12+RSI*4]
            jmp .L_41cdc3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cdc0:

            mov EDI,R11D
.L_41cdc3:

            test BYTE PTR [RSI+12],32
            lea R11D,DWORD PTR [RDI-1]
            mov R10,RSI
            jne .L_41cde4

            movzx R12D,BYTE PTR [RSI+18]
            mov EDX,16528
            bt EDX,R12D
            jb .L_41d1ba
.L_41cde4:

            sub RSI,20
            cmp R11D,R13D
            jne .L_41cdc0

            mov R12,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RDI+RDI*4]
            mov EBP,R13D
            lea R9,QWORD PTR [R12+RDX*4]
.L_41cdfc:

            lea EDX,DWORD PTR [R14+1]
            mov ESI,EDX
            sub ESI,EBP
            cmp ESI,1
            jbe .L_41ce45

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,EBP
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+48],R9
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP],R8
            call .L_403190

            mov RCX,QWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+48]
            mov R10,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP]
.L_41ce45:

            sub R14D,EBP
            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDX,QWORD PTR [R14+R14*4]
            mov EAX,DWORD PTR [RAX+16]
            mov RSI,R10
            mov RDI,R9
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+32],R8
            shl RDX,2
            mov QWORD PTR [RSP],R10
            movaps XMMWORD PTR [RSP+80],XMM0
            mov DWORD PTR [RSP+96],EAX
            call memmove@PLT

            mov R10,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RSP+96]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            mov R8,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+40]
            movups XMMWORD PTR [R10],XMM0
            mov DWORD PTR [R10+16],EAX
            jmp .L_41c5e8
.L_41ce9e:

            mov ESI,R13D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cea8:

            lea EAX,DWORD PTR [RBP+1]
            cmp EAX,EBX
            cmova EAX,EBX
            mov EDX,EAX
            sub EAX,ESI
            cmp EAX,1
            jbe .L_41c583

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+48],RCX
            mov DWORD PTR [RSP+40],R9D
            mov QWORD PTR [RSP+32],R8
            call .L_403190

            mov RCX,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+32]
            mov R9D,DWORD PTR [RSP+40]
            movzx EDI,BYTE PTR [RCX+19]
            jmp .L_41c583
.L_41ceee:

            lea EDX,DWORD PTR [R14+1]
            cmp EDX,EBP
            jae .L_41cf30

            mov EAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_41cf30

            movzx ESI,BYTE PTR [RAX+18]
            bt R15D,ESI
            jae .L_41cf30

            lea ESI,DWORD PTR [R14+2]
            mov R10,RAX
            mov R14D,EDX
            mov BYTE PTR [RSP+32],0
            mov EDX,ESI
            jmp .L_41c9f6
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cf30:

            cmp R14D,EBP
            setae BYTE PTR [RSP+32]
            jmp .L_41c9f6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41cf40:

            mov EAX,DWORD PTR [R8+96]
            test EAX,EAX
            setne BYTE PTR [RSP]
            cmp R13D,EBX
            jne .L_41d2d4
.L_41cf53:

            mov EBP,EBX
            lea R10D,DWORD PTR [R13+1]
            jmp .L_41c577
.L_41cf5e:

            movzx EDX,WORD PTR [RDI+12]
            mov ESI,EDX
            and ESI,48
            cmp SI,48
            je .L_41d180

            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [R12+RDX*4]
.L_41cf7b:

            test BYTE PTR [RSI+12],32
            jne .L_41d1f7

            movzx EDX,BYTE PTR [RSI+18]
            mov EDI,16400
            bt EDI,EDX
            jae .L_41d1f7

            lea EDX,DWORD PTR [RAX+1]
            mov EBP,EAX
            mov EDI,16400
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            jmp .L_41cfc3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cfb0:

            test BYTE PTR [RDX+12],32
            jne .L_41cfcd

            movzx EAX,BYTE PTR [RSI+18]
            add RDX,20
            bt EDI,EAX
            jae .L_41cfcd
.L_41cfc3:

            add EBP,1
            mov RSI,RDX
            cmp EBP,EBX
            jb .L_41cfb0
.L_41cfcd:

            mov BYTE PTR [RSI+19],4
            mov BYTE PTR [RSP],0
            jmp .L_41c4d0
.L_41cfda:

            cmp BYTE PTR [RSP],0
            jne .L_41c593

            jmp .L_41c5f2
.L_41cfe9:

            cmp R10D,EBX
            mov R9D,R10D
            jb .L_41c844

            jmp .L_41c58d
.L_41cffa:

            test BYTE PTR [R10+12],32
            jne .L_41c9ea

            movzx EAX,BYTE PTR [R10+18]
            mov EDX,16400
            bt EDX,EAX
            jae .L_41c9ea

            lea EAX,DWORD PTR [RBP+1]
            cmp EAX,R14D
            jae .L_41c9ea
.L_41d024:

            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            cmp BYTE PTR [R12+RDX*4+18],7
            sete DL
            add EAX,1
            movzx EDX,DL
            sub R14D,EDX
            cmp EAX,R14D
            jb .L_41d024

            lea EDX,DWORD PTR [R14+1]
            jmp .L_41d0ee
.L_41d04a:

            cmp EBX,EBP
            jbe .L_41c919

            lea EAX,DWORD PTR [RBP+1]
            mov EDX,22528
            mov R14,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,BYTE PTR [R12+RAX*4+19]
            bt EDX,EAX
            jb .L_41d261

            mov ESI,22528
            jmp .L_41d09d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d080:

            lea EAX,DWORD PTR [R14+1]
            mov RDX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,BYTE PTR [R12+RAX*4+19]
            bt ESI,EAX
            jb .L_41d1a2

            mov R14D,EDX
.L_41d09d:

            cmp R14D,EBX
            jne .L_41d080

            jmp .L_41c919
.L_41d0a7:

            cmp R13D,R14D
            mov EAX,R14D
            jb .L_41cc4c

            jmp .L_41c7b8
.L_41d0b8:

            lea EAX,DWORD PTR [RBP+1]
            mov R14D,EBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4+19]
            jmp .L_41d0dd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d0d0:

            add RAX,20
            cmp BYTE PTR [RAX-20],5
            ja .L_41d0e5

            mov R14D,EDX
.L_41d0dd:

            lea EDX,DWORD PTR [R14+1]
            cmp EDX,EBX
            jb .L_41d0d0
.L_41d0e5:

            cmp R14D,EBX
            jae .L_41c919
.L_41d0ee:

            mov EAX,R14D
            cmp R14D,EBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            setae BYTE PTR [RSP+32]
            lea R10,QWORD PTR [R12+RAX*4]
            jmp .L_41c9f6
.L_41d106:

            mov ESI,EBP
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea R10,QWORD PTR [R12+RSI*4]
.L_41d110:

            cmp EBP,R13D
            jbe .L_41cdfc

            lea ESI,DWORD PTR [RBP-1]
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R12+RSI*4]
            test BYTE PTR [RSI+12],32
            jne .L_41cdfc
.L_41d12e:

            movzx ESI,BYTE PTR [RSI+18]
            mov EDI,16400
            bt EDI,ESI
            jae .L_41cdfc

            cmp EBX,EBP
            jbe .L_41cdfc

            test BYTE PTR [R10+12],32
            jne .L_41cdfc

            movzx ESI,BYTE PTR [R10+18]
            bt R15D,ESI
            jae .L_41cdfc

            lea ESI,DWORD PTR [RDX+1]
            mov R10,R9
            mov EBP,EDX
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea R9,QWORD PTR [R12+RSI*4]
            jmp .L_41cdfc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d180:

            and EDX,64
            je .L_41c4d0

            mov EDX,EAX
            cmp EAX,EBX
            mov EBP,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [R12+RDX*4]
            jb .L_41cf7b

            jmp .L_41cfcd
.L_41d1a2:

            cmp R14D,EBP
            setae BYTE PTR [RSP+32]
.L_41d1aa:

            mov EAX,R14D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [R12+RAX*4]
            jmp .L_41c9f6
.L_41d1ba:

            cmp R13D,EDI
            mov EDX,DWORD PTR [RSP+32]
            mov BYTE PTR [RSP+32],R12B
            mov R12,QWORD PTR [RSP]
            jae .L_41d299

            cmp BYTE PTR [RSP+32],7
            je .L_41d1fe
.L_41d1d7:

            mov EDX,EDI
            lea R9D,DWORD PTR [RDI+1]
            mov EBP,EDI
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R10,QWORD PTR [R12+RDX*4]
            mov RDX,R9
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [R12+R9*4]
            jmp .L_41d12e
.L_41d1f7:

            mov EBP,EAX
            jmp .L_41cfcd
.L_41d1fe:

            cmp EDX,R14D
            jae .L_41d2b5

            cmp BYTE PTR [R9+18],7
            je .L_41d285

            lea EDX,DWORD PTR [RBP+2]
            lea R9,QWORD PTR [RDX+RDX*4]
            lea R9,QWORD PTR [R12+R9*4+18]
            mov QWORD PTR [RSP],R9
            mov R9D,4294967294
            sub R9D,EBP
            mov EBP,R9D
            mov R9,QWORD PTR [RSP]
            add EBP,R14D
            add RDX,RBP
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4+18]
.L_41d23d:

            cmp RDX,R9
            je .L_41d1d7

            add R9,20
            cmp BYTE PTR [R9-20],7
            jne .L_41d23d

            mov EDX,EDI
            mov EBP,R11D
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R9,QWORD PTR [R12+RDX*4]
            mov EDX,EDI
            jmp .L_41d110
.L_41d261:

            mov EDX,R14D
            mov BYTE PTR [RSP+32],1
            mov R14D,EBP
            jmp .L_41d1aa
.L_41d271:

            mov EDX,EBP
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R10,QWORD PTR [R12+RDX*4]
            jmp .L_41cdfc
.L_41d280:

            call __stack_chk_fail@PLT
.L_41d285:

            mov R9D,EDI
            mov EDX,EDI
            mov EBP,R11D
            imul R9,R9,20
            add R9,R12
            jmp .L_41d110
.L_41d299:

            lea R9D,DWORD PTR [RDI+1]
            mov EDX,EDI
            mov EBP,EDI
            imul RDX,RDX,20
            imul R9,R9,20
            lea R10,QWORD PTR [R12+RDX*1]
            add R9,R12
            jmp .L_41cdfc
.L_41d2b5:

            lea R9D,DWORD PTR [RDI+1]
            mov R10D,EDI
            mov EBP,EDI
            imul R10,R10,20
            mov RDX,R9
            imul R9,R9,20
            add R10,R12
            add R9,R12
            jmp .L_41d12e
.L_41d2d4:

            lea R9D,DWORD PTR [R13+1]
            cmp EBX,R9D
            ja .L_41d2f4
.L_41d2dd:

            mov EBP,R13D
            jmp .L_41c58d
.L_41d2e5:

            je .L_41cf53

            lea R9D,DWORD PTR [R13+1]
            cmp R9D,EBX
            jae .L_41d2dd
.L_41d2f4:

            mov EBP,R13D
            jmp .L_41c57f
.L_41d2fc:

            lea RCX,QWORD PTR [RIP+.L_41fa60]
            lea RSI,QWORD PTR [RIP+.L_424170]
            lea RDI,QWORD PTR [RIP+.L_4241b0]
            mov EDX,1443
            call __assert_fail@PLT
.L_41d31b:

            nop
            nop
            nop
            nop
            nop
.L_41d320:

            push R13
            push R12
            mov ESI,168
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,8
.L_41d337:

            call calloc@PLT

            test RAX,RAX
            je .L_41d5d4

            lea R8,QWORD PTR [RIP+.L_44db00-170784]
            mov EDI,DWORD PTR [RBP+4]
            mov ESI,1147500129
            mov EDX,1
            mov QWORD PTR [RAX],R8
            lea RCX,QWORD PTR [R8+56]
            jmp .L_41d36e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d368:

            mov ESI,DWORD PTR [RCX]
            add RCX,28
.L_41d36e:

            cmp EDI,ESI
            je .L_41d84b

            add EDX,1
            cmp EDX,12
            jne .L_41d368
.L_41d37e:

            cmp EDI,1298954605
            mov BYTE PTR [RAX+8],0
            mov DWORD PTR [RAX+12],4294967295
            setne DIL
.L_41d393:

            mov EBX,DWORD PTR [RBP+56]
            mov R9,QWORD PTR [RBP+64]
            xor R8D,R8D
            mov BYTE PTR [RAX+28],DIL
            mov RSI,RBX
            mov R12,RBX
.L_41d3a7:

            cmp R8,R12
            jae .L_41d3f7

            lea RCX,QWORD PTR [R8+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R11,QWORD PTR [R9+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1919969382
            ja .L_41d3f2

            jmp .L_41d5df
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d3d0:

            lea RDX,QWORD PTR [R8+RCX*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [R9+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1919969382
            jbe .L_41d5e8

            mov RCX,RDX
.L_41d3f2:

            cmp R8,RCX
            jb .L_41d3d0
.L_41d3f7:

            mov QWORD PTR [RAX+16],0
            mov DWORD PTR [RAX+24],0
.L_41d406:

            mov BYTE PTR [RAX+44],DIL
            mov R12,RBX
            xor R8D,R8D
.L_41d410:

            cmp R8,R12
            jae .L_41d45f

            lea RCX,QWORD PTR [R8+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R11,QWORD PTR [R9+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1886545254
            ja .L_41d45a

            jmp .L_41d69a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d438:

            lea RDX,QWORD PTR [R8+RCX*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [R9+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1886545254
            jbe .L_41d6a0

            mov RCX,RDX
.L_41d45a:

            cmp R8,RCX
            jb .L_41d438
.L_41d45f:

            mov QWORD PTR [RAX+32],0
            mov DWORD PTR [RAX+40],0
.L_41d46e:

            mov BYTE PTR [RAX+60],DIL
            mov R12,RBX
            xor R8D,R8D
.L_41d478:

            cmp R8,R12
            jae .L_41d4c7

            lea RCX,QWORD PTR [R8+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R11,QWORD PTR [R9+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1651275622
            ja .L_41d4c2

            jmp .L_41d6b5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d4a0:

            lea RDX,QWORD PTR [RCX+R8*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [R9+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1651275622
            jbe .L_41d6c0

            mov RCX,RDX
.L_41d4c2:

            cmp RCX,R8
            ja .L_41d4a0
.L_41d4c7:

            mov QWORD PTR [RAX+48],0
            mov DWORD PTR [RAX+56],0
.L_41d4d6:

            mov BYTE PTR [RAX+76],DIL
            xor EDI,EDI
.L_41d4dc:

            cmp RDI,RSI
            jae .L_41d52f

            lea RCX,QWORD PTR [RDI+RSI*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R10,QWORD PTR [R9+RDX*4]
            mov R8D,DWORD PTR [R10]
            cmp R8D,1886614630
            ja .L_41d52a

            jmp .L_41d6d9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d508:

            lea RDX,QWORD PTR [RCX+RDI*1]
            shr RDX,1
            lea RSI,QWORD PTR [RDX+RDX*8]
            lea R10,QWORD PTR [R9+RSI*4]
            mov R8D,DWORD PTR [R10]
            cmp R8D,1886614630
            jbe .L_41d6e0

            mov RCX,RDX
.L_41d52a:

            cmp RCX,RDI
            ja .L_41d508
.L_41d52f:

            mov QWORD PTR [RAX+64],0
            mov DWORD PTR [RAX+72],0
.L_41d53e:

            lea R12,QWORD PTR [RIP+.L_423f20]
            xor R10D,R10D
            mov ECX,1
            lea RBP,QWORD PTR [R12+4]
            jmp .L_41d56c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d558:

            mov DWORD PTR [RAX+R10*1+80],EDX
            add R10,4
            cmp R10,84
            je .L_41d5d4
.L_41d567:

            mov ECX,DWORD PTR [RBP+R10*2]
.L_41d56c:

            xor EDX,EDX
            and ECX,1
            jne .L_41d558

            mov R11D,DWORD PTR [R12+R10*2]
            mov R13,RBX
            xor ESI,ESI
.L_41d57c:

            cmp RSI,R13
            jae .L_41d5c3

            lea RCX,QWORD PTR [RSI+R13*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R9+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp R11D,EDI
            jb .L_41d5be

            jmp .L_41d678
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d5a0:

            lea RDX,QWORD PTR [RCX+RSI*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R9+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp R11D,EDI
            jae .L_41d680

            mov RCX,RDX
.L_41d5be:

            cmp RCX,RSI
            ja .L_41d5a0
.L_41d5c3:

            xor EDX,EDX
            mov DWORD PTR [RAX+R10*1+80],EDX
            add R10,4
            cmp R10,84
            jne .L_41d567
.L_41d5d4:

            add RSP,8
.L_41d5d8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41d5df:

            mov RDX,RCX
            mov RCX,R12
            nop
            nop
            nop
.L_41d5e8:

            cmp R10D,1919969382
            je .L_41d5fd

            lea R8,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_41d3a7
.L_41d5fd:

            mov EDX,DWORD PTR [R11+12]
            cmp EDX,-1
            je .L_41d3f7

            mov R8D,DWORD PTR [RBP+904]
            cmp EDX,R8D
            ja .L_41d8ad

            test EDX,EDX
            jne .L_41d64f

            xor R10D,R10D
            xor ECX,ECX
            cmp EDX,R8D
            jae .L_41d66b
.L_41d628:

            shl RDX,4
            add RDX,QWORD PTR [RBP+912]
            mov R8D,DWORD PTR [RDX]
.L_41d636:

            add RCX,QWORD PTR [RBP+368]
            mov EDX,R8D
            sub EDX,R10D
            mov DWORD PTR [RAX+24],EDX
            mov QWORD PTR [RAX+16],RCX
            jmp .L_41d406
.L_41d64f:

            lea ECX,DWORD PTR [RDX-1]
            shl RCX,4
            add RCX,QWORD PTR [RBP+912]
            mov ECX,DWORD PTR [RCX]
            mov R10,RCX
            shl RCX,3
            cmp EDX,R8D
            jb .L_41d628
.L_41d66b:

            mov R8D,DWORD PTR [RBP+360]
            jmp .L_41d636
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d678:

            mov RDX,RCX
            mov RCX,R13
            nop
            nop
.L_41d680:

            cmp EDI,R11D
            jae .L_41d691

            lea RSI,QWORD PTR [RDX+1]
            mov R13,RCX
            jmp .L_41d57c
.L_41d691:

            mov EDX,DWORD PTR [R8+28]
            jmp .L_41d558
.L_41d69a:

            mov RDX,RCX
            mov RCX,R12
.L_41d6a0:

            cmp R10D,1886545254
            je .L_41d6f9

            lea R8,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_41d410
.L_41d6b5:

            mov RDX,RCX
            mov RCX,R12
            nop
            nop
            nop
            nop
            nop
.L_41d6c0:

            cmp R10D,1651275622
            je .L_41d765

            lea R8,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_41d478
.L_41d6d9:

            mov RDX,RCX
            mov RCX,RSI
            nop
.L_41d6e0:

            cmp R8D,1886614630
            je .L_41d7d1

            lea RDI,QWORD PTR [RDX+1]
            mov RSI,RCX
            jmp .L_41d4dc
.L_41d6f9:

            mov EDX,DWORD PTR [R11+12]
            cmp EDX,-1
            je .L_41d45f

            mov R8D,DWORD PTR [RBP+904]
            cmp EDX,R8D
            ja .L_41d8ad

            test EDX,EDX
            je .L_41d88f

            lea ECX,DWORD PTR [RDX-1]
            shl RCX,4
            add RCX,QWORD PTR [RBP+912]
            mov ECX,DWORD PTR [RCX]
            mov R10,RCX
            shl RCX,3
.L_41d735:

            cmp EDX,R8D
            jae .L_41d883

            shl RDX,4
            add RDX,QWORD PTR [RBP+912]
            mov R8D,DWORD PTR [RDX]
.L_41d74c:

            add RCX,QWORD PTR [RBP+368]
            mov EDX,R8D
            sub EDX,R10D
            mov DWORD PTR [RAX+40],EDX
            mov QWORD PTR [RAX+32],RCX
            jmp .L_41d46e
.L_41d765:

            mov EDX,DWORD PTR [R11+12]
            cmp EDX,-1
            je .L_41d4c7

            mov R8D,DWORD PTR [RBP+904]
            cmp EDX,R8D
            ja .L_41d8ad

            test EDX,EDX
            je .L_41d841

            lea ECX,DWORD PTR [RDX-1]
            shl RCX,4
            add RCX,QWORD PTR [RBP+912]
            mov ECX,DWORD PTR [RCX]
            mov R10,RCX
            shl RCX,3
.L_41d7a1:

            cmp EDX,R8D
            jae .L_41d835

            shl RDX,4
            add RDX,QWORD PTR [RBP+912]
            mov R8D,DWORD PTR [RDX]
.L_41d7b8:

            add RCX,QWORD PTR [RBP+368]
            mov EDX,R8D
            sub EDX,R10D
            mov DWORD PTR [RAX+56],EDX
            mov QWORD PTR [RAX+48],RCX
            jmp .L_41d4d6
.L_41d7d1:

            mov EDX,DWORD PTR [R10+12]
            cmp EDX,-1
            je .L_41d52f

            mov ESI,DWORD PTR [RBP+904]
            cmp EDX,ESI
            ja .L_41d8ad

            test EDX,EDX
            je .L_41d8a4

            lea ECX,DWORD PTR [RDX-1]
            shl RCX,4
            add RCX,QWORD PTR [RBP+912]
            mov ECX,DWORD PTR [RCX]
            mov RDI,RCX
            shl RCX,3
.L_41d80b:

            cmp EDX,ESI
            jae .L_41d899

            shl RDX,4
            add RDX,QWORD PTR [RBP+912]
            mov ESI,DWORD PTR [RDX]
.L_41d820:

            add RCX,QWORD PTR [RBP+368]
            sub ESI,EDI
            mov DWORD PTR [RAX+72],ESI
            mov QWORD PTR [RAX+64],RCX
            jmp .L_41d53e
.L_41d835:

            mov R8D,DWORD PTR [RBP+360]
            jmp .L_41d7b8
.L_41d841:

            xor R10D,R10D
            xor ECX,ECX
            jmp .L_41d7a1
.L_41d84b:

            lea RCX,QWORD PTR [RDX*8]
            sub RCX,RDX
            lea RDX,QWORD PTR [R8+RCX*4]
            cmp BYTE PTR [RDX+4],0
            mov QWORD PTR [RAX],RDX
            je .L_41d37e

            cmp BYTE PTR [RBP+40],50
            je .L_41d37e

            mov BYTE PTR [RAX+8],1
            mov DWORD PTR [RAX+12],4294967295
            xor EDI,EDI
            jmp .L_41d393
.L_41d883:

            mov R8D,DWORD PTR [RBP+360]
            jmp .L_41d74c
.L_41d88f:

            xor R10D,R10D
            xor ECX,ECX
            jmp .L_41d735
.L_41d899:

            mov ESI,DWORD PTR [RBP+360]
            jmp .L_41d820
.L_41d8a4:

            xor EDI,EDI
            xor ECX,ECX
            jmp .L_41d80b
.L_41d8ad:

            lea RCX,QWORD PTR [RIP+.L_41fae0]
            lea RSI,QWORD PTR [RIP+.L_42418d]
            lea RDI,QWORD PTR [RIP+.L_4241d0]
            mov EDX,113
            call __assert_fail@PLT
.L_41d8cc:

            nop
            nop
            nop
            nop
.L_41d8d0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RCX
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,40
.L_41d8e4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp ESI,6080
            je .L_41dbb0

            mov R13,RDI
            mov EBX,ESI
            jbe .L_41d9f0

            cmp ESI,6438
            je .L_41dad0

            ja .L_41da60

            cmp ESI,6085
            je .L_41dab8

            cmp ESI,6437
            je .L_41db90

            cmp ESI,6084
            je .L_41db10
.L_41d941:

            cmp EBX,3546
            je .L_41d954

            lea EAX,DWORD PTR [RBX-3548]
            cmp EAX,2
            ja .L_41d9b8
.L_41d954:

            mov EDX,DWORD PTR [RIP+.L_6582a8]
            mov RAX,QWORD PTR [R13]
            test EDX,EDX
            mov R14,QWORD PTR [RAX+1064]
            jne .L_41d96e

            call .L_4063f0
.L_41d96e:

            test BYTE PTR [RIP+.L_6582a8],2
            jne .L_41dc4d

            mov RDI,QWORD PTR [R13+16]
            lea RDX,QWORD PTR [RSP+20]
            mov DWORD PTR [RSP+20],0
            mov QWORD PTR [RSP],RDX
            mov RCX,RDX
            mov EDX,EBX
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_41dbf0
.L_41d9b8:

            mov RAX,QWORD PTR [R13+24]
            mov RCX,R12
            mov DWORD PTR [RBP],EBX
            mov RDX,RBP
            mov DWORD PTR [R12],0
            mov ESI,EBX
            mov R8,QWORD PTR [RAX+240]
            mov RDI,RAX
            call QWORD PTR [RAX+176]

            test EAX,EAX
            setne AL
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d9f0:

            cmp ESI,3959
            je .L_41db50

            jbe .L_41db30

            cmp ESI,6078
            je .L_41daa0

            ja .L_41dbd0

            cmp ESI,3961
            jne .L_41d941

            mov DWORD PTR [RDX],4019
            mov EAX,1
            mov DWORD PTR [RCX],3969
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41da38:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41dc62

            add RSP,40
.L_41da50:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41da60:

            cmp ESI,69934
            je .L_41daf0

            cmp ESI,69935
            je .L_41db70

            cmp ESI,6972
            jne .L_41d941

            mov DWORD PTR [RDX],6978
            mov EAX,1
            mov DWORD PTR [RCX],6972
            jmp .L_41da38
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41daa0:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6078
            jmp .L_41da38
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dab8:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6085
            jmp .L_41da38
          .byte 0x66
          .byte 0x90
.L_41dad0:

            mov DWORD PTR [RDX],6432
            mov EAX,1
            mov DWORD PTR [RCX],6436
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41daf0:

            mov DWORD PTR [RDX],69927
            mov EAX,1
            mov DWORD PTR [RCX],69937
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41db10:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6084
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41db30:

            cmp ESI,2353
            je .L_41db44

            cmp ESI,2964
            jne .L_41d941
.L_41db44:

            xor EAX,EAX
            jmp .L_41da38
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41db50:

            mov DWORD PTR [RDX],4018
            mov EAX,1
            mov DWORD PTR [RCX],3969
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41db70:

            mov DWORD PTR [RDX],69927
            mov EAX,1
            mov DWORD PTR [RCX],69938
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41db90:

            mov DWORD PTR [RDX],6432
            mov EAX,1
            mov DWORD PTR [RCX],6435
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dbb0:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6080
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dbd0:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6079
            jmp .L_41da38
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dbf0:

            mov RAX,QWORD PTR [R13+16]
            mov RAX,QWORD PTR [RAX+128]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [R14+72]
            test EAX,EAX
            je .L_41d9b8

            xor R15D,R15D
            jmp .L_41dc26
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dc18:

            add R15D,1
            cmp DWORD PTR [R14+72],R15D
            jbe .L_41d9b8
.L_41dc26:

            mov RDX,QWORD PTR [R14+64]
            mov EAX,R15D
            movzx R8D,BYTE PTR [R14+76]
            mov RDI,QWORD PTR [RSP+8]
            mov ECX,1
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,QWORD PTR [RSP]
            call .L_437020

            test EAX,EAX
            je .L_41dc18
.L_41dc4d:

            mov DWORD PTR [RBP],3545
            mov EAX,1
            mov DWORD PTR [R12],EBX
            jmp .L_41da38
.L_41dc62:

            call __stack_chk_fail@PLT
.L_41dc67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dc70:

            push R15
            push R14
            mov R9,RDI
            push R13
            push R12
            mov R14D,ECX
            push RBP
            push RBX
            mov EBX,R8D
            sub RSP,120
.L_41dc87:

            mov RAX,QWORD PTR [R9]
            mov RBP,QWORD PTR [RDX+200]
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RDI
            xor EDI,EDI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+72],RSI
            cmp DWORD PTR [RAX+16],1
            mov EDX,DWORD PTR [RAX+20]
            je .L_41dcc1

            mov R8D,DWORD PTR [R9+88]
            test R8D,R8D
            jne .L_41e243
.L_41dcc1:

            cmp EDX,3
            mov ESI,DWORD PTR [RAX+12]
            je .L_41e4b5

            cmp ESI,1
            je .L_41e62e

            jb .L_41e6fd

            mov EAX,R14D
            cmp ESI,2
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            je .L_41e4e9
.L_41dcf6:

            lea EAX,DWORD PTR [R14+1]
            lea R12D,DWORD PTR [RBX+1]
            mov DWORD PTR [RSP+12],EAX
            mov DWORD PTR [RSP+64],EAX
.L_41dd06:

            xor R11D,R11D
            cmp R14D,EBX
            mov R15D,EBX
            jae .L_41dd66
.L_41dd11:

            mov RDI,QWORD PTR [RSP+16]
            mov EDX,R14D
            mov ECX,3
            not EDX
            add EDX,R15D
            add RDX,RDI
            lea RAX,QWORD PTR [RDI+RDI*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+19]
            lea RSI,QWORD PTR [RBP+RDX*4+39]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dd40:

            movzx EDX,BYTE PTR [RAX]
            cmp DL,3
            cmova EDX,ECX
            add RAX,20
            mov BYTE PTR [RAX-20],DL
            cmp RAX,RSI
            jne .L_41dd40
.L_41dd55:

            cmp EBX,R15D
            jbe .L_41dd66

            mov EAX,R15D
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov BYTE PTR [RBP+RAX*4+19],4
.L_41dd66:

            cmp EBX,R12D
            jbe .L_41ddad

            mov R13D,R12D
            lea RAX,QWORD PTR [R13+R13*4]
            cmp BYTE PTR [RBP+RAX*4+18],7
            je .L_41e410

            lea EAX,DWORD PTR [R12+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RBP+RAX*4+18]
            mov EAX,R12D
            jmp .L_41dda6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dd98:

            add RDX,20
            cmp BYTE PTR [RDX-20],7
            je .L_41e418
.L_41dda6:

            add EAX,1
            cmp EBX,EAX
            jne .L_41dd98
.L_41ddad:

            test R11B,R11B
            je .L_41ddb7

            mov BYTE PTR [R8+19],1
.L_41ddb7:

            cmp BYTE PTR [R9+8],0
            je .L_41de10

            cmp EBX,R12D
            jbe .L_41eb30

            mov R13D,R12D
            lea RAX,QWORD PTR [R13+R13*4]
            lea RDI,QWORD PTR [RBP+RAX*4]
            cmp BYTE PTR [RDI+18],4
            je .L_41e5b8

            lea EAX,DWORD PTR [R12+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RBP+RAX*4]
            mov EAX,R12D
            jmp .L_41de09
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ddf8:

            mov RDI,RDX
            add RDX,20
            cmp BYTE PTR [RDX-2],4
            je .L_41e5bb
.L_41de09:

            add EAX,1
            cmp EBX,EAX
            jne .L_41ddf8
.L_41de10:

            cmp R14D,EBX
            jae .L_41e7f4
.L_41de19:

            mov RAX,QWORD PTR [RSP+16]
            mov EDX,R14D
            xor ECX,ECX
            mov EDI,155768
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            jmp .L_41de52
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41de38:

            mov BYTE PTR [RAX+19],CL
            cmp WORD PTR [RAX+18],516
            je .L_41e3a8
.L_41de47:

            add EDX,1
            add RAX,20
            cmp EBX,EDX
            je .L_41de73
.L_41de52:

            movzx ESI,BYTE PTR [RAX+18]
            bt EDI,ESI
            jb .L_41de38

            movzx R10D,BYTE PTR [RAX+19]
            cmp R10B,14
            cmovne ECX,R10D
            add EDX,1
            add RAX,20
            cmp EBX,EDX
            jne .L_41de52
.L_41de73:

            cmp EBX,R12D
            jbe .L_41ed46
.L_41de7c:

            mov R13D,R12D
.L_41de7f:

            mov ESI,202758
            lea RDI,QWORD PTR [RBP+39]
            jmp .L_41dea2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41de90:

            cmp AL,7
            cmove R15D,R12D
            add R12D,1
            cmp EBX,R12D
            jbe .L_41df08
.L_41de9f:

            mov R13D,R12D
.L_41dea2:

            lea RAX,QWORD PTR [R13+R13*4]
            lea RDX,QWORD PTR [RBP+RAX*4]
            test BYTE PTR [RDX+12],32
            movzx EAX,BYTE PTR [RDX+18]
            jne .L_41de90

            bt ESI,EAX
            jae .L_41de90

            lea ECX,DWORD PTR [R15+1]
            cmp ECX,R12D
            jae .L_41def6

            lea R10D,DWORD PTR [R12-2]
            lea RAX,QWORD PTR [RCX+RCX*4]
            sub R10D,R15D
            lea RAX,QWORD PTR [RBP+RAX*4+19]
            add RCX,R10
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RDI+RCX*4]
.L_41dee0:

            cmp BYTE PTR [RAX],13
            ja .L_41deed

            movzx R10D,BYTE PTR [RDX+19]
            mov BYTE PTR [RAX],R10B
.L_41deed:

            add RAX,20
            cmp RCX,RAX
            jne .L_41dee0
.L_41def6:

            mov R15D,R12D
            add R12D,1
            cmp EBX,R12D
            ja .L_41de9f

            nop
            nop
            nop
            nop
            nop
            nop
.L_41df08:

            movzx EAX,BYTE PTR [R8+15]
            cmp R14D,EBX
            mov BYTE PTR [RSP+32],AL
            jae .L_41e806
.L_41df1a:

            mov ESI,R14D
            mov EAX,R14D
.L_41df20:

            mov EDX,EAX
            mov ECX,EAX
            add EAX,1
            lea RDX,QWORD PTR [RDX+RDX*4]
            sub ECX,ESI
            cmp EBX,EAX
            mov BYTE PTR [RBP+RDX*4+15],CL
            ja .L_41df20

            mov EAX,EBX
            sub EAX,R14D
            cmp EAX,1
            mov EDI,EAX
            jbe .L_41e00d
.L_41df45:

            mov R12D,1
            lea R15,QWORD PTR [R8+19]
            mov R13D,1
            mov RAX,R12
            mov QWORD PTR [RSP+40],RBP
            mov DWORD PTR [RSP+56],R14D
            sub RAX,R8
            mov R14D,R13D
            mov DWORD PTR [RSP+68],EBX
            mov R12D,EDI
            mov RBP,R15
            mov QWORD PTR [RSP+48],R9
            mov RBX,R8
            mov R13,RAX
            nop
            nop
            nop
.L_41df80:

            movzx R11D,BYTE PTR [RBP+20]
            lea RDX,QWORD PTR [R13+RBP*1]
            mov RCX,RBP
            mov EAX,R14D
.L_41df90:

            movzx ESI,BYTE PTR [RCX]
            lea EDI,DWORD PTR [RAX-1]
            cmp ESI,R11D
            jl .L_41e3e0

            je .L_41e3e0

            sub RCX,20
            test EDI,EDI
            mov EAX,EDI
            jne .L_41df90

            mov R15,RBX
            mov EDI,20
.L_41dfb7:

            movdqu XMM0,XMMWORD PTR [RBP+1]
            add RDI,RBX
            mov RSI,R15
            movaps XMMWORD PTR [RSP+80],XMM0
            mov EAX,DWORD PTR [RBP+17]
            mov DWORD PTR [RSP+96],EAX
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [R15],XMM0
            mov EAX,DWORD PTR [RSP+96]
            mov DWORD PTR [R15+16],EAX
.L_41dfe5:

            add R14D,1
            add RBP,20
            cmp R12D,R14D
            ja .L_41df80

            mov R8,RBX
            mov R14D,DWORD PTR [RSP+56]
            mov EBX,DWORD PTR [RSP+68]
            mov RBP,QWORD PTR [RSP+40]
            mov R9,QWORD PTR [RSP+48]
            cmp R14D,EBX
            jae .L_41e04a
.L_41e00d:

            cmp BYTE PTR [R8+19],4
            je .L_41ea7a

            mov EAX,DWORD PTR [RSP+12]
            mov R15D,R14D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+19]
            jmp .L_41e041
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e030:

            add RAX,20
            cmp BYTE PTR [RAX-20],4
            je .L_41e470

            mov R15D,R13D
.L_41e041:

            lea R13D,DWORD PTR [R15+1]
            cmp EBX,R13D
            ja .L_41e030
.L_41e04a:

            lea R15D,DWORD PTR [RBX+1]
            mov R13D,EBX
.L_41e051:

            cmp R14D,EBX
            jae .L_41e0ac
.L_41e056:

            movzx ECX,BYTE PTR [RSP+32]
            mov EAX,R14D
            nop
            nop
.L_41e060:

            mov EDX,EAX
            add EAX,1
            lea RDX,QWORD PTR [RDX+RDX*4]
            cmp EBX,EAX
            mov BYTE PTR [RBP+RDX*4+15],CL
            ja .L_41e060

            cmp BYTE PTR [R8+19],1
            jne .L_41e0ac

            mov EAX,DWORD PTR [RSP+12]
            mov EDX,R14D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            jmp .L_41e09d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e090:

            mov R8,RAX
            add RAX,20
            cmp BYTE PTR [RAX-1],1
            jne .L_41e0ac
.L_41e09d:

            add EDX,1
            mov ECX,DWORD PTR [R9+88]
            or DWORD PTR [R8+4],ECX
            cmp EBX,EDX
            ja .L_41e090
.L_41e0ac:

            cmp BYTE PTR [R9+8],0
            mov EDX,DWORD PTR [R9+108]
            jne .L_41e0c5

            mov RAX,QWORD PTR [R9]
            mov ECX,DWORD PTR [RAX+24]
            test ECX,ECX
            jne .L_41e0c5

            or EDX,DWORD PTR [R9+100]
.L_41e0c5:

            cmp R14D,R13D
            jae .L_41e0fb

            mov RDI,QWORD PTR [RSP+16]
            mov ECX,R14D
            not ECX
            add ECX,R13D
            add RCX,RDI
            lea RAX,QWORD PTR [RDI+RDI*4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+4]
            lea RCX,QWORD PTR [RBP+RCX*4+24]
            nop
            nop
            nop
            nop
.L_41e0f0:

            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RCX,RAX
            jne .L_41e0f0
.L_41e0fb:

            mov EDX,DWORD PTR [R9+100]
            or EDX,DWORD PTR [R9+104]
            or EDX,DWORD PTR [R9+112]
            cmp EBX,R15D
            jbe .L_41e13b

            lea ECX,DWORD PTR [RBX-1]
            mov ESI,R15D
            lea RAX,QWORD PTR [RSI+RSI*4]
            sub ECX,R15D
            add RCX,RSI
            lea RAX,QWORD PTR [RBP+RAX*4+4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RBP+RCX*4+24]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e130:

            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RCX,RAX
            jne .L_41e130
.L_41e13b:

            cmp BYTE PTR [R9+8],0
            je .L_41e157

            mov RAX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RAX+148],1147500129
            je .L_41e78c
.L_41e157:

            mov EDX,DWORD PTR [R9+96]
            test EDX,EDX
            je .L_41e16c

            lea R12D,DWORD PTR [R13+2]
            cmp EBX,R12D
            ja .L_41e8d7
.L_41e16c:

            mov EDI,DWORD PTR [RSP+12]
            cmp EBX,EDI
            jbe .L_41e220

            sub EBX,1
            mov EAX,EDI
            mov R11D,96
            sub EBX,EDI
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov R10D,202758
            add RAX,RBX
            mov EDI,DWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [RBP+RDX*4+12]
            lea R8,QWORD PTR [RBP+RAX*4+32]
            jmp .L_41e1bc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e1b0:

            add RCX,20
            add EDI,1
            cmp RCX,R8
            je .L_41e220
.L_41e1bc:

            test BYTE PTR [RCX],32
            jne .L_41e1b0

            movzx ESI,BYTE PTR [RCX+6]
            bt R11D,ESI
            jae .L_41e1b0

            lea EAX,DWORD PTR [RDI-1]
            mov EDX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+4]
            jmp .L_41e1f4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e1e0:

            test BYTE PTR [RAX+8],32
            jne .L_41e1f0

            movzx EBX,BYTE PTR [RAX+14]
            bt R10D,EBX
            jb .L_41e1b0
.L_41e1f0:

            sub RAX,20
.L_41e1f4:

            sub EDX,1
            cmp SIL,5
            jne .L_41e205

            mov EBX,DWORD PTR [R9+108]
            not EBX
            and DWORD PTR [RAX],EBX
.L_41e205:

            cmp R14D,EDX
            jb .L_41e1e0

            add RCX,20
            add EDI,1
            cmp RCX,R8
            jne .L_41e1bc

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e220:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41ed54

            add RSP,120
.L_41e238:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41e243:

            lea R12D,DWORD PTR [RCX+3]
            cmp R12D,EBX
            ja .L_41dcc1

            test EDX,EDX
            jne .L_41ea29

            lea EDX,DWORD PTR [RCX+2]
            mov DWORD PTR [RSP+64],EDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RBP+RDX*4]
            test BYTE PTR [RDX+12],32
            je .L_41eaef
.L_41e272:

            mov EDI,R14D
            lea RDX,QWORD PTR [RDI+RDI*4]
            mov QWORD PTR [RSP+16],RDI
            mov EDX,DWORD PTR [RBP+RDX*4]
            mov DWORD PTR [RSP+80],EDX
            lea EDX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+12],EDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov EDX,DWORD PTR [RBP+RDX*4]
            mov DWORD PTR [RSP+84],EDX
            xor EDX,EDX
.L_41e29c:

            mov EDI,DWORD PTR [R9+24]
            mov DWORD PTR [RSP+88],EDX
            test EDI,EDI
            je .L_41eb5b

            xor R15D,R15D
            mov QWORD PTR [RSP+32],RBP
            mov DWORD PTR [RSP+40],R12D
            mov EBP,R15D
            lea R13,QWORD PTR [RSP+80]
            mov R15D,EBX
            mov R12,R9
            mov RBX,QWORD PTR [RSP+72]
            jmp .L_41e2de
          .byte 0x66
          .byte 0x90
.L_41e2d0:

            add EBP,1
            cmp DWORD PTR [R12+24],EBP
            jbe .L_41eb3e
.L_41e2de:

            mov RDX,QWORD PTR [R12+16]
            mov EAX,EBP
            movzx R8D,BYTE PTR [R12+28]
            mov ECX,2
            mov RDI,RBX
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R13
            call .L_437020

            test EAX,EAX
            je .L_41e2d0

            mov R9,R12
            mov R12D,DWORD PTR [RSP+40]
            mov RBP,QWORD PTR [RSP+32]
            mov EBX,R15D
.L_41e313:

            mov ECX,DWORD PTR [RSP+64]
            cmp EBX,ECX
            jbe .L_41e366

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_41e366

            movzx EAX,BYTE PTR [RAX+18]
            mov EDX,96
            bt EDX,EAX
            jae .L_41e366

            lea RAX,QWORD PTR [R12+R12*4]
            mov ESI,96
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            jmp .L_41e35f
.L_41e34a:

            test BYTE PTR [RAX],32
            mov RDX,RAX
            jne .L_41e366

            movzx EDX,BYTE PTR [RDX+6]
            add RAX,20
            bt ESI,EDX
            jae .L_41e366
.L_41e35f:

            add ECX,1
            cmp EBX,ECX
            ja .L_41e34a
.L_41e366:

            mov RDX,QWORD PTR [R9]
            mov EAX,DWORD PTR [RDX+12]
            cmp EAX,1
            je .L_41e8b6

            jae .L_41eb9e

            cmp DWORD PTR [RDX+20],2
            jne .L_41ebd5

            lea RCX,QWORD PTR [RIP+.L_41f9e0]
            lea RSI,QWORD PTR [RIP+.L_424170]
            lea RDI,QWORD PTR [RIP+.L_4241a2]
            mov EDX,808
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e3a8:

            cmp R14D,EDX
            jae .L_41de47

            lea R10D,DWORD PTR [RDX-1]
.L_41e3b5:

            mov RSI,R10
            lea R10,QWORD PTR [R10+R10*4]
            movzx R10D,BYTE PTR [RBP+R10*4+19]
            cmp R10B,2
            jne .L_41e81b

            cmp R14D,ESI
            je .L_41de47

            lea R10D,DWORD PTR [RSI-1]
            jmp .L_41e3b5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e3e0:

            cmp R14D,EAX
            je .L_41dfe5

            mov EDX,R14D
            mov ECX,EAX
            sub EDX,EAX
            add EAX,1
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RAX+RAX*4]
            lea R15,QWORD PTR [RBX+RCX*4]
            shl RDX,2
            shl RDI,2
            jmp .L_41dfb7
.L_41e410:

            mov EAX,R12D
            nop
            nop
            nop
            nop
            nop
.L_41e418:

            lea ECX,DWORD PTR [RAX+1]
            cmp EBX,ECX
            jbe .L_41ddad

            lea ESI,DWORD PTR [RBX-2]
            lea RDX,QWORD PTR [RCX+RCX*4]
            sub ESI,EAX
            lea RDX,QWORD PTR [RBP+RDX*4]
            add RCX,RSI
            mov ESI,202758
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e448:

            test BYTE PTR [RDX+12],32
            jne .L_41e45b

            movzx ECX,BYTE PTR [RDX+18]
            bt ESI,ECX
            jb .L_41e7eb
.L_41e45b:

            add RDX,20
            cmp RAX,RDX
            jne .L_41e448

            jmp .L_41ddad
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e470:

            add R15D,2
.L_41e474:

            mov EAX,EBX
            sub EAX,R13D
            cmp BYTE PTR [R9+8],0
            jne .L_41e620

            cmp EAX,127
            jbe .L_41ec9a
.L_41e48d:

            mov RDI,QWORD PTR [RSP+24]
            mov EDX,EBX
            mov ESI,R13D
            mov QWORD PTR [RSP+48],R9
            mov QWORD PTR [RSP+40],R8
            call .L_403190

            mov R9,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+40]
            jmp .L_41e051
.L_41e4b5:

            mov EAX,R14D
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            cmp BYTE PTR [R8+18],15
            je .L_41e824

            cmp ESI,1
            je .L_41e63f

            jb .L_41ebd5

            cmp ESI,2
            jne .L_41dcf6
.L_41e4e9:

            lea EAX,DWORD PTR [R14+1]
            mov ECX,R14D
            mov R15D,EBX
            xor R11D,R11D
            mov DWORD PTR [RSP+12],EAX
            mov DWORD PTR [RSP+64],EAX
.L_41e4fe:

            lea EAX,DWORD PTR [RBX-1]
            mov R12D,EBX
            xor EDI,EDI
            mov R10D,202758
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            jmp .L_41e55b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e520:

            movzx ESI,BYTE PTR [RAX+6]
            bt R10D,ESI
            jae .L_41e565

            movzx ESI,BYTE PTR [RAX+7]
            cmp SIL,8
            je .L_41e6f0

            cmp SIL,11
            mov R15D,EDX
            setne SIL
            or DIL,SIL
            jne .L_41e584

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e550:

            sub RAX,20
            cmp EDX,ECX
            mov R12D,EDX
            jbe .L_41e580
.L_41e55b:

            test BYTE PTR [RAX],32
            lea EDX,DWORD PTR [R12-1]
            je .L_41e520
.L_41e565:

            cmp R14D,EDX
            jae .L_41e550

            cmp BYTE PTR [RAX+6],6
            jne .L_41e550

            lea ESI,DWORD PTR [R12-2]
            lea RSI,QWORD PTR [RSI+RSI*4]
            cmp BYTE PTR [RBP+RSI*4+18],4
            jne .L_41e550
.L_41e580:

            lea R12D,DWORD PTR [R15+1]
.L_41e584:

            cmp R14D,R15D
            jne .L_41e5a3

            test R11B,R11B
            je .L_41e5a3
.L_41e58e:

            sub ECX,R15D
            xor R11D,R11D
            cmp ECX,2
            jbe .L_41dd55

            mov R11D,1
.L_41e5a3:

            cmp R14D,R15D
            jb .L_41dd11

            jmp .L_41dd55
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e5b8:

            mov EAX,R12D
.L_41e5bb:

            lea EDX,DWORD PTR [RBX-1]
            cmp EDX,EAX
            jbe .L_41e60e

            mov RSI,QWORD PTR [RSP+24]
            mov ECX,EDX
            mov R11D,202758
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov ESI,DWORD PTR [RSI+148]
            lea RCX,QWORD PTR [RBP+RCX*4]
            nop
            nop
.L_41e5e0:

            test BYTE PTR [RCX+12],32
            jne .L_41e5f5

            movzx R10D,BYTE PTR [RCX+18]
            bt R11D,R10D
            jb .L_41ea87
.L_41e5f5:

            cmp ESI,1298954605
            je .L_41e603

            cmp BYTE PTR [RCX+18],4
            je .L_41e60e
.L_41e603:

            sub EDX,1
            sub RCX,20
            cmp EDX,EAX
            ja .L_41e5e0
.L_41e60e:

            cmp R14D,EBX
            jb .L_41de19

            jmp .L_41de7f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e620:

            cmp EAX,1
            jbe .L_41e056

            jmp .L_41e48d
.L_41e62e:

            mov EAX,R14D
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
.L_41e63f:

            lea EAX,DWORD PTR [R14+1]
            mov ECX,R14D
            xor R11D,R11D
            mov DWORD PTR [RSP+12],EAX
            mov DWORD PTR [RSP+64],EAX
.L_41e651:

            cmp EBX,ECX
            jbe .L_41eb96

            mov EAX,ECX
            mov R15D,R14D
            mov EDI,202758
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RBP+RAX*4+12]
            mov EAX,ECX
            nop
            nop
.L_41e670:

            test BYTE PTR [RDX],32
            jne .L_41e693

            movzx ESI,BYTE PTR [RDX+6]
            bt EDI,ESI
            jae .L_41e693

            cmp ECX,EAX
            jae .L_41e690

            lea ESI,DWORD PTR [RAX-1]
            lea RSI,QWORD PTR [RSI+RSI*4]
            cmp BYTE PTR [RBP+RSI*4+18],6
            je .L_41e69e
.L_41e690:

            mov R15D,EAX
.L_41e693:

            add EAX,1
            add RDX,20
            cmp EBX,EAX
            jne .L_41e670
.L_41e69e:

            lea R12D,DWORD PTR [R15+1]
            cmp EBX,R12D
            jbe .L_41e584

            lea EDX,DWORD PTR [RBX-2]
            mov R13D,R12D
            mov EDI,202758
            lea RAX,QWORD PTR [R13+R13*4]
            sub EDX,R15D
            add R13,RDX
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            lea RDX,QWORD PTR [R13+R13*4]
            lea RDX,QWORD PTR [RBP+RDX*4+32]
.L_41e6d0:

            test BYTE PTR [RAX],32
            jne .L_41e6e2

            movzx ESI,BYTE PTR [RAX+6]
            bt EDI,ESI
            jae .L_41e6e2

            mov BYTE PTR [RAX+7],8
.L_41e6e2:

            add RAX,20
            cmp RDX,RAX
            jne .L_41e6d0

            jmp .L_41e584
.L_41e6f0:

            mov R15D,EDX
            mov EDI,1
            jmp .L_41e550
.L_41e6fd:

            cmp EDX,2
            jne .L_41ebd5

            mov EAX,R14D
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+12],EAX
.L_41e716:

            mov EAX,DWORD PTR [RSP+12]
            cmp EBX,EAX
            mov R12D,EAX
            jbe .L_41e76b

            lea EDX,DWORD PTR [RBX-2]
            mov R13D,EAX
            mov ESI,202758
            lea RAX,QWORD PTR [R13+R13*4]
            sub EDX,R14D
            add R13,RDX
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            lea RDX,QWORD PTR [R13+R13*4]
            lea RDX,QWORD PTR [RBP+RDX*4+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e750:

            test BYTE PTR [RAX],32
            jne .L_41e762

            movzx ECX,BYTE PTR [RAX+6]
            bt ESI,ECX
            jae .L_41e762

            mov BYTE PTR [RAX+7],8
.L_41e762:

            add RAX,20
            cmp RDX,RAX
            jne .L_41e750
.L_41e76b:

            mov RAX,QWORD PTR [RSP+16]
            mov R15D,R14D
            xor R11D,R11D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
            jmp .L_41dd55
.L_41e78c:

            mov EAX,DWORD PTR [RSP+12]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [RBP+RAX*4+4]
            mov EAX,R14D
            jmp .L_41e7a6
          .byte 0x66
          .byte 0x90
.L_41e7a0:

            add RSI,20
            mov EAX,EDX
.L_41e7a6:

            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,R13D
            jae .L_41e157

            mov ECX,EAX
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RBP+RCX*4]
            cmp BYTE PTR [RCX+18],16
            jne .L_41e7a0

            cmp BYTE PTR [RSI+14],4
            jne .L_41e7a0

            add EAX,2
            cmp EAX,R13D
            je .L_41e7dc

            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [RBP+RAX*4+18],6
            je .L_41e7a0
.L_41e7dc:

            mov EAX,DWORD PTR [R9+100]
            or DWORD PTR [RCX+4],EAX
            mov EAX,DWORD PTR [R9+100]
            or DWORD PTR [RSI],EAX
            jmp .L_41e7a0
.L_41e7eb:

            mov BYTE PTR [RDX+19],13
            jmp .L_41ddad
.L_41e7f4:

            cmp EBX,R12D
            ja .L_41de7c
.L_41e7fd:

            movzx EAX,BYTE PTR [R8+15]
            mov BYTE PTR [RSP+32],AL
.L_41e806:

            mov EAX,EBX
            sub EAX,R14D
            cmp EAX,1
            mov EDI,EAX
            ja .L_41df45

            jmp .L_41e04a
.L_41e81b:

            mov BYTE PTR [RAX+19],R10B
            jmp .L_41de47
.L_41e824:

            lea ECX,DWORD PTR [R14+1]
            cmp EBX,ECX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+64],ECX
            jbe .L_41ec19

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_41ec19

            movzx EAX,BYTE PTR [RAX+18]
            mov EDX,96
            bt EDX,EAX
            jae .L_41ec19

            lea EAX,DWORD PTR [R14+2]
            mov EDI,96
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            jmp .L_41e88d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e878:

            test BYTE PTR [RAX],32
            mov RDX,RAX
            jne .L_41e894

            movzx EDX,BYTE PTR [RDX+6]
            add RAX,20
            bt EDI,EDX
            jae .L_41e894
.L_41e88d:

            add ECX,1
            cmp EBX,ECX
            ja .L_41e878
.L_41e894:

            cmp ESI,1
            je .L_41e8cc

            jb .L_41ebd5

            cmp ESI,2
            jne .L_41ec8d

            mov R15D,R14D
            mov R11D,1
            jmp .L_41e4fe
.L_41e8b6:

            mov RAX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
.L_41e8cc:

            mov R11D,1
            jmp .L_41e651
.L_41e8d7:

            mov EDX,R12D
            lea EDI,DWORD PTR [RBX-3]
            mov QWORD PTR [RSP+24],RBP
            lea RAX,QWORD PTR [RDX+RDX*4]
            mov DWORD PTR [RSP+48],R14D
            mov DWORD PTR [RSP+56],EBX
            mov DWORD PTR [RSP+68],EDI
            mov DWORD PTR [RSP+16],R15D
            lea RSI,QWORD PTR [RBP+RAX*4]
            mov EAX,EDI
            sub EAX,R13D
            mov R13,QWORD PTR [RSP+72]
            add RAX,RDX
            mov RBX,RSI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+20]
            mov RBP,R9
            mov QWORD PTR [RSP+40],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov R14,RAX
.L_41e926:

            mov EAX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov QWORD PTR [RSP+32],RAX
            mov EAX,DWORD PTR [RAX]
            mov DWORD PTR [RSP+80],EAX
            mov EAX,DWORD PTR [RBX]
            mov DWORD PTR [RSP+84],EAX
            mov EAX,DWORD PTR [RBP+40]
            test EAX,EAX
            je .L_41ea08

            xor R15D,R15D
            jmp .L_41e96e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e960:

            add R15D,1
            cmp DWORD PTR [RBP+40],R15D
            jbe .L_41ea08
.L_41e96e:

            mov RDX,QWORD PTR [RBP+32]
            mov EAX,R15D
            movzx R8D,BYTE PTR [RBP+44]
            mov ECX,2
            mov RDI,R13
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R14
            call .L_437020

            test EAX,EAX
            je .L_41e960

            mov RDI,QWORD PTR [RSP+32]
            mov R9,RBP
            mov RSI,RBX
            mov EAX,DWORD PTR [R9+96]
            mov R15D,DWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RSP+24]
            mov R14D,DWORD PTR [RSP+48]
            or DWORD PTR [RDI+4],EAX
            mov EBX,DWORD PTR [RSP+56]
            mov EAX,DWORD PTR [R9+96]
            or DWORD PTR [RSI+4],EAX
            mov EDX,DWORD PTR [R9+124]
            test EDX,EDX
            je .L_41e16c

            lea ECX,DWORD PTR [R15+2]
            cmp EBX,ECX
            jbe .L_41e16c

            mov ESI,DWORD PTR [RSP+68]
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+4]
            sub ESI,R15D
            add RCX,RSI
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RBP+RCX*4+24]
            jmp .L_41e9f8
.L_41e9f4:

            mov EDX,DWORD PTR [R9+124]
.L_41e9f8:

            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RCX,RAX
            jne .L_41e9f4

            jmp .L_41e16c
.L_41ea08:

            add RBX,20
            cmp QWORD PTR [RSP+40],RBX
            lea EAX,DWORD PTR [R12+1]
            mov DWORD PTR [RSP+16],R12D
            je .L_41ec77

            mov R12D,EAX
            jmp .L_41e926
.L_41ea29:

            cmp EDX,1
            jne .L_41dcc1

            lea EDX,DWORD PTR [RCX+2]
            mov DWORD PTR [RSP+64],EDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RBP+RDX*4]
            cmp BYTE PTR [RDX+18],6
            jne .L_41eb01

            mov EDI,ECX
            lea RCX,QWORD PTR [RDI+RDI*4]
            mov QWORD PTR [RSP+16],RDI
            mov ECX,DWORD PTR [RBP+RCX*4]
            mov DWORD PTR [RSP+80],ECX
            lea ECX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+12],ECX
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov ECX,DWORD PTR [RBP+RCX*4]
            mov DWORD PTR [RSP+84],ECX
            mov EDX,DWORD PTR [RDX]
            jmp .L_41e29c
.L_41ea7a:

            mov R15D,DWORD PTR [RSP+12]
            mov R13D,R14D
            jmp .L_41e474
.L_41ea87:

            cmp R10B,4
            je .L_41e60e

            movdqu XMM0,XMMWORD PTR [RDI]
            sub EDX,EAX
            add EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov QWORD PTR [RSP+48],R9
            movaps XMMWORD PTR [RSP+80],XMM0
            mov ESI,DWORD PTR [RDI+16]
            shl RDX,2
            mov QWORD PTR [RSP+40],RCX
            mov DWORD PTR [RSP+96],ESI
            lea RSI,QWORD PTR [RBP+RAX*4]
            mov QWORD PTR [RSP+32],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+32]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            mov R9,QWORD PTR [RSP+48]
            movups XMMWORD PTR [RCX],XMM0
            mov EAX,DWORD PTR [RSP+96]
            mov DWORD PTR [RCX+16],EAX
            jmp .L_41e60e
.L_41eaef:

            movzx EDX,BYTE PTR [RDX+18]
            mov ECX,96
            bt ECX,EDX
            jae .L_41e272
.L_41eb01:

            mov EAX,DWORD PTR [RAX+12]
            cmp EAX,1
            je .L_41ed7d

            jb .L_41ebd5

            cmp EAX,2
            jne .L_41ed59

            mov EAX,R14D
            imul R8,RAX,20
            mov QWORD PTR [RSP+16],RAX
            add R8,RBP
            jmp .L_41e4e9
.L_41eb30:

            cmp R14D,EBX
            jb .L_41de19

            jmp .L_41e7fd
.L_41eb3e:

            mov R9,R12
            mov RBP,QWORD PTR [RSP+32]
            mov R12D,DWORD PTR [RSP+40]
            mov RAX,QWORD PTR [R9]
            mov EBX,R15D
            cmp DWORD PTR [RAX+20],1
            je .L_41ec22
.L_41eb5b:

            mov EDX,DWORD PTR [RAX+12]
            cmp EDX,1
            je .L_41ebf8

            jb .L_41ebcb

            cmp EDX,2
            jne .L_41ed91

            mov RAX,QWORD PTR [RSP+16]
            mov ECX,R14D
            mov R15D,EBX
            xor R11D,R11D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
            jmp .L_41e4fe
.L_41eb96:

            mov R15D,R14D
            jmp .L_41e69e
.L_41eb9e:

            cmp EAX,2
            jne .L_41edab

            mov RAX,QWORD PTR [RSP+16]
            mov R15D,R14D
            mov R11D,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
            jmp .L_41e4fe
.L_41ebcb:

            cmp DWORD PTR [RAX+20],2
            je .L_41e716
.L_41ebd5:

            lea RCX,QWORD PTR [RIP+.L_41f9e0]
            lea RSI,QWORD PTR [RIP+.L_424170]
            lea RDI,QWORD PTR [RIP+.L_4241f8]
            mov EDX,807
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ebf8:

            mov RAX,QWORD PTR [RSP+16]
            mov ECX,R14D
            xor R11D,R11D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
            jmp .L_41e651
.L_41ec19:

            mov ECX,DWORD PTR [RSP+12]
            jmp .L_41e894
.L_41ec22:

            mov ESI,DWORD PTR [R9+24]
            test ESI,ESI
            je .L_41eb5b

            xor R15D,R15D
.L_41ec31:

            mov RDX,QWORD PTR [R9+16]
            mov EAX,R15D
            movzx R8D,BYTE PTR [R9+28]
            mov RDI,QWORD PTR [RSP+72]
            mov ECX,3
            mov QWORD PTR [RSP+32],R9
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R13
            call .L_437020

            test EAX,EAX
            mov R9,QWORD PTR [RSP+32]
            jne .L_41e313

            add R15D,1
            cmp DWORD PTR [R9+24],R15D
            ja .L_41ec31

            mov RAX,QWORD PTR [R9]
            jmp .L_41eb5b
.L_41ec77:

            mov R9,RBP
            mov R14D,DWORD PTR [RSP+48]
            mov RBP,QWORD PTR [RSP+24]
            mov EBX,DWORD PTR [RSP+56]
            jmp .L_41e16c
.L_41ec8d:

            mov R12D,DWORD PTR [RSP+12]
            mov R15D,R14D
            jmp .L_41e58e
.L_41ec9a:

            cmp EBX,R13D
            jbe .L_41e056

            mov EAX,R13D
            mov R12D,R13D
            mov DWORD PTR [RSP+48],R13D
            imul RAX,RAX,20
            mov R13D,EBX
            mov QWORD PTR [RSP+40],R8
            mov RBX,RBP
            mov QWORD PTR [RSP+56],R9
            lea RAX,QWORD PTR [RBP+RAX*1+15]
            mov EBP,R12D
            mov R12,RAX
            nop
            nop
            nop
.L_41ecd0:

            movzx EDX,BYTE PTR [R12]
            cmp DL,255
            je .L_41ed20

            add EDX,R14D
            cmp EDX,EBP
            je .L_41ed20

            mov ESI,EBP
            nop
            nop
            nop
            nop
            nop
.L_41ece8:

            lea RAX,QWORD PTR [RDX+RDX*4]
            cmp ESI,EDX
            cmovb ESI,EDX
            lea RAX,QWORD PTR [RBX+RAX*4]
            movzx EDX,BYTE PTR [RAX+15]
            mov BYTE PTR [RAX+15],255
            add EDX,R14D
            cmp EDX,EBP
            jne .L_41ece8

            cmp ESI,EBP
            je .L_41ed20

            lea EDX,DWORD PTR [RSI+1]
            mov ESI,EDX
            sub ESI,EBP
            cmp ESI,1
            jbe .L_41ed20

            mov RDI,QWORD PTR [RSP+24]
            mov ESI,EBP
            call .L_403190
.L_41ed20:

            add EBP,1
            add R12,20
            cmp R13D,EBP
            jne .L_41ecd0

            mov RBP,RBX
            mov R8,QWORD PTR [RSP+40]
            mov EBX,R13D
            mov R9,QWORD PTR [RSP+56]
            mov R13D,DWORD PTR [RSP+48]
            jmp .L_41e051
.L_41ed46:

            movzx EAX,BYTE PTR [R8+15]
            mov BYTE PTR [RSP+32],AL
            jmp .L_41df1a
.L_41ed54:

            call __stack_chk_fail@PLT
.L_41ed59:

            mov EAX,R14D
            lea R12D,DWORD PTR [RBX+1]
            imul R8,RAX,20
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+12],EAX
            mov DWORD PTR [RSP+64],EAX
            add R8,RBP
            jmp .L_41dd06
.L_41ed7d:

            mov EAX,R14D
            imul R8,RAX,20
            mov QWORD PTR [RSP+16],RAX
            add R8,RBP
            jmp .L_41e63f
.L_41ed91:

            imul R8,QWORD PTR [RSP+16],20
            mov EAX,DWORD PTR [RSP+12]
            lea R12D,DWORD PTR [RBX+1]
            mov DWORD PTR [RSP+64],EAX
            add R8,RBP
            jmp .L_41dd06
.L_41edab:

            imul R8,QWORD PTR [RSP+16],20
            mov EAX,DWORD PTR [RSP+12]
            mov R15D,R14D
            mov R12D,EAX
            mov DWORD PTR [RSP+64],EAX
            add R8,RBP
            jmp .L_41e58e
.L_41edc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41edd0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,136
.L_41edea:

            mov R13,QWORD PTR [RDI+1064]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [R13]
            cmp DWORD PTR [RAX+12],2
            je .L_41eff4

            mov R15D,DWORD PTR [RDX+184]
            mov RAX,QWORD PTR [RDX+200]
.L_41ee1d:

            test R15D,R15D
            je .L_41ef80

            movzx EDX,BYTE PTR [RAX+15]
            and EDX,15
            cmp DL,4
            je .L_41efb0

            lea EDX,DWORD PTR [R15-1]
            add RAX,35
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RDX*4]
            jmp .L_41ee63
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ee50:

            movzx EDX,BYTE PTR [RAX]
            add RAX,20
            and EDX,15
            cmp DL,4
            je .L_41efb0
.L_41ee63:

            cmp RCX,RAX
            jne .L_41ee50
.L_41ee68:

            test R15D,R15D
            je .L_41ef80

            mov R8,QWORD PTR [R14+200]
            xor R12D,R12D
            movzx EDI,BYTE PTR [R8+15]
            lea RAX,QWORD PTR [R8+35]
            jmp .L_41ee9a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ee90:

            add RAX,20
            cmp DIL,BYTE PTR [RAX-20]
            jne .L_41eea3
.L_41ee9a:

            add R12D,1
            cmp R12D,R15D
            jne .L_41ee90
.L_41eea3:

            and EDI,15
            xor ECX,ECX
            mov RSI,QWORD PTR [RBX+128]
            cmp DIL,2
            je .L_41ef1c

            nop
            nop
            nop
.L_41eeb8:

            jb .L_41ef62

            cmp DIL,4
            je .L_41ef1c
.L_41eec4:

            mov EAX,R12D
            mov ECX,DWORD PTR [R14+184]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EDI,BYTE PTR [R8+RAX*4+15]
            lea EAX,DWORD PTR [R12+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R8+RAX*4+15]
            mov EAX,R12D
            jmp .L_41eefa
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41eef0:

            add RDX,20
            cmp DIL,BYTE PTR [RDX-20]
            jne .L_41ef01
.L_41eefa:

            add EAX,1
            cmp ECX,EAX
            ja .L_41eef0
.L_41ef01:

            cmp R12D,R15D
            mov ECX,R12D
            jae .L_41ef80

            and EDI,15
            mov R12D,EAX
            mov RSI,QWORD PTR [RBX+128]
            cmp DIL,2
            jne .L_41eeb8
.L_41ef1c:

            mov EAX,DWORD PTR [RIP+.L_6582a8]
            test EAX,EAX
            jne .L_41ef3d

            mov DWORD PTR [RSP+16],ECX
            mov QWORD PTR [RSP+8],RSI
            call .L_4063f0

            mov ECX,DWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+8]
.L_41ef3d:

            test BYTE PTR [RIP+.L_6582a8],2
            je .L_41ef62

            lea EAX,DWORD PTR [R12-1]
            mov R8,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [R8+RAX*4+18],12
            je .L_41eec4
.L_41ef62:

            mov RDI,QWORD PTR [RBP+1064]
            mov R8D,R12D
            mov RDX,R14
            call .L_41dc70

            mov R8,QWORD PTR [R14+200]
            jmp .L_41eec4
.L_41ef80:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41f5ef

            add RSP,136
.L_41ef9b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41efb0:

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+60],0
            lea RCX,QWORD PTR [RSP+60]
            mov RSI,QWORD PTR [RBX+160]
            mov EDX,9676
            mov RDI,RBX
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_41f1bc
.L_41efe8:

            mov R15D,DWORD PTR [R14+184]
            jmp .L_41ee68
.L_41eff4:

            mov ESI,DWORD PTR [R13+12]
            cmp ESI,-1
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+60],ESI
            je .L_41f0e7
.L_41f009:

            mov R11D,DWORD PTR [RSP+8]
            mov R15D,DWORD PTR [R14+184]
            mov RAX,QWORD PTR [R14+200]
            test R11D,R11D
            je .L_41ee1d

            test R15D,R15D
            mov RSI,QWORD PTR [RBX+128]
            je .L_41ef80

            lea EDX,DWORD PTR [R15-1]
            lea R12,QWORD PTR [RAX+19]
            mov QWORD PTR [RSP+16],RBP
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+32],R14
            lea R15,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov RBP,RSI
            mov RBX,R13
            lea RAX,QWORD PTR [RAX+RDX*4+39]
            mov R14,RAX
            jmp .L_41f075
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f068:

            add R12,20
            cmp R14,R12
            je .L_41f13c
.L_41f075:

            cmp BYTE PTR [R12],4
            jne .L_41f068

            mov EAX,DWORD PTR [R12-19]
            mov ESI,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+100],EAX
            mov DWORD PTR [RSP+96],ESI
            mov DWORD PTR [RSP+104],ESI
            mov R10D,DWORD PTR [RBX+56]
            test R10D,R10D
            je .L_41f443

            xor R13D,R13D
            jmp .L_41f0b8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f0a8:

            mov EAX,DWORD PTR [RBX+56]
            add R13D,1
            cmp EAX,R13D
            jbe .L_41f15e
.L_41f0b8:

            mov RDX,QWORD PTR [RBX+48]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+60]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R15
            call .L_437020

            test EAX,EAX
            je .L_41f0a8
.L_41f0dc:

            mov EAX,8
.L_41f0e1:

            mov BYTE PTR [R12],AL
            jmp .L_41f068
.L_41f0e7:

            mov EDX,DWORD PTR [RAX+8]
            test EDX,EDX
            je .L_41f121

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+60],0
            lea RCX,QWORD PTR [RSP+60]
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_41f3a5
.L_41f121:

            mov DWORD PTR [R13+12],0
            mov R15D,DWORD PTR [R14+184]
            mov RAX,QWORD PTR [R14+200]
            jmp .L_41ee1d
.L_41f13c:

            mov R14,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP+24]
            mov R15D,DWORD PTR [R14+184]
            mov RAX,QWORD PTR [R14+200]
            jmp .L_41ee1d
.L_41f15e:

            test EAX,EAX
            je .L_41f443

            lea RAX,QWORD PTR [R15+4]
            mov QWORD PTR [RSP+40],R12
            xor R13D,R13D
            mov R12,RBX
            mov RBX,RAX
            jmp .L_41f189
.L_41f17a:

            add R13D,1
            cmp DWORD PTR [R12+56],R13D
            jbe .L_41f43b
.L_41f189:

            mov RDX,QWORD PTR [R12+48]
            mov EAX,R13D
            movzx R8D,BYTE PTR [R12+60]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,RBX
            call .L_437020

            test EAX,EAX
            je .L_41f17a

            mov RBX,R12
            mov R12,QWORD PTR [RSP+40]
            jmp .L_41f0dc
.L_41f1bc:

            pxor XMM0,XMM0
            mov EDI,9676
            movups XMMWORD PTR [RSP+68],XMM0
            call .L_424230

            lea RAX,QWORD PTR [RIP+.L_424144]
            lea RDX,QWORD PTR [RAX+44]
.L_41f1da:

            cmp RDX,RAX
            je .L_41f4a3

            add RAX,4
            cmp DWORD PTR [RAX-4],9676
            jne .L_41f1da

            mov R12D,16
.L_41f1f6:

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,R14
            mov DWORD PTR [RSP+8],EAX
            call .L_4029e0

            lea RSI,QWORD PTR [RSP+96]
            mov R11D,DWORD PTR [R14+184]
            mov DWORD PTR [R14+180],0
            xor EAX,EAX
            xor R8D,R8D
            mov QWORD PTR [RSP+16],RSI
.L_41f227:

            cmp EAX,R11D
            jae .L_41f42e

            cmp BYTE PTR [R14+176],0
            jne .L_41f42e

            mov RCX,QWORD PTR [R14+200]
            mov EDX,EAX
            lea RSI,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [RCX+RSI*4]
            movzx R15D,BYTE PTR [RSI+15]
            mov EDI,R15D
            mov R13D,R15D
            and EDI,15
            cmp DIL,4
            jne .L_41f3c0

            cmp R15D,R8D
            je .L_41f3c0

            mov EDI,DWORD PTR [RSP+8]
            mov BYTE PTR [RSP+82],R12B
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov BYTE PTR [RSP+83],4
            lea RDX,QWORD PTR [RCX+RDX*4]
            mov DWORD PTR [RSP+64],EDI
            mov EDI,DWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov DWORD PTR [RSP+112],EDI
            movaps XMMWORD PTR [RSP+96],XMM0
            mov EDI,DWORD PTR [RSI+8]
            mov DWORD PTR [RSP+104],EDI
            mov EDI,DWORD PTR [RSI+4]
            mov DWORD PTR [RSP+100],EDI
            movzx ESI,BYTE PTR [RSI+15]
            mov BYTE PTR [RSP+111],SIL
            cmp R13B,BYTE PTR [RDX+15]
            jne .L_41f382
.L_41f2be:

            cmp BYTE PTR [RDX+18],15
            jne .L_41f382

            cmp BYTE PTR [R14+177],0
            je .L_41f343

            cmp RCX,QWORD PTR [R14+208]
            je .L_41f48f
.L_41f2df:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_402560

            test AL,AL
            je .L_41f5e3

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov RDI,QWORD PTR [R14+200]
            mov RSI,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
.L_41f339:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
.L_41f343:

            mov EAX,DWORD PTR [R14+180]
            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_41f354:

            cmp DWORD PTR [R14+184],EAX
            jbe .L_41f382

            cmp BYTE PTR [R14+176],0
            jne .L_41f382

            mov RCX,QWORD PTR [R14+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            cmp R13B,BYTE PTR [RDX+15]
            je .L_41f2be
.L_41f382:

            mov RSI,QWORD PTR [RSP+16]
            mov RDI,R14
            call .L_402ca0

            mov EAX,DWORD PTR [R14+180]
            mov R11D,DWORD PTR [R14+184]
            mov R8D,R15D
            jmp .L_41f227
.L_41f3a5:

            mov EAX,DWORD PTR [RSP+60]
            mov DWORD PTR [RSP+8],EAX
            mov DWORD PTR [R13+12],EAX
            jmp .L_41f009
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f3c0:

            cmp BYTE PTR [R14+177],0
            je .L_41f41f

            cmp RCX,QWORD PTR [R14+208]
            je .L_41f40a
.L_41f3d3:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            mov DWORD PTR [RSP+24],R8D
            call .L_402560

            test AL,AL
            mov R8D,DWORD PTR [RSP+24]
            jne .L_41f590

            mov EAX,DWORD PTR [R14+180]
            mov R11D,DWORD PTR [R14+184]
            jmp .L_41f227
.L_41f40a:

            mov EDX,DWORD PTR [R14+188]
            cmp EAX,EDX
            jne .L_41f3d3
.L_41f415:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
.L_41f41f:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
            jmp .L_41f227
.L_41f42e:

            mov RDI,R14
            call .L_402a70

            jmp .L_41efe8
.L_41f43b:

            mov RBX,R12
            mov R12,QWORD PTR [RSP+40]
.L_41f443:

            mov R9D,DWORD PTR [RBX+72]
            test R9D,R9D
            je .L_41f4ee

            xor R13D,R13D
            jmp .L_41f461
.L_41f455:

            mov EAX,DWORD PTR [RBX+72]
            add R13D,1
            cmp EAX,R13D
            jbe .L_41f4ae
.L_41f461:

            mov RDX,QWORD PTR [RBX+64]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+76]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R15
            call .L_437020

            test EAX,EAX
            je .L_41f455
.L_41f485:

            mov EAX,11
            jmp .L_41f0e1
.L_41f48f:

            mov EDX,DWORD PTR [R14+188]
            cmp EDX,EAX
            jne .L_41f2df

            jmp .L_41f339
.L_41f4a3:

            mov R12D,12
            jmp .L_41f1f6
.L_41f4ae:

            test EAX,EAX
            je .L_41f4ee

            lea RAX,QWORD PTR [R15+4]
            xor R13D,R13D
            mov QWORD PTR [RSP+40],RAX
.L_41f4be:

            mov RDX,QWORD PTR [RBX+64]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+76]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,QWORD PTR [RSP+40]
            call .L_437020

            test EAX,EAX
            jne .L_41f485

            add R13D,1
            cmp DWORD PTR [RBX+72],R13D
            ja .L_41f4be
.L_41f4ee:

            mov R8D,DWORD PTR [RBX+40]
            xor R13D,R13D
            test R8D,R8D
            je .L_41f5f4
.L_41f4fe:

            mov RDX,QWORD PTR [RBX+32]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+44]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R15
            call .L_437020

            test EAX,EAX
            jne .L_41f485

            mov EAX,DWORD PTR [RBX+40]
            add R13D,1
            cmp EAX,R13D
            ja .L_41f4fe

            test EAX,EAX
            je .L_41f5f4

            lea RAX,QWORD PTR [R15+4]
            xor R13D,R13D
            mov QWORD PTR [RSP+40],RAX
            jmp .L_41f55e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f550:

            add R13D,1
            cmp DWORD PTR [RBX+40],R13D
            jbe .L_41f5f4
.L_41f55e:

            mov RDX,QWORD PTR [RBX+32]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+44]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,QWORD PTR [RSP+40]
            call .L_437020

            test EAX,EAX
            je .L_41f550

            jmp .L_41f485
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f590:

            mov EAX,DWORD PTR [R14+188]
            mov RDX,QWORD PTR [R14+208]
            mov RCX,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [R14+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
            mov R11D,DWORD PTR [R14+184]
            jmp .L_41f415
.L_41f5e3:

            mov EAX,DWORD PTR [R14+180]
            jmp .L_41f354
.L_41f5ef:

            call __stack_chk_fail@PLT
.L_41f5f4:

            mov EAX,4
            jmp .L_41f0e1
.L_41f5fe:
          .byte 0x66
          .byte 0x90
.L_41f600:
          .long .L_41ab27-.L_41f600
          .long .L_41b19d-.L_41f600
          .long .L_41b189-.L_41f600
          .long .L_41b13a-.L_41f600
          .long .L_41b0ea-.L_41f600
          .long .L_41b060-.L_41f600
          .long .L_41b040-.L_41f600
          .long .L_41afa6-.L_41f600
          .long .L_41af7d-.L_41f600
          .long .L_41aff2-.L_41f600
          .long .L_41ab27-.L_41f600
          .long .L_41ab27-.L_41f600
          .long .L_41af32-.L_41f600
          .long .L_41af0a-.L_41f600
          .long .L_41aec1-.L_41f600
          .long .L_41ae79-.L_41f600
          .long .L_41ae29-.L_41f600
          .long .L_41add9-.L_41f600
          .long .L_41ad89-.L_41f600
          .long .L_41ad39-.L_41f600
          .long .L_41acf1-.L_41f600
          .long .L_41aca9-.L_41f600
          .long .L_41ac5b-.L_41f600
          .long .L_41ac04-.L_41f600
          .long .L_41aba4-.L_41f600
.L_41f664:
          .long .L_41bec2-.L_41f664
          .long .L_41b181-.L_41f664
          .long .L_41beb4-.L_41f664
          .long .L_41bea6-.L_41f664
          .long .L_41be9d-.L_41f664
          .long .L_41be96-.L_41f664
          .long .L_41be88-.L_41f664
          .long .L_41be81-.L_41f664
          .long .L_41be73-.L_41f664
          .long .L_41bed0-.L_41f664
          .long .L_41bed0-.L_41f664
          .long .L_41af2a-.L_41f664
          .long .L_41be6c-.L_41f664
          .long .L_41aeb9-.L_41f664
          .long .L_41ae71-.L_41f664
          .long .L_41ae21-.L_41f664
          .long .L_41add1-.L_41f664
          .long .L_41ad81-.L_41f664
          .long .L_41ad31-.L_41f664
          .long .L_41ace9-.L_41f664
          .long .L_41aca1-.L_41f664
          .long .L_41ac53-.L_41f664
          .long .L_41abfc-.L_41f664
          .long .L_41ab9c-.L_41f664
.L_41f6c4:
          .long .L_41b67f-.L_41f6c4
          .long .L_41b672-.L_41f6c4
          .long .L_41b664-.L_41f6c4
          .long .L_41b656-.L_41f6c4
          .long .L_41b64f-.L_41f6c4
          .long .L_41b643-.L_41f6c4
          .long .L_41b635-.L_41f6c4
          .long .L_41be81-.L_41f6c4
          .long .L_41b627-.L_41f6c4
          .long .L_41b68d-.L_41f6c4
          .long .L_41b68d-.L_41f6c4
          .long .L_41b61a-.L_41f6c4
          .long .L_41be6c-.L_41f6c4
          .long .L_41b60d-.L_41f6c4
          .long .L_41b600-.L_41f6c4
          .long .L_41b5f3-.L_41f6c4
          .long .L_41b5e6-.L_41f6c4
          .long .L_41b5d9-.L_41f6c4
          .long .L_41b5cc-.L_41f6c4
          .long .L_41b5bf-.L_41f6c4
          .long .L_41b5b2-.L_41f6c4
          .long .L_41b5a5-.L_41f6c4
          .long .L_41b401-.L_41f6c4
          .long .L_41b3f4-.L_41f6c4
.L_41f724:
          .long .L_41b568-.L_41f724
          .long .L_41b556-.L_41f724
          .long .L_41b543-.L_41f724
          .long .L_41b530-.L_41f724
          .long .L_41b524-.L_41f724
          .long .L_41b040-.L_41f724
          .long .L_41b511-.L_41f724
          .long .L_41b505-.L_41f724
          .long .L_41b4f2-.L_41f724
          .long .L_41b57b-.L_41f724
          .long .L_41b57b-.L_41f724
          .long .L_41b4e0-.L_41f724
          .long .L_41b4d4-.L_41f724
          .long .L_41b4c2-.L_41f724
          .long .L_41b4b0-.L_41f724
          .long .L_41b49e-.L_41f724
          .long .L_41b48c-.L_41f724
          .long .L_41b47a-.L_41f724
          .long .L_41b468-.L_41f724
          .long .L_41b456-.L_41f724
          .long .L_41b444-.L_41f724
          .long .L_41b432-.L_41f724
          .long .L_41b420-.L_41f724
          .long .L_41b40e-.L_41f724
.L_41f784:
          .long .L_41b8a7-.L_41f784
          .long .L_41b672-.L_41f784
          .long .L_41b899-.L_41f784
          .long .L_41b88b-.L_41f784
          .long .L_41b765-.L_41f784
          .long .L_41b643-.L_41f784
          .long .L_41b757-.L_41f784
          .long .L_41b76e-.L_41f784
          .long .L_41b749-.L_41f784
          .long .L_41b8b5-.L_41f784
          .long .L_41b8b5-.L_41f784
          .long .L_41b61a-.L_41f784
          .long .L_41be6c-.L_41f784
          .long .L_41b60d-.L_41f784
          .long .L_41b600-.L_41f784
          .long .L_41b5f3-.L_41f784
          .long .L_41b5e6-.L_41f784
          .long .L_41b5d9-.L_41f784
          .long .L_41b5cc-.L_41f784
          .long .L_41b5bf-.L_41f784
          .long .L_41b5b2-.L_41f784
          .long .L_41b5a5-.L_41f784
          .long .L_41b401-.L_41f784
          .long .L_41b3f4-.L_41f784
.L_41f7e4:
          .long .L_41b85d-.L_41f7e4
          .long .L_41b850-.L_41f7e4
          .long .L_41b842-.L_41f7e4
          .long .L_41b834-.L_41f7e4
          .long .L_41b1e4-.L_41f7e4
          .long .L_41b643-.L_41f7e4
          .long .L_41b826-.L_41f7e4
          .long .L_41be81-.L_41f7e4
          .long .L_41b818-.L_41f7e4
          .long .L_41b86b-.L_41f7e4
          .long .L_41b86b-.L_41f7e4
          .long .L_41b80b-.L_41f7e4
          .long .L_41b804-.L_41f7e4
          .long .L_41b7f7-.L_41f7e4
          .long .L_41b7ea-.L_41f7e4
          .long .L_41b7dd-.L_41f7e4
          .long .L_41b7d0-.L_41f7e4
          .long .L_41b7c3-.L_41f7e4
          .long .L_41b7b6-.L_41f7e4
          .long .L_41b7a9-.L_41f7e4
          .long .L_41b79c-.L_41f7e4
          .long .L_41b78f-.L_41f7e4
          .long .L_41b782-.L_41f7e4
          .long .L_41b775-.L_41f7e4
.L_41f844:
          .long .L_41bbe4-.L_41f844
          .long .L_41bbd5-.L_41f844
          .long .L_41bbc5-.L_41f844
          .long .L_41bbb5-.L_41f844
          .long .L_41bbae-.L_41f844
          .long .L_41bba0-.L_41f844
          .long .L_41bb90-.L_41f844
          .long .L_41af79-.L_41f844
          .long .L_41bb80-.L_41f844
          .long .L_41bbf4-.L_41f844
          .long .L_41bbf4-.L_41f844
          .long .L_41bb71-.L_41f844
          .long .L_41bb68-.L_41f844
          .long .L_41bb59-.L_41f844
          .long .L_41bb4a-.L_41f844
          .long .L_41bb3b-.L_41f844
          .long .L_41bb2c-.L_41f844
          .long .L_41bb1d-.L_41f844
          .long .L_41bb0e-.L_41f844
          .long .L_41baff-.L_41f844
          .long .L_41baf0-.L_41f844
          .long .L_41bae1-.L_41f844
          .long .L_41b95f-.L_41f844
          .long .L_41b950-.L_41f844
.L_41f8a4:
          .long .L_41baa4-.L_41f8a4
          .long .L_41ba92-.L_41f8a4
          .long .L_41ba7f-.L_41f8a4
          .long .L_41ba6c-.L_41f8a4
          .long .L_41b64a-.L_41f8a4
          .long .L_41b039-.L_41f8a4
          .long .L_41ba59-.L_41f8a4
          .long .L_41b505-.L_41f8a4
          .long .L_41ba46-.L_41f8a4
          .long .L_41bab7-.L_41f8a4
          .long .L_41bab7-.L_41f8a4
          .long .L_41ba34-.L_41f8a4
          .long .L_41b4d4-.L_41f8a4
          .long .L_41ba22-.L_41f8a4
          .long .L_41ba10-.L_41f8a4
          .long .L_41b9fe-.L_41f8a4
          .long .L_41b9ec-.L_41f8a4
          .long .L_41b9da-.L_41f8a4
          .long .L_41b9c8-.L_41f8a4
          .long .L_41b9b6-.L_41f8a4
          .long .L_41b9a4-.L_41f8a4
          .long .L_41b992-.L_41f8a4
          .long .L_41b980-.L_41f8a4
          .long .L_41b96e-.L_41f8a4
.L_41f904:
          .long .L_41b194-.L_41f904
          .long .L_41b181-.L_41f904
          .long .L_41b131-.L_41f904
          .long .L_41b0e1-.L_41f904
          .long .L_41b529-.L_41f904
          .long .L_41b040-.L_41f904
          .long .L_41af9d-.L_41f904
          .long .L_41be81-.L_41f904
          .long .L_41afe9-.L_41f904
          .long .L_41be5c-.L_41f904
          .long .L_41be5c-.L_41f904
          .long .L_41af2a-.L_41f904
          .long .L_41be6c-.L_41f904
          .long .L_41aeb9-.L_41f904
          .long .L_41ae71-.L_41f904
          .long .L_41ae21-.L_41f904
          .long .L_41add1-.L_41f904
          .long .L_41ad81-.L_41f904
          .long .L_41ad31-.L_41f904
          .long .L_41ace9-.L_41f904
          .long .L_41aca1-.L_41f904
          .long .L_41ac53-.L_41f904
          .long .L_41abfc-.L_41f904
          .long .L_41ab9c-.L_41f904
.L_41f964:
          .long .L_41be19-.L_41f964
          .long .L_41be05-.L_41f964
          .long .L_41bdf0-.L_41f964
          .long .L_41bddb-.L_41f964
          .long .L_41bba9-.L_41f964
          .long .L_41bdcd-.L_41f964
          .long .L_41bdb8-.L_41f964
          .long .L_41af79-.L_41f964
          .long .L_41bda3-.L_41f964
          .long .L_41be2e-.L_41f964
          .long .L_41be2e-.L_41f964
          .long .L_41bd8f-.L_41f964
          .long .L_41af01-.L_41f964
          .long .L_41bd7b-.L_41f964
          .long .L_41bd67-.L_41f964
          .long .L_41bd53-.L_41f964
          .long .L_41bd3f-.L_41f964
          .long .L_41bd2b-.L_41f964
          .long .L_41bd17-.L_41f964
          .long .L_41bd03-.L_41f964
          .long .L_41bcef-.L_41f964
          .long .L_41bcdb-.L_41f964
          .long .L_41bcc7-.L_41f964
          .long .L_41bcb3-.L_41f964
          .zero 28
.L_41f9e0:
          .string "void initial_reordering_consonant_syllable(const hb_ot_shape_plan_t*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int)"
          .zero 4
.L_41fa60:
          .string "void final_reordering_syllable(const hb_ot_shape_plan_t*, hb_buffer_t*, unsigned int, unsigned int)"
          .zero 28
.L_41fae0:
          .string "void hb_ot_map_t::get_stage_lookups(unsigned int, unsigned int, const hb_ot_map_t::lookup_map_t**, unsigned int*) const"
          .zero 8
.L_41fb60:
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ffa0:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x4
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x9
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0xd
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x12
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x14
          .byte 0x15
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4201e0:
          .byte 0xb2
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x29
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x27
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x30
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x33
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x3b
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x3e
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x26
          .byte 0x1
          .byte 0x2f
          .byte 0x1
          .byte 0x33
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x41
          .byte 0x1
          .byte 0x45
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x4c
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x6c
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x4e
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x52
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x55
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x58
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x5d
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x60
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x63
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x85
          .byte 0x1
          .byte 0x88
          .byte 0x1
          .byte 0x8c
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x93
          .byte 0x1
          .byte 0x96
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xbf
          .byte 0x1
          .byte 0x72
          .byte 0x0
          .byte 0xc2
          .byte 0x1
          .byte 0x73
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x79
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x7c
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xb4
          .byte 0x1
          .byte 0x81
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x84
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x87
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xdf
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xea
          .byte 0x1
          .byte 0xed
          .byte 0x1
          .byte 0x9e
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0xfd
          .byte 0x1
          .byte 0x98
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x9a
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x9b
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x9e
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0xa1
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xa6
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0xa9
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0xac
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0xaf
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x9d
          .byte 0x1
          .byte 0x9f
          .byte 0x1
          .byte 0x67
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa0
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x12
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x49
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x4f
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x48
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x26
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0x47
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x47
          .byte 0x1
          .byte 0x8
          .byte 0x1
          .byte 0x46
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0x45
          .byte 0x0
          .byte 0x42
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0x44
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0x11
          .byte 0x1
          .byte 0x43
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x42
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x35
          .byte 0x1
          .byte 0x13
          .byte 0x1
          .byte 0x15
          .byte 0x1
          .byte 0x41
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x14
          .byte 0x1
          .byte 0x40
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x25
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x1c
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x27
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x2b
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x2e
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x31
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x34
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x38
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x4d
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x52
          .byte 0x1
          .byte 0x6d
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x98
          .byte 0x1
          .byte 0x4b
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x6c
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x95
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x6b
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x6a
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x8e
          .byte 0x1
          .byte 0x5a
          .byte 0x1
          .byte 0x69
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x5d
          .byte 0x1
          .byte 0x5f
          .byte 0x1
          .byte 0x68
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x67
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x83
          .byte 0x1
          .byte 0x61
          .byte 0x1
          .byte 0x63
          .byte 0x1
          .byte 0x66
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x7f
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x65
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x4a
          .byte 0x0
          .byte 0x66
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x4c
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x4d
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x50
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x53
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x56
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x59
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x8b
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x94
          .byte 0x1
          .byte 0x99
          .byte 0x1
          .byte 0x9b
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0x92
          .byte 0x0
          .byte 0x91
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0xa4
          .byte 0x1
          .byte 0xe8
          .byte 0x1
          .byte 0x6f
          .byte 0x0
          .byte 0xa5
          .byte 0x1
          .byte 0xa7
          .byte 0x1
          .byte 0x90
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0xe5
          .byte 0x1
          .byte 0xa6
          .byte 0x1
          .byte 0x8f
          .byte 0x0
          .byte 0xa8
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0x8e
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xaa
          .byte 0x1
          .byte 0x8d
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0x8c
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0xd7
          .byte 0x1
          .byte 0xae
          .byte 0x1
          .byte 0x8b
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb3
          .byte 0x1
          .byte 0x8a
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0x89
          .byte 0x0
          .byte 0xc1
          .byte 0x1
          .byte 0x6e
          .byte 0x0
          .byte 0xb6
          .byte 0x1
          .byte 0xbb
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0xb9
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xbd
          .byte 0x1
          .byte 0x70
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x71
          .byte 0x0
          .byte 0xc3
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0xc6
          .byte 0x1
          .byte 0x77
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x7a
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0xcc
          .byte 0x1
          .byte 0x7d
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0xd4
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xdb
          .byte 0x1
          .byte 0xdd
          .byte 0x1
          .byte 0xe2
          .byte 0x1
          .byte 0xe4
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0x93
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xff
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xf5
          .byte 0x1
          .byte 0x11
          .byte 0x2
          .byte 0x94
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0xf3
          .byte 0x1
          .byte 0xf8
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xf7
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xfb
          .byte 0x1
          .byte 0x96
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0x95
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x99
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x9c
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x9f
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0xa2
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0xa4
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0xb1
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0x15
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420640:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x89
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8a
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8b
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8d
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x91
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x93
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x95
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x99
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x9b
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x3
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x1c
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x6
          .byte 0x1
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x19
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x16
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x13
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x1c
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4d
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x22
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x29
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4b
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2c
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x33
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x49
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x35
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x38
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x47
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x41
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x45
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x45
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x47
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4c
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x4e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x4f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x54
          .byte 0x1
          .byte 0x43
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x43
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x55
          .byte 0x1
          .byte 0x55
          .byte 0x1
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x40
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x58
          .byte 0x1
          .byte 0x58
          .byte 0x1
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x5a
          .byte 0x1
          .byte 0x3d
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x5c
          .byte 0x1
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3d
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x5c
          .byte 0x1
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x5d
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x4a
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x4a
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x5f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x29
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x29
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x45
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x61
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x41
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x47
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x63
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x38
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x49
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x64
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x65
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x64
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x29
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4b
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x66
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x67
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x66
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4c
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0xbf
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc5
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0xbf
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc5
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x70
          .byte 0x1
          .byte 0x71
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x73
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x79
          .byte 0x1
          .byte 0x7a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x71
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x7c
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x82
          .byte 0x1
          .byte 0x83
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6f
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x85
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x89
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8b
          .byte 0x1
          .byte 0x8c
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x0
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x8e
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x93
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x94
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x97
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x98
          .byte 0x1
          .byte 0x99
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x52
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x97
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x97
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x98
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x52
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9b
          .byte 0x1
          .byte 0x6b
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x9d
          .byte 0x1
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x9d
          .byte 0x1
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9e
          .byte 0x1
          .byte 0x68
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0xa0
          .byte 0x1
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0xa0
          .byte 0x1
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9f
          .byte 0x1
          .byte 0x9f
          .byte 0x1
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa1
          .byte 0x1
          .byte 0x65
          .byte 0x0
          .byte 0xa2
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x65
          .byte 0x0
          .byte 0xa2
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa4
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0xa5
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0xa5
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xa6
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x50
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x50
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x89
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x89
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8b
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x0
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa7
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xa8
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa7
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x82
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6f
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xaa
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x79
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x71
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xac
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x70
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x73
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xae
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0x9c
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0xbe
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc5
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0xb3
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x9b
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb9
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xbb
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbd
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xbf
          .byte 0x1
          .byte 0xc0
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x99
          .byte 0x0
          .byte 0xc1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc2
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc6
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xc8
          .byte 0x1
          .byte 0xc9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x97
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcb
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd2
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x95
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd4
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xdb
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x93
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdd
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe2
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xe4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xe5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe7
          .byte 0x1
          .byte 0xe8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x79
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe7
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x79
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xea
          .byte 0x1
          .byte 0x91
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x91
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xed
          .byte 0x1
          .byte 0x8e
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x8e
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf0
          .byte 0x1
          .byte 0x8b
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x8b
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf3
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xf5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x77
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x77
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x93
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xf7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1

            mov AL,1
            mov AL,1
            mov AL,1
            rol DWORD PTR [RCX],CL
            mov AL,1
            mov AL,1
            mov EAX,3472994305
            add EAX,EDX
            add ECX,EDX
            add EBP,EDX
            add DWORD PTR [RBX],EDI
            jbe .L_422e22
# WARNING: found overlapping blocks at address 22be4

.L_422e22:

            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            xchg EBP,EAX
            add BL,DL
            add DWORD PTR [RAX-1207848959],ESI
            add DWORD PTR [RAX-1342059263],ESI
            add EAX,EDI
            add DWORD PTR [RAX-385750783],ESI
            add DWORD PTR [RBX],EDI
            jbe .L_422e46
.L_422e46:

            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            mov AL,1
            mov ESP,3439439873
            add DWORD PTR [RAX-1342059263],ESI
            add DWORD PTR [RAX-536760319],ESI
            add EAX,ESP
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add EBP,ECX
            add DWORD PTR [RAX-1342059263],ESI
            add DWORD PTR [RAX-536760319],ESI
            add ECX,EDI
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add EBP,ECX
            add DWORD PTR [RAX-1342059263],ESI
            add EAX,EDI
            add DWORD PTR [RAX-536748031],ESI
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add EBP,ECX
            add DWORD PTR [RAX+2013383937],ESI
            add BYTE PTR [RAX-2013155327],DH
            add DH,CL
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add EBP,ECX
            add DWORD PTR [RAX-956185087],ESI
            add ESP,ECX
            add ESP,ECX
            add DWORD PTR [RBX],EDI
            jbe .L_422eec
.L_422eec:

            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            mov AL,1
            retf 45057
            add DWORD PTR [RAX-1342064639],ESI
            add ESI,EAX
            add EDI,EAX
            add EAX,ECX
            add ESP,ECX
            add DWORD PTR [RBX],EDI
            jbe .L_422f0c
.L_422f0c:

            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            xchg EDI,EAX
            add DL,CL
            add DWORD PTR [RAX-1207848959],ESI
            add DWORD PTR [RAX-1342061567],ESI
            add EDX,EDI
            add DWORD PTR [RAX-385750783],ESI
            add DWORD PTR [RBX],EDI
            jbe .L_422f30
.L_422f30:

            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            mov AL,1
            mov ESP,3288444929
            add DWORD PTR [RAX-1342061567],ESI
            add DWORD PTR [RAX-536760319],ESI
            add EAX,ESP
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add ESP,EAX
            add DWORD PTR [RAX-1342061567],ESI
            add DWORD PTR [RAX-536760319],ESI
            add EBX,EDI
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add ESP,EAX
            add DWORD PTR [RAX-1342061567],ESI
            add EDX,EDI
            add DWORD PTR [RAX-536748031],ESI
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add ESP,EAX
            add DWORD PTR [RAX+2013381633],ESI
            add BYTE PTR [RAX-2013155327],DH
            add CH,AL
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add ESP,EAX
            add DWORD PTR [RAX-1107182335],ESI
            add EBX,EAX
            add EBX,EAX
            add DWORD PTR [RBX],EDI
            jbe .L_422fd6
.L_422fd6:

            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            mov AL,1
            rol DWORD PTR [RCX],176
            add DWORD PTR [RAX-1342064639],ESI
            add DWORD PTR [RBP-1090404863],EDI
            add EBX,EAX
            add DWORD PTR [RBX],EDI
            jbe .L_422ff6
.L_422ff6:

            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            cdq 
            add CL,AL
            add DWORD PTR [RAX-1207848959],ESI
            add DWORD PTR [RAX-1342064127],ESI
            add ESP,EDI
            add DWORD PTR [RAX-385750783],ESI
            add DWORD PTR [RBX],EDI
            jbe .L_42301a
.L_42301a:

            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            mov AL,1
            mov ESP,3120672769
            add DWORD PTR [RAX-1342064127],ESI
            add DWORD PTR [RAX-536760319],ESI
            add EAX,ESP
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add DWORD PTR [RDX-1174294527],EDI
            add DWORD PTR [RAX-1342066687],ESI
            add EAX,ESP
            add EBP,EDI
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add DWORD PTR [RDX-1174294527],EDI
            add DWORD PTR [RAX-1342047231],ESI
            add EAX,ESP
            add EAX,ESP
            add DWORD PTR [RAX-1258260991],ESI
            add DWORD PTR [RSI-1342066687],ESI
            add DWORD PTR [RAX-1342063615],ESI
            add DWORD PTR [RDX-1174294527],EDI
            add DWORD PTR [RAX],EDI
            mov AL,1
            mov AL,1
            mov BYTE PTR [RAX],AL
            mov EBX,1979822081
            add BYTE PTR [RBP-1342065151],DH
            add DWORD PTR [RAX-1140740095],ESI
            add DWORD PTR [RAX-1342064127],ESI
            add DWORD PTR [RCX-1274957311],ESI
            add DWORD PTR [RCX+RAX*1+7733371],ESI
            mov CH,1
            mov DH,1
            mov AL,1
            mov AL,1
            mov AL,1
            mov BH,1
            mov AL,1
            mov AL,1
            mov EAX,3154227201
            add BYTE PTR [RBP-1090470400],BH
            add DH,BH
            add DWORD PTR [RDX+1],EBP
            push RSP
            add BYTE PTR [RDI],CL
            ret 49920
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0xbc
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0xcb
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0xcd
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x9
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0xa
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xae
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xb
          .byte 0x2
          .byte 0x68
          .byte 0x1
          .byte 0xc
          .byte 0x2
          .byte 0x6f
          .byte 0x1
          .byte 0xd
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x6f
          .byte 0x1
          .byte 0x10
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x10
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x6f
          .byte 0x1
          .byte 0x10
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x6f
          .byte 0x1
          .byte 0xd
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x11
          .byte 0x2
          .byte 0xa0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0xb8
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x14
          .byte 0x2
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x14
          .byte 0x2
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x13
          .byte 0x2
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0xb5
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x1b
          .byte 0x2
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x1b
          .byte 0x2
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1c
          .byte 0x2
          .byte 0xaf
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0xab
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xb
          .byte 0x2
          .byte 0x68
          .byte 0x1
          .byte 0x23
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0xba
          .byte 0x0
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0xba
          .byte 0x0
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x27
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x28
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x29
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x2a
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x2b
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x27
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423480:
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x14
          .byte 0x1
          .byte 0x16
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x2c
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x54
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x6c
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x90
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0xa8
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xc0
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xce
          .byte 0x1
          .byte 0xdf
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0xef
          .byte 0x1

            int 1 
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x7
          .byte 0x2
          .byte 0xc
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x12
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0x1c
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x2c
          .byte 0x2
          .byte 0x2e
          .byte 0x2
          .byte 0x30
          .byte 0x2
          .byte 0x36
          .byte 0x2
          .byte 0x38
          .byte 0x2
          .byte 0x3a
          .byte 0x2
          .byte 0x46
          .byte 0x2
          .byte 0x52
          .byte 0x2
          .byte 0x5e
          .byte 0x2
          .byte 0x6a
          .byte 0x2
          .byte 0x76
          .byte 0x2
          .byte 0x82
          .byte 0x2
          .byte 0x8e
          .byte 0x2
          .byte 0x9a
          .byte 0x2
          .byte 0xa6
          .byte 0x2
          .byte 0xa8
          .byte 0x2
          .byte 0xb9
          .byte 0x2
          .byte 0xc0
          .byte 0x2
          .byte 0xc5
          .byte 0x2
          .byte 0xc9
          .byte 0x2
          .byte 0xcb
          .byte 0x2
          .byte 0xd0
          .byte 0x2
          .byte 0xd4
          .byte 0x2
          .byte 0xd6
          .byte 0x2
          .byte 0xdb
          .byte 0x2
          .byte 0xdf
          .byte 0x2
          .byte 0xe1
          .byte 0x2
          .byte 0xe6
          .byte 0x2
          .byte 0xea
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xf2
          .byte 0x2
          .byte 0xf4
          .byte 0x2
          .byte 0xf6
          .byte 0x2
          .byte 0xfc
          .byte 0x2
          .byte 0xfe
          .byte 0x2
          .byte 0x0
          .byte 0x3
          .byte 0x6
          .byte 0x3
          .byte 0x8
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0x10
          .byte 0x3
          .byte 0x12
          .byte 0x3
          .byte 0x14
          .byte 0x3
          .byte 0x20
          .byte 0x3
          .byte 0x2c
          .byte 0x3
          .byte 0x38
          .byte 0x3
          .byte 0x44
          .byte 0x3
          .byte 0x50
          .byte 0x3
          .byte 0x5c
          .byte 0x3
          .byte 0x68
          .byte 0x3
          .byte 0x74
          .byte 0x3
          .byte 0x80
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x98
          .byte 0x3
          .byte 0x9d
          .byte 0x3
          .byte 0xa9
          .byte 0x3
          .byte 0xb5
          .byte 0x3
          .byte 0xba
          .byte 0x3
          .byte 0xbe
          .byte 0x3
          .byte 0xc3
          .byte 0x3
          .byte 0xc7
          .byte 0x3
          .byte 0xc9
          .byte 0x3
          .byte 0xce
          .byte 0x3
          .byte 0xd2
          .byte 0x3
          .byte 0xd4
          .byte 0x3
          .byte 0xd9
          .byte 0x3
          .byte 0xdd
          .byte 0x3
          .byte 0xdf
          .byte 0x3
          .byte 0xe1
          .byte 0x3
          .byte 0xf2
          .byte 0x3
          .byte 0xf9
          .byte 0x3
          .byte 0xff
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x4
          .byte 0x9
          .byte 0x4
          .byte 0xb
          .byte 0x4
          .byte 0xd
          .byte 0x4
          .byte 0x13
          .byte 0x4
          .byte 0x15
          .byte 0x4
          .byte 0x17
          .byte 0x4
          .byte 0x1d
          .byte 0x4
          .byte 0x1f
          .byte 0x4
          .byte 0x21
          .byte 0x4
          .byte 0x23
          .byte 0x4
          .byte 0x36
          .byte 0x4
          .byte 0x46
          .byte 0x4
          .byte 0x56
          .byte 0x4
          .byte 0x65
          .byte 0x4
          .byte 0x76
          .byte 0x4
          .byte 0x86
          .byte 0x4
          .byte 0x96
          .byte 0x4
          .byte 0xa5
          .byte 0x4
          .byte 0xb6
          .byte 0x4
          .byte 0xc6
          .byte 0x4
          .byte 0xd6
          .byte 0x4
          .byte 0xe5
          .byte 0x4
          .byte 0xf6
          .byte 0x4
          .byte 0x6
          .byte 0x5
          .byte 0x16
          .byte 0x5
          .byte 0x25
          .byte 0x5
          .byte 0x36
          .byte 0x5
          .byte 0x46
          .byte 0x5
          .byte 0x56
          .byte 0x5
          .byte 0x65
          .byte 0x5
          .byte 0x70
          .byte 0x5
          .byte 0x7b
          .byte 0x5
          .byte 0x82
          .byte 0x5
          .byte 0x85
          .byte 0x5
          .byte 0x87
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0x8d
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0x96
          .byte 0x5
          .byte 0xa2
          .byte 0x5
          .byte 0xab
          .byte 0x5
          .byte 0xb2
          .byte 0x5
          .byte 0xbb
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0xd4
          .byte 0x5
          .byte 0xe1
          .byte 0x5
          .byte 0xed
          .byte 0x5
          .byte 0xf8
          .byte 0x5
          .byte 0x5
          .byte 0x6
          .byte 0x11
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x29
          .byte 0x6
          .byte 0x35
          .byte 0x6
          .byte 0x40
          .byte 0x6
          .byte 0x4d
          .byte 0x6
          .byte 0x59
          .byte 0x6
          .byte 0x64
          .byte 0x6
          .byte 0x71
          .byte 0x6
          .byte 0x82
          .byte 0x6
          .byte 0x8e
          .byte 0x6
          .byte 0x9e
          .byte 0x6
          .byte 0xae
          .byte 0x6
          .byte 0xbf
          .byte 0x6
          .byte 0xd0
          .byte 0x6
          .byte 0xe1
          .byte 0x6
          .byte 0xf2
          .byte 0x6
          .byte 0x3
          .byte 0x7
          .byte 0x13
          .byte 0x7
          .byte 0x23
          .byte 0x7
          .byte 0x34
          .byte 0x7
          .byte 0x45
          .byte 0x7
          .byte 0x56
          .byte 0x7
          .byte 0x67
          .byte 0x7
          .byte 0x78
          .byte 0x7
          .byte 0x88
          .byte 0x7
          .byte 0x98
          .byte 0x7
          .byte 0xa9
          .byte 0x7
          .byte 0xba
          .byte 0x7
          .byte 0xcb
          .byte 0x7
          .byte 0xdc
          .byte 0x7
          .byte 0xed
          .byte 0x7
          .byte 0xfd
          .byte 0x7
          .byte 0xd
          .byte 0x8
          .byte 0x1e
          .byte 0x8
          .byte 0x2f
          .byte 0x8
          .byte 0x40
          .byte 0x8
          .byte 0x51
          .byte 0x8
          .byte 0x62
          .byte 0x8
          .byte 0x72
          .byte 0x8
          .byte 0x82
          .byte 0x8
          .byte 0x92
          .byte 0x8
          .byte 0xa2
          .byte 0x8
          .byte 0xb1
          .byte 0x8
          .byte 0xc2
          .byte 0x8
          .byte 0xd2
          .byte 0x8
          .byte 0xe2
          .byte 0x8
          .byte 0xf1
          .byte 0x8
          .byte 0x2
          .byte 0x9
          .byte 0x12
          .byte 0x9
          .byte 0x22
          .byte 0x9
          .byte 0x31
          .byte 0x9
          .byte 0x42
          .byte 0x9
          .byte 0x52
          .byte 0x9
          .byte 0x62
          .byte 0x9
          .byte 0x71
          .byte 0x9
          .byte 0x82
          .byte 0x9
          .byte 0x92
          .byte 0x9
          .byte 0xa2
          .byte 0x9
          .byte 0xb1
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xc7
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xd1
          .byte 0x9
          .byte 0xd3
          .byte 0x9
          .byte 0xd6
          .byte 0x9
          .byte 0xd9
          .byte 0x9
          .byte 0xdb
          .byte 0x9
          .byte 0xe2
          .byte 0x9
          .byte 0xee
          .byte 0x9
          .byte 0xf7
          .byte 0x9
          .byte 0xfe
          .byte 0x9
          .byte 0x7
          .byte 0xa
          .byte 0x13
          .byte 0xa
          .byte 0x20
          .byte 0xa
          .byte 0x2d
          .byte 0xa
          .byte 0x39
          .byte 0xa
          .byte 0x44
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x5d
          .byte 0xa
          .byte 0x68
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x81
          .byte 0xa
          .byte 0x8c
          .byte 0xa
          .byte 0x99
          .byte 0xa
          .byte 0xa5
          .byte 0xa
          .byte 0xb0
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xce
          .byte 0xa
          .byte 0xda
          .byte 0xa
          .byte 0xea
          .byte 0xa
          .byte 0xfa
          .byte 0xa
          .byte 0xb
          .byte 0xb
          .byte 0x1c
          .byte 0xb
          .byte 0x2d
          .byte 0xb
          .byte 0x3e
          .byte 0xb
          .byte 0x4f
          .byte 0xb
          .byte 0x5f
          .byte 0xb
          .byte 0x6f
          .byte 0xb
          .byte 0x80
          .byte 0xb
          .byte 0x91
          .byte 0xb
          .byte 0xa2
          .byte 0xb
          .byte 0xb3
          .byte 0xb
          .byte 0xc4
          .byte 0xb
          .byte 0xd4
          .byte 0xb
          .byte 0xe4
          .byte 0xb
          .byte 0xf5
          .byte 0xb
          .byte 0x6
          .byte 0xc
          .byte 0x17
          .byte 0xc
          .byte 0x28
          .byte 0xc
          .byte 0x39
          .byte 0xc
          .byte 0x49
          .byte 0xc
          .byte 0x59
          .byte 0xc
          .byte 0x6a
          .byte 0xc
          .byte 0x7b
          .byte 0xc
          .byte 0x8c
          .byte 0xc
          .byte 0x9d
          .byte 0xc
          .byte 0xa9
          .byte 0xc
          .byte 0xba
          .byte 0xc
          .byte 0xca
          .byte 0xc
          .byte 0xda
          .byte 0xc
          .byte 0xe9
          .byte 0xc
          .byte 0xfa
          .byte 0xc
          .byte 0xa
          .byte 0xd
          .byte 0x1a
          .byte 0xd
          .byte 0x29
          .byte 0xd
          .byte 0x3a
          .byte 0xd
          .byte 0x4a
          .byte 0xd
          .byte 0x5a
          .byte 0xd
          .byte 0x69
          .byte 0xd
          .byte 0x7a

            or EAX,228199818
            test EAX,3389897229
            or EAX,233377242
            hlt 
          .byte 0xd
          .byte 0xff
          .byte 0xd
          .byte 0x6
          .byte 0xe
          .byte 0x9
          .byte 0xe
          .byte 0xb
          .byte 0xe
          .byte 0xe
          .byte 0xe
          .byte 0x11
          .byte 0xe
          .byte 0x13
          .byte 0xe
          .byte 0x1a
          .byte 0xe
          .byte 0x26
          .byte 0xe
          .byte 0x2f
          .byte 0xe
          .byte 0x36
          .byte 0xe
          .byte 0x3f
          .byte 0xe
          .byte 0x4b
          .byte 0xe
          .byte 0x58
          .byte 0xe
          .byte 0x65
          .byte 0xe
          .byte 0x71
          .byte 0xe
          .byte 0x7c
          .byte 0xe
          .byte 0x89
          .byte 0xe
          .byte 0x95
          .byte 0xe
          .byte 0xa0
          .byte 0xe
          .byte 0xad
          .byte 0xe
          .byte 0xb9
          .byte 0xe
          .byte 0xc4
          .byte 0xe
          .byte 0xd1
          .byte 0xe
          .byte 0xdd
          .byte 0xe
          .byte 0xe8
          .byte 0xe
          .byte 0xf5
          .byte 0xe
          .byte 0x6
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x22
          .byte 0xf
          .byte 0x32
          .byte 0xf
          .byte 0x43
          .byte 0xf
          .byte 0x54
          .byte 0xf
          .byte 0x65
          .byte 0xf
          .byte 0x76
          .byte 0xf
          .byte 0x87
          .byte 0xf
          .byte 0x97
          .byte 0xf
          .byte 0xa7
          .byte 0xf
          .byte 0xb8
          .byte 0xf
          .byte 0xc9
          .byte 0xf
          .byte 0xda
          .byte 0xf
          .byte 0xeb
          .byte 0xf
          .byte 0xfc
          .byte 0xf
          .byte 0xc
          .byte 0x10
          .byte 0x1c
          .byte 0x10
          .byte 0x2d
          .byte 0x10
          .byte 0x3e
          .byte 0x10
          .byte 0x4f
          .byte 0x10
          .byte 0x60
          .byte 0x10
          .byte 0x71
          .byte 0x10
          .byte 0x81
          .byte 0x10
          .byte 0x91
          .byte 0x10
          .byte 0xa2
          .byte 0x10
          .byte 0xb3
          .byte 0x10
          .byte 0xc4
          .byte 0x10
          .byte 0xd5
          .byte 0x10
          .byte 0xe6
          .byte 0x10
          .byte 0xf2
          .byte 0x10
          .byte 0x2
          .byte 0x11
          .byte 0xe
          .byte 0x11
          .byte 0x1e
          .byte 0x11
          .byte 0x2e
          .byte 0x11
          .byte 0x3d
          .byte 0x11
          .byte 0x4e
          .byte 0x11
          .byte 0x5e
          .byte 0x11
          .byte 0x6e
          .byte 0x11
          .byte 0x7d
          .byte 0x11
          .byte 0x8e
          .byte 0x11
          .byte 0x9e
          .byte 0x11
          .byte 0xae
          .byte 0x11
          .byte 0xbd
          .byte 0x11
          .byte 0xce
          .byte 0x11
          .byte 0xde
          .byte 0x11
          .byte 0xee
          .byte 0x11
          .byte 0xfd
          .byte 0x11
          .byte 0xe
          .byte 0x12
          .byte 0x1e
          .byte 0x12
          .byte 0x2e
          .byte 0x12
          .byte 0x3d
          .byte 0x12
          .byte 0x48
          .byte 0x12
          .byte 0x53
          .byte 0x12
          .byte 0x5a
          .byte 0x12
          .byte 0x5d
          .byte 0x12
          .byte 0x5f
          .byte 0x12
          .byte 0x62
          .byte 0x12
          .byte 0x65
          .byte 0x12
          .byte 0x67
          .byte 0x12
          .byte 0x6e
          .byte 0x12
          .byte 0x7a
          .byte 0x12
          .byte 0x83
          .byte 0x12
          .byte 0x8a
          .byte 0x12
          .byte 0x93
          .byte 0x12
          .byte 0x9f
          .byte 0x12
          .byte 0xac
          .byte 0x12
          .byte 0xb9
          .byte 0x12
          .byte 0xc5
          .byte 0x12
          .byte 0xd0
          .byte 0x12
          .byte 0xdd
          .byte 0x12
          .byte 0xe9
          .byte 0x12
          .byte 0xf4
          .byte 0x12
          .byte 0x1
          .byte 0x13
          .byte 0xd
          .byte 0x13
          .byte 0x18
          .byte 0x13
          .byte 0x25
          .byte 0x13
          .byte 0x31
          .byte 0x13
          .byte 0x3c
          .byte 0x13
          .byte 0x49
          .byte 0x13
          .byte 0x5a
          .byte 0x13
          .byte 0x66
          .byte 0x13
          .byte 0x76
          .byte 0x13
          .byte 0x86
          .byte 0x13
          .byte 0x97
          .byte 0x13
          .byte 0xa8
          .byte 0x13
          .byte 0xb9
          .byte 0x13
          .byte 0xca
          .byte 0x13
          .byte 0xdb
          .byte 0x13
          .byte 0xeb
          .byte 0x13
          .byte 0xfb
          .byte 0x13
          .byte 0xc
          .byte 0x14
          .byte 0x1d
          .byte 0x14
          .byte 0x2e
          .byte 0x14
          .byte 0x3f
          .byte 0x14
          .byte 0x50
          .byte 0x14
          .byte 0x60
          .byte 0x14
          .byte 0x70
          .byte 0x14
          .byte 0x81
          .byte 0x14
          .byte 0x92
          .byte 0x14
          .byte 0xa3
          .byte 0x14
          .byte 0xb4
          .byte 0x14
          .byte 0xc5
          .byte 0x14
          .byte 0xd5
          .byte 0x14
          .byte 0xe5
          .byte 0x14
          .byte 0xf6
          .byte 0x14
          .byte 0x7
          .byte 0x15
          .byte 0x18
          .byte 0x15
          .byte 0x29
          .byte 0x15
          .byte 0x3a
          .byte 0x15
          .byte 0x4a
          .byte 0x15
          .byte 0x5c
          .byte 0x15
          .byte 0x6c
          .byte 0x15
          .byte 0x7e
          .byte 0x15
          .byte 0x8a
          .byte 0x15
          .byte 0x91
          .byte 0x15
          .byte 0x94
          .byte 0x15
          .byte 0x96
          .byte 0x15
          .byte 0x99
          .byte 0x15
          .byte 0x9c
          .byte 0x15
          .byte 0x9e
          .byte 0x15
          .byte 0xa5
          .byte 0x15
          .byte 0xb6
          .byte 0x15
          .byte 0xc6
          .byte 0x15
          .byte 0xd6
          .byte 0x15
          .byte 0xe5
          .byte 0x15
          .byte 0xf5
          .byte 0x15
          .byte 0x5
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x23
          .byte 0x16
          .byte 0x2f
          .byte 0x16
          .byte 0x3a
          .byte 0x16
          .byte 0x47
          .byte 0x16
          .byte 0x53
          .byte 0x16
          .byte 0x5e
          .byte 0x16
          .byte 0x6b
          .byte 0x16
          .byte 0x77
          .byte 0x16
          .byte 0x82
          .byte 0x16
          .byte 0x8f
          .byte 0x16
          .byte 0x9b
          .byte 0x16
          .byte 0xa6
          .byte 0x16
          .byte 0xb2
          .byte 0x16
          .byte 0xbb
          .byte 0x16
          .byte 0xc2
          .byte 0x16
          .byte 0xcb
          .byte 0x16
          .byte 0xd7
          .byte 0x16
          .byte 0xe8
          .byte 0x16
          .byte 0xf1
          .byte 0x16
          .byte 0xf8
          .byte 0x16
          .byte 0xff
          .byte 0x16
          .byte 0x2
          .byte 0x17
          .byte 0x4
          .byte 0x17
          .byte 0x7
          .byte 0x17
          .byte 0xa
          .byte 0x17
          .byte 0xc
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4238c0:
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x4
          .byte 0xb
          .byte 0xb
          .byte 0x4
          .byte 0x3
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x12
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xa
          .byte 0xa
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0x10
          .byte 0xb
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xa
          .byte 0xa
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0x10
          .byte 0xb
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xb
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xa
          .byte 0xa
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb

            or CL,BYTE PTR [RBX+RCX*1]
            or CL,BYTE PTR [RAX+RDX*1]
            or ECX,DWORD PTR [RDI]
            movups XMM2,XMMWORD PTR [RAX]
            adc BYTE PTR [RAX],DL
            adc BYTE PTR [RDI],CL
            movups XMM2,XMMWORD PTR [RAX]
            adc BYTE PTR [RAX],DL
            adc BYTE PTR [RDI],CL
            movups XMM2,XMMWORD PTR [RAX]
            adc BYTE PTR [RAX],DL
            adc BYTE PTR [RDI],CL
            movups XMM2,XMMWORD PTR [RAX]
            adc BYTE PTR [RAX],DL
            adc BYTE PTR [RBX],CL
            ud2 
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xa
          .byte 0xa
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0x10
          .byte 0xb
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0x11
          .byte 0xf
          .byte 0x11
          .byte 0xb
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x10
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423ae0:
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0x8
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x8
          .byte 0x8
.L_423c44:
          .byte 0x1
          .byte 0x12
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x11
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423f20:
          .byte 0x74
          .byte 0x6b
          .byte 0x75
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423f28:
          .byte 0x6e
          .byte 0x68
          .byte 0x6b
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x68
          .byte 0x70
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x72
          .byte 0x6b
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x6c
          .byte 0x61
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x74
          .byte 0x61
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x63
          .byte 0x6a
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x61
          .byte 0x66
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423f88:

            jae .L_423fef
          .byte 0x72
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x6c
          .byte 0x61
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x69
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDX],AL
            add BYTE PTR [RAX],AL
.L_423fef:

            add BYTE PTR [RDX],CL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX+118],AH
            add DWORD PTR GS:[RAX],R8D
            add BYTE PTR [RAX],AL
            or QWORD PTR [R8],R8
            add BYTE PTR [RDX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDX],CL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI+110],AH
            add DWORD PTR GS:[RAX],EAX
            add BYTE PTR [RAX],AL
            int 9
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RCX],CL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RBP+114],DH
            jne .L_42407f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x6a
          .byte 0x75
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x79
          .byte 0x72
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0

            or R8,QWORD PTR [R8]
# WARNING: found overlapping blocks at address 23e45

          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
.L_42407f:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RBP+RBP*2+97],CH
            push RSP
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            int 11
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x6c
          .byte 0x65
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x64
          .byte 0x6e
          .byte 0x4b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x79
          .byte 0x6c
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x6e
          .byte 0x69
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x6d
          .byte 0x68
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x9
          .byte 0x0
          .byte 0x0
.L_424144:
          .byte 0xb0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x17
          .byte 0x0
          .byte 0x0
.L_424170:
          .string "hb-ot-shape-complex-indic.cc"
.L_42418d:
          .string "hb-ot-map-private.hh"
.L_4241a2:
          .string "!has_reph"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4241b0:
          .string "reph_pos != REPH_POS_DONT_CARE"
# WARNING: found overlapping blocks at address 23f98

.L_4241d0:
          .string "stage <= stages[table_index].len"
          .zero 7
.L_4241f8:
          .string "indic_plan->config->reph_mode == REPH_MODE_VIS_REPHA"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424230:

            mov EAX,EDI
            shr EAX,12
            cmp EAX,1
            je .L_424310

            jb .L_4242d0

            cmp EAX,2
            je .L_424290

            cmp EAX,10
            jne .L_4242c8

            lea EAX,DWORD PTR [RDI-43232]
            cmp EAX,23
            jbe .L_424368

            lea EAX,DWORD PTR [RDI-43488]
            cmp EAX,31
            jbe .L_4243f0

            lea EDX,DWORD PTR [RDI-43616]
            mov EAX,3840
            cmp EDX,31
            ja .L_4242cd

            lea EDX,DWORD PTR [RDI-41864]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0x90
.L_424290:

            lea EAX,DWORD PTR [RDI-8200]
            cmp EAX,15
            jbe .L_424350

            lea EAX,DWORD PTR [RDI-8304]
            cmp EAX,23
            jbe .L_4243c0

            cmp EDI,9676
            mov EDX,3851
            mov EAX,3840
            cmove EAX,EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4242c8:

            mov EAX,3840
.L_4242cd:

            ret 
          .byte 0x90
.L_4242d0:

            lea EAX,DWORD PTR [RDI-40]
            cmp EAX,23
            jbe .L_424398

            lea EAX,DWORD PTR [RDI-176]
            cmp EAX,39
            jbe .L_4243d8

            lea EAX,DWORD PTR [RDI-2304]
            cmp EAX,1271
            jbe .L_4243a8

            cmp EDI,160
            mov EDX,3851
            mov EAX,3840
            cmove EAX,EDX
            ret 
.L_424310:

            lea EAX,DWORD PTR [RDI-4096]
            cmp EAX,159
            jbe .L_424380

            lea EAX,DWORD PTR [RDI-6016]
            cmp EAX,111
            jbe .L_424408

            lea EDX,DWORD PTR [RDI-7376]
            mov EAX,3840
            cmp EDX,47
            ja .L_4242cd

            lea EDX,DWORD PTR [RDI-5768]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66

            nop
.L_424350:

            lea EDX,DWORD PTR [RDI-6544]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424368:

            lea EDX,DWORD PTR [RDI-41536]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424380:

            lea EDX,DWORD PTR [RDI-2760]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424398:

            lea RDX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RDX+RAX*2]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4243a8:

            lea EDX,DWORD PTR [RDI-2240]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4243c0:

            lea EDX,DWORD PTR [RDI-6632]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4243d8:

            lea EDX,DWORD PTR [RDI-152]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4243f0:

            lea EDX,DWORD PTR [RDI-41768]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424408:

            lea EDX,DWORD PTR [RDI-4520]
            lea RAX,QWORD PTR [RIP+.L_424420]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
.L_42441a:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424420:
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb

            ud2 

            ud2 

            ud2 

            ud2 

            ud2 

            ud2 
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x8
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x4
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x11
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x6
          .byte 0xf
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x4
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0xb
          .byte 0xe
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x11
          .byte 0xb
          .byte 0x11
          .byte 0xf
          .byte 0x11
          .byte 0x8
          .byte 0x11
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x11
          .byte 0x8
          .byte 0x11
          .byte 0x8
          .byte 0x11
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x11
          .byte 0x8
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x3
          .byte 0xb
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0xd
          .byte 0x6
          .byte 0xd
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x3
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0xe
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0xf
          .byte 0x8
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x5
          .byte 0xf
          .byte 0x6
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0x6
          .byte 0x3
          .byte 0xb
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
.L_425210:

            movzx EDX,BYTE PTR [RDI+19]
            movzx EAX,BYTE PTR [RSI+19]
            cmp EDX,EAX
            jl .L_425228

            setne AL
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425228:

            mov EAX,4294967295
            ret 
.L_42522e:

            nop
            nop
.L_425230:

            mov RCX,QWORD PTR [RDX+200]
            mov EDX,DWORD PTR [RDX+184]
            test EDX,EDX
            je .L_425264

            sub EDX,1
            lea RAX,QWORD PTR [RCX+15]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425258:

            mov BYTE PTR [RAX],0
            add RAX,20
            cmp RAX,RDX
            jne .L_425258
.L_425264:

            ret 
.L_425266:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425270:

            add RDI,48
            mov ECX,1
            xor EDX,EDX
            mov ESI,1818847073
            jmp .L_44b250
.L_425285:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425290:

            push R12
            push RBP
            lea RBP,QWORD PTR [RDI+48]
            push RBX
.L_425298:

            lea RDX,QWORD PTR [RIP+.L_425380]
            xor ESI,ESI
            mov RDI,RBP
            lea RBX,QWORD PTR [RIP+.L_4266e0]
            call .L_44b450

            mov ECX,1
            mov EDX,1
            mov ESI,1819239276
            mov RDI,RBP
            lea R12,QWORD PTR [RBX+16]
            call .L_44b250

            mov ECX,1
            mov EDX,1
            mov ESI,1667460464
            mov RDI,RBP
            call .L_44b250

            lea RDX,QWORD PTR [RIP+.L_425720]
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            mov ESI,1919969382
.L_4252f8:

            mov ECX,5
            mov EDX,1
            mov RDI,RBP
            call .L_44b250

            add RBX,4
            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            cmp RBX,R12
            je .L_425328

            mov ESI,DWORD PTR [RBX]
            jmp .L_4252f8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425328:

            lea RDX,QWORD PTR [RIP+.L_425230]
            lea RBX,QWORD PTR [RIP+.L_4266c0]
            xor ESI,ESI
            mov RDI,RBP
            call .L_44b450

            lea R12,QWORD PTR [RBX+28]
            mov ESI,1886545267
            jmp .L_425352
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425350:

            mov ESI,DWORD PTR [RBX]
.L_425352:

            mov ECX,5
            mov EDX,1
            mov RDI,RBP
            add RBX,4
            call .L_44b250

            cmp RBX,R12
            jne .L_425350

            pop RBX
.L_42536e:

            pop RBP
            pop R12
            ret 
.L_425372:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425380:

            mov ECX,DWORD PTR [RDX+184]
            test ECX,ECX
            jne .L_425390

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425390:

            push R15
            push R14
            lea R11,QWORD PTR [RIP+.L_426660]
            push R13
            push R12
            lea R10,QWORD PTR [RIP+.L_426140]
            push RBP
            push RBX
.L_4253a8:

            lea R14,QWORD PTR [RIP+.L_426100]
            mov RDI,QWORD PTR [RDX+200]
            lea R13,QWORD PTR [RIP+.L_4260c0]
            lea R15,QWORD PTR [RIP+.L_425fe0]
            mov R9D,1
            mov EBX,1
            xor EBP,EBP
            xor ESI,ESI
            mov EAX,31
            xor R8D,R8D
            lea RDX,QWORD PTR [RDI+35]
            mov R12,R11
            mov QWORD PTR [RSP-8],RDX
.L_4253e7:

            mov EDX,ESI
            lea RDX,QWORD PTR [RDX+RDX*4]
            movzx EDX,BYTE PTR [RDI+RDX*4+18]
            cmp DL,R9B
            jb .L_425406

            cmp DL,BYTE PTR [R12+1]
            ja .L_425406

            movzx EAX,DL
            sub EAX,R9D
            cdqe 
.L_425406:

            add RAX,R10
            movsx EAX,BYTE PTR [RAX+R8*1]
.L_42540e:

            cdqe 
            movsx RDX,BYTE PTR [R14+RAX*1]
            movzx EAX,BYTE PTR [R13+RAX*1]
            test AL,AL
            jne .L_425460
.L_42541f:

            add ESI,1
.L_425422:

            cmp ECX,ESI
            je .L_4256f1

            lea R9,QWORD PTR [RIP+.L_4265c0]
            movsxd RAX,EDX
            movsx R8,WORD PTR [R9+RAX*2]
            lea R9,QWORD PTR [RIP+.L_426620]
            movsx RAX,BYTE PTR [R9+RAX*1]
            test AL,AL
            jle .L_425406

            lea R12D,DWORD PTR [RDX+RDX*1]
            movsxd R12,R12D
            add R12,R11
            movzx R9D,BYTE PTR [R12]
            jmp .L_4253e7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425460:

            sub EAX,3
            cmp AL,7
            ja .L_42541f

            movzx EAX,AL
            movsxd RAX,DWORD PTR [R15+RAX*4]
            add RAX,R15
            jmp RAX
.L_425473:

            cmp ESI,EBP
            jbe .L_4254bc

            lea R9D,DWORD PTR [RSI-1]
            mov R12D,EBP
            mov R8D,EBX
            lea RAX,QWORD PTR [R12+R12*4]
            shl R8D,4
            sub R9D,EBP
            mov RBP,QWORD PTR [RSP-8]
            or R8D,3
            add R9,R12
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBP+R9*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4254b0:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RAX,R9
            jne .L_4254b0
.L_4254bc:

            add EBX,1
            mov EBP,ESI
            cmp EBX,16
            jne .L_425422

            jmp .L_42556a
.L_4254cf:

            cmp ESI,EBP
            jbe .L_4254bc

            lea R9D,DWORD PTR [RSI-1]
            mov R12D,EBP
            mov R8D,EBX
            lea RAX,QWORD PTR [R12+R12*4]
            shl R8D,4
            sub R9D,EBP
            mov RBP,QWORD PTR [RSP-8]
            or R8D,2
            add R9,R12
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBP+R9*4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_425508:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RAX,R9
            jne .L_425508

            jmp .L_4254bc
.L_425516:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_425558

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            lea RSI,QWORD PTR [RBP+RSI*4]
            nop
            nop
            nop
.L_425548:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_425548

            nop
            nop
            nop
            nop
.L_425558:

            add EBX,1
            mov ESI,R9D
            mov EBP,R9D
            cmp EBX,16
            jne .L_425422
.L_42556a:

            mov EBX,1
            jmp .L_425422
.L_425574:

            cmp ESI,EBP
            jbe .L_4254bc

            lea R8D,DWORD PTR [RSI-1]
            mov R12D,EBP
            mov R9D,EBX
            lea RAX,QWORD PTR [R12+R12*4]
            shl R9D,4
            sub R8D,EBP
            mov RBP,QWORD PTR [RSP-8]
            add R8,R12
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [RBP+R8*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4255b0:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp RAX,R8
            jne .L_4255b0

            jmp .L_4254bc
.L_4255c1:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_425558

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            or R8D,3
            lea RSI,QWORD PTR [RBP+RSI*4]
            nop
            nop
            nop
            nop
.L_4255f8:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_4255f8

            jmp .L_425558
.L_425609:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_425558

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            or R8D,1
            lea RSI,QWORD PTR [RBP+RSI*4]
.L_425640:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RAX,RSI
            jne .L_425640

            jmp .L_425558
.L_425651:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_425558

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            or R8D,3
            lea RSI,QWORD PTR [RBP+RSI*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425690:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_425690

            jmp .L_425558
.L_4256a1:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_425558

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            or R8D,2
            lea RSI,QWORD PTR [RBP+RSI*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4256e0:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_4256e0

            jmp .L_425558
.L_4256f1:

            lea RAX,QWORD PTR [RIP+.L_426060]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_425709

            sub EAX,1
            jmp .L_42540e
.L_425709:

            pop RBX
.L_42570a:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_425714:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425720:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_42572e:

            mov R12D,DWORD PTR [RDX+184]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX+200]
            test R12D,R12D
            je .L_4259d0

            mov RBP,RDX
            movzx EDX,BYTE PTR [RAX+15]
            mov RDI,RSI
            and EDX,15
            cmp DL,2
            je .L_4259f8

            lea EDX,DWORD PTR [R12-1]
            add RAX,35
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RDX*4]
            jmp .L_425793
          .byte 0x66
          .byte 0x90
.L_425780:

            movzx EDX,BYTE PTR [RAX]
            add RAX,20
            and EDX,15
            cmp DL,2
            je .L_4259f8
.L_425793:

            cmp RAX,RCX
            jne .L_425780
.L_425798:

            test R12D,R12D
            je .L_4259d0

            mov RDI,QWORD PTR [RBP+200]
            xor EBX,EBX
            movzx ECX,BYTE PTR [RDI+15]
            lea RAX,QWORD PTR [RDI+35]
            jmp .L_4257c1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4257b8:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_4257c9
.L_4257c1:

            add EBX,1
            cmp EBX,R12D
            jne .L_4257b8
.L_4257c9:

            xor ESI,ESI
            and ECX,15
            je .L_425822
.L_4257d0:

            cmp CL,2
            je .L_425822
.L_4257d5:

            mov EAX,EBX
            mov ESI,DWORD PTR [RBP+184]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx ECX,BYTE PTR [RDI+RAX*4+15]
            lea EAX,DWORD PTR [RBX+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RAX*4+15]
            mov EAX,EBX
            jmp .L_425809
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425800:

            add RDX,20
            cmp CL,BYTE PTR [RDX-20]
            jne .L_425810
.L_425809:

            add EAX,1
            cmp ESI,EAX
            ja .L_425800
.L_425810:

            cmp R12D,EBX
            mov ESI,EBX
            jbe .L_4259d0

            and ECX,15
            mov EBX,EAX
            jne .L_4257d0
.L_425822:

            lea EDX,DWORD PTR [RSI+3]
            cmp EDX,EBX
            ja .L_4259c0

            mov R10D,ESI
            lea RAX,QWORD PTR [R10+R10*4]
            cmp BYTE PTR [RDI+RAX*4+18],16
            je .L_425a58
.L_42583f:

            mov EDX,ESI
            xor R8D,R8D
.L_425844:

            cmp EDX,EBX
            jae .L_42588c

            lea ECX,DWORD PTR [RBX-1]
            mov R9D,EDX
            mov R11D,202758
            lea RAX,QWORD PTR [R9+R9*4]
            sub ECX,EDX
            add RCX,R9
            lea RAX,QWORD PTR [RDI+RAX*4+12]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RDI+RCX*4+32]
            nop
            nop
            nop
            nop
            nop
.L_425870:

            test BYTE PTR [RAX],32
            jne .L_425880

            movzx R9D,BYTE PTR [RAX+6]
            bt R11D,R9D
            jb .L_42588e
.L_425880:

            add RAX,20
            add EDX,1
            cmp RCX,RAX
            jne .L_425870
.L_42588c:

            mov EDX,ESI
.L_42588e:

            shl R8D,31
            lea RAX,QWORD PTR [R10+R10*4]
            mov ECX,ESI
            sar R8D,31
            and R8D,3
            lea RAX,QWORD PTR [RDI+RAX*4+19]
            add R8D,ESI
            jmp .L_4258ba
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4258b0:

            mov BYTE PTR [RAX],5
            add ECX,1
            add RAX,20
.L_4258ba:

            cmp R8D,ECX
            ja .L_4258b0

            cmp ECX,EDX
            jae .L_425a85

            lea R8D,DWORD PTR [RDX-1]
            mov R9D,ECX
            lea RAX,QWORD PTR [R9+R9*4]
            mov R14D,R8D
            sub R14D,ECX
            lea RAX,QWORD PTR [RDI+RAX*4+19]
            mov RCX,R14
            add RCX,R9
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RDI+RCX*4+39]
            nop
            nop
            nop
            nop
.L_4258f0:

            mov BYTE PTR [RAX],3
            add RAX,20
            cmp RCX,RAX
            jne .L_4258f0
.L_4258fc:

            cmp EDX,EBX
            jae .L_425990

            mov EAX,EDX
            lea ECX,DWORD PTR [RDX+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp ECX,EBX
            mov BYTE PTR [RDI+RAX*4+19],4
            jae .L_425990

            lea R8D,DWORD PTR [RBX-2]
            lea RAX,QWORD PTR [RCX+RCX*4]
            mov R15D,R8D
            lea RAX,QWORD PTR [RDI+RAX*4+19]
            sub R15D,EDX
            add RCX,R15
            lea RDX,QWORD PTR [RCX+RCX*4]
            mov ECX,5
            lea RDI,QWORD PTR [RDI+RDX*4+39]
            jmp .L_425979
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425940:

            cmp BYTE PTR [RAX],3
            jbe .L_425970

            cmp ECX,5
            je .L_4259b0

            cmp ECX,8
            jne .L_4259b9

            cmp DL,10
            je .L_425a48

            cmp DL,27
            je .L_425a50

            mov BYTE PTR [RAX],9
            mov ECX,9
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425970:

            add RAX,20
            cmp RAX,RDI
            je .L_425990
.L_425979:

            movzx EDX,BYTE PTR [RAX-1]
            cmp DL,22
            jne .L_425940

            mov BYTE PTR [RAX],3
            add RAX,20
            cmp RAX,RDI
            jne .L_425979

            nop
            nop
.L_425990:

            lea RCX,QWORD PTR [RIP+.L_425210]
            mov RDI,RBP
            mov EDX,EBX
            call .L_405530

            mov RDI,QWORD PTR [RBP+200]
            jmp .L_4257d5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4259b0:

            cmp DL,27
            je .L_425a38
.L_4259b9:

            mov BYTE PTR [RAX],CL
            jmp .L_425970
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4259c0:

            mov EDX,ESI
            xor R8D,R8D
            mov R10D,ESI
            jmp .L_425844
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4259d0:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_425c0b

            add RSP,88
.L_4259e8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4259f8:

            mov RAX,QWORD PTR [RDI+152]
            mov DWORD PTR [RSP+12],0
            lea RCX,QWORD PTR [RSP+12]
            mov RSI,QWORD PTR [RDI+160]
            mov EDX,9676
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_425a8c
.L_425a29:

            mov R12D,DWORD PTR [RBP+184]
            jmp .L_425798
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425a38:

            mov BYTE PTR [RAX],8
            mov ECX,8
            jmp .L_425970
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425a48:

            mov BYTE PTR [RAX],7
            jmp .L_425970
.L_425a50:

            mov BYTE PTR [RAX],8
            jmp .L_425970
.L_425a58:

            lea EAX,DWORD PTR [RSI+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [RDI+RAX*4+18],18
            jne .L_42583f

            lea EAX,DWORD PTR [RSI+2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            cmp BYTE PTR [RAX+18],4
            sete R8B
            cmovne EDX,ESI
            jmp .L_425844
.L_425a85:

            mov EDX,ECX
            jmp .L_4258fc
.L_425a8c:

            pxor XMM0,XMM0
            mov EDI,9676
            lea R12,QWORD PTR [RSP+48]
            xor R14D,R14D
            movups XMMWORD PTR [RSP+20],XMM0
            call .L_424230

            mov RDI,RBP
            movzx EBX,AH
            mov R13D,DWORD PTR [RSP+12]
            call .L_4029e0

            mov EDI,DWORD PTR [RBP+184]
            mov DWORD PTR [RBP+180],0
            xor EAX,EAX
.L_425ac9:

            cmp EAX,EDI
            jae .L_425b59
.L_425ad1:

            cmp BYTE PTR [RBP+176],0
            jne .L_425b59

            mov RSI,QWORD PTR [RBP+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RSI+RDX*4]
            movzx R15D,BYTE PTR [RCX+15]
            mov EDX,R15D
            and EDX,15
            cmp DL,2
            jne .L_425b66

            cmp R15D,R14D
            je .L_425b66

            mov DWORD PTR [RSP+16],R13D
            mov BYTE PTR [RSP+34],11
            mov RDI,RBP
            mov BYTE PTR [RSP+35],BL
            mov EAX,DWORD PTR [RSP+32]
            mov RSI,R12
            movdqa XMM0,XMMWORD PTR [RSP+16]
            mov R14D,R15D
            movaps XMMWORD PTR [RSP+48],XMM0
            mov DWORD PTR [RSP+64],EAX
            mov EAX,DWORD PTR [RCX+8]
            mov DWORD PTR [RSP+56],EAX
            mov EAX,DWORD PTR [RCX+4]
            mov DWORD PTR [RSP+52],EAX
            movzx EAX,BYTE PTR [RCX+15]
            mov BYTE PTR [RSP+63],AL
            call .L_402ca0

            mov EAX,DWORD PTR [RBP+180]
            mov EDI,DWORD PTR [RBP+184]
            cmp EAX,EDI
            jb .L_425ad1
.L_425b59:

            mov RDI,RBP
            call .L_402a70

            jmp .L_425a29
.L_425b66:

            cmp BYTE PTR [RBP+177],0
            je .L_425bb2

            cmp RSI,QWORD PTR [RBP+208]
            je .L_425b9f
.L_425b78:

            mov EDX,1
            mov ESI,1
            mov RDI,RBP
            call .L_402560

            test AL,AL
            jne .L_425bc0

            mov EAX,DWORD PTR [RBP+180]
            mov EDI,DWORD PTR [RBP+184]
            jmp .L_425ac9
.L_425b9f:

            cmp DWORD PTR [RBP+188],EAX
            jne .L_425b78

            mov EDX,EAX
.L_425ba9:

            add EDX,1
            mov DWORD PTR [RBP+188],EDX
.L_425bb2:

            add EAX,1
            mov DWORD PTR [RBP+180],EAX
            jmp .L_425ac9
.L_425bc0:

            mov EAX,DWORD PTR [RBP+188]
            mov RDX,QWORD PTR [RBP+208]
            mov RCX,QWORD PTR [RBP+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBP+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBP+188]
            mov EAX,DWORD PTR [RBP+180]
            mov EDI,DWORD PTR [RBP+184]
            jmp .L_425ba9
.L_425c0b:

            call __stack_chk_fail@PLT
.L_425c10:

            mov EAX,DWORD PTR [RSI+184]
            push R12
            push RBP
            push RBX
.L_425c1a:

            mov RBX,QWORD PTR [RSI+200]
            test EAX,EAX
            je .L_425cef

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R12,QWORD PTR [RBX+RAX*4+20]
            jmp .L_425c5a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425c40:

            mov ECX,EDX
            mov EAX,30
.L_425c47:

            mov BYTE PTR [RBX+18],AL
            mov BYTE PTR [RBX+19],CL
            add RBX,20
            cmp RBX,R12
            je .L_425cef
.L_425c5a:

            mov EBP,DWORD PTR [RBX]
            mov EDI,EBP
            call .L_424230

            lea ECX,DWORD PTR [RBP-65024]
            movzx EDX,AH
            cmp ECX,15
            jbe .L_425c40

            cmp EBP,4191
            ja .L_425d40

            cmp EBP,4190
            jae .L_425e78

            cmp EBP,4155
            je .L_425e78

            jbe .L_425cf8

            cmp EBP,4169
            ja .L_425e88

            cmp EBP,4161
            jae .L_425cd5

            cmp EBP,4157
            je .L_425e68

            jb .L_425d88

            cmp EBP,4158
            je .L_425d78

            cmp EBP,4160
            jne .L_425f45
.L_425cd5:

            mov ECX,EDX
            mov EAX,19
            add RBX,20
            mov BYTE PTR [RBX-2],AL
            mov BYTE PTR [RBX-1],CL
            cmp RBX,R12
            jne .L_425c5a
.L_425cef:

            pop RBX
.L_425cf0:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425cf8:

            cmp EBP,4123
            je .L_425dd2

            jbe .L_425da8

            cmp EBP,4152
            je .L_425e16

            jbe .L_425ee0

            cmp EBP,4153
            je .L_425d98

            cmp EBP,4154
            jne .L_425f45

            mov ECX,EDX
            mov EAX,18
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425d40:

            cmp EBP,4249
            ja .L_425de0

            cmp EBP,4240
            jae .L_425cd5

            cmp EBP,4205
            ja .L_425e48

            cmp EBP,4201
            jae .L_425e37

            cmp EBP,4192
            jne .L_425e28
.L_425d78:

            mov ECX,EDX
            mov EAX,21
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425d88:

            mov ECX,EDX
            mov EAX,22
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425d98:

            mov ECX,EDX
            mov EAX,4
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425da8:

            cmp EBP,160
            je .L_425ecb

            jbe .L_425f40

            cmp EBP,215
            je .L_425ecb

            cmp EBP,4100
            jne .L_425f45
.L_425dd2:

            mov ECX,EDX
            mov EAX,16
            jmp .L_425c47
          .byte 0x66
          .byte 0x90
.L_425de0:

            cmp EBP,9676
            je .L_425ecb

            ja .L_425eb0

            cmp EBP,8213
            ja .L_425fa3

            cmp EBP,8210
            jae .L_425ecb

            cmp EBP,4252
            ja .L_425f45
.L_425e16:

            mov ECX,EDX
            mov EAX,8
            jmp .L_425c47
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425e28:

            sub EBP,4195
            cmp EBP,1
            ja .L_425f45
.L_425e37:

            mov ECX,EDX
            mov EAX,25
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425e48:

            cmp EBP,4237
            ja .L_425f10

            cmp EBP,4231
            jae .L_425e16

            cmp EBP,4226
            jne .L_425f45
.L_425e68:

            mov ECX,EDX
            mov EAX,23
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425e78:

            mov ECX,EDX
            mov EAX,24
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425e88:

            cmp EBP,4174
            je .L_425f20

            ja .L_425f00

            cmp EBP,4171
            ja .L_425f45

            mov ECX,EDX
            mov EAX,31
            jmp .L_425c47
          .byte 0x66
          .byte 0x90
.L_425eb0:

            cmp EBP,43638
            ja .L_425f30

            cmp EBP,43636
            jae .L_425f20

            sub EBP,9723
            cmp EBP,3
            ja .L_425f45
.L_425ecb:

            mov ECX,EDX
            mov EAX,11
            jmp .L_425c47
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425ee0:

            cmp EBP,4146
            je .L_425ef0

            cmp EBP,4150
            jne .L_425f45
.L_425ef0:

            mov ECX,EDX
            mov EAX,10
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425f00:

            cmp EBP,4186
            je .L_425dd2

            jmp .L_425f45
          .byte 0x66
          .byte 0x90
.L_425f10:

            cmp EBP,4239
            je .L_425e16

            jmp .L_425f45
          .byte 0x66
          .byte 0x90
.L_425f20:

            mov ECX,EDX
            mov EAX,1
            jmp .L_425c47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425f30:

            cmp EBP,43643
            je .L_425e37

            jmp .L_425f45
          .byte 0x66
          .byte 0x90
.L_425f40:

            cmp EBP,45
            je .L_425ecb
.L_425f45:

            and EAX,127
            mov ECX,EDX
            cmp AX,7
            jne .L_425c47

            cmp EDX,6
            je .L_425f94

            jbe .L_425f7f

            cmp EDX,8
            je .L_425fb8

            cmp EDX,11
            mov ECX,11
            mov EAX,29
            je .L_425c47
.L_425f73:

            mov ECX,EDX
            mov EAX,7
            jmp .L_425c47
.L_425f7f:

            cmp EDX,3
            mov ECX,2
            mov EAX,28
            je .L_425c47

            jmp .L_425f73
.L_425f94:

            mov ECX,6
            mov EAX,26
            jmp .L_425c47
.L_425fa3:

            cmp EBP,8226
            je .L_425ecb

            jmp .L_425f45
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425fb8:

            mov ECX,8
            mov EAX,27
            jmp .L_425c47
.L_425fc7:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425fe0:
          .long .L_4255c1-.L_425fe0
          .long .L_4256a1-.L_425fe0
          .long .L_425651-.L_425fe0
          .long .L_425574-.L_425fe0
          .long .L_425516-.L_425fe0
          .long .L_4254cf-.L_425fe0
          .long .L_425473-.L_425fe0
          .long .L_425609-.L_425fe0
.L_426000:
          .string "default"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426060:
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4260c0:
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426100:
          .byte 0x0
          .byte 0x1
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1d
          .byte 0x20
          .byte 0x23
          .byte 0x24
          .byte 0x28
          .byte 0x29
          .byte 0x2a
          .byte 0x19
          .byte 0x26
          .byte 0x27
          .byte 0x25
          .byte 0x1c
          .byte 0x2b
          .byte 0x2c
          .byte 0x0
          .byte 0x2
          .byte 0xc
          .byte 0x0
          .byte 0x3
          .byte 0x9
          .byte 0xd
          .byte 0xe
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x5
          .byte 0x10
          .byte 0x11
          .byte 0xf
          .byte 0x8
          .byte 0x15
          .byte 0x4
          .byte 0x6
          .byte 0x7
          .byte 0xa
          .byte 0xb
          .byte 0x0
          .byte 0x18
          .byte 0x1a
          .byte 0x1b
          .byte 0x1e
          .byte 0x1f
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426140:
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x0
          .byte 0x15
          .byte 0x16
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1a
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x25
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x26
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x27
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x27
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x28
          .byte 0x14
          .byte 0x14
          .byte 0x28
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x29
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x28
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x29
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x29
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x1
          .byte 0x1
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1a
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x22
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x21
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x22
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x14
          .byte 0x1d
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x22
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x22
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1a
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2b
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2c
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2d
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2d
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2e
          .byte 0x2a
          .byte 0x2a
          .byte 0x2e
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2f
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2e
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2f
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2f
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x15
          .byte 0x16
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x30
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x14
          .byte 0x15
          .byte 0x31
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1a
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x1
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x1
          .byte 0x2a
          .byte 0x8
          .byte 0x1
          .byte 0x2a
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x8
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x10
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0xf
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x10
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0x2a
          .byte 0xb
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x10
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x10
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x8
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x33
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4265c0:
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xff
          .byte 0x1
          .byte 0x1b
          .byte 0x2
          .byte 0x37
          .byte 0x2
          .byte 0x51
          .byte 0x2
          .byte 0x56
          .byte 0x2
          .byte 0x70
          .byte 0x2
          .byte 0x88
          .byte 0x2
          .byte 0x9e
          .byte 0x2
          .byte 0xb4
          .byte 0x2
          .byte 0xd0
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0x8
          .byte 0x3
          .byte 0x24
          .byte 0x3
          .byte 0x41
          .byte 0x3
          .byte 0x5d
          .byte 0x3
          .byte 0x7c
          .byte 0x3
          .byte 0x98
          .byte 0x3
          .byte 0xb4
          .byte 0x3
          .byte 0xd0
          .byte 0x3
          .byte 0xec
          .byte 0x3
          .byte 0x8
          .byte 0x4
          .byte 0x24
          .byte 0x4
          .byte 0x40
          .byte 0x4
          .byte 0x5c
          .byte 0x4
          .byte 0x78
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426620:
          .byte 0x1f
          .byte 0x1c
          .byte 0x19
          .byte 0x4
          .byte 0x19
          .byte 0x17
          .byte 0x15
          .byte 0x15
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x10
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x19
          .byte 0x4
          .byte 0x19
          .byte 0x17
          .byte 0x15
          .byte 0x15
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1c
          .byte 0x1b
          .byte 0x1e
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426660:

            add DWORD PTR [RDI],EBX
            add EBX,DWORD PTR [RSI]
            add EAX,84411677
            sbb EAX,419764483
            add EAX,52232985
            sbb EAX,486743299
            add DWORD PTR [RAX],EDX
            add EBX,DWORD PTR [RIP+_end+484440859]
            add EBX,DWORD PTR [RIP+_end+484440865]
            add EBX,DWORD PTR [RIP+_end+484440871]
            add EAX,84411677
            sbb EAX,419764483
            add EAX,52232985
            sbb EAX,486743299
            add EBX,DWORD PTR [RSI]
            add EBX,DWORD PTR [RIP+_end+484441153]
            add EBX,DWORD PTR [RIP+_end+484440905]
            add EBX,DWORD PTR [RIP+_end+484440911]
            add EBX,DWORD PTR [RIP+_end+132447061]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4266c0:
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x73
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x73
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x73
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x74
          .byte 0x73
          .byte 0x69
          .byte 0x64
          .byte 0x6d
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x6d
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4266e0:
          .byte 0x66
          .byte 0x68
          .byte 0x70
          .byte 0x72
          .byte 0x66
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x66
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x66
          .byte 0x74
          .byte 0x73
          .byte 0x70
.L_4266f0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4266fa:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,4
            ja .L_4267d0

            mov R12,RDX
            lea RDX,QWORD PTR [RIP+.L_426d00]
            mov ESI,ESI
            mov EBP,EDI
            movsxd RAX,DWORD PTR [RDX+RSI*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426730:

            lea R13,QWORD PTR [RSP+4]
            mov ESI,DWORD PTR [RBX+4]
            xor EDX,EDX
            mov RDI,R12
            mov RCX,R13
            call .L_409730

            test EAX,EAX
            je .L_4267e0

            mov EBP,DWORD PTR [RBX+4]
.L_426750:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_426800

            add RSP,24
.L_42676a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426778:

            lea RBX,QWORD PTR [RIP+.L_426ec0]
            mov EAX,3656
.L_426784:

            cmp EBP,EAX
            jne .L_426794

            jmp .L_426730
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426790:

            cmp EAX,EBP
            je .L_426730
.L_426794:

            add RBX,12
            mov EAX,DWORD PTR [RBX]
            test EAX,EAX
            jne .L_426790

            jmp .L_426750
.L_4267a0:

            mov EAX,3656
            lea RBX,QWORD PTR [RIP+.L_426e20]
            jmp .L_426784
          .byte 0x66
          .byte 0x90
.L_4267b0:

            mov EAX,3597
            lea RBX,QWORD PTR [RIP+.L_426de0]
            jmp .L_426784
          .byte 0x66
          .byte 0x90
.L_4267c0:

            mov EAX,3656
            lea RBX,QWORD PTR [RIP+.L_426f20]
            jmp .L_426784
          .byte 0x66
          .byte 0x90
.L_4267d0:

            mov EAX,DWORD PTR [0]
            ud2 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4267e0:

            mov ESI,DWORD PTR [RBX+8]
            xor EDX,EDX
            mov RCX,R13
            mov RDI,R12
            call .L_409730

            test EAX,EAX
            je .L_426750

            mov EBP,DWORD PTR [RBX+8]
            jmp .L_426750
.L_426800:

            call __stack_chk_fail@PLT
.L_426805:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426810:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov RDI,RSI
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDX
            mov R12D,1069547641
            sub RSP,104
.L_426830:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_4029e0

            mov R15D,DWORD PTR [RBX+184]
            lea R13,QWORD PTR [RSP+56]
            mov DWORD PTR [RBX+180],0
            xor EAX,EAX
            nop
            nop
            nop
.L_426860:

            cmp R15D,EAX
            jbe .L_4268d0
.L_426865:

            cmp BYTE PTR [RBX+176],0
            jne .L_4268d0

            mov RCX,QWORD PTR [RBX+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov EDX,DWORD PTR [RCX+RDX*4]
            mov ESI,EDX
            and SIL,127
            cmp ESI,3635
            je .L_426938

            cmp BYTE PTR [RBX+177],0
            je .L_426923

            cmp RCX,QWORD PTR [RBX+208]
            je .L_426910
.L_4268a6:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            jne .L_426bd0
.L_4268c0:

            mov EAX,DWORD PTR [RBX+180]
.L_4268c6:

            cmp R15D,EAX
            ja .L_426865

            nop
            nop
            nop
            nop
            nop
.L_4268d0:

            mov RDI,RBX
            call .L_402a70

            cmp DWORD PTR [R14+4],1416126825
            je .L_426aa8
.L_4268e6:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_426cdd

            add RSP,104
.L_4268fe:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426910:

            cmp DWORD PTR [RBX+188],EAX
            jne .L_4268a6

            mov EDX,EAX
.L_42691a:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
.L_426923:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_426860
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426938:

            lea EAX,DWORD PTR [RDX+26]
            sub EDX,1
            mov RCX,R13
            mov DWORD PTR [RSP+60],EDX
            mov ESI,1
            mov EDX,2
            mov RDI,RBX
            mov DWORD PTR [RSP+56],EAX
            call .L_402b00

            cmp BYTE PTR [RBX+176],0
            jne .L_4268e6

            mov EDX,DWORD PTR [RBX+188]
            mov RCX,QWORD PTR [RBX+208]
            lea EAX,DWORD PTR [RDX-2]
            lea R9,QWORD PTR [RAX+RAX*4]
            mov R10,RAX
            lea R8,QWORD PTR [R9*4]
            add RCX,R8
            movzx EAX,WORD PTR [RCX+16]
            and AX,224
            or EAX,12
            test R10D,R10D
            mov WORD PTR [RCX+16],AX
            je .L_4268c0

            lea EAX,DWORD PTR [RDX-3]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+208]
            lea RDI,QWORD PTR [RAX+RCX*4]
            mov ECX,R10D
            nop
            nop
            nop
            nop
            nop
.L_4269b8:

            mov EAX,DWORD PTR [RDI]
            lea ESI,DWORD PTR [RCX-1]
            and AL,127
            sub EAX,3633
            cmp EAX,29
            jbe .L_4269f0
.L_4269c9:

            lea EAX,DWORD PTR [RCX+2]
            cmp EAX,EDX
            jb .L_426cc2

            mov EAX,DWORD PTR [RBX+124]
            test EAX,EAX
            jne .L_4268c0

            mov RDI,RBX
            call .L_4031b0

            jmp .L_4268c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4269f0:

            bt R12,RAX
            jae .L_4269c9

            sub RDI,20
            test ESI,ESI
            mov ECX,ESI
            jne .L_4269b8

            cmp EDX,2
            jbe .L_4268c0

            mov RAX,R8
            mov R11D,20
            xor R10D,R10D
.L_426a15:

            mov RDI,RBX
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            mov QWORD PTR [RSP+8],R10
            mov QWORD PTR [RSP+16],RAX
            call .L_4031b0

            mov RDI,QWORD PTR [RBX+208]
            mov R8,QWORD PTR [RSP+40]
            mov R10,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+32]
            mov R11,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RDI+R8*1+16]
            movdqu XMM0,XMMWORD PTR [RDI+R9*4]
            lea RSI,QWORD PTR [RDI+R10*1]
            add RDI,R11
            mov DWORD PTR [RSP+80],EDX
            mov RDX,RAX
            movaps XMMWORD PTR [RSP+64],XMM0
            call memmove@PLT

            mov RAX,QWORD PTR [RBX+208]
            mov R10,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov DWORD PTR [RAX+R10*1+16],EDX
            movups XMMWORD PTR [RAX+R10*1],XMM0
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_4268c6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426aa8:

            cmp BYTE PTR [R14+48],0
            jne .L_4268e6

            mov EAX,DWORD PTR [RBX+184]
            mov R13,QWORD PTR [RBX+200]
            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            mov QWORD PTR [RSP+24],R13
            je .L_4268e6

            mov EDI,DWORD PTR [R13]
            xor R14D,R14D
            mov DWORD PTR [RSP+32],0
            mov R12D,2
            mov EBX,3
            lea R15,QWORD PTR [RIP+.L_426d80]
            lea EDX,DWORD PTR [RDI-3633]
            cmp EDX,29
            jbe .L_426ba5

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426b08:

            lea EAX,DWORD PTR [RDI-3640]
            cmp EAX,2
            jbe .L_426bc5
.L_426b17:

            lea EDX,DWORD PTR [RDI-3656]
            mov EAX,2
            cmp EDX,4
            ja .L_426c4e

            nop
            nop
            nop
            nop
            nop
.L_426b30:

            movsxd RSI,R12D
            movsxd RBX,EBX
            lea RCX,QWORD PTR [RIP+.L_426d20]
            lea RDX,QWORD PTR [RBX+RBX*2]
            mov R10,RSI
            lea RSI,QWORD PTR [RSI+RSI*2]
            add RDX,RAX
            add RSI,RAX
            mov R12D,DWORD PTR [RCX+RSI*8+4]
            mov ESI,DWORD PTR [R15+RDX*8]
            mov EBX,DWORD PTR [R15+RDX*8+4]
            test ESI,ESI
            jne .L_426b6a

            lea RDX,QWORD PTR [R10+R10*2]
            add RAX,RDX
            mov ESI,DWORD PTR [RCX+RAX*8]
.L_426b6a:

            cmp ESI,4
            je .L_426c20

            mov RDX,RBP
            call .L_4266f0

            mov DWORD PTR [R13],EAX
.L_426b7f:

            add R14D,1
            add R13,20
            cmp DWORD PTR [RSP+8],R14D
            je .L_4268e6

            mov EDI,DWORD PTR [R13]
            lea EDX,DWORD PTR [RDI-3633]
            cmp EDX,29
            ja .L_426b08
.L_426ba5:

            mov ESI,809500793
            xor EAX,EAX
            bt RSI,RDX
            jb .L_426b30

            lea EAX,DWORD PTR [RDI-3640]
            cmp EAX,2
            ja .L_426b17
.L_426bc5:

            mov EAX,1
            jmp .L_426b30
          .byte 0x90
.L_426bd0:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_42691a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426c20:

            mov EAX,DWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+24]
            mov RDX,RBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [RDI+RAX*4]
            mov EDI,DWORD PTR [R10]
            mov QWORD PTR [RSP+16],R10
            call .L_4266f0

            mov R10,QWORD PTR [RSP+16]
            mov DWORD PTR [R10],EAX
            jmp .L_426b7f
.L_426c4e:

            mov EAX,EDI
            and EAX,4294967291
            cmp EAX,3611
            je .L_426ca4

            cmp EDI,3613
            je .L_426ca4

            cmp EDI,3597
            je .L_426cae

            cmp EDI,3600
            je .L_426cae

            lea EAX,DWORD PTR [RDI-3598]
            cmp EAX,1
            jbe .L_426cb8

            sub EDI,3585
            cmp EDI,46
            sbb R12D,R12D
            not R12D
            and R12D,2
            cmp EDI,46
            sbb EBX,EBX
            not EBX
            and EBX,3
.L_426c9a:

            mov DWORD PTR [RSP+32],R14D
            jmp .L_426b7f
.L_426ca4:

            xor R12D,R12D
            mov EBX,1
            jmp .L_426c9a
.L_426cae:

            mov R12D,1
            xor EBX,EBX
            jmp .L_426c9a
.L_426cb8:

            mov R12D,2
            xor EBX,EBX
            jmp .L_426c9a
.L_426cc2:

            mov EAX,R10D
            mov R10D,ECX
            mov ESI,ECX
            imul R10,R10,20
            sub EAX,ECX
            imul RAX,RAX,20
            lea R11,QWORD PTR [R10+20]
            jmp .L_426a15
.L_426cdd:

            call __stack_chk_fail@PLT
.L_426ce2:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426d00:
          .long .L_426750-.L_426d00
          .long .L_4267c0-.L_426d00
          .long .L_4267a0-.L_426d00
          .long .L_426778-.L_426d00
          .long .L_4267b0-.L_426d00
          .zero 12
.L_426d20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426d80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426de0:
          .byte 0xd
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426e20:
          .byte 0x48
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426ec0:
          .byte 0x48
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426f20:
          .byte 0x48
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426f90:

            push RBP
            push RBX
            lea RBP,QWORD PTR [RDI+48]
            lea RBX,QWORD PTR [RIP+.L_426fe0]
            mov ESI,1633842803
            sub RSP,8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426fb0:

            add RBX,4
            mov ECX,1
            mov EDX,1
            mov RDI,RBP
            call .L_44b250

            mov ESI,DWORD PTR [RBX]
            test ESI,ESI
            jne .L_426fb0

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_426fd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426fe0:
          .byte 0x73
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x73
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x6d
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x6d
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_427000:

            mov RCX,QWORD PTR [RDX+200]
            mov EDX,DWORD PTR [RDX+184]
            test EDX,EDX
            je .L_427035

            sub EDX,1
            lea RAX,QWORD PTR [RCX+12]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427028:

            and WORD PTR [RAX],65519
            add RAX,20
            cmp RAX,RDX
            jne .L_427028
.L_427035:

            ret 
.L_427037:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427040:

            mov RAX,QWORD PTR [RDI+1064]
            mov R9D,DWORD PTR [RAX]
            test R9D,R9D
            je .L_427150

            mov R11D,DWORD PTR [RDX+184]
            test R11D,R11D
            je .L_427150

            mov R10,QWORD PTR [RDX+200]
            xor ESI,ESI
            movzx ECX,BYTE PTR [R10+15]
            lea RAX,QWORD PTR [R10+35]
            jmp .L_427089
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427080:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_427094
.L_427089:

            add ESI,1
            cmp R11D,ESI
            jne .L_427080

            mov ESI,R11D
.L_427094:

            xor EDI,EDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4270a0:

            cmp ESI,EDI
            jbe .L_4270f8

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [R10+RAX*4]
            test DWORD PTR [RCX+4],R9D
            je .L_4270f8

            test BYTE PTR [RCX+12],16
            jne .L_427158

            lea ECX,DWORD PTR [RSI-1]
            lea R8D,DWORD PTR [RDI+1]
            sub ECX,EDI
            lea RAX,QWORD PTR [R8+R8*4]
            add RCX,R8
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            lea RDI,QWORD PTR [R10+RCX*4]
            jmp .L_4270f3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4270e0:

            test DWORD PTR [RAX+4],R9D
            mov RCX,RAX
            je .L_4270f8

            add RAX,20
            test BYTE PTR [RCX+12],16
            jne .L_427158
.L_4270f3:

            cmp RAX,RDI
            jne .L_4270e0
.L_4270f8:

            mov RAX,QWORD PTR [RDX+200]
            mov ECX,ESI
            mov EDI,DWORD PTR [RDX+184]
            lea RCX,QWORD PTR [RCX+RCX*4]
            movzx R8D,BYTE PTR [RAX+RCX*4+15]
            lea ECX,DWORD PTR [RSI+1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RAX+RCX*4+15]
            mov EAX,ESI
            jmp .L_427132
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427128:

            add RCX,20
            cmp R8B,BYTE PTR [RCX-20]
            jne .L_427139
.L_427132:

            add EAX,1
            cmp EDI,EAX
            ja .L_427128
.L_427139:

            cmp R11D,ESI
            mov EDI,ESI
            jbe .L_427150

            mov ESI,EAX
            jmp .L_4270a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427150:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427158:

            mov BYTE PTR [RCX+18],18
            jmp .L_4270f8
.L_42715e:

            nop
            nop
.L_427160:

            mov R10D,DWORD PTR [RDX+184]
            test R10D,R10D
            je .L_427240

            mov R9,QWORD PTR [RDX+200]
            xor ESI,ESI
            movzx ECX,BYTE PTR [R9+15]
            lea RAX,QWORD PTR [R9+35]
            jmp .L_427191
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427188:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_42719c
.L_427191:

            add ESI,1
            cmp R10D,ESI
            jne .L_427188

            mov ESI,R10D
.L_42719c:

            xor EDI,EDI
            nop
            nop
.L_4271a0:

            cmp ESI,EDI
            jbe .L_4271f2

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [R9+RAX*4]
            test BYTE PTR [RCX+12],16
            jne .L_427248

            lea ECX,DWORD PTR [RSI-1]
            lea R8D,DWORD PTR [RDI+1]
            sub ECX,EDI
            lea RAX,QWORD PTR [R8+R8*4]
            add RCX,R8
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            lea RDI,QWORD PTR [R9+RCX*4]
            jmp .L_4271ed
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4271e0:

            mov RCX,RAX
            add RAX,20
            test BYTE PTR [RCX+12],16
            jne .L_427248
.L_4271ed:

            cmp RAX,RDI
            jne .L_4271e0
.L_4271f2:

            mov RAX,QWORD PTR [RDX+200]
            mov ECX,ESI
            mov EDI,DWORD PTR [RDX+184]
            lea RCX,QWORD PTR [RCX+RCX*4]
            movzx R8D,BYTE PTR [RAX+RCX*4+15]
            lea ECX,DWORD PTR [RSI+1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RAX+RCX*4+15]
            mov EAX,ESI
            jmp .L_42722a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427220:

            add RCX,20
            cmp R8B,BYTE PTR [RCX-20]
            jne .L_427231
.L_42722a:

            add EAX,1
            cmp EDI,EAX
            ja .L_427220
.L_427231:

            cmp R10D,ESI
            mov EDI,ESI
            jbe .L_427240

            mov ESI,EAX
            jmp .L_4271a0
          .byte 0x90
.L_427240:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427248:

            mov BYTE PTR [RCX+18],22
            jmp .L_4271f2
.L_42724e:

            nop
            nop
.L_427250:

            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,8
.L_427259:

            mov RAX,QWORD PTR [RDI+1064]
            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_427274

            mov EDX,DWORD PTR [RDI+4]
            mov RDI,RAX
            call .L_4162e0
.L_427274:

            mov EAX,DWORD PTR [RBX+184]
            mov RBX,QWORD PTR [RBX+200]
            test EAX,EAX
            je .L_4272ab

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RBP,QWORD PTR [RBX+RAX*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427298:

            mov EDI,DWORD PTR [RBX]
            add RBX,20
            call .L_428e00

            mov BYTE PTR [RBX-2],AL
            cmp RBX,RBP
            jne .L_427298
.L_4272ab:

            add RSP,8
.L_4272af:

            pop RBX
            pop RBP
            ret 
.L_4272b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4272c0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_4272d2

            call .L_4158e0
.L_4272d2:

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_4272db:

            nop
            nop
            nop
            nop
            nop
.L_4272e0:

            push RBP
            push RBX
            mov RBP,RDI
            mov ESI,16
            mov EDI,1
            sub RSP,8
.L_4272f3:

            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_427380

            mov R9D,DWORD PTR [RBP+56]
            mov R8,QWORD PTR [RBP+64]
            xor ECX,ECX
.L_42730e:

            cmp RCX,R9
            jae .L_427351

            lea RDX,QWORD PTR [RCX+R9*1]
            shr RDX,1
            lea RAX,QWORD PTR [RDX+RDX*8]
            lea RDI,QWORD PTR [R8+RAX*4]
            mov ESI,DWORD PTR [RDI]
            cmp ESI,1919969382
            ja .L_42734c

            jmp .L_427390
          .byte 0x66
          .byte 0x90
.L_427330:

            lea RAX,QWORD PTR [RCX+RDX*1]
            shr RAX,1
            lea RSI,QWORD PTR [RAX+RAX*8]
            lea RDI,QWORD PTR [R8+RSI*4]
            mov ESI,DWORD PTR [RDI]
            cmp ESI,1919969382
            jbe .L_4273a0

            mov RDX,RAX
.L_42734c:

            cmp RCX,RDX
            jb .L_427330
.L_427351:

            xor EAX,EAX
.L_427353:

            mov DWORD PTR [RBX],EAX
            mov EAX,DWORD PTR [RBP+4]
            cmp EAX,1299148391
            je .L_4273e0

            jbe .L_4273c0

            cmp EAX,1349017959
            je .L_4273e0

            jbe .L_427400

            cmp EAX,1349020784
            je .L_4273e0

            cmp EAX,1400468067
            je .L_4273e0
.L_427380:

            add RSP,8
.L_427384:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427390:

            mov RAX,RDX
            mov RDX,R9
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4273a0:

            cmp ESI,1919969382
            je .L_4273b4

            lea RCX,QWORD PTR [RAX+1]
            mov R9,RDX
            jmp .L_42730e
.L_4273b4:

            mov EAX,DWORD PTR [RDI+28]
            jmp .L_427353

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4273c0:

            cmp EAX,1098015074
            je .L_4273e0

            jbe .L_427430

            cmp EAX,1298230884
            je .L_4273e0

            cmp EAX,1298230889
            jne .L_427380

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4273e0:

            mov RDI,RBP
            call .L_414e90

            test RAX,RAX
            je .L_427418

            mov QWORD PTR [RBX+8],RAX
            add RSP,8
.L_4273f5:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427400:

            cmp EAX,1315663727
            je .L_4273e0

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427418:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            jmp .L_427380
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427430:

            cmp EAX,1097100397
            je .L_4273e0

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_427441:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427450:

            push R12
            push RBP
            lea RDX,QWORD PTR [RIP+.L_427600]
            push RBX
.L_42745b:

            lea RBX,QWORD PTR [RDI+48]
            xor ESI,ESI
            lea RBP,QWORD PTR [RIP+.L_428de0]
            mov RDI,RBX
            call .L_44b450

            mov ECX,1
            mov EDX,1
            mov ESI,1819239276
            mov RDI,RBX
            lea R12,QWORD PTR [RBP+28]
            call .L_44b250

            mov ECX,1
            mov EDX,1
            mov ESI,1667460464
            mov RDI,RBX
            call .L_44b250

            mov ECX,1
            mov EDX,1
            mov ESI,1853188980
            mov RDI,RBX
            call .L_44b250

            mov ECX,1
            mov EDX,1
            mov ESI,1634429038
            mov RDI,RBX
            call .L_44b250

            lea RDX,QWORD PTR [RIP+.L_427000]
            xor ESI,ESI
            mov RDI,RBX
            call .L_44b450

            mov ECX,4
            mov EDX,1
            mov ESI,1919969382
            mov RDI,RBX
            call .L_44b250

            lea RDX,QWORD PTR [RIP+.L_427040]
            xor ESI,ESI
            mov RDI,RBX
            call .L_44b450

            lea RDX,QWORD PTR [RIP+.L_427000]
            xor ESI,ESI
            mov RDI,RBX
            call .L_44b450

            mov ECX,5
            mov EDX,1
            mov ESI,1886545254
            mov RDI,RBX
            call .L_44b250

            lea RDX,QWORD PTR [RIP+.L_427160]
            xor ESI,ESI
            mov RDI,RBX
            call .L_44b450

            mov ESI,1919644262
            jmp .L_427553
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427550:

            mov ESI,DWORD PTR [RBP]
.L_427553:

            mov ECX,5
            mov EDX,1
            mov RDI,RBX
            add RBP,4
            call .L_44b250

            cmp RBP,R12
            jne .L_427550

            lea RDX,QWORD PTR [RIP+.L_427f40]
            lea RBP,QWORD PTR [RIP+.L_428dc0]
            xor ESI,ESI
            mov RDI,RBX
            call .L_44b450

            lea R12,QWORD PTR [RBP+28]
            mov ESI,1769172844
            jmp .L_42759b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427598:

            mov ESI,DWORD PTR [RBP]
.L_42759b:

            xor ECX,ECX
            mov EDX,1
            mov RDI,RBX
            add RBP,4
            call .L_44b250

            cmp RBP,R12
            jne .L_427598

            lea RBP,QWORD PTR [RIP+.L_428da0]
            xor ESI,ESI
            xor EDX,EDX
            mov RDI,RBX
            call .L_44b450

            lea R12,QWORD PTR [RBP+32]
            mov ESI,1633842803
            jmp .L_4275db
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4275d8:

            mov ESI,DWORD PTR [RBP]
.L_4275db:

            mov ECX,5
            mov EDX,1
            mov RDI,RBX
            add RBP,4
            call .L_44b250

            cmp RBP,R12
            jne .L_4275d8

            pop RBX
.L_4275f7:

            pop RBP
            pop R12
            ret 
.L_4275fb:

            nop
            nop
            nop
            nop
            nop
.L_427600:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_42760e:

            mov ECX,DWORD PTR [RDX+184]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test ECX,ECX
            jne .L_427738
.L_42762c:

            mov RAX,QWORD PTR [RDI+1064]
            mov R9D,DWORD PTR [RAX]
            test R9D,R9D
            je .L_427817

            mov R11D,DWORD PTR [RDX+184]
            test R11D,R11D
            je .L_427817

            mov R10,QWORD PTR [RDX+200]
            xor R8D,R8D
            movzx ECX,BYTE PTR [R10+15]
            lea RAX,QWORD PTR [R10+35]
            jmp .L_427671
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427668:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_42767d
.L_427671:

            add R8D,1
            cmp R11D,R8D
            jne .L_427668

            mov R8D,R11D
.L_42767d:

            lea RBX,QWORD PTR [R10+24]
            xor ESI,ESI
            mov EBP,3
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427690:

            mov R13D,ESI
            mov EAX,1
            lea R12,QWORD PTR [R13+R13*4]
            shl R12,2
            cmp BYTE PTR [R10+R12*1+18],18
            je .L_4276b4

            mov EAX,R8D
            sub EAX,ESI
            cmp EAX,3
            cmova EAX,EBP
.L_4276b4:

            lea ECX,DWORD PTR [RAX+RSI*1]
            cmp ESI,ECX
            jae .L_4276dc

            not ESI
            lea RAX,QWORD PTR [R10+R12*1+4]
            add ECX,ESI
            add RCX,R13
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RBX+RCX*4]
            nop
.L_4276d0:

            or DWORD PTR [RAX],R9D
            add RAX,20
            cmp RCX,RAX
            jne .L_4276d0
.L_4276dc:

            mov RAX,QWORD PTR [RDX+200]
            mov ECX,R8D
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov ESI,DWORD PTR [RDX+184]
            movzx R12D,BYTE PTR [RAX+RCX*4+15]
            lea ECX,DWORD PTR [R8+1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RAX+RCX*4+15]
            mov EAX,R8D
            jmp .L_42771a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427710:

            add RCX,20
            cmp R12B,BYTE PTR [RCX-20]
            jne .L_427721
.L_42771a:

            add EAX,1
            cmp ESI,EAX
            ja .L_427710
.L_427721:

            cmp R11D,R8D
            mov ESI,R8D
            jbe .L_427810

            mov R8D,EAX
            jmp .L_427690
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427738:

            mov RSI,QWORD PTR [RDX+200]
            lea R11,QWORD PTR [RIP+.L_428760]
            mov R14D,39
            mov EBP,1
            xor EBX,EBX
            xor R12D,R12D
            xor R8D,R8D
            mov R10D,40
            mov R9D,2
            movzx EAX,BYTE PTR [RSI+18]
            lea R15,QWORD PTR [RSI+35]
            xor R13D,R13D
            mov QWORD PTR [RSP+8],R15
.L_427775:

            cmp AL,R14B
            jbe .L_427848
.L_42777e:

            movsx RAX,R10B
.L_427782:

            add RAX,R11
            movsx EAX,BYTE PTR [RAX+R9*1]
.L_42778a:

            lea R15,QWORD PTR [RIP+.L_428720]
            cdqe 
            movsx R13,BYTE PTR [R15+RAX*1]
            lea R15,QWORD PTR [RIP+.L_4286e0]
            movzx EAX,BYTE PTR [R15+RAX*1]
            test AL,AL
            jne .L_427852
.L_4277ac:

            add R8D,1
.L_4277b0:

            cmp ECX,R8D
            je .L_427e82

            lea R14,QWORD PTR [RIP+.L_428c60]
            movsxd RAX,R13D
            movsx R9,WORD PTR [R14+RAX*2]
            lea R14,QWORD PTR [RIP+.L_428ce0]
            movzx R10D,BYTE PTR [R14+RAX*1]
            test R10B,R10B
            jle .L_42777e

            lea R14D,DWORD PTR [R13+R13*1]
            lea RAX,QWORD PTR [RIP+.L_428d20]
            movsxd R14,R14D
            add R14,RAX
            mov EAX,R8D
            imul RAX,RAX,20
            movzx R13D,BYTE PTR [R14]
            movzx EAX,BYTE PTR [RSI+RAX*1+18]
            cmp R13B,AL
            ja .L_42777e

            movzx R14D,BYTE PTR [R14+1]
            jmp .L_427775
          .byte 0x66
          .byte 0x90
.L_427810:

            mov RAX,QWORD PTR [RDI+1064]
.L_427817:

            cmp QWORD PTR [RAX+8],0
            je .L_427870
.L_42781e:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_427e9f

            add RSP,56
.L_427836:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427848:

            sub EAX,R13D
            cdqe 
            jmp .L_427782
.L_427852:

            cmp AL,16
            ja .L_4277ac

            lea R15,QWORD PTR [RIP+.L_428600]
            movsxd RAX,DWORD PTR [R15+RAX*4]
            add RAX,R15
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427870:

            mov R13D,DWORD PTR [RDI+56]
            mov R10,QWORD PTR [RDI+64]
            lea RBP,QWORD PTR [RSP+16]
            mov R12D,DWORD PTR [RDI+52]
            lea R14,QWORD PTR [RIP+.L_428dc0]
            xor R11D,R11D
            mov R9D,1769172844
            xor EBX,EBX
.L_427893:

            mov R15,R13
            xor ESI,ESI
.L_427898:

            cmp RSI,R15
            jae .L_4278df

            lea RCX,QWORD PTR [RSI+R15*1]
            shr RCX,1
            lea RAX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RAX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            ja .L_4278da

            jmp .L_4278fd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4278c0:

            lea RAX,QWORD PTR [RSI+RCX*1]
            shr RAX,1
            lea RDI,QWORD PTR [RAX+RAX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            jbe .L_427908

            mov RCX,RAX
.L_4278da:

            cmp RSI,RCX
            jb .L_4278c0
.L_4278df:

            xor EAX,EAX
            cmp EAX,R12D
            je .L_42791f
.L_4278e6:

            mov DWORD PTR [RBP+R11*1],EAX
            add R11,4
            or EBX,EAX
            cmp R11,16
            je .L_427932
.L_4278f7:

            mov R9D,DWORD PTR [R14+R11*1]
            jmp .L_427893
.L_4278fd:

            mov RAX,RCX
            mov RCX,R15
            nop
            nop
            nop
            nop
            nop
.L_427908:

            cmp EDI,R9D
            jae .L_427916

            lea RSI,QWORD PTR [RAX+1]
            mov R15,RCX
            jmp .L_427898
.L_427916:

            mov EAX,DWORD PTR [R8+28]
            cmp EAX,R12D
            jne .L_4278e6
.L_42791f:

            mov DWORD PTR [RBP+R11*1],0
            add R11,4
            cmp R11,16
            jne .L_4278f7
.L_427932:

            test EBX,EBX
            je .L_42781e

            mov R10D,DWORD PTR [RDX+184]
            test R10D,R10D
            je .L_42781e

            mov R11,QWORD PTR [RDX+200]
            xor EDI,EDI
            movzx ECX,BYTE PTR [R11+15]
            lea RAX,QWORD PTR [R11+35]
            jmp .L_427969
          .byte 0x66
          .byte 0x90
.L_427960:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_427974
.L_427969:

            add EDI,1
            cmp R10D,EDI
            jne .L_427960

            mov EDI,R10D
.L_427974:

            lea R13,QWORD PTR [R11+24]
            not EBX
            xor ESI,ESI
            mov EBP,4
            xor R9D,R9D
            mov R12D,1
            nop
            nop
            nop
            nop
            nop
            nop
.L_427990:

            and ECX,15
            cmp CL,7
            ja .L_4279b0

            mov RAX,R12
            shl RAX,CL
            test AL,161
            jne .L_427dd0

            test AL,94
            jne .L_427dda

            nop
            nop
.L_4279b0:

            mov ECX,EDI
            mov RAX,QWORD PTR [RDX+200]
            mov ESI,DWORD PTR [RDX+184]
            lea R14,QWORD PTR [RCX+RCX*4]
            lea ECX,DWORD PTR [RDI+1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            shl R14,2
            movzx R8D,BYTE PTR [RAX+R14*1+15]
            lea RCX,QWORD PTR [RAX+RCX*4+15]
            mov EAX,EDI
            jmp .L_4279ea
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4279e0:

            add RCX,20
            cmp R8B,BYTE PTR [RCX-20]
            jne .L_4279f1
.L_4279ea:

            add EAX,1
            cmp ESI,EAX
            ja .L_4279e0
.L_4279f1:

            cmp R10D,EDI
            jbe .L_42781e

            mov ESI,R9D
            movzx ECX,BYTE PTR [R11+R14*1+15]
            mov R9D,EDI
            mov EDI,EAX
            jmp .L_427990

            cmp R8D,EBX
            jbe .L_427a49

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,5
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_427a3d:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_427a3d
.L_427a49:

            add EBP,1
            mov EBX,R8D
            mov R12D,R8D
            cmp EBP,16
            jne .L_4277b0
.L_427a5b:

            mov EBP,1
            jmp .L_4277b0

            cmp R8D,EBX
            jbe .L_427a49

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,7
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_427a98:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_427a98

            jmp .L_427a49

            cmp R8D,EBX
            jbe .L_427a49

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,6
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_427ad9:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_427ad9

            jmp .L_427a49

            cmp R8D,EBX
            jbe .L_427a49

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,3
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_427b21:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_427b21

            jmp .L_427a49

            cmp R8D,EBX
            jbe .L_427a49

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,4
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_427b69:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_427b69

            jmp .L_427a49

            cmp R8D,EBX
            jbe .L_427a49

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,1
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_427bb1:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_427bb1

            jmp .L_427a49

            lea R12D,DWORD PTR [R8+1]
            cmp R12D,EBX
            jbe .L_427c01

            mov R10D,EBX
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R8,R10
            lea RAX,QWORD PTR [R10+R10*4]
            mov R9D,EBP
            lea R8,QWORD PTR [R8+R8*4]
            shl R9D,4
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            or R9D,2
            lea R8,QWORD PTR [RBX+R8*4]
.L_427bf5:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp RAX,R8
            jne .L_427bf5
.L_427c01:

            add EBP,1
            mov R8D,R12D
            mov EBX,R12D
            cmp EBP,16
            jne .L_4277b0

            jmp .L_427a5b

            cmp R8D,EBX
            jbe .L_427a49

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,2
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_427c4f:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp R9,RAX
            jne .L_427c4f

            jmp .L_427a49

            lea R12D,DWORD PTR [R8+1]
            cmp R12D,EBX
            jbe .L_427c01

            mov R10D,EBX
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R8,R10
            lea RAX,QWORD PTR [R10+R10*4]
            mov R9D,EBP
            lea R8,QWORD PTR [R8+R8*4]
            shl R9D,4
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R8,QWORD PTR [RBX+R8*4]
.L_427c8f:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp RAX,R8
            jne .L_427c8f

            jmp .L_427c01

            cmp R8D,EBX
            jbe .L_427a49

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_427cd3:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_427cd3

            jmp .L_427a49

            lea R12D,DWORD PTR [R8+1]
            cmp R12D,EBX
            jbe .L_427c01

            mov R10D,EBX
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R8,R10
            lea RAX,QWORD PTR [R10+R10*4]
            mov R9D,EBP
            lea R8,QWORD PTR [R8+R8*4]
            shl R9D,4
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            or R9D,6
            lea R8,QWORD PTR [RBX+R8*4]
.L_427d1b:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp R8,RAX
            jne .L_427d1b

            jmp .L_427c01

            lea R12D,DWORD PTR [R8+1]
            cmp R12D,EBX
            jbe .L_427c01

            mov R10D,EBX
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R8,R10
            lea RAX,QWORD PTR [R10+R10*4]
            mov R9D,EBP
            lea R8,QWORD PTR [R8+R8*4]
            shl R9D,4
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            or R9D,7
            lea R8,QWORD PTR [RBX+R8*4]
.L_427d63:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp R8,RAX
            jne .L_427d63

            jmp .L_427c01

            add R8D,1
            mov R12D,R8D
            jmp .L_4277b0

            cmp R12D,EBX
            jbe .L_427c01

            lea R8D,DWORD PTR [R12-1]
            mov R10D,EBX
            mov R9D,EBP
            lea RAX,QWORD PTR [R10+R10*4]
            shl R9D,4
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R9D,6
            add R8,R10
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [RBX+R8*4]
.L_427db8:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp R8,RAX
            jne .L_427db8

            jmp .L_427c01
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427dd0:

            mov EBP,4
            jmp .L_4279b0
.L_427dda:

            cmp EBP,3
            je .L_427e30

            test EBP,EBP
            je .L_427e30

            xor EBP,EBP
.L_427de5:

            cmp EDI,R9D
            jbe .L_4279b0

            lea ECX,DWORD PTR [RDI-1]
            mov ESI,R9D
            movsxd RAX,EBP
            mov R8D,DWORD PTR [RSP+RAX*4+16]
            lea RAX,QWORD PTR [RSI+RSI*4]
            sub ECX,R9D
            add RCX,RSI
            lea RAX,QWORD PTR [R11+RAX*4+4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RSI,QWORD PTR [R13+RCX*4]
            nop
            nop
            nop
            nop
.L_427e18:

            mov ECX,DWORD PTR [RAX]
            add RAX,20
            and ECX,EBX
            or ECX,R8D
            mov DWORD PTR [RAX-20],ECX
            cmp RAX,RSI
            jne .L_427e18

            jmp .L_4279b0
.L_427e30:

            xor EAX,EAX
            cmp EBP,3
            sete AL
            add EAX,1
            cmp ESI,R9D
            jae .L_427e78

            lea ECX,DWORD PTR [R9-1]
            mov EBP,ESI
            cdqe 
            mov R8D,DWORD PTR [RSP+RAX*4+16]
            lea RAX,QWORD PTR [RBP+RBP*4]
            sub ECX,ESI
            add RCX,RBP
            lea RAX,QWORD PTR [R11+RAX*4+4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RSI,QWORD PTR [R13+RCX*4]
.L_427e65:

            mov ECX,DWORD PTR [RAX]
            add RAX,20
            and ECX,EBX
            or ECX,R8D
            mov DWORD PTR [RAX-20],ECX
            cmp RSI,RAX
            jne .L_427e65
.L_427e78:

            mov EBP,3
            jmp .L_427de5
.L_427e82:

            lea RAX,QWORD PTR [RIP+.L_428660]
            movsx EAX,WORD PTR [RAX+R13*2]
            test AX,AX
            jle .L_42762c

            sub EAX,1
            jmp .L_42778a
.L_427e9f:

            call __stack_chk_fail@PLT
.L_427ea4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427eb0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,8
.L_427ec5:

            mov RAX,QWORD PTR [RDI+24]
            mov RDX,QWORD PTR [RAX+208]
            mov RDI,RAX
            call QWORD PTR [RAX+144]

            mov ECX,7168
            xor EDX,EDX
            bt ECX,EAX
            jb .L_427f17

            test EBX,EBX
            mov RAX,QWORD PTR [RBP+24]
            mov DWORD PTR [R12],0
            je .L_427f28

            test R13D,R13D
            je .L_427f28

            mov EDX,R13D
            mov R8,QWORD PTR [RAX+232]
            mov RCX,R12
            mov ESI,EBX
            mov RDI,RAX
            call QWORD PTR [RAX+168]

            test EAX,EAX
            setne DL
.L_427f17:

            add RSP,8
.L_427f1b:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427f28:

            add RSP,8
            xor EDX,EDX
            pop RBX
            mov EAX,EDX
            pop RBP
            pop R12
            pop R13
            ret 
.L_427f37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427f40:

            push R15
            push R14
            mov RDI,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_427f51:

            mov R15D,DWORD PTR [RDX+184]
            mov RSI,QWORD PTR [RDX+200]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            test R15D,R15D
            mov QWORD PTR [RSP+32],RSI
            je .L_42820c

            movzx EAX,BYTE PTR [RSI+15]
            mov R9,RDX
            mov BYTE PTR [RSP+8],AL
            and EAX,15
            cmp AL,6
            je .L_428230

            lea EDX,DWORD PTR [R15-1]
            lea RAX,QWORD PTR [RSI+35]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RDX*4]
            jmp .L_427fbb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427fa8:

            movzx EDX,BYTE PTR [RAX]
            add RAX,20
            and EDX,15
            cmp DL,6
            je .L_428230
.L_427fbb:

            cmp RCX,RAX
            jne .L_427fa8
.L_427fc0:

            test R15D,R15D
            je .L_42820c

            mov RAX,QWORD PTR [RSP+32]
            xor R12D,R12D
            movzx ECX,BYTE PTR [RAX+15]
            add RAX,35
            mov QWORD PTR [RSP+40],RAX
            jmp .L_427fe9
.L_427fe0:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_427ff2
.L_427fe9:

            add R12D,1
            cmp R12D,R15D
            jne .L_427fe0
.L_427ff2:

            mov R8,QWORD PTR [RSP+32]
            xor EBX,EBX
            mov R10D,1
            mov DWORD PTR [RSP+24],R15D
            mov R14,R9
            mov R13,R8
            nop
            nop
            nop
            nop
            nop
            nop
.L_428010:

            mov EAX,EBX
            and ECX,15
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RBP,QWORD PTR [R13+RAX*4]
            mov EAX,70
            bt EAX,ECX
            jae .L_428082

            cmp BYTE PTR [RBP+18],18
            je .L_4280f0
.L_428032:

            cmp R12D,EBX
            mov R15D,R12D
            jbe .L_42807b

            mov QWORD PTR [RSP+8],R14
            mov R14,R13
            nop
            nop
            nop
            nop
            nop
            nop
.L_428048:

            movzx ECX,BYTE PTR [RBP+18]
            lea R13D,DWORD PTR [RBX+1]
            cmp CL,31
            ja .L_42806a

            mov EAX,R10D
            shl EAX,CL
            test AL,34
            je .L_428529

            cmp CL,12
            mov R15D,EBX
            je .L_4280e0
.L_42806a:

            add RBP,20
            cmp R12D,R13D
            mov EBX,R13D
            jne .L_428048

            mov R14,QWORD PTR [RSP+8]
.L_42807b:

            mov R13,QWORD PTR [R14+200]
.L_428082:

            mov EAX,R12D
            mov ESI,DWORD PTR [R14+184]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx ECX,BYTE PTR [R13+RAX*4+15]
            lea EAX,DWORD PTR [R12+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R13+RAX*4+15]
            mov EAX,R12D
            jmp .L_4280b9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4280b0:

            add RDX,20
            cmp CL,BYTE PTR [RDX-20]
            jne .L_4280c0
.L_4280b9:

            add EAX,1
            cmp ESI,EAX
            ja .L_4280b0
.L_4280c0:

            cmp R12D,DWORD PTR [RSP+24]
            mov EBX,R12D
            jae .L_4281e0

            mov R12D,EAX
            jmp .L_428010
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4280e0:

            test BYTE PTR [RBP+12],32
            cmove R15D,R13D
            jmp .L_42806a

            nop
            nop
            nop
            nop
            nop
            nop
.L_4280f0:

            mov EAX,R12D
            sub EAX,EBX
            cmp EAX,1
            jbe .L_428032

            lea R15D,DWORD PTR [RBX+1]
            cmp R15D,R12D
            jae .L_428032

            mov EAX,R15D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R13+RAX*4]
            mov RAX,R8
            jmp .L_428131
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428120:

            add R15D,1
            add RAX,20
            cmp R15D,R12D
            jae .L_428032
.L_428131:

            movzx EDX,BYTE PTR [RAX+18]
            cmp DL,31
            ja .L_428120

            mov EDI,34
            bt EDI,EDX
            jb .L_42850c

            cmp DL,12
            jne .L_428120

            test BYTE PTR [RAX+12],32
            jne .L_428120
.L_428153:

            sub R15D,1
.L_428157:

            lea EDX,DWORD PTR [R15+1]
            mov EAX,EDX
            sub EAX,EBX
            cmp EAX,1
            jbe .L_428182

            mov ESI,EBX
            mov RDI,R14
            mov DWORD PTR [RSP+16],R10D
            mov QWORD PTR [RSP+8],R8
            call .L_403190

            mov R10D,DWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
.L_428182:

            movdqu XMM0,XMMWORD PTR [RBP]
            mov RSI,R8
            mov RDI,RBP
            mov DWORD PTR [RSP+8],R10D
            movaps XMMWORD PTR [RSP+80],XMM0
            mov EAX,DWORD PTR [RBP+16]
            mov DWORD PTR [RSP+96],EAX
            mov EAX,R15D
            sub EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            call memmove@PLT

            mov ECX,R15D
            movdqa XMM0,XMMWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+RCX*4]
            mov R10D,DWORD PTR [RSP+8]
            lea RAX,QWORD PTR [R13+RAX*4]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RSP+96]
            mov DWORD PTR [RAX+16],EDX
            jmp .L_428032
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4281e0:

            test ESI,ESI
            je .L_42820c

            lea EDX,DWORD PTR [RSI-1]
            mov RDI,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RDX+RDX*4]
            add RAX,15
            lea RDX,QWORD PTR [RDI+RDX*4]
            nop
            nop
            nop
.L_428200:

            mov BYTE PTR [RAX],0
            add RAX,20
            cmp RDX,RAX
            jne .L_428200
.L_42820c:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_428524

            add RSP,120
.L_428224:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_428230:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov QWORD PTR [RSP+8],R9
            mov DWORD PTR [RSP+64],0
            lea RCX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RDI+160]
            mov EDX,9676
            movaps XMMWORD PTR [RSP+48],XMM0
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            jne .L_42828c
.L_428274:

            mov RAX,QWORD PTR [R9+200]
            mov R15D,DWORD PTR [R9+184]
            mov QWORD PTR [RSP+32],RAX
            jmp .L_427fc0
.L_42828c:

            mov EDI,9676
            mov QWORD PTR [RSP+8],R9
            lea RBP,QWORD PTR [RSP+80]
            call .L_428e00

            mov R9,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+66],AL
            xor R12D,R12D
            mov RDI,R9
            call .L_4029e0

            mov R9,QWORD PTR [RSP+8]
            xor EAX,EAX
            mov R8D,DWORD PTR [R9+184]
            mov DWORD PTR [R9+180],0
            mov RBX,R9
.L_4282d0:

            cmp EAX,R8D
            jae .L_42848a

            cmp BYTE PTR [RBX+176],0
            jne .L_42848a

            mov RCX,QWORD PTR [RBX+200]
            mov EDX,EAX
            lea RSI,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [RCX+RSI*4]
            movzx R14D,BYTE PTR [RSI+15]
            mov EDI,R14D
            mov R13D,R14D
            and EDI,15
            cmp DIL,6
            jne .L_42842f

            cmp R14D,R12D
            je .L_42842f

            mov EDI,DWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RDX+RDX*4]
            movdqa XMM0,XMMWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movaps XMMWORD PTR [RSP+80],XMM0
            mov DWORD PTR [RSP+96],EDI
            mov EDI,DWORD PTR [RSI+8]
            mov DWORD PTR [RSP+88],EDI
            mov EDI,DWORD PTR [RSI+4]
            mov DWORD PTR [RSP+84],EDI
            movzx ESI,BYTE PTR [RSI+15]
            mov BYTE PTR [RSP+95],SIL
            cmp R13B,BYTE PTR [RDX+15]
            jne .L_42840f
.L_428354:

            cmp BYTE PTR [RDX+18],18
            jne .L_42840f

            cmp BYTE PTR [RBX+177],0
            je .L_4283d4

            cmp RCX,QWORD PTR [RBX+208]
            je .L_4284a1
.L_428374:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_428501

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [RBX+188]
.L_4283cb:

            add EAX,1
            mov DWORD PTR [RBX+188],EAX
.L_4283d4:

            mov EAX,DWORD PTR [RBX+180]
            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_4283e3:

            cmp EAX,DWORD PTR [RBX+184]
            jae .L_42840f

            cmp BYTE PTR [RBX+176],0
            jne .L_42840f

            mov RCX,QWORD PTR [RBX+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            cmp R13B,BYTE PTR [RDX+15]
            je .L_428354
.L_42840f:

            mov RSI,RBP
            mov RDI,RBX
            mov R12D,R14D
            call .L_402ca0

            mov EAX,DWORD PTR [RBX+180]
            mov R8D,DWORD PTR [RBX+184]
            jmp .L_4282d0
.L_42842f:

            cmp BYTE PTR [RBX+177],0
            je .L_42847c

            cmp RCX,QWORD PTR [RBX+208]
            je .L_428469
.L_428441:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            jne .L_4284b2

            mov EAX,DWORD PTR [RBX+180]
            mov R8D,DWORD PTR [RBX+184]
            jmp .L_4282d0
.L_428469:

            cmp DWORD PTR [RBX+188],EAX
            jne .L_428441

            mov EDX,EAX
.L_428473:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
.L_42847c:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_4282d0
.L_42848a:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RBX
            call .L_402a70

            mov R9,QWORD PTR [RSP+8]
            jmp .L_428274
.L_4284a1:

            cmp EAX,DWORD PTR [RBX+188]
            jne .L_428374

            jmp .L_4283cb
.L_4284b2:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov R8D,DWORD PTR [RBX+184]
            jmp .L_428473
.L_428501:

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_4283e3
.L_42850c:

            cmp DL,12
            jne .L_428157

            test BYTE PTR [RAX+12],32
            jne .L_428157

            jmp .L_428153
.L_428524:

            call __stack_chk_fail@PLT
.L_428529:

            cmp CL,12
            je .L_4285e5

            nop
            nop
            nop
            nop
            nop
            nop
.L_428538:

            test EAX,12582912
            je .L_42806a

            movzx EAX,BYTE PTR [RBP+14]
            test AL,16
            jne .L_428553

            test AL,15
            jne .L_42806a
.L_428553:

            cmp R15D,EBX
            jae .L_42806a

            mov EAX,R13D
            sub EAX,R15D
            cmp EAX,1
            jbe .L_428581

            mov RDI,QWORD PTR [RSP+8]
            mov EDX,R13D
            mov ESI,R15D
            mov DWORD PTR [RSP+16],R10D
            call .L_403190

            mov R10D,DWORD PTR [RSP+16]
.L_428581:

            movdqu XMM0,XMMWORD PTR [RBP]
            sub EBX,R15D
            lea RDX,QWORD PTR [RBX+RBX*4]
            mov DWORD PTR [RSP+28],R10D
            movaps XMMWORD PTR [RSP+80],XMM0
            mov EAX,DWORD PTR [RBP+16]
            shl RDX,2
            mov DWORD PTR [RSP+96],EAX
            mov EAX,R15D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [R14+RAX*4]
            lea EAX,DWORD PTR [R15+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RSI,RCX
            mov QWORD PTR [RSP+16],RCX
            lea RDI,QWORD PTR [R14+RAX*4]
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+16]
            mov R10D,DWORD PTR [RSP+28]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RCX],XMM0
            mov EAX,DWORD PTR [RSP+96]
            mov DWORD PTR [RCX+16],EAX
            jmp .L_42806a
.L_4285e5:

            test BYTE PTR [RBP+12],32
            jne .L_428538

            mov R15D,R13D
            jmp .L_42806a
.L_4285f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428600:

            lodsb AL,BYTE PTR [RSI]
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0x74
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xac
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0xac
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0x2c
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xe4
          .byte 0xf6
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0xf6
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0xf6
          .byte 0xff
          .byte 0xff
          .byte 0x18
          .byte 0xf6
          .byte 0xff
          .byte 0xff
          .byte 0xc2
          .byte 0xf5
          .byte 0xff
          .byte 0xff
          .byte 0x7a
          .byte 0xf5
          .byte 0xff
          .byte 0xff
          .byte 0x32
          .byte 0xf5
          .byte 0xff
          .byte 0xff
          .byte 0xea
          .byte 0xf4
          .byte 0xff
          .byte 0xff
          .byte 0xa6
          .byte 0xf4
          .byte 0xff
          .byte 0xff
          .byte 0x65
          .byte 0xf4
          .byte 0xff
          .byte 0xff
          .byte 0xa
          .byte 0xf4
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428660:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4286e0:
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0xe
          .byte 0x0
          .byte 0x2
          .byte 0xf
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428720:
          .byte 0x1
          .byte 0x1a
          .byte 0x2
          .byte 0x3
          .byte 0x1
          .byte 0x17
          .byte 0x1
          .byte 0x2b
          .byte 0x2c
          .byte 0x2e
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x27
          .byte 0x28
          .byte 0x29
          .byte 0x2d
          .byte 0x2a
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x4
          .byte 0x5
          .byte 0x16
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x6
          .byte 0x1
          .byte 0x1
          .byte 0x18
          .byte 0x19
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x1
          .byte 0x2f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428760:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x2
          .byte 0x5
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x6
          .byte 0x4
          .byte 0x4
          .byte 0x1
          .byte 0x7
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x2
          .byte 0x2
          .byte 0x8
          .byte 0x9
          .byte 0x4
          .byte 0x4
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x4
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x4
          .byte 0x1b
          .byte 0x1a
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x20
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x30
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x29
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1e
          .byte 0x31
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x29
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x25
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x27
          .byte 0x21
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x1c
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x20
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x33
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x34
          .byte 0x32
          .byte 0x5
          .byte 0x35
          .byte 0x33
          .byte 0x32
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x38
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x13
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x13
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xe
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x10
          .byte 0xa
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x36
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x1
          .byte 0x39
          .byte 0x3
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x3
          .byte 0x36
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x3b
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3b
          .byte 0x3c
          .byte 0x3a
          .byte 0x3b
          .byte 0x3c
          .byte 0x3a
          .byte 0x3c
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428c60:
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x94
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xf7
          .byte 0x1
          .byte 0x18
          .byte 0x2
          .byte 0x39
          .byte 0x2
          .byte 0x5a
          .byte 0x2
          .byte 0x7b
          .byte 0x2
          .byte 0x85
          .byte 0x2
          .byte 0x87
          .byte 0x2
          .byte 0x89
          .byte 0x2
          .byte 0xaa
          .byte 0x2
          .byte 0xcb
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xd
          .byte 0x3
          .byte 0x21
          .byte 0x3
          .byte 0x35
          .byte 0x3
          .byte 0x49
          .byte 0x3
          .byte 0x6a
          .byte 0x3
          .byte 0x8b
          .byte 0x3
          .byte 0xac
          .byte 0x3
          .byte 0xcd
          .byte 0x3
          .byte 0xee
          .byte 0x3
          .byte 0xf
          .byte 0x4
          .byte 0x30
          .byte 0x4
          .byte 0x51
          .byte 0x4
          .byte 0x72
          .byte 0x4
          .byte 0x93
          .byte 0x4
          .byte 0x95
          .byte 0x4
          .byte 0xbd
          .byte 0x4
          .byte 0xde
          .byte 0x4
          .byte 0xf5
          .byte 0x4
          .byte 0xf8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428ce0:
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x20
          .byte 0x20
          .byte 0x1
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x13
          .byte 0x13
          .byte 0x13
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x9
          .byte 0x1
          .byte 0x1
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x13
          .byte 0x13
          .byte 0x13
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x1
          .byte 0x27
          .byte 0x20
          .byte 0x16
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428d20:
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x15
          .byte 0x15
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0xd
          .byte 0x15
          .byte 0x4
          .byte 0x4
          .byte 0xd
          .byte 0xd
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x15
          .byte 0x2a
          .byte 0x29
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428da0:
          .byte 0x73
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x73
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x6e
          .byte 0x6c
          .byte 0x61
          .byte 0x68
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x73
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x74
          .byte 0x73
          .byte 0x69
          .byte 0x64
          .byte 0x6d
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x6d
          .byte 0x77
          .byte 0x6c
          .byte 0x62
.L_428dc0:
          .byte 0x6c
          .byte 0x6f
          .byte 0x73
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x69
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x61
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x32
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x32
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x33
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428de0:
          .byte 0x66
          .byte 0x72
          .byte 0x6b
          .byte 0x72
          .byte 0x66
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x66
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x66
          .byte 0x6c
          .byte 0x61
          .byte 0x68
          .byte 0x66
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x75
          .byte 0x74
          .byte 0x61
          .byte 0x76
          .byte 0x74
          .byte 0x63
          .byte 0x6a
          .byte 0x63
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428e00:

            mov EAX,EDI
            shr EAX,12
            cmp EAX,17
            ja .L_429000

            lea RDX,QWORD PTR [RIP+.L_429160]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_428e20:

            lea EAX,DWORD PTR [RDI-69632]
            cmp EAX,191
            jbe .L_429038

            lea EAX,DWORD PTR [RDI-69888]
            cmp EAX,319
            jbe .L_4290b0

            lea EAX,DWORD PTR [RDI-70272]
            cmp EAX,247
            jbe .L_4290c8

            lea EAX,DWORD PTR [RDI-70656]
            cmp EAX,223
            jbe .L_42911c

            lea EAX,DWORD PTR [RDI-71040]
            cmp EAX,447
            jbe .L_429140

            lea EDX,DWORD PTR [RDI-72704]
            xor EAX,EAX
            cmp EDX,183
            ja .L_429002

            lea EAX,DWORD PTR [RDI-67744]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428ea0:

            lea EAX,DWORD PTR [RDI-40]
            cmp EAX,23
            jbe .L_42900e

            lea EAX,DWORD PTR [RDI-160]
            cmp EAX,55
            jbe .L_429008

            lea EAX,DWORD PTR [RDI-2304]
            cmp EAX,1271
            jbe .L_4290e0

            cmp EDI,847
            mov EDX,6
            mov EAX,0
            cmove EAX,EDX
            ret 
.L_428ee0:

            lea EAX,DWORD PTR [RDI-4096]
            cmp EAX,159
            jbe .L_429020

            lea EAX,DWORD PTR [RDI-5888]
            cmp EAX,239
            jbe .L_429098

            lea EAX,DWORD PTR [RDI-6400]
            cmp EAX,415
            jbe .L_4290f8

            lea EAX,DWORD PTR [RDI-6912]
            cmp EAX,335
            jbe .L_42910a

            lea EAX,DWORD PTR [RDI-7376]
            cmp EAX,47
            jbe .L_42912e

            lea EDX,DWORD PTR [RDI-7672]
            xor EAX,EAX
            cmp EDX,7
            ja .L_429002

            lea EAX,DWORD PTR [RDI-5120]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428f60:

            lea EAX,DWORD PTR [RDI-8200]
            cmp EAX,15
            jbe .L_429050

            lea EAX,DWORD PTR [RDI-8288]
            cmp EAX,39
            jbe .L_429080

            cmp EDI,9676
            sete AL
            lea EAX,DWORD PTR [RAX+RAX*4]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428f90:

            lea EDX,DWORD PTR [RDI-65024]
            xor EAX,EAX
            cmp EDX,15
            ja .L_429002

            lea EAX,DWORD PTR [RDI-61584]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x90
.L_428fb0:

            lea EAX,DWORD PTR [RDI-43008]
            cmp EAX,759
            jbe .L_429068

            lea EDX,DWORD PTR [RDI-43968]
            xor EAX,EAX
            cmp EDX,63
            ja .L_429002

            lea EAX,DWORD PTR [RDI-40592]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_428fe0:

            lea EDX,DWORD PTR [RDI-68096]
            xor EAX,EAX
            cmp EDX,71
            ja .L_429002

            lea EAX,DWORD PTR [RDI-64640]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x90
.L_429000:

            xor EAX,EAX
.L_429002:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429008:

            lea EAX,DWORD PTR [RDI-136]
.L_42900e:

            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429020:

            lea EAX,DWORD PTR [RDI-2744]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429038:

            lea EAX,DWORD PTR [RDI-66104]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429050:

            lea EAX,DWORD PTR [RDI-5640]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429068:

            lea EAX,DWORD PTR [RDI-40392]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429080:

            lea EAX,DWORD PTR [RDI-5712]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429098:

            lea EAX,DWORD PTR [RDI-4376]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4290b0:

            lea EAX,DWORD PTR [RDI-66168]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4290c8:

            lea EAX,DWORD PTR [RDI-66232]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4290e0:

            lea EAX,DWORD PTR [RDI-2224]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4290f8:

            lea EAX,DWORD PTR [RDI-4648]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_42910a:

            lea EAX,DWORD PTR [RDI-4744]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_42911c:

            lea EAX,DWORD PTR [RDI-66368]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_42912e:

            lea EAX,DWORD PTR [RDI-4872]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_429140:

            lea EAX,DWORD PTR [RDI-66528]
            lea RDX,QWORD PTR [RIP+.L_4291c0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_429152:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429160:
          .long .L_428ea0-.L_429160
          .long .L_428ee0-.L_429160
          .long .L_428f60-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_428fb0-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_429000-.L_429160
          .long .L_428f90-.L_429160
          .long .L_428fe0-.L_429160
          .long .L_428e20-.L_429160
          .zero 24
.L_4291c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x23
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x16
          .byte 0x23
          .byte 0x0
          .byte 0x25
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x1f
          .byte 0x5
          .byte 0x5
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x12
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x23
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0xc
          .byte 0x21
          .byte 0x1d
          .byte 0x1e
          .byte 0x1c
          .byte 0x1c
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1
          .byte 0x23
          .byte 0x27
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1c
          .byte 0x23
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x26
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x27
          .byte 0x27
          .byte 0x23
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x25
          .byte 0x27
          .byte 0x23
          .byte 0x25
          .byte 0x25
          .byte 0x8
          .byte 0x18
          .byte 0x1f
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x21
          .byte 0xc
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1a
          .byte 0x26
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x19
          .byte 0x21
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x22
          .byte 0x16
          .byte 0x23
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1e
          .byte 0x1c
          .byte 0x1a
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x19
          .byte 0x19
          .byte 0x19
          .byte 0x19
          .byte 0x0
          .byte 0xc
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x18
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1f
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2a
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x18
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x21
          .byte 0x22
          .byte 0x16
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0xc
          .byte 0xb
          .byte 0xb
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1f
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x21
          .byte 0x18
          .byte 0x18
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0x23
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x17
          .byte 0x17
          .byte 0x8
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x25
          .byte 0x25
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x25
          .byte 0x27
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x27
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x21
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1a
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x1a
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x18
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1f
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x16
          .byte 0x21
          .byte 0xb
          .byte 0x1d
          .byte 0x1d
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x21
          .byte 0x16
          .byte 0x16
          .byte 0x21
          .byte 0x22
          .byte 0x1d
          .byte 0x1e
          .byte 0x1c
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x18
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x18
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x27
          .byte 0x25
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x25
          .byte 0x1
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x16
          .byte 0x22
          .byte 0x21
          .byte 0x16
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x27
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x22
          .byte 0x26
          .byte 0x25
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x20
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x27
          .byte 0x25
          .byte 0x27
          .byte 0x12
          .byte 0x12
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0xc
          .byte 0x21
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x1
          .byte 0x12
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x25
          .byte 0xc
          .byte 0x1f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x20
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x21
          .byte 0x16
          .byte 0x16
          .byte 0x23
          .byte 0x16
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0xc
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0xc
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x25
          .byte 0x27
          .byte 0xc
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x27
          .byte 0x21
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1e
          .byte 0x1b
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x21
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x0
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x22
          .byte 0x16
          .byte 0x22
          .byte 0x21
          .byte 0x23
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a5e0:

            sub RSP,8
            mov RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RDX],ESI
            mov DWORD PTR [RCX],0
            mov RDI,RAX
            mov R8,QWORD PTR [RAX+240]
            call QWORD PTR [RAX+176]

            test EAX,EAX
            setne AL
            add RSP,8
            ret 
.L_42a60a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42a610:

            movzx ECX,WORD PTR [RDI+16]
            mov EAX,7168
            mov EDX,EAX
            shr EDX,CL
            movzx ECX,CH
            and EDX,1
            cmovne EDX,ECX
            movzx ECX,WORD PTR [RSI+16]
            shr EAX,CL
            and EAX,1
            je .L_42a638

            movzx EAX,CH
            cmp EAX,EDX
            ja .L_42a648
.L_42a638:

            cmp EDX,EAX
            setne AL
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a648:

            mov EAX,4294967295
            ret 
.L_42a64e:

            nop
            nop
.L_42a650:

            test ESI,ESI
            mov RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RCX],0
            je .L_42a680

            test EDX,EDX
            je .L_42a680

            sub RSP,8
            mov RDI,RAX
            mov R8,QWORD PTR [RAX+232]
            call QWORD PTR [RAX+168]

            test EAX,EAX
            setne AL
            add RSP,8
            ret 
.L_42a680:

            xor EAX,EAX
            ret 
.L_42a683:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a690:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_42a698:

            mov EAX,DWORD PTR [RDI+180]
            mov RBX,RDI
            mov RCX,QWORD PTR [RDI+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBX+188]
            mov R14,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_42a6d4

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [R14+RAX*4]
.L_42a6d4:

            mov R13,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R14]
            mov RDX,QWORD PTR [R13+208]
            mov ESI,EBP
            mov RDI,R13
            call QWORD PTR [R13+144]

            cmp EBP,127
            mov R12D,EAX
            jbe .L_42a798

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            jne .L_42a7b0

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_42a920

            jbe .L_42a808

            cmp EDX,32
            je .L_42a7d8

            jbe .L_42a8c0

            cmp EDX,254
            je .L_42a8e0

            cmp EDX,255
            jne .L_42a828

            lea EDX,DWORD PTR [RBP-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a768:

            test EDX,EDX
            je .L_42a828
.L_42a770:

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_42a988
.L_42a785:

            cmp EBP,8205
            jne .L_42a960

            or R12D,288
.L_42a798:

            mov WORD PTR [R14+16],R12W
            pop RBX
.L_42a79e:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a7b0:

            cmp EDX,1
            je .L_42a938

            cmp EDX,14
            jne .L_42a828

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_42a768
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a7d8:

            lea EDX,DWORD PTR [RBP-8203]
            cmp EDX,4
            jbe .L_42a770

            lea EDX,DWORD PTR [RBP-8234]
            cmp EDX,4
            jbe .L_42a770

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_42a768
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a808:

            cmp EDX,3
            je .L_42a910

            cmp EDX,6
            je .L_42a900

            test EDX,EDX
            je .L_42a8b0

            nop
            nop
            nop
            nop
            nop
            nop
.L_42a828:

            mov EAX,16782336
            bt EAX,R12D
            jae .L_42a798

            mov ESI,DWORD PTR [R14]
            cmp ESI,4151
            je .L_42a998

            cmp ESI,6752
            je .L_42a978

            cmp ESI,4038
            je .L_42a978

            cmp ESI,3897
            mov EAX,32512
            je .L_42a88c
.L_42a86b:

            mov RDX,QWORD PTR [R13+192]
            mov RDI,R13
            call QWORD PTR [R13+128]

            lea RDX,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            shl EAX,8
.L_42a88c:

            sub EBP,127995
            or EAX,R12D
            mov R12D,11
            cmp EBP,4
            cmova R12D,EAX
            jmp .L_42a798
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a8b0:

            xor EDX,EDX
            cmp EBP,173
            sete DL
            jmp .L_42a768
.L_42a8c0:

            cmp EDX,24
            jne .L_42a828

            lea EDX,DWORD PTR [RBP-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42a768
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a8e0:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe DL
            cmp EBP,65279
            sete CL
            or EDX,ECX
            movzx EDX,DL
            jmp .L_42a768
          .byte 0x90
.L_42a900:

            xor EDX,EDX
            cmp EBP,1564
            sete DL
            jmp .L_42a768
.L_42a910:

            xor EDX,EDX
            cmp EBP,847
            sete DL
            jmp .L_42a768
.L_42a920:

            lea EDX,DWORD PTR [RBP-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42a768
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a938:

            lea EDX,DWORD PTR [RBP-113824]
            cmp EDX,3
            jbe .L_42a9a2

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_42a768
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a960:

            sub EBP,6155
            cmp EBP,2
            ja .L_42a9b0

            or R12D,96
            jmp .L_42a798
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a978:

            mov EAX,65024
            jmp .L_42a88c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a988:

            or R12D,544
            jmp .L_42a798
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a998:

            mov ESI,4154
            jmp .L_42a86b
.L_42a9a2:

            or EAX,3
            mov DWORD PTR [RBX+132],EAX
            jmp .L_42a785
.L_42a9b0:

            or R12D,32
            jmp .L_42a798
.L_42a9b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a9c0:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov ESI,EDX
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_42a9d6:

            mov RBX,QWORD PTR [RDI+8]
            mov R12,QWORD PTR [RDI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RCX,QWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RSP+24]
            call QWORD PTR [RDI+32]

            test AL,AL
            je .L_42ab20

            mov EDX,DWORD PTR [RSP+28]
            mov R13D,EAX
            mov RAX,QWORD PTR [R12+152]
            mov RSI,QWORD PTR [R12+160]
            test EDX,EDX
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            jne .L_42ab50
.L_42aa30:

            mov RDI,R12
            mov DWORD PTR [RSP+32],0
            lea RCX,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RSP+24]
            call R9

            test EAX,EAX
            mov R12D,EAX
            je .L_42aed0

            test R14B,R14B
            je .L_42aed0

            mov EAX,DWORD PTR [RBX+180]
            mov R9,QWORD PTR [RBX+200]
            mov RDI,RBX
            mov EDX,DWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBX+188]
            mov R13,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_42aaa0

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R13,QWORD PTR [R13+RAX*4]
.L_42aaa0:

            mov R14,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R13]
            mov RDX,QWORD PTR [R14+208]
            mov ESI,EBP
            mov RDI,R14
            call QWORD PTR [R14+144]

            cmp EBP,127
            mov R12D,EAX
            jbe .L_42abf0

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            je .L_42ae30

            cmp EDX,1
            je .L_42b570

            cmp EDX,14
            jne .L_42ad30

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_42abb8
          .byte 0x66
          .byte 0x90
.L_42ab10:

            test R12D,R12D
            jne .L_42b008

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ab20:

            xor EBP,EBP
.L_42ab22:

            mov RDI,QWORD PTR [RSP+40]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_42b979

            add RSP,56
.L_42ab3c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ab50:

            mov DWORD PTR [RSP+36],0
            lea RCX,QWORD PTR [RSP+36]
            mov RDI,R12
            call R9

            test EAX,EAX
            je .L_42ab20

            mov RAX,QWORD PTR [R12+152]
            mov RSI,QWORD PTR [R12+160]
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            jmp .L_42aa30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ab90:

            cmp EDX,3
            je .L_42b210

            cmp EDX,6
            je .L_42b2a0

            test EDX,EDX
            jne .L_42ad30

            xor EDX,EDX
            cmp EBP,173
            sete DL
            nop
            nop
            nop
.L_42abb8:

            test EDX,EDX
            je .L_42ad30
.L_42abc0:

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_42b560
.L_42abd5:

            cmp EBP,8205
            jne .L_42b593

            or R12D,288
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42abf0:

            mov ESI,DWORD PTR [RSP+28]
            mov WORD PTR [R13+16],R12W
            test ESI,ESI
            je .L_42ad20

            mov EAX,DWORD PTR [RBX+180]
            mov R8,QWORD PTR [RBX+200]
            mov RDI,RBX
            mov EDX,DWORD PTR [RSP+36]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBX+188]
            mov R14,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_42ac41

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [R14+RAX*4]
.L_42ac41:

            mov R13,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R14]
            mov RDX,QWORD PTR [R13+208]
            mov ESI,EBP
            mov RDI,R13
            call QWORD PTR [R13+144]

            cmp EBP,127
            mov R12D,EAX
            jbe .L_42ad10

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            je .L_42ae80

            cmp EDX,1
            je .L_42b5d0

            cmp EDX,14
            jne .L_42adb0

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_42acd8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42acb0:

            cmp EDX,3
            je .L_42b220

            cmp EDX,6
            je .L_42b300

            test EDX,EDX
            jne .L_42adb0

            xor EDX,EDX
            cmp EBP,173
            sete DL
            nop
            nop
            nop
.L_42acd8:

            test EDX,EDX
            je .L_42adb0
.L_42ace0:

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_42b5b0
.L_42acf5:

            cmp EBP,8205
            jne .L_42b5f3

            or R12D,288
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ad10:

            mov WORD PTR [R14+16],R12W
            mov EBP,2
            jmp .L_42ab22
          .byte 0x90
.L_42ad20:

            mov EBP,1
            jmp .L_42ab22
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ad30:

            mov EAX,16782336
            bt EAX,R12D
            jae .L_42abf0

            mov ESI,DWORD PTR [R13]
            cmp ESI,4151
            je .L_42b5bc

            cmp ESI,6752
            je .L_42b54b

            cmp ESI,4038
            je .L_42b54b

            cmp ESI,3897
            mov EAX,32512
            je .L_42ad95
.L_42ad74:

            mov RDX,QWORD PTR [R14+192]
            mov RDI,R14
            call QWORD PTR [R14+128]

            lea RDX,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            shl EAX,8
.L_42ad95:

            sub EBP,127995
            or R12D,EAX
            mov EAX,11
            cmp EBP,4
            cmovbe R12D,EAX
            jmp .L_42abf0
          .byte 0x90
.L_42adb0:

            mov EAX,16782336
            bt EAX,R12D
            jae .L_42ad10

            mov ESI,DWORD PTR [R14]
            cmp ESI,4151
            je .L_42b60b

            cmp ESI,6752
            je .L_42b555

            cmp ESI,4038
            je .L_42b555

            cmp ESI,3897
            mov EAX,32512
            je .L_42ae14
.L_42adf3:

            mov RDX,QWORD PTR [R13+192]
            mov RDI,R13
            call QWORD PTR [R13+128]

            lea RDX,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            shl EAX,8
.L_42ae14:

            sub EBP,127995
            or EAX,R12D
            mov R12D,11
            cmp EBP,4
            cmova R12D,EAX
            jmp .L_42ad10
          .byte 0x90
.L_42ae30:

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_42b288

            jbe .L_42ab90

            cmp EDX,32
            je .L_42b250

            jbe .L_42afe8

            cmp EDX,254
            je .L_42b230

            cmp EDX,255
            jne .L_42ad30

            lea EDX,DWORD PTR [RBP-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_42abb8
          .byte 0x90
.L_42ae80:

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_42b2e8

            jbe .L_42acb0

            cmp EDX,32
            je .L_42b2b0

            jbe .L_42b1f0

            cmp EDX,254
            je .L_42b310

            cmp EDX,255
            jne .L_42adb0

            lea EDX,DWORD PTR [RBP-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_42acd8
          .byte 0x90
.L_42aed0:

            mov EDX,DWORD PTR [RSP+24]
            mov RDI,RBP
            movzx ESI,R14B
            call .L_42a9c0

            test EAX,EAX
            mov EBP,EAX
            je .L_42ab10

            mov ESI,DWORD PTR [RSP+28]
            test ESI,ESI
            je .L_42ab22

            mov EAX,DWORD PTR [RBX+180]
            mov RDI,QWORD PTR [RBX+200]
            mov EDX,DWORD PTR [RSP+36]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov RDI,RBX
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBX+188]
            mov R15,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_42af36

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R15,QWORD PTR [R15+RAX*4]
.L_42af36:

            mov R14,QWORD PTR [RBX+112]
            mov R12D,DWORD PTR [R15]
            mov RDX,QWORD PTR [R14+208]
            mov ESI,R12D
            mov RDI,R14
            call QWORD PTR [R14+144]

            cmp R12D,127
            mov ECX,EAX
            jbe .L_42afd8

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            je .L_42b4a8

            cmp EDX,1
            je .L_42b9fd

            cmp EDX,14
            jne .L_42b440

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe R13B
.L_42af9c:

            movzx R13D,R13B
.L_42afa0:

            test R13D,R13D
            je .L_42b440

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_42b9f2

            cmp R12D,8205
            jne .L_42ba36

            or ECX,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_42afd8:

            mov WORD PTR [R15+16],CX
            add EBP,1
            jmp .L_42ab22
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42afe8:

            cmp EDX,24
            jne .L_42ad30

            lea EDX,DWORD PTR [RBP-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42abb8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b008:

            mov EAX,DWORD PTR [RBX+180]
            mov RCX,QWORD PTR [RBX+200]
            mov RDI,RBX
            mov EDX,DWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBX+188]
            mov R14,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_42b04c

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [R14+RAX*4]
.L_42b04c:

            mov R12,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R14]
            mov RDX,QWORD PTR [R12+208]
            mov ESI,EBP
            mov RDI,R12
            call QWORD PTR [R12+144]

            cmp EBP,127
            mov R15D,EAX
            jbe .L_42b0e8

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            je .L_42b390

            cmp EDX,1
            je .L_42b9cf

            cmp EDX,14
            jne .L_42b32f

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe DL
.L_42b0af:

            movzx EDX,DL
.L_42b0b2:

            test EDX,EDX
            je .L_42b32f

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_42b9c3

            cmp EBP,8205
            jne .L_42b97e

            or R15D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b0e8:

            mov ESI,DWORD PTR [RSP+28]
            mov WORD PTR [R14+16],R15W
            test ESI,ESI
            je .L_42ad20

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            mov RDI,RBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RSP+36]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBX+188]
            mov R14,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_42b139

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [R14+RAX*4]
.L_42b139:

            mov R12,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R14]
            mov RDX,QWORD PTR [R12+208]
            mov ESI,EBP
            mov RDI,R12
            call QWORD PTR [R12+144]

            cmp EBP,127
            mov R15D,EAX
            jbe .L_42b1d8

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            je .L_42b4fb

            cmp EDX,1
            je .L_42b9a2

            cmp EDX,14
            jne .L_42b3df

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe R13B
.L_42b19d:

            movzx R13D,R13B
.L_42b1a1:

            test R13D,R13D
            je .L_42b3df

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_42b996

            cmp EBP,8205
            jne .L_42ba22

            or R15D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b1d8:

            mov WORD PTR [R14+16],R15W
            mov EBP,2
            jmp .L_42ab22
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b1f0:

            cmp EDX,24
            jne .L_42adb0

            lea EDX,DWORD PTR [RBP-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42acd8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b210:

            xor EDX,EDX
            cmp EBP,847
            sete DL
            jmp .L_42abb8
.L_42b220:

            xor EDX,EDX
            cmp EBP,847
            sete DL
            jmp .L_42acd8
.L_42b230:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe DL
            cmp EBP,65279
            sete CL
            or EDX,ECX
            movzx EDX,DL
            jmp .L_42abb8
          .byte 0x90
.L_42b250:

            lea EDX,DWORD PTR [RBP-8203]
            cmp EDX,4
            jbe .L_42abc0

            lea EDX,DWORD PTR [RBP-8234]
            cmp EDX,4
            jbe .L_42abc0

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_42abb8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b288:

            lea EDX,DWORD PTR [RBP-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42abb8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b2a0:

            xor EDX,EDX
            cmp EBP,1564
            sete DL
            jmp .L_42abb8
.L_42b2b0:

            lea EDX,DWORD PTR [RBP-8203]
            cmp EDX,4
            jbe .L_42ace0

            lea EDX,DWORD PTR [RBP-8234]
            cmp EDX,4
            jbe .L_42ace0

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_42acd8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b2e8:

            lea EDX,DWORD PTR [RBP-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42acd8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b300:

            xor EDX,EDX
            cmp EBP,1564
            sete DL
            jmp .L_42acd8
.L_42b310:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe DL
            cmp EBP,65279
            sete CL
            or EDX,ECX
            movzx EDX,DL
            jmp .L_42acd8
.L_42b32f:

            mov EAX,16782336
            bt EAX,R15D
            jae .L_42b0e8

            mov ESI,DWORD PTR [R14]
            cmp ESI,4151
            je .L_42b8b7

            cmp ESI,4038
            je .L_42b93b

            cmp ESI,6752
            je .L_42b93b

            cmp ESI,3897
            mov EAX,127
            jne .L_42b8bc
.L_42b376:

            sub EBP,127995
            cmp EBP,4
            jbe .L_42b94f

            shl EAX,8
            or R15D,EAX
            jmp .L_42b0e8
.L_42b390:

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_42b780

            jbe .L_42b615

            cmp EDX,32
            je .L_42b72e

            jbe .L_42b6b4

            cmp EDX,254
            je .L_42b70f

            cmp EDX,255
            jne .L_42b32f

            lea EDX,DWORD PTR [RBP-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_42b0b2
.L_42b3df:

            mov EAX,16782336
            bt EAX,R15D
            jae .L_42b1d8

            mov ESI,DWORD PTR [R14]
            cmp ESI,4151
            je .L_42b8e1

            cmp ESI,6752
            je .L_42b96f

            cmp ESI,4038
            je .L_42b96f

            cmp ESI,3897
            mov EAX,127
            jne .L_42b8e6
.L_42b426:

            sub EBP,127995
            cmp EBP,4
            jbe .L_42b964

            shl EAX,8
            or R15D,EAX
            jmp .L_42b1d8
.L_42b440:

            mov EAX,16782336
            bt EAX,ECX
            jae .L_42afd8

            mov ESI,DWORD PTR [R15]
            cmp ESI,4151
            je .L_42b90b

            cmp ESI,4038
            je .L_42b945

            cmp ESI,6752
            je .L_42b945

            cmp ESI,3897
            mov EAX,127
            jne .L_42b910
.L_42b486:

            sub R12D,127995
            cmp R12D,4
            jbe .L_42b95a

            shl EAX,8
            or ECX,EAX
            jmp .L_42afd8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b4a8:

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_42b87a

            jbe .L_42b66b

            cmp EDX,32
            je .L_42b80a

            jbe .L_42b6ef

            cmp EDX,254
            je .L_42b840

            cmp EDX,255
            jne .L_42b440

            lea EDX,DWORD PTR [R12-65520]
            xor R13D,R13D
            cmp EDX,8
            setbe R13B
            jmp .L_42afa0
.L_42b4fb:

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_42b865

            jbe .L_42b63f

            cmp EDX,32
            je .L_42b7b8

            jbe .L_42b6d1

            cmp EDX,254
            je .L_42b7e8

            cmp EDX,255
            jne .L_42b3df

            lea EDX,DWORD PTR [RBP-65520]
            xor R13D,R13D
            cmp EDX,8
            setbe R13B
            jmp .L_42b1a1
.L_42b54b:

            mov EAX,65024
            jmp .L_42ad95
.L_42b555:

            mov EAX,65024
            jmp .L_42ae14
          .byte 0x90
.L_42b560:

            or R12D,544
            jmp .L_42abf0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b570:

            lea EDX,DWORD PTR [RBP-113824]
            cmp EDX,3
            jbe .L_42b698

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_42abb8
.L_42b593:

            sub EBP,6155
            cmp EBP,2
            ja .L_42ba66

            or R12D,96
            jmp .L_42abf0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b5b0:

            or R12D,544
            jmp .L_42ad10
.L_42b5bc:

            mov ESI,4154
            jmp .L_42ad74
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b5d0:

            lea EDX,DWORD PTR [RBP-113824]
            cmp EDX,3
            jbe .L_42b6a6

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_42acd8
.L_42b5f3:

            sub EBP,6155
            cmp EBP,2
            ja .L_42ba54

            or R12D,96
            jmp .L_42ad10
.L_42b60b:

            mov ESI,4154
            jmp .L_42adf3
.L_42b615:

            cmp EDX,3
            je .L_42b770

            cmp EDX,6
            je .L_42b760

            test EDX,EDX
            jne .L_42b32f

            xor EDX,EDX
            cmp EBP,173
            sete DL
            jmp .L_42b0b2
.L_42b63f:

            cmp EDX,3
            je .L_42b7a6

            cmp EDX,6
            je .L_42b794

            test EDX,EDX
            jne .L_42b3df

            xor R13D,R13D
            cmp EBP,173
            sete R13B
            jmp .L_42b1a1
.L_42b66b:

            cmp EDX,3
            je .L_42b8a4

            cmp EDX,6
            je .L_42b891

            test EDX,EDX
            jne .L_42b440

            xor R13D,R13D
            cmp R12D,173
            sete R13B
            jmp .L_42afa0
.L_42b698:

            or EAX,3
            mov DWORD PTR [RBX+132],EAX
            jmp .L_42abd5
.L_42b6a6:

            or EAX,3
            mov DWORD PTR [RBX+132],EAX
            jmp .L_42acf5
.L_42b6b4:

            cmp EDX,24
            jne .L_42b32f

            lea EDX,DWORD PTR [RBP-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42b0b2
.L_42b6d1:

            cmp EDX,24
            jne .L_42b3df

            lea EDX,DWORD PTR [RBP-6155]
            xor R13D,R13D
            cmp EDX,3
            setbe R13B
            jmp .L_42b1a1
.L_42b6ef:

            cmp EDX,24
            jne .L_42b440

            lea EDX,DWORD PTR [R12-6155]
            xor R13D,R13D
            cmp EDX,3
            setbe R13B
            jmp .L_42afa0
.L_42b70f:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe DL
            cmp EBP,65279
            sete CL
            or EDX,ECX
            movzx EDX,DL
            jmp .L_42b0b2
.L_42b72e:

            lea ECX,DWORD PTR [RBP-8203]
            mov EDX,R13D
            cmp ECX,4
            jbe .L_42b0af

            lea ECX,DWORD PTR [RBP-8234]
            cmp ECX,4
            jbe .L_42b0af

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe DL
            jmp .L_42b0af
.L_42b760:

            xor EDX,EDX
            cmp EBP,1564
            sete DL
            jmp .L_42b0b2
.L_42b770:

            xor EDX,EDX
            cmp EBP,847
            sete DL
            jmp .L_42b0b2
.L_42b780:

            lea EDX,DWORD PTR [RBP-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42b0b2
.L_42b794:

            xor R13D,R13D
            cmp EBP,1564
            sete R13B
            jmp .L_42b1a1
.L_42b7a6:

            xor R13D,R13D
            cmp EBP,847
            sete R13B
            jmp .L_42b1a1
.L_42b7b8:

            lea EDX,DWORD PTR [RBP-8203]
            cmp EDX,4
            jbe .L_42b19d

            lea EDX,DWORD PTR [RBP-8234]
            cmp EDX,4
            jbe .L_42b19d

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe R13B
            jmp .L_42b19d
.L_42b7e8:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe R13B
            cmp EBP,65279
            sete DL
            or R13D,EDX
            movzx R13D,R13B
            jmp .L_42b1a1
.L_42b80a:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_42af9c

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_42af9c

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe R13B
            jmp .L_42af9c
.L_42b840:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe R13B
            cmp R12D,65279
            sete DL
            or R13D,EDX
            movzx R13D,R13B
            jmp .L_42afa0
.L_42b865:

            lea EDX,DWORD PTR [RBP-6068]
            xor R13D,R13D
            cmp EDX,1
            setbe R13B
            jmp .L_42b1a1
.L_42b87a:

            lea EDX,DWORD PTR [R12-6068]
            xor R13D,R13D
            cmp EDX,1
            setbe R13B
            jmp .L_42afa0
.L_42b891:

            xor R13D,R13D
            cmp R12D,1564
            sete R13B
            jmp .L_42afa0
.L_42b8a4:

            xor R13D,R13D
            cmp R12D,847
            sete R13B
            jmp .L_42afa0
.L_42b8b7:

            mov ESI,4154
.L_42b8bc:

            mov RDX,QWORD PTR [R12+192]
            mov RDI,R12
            call QWORD PTR [R12+128]

            lea RDX,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_42b376
.L_42b8e1:

            mov ESI,4154
.L_42b8e6:

            mov RDX,QWORD PTR [R12+192]
            mov RDI,R12
            call QWORD PTR [R12+128]

            lea RDX,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_42b426
.L_42b90b:

            mov ESI,4154
.L_42b910:

            mov DWORD PTR [RSP+12],ECX
            mov RDX,QWORD PTR [R14+192]
            mov RDI,R14
            call QWORD PTR [R14+128]

            lea RDX,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            mov ECX,DWORD PTR [RSP+12]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_42b486
.L_42b93b:

            mov EAX,254
            jmp .L_42b376
.L_42b945:

            mov EAX,254
            jmp .L_42b486
.L_42b94f:

            mov R15D,11
            jmp .L_42b0e8
.L_42b95a:

            mov ECX,11
            jmp .L_42afd8
.L_42b964:

            mov R15D,11
            jmp .L_42b1d8
.L_42b96f:

            mov EAX,254
            jmp .L_42b426
.L_42b979:

            call __stack_chk_fail@PLT
.L_42b97e:

            sub EBP,6155
            cmp EBP,2
            ja .L_42ba4b

            or R15D,96
            jmp .L_42b0e8
.L_42b996:

            or R15D,544
            jmp .L_42b1d8
.L_42b9a2:

            lea EDX,DWORD PTR [RBP-113824]
            cmp EDX,3
            jbe .L_42b19d

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe R13B
            jmp .L_42b19d
.L_42b9c3:

            or R15D,544
            jmp .L_42b0e8
.L_42b9cf:

            lea ECX,DWORD PTR [RBP-113824]
            mov EDX,R13D
            cmp ECX,3
            jbe .L_42b0af

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe DL
            jmp .L_42b0af
.L_42b9f2:

            or ECX,544
            jmp .L_42afd8
.L_42b9fd:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_42af9c

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe R13B
            jmp .L_42af9c
.L_42ba22:

            sub EBP,6155
            cmp EBP,2
            ja .L_42ba5d

            or R15D,96
            jmp .L_42b1d8
.L_42ba36:

            sub R12D,6155
            cmp R12D,2
            ja .L_42ba6f

            or ECX,96
            jmp .L_42afd8
.L_42ba4b:

            or R15D,32
            jmp .L_42b0e8
.L_42ba54:

            or R12D,32
            jmp .L_42ad10
.L_42ba5d:

            or R15D,32
            jmp .L_42b1d8
.L_42ba66:

            or R12D,32
            jmp .L_42abf0
.L_42ba6f:

            or ECX,32
            jmp .L_42afd8
.L_42ba77:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ba80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,200
.L_42ba91:

            mov R11D,DWORD PTR [RSI+184]
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+56],RDX
            test R11D,R11D
            je .L_42be55

            mov RAX,RDX
            mov RDX,QWORD PTR [RDI+32]
            lea RCX,QWORD PTR [RIP+.L_42a5e0]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSI+112]
            mov R14,RSI
            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+136],RSI
            mov EBX,DWORD PTR [RDX+56]
            mov BYTE PTR [RSP+16],1
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RDX+64]
            mov DWORD PTR [RSP+44],EBX
            test RAX,RAX
            cmove RAX,RCX
            mov QWORD PTR [RSP+160],RAX
            mov RAX,QWORD PTR [RDX+72]
            lea RDX,QWORD PTR [RIP+.L_42a650]
            test RAX,RAX
            cmove RAX,RDX
            test EBX,EBX
            mov QWORD PTR [RSP+168],RAX
            sete BYTE PTR [RSP+91]
            jne .L_42c640
.L_42bb34:

            mov RDI,R14
            call .L_4029e0

            mov EAX,DWORD PTR [R14+184]
            mov DWORD PTR [R14+180],0
            xor ECX,ECX
            mov DWORD PTR [RSP+8],EAX
            lea RAX,QWORD PTR [RSP+116]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+32],RAX
.L_42bb68:

            mov EAX,DWORD PTR [RSP+8]
            cmp EAX,ECX
            jbe .L_42bd92

            nop
            nop
            nop
            nop
.L_42bb78:

            cmp BYTE PTR [R14+176],0
            jne .L_42bd92

            lea R15D,DWORD PTR [RCX+1]
            cmp EAX,R15D
            jbe .L_42bbd8

            mov RDX,QWORD PTR [R14+200]
            mov EAX,R15D
            mov ESI,7168
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [RDX+RAX*4+16]
            bt ESI,EAX
            jae .L_42bbd8

            lea EAX,DWORD PTR [RCX+2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4+16]
            mov EDX,7168
.L_42bbbd:

            add R15D,1
            cmp DWORD PTR [RSP+8],R15D
            jbe .L_42bbd8

            movzx ESI,WORD PTR [RAX]
            add RAX,20
            bt EDX,ESI
            jb .L_42bbbd

            nop
            nop
            nop
            nop
.L_42bbd8:

            mov RBX,QWORD PTR [RSP+136]
            mov EAX,DWORD PTR [RBX+180]
            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,R15D
            je .L_42be80

            cmp EAX,R15D
            jae .L_42bb68

            cmp BYTE PTR [RBX+176],0
            jne .L_42ccc8

            mov RSI,QWORD PTR [RBX+200]
            mov ECX,EAX
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov ECX,DWORD PTR [RSI+RCX*4]
            lea EDI,DWORD PTR [RCX-65024]
            cmp EDI,15
            jbe .L_42bc68

            sub ECX,917760
            cmp ECX,239
            jbe .L_42bc68

            lea RCX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RSI+RCX*4]
            mov ECX,EAX
            not ECX
            add ECX,R15D
            add RDX,RCX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
.L_42bc4b:

            cmp RDX,RDI
            je .L_42ccc8

            mov ECX,DWORD PTR [RDI]
            lea ESI,DWORD PTR [RCX-65024]
            cmp ESI,15
            ja .L_42ebb3

            nop
            nop
            nop
.L_42bc68:

            mov R12,QWORD PTR [RSP+144]
            lea EBP,DWORD PTR [R15-1]
.L_42bc74:

            cmp EAX,EBP
            jae .L_42bd17
.L_42bc7c:

            cmp BYTE PTR [RBX+176],0
            jne .L_42bd17

            lea ECX,DWORD PTR [RAX+1]
            mov RDX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov ECX,DWORD PTR [RDX+RCX*4]
            lea RDI,QWORD PTR [RAX+12]
            mov EDX,DWORD PTR [RAX]
            lea ESI,DWORD PTR [RCX-65024]
            cmp ESI,15
            jbe .L_42c480

            lea ESI,DWORD PTR [RCX-917760]
            cmp ESI,239
            jbe .L_42c480

            mov DWORD PTR [RAX+12],0
            mov RAX,QWORD PTR [R12+152]
            mov RCX,RDI
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            cmp BYTE PTR [RBX+177],0
            jne .L_42c600

            mov EAX,DWORD PTR [RBX+180]
.L_42bd06:

            add EAX,1
            cmp EAX,EBP
            mov DWORD PTR [RBX+180],EAX
            jb .L_42bc7c
.L_42bd17:

            cmp EAX,R15D
            jae .L_42bd7f

            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            mov RDI,R12
            lea RCX,QWORD PTR [RAX+RDX*4]
            mov DWORD PTR [RCX+12],0
            mov RAX,QWORD PTR [R12+152]
            add RCX,12
            mov EDX,DWORD PTR [RCX-12]
            mov RSI,QWORD PTR [R12+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            cmp BYTE PTR [RBX+177],0
            jne .L_42c404

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd70:

            mov EAX,DWORD PTR [RBX+180]
.L_42bd76:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_42bd7f:

            mov ECX,DWORD PTR [R14+180]
.L_42bd86:

            mov EAX,DWORD PTR [RSP+8]
            cmp EAX,ECX
            ja .L_42bb78
.L_42bd92:

            mov RDI,R14
            call .L_402a70

            mov EBP,DWORD PTR [R14+184]
            test EBP,EBP
            je .L_42be4a

            xor ESI,ESI
            mov R12D,7168
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bdb8:

            mov RDX,QWORD PTR [R14+200]
            mov EAX,ESI
            lea EBX,DWORD PTR [RSI+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [RDX+RAX*4+16]
            bt R12D,EAX
            jae .L_42be40

            test AX,65280
            je .L_42be40

            cmp EBP,EBX
            jbe .L_42c5e0

            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [RDX+RAX*4+16]
            bt R12D,EAX
            jae .L_42c5e0

            test AX,65280
            je .L_42c5e0

            lea EAX,DWORD PTR [RSI+2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4+16]
            jmp .L_42be26
          .byte 0x66
          .byte 0x90
.L_42be10:

            movzx ECX,WORD PTR [RAX]
            bt R12D,ECX
            jae .L_42be2d

            add RAX,20
            test CX,65280
            je .L_42be2d

            mov EBX,EDX
.L_42be26:

            lea EDX,DWORD PTR [RBX+1]
            cmp EBP,EDX
            ja .L_42be10
.L_42be2d:

            mov EAX,EDX
            add EBX,2
            sub EAX,ESI
            cmp EAX,10
            jbe .L_42c5e5

            nop
            nop
            nop
.L_42be40:

            cmp EBP,EBX
            mov ESI,EBX
            ja .L_42bdb8
.L_42be4a:

            cmp DWORD PTR [RSP+44],1
            ja .L_42c650
.L_42be55:

            mov RAX,QWORD PTR [RSP+184]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ebae

            add RSP,200
.L_42be73:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42be80:

            mov R10,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [RSP+16],0
            mov R13,QWORD PTR [RSP+144]
            lea RAX,QWORD PTR [R10+RAX*4]
            mov R12D,DWORD PTR [RAX]
            je .L_42cbf0

            mov DWORD PTR [RSP+108],0
            mov RAX,QWORD PTR [R13+152]
            lea RCX,QWORD PTR [RSP+108]
            mov RSI,QWORD PTR [R13+160]
            mov EDX,R12D
            mov RDI,R13
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_42c3db

            mov RBP,QWORD PTR [RSP+136]
            mov R13,QWORD PTR [RSP+144]
.L_42beeb:

            lea RAX,QWORD PTR [RSP+128]
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+32]
            mov ESI,R12D
            mov QWORD PTR [RSP+48],RAX
            mov RDI,RAX
            call QWORD PTR [RSP+160]

            test AL,AL
            mov R15D,EAX
            je .L_42c330

            mov EDX,DWORD PTR [RSP+116]
            mov RCX,QWORD PTR [R13+152]
            mov RSI,QWORD PTR [R13+160]
            test EDX,EDX
            mov RAX,QWORD PTR [RCX+360]
            mov R8,QWORD PTR [RCX+136]
            je .L_42bf74

            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov RDI,R13
            call RAX

            test EAX,EAX
            je .L_42c330

            mov RDX,QWORD PTR [R13+152]
            mov RSI,QWORD PTR [R13+160]
            mov RAX,QWORD PTR [RDX+360]
            mov R8,QWORD PTR [RDX+136]
.L_42bf74:

            lea RCX,QWORD PTR [RSP+120]
            mov DWORD PTR [RSP+120],0
            mov EDX,DWORD PTR [RSP+112]
            mov RDI,R13
            call RAX

            test EAX,EAX
            mov ECX,EAX
            je .L_42c200

            cmp BYTE PTR [RSP+16],0
            je .L_42c200

            mov EAX,DWORD PTR [RBP+180]
            mov R9,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+120]
            mov ESI,DWORD PTR [RSP+112]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBP+188]
            mov R15,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_42bfe3

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R15,QWORD PTR [R15+RAX*4]
.L_42bfe3:

            mov RCX,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [R15]
            mov RDX,QWORD PTR [RCX+208]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RCX
            mov ESI,R12D
            call QWORD PTR [RCX+144]

            cmp R12D,127
            mov R13D,EAX
            mov RCX,QWORD PTR [RSP+48]
            jbe .L_42c0b8

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            jne .L_42c7c0

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_42d647

            jbe .L_42d840

            cmp EDX,32
            je .L_42d65d

            jbe .L_42dd2b

            cmp EDX,254
            je .L_42dda6

            cmp EDX,255
            jne .L_42d860

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
.L_42c080:

            test EDX,EDX
            je .L_42d860
.L_42c088:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_42e4d3
.L_42c09e:

            cmp R12D,8205
            jne .L_42dfd1

            or R13D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c0b8:

            mov ESI,DWORD PTR [RSP+116]
            mov WORD PTR [R15+16],R13W
            test ESI,ESI
            je .L_42c1ed

            mov EAX,DWORD PTR [RBP+180]
            mov R8,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBP+188]
            mov R15,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_42c109

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R15,QWORD PTR [R15+RAX*4]
.L_42c109:

            mov RCX,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [R15]
            mov RDX,QWORD PTR [RCX+208]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RCX
            mov ESI,R12D
            call QWORD PTR [RCX+144]

            cmp R12D,127
            mov R13D,EAX
            mov RCX,QWORD PTR [RSP+48]
            jbe .L_42c1e8

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            jne .L_42c7f0

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_42de0e

            jbe .L_42d8e0

            cmp EDX,32
            je .L_42d695

            jbe .L_42dd4a

            cmp EDX,254
            je .L_42ddeb

            cmp EDX,255
            jne .L_42d900

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c1b0:

            test EDX,EDX
            je .L_42d900
.L_42c1b8:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_42e58a
.L_42c1ce:

            cmp R12D,8205
            jne .L_42dff5

            or R13D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c1e8:

            mov WORD PTR [R15+16],R13W
.L_42c1ed:

            add DWORD PTR [RBX+180],1
            mov ECX,DWORD PTR [R14+180]
            jmp .L_42bd86
.L_42c200:

            movzx ESI,BYTE PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+64],ECX
            call .L_42a9c0

            test EAX,EAX
            mov R13D,EAX
            mov ECX,DWORD PTR [RSP+64]
            je .L_42d318

            mov ESI,DWORD PTR [RSP+116]
            test ESI,ESI
            je .L_42c1ed

            mov EAX,DWORD PTR [RBP+180]
            mov RDI,QWORD PTR [RBP+200]
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov RDI,RBP
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBP+188]
            mov R10,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_42c26e

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [R10+RAX*4]
.L_42c26e:

            mov R9,QWORD PTR [RBP+112]
            mov ECX,DWORD PTR [R10]
            mov QWORD PTR [RSP+72],R10
            mov RDX,QWORD PTR [R9+208]
            mov ESI,ECX
            mov DWORD PTR [RSP+64],ECX
            mov RDI,R9
            mov QWORD PTR [RSP+48],R9
            call QWORD PTR [R9+144]

            mov ECX,DWORD PTR [RSP+64]
            mov R8D,EAX
            mov R9,QWORD PTR [RSP+48]
            mov R10,QWORD PTR [RSP+72]
            cmp ECX,127
            jbe .L_42c321

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,ECX
            shr EDX,16
            test EDX,EDX
            je .L_42e289

            cmp EDX,1
            je .L_42eafc

            cmp EDX,14
            jne .L_42e2d5

            lea EDX,DWORD PTR [RCX-917504]
            cmp EDX,4095
            setbe R15B
.L_42c2ec:

            movzx R15D,R15B
.L_42c2f0:

            test R15D,R15D
            je .L_42e2d5
.L_42c2f9:

            or EAX,3
            cmp ECX,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_42ead6

            cmp ECX,8205
            jne .L_42eab2

            or R8D,288
.L_42c321:

            cmp R13D,-1
            mov WORD PTR [R10+16],R8W
            jne .L_42c1ed
.L_42c330:

            cmp BYTE PTR [RSP+16],0
            jne .L_42c36e

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+108],0
            lea RCX,QWORD PTR [RSP+108]
            mov EDX,R12D
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_42c3db
.L_42c36e:

            mov EAX,DWORD PTR [RBX+180]
            mov R13,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R13+RAX*4]
            movzx EAX,WORD PTR [RAX+16]
            and EAX,31
            cmp AX,29
            je .L_42cad0
.L_42c395:

            cmp R12D,8209
            jne .L_42c3db

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov EDX,8208
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_42cc00
.L_42c3db:

            mov EAX,DWORD PTR [RBX+180]
            mov R10,QWORD PTR [RBX+200]
            mov EDX,DWORD PTR [RSP+108]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [RBX+177],0
            je .L_42bd70
.L_42c404:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_42ca80
.L_42c418:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_42bd7f

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R12,QWORD PTR [RBX+200]
            mov RBP,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_42ca94
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c480:

            mov DWORD PTR [RAX+12],0
            mov RAX,QWORD PTR [R12+152]
            mov R8,RDI
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            mov R9,QWORD PTR [RAX+144]
            call QWORD PTR [RAX+368]

            test EAX,EAX
            jne .L_42e609

            mov EAX,DWORD PTR [RBX+180]
            mov RDI,R12
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
            mov DWORD PTR [RAX+12],0
            mov R9,QWORD PTR [R12+152]
            lea RCX,QWORD PTR [RAX+12]
            mov EDX,DWORD PTR [RAX]
            mov RSI,QWORD PTR [R12+160]
            mov R8,QWORD PTR [R9+136]
            call QWORD PTR [R9+360]

            cmp BYTE PTR [RBX+177],0
            jne .L_42d549

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
.L_42c50f:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_42c518:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RDI,R12
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov DWORD PTR [RAX+12],0
            mov R9,QWORD PTR [R12+152]
            lea RCX,QWORD PTR [RAX+12]
            mov EDX,DWORD PTR [RAX]
            mov RSI,QWORD PTR [R12+160]
            mov R8,QWORD PTR [R9+136]
            call QWORD PTR [R9+360]

            cmp BYTE PTR [RBX+177],0
            je .L_42dbd8
.L_42c55b:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_42e430
.L_42c56f:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_42e00f

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_42c5cc:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_42dbde
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c5e0:

            mov EDX,EBX
            lea EBX,DWORD PTR [RSI+2]
.L_42c5e5:

            lea RCX,QWORD PTR [RIP+.L_42a610]
            mov RDI,R14
            call .L_405530

            jmp .L_42be40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c600:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_42c820
.L_42c614:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            jne .L_42d6cd

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_42bc74
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c640:

            and EBX,4294967293
            cmp EBX,1
            setne BYTE PTR [RSP+16]
            jmp .L_42bb34
.L_42c650:

            mov RDI,R14
            call .L_4029e0

            cmp BYTE PTR [R14+177],0
            mov R13D,DWORD PTR [R14+184]
            jne .L_42d2d8

            mov EAX,DWORD PTR [R14+180]
.L_42c674:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_42c67e:

            lea RDI,QWORD PTR [RSP+128]
            xor EBX,EBX
            lea R15,QWORD PTR [RSP+120]
            mov EBP,EBX
            mov QWORD PTR [RSP+8],RDI
            lea RDI,QWORD PTR [RSP+124]
            mov QWORD PTR [RSP+16],RDI
.L_42c69e:

            cmp R13D,EAX
            jbe .L_42c7ac
.L_42c6a7:

            cmp BYTE PTR [R14+176],0
            jne .L_42c7ac

            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+200]
            mov ECX,7168
            lea RAX,QWORD PTR [RAX+RDX*4]
            mov RDX,QWORD PTR [R14+208]
            movzx EBX,WORD PTR [RAX+16]
            bt ECX,EBX
            jae .L_42c752

            mov ESI,DWORD PTR [R14+188]
            lea ECX,DWORD PTR [RSI-1]
            cmp ECX,EBP
            jne .L_42c9a0
.L_42c6eb:

            mov ECX,EBP
            mov RDI,QWORD PTR [RSP+8]
            lea R12,QWORD PTR [RCX+RCX*4]
            mov RCX,R15
            mov ESI,DWORD PTR [RDX+R12*4]
            mov EDX,DWORD PTR [RAX]
            lea RBX,QWORD PTR [R12*4]
            call QWORD PTR [RSP+168]

            test AL,AL
            je .L_42c74b

            mov RDI,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+124],0
            mov RCX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_42c890
.L_42c74b:

            mov RDX,QWORD PTR [R14+208]
.L_42c752:

            cmp BYTE PTR [R14+177],0
            jne .L_42c848

            mov ECX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
.L_42c76e:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_42c778:

            test ECX,ECX
            je .L_42c787

            lea ESI,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RDX,QWORD PTR [RDX+RSI*4]
.L_42c787:

            movzx EDX,WORD PTR [RDX+16]
            mov ESI,7168
            bt ESI,EDX
            jae .L_42c7a0

            test DX,65280
            jne .L_42c69e
.L_42c7a0:

            cmp R13D,EAX
            lea EBP,DWORD PTR [RCX-1]
            ja .L_42c6a7
.L_42c7ac:

            mov RDI,R14
            call .L_402a70

            jmp .L_42be55
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c7c0:

            cmp EDX,1
            je .L_42de46

            cmp EDX,14
            jne .L_42d860

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_42c080
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c7f0:

            cmp EDX,1
            je .L_42de6d

            cmp EDX,14
            jne .L_42d900

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_42c1b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c820:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_42c614

            mov EAX,EDX
.L_42c834:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_42bd06
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c848:

            cmp QWORD PTR [R14+200],RDX
            je .L_42caa8
.L_42c855:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_402560

            test AL,AL
            jne .L_42d5cf

            mov EAX,DWORD PTR [R14+180]
            mov ECX,DWORD PTR [R14+188]
            mov RDX,QWORD PTR [R14+208]
            jmp .L_42c778
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c890:

            cmp BYTE PTR [R14+177],0
            jne .L_42cc30

            mov EAX,DWORD PTR [R14+180]
.L_42c8a5:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_42c8af:

            cmp BYTE PTR [R14+176],0
            jne .L_42be55

            mov EDX,DWORD PTR [R14+188]
            mov ESI,EBP
            mov RDI,R14
            call .L_4031b0

            mov RAX,QWORD PTR [R14+208]
            mov EDX,DWORD PTR [RSP+120]
            sub DWORD PTR [R14+188],1
            mov DWORD PTR [RAX+R12*4],EDX
            mov EDX,DWORD PTR [RSP+124]
            mov RAX,QWORD PTR [R14+208]
            mov DWORD PTR [RAX+RBX*1+12],EDX
            add RBX,QWORD PTR [R14+208]
            mov R8,QWORD PTR [R14+112]
            mov R12D,DWORD PTR [RBX]
            mov RDX,QWORD PTR [R8+208]
            mov RDI,R8
            mov QWORD PTR [RSP+24],R8
            mov ESI,R12D
            call QWORD PTR [R8+144]

            cmp R12D,127
            mov ECX,EAX
            mov R8,QWORD PTR [RSP+24]
            jbe .L_42ca68

            mov EAX,DWORD PTR [R14+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [R14+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            jne .L_42c9d8

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_42e377

            jbe .L_42d51e

            cmp EDX,32
            je .L_42e3b0

            jbe .L_42e02c

            cmp EDX,254
            je .L_42dee7

            cmp EDX,255
            jne .L_42c9ea

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_42deb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c9a0:

            test ESI,ESI
            mov RDI,RDX
            je .L_42c9af

            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RDI,QWORD PTR [RDX+RCX*4]
.L_42c9af:

            movzx ECX,WORD PTR [RDI+16]
            mov ESI,7168
            movzx EBX,BH
            shr ESI,CL
            movzx ECX,CH
            and ESI,1
            cmovne ESI,ECX
            cmp EBX,ESI
            jbe .L_42c752

            jmp .L_42c6eb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c9d8:

            cmp EDX,1
            je .L_42e6e8

            cmp EDX,14
            je .L_42de94
.L_42c9ea:

            mov EAX,16782336
            bt EAX,ECX
            jae .L_42ca68

            mov ESI,DWORD PTR [RBX]
            cmp ESI,4151
            je .L_42e70f

            cmp ESI,4038
            je .L_42e5d4

            cmp ESI,6752
            je .L_42e5d4

            cmp ESI,3897
            mov EAX,32512
            je .L_42ca50
.L_42ca27:

            mov DWORD PTR [RSP+24],ECX
            mov RDI,R8
            mov RDX,QWORD PTR [R8+192]
            call QWORD PTR [R8+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            mov ECX,DWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_42ca50:

            sub R12D,127995
            or EAX,ECX
            mov ECX,11
            cmp R12D,4
            cmova ECX,EAX
            nop
            nop
            nop
.L_42ca68:

            mov WORD PTR [RBX+16],CX
            mov EAX,DWORD PTR [R14+180]
            jmp .L_42c69e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ca80:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_42c418

            mov EAX,EDX
.L_42ca94:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_42bd76
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42caa8:

            mov ECX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],ECX
            jne .L_42c855

            mov EAX,ECX
.L_42cabe:

            add ECX,1
            mov DWORD PTR [R14+188],ECX
            jmp .L_42c76e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42cad0:

            cmp R12D,8197
            je .L_42e426

            jbe .L_42d998

            cmp R12D,8201
            je .L_42df5d

            jbe .L_42dcee

            cmp R12D,8239
            je .L_42e41c

            jbe .L_42e397

            cmp R12D,8287
            je .L_42df67

            cmp R12D,12288
            jne .L_42c395
.L_42cb23:

            mov EBP,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cb30:

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov EDX,32
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_42c395

            mov EAX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
            movzx EDX,WORD PTR [RAX+16]
            mov ECX,EDX
            and ECX,31
            cmp CX,29
            jne .L_42cbb2

            movzx EDX,DL
            shl EBP,8
            or EBP,EDX
            mov WORD PTR [RAX+16],BP
            mov EAX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
.L_42cbb2:

            mov EDX,DWORD PTR [RSP+124]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [RBX+177],0
            jne .L_42dc6e

            mov EAX,DWORD PTR [RBX+180]
.L_42cbcc:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_42cbd5:

            or DWORD PTR [RBX+132],4
            mov ECX,DWORD PTR [R14+180]
            jmp .L_42bd86
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cbf0:

            mov RBP,RBX
            jmp .L_42beeb
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cc00:

            mov EAX,DWORD PTR [RBX+180]
            mov R11,QWORD PTR [RBX+200]
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R11+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [RBX+177],0
            jne .L_42c404

            jmp .L_42bd70
          .byte 0x66
          .byte 0x90
.L_42cc30:

            mov RAX,QWORD PTR [R14+200]
            cmp QWORD PTR [R14+208],RAX
            jne .L_42cc54

            mov EDX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],EDX
            je .L_42e370
.L_42cc54:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_402560

            test AL,AL
            je .L_42c8af

            mov EAX,DWORD PTR [R14+188]
            mov RDX,QWORD PTR [R14+208]
            mov RCX,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [R14+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
.L_42ccb5:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
            jmp .L_42c8a5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ccc8:

            movzx EAX,BYTE PTR [RSP+91]
            mov QWORD PTR [RSP+80],R14
            mov DWORD PTR [RSP+92],EAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+48],RAX
            nop
            nop
            nop
            nop
            nop
.L_42cce8:

            cmp BYTE PTR [RBX+176],0
            jne .L_42d030

            mov R14,QWORD PTR [RSP+136]
            mov R11D,DWORD PTR [RSP+44]
            mov R13,QWORD PTR [RSP+144]
            mov EAX,DWORD PTR [R14+180]
            mov R10,QWORD PTR [R14+200]
            test R11D,R11D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            mov R12D,DWORD PTR [RAX]
            jne .L_42dbd0

            mov DWORD PTR [RSP+108],0
            mov RAX,QWORD PTR [R13+152]
            lea RCX,QWORD PTR [RSP+108]
            mov RSI,QWORD PTR [R13+160]
            mov EDX,R12D
            mov RDI,R13
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_42cfe0

            mov RBP,QWORD PTR [RSP+136]
            mov R13,QWORD PTR [RSP+144]
.L_42cd72:

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+32]
            mov ESI,R12D
            mov RDI,QWORD PTR [RSP+48]
            call QWORD PTR [RSP+160]

            test AL,AL
            je .L_42cf38

            mov EDX,DWORD PTR [RSP+116]
            mov RAX,QWORD PTR [R13+152]
            mov RSI,QWORD PTR [R13+160]
            test EDX,EDX
            mov R11,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            je .L_42cdee

            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov RDI,R13
            call R11

            test EAX,EAX
            je .L_42cf38

            mov RAX,QWORD PTR [R13+152]
            mov RSI,QWORD PTR [R13+160]
            mov R11,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
.L_42cdee:

            lea RCX,QWORD PTR [RSP+120]
            mov DWORD PTR [RSP+120],0
            mov EDX,DWORD PTR [RSP+112]
            mov RDI,R13
            call R11

            test EAX,EAX
            mov ECX,EAX
            je .L_42cee8

            cmp BYTE PTR [RSP+91],0
            je .L_42cee8

            mov EAX,DWORD PTR [RBP+180]
            mov R9,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+120]
            mov ESI,DWORD PTR [RSP+112]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBP+188]
            mov R8,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_42ce5e

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R8+RAX*4]
.L_42ce5e:

            mov R10,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [R8]
            mov QWORD PTR [RSP+72],R8
            mov RDX,QWORD PTR [R10+208]
            mov RDI,R10
            mov QWORD PTR [RSP+64],R10
            mov ESI,R12D
            call QWORD PTR [R10+144]

            cmp R12D,127
            mov ECX,EAX
            mov R10,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RSP+72]
            jbe .L_42d148

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            je .L_42d9e6

            cmp EDX,1
            je .L_42e78c

            cmp EDX,14
            jne .L_42d720

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_42d110
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cee8:

            mov EDX,DWORD PTR [RSP+112]
            mov ESI,DWORD PTR [RSP+92]
            mov RDI,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+64],ECX
            call .L_42a9c0

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+64]
            je .L_42d21b

            mov ESI,DWORD PTR [RSP+116]
            test ESI,ESI
            je .L_42d250

            mov EDX,DWORD PTR [RSP+124]
            mov RDI,RBP
            mov DWORD PTR [RSP+64],EAX
            call .L_42a690

            mov EAX,DWORD PTR [RSP+64]
            cmp EAX,-1
            jne .L_42d250

            nop
            nop
            nop
            nop
            nop
.L_42cf38:

            mov EDI,DWORD PTR [RSP+44]
            test EDI,EDI
            je .L_42cf77

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+108],0
            lea RCX,QWORD PTR [RSP+108]
            mov EDX,R12D
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_42cfe0
.L_42cf77:

            mov EAX,DWORD PTR [R14+180]
            mov RSI,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movzx EAX,WORD PTR [RAX+16]
            and EAX,31
            cmp AX,29
            je .L_42dab8
.L_42cf9e:

            cmp R12D,8209
            jne .L_42cfe0

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov EDX,8208
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_42d041
.L_42cfe0:

            mov EAX,DWORD PTR [R14+180]
            mov RBP,QWORD PTR [R14+200]
            mov EDX,DWORD PTR [RSP+108]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [R14+177],0
            jne .L_42d070
.L_42d008:

            mov EAX,DWORD PTR [R14+180]
.L_42d00f:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_42d019:

            cmp DWORD PTR [RBX+180],R15D
            jb .L_42cce8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d030:

            mov R14,QWORD PTR [RSP+80]
            mov ECX,DWORD PTR [R14+180]
            jmp .L_42bd86
.L_42d041:

            mov EAX,DWORD PTR [R14+180]
            mov R12,QWORD PTR [R14+200]
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [R14+177],0
            je .L_42d008

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d070:

            mov RAX,QWORD PTR [R14+200]
            cmp QWORD PTR [R14+208],RAX
            je .L_42da90
.L_42d084:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_402560

            test AL,AL
            je .L_42d019

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov R11,QWORD PTR [R14+200]
            mov R10,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R11+RDX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
            jmp .L_42daa6
.L_42d0ea:

            cmp EDX,3
            je .L_42dfaf

            cmp EDX,6
            je .L_42e4df

            test EDX,EDX
            jne .L_42d720

            xor EDX,EDX
            cmp R12D,173
            sete DL
.L_42d110:

            test EDX,EDX
            je .L_42d720
.L_42d118:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_42e7b3
.L_42d12e:

            cmp R12D,8205
            jne .L_42e742

            or ECX,288
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d148:

            mov ESI,DWORD PTR [RSP+116]
            mov WORD PTR [R8+16],CX
            test ESI,ESI
            je .L_42d250

            mov EAX,DWORD PTR [RBP+180]
            mov R8,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBP+188]
            mov R8,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_42d199

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R8+RAX*4]
.L_42d199:

            mov R10,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [R8]
            mov QWORD PTR [RSP+72],R8
            mov RDX,QWORD PTR [R10+208]
            mov RDI,R10
            mov QWORD PTR [RSP+64],R10
            mov ESI,R12D
            call QWORD PTR [R10+144]

            cmp R12D,127
            mov ECX,EAX
            mov R10,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RSP+72]
            jbe .L_42d2c0

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            je .L_42da38

            cmp EDX,1
            je .L_42e7d3

            cmp EDX,14
            jne .L_42d7b0

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_42d288
.L_42d21b:

            test ECX,ECX
            je .L_42cf38

            mov ESI,DWORD PTR [RSP+112]
            mov EDX,DWORD PTR [RSP+120]
            mov RDI,RBP
            call .L_42a690

            mov ESI,DWORD PTR [RSP+116]
            test ESI,ESI
            je .L_42d250

            mov EDX,DWORD PTR [RSP+124]
            mov RDI,RBP
            call .L_42a690

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d250:

            add DWORD PTR [R14+180],1
            jmp .L_42d019
.L_42d25d:

            cmp EDX,3
            je .L_42dfc0

            cmp EDX,6
            je .L_42e596

            test EDX,EDX
            jne .L_42d7b0

            xor EDX,EDX
            cmp R12D,173
            sete DL
            nop
            nop
            nop
            nop
            nop
.L_42d288:

            test EDX,EDX
            je .L_42d7b0
.L_42d290:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_42e7c8
.L_42d2a6:

            cmp R12D,8205
            jne .L_42e804

            or ECX,288
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d2c0:

            mov WORD PTR [R8+16],CX
            add DWORD PTR [R14+180],1
            jmp .L_42d019
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d2d8:

            mov RAX,QWORD PTR [R14+200]
            cmp QWORD PTR [R14+208],RAX
            je .L_42d622
.L_42d2ec:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_402560

            test AL,AL
            jne .L_42e4f0

            mov EAX,DWORD PTR [R14+180]
            jmp .L_42c67e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d318:

            test ECX,ECX
            je .L_42c330

            mov EAX,DWORD PTR [RBP+180]
            mov RCX,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+120]
            mov ESI,DWORD PTR [RSP+112]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBP+188]
            mov RCX,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_42d364

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [RCX+RAX*4]
.L_42d364:

            mov R8,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [RCX]
            mov QWORD PTR [RSP+64],RCX
            mov RDX,QWORD PTR [R8+208]
            mov RDI,R8
            mov QWORD PTR [RSP+48],R8
            mov ESI,R12D
            call QWORD PTR [R8+144]

            cmp R12D,127
            mov R13D,EAX
            mov R8,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+64]
            jbe .L_42d412

            mov EDX,DWORD PTR [RBP+132]
            mov EAX,EDX
            or EAX,1
            mov DWORD PTR [RBP+132],EAX
            mov EAX,R12D
            shr EAX,16
            test EAX,EAX
            je .L_42e0d4

            cmp EAX,1
            je .L_42ea7f

            cmp EAX,14
            jne .L_42e04b

            lea EAX,DWORD PTR [R12-917504]
            cmp EAX,4095
            setbe AL
.L_42d3dd:

            movzx EAX,AL
.L_42d3e0:

            test EAX,EAX
            je .L_42e04b
.L_42d3e8:

            or EDX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EDX
            je .L_42eaa6

            cmp R12D,8205
            jne .L_42eae2

            or R13D,288
.L_42d412:

            mov ESI,DWORD PTR [RSP+116]
            mov WORD PTR [RCX+16],R13W
            test ESI,ESI
            je .L_42c1ed

            mov EAX,DWORD PTR [RBP+180]
            mov RDX,QWORD PTR [RBP+200]
            mov RDI,RBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RSP+124]
            mov DWORD PTR [RAX+12],EDX
            call .L_402c20

            mov EAX,DWORD PTR [RBP+188]
            mov RCX,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_42d463

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [RCX+RAX*4]
.L_42d463:

            mov R8,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [RCX]
            mov QWORD PTR [RSP+64],RCX
            mov RDX,QWORD PTR [R8+208]
            mov RDI,R8
            mov QWORD PTR [RSP+48],R8
            mov ESI,R12D
            call QWORD PTR [R8+144]

            cmp R12D,127
            mov R13D,EAX
            mov R8,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+64]
            jbe .L_42d514

            mov EDX,DWORD PTR [RBP+132]
            mov EAX,EDX
            or EAX,1
            mov DWORD PTR [RBP+132],EAX
            mov EAX,R12D
            shr EAX,16
            test EAX,EAX
            je .L_42e238

            cmp EAX,1
            je .L_42eb54

            cmp EAX,14
            jne .L_42e1a9

            lea EAX,DWORD PTR [R12-917504]
            cmp EAX,4095
            setbe R15B
.L_42d4dd:

            movzx R15D,R15B
.L_42d4e1:

            test R15D,R15D
            je .L_42e1a9
.L_42d4ea:

            or EDX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EDX
            je .L_42eaca

            cmp R12D,8205
            jne .L_42eb34

            or R13D,288
.L_42d514:

            mov WORD PTR [RCX+16],R13W
            jmp .L_42c1ed
.L_42d51e:

            cmp EDX,3
            je .L_42e3e8

            cmp EDX,6
            je .L_42df07

            test EDX,EDX
            jne .L_42c9ea

            xor EDX,EDX
            cmp R12D,173
            sete DL
            jmp .L_42deb0
.L_42d549:

            mov RDX,QWORD PTR [RBX+208]
            cmp RDX,QWORD PTR [RBX+200]
            je .L_42e449
.L_42d55d:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_42e01a

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R9,QWORD PTR [RBX+200]
            mov R8,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R9+RDX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov ECX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
.L_42d5c1:

            add ECX,1
            mov DWORD PTR [RBX+188],ECX
            jmp .L_42c50f
.L_42d5cf:

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov RDI,QWORD PTR [R14+200]
            mov RSI,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov ECX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
            mov RDX,QWORD PTR [R14+208]
            jmp .L_42cabe
.L_42d622:

            mov EDX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],EDX
            jne .L_42d2ec

            mov EAX,EDX
.L_42d638:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
            jmp .L_42c674
.L_42d647:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42c080
.L_42d65d:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_42c088

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_42c088

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_42c080
.L_42d695:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_42c1b8

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_42c1b8

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_42c1b0
.L_42d6cd:

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RCX,QWORD PTR [RBX+200]
            mov R13,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            lea RAX,QWORD PTR [R13+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_42c834
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d720:

            mov EAX,16782336
            bt EAX,ECX
            jae .L_42d148

            mov ESI,DWORD PTR [R8]
            cmp ESI,4151
            je .L_42e7be

            cmp ESI,6752
            je .L_42e69f

            cmp ESI,4038
            je .L_42e69f

            cmp ESI,3897
            mov EAX,32512
            je .L_42d795
.L_42d762:

            mov DWORD PTR [RSP+72],ECX
            mov QWORD PTR [RSP+64],R8
            mov RDI,R10
            mov RDX,QWORD PTR [R10+192]
            call QWORD PTR [R10+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            mov R8,QWORD PTR [RSP+64]
            mov ECX,DWORD PTR [RSP+72]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_42d795:

            sub R12D,127995
            or EAX,ECX
            mov ECX,11
            cmp R12D,4
            cmova ECX,EAX
            jmp .L_42d148
          .byte 0x90
.L_42d7b0:

            mov EAX,16782336
            bt EAX,ECX
            jae .L_42d2c0

            mov ESI,DWORD PTR [R8]
            cmp ESI,4151
            je .L_42e7fa

            cmp ESI,6752
            je .L_42e75b

            cmp ESI,4038
            je .L_42e75b

            cmp ESI,3897
            mov EAX,32512
            je .L_42d825
.L_42d7f2:

            mov DWORD PTR [RSP+72],ECX
            mov QWORD PTR [RSP+64],R8
            mov RDI,R10
            mov RDX,QWORD PTR [R10+192]
            call QWORD PTR [R10+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            mov R8,QWORD PTR [RSP+64]
            mov ECX,DWORD PTR [RSP+72]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_42d825:

            sub R12D,127995
            or EAX,ECX
            mov ECX,11
            cmp R12D,4
            cmova ECX,EAX
            jmp .L_42d2c0
          .byte 0x90
.L_42d840:

            cmp EDX,3
            je .L_42ddda

            cmp EDX,6
            je .L_42ddc9

            test EDX,EDX
            je .L_42d980

            nop
            nop
            nop
            nop
            nop
            nop
.L_42d860:

            mov EAX,16782336
            bt EAX,R13D
            jae .L_42c0b8

            mov ESI,DWORD PTR [R15]
            cmp ESI,4151
            je .L_42dfeb

            cmp ESI,6752
            je .L_42e38d

            cmp ESI,4038
            je .L_42e38d

            cmp ESI,3897
            mov EAX,32512
            je .L_42d8c3
.L_42d8a3:

            mov RDI,RCX
            mov RDX,QWORD PTR [RCX+192]
            call QWORD PTR [RCX+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_42d8c3:

            sub R12D,127995
            or EAX,R13D
            mov R13D,11
            cmp R12D,4
            cmova R13D,EAX
            jmp .L_42c0b8
.L_42d8e0:

            cmp EDX,3
            je .L_42de35

            cmp EDX,6
            je .L_42de24

            test EDX,EDX
            je .L_42d9d5

            nop
            nop
            nop
            nop
            nop
            nop
.L_42d900:

            mov EAX,16782336
            bt EAX,R13D
            jae .L_42c1e8

            mov ESI,DWORD PTR [R15]
            cmp ESI,4151
            je .L_42e5ca

            cmp ESI,4038
            je .L_42e412

            cmp ESI,6752
            je .L_42e412

            cmp ESI,3897
            mov EAX,32512
            je .L_42d963
.L_42d943:

            mov RDI,RCX
            mov RDX,QWORD PTR [RCX+192]
            call QWORD PTR [RCX+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_42d963:

            sub R12D,127995
            or EAX,R13D
            mov R13D,11
            cmp R12D,4
            cmova R13D,EAX
            jmp .L_42c1e8
.L_42d980:

            xor EDX,EDX
            cmp R12D,173
            sete DL
            jmp .L_42c080
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d998:

            cmp R12D,8193
            je .L_42cb23

            ja .L_42dc4c

            cmp R12D,160
            je .L_42d9cb

            cmp R12D,8192
            je .L_42dc64

            cmp R12D,32
            jne .L_42c395
.L_42d9cb:

            mov EBP,18
            jmp .L_42cb30
.L_42d9d5:

            xor EDX,EDX
            cmp R12D,173
            sete DL
            jmp .L_42c1b0
.L_42d9e6:

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_42e4bd

            jbe .L_42d0ea

            cmp EDX,32
            je .L_42e485

            jbe .L_42df71

            cmp EDX,254
            je .L_42e462

            cmp EDX,255
            jne .L_42d720

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_42d110
.L_42da38:

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_42e574

            jbe .L_42d25d

            cmp EDX,32
            je .L_42e53c

            jbe .L_42df90

            cmp EDX,254
            je .L_42e5a7

            cmp EDX,255
            jne .L_42d7b0

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_42d288
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42da90:

            mov EDX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],EDX
            jne .L_42d084

            mov EAX,EDX
.L_42daa6:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
            jmp .L_42d00f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dab8:

            cmp R12D,8197
            je .L_42e6de

            jbe .L_42dd69

            cmp R12D,8201
            je .L_42e6d4

            jbe .L_42df37

            cmp R12D,8239
            je .L_42e6c0

            jbe .L_42e6a9

            cmp R12D,8287
            je .L_42e6ca

            cmp R12D,12288
            jne .L_42cf9e
.L_42db0b:

            mov EBP,1
.L_42db10:

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov EDX,32
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_42cf9e

            mov EAX,DWORD PTR [R14+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
            movzx EDX,WORD PTR [RAX+16]
            mov ECX,EDX
            and ECX,31
            cmp CX,29
            jne .L_42db94

            movzx EDX,DL
            shl EBP,8
            or EBP,EDX
            mov WORD PTR [RAX+16],BP
            mov EAX,DWORD PTR [R14+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
.L_42db94:

            mov EDX,DWORD PTR [RSP+124]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [R14+177],0
            jne .L_42e124

            mov EAX,DWORD PTR [R14+180]
.L_42dbb0:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_42dbba:

            or DWORD PTR [R14+132],4
            jmp .L_42d019
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dbd0:

            mov RBP,R14
            jmp .L_42cd72
.L_42dbd8:

            mov EAX,DWORD PTR [RBX+180]
.L_42dbde:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_42dbe7:

            cmp EAX,R15D
            jae .L_42bc74

            mov EDX,EAX
            lea RCX,QWORD PTR [RDX+RDX*4]
            mov RDX,QWORD PTR [RBX+200]
            lea RCX,QWORD PTR [RDX+RCX*4]
            mov EDX,DWORD PTR [RCX]
            lea ESI,DWORD PTR [RDX-65024]
            cmp ESI,15
            ja .L_42dd14
.L_42dc12:

            mov DWORD PTR [RCX+12],0
            mov RAX,QWORD PTR [R12+152]
            add RCX,12
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            cmp BYTE PTR [RBX+177],0
            jne .L_42c55b

            jmp .L_42dbd8
.L_42dc4c:

            cmp R12D,8195
            je .L_42cb23

            mov EBP,3
            ja .L_42cb30
.L_42dc64:

            mov EBP,2
            jmp .L_42cb30
.L_42dc6e:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_42e3f9
.L_42dc82:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            je .L_42cbd5

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R12,QWORD PTR [RBX+200]
            mov RBP,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_42dce0:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_42cbcc
.L_42dcee:

            cmp R12D,8199
            mov EBP,19
            je .L_42cb30

            cmp R12D,8200
            sbb EBP,EBP
            and EBP,4294967282
            add EBP,20
            jmp .L_42cb30
.L_42dd14:

            lea ESI,DWORD PTR [RDX-917760]
            cmp ESI,239
            ja .L_42bc74

            jmp .L_42dc12
.L_42dd2b:

            cmp EDX,24
            jne .L_42d860

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42c080
.L_42dd4a:

            cmp EDX,24
            jne .L_42d900

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42c1b0
.L_42dd69:

            cmp R12D,8193
            je .L_42db0b

            ja .L_42df15

            cmp R12D,160
            je .L_42dd9c

            cmp R12D,8192
            je .L_42df2d

            cmp R12D,32
            jne .L_42cf9e
.L_42dd9c:

            mov EBP,18
            jmp .L_42db10
.L_42dda6:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_42c080
.L_42ddc9:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_42c080
.L_42ddda:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_42c080
.L_42ddeb:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_42c1b0
.L_42de0e:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42c1b0
.L_42de24:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_42c1b0
.L_42de35:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_42c1b0
.L_42de46:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_42e734

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_42c080
.L_42de6d:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_42e77e

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_42c1b0
.L_42de94:

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42deb0:

            test EDX,EDX
            je .L_42c9ea
.L_42deb8:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [R14+132],EAX
            je .L_42e694
.L_42decf:

            cmp R12D,8205
            jne .L_42e765

            or ECX,288
            jmp .L_42ca68
.L_42dee7:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_42deb0
.L_42df07:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_42deb0
.L_42df15:

            cmp R12D,8195
            je .L_42db0b

            mov EBP,3
            ja .L_42db10
.L_42df2d:

            mov EBP,2
            jmp .L_42db10
.L_42df37:

            cmp R12D,8199
            mov EBP,19
            je .L_42db10

            cmp R12D,8200
            sbb EBP,EBP
            and EBP,4294967282
            add EBP,20
            jmp .L_42db10
.L_42df5d:

            mov EBP,5
            jmp .L_42cb30
.L_42df67:

            mov EBP,17
            jmp .L_42cb30
.L_42df71:

            cmp EDX,24
            jne .L_42d720

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42d110
.L_42df90:

            cmp EDX,24
            jne .L_42d7b0

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42d288
.L_42dfaf:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_42d110
.L_42dfc0:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_42d288
.L_42dfd1:

            sub R12D,6155
            cmp R12D,2
            ja .L_42eb82

            or R13D,96
            jmp .L_42c0b8
.L_42dfeb:

            mov ESI,4154
            jmp .L_42d8a3
.L_42dff5:

            sub R12D,6155
            cmp R12D,2
            ja .L_42eb79

            or R13D,96
            jmp .L_42c1e8
.L_42e00f:

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_42dbe7
.L_42e01a:

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            jmp .L_42c518
.L_42e02c:

            cmp EDX,24
            jne .L_42c9ea

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_42deb0
.L_42e04b:

            mov EAX,16782336
            bt EAX,R13D
            jae .L_42d412

            mov ESI,DWORD PTR [RCX]
            cmp ESI,4151
            je .L_42eb2a

            cmp ESI,4038
            je .L_42eb20

            cmp ESI,6752
            je .L_42eb20

            cmp ESI,3897
            mov EAX,32512
            je .L_42e0b8
.L_42e08d:

            mov QWORD PTR [RSP+48],RCX
            mov RDI,R8
            mov RDX,QWORD PTR [R8+192]
            call QWORD PTR [R8+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            mov RCX,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_42e0b8:

            sub R12D,127995
            or R13D,EAX
            mov EAX,11
            cmp R12D,4
            cmovbe R13D,EAX
            jmp .L_42d412
.L_42e0d4:

            mov EAX,R12D
            shr EAX,8
            cmp EAX,23
            je .L_42e922

            jbe .L_42e5de

            cmp EAX,32
            je .L_42e8ea

            jbe .L_42e8cb

            cmp EAX,254
            je .L_42e9fe

            cmp EAX,255
            jne .L_42e04b

            lea EAX,DWORD PTR [R12-65520]
            cmp EAX,8
            setbe AL
            movzx EAX,AL
            jmp .L_42d3e0
.L_42e124:

            mov RAX,QWORD PTR [R14+200]
            cmp QWORD PTR [R14+208],RAX
            je .L_42e719
.L_42e138:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_402560

            test AL,AL
            je .L_42dbba

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov RCX,QWORD PTR [R14+200]
            mov R13,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            lea RAX,QWORD PTR [R13+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
.L_42e19a:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
            jmp .L_42dbb0
.L_42e1a9:

            mov EAX,16782336
            bt EAX,R13D
            jae .L_42d514

            mov ESI,DWORD PTR [RCX]
            cmp ESI,4151
            je .L_42ea75

            cmp ESI,6752
            je .L_42eb4a

            cmp ESI,4038
            je .L_42eb4a

            cmp ESI,3897
            mov EAX,32512
            je .L_42e216
.L_42e1eb:

            mov QWORD PTR [RSP+48],RCX
            mov RDI,R8
            mov RDX,QWORD PTR [R8+192]
            call QWORD PTR [R8+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            mov RCX,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_42e216:

            sub R12D,127995
            or R13D,EAX
            mov EAX,11
            cmp R12D,4
            cmovbe R13D,EAX
            jmp .L_42d514
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e238:

            mov EAX,R12D
            shr EAX,8
            cmp EAX,23
            je .L_42e947

            jbe .L_42e63b

            cmp EAX,32
            je .L_42e97e

            jbe .L_42e95e

            cmp EAX,254
            je .L_42e9b7

            cmp EAX,255
            jne .L_42e1a9

            lea EAX,DWORD PTR [R12-65520]
            xor R15D,R15D
            cmp EAX,8
            setbe R15B
            jmp .L_42d4e1
.L_42e289:

            mov EDX,ECX
            shr EDX,8
            cmp EDX,23
            je .L_42e83b

            jbe .L_42e668

            cmp EDX,32
            je .L_42e876

            jbe .L_42e81d

            cmp EDX,254
            je .L_42e8a9

            cmp EDX,255
            jne .L_42e2d5

            lea EDX,DWORD PTR [RCX-65520]
            xor R15D,R15D
            cmp EDX,8
            setbe R15B
            jmp .L_42c2f0
.L_42e2d5:

            mov EAX,16782336
            bt EAX,R8D
            jae .L_42c321

            mov ESI,DWORD PTR [R10]
            cmp ESI,4151
            je .L_42ea6b

            cmp ESI,6752
            je .L_42ea61

            cmp ESI,4038
            je .L_42ea61

            cmp ESI,3897
            mov EAX,32512
            je .L_42e355
.L_42e318:

            mov DWORD PTR [RSP+72],R8D
            mov DWORD PTR [RSP+64],ECX
            mov RDI,R9
            mov QWORD PTR [RSP+48],R10
            mov RDX,QWORD PTR [R9+192]
            call QWORD PTR [R9+128]

            lea RDI,QWORD PTR [RIP+.L_40e1a0]
            cdqe 
            mov R10,QWORD PTR [RSP+48]
            mov ECX,DWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+72]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_42e355:

            sub ECX,127995
            or R8D,EAX
            mov EAX,11
            cmp ECX,4
            cmovbe R8D,EAX
            jmp .L_42c321
          .byte 0x90
.L_42e370:

            mov EAX,EDX
            jmp .L_42ccb5
.L_42e377:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42deb0
.L_42e38d:

            mov EAX,65024
            jmp .L_42d8c3
.L_42e397:

            cmp R12D,8202
            mov EBP,16
            je .L_42cb30

            jmp .L_42c395
          .byte 0x66
          .byte 0x90
.L_42e3b0:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_42deb8

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_42deb8

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_42deb0
.L_42e3e8:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_42deb0
.L_42e3f9:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_42dc82

            mov EAX,EDX
            jmp .L_42dce0
.L_42e412:

            mov EAX,65024
            jmp .L_42d963
.L_42e41c:

            mov EBP,21
            jmp .L_42cb30
.L_42e426:

            mov EBP,4
            jmp .L_42cb30
.L_42e430:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_42c56f

            mov EAX,EDX
            jmp .L_42c5cc
.L_42e449:

            mov ECX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],ECX
            jne .L_42d55d

            mov EAX,ECX
            jmp .L_42d5c1
.L_42e462:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_42d110
.L_42e485:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_42d118

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_42d118

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_42d110
.L_42e4bd:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42d110
.L_42e4d3:

            or R13D,544
            jmp .L_42c0b8
.L_42e4df:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_42d110
.L_42e4f0:

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov R9,QWORD PTR [R14+200]
            mov R8,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R9+RDX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
            jmp .L_42d638
.L_42e53c:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_42d290

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_42d290

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_42d288
.L_42e574:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_42d288
.L_42e58a:

            or R13D,544
            jmp .L_42c1e8
.L_42e596:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_42d288
.L_42e5a7:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_42d288
.L_42e5ca:

            mov ESI,4154
            jmp .L_42d943
.L_42e5d4:

            mov EAX,65024
            jmp .L_42ca50
.L_42e5de:

            cmp EAX,3
            je .L_42e9ed

            cmp EAX,6
            je .L_42e9dc

            test EAX,EAX
            jne .L_42e04b

            xor EAX,EAX
            cmp R12D,173
            sete AL
            jmp .L_42d3e0
.L_42e609:

            mov EAX,DWORD PTR [RBX+180]
            mov ESI,2
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RCX,QWORD PTR [RAX+RDX*4]
            mov EDX,1
            call .L_402b00

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_42dbe7
.L_42e63b:

            cmp EAX,3
            je .L_42e863

            cmp EAX,6
            je .L_42e850

            test EAX,EAX
            jne .L_42e1a9

            xor R15D,R15D
            cmp R12D,173
            sete R15B
            jmp .L_42d4e1
.L_42e668:

            cmp EDX,3
            je .L_42ea33

            cmp EDX,6
            je .L_42ea21

            test EDX,EDX
            jne .L_42e2d5

            xor R15D,R15D
            cmp ECX,173
            sete R15B
            jmp .L_42c2f0
.L_42e694:

            or ECX,544
            jmp .L_42ca68
.L_42e69f:

            mov EAX,65024
            jmp .L_42d795
.L_42e6a9:

            cmp R12D,8202
            mov EBP,16
            je .L_42db10

            jmp .L_42cf9e
.L_42e6c0:

            mov EBP,21
            jmp .L_42db10
.L_42e6ca:

            mov EBP,17
            jmp .L_42db10
.L_42e6d4:

            mov EBP,5
            jmp .L_42db10
.L_42e6de:

            mov EBP,4
            jmp .L_42db10
.L_42e6e8:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_42e938

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_42deb0
.L_42e70f:

            mov ESI,4154
            jmp .L_42ca27
.L_42e719:

            mov EDX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],EDX
            jne .L_42e138

            mov EAX,EDX
            jmp .L_42e19a
.L_42e734:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_42c09e
.L_42e742:

            sub R12D,6155
            cmp R12D,2
            ja .L_42ebd6

            or ECX,96
            jmp .L_42d148
.L_42e75b:

            mov EAX,65024
            jmp .L_42d825
.L_42e765:

            sub R12D,6155
            cmp R12D,2
            ja .L_42eb9d

            or ECX,96
            jmp .L_42ca68
.L_42e77e:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_42c1ce
.L_42e78c:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_42ea45

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_42d110
.L_42e7b3:

            or ECX,544
            jmp .L_42d148
.L_42e7be:

            mov ESI,4154
            jmp .L_42d762
.L_42e7c8:

            or ECX,544
            jmp .L_42d2c0
.L_42e7d3:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_42ea53

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_42d288
.L_42e7fa:

            mov ESI,4154
            jmp .L_42d7f2
.L_42e804:

            sub R12D,6155
            cmp R12D,2
            ja .L_42ebce

            or ECX,96
            jmp .L_42d2c0
.L_42e81d:

            cmp EDX,24
            jne .L_42e2d5

            lea EDX,DWORD PTR [RCX-6155]
            xor R15D,R15D
            cmp EDX,3
            setbe R15B
            jmp .L_42c2f0
.L_42e83b:

            lea EDX,DWORD PTR [RCX-6068]
            xor R15D,R15D
            cmp EDX,1
            setbe R15B
            jmp .L_42c2f0
.L_42e850:

            xor R15D,R15D
            cmp R12D,1564
            sete R15B
            jmp .L_42d4e1
.L_42e863:

            xor R15D,R15D
            cmp R12D,847
            sete R15B
            jmp .L_42d4e1
.L_42e876:

            lea EDX,DWORD PTR [RCX-8203]
            cmp EDX,4
            jbe .L_42c2f9

            lea EDX,DWORD PTR [RCX-8234]
            cmp EDX,4
            jbe .L_42c2f9

            lea EDX,DWORD PTR [RCX-8288]
            xor R15D,R15D
            cmp EDX,15
            setbe R15B
            jmp .L_42c2f0
.L_42e8a9:

            lea EDX,DWORD PTR [RCX-65024]
            cmp EDX,15
            setbe R15B
            cmp ECX,65279
            sete DL
            or R15D,EDX
            movzx R15D,R15B
            jmp .L_42c2f0
.L_42e8cb:

            cmp EAX,24
            jne .L_42e04b

            lea EAX,DWORD PTR [R12-6155]
            cmp EAX,3
            setbe AL
            movzx EAX,AL
            jmp .L_42d3e0
.L_42e8ea:

            lea EAX,DWORD PTR [R12-8203]
            cmp EAX,4
            jbe .L_42d3e8

            lea EAX,DWORD PTR [R12-8234]
            cmp EAX,4
            jbe .L_42d3e8

            lea EAX,DWORD PTR [R12-8288]
            cmp EAX,15
            setbe AL
            movzx EAX,AL
            jmp .L_42d3e0
.L_42e922:

            lea EAX,DWORD PTR [R12-6068]
            cmp EAX,1
            setbe AL
            movzx EAX,AL
            jmp .L_42d3e0
.L_42e938:

            or EAX,3
            mov DWORD PTR [R14+132],EAX
            jmp .L_42decf
.L_42e947:

            lea EAX,DWORD PTR [R12-6068]
            xor R15D,R15D
            cmp EAX,1
            setbe R15B
            jmp .L_42d4e1
.L_42e95e:

            cmp EAX,24
            jne .L_42e1a9

            lea EAX,DWORD PTR [R12-6155]
            xor R15D,R15D
            cmp EAX,3
            setbe R15B
            jmp .L_42d4e1
.L_42e97e:

            lea EAX,DWORD PTR [R12-8203]
            cmp EAX,4
            jbe .L_42d4ea

            lea EAX,DWORD PTR [R12-8234]
            cmp EAX,4
            jbe .L_42d4ea

            lea EAX,DWORD PTR [R12-8288]
            xor R15D,R15D
            cmp EAX,15
            setbe R15B
            jmp .L_42d4e1
.L_42e9b7:

            lea EAX,DWORD PTR [R12-65024]
            cmp EAX,15
            setbe R15B
            cmp R12D,65279
            sete AL
            or R15D,EAX
            movzx R15D,R15B
            jmp .L_42d4e1
.L_42e9dc:

            xor EAX,EAX
            cmp R12D,1564
            sete AL
            jmp .L_42d3e0
.L_42e9ed:

            xor EAX,EAX
            cmp R12D,847
            sete AL
            jmp .L_42d3e0
.L_42e9fe:

            lea EAX,DWORD PTR [R12-65024]
            cmp EAX,15
            setbe AL
            cmp R12D,65279
            sete SIL
            or EAX,ESI
            movzx EAX,AL
            jmp .L_42d3e0
.L_42ea21:

            xor R15D,R15D
            cmp ECX,1564
            sete R15B
            jmp .L_42c2f0
.L_42ea33:

            xor R15D,R15D
            cmp ECX,847
            sete R15B
            jmp .L_42c2f0
.L_42ea45:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_42d12e
.L_42ea53:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_42d2a6
.L_42ea61:

            mov EAX,65024
            jmp .L_42e355
.L_42ea6b:

            mov ESI,4154
            jmp .L_42e318
.L_42ea75:

            mov ESI,4154
            jmp .L_42e1eb
.L_42ea7f:

            lea ESI,DWORD PTR [R12-113824]
            mov EAX,R15D
            cmp ESI,3
            jbe .L_42d3dd

            lea EAX,DWORD PTR [R12-119155]
            cmp EAX,7
            setbe AL
            jmp .L_42d3dd
.L_42eaa6:

            or R13D,544
            jmp .L_42d412
.L_42eab2:

            sub ECX,6155
            cmp ECX,2
            ja .L_42eba5

            or R8D,96
            jmp .L_42c321
.L_42eaca:

            or R13D,544
            jmp .L_42d514
.L_42ead6:

            or R8D,544
            jmp .L_42c321
.L_42eae2:

            sub R12D,6155
            cmp R12D,2
            ja .L_42eb8b

            or R13D,96
            jmp .L_42d412
.L_42eafc:

            lea EDX,DWORD PTR [RCX-113824]
            cmp EDX,3
            jbe .L_42c2ec

            lea EDX,DWORD PTR [RCX-119155]
            cmp EDX,7
            setbe R15B
            jmp .L_42c2ec
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42eb20:

            mov EAX,65024
            jmp .L_42e0b8
.L_42eb2a:

            mov ESI,4154
            jmp .L_42e08d
.L_42eb34:

            sub R12D,6155
            cmp R12D,2
            ja .L_42eb94

            or R13D,96
            jmp .L_42d514
.L_42eb4a:

            mov EAX,65024
            jmp .L_42e216
.L_42eb54:

            lea EAX,DWORD PTR [R12-113824]
            cmp EAX,3
            jbe .L_42d4dd

            lea EAX,DWORD PTR [R12-119155]
            cmp EAX,7
            setbe R15B
            jmp .L_42d4dd
.L_42eb79:

            or R13D,32
            jmp .L_42c1e8
.L_42eb82:

            or R13D,32
            jmp .L_42c0b8
.L_42eb8b:

            or R13D,32
            jmp .L_42d412
.L_42eb94:

            or R13D,32
            jmp .L_42d514
.L_42eb9d:

            or ECX,32
            jmp .L_42ca68
.L_42eba5:

            or R8D,32
            jmp .L_42c321
.L_42ebae:

            call __stack_chk_fail@PLT
.L_42ebb3:

            sub ECX,917760
            add RDI,20
            cmp ECX,239
            jbe .L_42bc68

            jmp .L_42bc4b
.L_42ebce:

            or ECX,32
            jmp .L_42d2c0
.L_42ebd6:

            or ECX,32
            jmp .L_42d148
.L_42ebde:

            nop
            nop
.L_42ebe0:

            mov ECX,DWORD PTR [RDX+184]
            mov RDX,QWORD PTR [RDX+200]
            test ECX,ECX
            je .L_42ed90

            sub ECX,1
            push R13
            lea RAX,QWORD PTR [RDX+16]
            lea RCX,QWORD PTR [RCX+RCX*4]
            push R12
            lea RDI,QWORD PTR [RIP+.L_4308d4]
            push RBP
            mov R11D,4294958080
            push RBX
.L_42ec13:

            lea RSI,QWORD PTR [RDX+RCX*4+36]
            mov R8D,4294958592
            mov EBP,4294960128
            mov R10D,4294961152
            mov R9D,4294960640
            mov EBX,4294956544
            jmp .L_42ec49
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ec40:

            add RAX,20
            cmp RAX,RSI
            je .L_42ec81
.L_42ec49:

            movzx EDX,WORD PTR [RAX]
            mov ECX,EDX
            and ECX,31
            cmp CX,12
            jne .L_42ec40

            movzx ECX,DH
            mov R13D,DWORD PTR [RAX-16]
            cmp ECX,199
            mov R12D,ECX
            jle .L_42ec90
.L_42ec69:

            mov ECX,R12D
            shl ECX,8
.L_42ec6f:

            movzx EDX,DL
            add RAX,20
            or EDX,ECX
            mov WORD PTR [RAX-20],DX
            cmp RAX,RSI
            jne .L_42ec49
.L_42ec81:

            pop RBX
.L_42ec82:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ec90:

            mov ECX,R13D
            xor CL,CL
            cmp ECX,3584
            je .L_42ed00
.L_42ec9d:

            lea ECX,DWORD PTR [R12-3]
            cmp ECX,127
            ja .L_42ec69

            movsxd RCX,DWORD PTR [RDI+RCX*4]
            add RCX,RDI
            jmp RCX
.L_42ecb0:

            sub R13D,3764
            cmp R13D,3
            ja .L_42ec9d

            nop
            nop
            nop
.L_42ecc0:

            mov ECX,R9D
            jmp .L_42ec6f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ecc8:

            cmp R13D,3639
            jbe .L_42ed92

            cmp R13D,3655
            je .L_42ecf0

            jb .L_42ec9d

            sub R13D,3660
            cmp R13D,2
            ja .L_42ec9d

            nop
            nop
            nop
.L_42ecf0:

            mov ECX,R10D
            jmp .L_42ec6f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ed00:

            test R12D,R12D
            jne .L_42ed40

            cmp R13D,3761
            je .L_42ecc0

            jbe .L_42ecc8

            cmp R13D,3771
            je .L_42ecc0

            jbe .L_42ecb0

            cmp R13D,3772
            mov ECX,R11D
            je .L_42ec6f

            sub R13D,3788
            cmp R13D,1
            ja .L_42ec9d

            jmp .L_42ecc0
          .byte 0x66
          .byte 0x90
.L_42ed40:

            cmp R13D,3642
            mov ECX,R8D
            jne .L_42ec9d

            jmp .L_42ec6f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ed58:

            mov ECX,R11D
            jmp .L_42ec6f
.L_42ed60:

            mov ECX,R8D
            jmp .L_42ec6f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ed70:

            mov ECX,EBP
            jmp .L_42ec6f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ed80:

            mov ECX,EBX
            jmp .L_42ec6f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ed90:

            ret 
.L_42ed92:

            cmp R13D,3636
            jae .L_42ecf0

            cmp R13D,3633
            je .L_42ecf0

            jmp .L_42ec9d
.L_42edb1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42edc0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,200
.L_42edd1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+184]
            mov QWORD PTR [RSP+136],RDI
            mov EDI,EAX
            mov DWORD PTR [RSP+80],EAX
            mov RAX,QWORD PTR [RDX+200]
            cmp EDI,1
            jbe .L_42f508

            mov R10D,1
            xor R11D,R11D
            add RAX,36
            mov R15D,R11D
            mov R9,RDX
            mov R11D,R10D
            mov QWORD PTR [RSP+24],RAX
            mov R10,RSI
            jmp .L_42ee48
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ee30:

            mov R15D,R11D
.L_42ee33:

            add R11D,1
            add QWORD PTR [RSP+24],20
            cmp DWORD PTR [RSP+80],R11D
            je .L_42f4d8
.L_42ee48:

            mov RAX,QWORD PTR [RSP+24]
            mov EDX,7168
            movzx EAX,WORD PTR [RAX]
            bt EDX,EAX
            jb .L_42ee33

            mov EAX,R11D
            sub EAX,R15D
            cmp EAX,1
            jbe .L_42ee30

            mov RAX,QWORD PTR [R9+200]
            cmp R11D,R15D
            mov QWORD PTR [RSP+8],RAX
            jbe .L_42ee30

            mov R13,R9
            mov R14D,R11D
            mov R9D,R15D
            mov R15,R10
            jmp .L_42ee94
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ee88:

            cmp R14D,R12D
            mov R9D,R12D
            jbe .L_42efe3
.L_42ee94:

            mov EAX,R9D
            lea R12D,DWORD PTR [R9+1]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RSP+8]
            lea R10,QWORD PTR [RCX*4]
            movzx EDX,WORD PTR [RAX+R10*1+16]
            mov EAX,7168
            bt EAX,EDX
            jb .L_42ee88

            cmp R14D,R12D
            jbe .L_42eff8

            mov R11D,R12D
            mov RDI,QWORD PTR [RSP+8]
            lea RBP,QWORD PTR [R11+R11*4]
            shl RBP,2
            movzx EDX,WORD PTR [RDI+RBP*1+16]
            bt EAX,EDX
            jae .L_42eff8

            lea EAX,DWORD PTR [R9+2]
            mov EBX,R12D
            mov ESI,7168
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4+16]
            jmp .L_42ef0c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ef00:

            movzx EDX,WORD PTR [RAX]
            add RAX,20
            bt ESI,EDX
            jae .L_42ef14
.L_42ef0c:

            add EBX,1
            cmp EBX,R14D
            jb .L_42ef00
.L_42ef14:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+32],R9D
            mov QWORD PTR [RSP+16],R10
            mov RDI,R15
            mov QWORD PTR [RSP+40],R11
            mov RSI,QWORD PTR [R15+160]
            mov EDX,DWORD PTR [RAX+RCX*4]
            mov RAX,QWORD PTR [R15+152]
            lea RCX,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+16]
            mov R9D,DWORD PTR [RSP+32]
            jne .L_42f050

            cmp EBX,R12D
            mov RCX,QWORD PTR [R13+200]
            jbe .L_42efd4

            mov EAX,EBX
            mov R11,QWORD PTR [RSP+40]
            sub EAX,R9D
            sub EAX,2
            lea RAX,QWORD PTR [R11+RAX*1+1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42efa0:

            movzx EAX,WORD PTR [RCX+RBP*1+16]
            and EAX,31
            cmp AX,12
            jne .L_42efcb

            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBP*1],0
            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBP*1+4],0
.L_42efcb:

            add RBP,20
            cmp RDX,RBP
            jne .L_42efa0
.L_42efd4:

            mov R12D,EBX
.L_42efd7:

            cmp R14D,R12D
            mov R9D,R12D
            ja .L_42ee94
.L_42efe3:

            mov R10,R15
            mov R11D,R14D
            mov R9,R13
            mov R15D,R14D
            jmp .L_42ee33
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42eff8:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+32],R9D
            mov QWORD PTR [RSP+16],R10
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov EBX,R12D
            mov EDX,DWORD PTR [RAX+RCX*4]
            mov RAX,QWORD PTR [R15+152]
            lea RCX,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            je .L_42efd4

            mov R10,QWORD PTR [RSP+16]
            mov R9D,DWORD PTR [RSP+32]
            nop
.L_42f050:

            mov RCX,QWORD PTR [R13+216]
            mov EDI,1
            mov DWORD PTR [RSP+32],EDI
            add RCX,R10
            mov R11D,DWORD PTR [RCX+8]
            add R11D,DWORD PTR [RSP+144]
            mov DWORD PTR [RSP+144],R11D
            mov EAX,DWORD PTR [RCX+12]
            add EAX,DWORD PTR [RSP+148]
            mov DWORD PTR [RSP+56],R11D
            mov DWORD PTR [RSP+148],EAX
            mov DWORD PTR [RSP+84],EAX
            mov RAX,QWORD PTR [R13+200]
            add R10,RAX
            movzx ESI,BYTE PTR [R10+14]
            mov EDX,ESI
            sar ESI,5
            test BYTE PTR [R10+12],4
            mov DWORD PTR [RSP+124],ESI
            je .L_42f0bf

            mov ESI,EDX
            and ESI,15
            and EDX,16
            cmove ESI,EDI
            mov DWORD PTR [RSP+32],ESI
.L_42f0bf:

            mov EDX,DWORD PTR [R13+144]
            xor R11D,R11D
            xor R10D,R10D
            and EDX,4294967293
            cmp EDX,4
            jne .L_42f0e2

            mov EDX,DWORD PTR [RCX+4]
            mov R10D,DWORD PTR [RCX]
            neg EDX
            neg R10D
            mov R11D,EDX
.L_42f0e2:

            mov EDI,DWORD PTR [RSP+152]
            mov ESI,DWORD PTR [RSP+156]
            cmp EBX,R12D
            mov DWORD PTR [RSP+88],EDI
            mov DWORD PTR [RSP+112],ESI
            jbe .L_42efd4

            mov ECX,R12D
            mov DWORD PTR [RSP+120],EDI
            mov EDI,DWORD PTR [RSP+84]
            lea RDX,QWORD PTR [RCX+RCX*4]
            mov DWORD PTR [RSP+128],R14D
            mov EBP,R10D
            mov R14D,R11D
            mov DWORD PTR [RSP+52],255
            mov DWORD PTR [RSP+96],0
            lea R12,QWORD PTR [RAX+RDX*4+16]
            mov EDX,EBX
            mov DWORD PTR [RSP+64],EDI
            sub EDX,R9D
            mov EDI,DWORD PTR [RSP+56]
            mov R9D,ESI
            sub EDX,2
            mov DWORD PTR [RSP+104],4294967295
            mov DWORD PTR [RSP+132],EBX
            add RDX,RCX
            mov R10,R15
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov DWORD PTR [RSP+92],EDI
            lea RCX,QWORD PTR [RAX+RDX*4+36]
            mov RDX,-16
            sub RDX,RAX
            mov QWORD PTR [RSP+16],RCX
            mov R11,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f180:

            movzx ECX,WORD PTR [R12]
            mov EAX,7168
            lea RBX,QWORD PTR [R11+R12*1]
            shr EAX,CL
            and EAX,1
            je .L_42f3c8

            movzx EDX,CH
            test EDX,EDX
            je .L_42f3c8

            mov R15D,DWORD PTR [RSP+32]
            cmp R15D,1
            jbe .L_42f440

            movzx EDI,BYTE PTR [R12-2]
            test DIL,16
            jne .L_42f4c8

            mov ESI,EDI
            sar EDI,5
            and ESI,15
            sub ESI,1
            cmp EDI,DWORD PTR [RSP+124]
            setne R8B
            cmp R15D,ESI
            setbe DIL
            mov R15D,R8D
            or R15B,DIL
            jne .L_42f4c8

            mov EDI,DWORD PTR [RSP+124]
            test EDI,EDI
            je .L_42f4c8
.L_42f1f5:

            cmp ESI,DWORD PTR [RSP+104]
            je .L_42f440

            mov EDI,DWORD PTR [RSP+144]
            mov DWORD PTR [RSP+52],EAX
            mov EAX,DWORD PTR [RSP+96]
            mov R8D,DWORD PTR [RSP+152]
            mov R15D,DWORD PTR [RSP+156]
            mov DWORD PTR [RSP+56],EDI
            mov EDI,DWORD PTR [RSP+148]
            test EAX,EAX
            mov DWORD PTR [RSP+40],EDI
            jne .L_42f24b

            mov RDI,QWORD PTR [RSP+136]
            mov EAX,DWORD PTR [RDI]
            mov DWORD PTR [RSP+96],EAX
            and EAX,4294967294
            cmp EAX,4
            jne .L_42fcb0
.L_42f24b:

            cmp DWORD PTR [RSP+96],4
            je .L_42fbe0

            mov EDI,DWORD PTR [RSP+32]
            xor EDX,EDX
            lea EAX,DWORD PTR [RDI-1]
            sub EAX,ESI
            imul EAX,R8D
            div EDI
            add EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+56],EAX
.L_42f26f:

            xor EDX,EDX
            mov EAX,R8D
            mov EDI,DWORD PTR [RSP+52]
            div DWORD PTR [RSP+32]
            test EDI,EDI
            mov DWORD PTR [RSP+88],EAX
            jne .L_42f41f

            mov EAX,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+104],ESI
            mov DWORD PTR [RSP+112],R15D
            mov DWORD PTR [RSP+84],EAX
            mov EAX,DWORD PTR [RSP+88]
            mov DWORD PTR [RSP+120],EAX
            mov EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+92],EAX
.L_42f2a9:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+72],R11
            mov RSI,QWORD PTR [R10+160]
            mov RDI,R10
            mov QWORD PTR [RSP+64],R10
            lea RCX,QWORD PTR [RSP+160]
            mov EDX,DWORD PTR [RAX+RBX*1]
            mov RAX,QWORD PTR [R10+152]
            movaps XMMWORD PTR [RSP+160],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+64]
            mov R11,QWORD PTR [RSP+72]
            je .L_42f480

            mov EDX,DWORD PTR [R10+140]
            mov EDI,DWORD PTR [RSP+52]
            lea EAX,DWORD PTR [RDX+15]
            test EDX,EDX
            lea ECX,DWORD PTR [RDI-200]
            cmovns EAX,EDX
            mov RDX,QWORD PTR [R13+216]
            sar EAX,4
            add RDX,RBX
            cmp ECX,34
            mov QWORD PTR [RDX+8],0
            mov ESI,DWORD PTR [RSP+160]
            ja .L_42f538

            mov R8D,1
            movabs RDI,4299227136
            shl R8,CL
            test R8,RDI
            jne .L_42f790

            test R8D,268697601
            jne .L_42fc9f

            movabs R9,25769803776
            mov EDI,DWORD PTR [RSP+168]
            test R8,R9
            je .L_42f53f

            mov R8D,DWORD PTR [R13+144]
            cmp R8D,4
            je .L_42fe83

            cmp R8D,5
            jne .L_42f53f

            mov R8D,EDI
            mov R9D,DWORD PTR [RSP+92]
            add R9D,DWORD PTR [RSP+120]
            shr R8D,31
            add EDI,R8D
            sar EDI,1
            sub R9D,EDI
            sub R9D,ESI
            mov DWORD PTR [RDX+8],R9D
            jmp .L_42f55b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f3c8:

            mov EAX,DWORD PTR [R13+144]
            add RBX,QWORD PTR [R13+216]
            and EAX,4294967293
            cmp EAX,4
            mov ECX,DWORD PTR [RBX]
            mov EDX,DWORD PTR [RBX+4]
            je .L_42f418

            add EBP,ECX
            add R14D,EDX
.L_42f3e8:

            add R12,20
            cmp QWORD PTR [RSP+16],R12
            jne .L_42f180

            mov EBX,DWORD PTR [RSP+132]
            mov R14D,DWORD PTR [RSP+128]
            mov R15,R10
            mov R12D,EBX
            jmp .L_42efd7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f418:

            sub EBP,ECX
            sub R14D,EDX
            jmp .L_42f3e8
.L_42f41f:

            mov EAX,DWORD PTR [RSP+40]
            movzx EDX,CH
            mov DWORD PTR [RSP+104],ESI
            mov DWORD PTR [RSP+112],R15D
            mov DWORD PTR [RSP+52],255
            mov DWORD PTR [RSP+84],EAX
            nop
            nop
            nop
            nop
            nop
.L_42f440:

            cmp EDX,DWORD PTR [RSP+52]
            mov EAX,DWORD PTR [RSP+64]
            mov R15D,R9D
            mov DWORD PTR [RSP+40],EAX
            je .L_42f2a9

            mov EAX,DWORD PTR [RSP+88]
            mov DWORD PTR [RSP+52],EDX
            mov R15D,DWORD PTR [RSP+112]
            mov DWORD PTR [RSP+120],EAX
            mov EAX,DWORD PTR [RSP+84]
            mov DWORD PTR [RSP+40],EAX
            mov EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+92],EAX
            jmp .L_42f2a9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f480:

            mov EAX,DWORD PTR [RSP+40]
            mov R9D,R15D
            mov DWORD PTR [RSP+64],EAX
.L_42f48b:

            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBX*1],0
            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBX*1+4],0
            mov RAX,QWORD PTR [R13+216]
            add RAX,RBX
            add DWORD PTR [RAX+8],EBP
            add RBX,QWORD PTR [R13+216]
            add DWORD PTR [RBX+12],R14D
            jmp .L_42f3e8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f4c8:

            mov EDI,DWORD PTR [RSP+32]
            lea ESI,DWORD PTR [RDI-1]
            jmp .L_42f1f5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f4d8:

            mov RAX,R10
            mov R10D,R11D
            mov R11D,R15D
            mov R15,RAX
            mov EAX,R10D
            sub EAX,R11D
            cmp EAX,1
            jbe .L_42f508

            mov RAX,QWORD PTR [R9+200]
            cmp R11D,R10D
            mov QWORD PTR [RSP+8],RAX
            jb .L_42f630

            nop
            nop
            nop
            nop
.L_42f508:

            mov RAX,QWORD PTR [RSP+184]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42fec5

            add RSP,200
.L_42f526:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f538:

            mov EDI,DWORD PTR [RSP+168]
.L_42f53f:

            mov R8D,DWORD PTR [RSP+120]
            sub R8D,EDI
            mov EDI,R8D
            shr EDI,31
            add EDI,R8D
            sar EDI,1
            add EDI,DWORD PTR [RSP+92]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
.L_42f55b:

            cmp ECX,34
            ja .L_42f480

            lea RDI,QWORD PTR [RIP+.L_430ad4]
            movsxd RCX,DWORD PTR [RDI+RCX*4]
            add RCX,RDI
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f578:

            add DWORD PTR [RSP+40],EAX
            sub R15D,EAX
.L_42f57f:

            mov ECX,DWORD PTR [RSP+40]
            sub ECX,DWORD PTR [RSP+172]
            sub ECX,DWORD PTR [RSP+164]
            test EAX,EAX
            setg SIL
            test ECX,ECX
            setg AL
            cmp SIL,AL
            je .L_42f7a9

            mov EAX,ECX
            shr EAX,31
            add EAX,ECX
            sar EAX,1
            neg EAX
            add DWORD PTR [RSP+40],EAX
            sub R15D,EAX
            add EAX,ECX
            mov DWORD PTR [RDX+12],EAX
.L_42f5bc:

            mov R9D,DWORD PTR [RSP+172]
            mov EAX,DWORD PTR [RSP+40]
            sub EAX,R9D
            add R9D,R15D
            mov DWORD PTR [RSP+64],EAX
            jmp .L_42f48b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f5e0:

            sub R15D,EAX
.L_42f5e3:

            mov ESI,DWORD PTR [RSP+40]
            lea ECX,DWORD PTR [RSI+R15*1]
            sub ECX,DWORD PTR [RSP+164]
            test EAX,EAX
            setle SIL
            test ECX,ECX
            setg AL
            cmp SIL,AL
            je .L_42f7b1

            sub R15D,ECX
            mov DWORD PTR [RDX+12],0
.L_42f610:

            add R15D,DWORD PTR [RSP+172]
            mov EAX,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+64],EAX
            mov R9D,R15D
            jmp .L_42f48b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f630:

            mov R14D,R10D
            mov R13,R9
            jmp .L_42f64c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f640:

            cmp R14D,R12D
            mov R11D,R12D
            jbe .L_42f508
.L_42f64c:

            mov EAX,R11D
            lea R12D,DWORD PTR [R11+1]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RSP+8]
            lea R9,QWORD PTR [RCX*4]
            movzx EDX,WORD PTR [RAX+R9*1+16]
            mov EAX,7168
            bt EAX,EDX
            jb .L_42f640

            cmp R14D,R12D
            jbe .L_42f7b9

            mov R10D,R12D
            mov RSI,QWORD PTR [RSP+8]
            lea RBP,QWORD PTR [R10+R10*4]
            shl RBP,2
            movzx EDX,WORD PTR [RSI+RBP*1+16]
            bt EAX,EDX
            jae .L_42f7b9

            lea EAX,DWORD PTR [R11+2]
            mov EBX,R12D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4+16]
            mov ESI,7168
            jmp .L_42f6c4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f6b8:

            movzx EDX,WORD PTR [RAX]
            add RAX,20
            bt ESI,EDX
            jae .L_42f6cc
.L_42f6c4:

            add EBX,1
            cmp R14D,EBX
            ja .L_42f6b8
.L_42f6cc:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+24],R11D
            mov QWORD PTR [RSP+16],R9
            mov RDI,R15
            mov QWORD PTR [RSP+32],R10
            mov RSI,QWORD PTR [R15+160]
            mov EDX,DWORD PTR [RAX+RCX*4]
            mov RAX,QWORD PTR [R15+152]
            lea RCX,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R9,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+24]
            jne .L_42f818

            cmp EBX,R12D
            mov RCX,QWORD PTR [R13+200]
            jbe .L_42f784

            mov EAX,EBX
            mov R10,QWORD PTR [RSP+32]
            sub EAX,R11D
            sub EAX,2
            lea RAX,QWORD PTR [R10+RAX*1+1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            nop
.L_42f750:

            movzx EAX,WORD PTR [RCX+RBP*1+16]
            and EAX,31
            cmp AX,12
            jne .L_42f77b

            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBP*1],0
            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBP*1+4],0
.L_42f77b:

            add RBP,20
            cmp RDX,RBP
            jne .L_42f750
.L_42f784:

            mov R12D,EBX
            jmp .L_42f640
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f790:

            mov EDI,DWORD PTR [RSP+92]
            add EDI,DWORD PTR [RSP+120]
            sub EDI,DWORD PTR [RSP+168]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42f55b
.L_42f7a9:

            mov DWORD PTR [RDX+12],ECX
            jmp .L_42f5bc
.L_42f7b1:

            mov DWORD PTR [RDX+12],ECX
            jmp .L_42f610
.L_42f7b9:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+24],R11D
            mov QWORD PTR [RSP+16],R9
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov EBX,R12D
            mov EDX,DWORD PTR [RAX+RCX*4]
            mov RAX,QWORD PTR [R15+152]
            lea RCX,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            je .L_42f784

            mov R9,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+24]
            nop
            nop
            nop
            nop
.L_42f818:

            mov RCX,QWORD PTR [R13+216]
            mov EDI,1
            mov DWORD PTR [RSP+24],EDI
            add RCX,R9
            mov EAX,DWORD PTR [RCX+8]
            add EAX,DWORD PTR [RSP+144]
            mov DWORD PTR [RSP+144],EAX
            mov DWORD PTR [RSP+52],EAX
            mov EAX,DWORD PTR [RCX+12]
            add EAX,DWORD PTR [RSP+148]
            mov DWORD PTR [RSP+148],EAX
            mov DWORD PTR [RSP+80],EAX
            mov RAX,QWORD PTR [R13+200]
            add R9,RAX
            movzx ESI,BYTE PTR [R9+14]
            mov EDX,ESI
            sar ESI,5
            test BYTE PTR [R9+12],4
            mov DWORD PTR [RSP+124],ESI
            je .L_42f883

            mov ESI,EDX
            and ESI,15
            and EDX,16
            cmove ESI,EDI
            mov DWORD PTR [RSP+24],ESI
.L_42f883:

            mov EDX,DWORD PTR [R13+144]
            xor R10D,R10D
            xor R9D,R9D
            and EDX,4294967293
            cmp EDX,4
            jne .L_42f8a6

            mov EDX,DWORD PTR [RCX+4]
            mov R9D,DWORD PTR [RCX]
            neg EDX
            neg R9D
            mov R10D,EDX
.L_42f8a6:

            mov ESI,DWORD PTR [RSP+152]
            mov EDI,DWORD PTR [RSP+156]
            cmp EBX,R12D
            mov DWORD PTR [RSP+72],ESI
            mov DWORD PTR [RSP+96],EDI
            jbe .L_42f784

            mov ECX,R12D
            mov DWORD PTR [RSP+88],ESI
            mov ESI,DWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+RCX*4]
            mov DWORD PTR [RSP+104],R14D
            mov DWORD PTR [RSP+64],EDI
            mov R14D,R10D
            mov DWORD PTR [RSP+40],255
            mov R10,R15
            lea R12,QWORD PTR [RAX+RDX*4+16]
            mov EDX,EBX
            mov DWORD PTR [RSP+56],ESI
            sub EDX,R11D
            mov ESI,DWORD PTR [RSP+52]
            mov DWORD PTR [RSP+92],0
            sub EDX,2
            mov DWORD PTR [RSP+120],4294967295
            mov DWORD PTR [RSP+112],EBX
            add RDX,RCX
            mov EBP,R9D
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov DWORD PTR [RSP+84],ESI
            lea RCX,QWORD PTR [RAX+RDX*4+36]
            mov RDX,-16
            sub RDX,RAX
            mov QWORD PTR [RSP+16],RCX
            mov R15,RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f940:

            movzx ECX,WORD PTR [R12]
            mov EAX,7168
            lea RBX,QWORD PTR [R15+R12*1]
            shr EAX,CL
            and EAX,1
            je .L_42fb88

            movzx EDX,CH
            test EDX,EDX
            je .L_42fb88

            mov R9D,DWORD PTR [RSP+24]
            cmp R9D,1
            jbe .L_42fc18

            movzx EDI,BYTE PTR [R12-2]
            test DIL,16
            jne .L_42f9b0

            mov R11D,DWORD PTR [RSP+124]
            mov ESI,EDI
            sar EDI,5
            and ESI,15
            sub ESI,1
            cmp EDI,R11D
            setne R8B
            cmp R9D,ESI
            setbe DIL
            or R8B,DIL
            jne .L_42f9b0

            test R11D,R11D
            jne .L_42f9b7

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f9b0:

            mov ESI,DWORD PTR [RSP+24]
            sub ESI,1
.L_42f9b7:

            cmp ESI,DWORD PTR [RSP+120]
            je .L_42fc18

            mov EDX,DWORD PTR [RSP+92]
            mov EDI,DWORD PTR [RSP+148]
            mov R11D,DWORD PTR [RSP+144]
            mov R8D,DWORD PTR [RSP+152]
            mov R9D,DWORD PTR [RSP+156]
            mov DWORD PTR [RSP+40],EAX
            test EDX,EDX
            mov DWORD PTR [RSP+32],EDI
            jne .L_42fa55

            mov RDI,QWORD PTR [RSP+136]
            mov EAX,DWORD PTR [RDI]
            mov DWORD PTR [RSP+92],EAX
            and EAX,4294967294
            cmp EAX,4
            je .L_42fa55

            mov EDI,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+96],R10
            mov DWORD PTR [RSP+120],R8D
            mov DWORD PTR [RSP+72],R11D
            mov DWORD PTR [RSP+80],ESI
            mov DWORD PTR [RSP+52],R9D
            call .L_406760

            movzx ECX,WORD PTR [R12]
            mov DWORD PTR [RSP+92],EAX
            mov EAX,7168
            mov R10,QWORD PTR [RSP+96]
            mov R8D,DWORD PTR [RSP+120]
            mov R11D,DWORD PTR [RSP+72]
            mov ESI,DWORD PTR [RSP+80]
            mov R9D,DWORD PTR [RSP+52]
            shr EAX,CL
            and EAX,1
            mov DWORD PTR [RSP+40],EAX
.L_42fa55:

            cmp DWORD PTR [RSP+92],4
            je .L_42fd90

            mov EDI,DWORD PTR [RSP+24]
            xor EDX,EDX
            lea EAX,DWORD PTR [RDI-1]
            sub EAX,ESI
            imul EAX,R8D
            div EDI
            add EAX,R11D
            mov DWORD PTR [RSP+52],EAX
.L_42fa78:

            xor EDX,EDX
            mov EAX,R8D
            div DWORD PTR [RSP+24]
            mov DWORD PTR [RSP+72],EAX
            mov EAX,DWORD PTR [RSP+40]
            test EAX,EAX
            jne .L_42fbf9

            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RSP+120],ESI
            mov DWORD PTR [RSP+96],R9D
            mov DWORD PTR [RSP+80],EAX
            mov EAX,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+88],EAX
            mov EAX,DWORD PTR [RSP+52]
            mov DWORD PTR [RSP+84],EAX
.L_42fab2:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+64],R9D
            mov RSI,QWORD PTR [R10+160]
            mov RDI,R10
            mov QWORD PTR [RSP+56],R10
            lea RCX,QWORD PTR [RSP+160]
            mov EDX,DWORD PTR [RAX+RBX*1]
            mov RAX,QWORD PTR [R10+152]
            movaps XMMWORD PTR [RSP+160],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+56]
            mov R9D,DWORD PTR [RSP+64]
            je .L_42fc58

            mov EDX,DWORD PTR [R10+140]
            mov ESI,DWORD PTR [RSP+40]
            lea EAX,DWORD PTR [RDX+15]
            test EDX,EDX
            lea ECX,DWORD PTR [RSI-200]
            cmovns EAX,EDX
            mov RDX,QWORD PTR [R13+216]
            sar EAX,4
            add RDX,RBX
            cmp ECX,34
            mov QWORD PTR [RDX+8],0
            mov ESI,DWORD PTR [RSP+160]
            jbe .L_42fd04

            mov EDI,DWORD PTR [RSP+168]
.L_42fb4f:

            mov R8D,DWORD PTR [RSP+88]
            sub R8D,EDI
            mov EDI,R8D
            shr EDI,31
            add EDI,R8D
            sar EDI,1
            add EDI,DWORD PTR [RSP+84]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
.L_42fb6b:

            cmp ECX,34
            ja .L_42fc58

            lea RSI,QWORD PTR [RIP+.L_430b60]
            movsxd RCX,DWORD PTR [RSI+RCX*4]
            add RCX,RSI
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42fb88:

            mov EAX,DWORD PTR [R13+144]
            add RBX,QWORD PTR [R13+216]
            and EAX,4294967293
            cmp EAX,4
            mov ECX,DWORD PTR [RBX]
            mov EDX,DWORD PTR [RBX+4]
            je .L_42fbd0

            add EBP,ECX
            add R14D,EDX
.L_42fba8:

            add R12,20
            cmp R12,QWORD PTR [RSP+16]
            jne .L_42f940

            mov EBX,DWORD PTR [RSP+112]
            mov R14D,DWORD PTR [RSP+104]
            mov R15,R10
            mov R12D,EBX
            jmp .L_42f640
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fbd0:

            sub EBP,ECX
            sub R14D,EDX
            jmp .L_42fba8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fbe0:

            mov EAX,ESI
            xor EDX,EDX
            imul EAX,R8D
            div DWORD PTR [RSP+32]
            add EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+56],EAX
            jmp .L_42f26f
.L_42fbf9:

            mov EAX,DWORD PTR [RSP+32]
            movzx EDX,CH
            mov DWORD PTR [RSP+120],ESI
            mov DWORD PTR [RSP+96],R9D
            mov DWORD PTR [RSP+40],255
            mov DWORD PTR [RSP+80],EAX
            nop
            nop
            nop
.L_42fc18:

            cmp EDX,DWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RSP+56]
            mov R9D,DWORD PTR [RSP+64]
            mov DWORD PTR [RSP+32],EAX
            je .L_42fab2

            mov EAX,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+40],EDX
            mov R9D,DWORD PTR [RSP+96]
            mov DWORD PTR [RSP+88],EAX
            mov EAX,DWORD PTR [RSP+80]
            mov DWORD PTR [RSP+32],EAX
            mov EAX,DWORD PTR [RSP+52]
            mov DWORD PTR [RSP+84],EAX
            jmp .L_42fab2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fc58:

            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RSP+64],R9D
            mov DWORD PTR [RSP+56],EAX
.L_42fc65:

            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBX*1],0
            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBX*1+4],0
            mov RAX,QWORD PTR [R13+216]
            add RAX,RBX
            add DWORD PTR [RAX+8],EBP
            add RBX,QWORD PTR [R13+216]
            add DWORD PTR [RBX+12],R14D
            jmp .L_42fba8
.L_42fc9f:

            mov EDI,DWORD PTR [RSP+92]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42f55b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fcb0:

            mov EDI,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+112],R11
            mov QWORD PTR [RSP+104],R10
            mov DWORD PTR [RSP+88],R9D
            mov DWORD PTR [RSP+84],R8D
            mov DWORD PTR [RSP+72],ESI
            call .L_406760

            movzx ECX,WORD PTR [R12]
            mov DWORD PTR [RSP+96],EAX
            mov EAX,7168
            mov R11,QWORD PTR [RSP+112]
            mov R10,QWORD PTR [RSP+104]
            mov R9D,DWORD PTR [RSP+88]
            mov R8D,DWORD PTR [RSP+84]
            mov ESI,DWORD PTR [RSP+72]
            shr EAX,CL
            and EAX,1
            mov DWORD PTR [RSP+52],EAX
            jmp .L_42f24b
.L_42fd04:

            mov R8D,1
            movabs RDI,4299227136
            shl R8,CL
            test R8,RDI
            jne .L_42fe4f

            test R8D,268697601
            jne .L_42fe75

            movabs R11,25769803776
            mov EDI,DWORD PTR [RSP+168]
            test R8,R11
            je .L_42fb4f

            mov R8D,DWORD PTR [R13+144]
            cmp R8D,4
            je .L_42fea4

            cmp R8D,5
            jne .L_42fb4f

            mov R8D,EDI
            mov R11D,DWORD PTR [RSP+88]
            add R11D,DWORD PTR [RSP+84]
            shr R8D,31
            add EDI,R8D
            sar EDI,1
            sub R11D,EDI
            sub R11D,ESI
            mov DWORD PTR [RDX+8],R11D
            jmp .L_42fb6b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fd90:

            mov EAX,ESI
            xor EDX,EDX
            imul EAX,R8D
            div DWORD PTR [RSP+24]
            add EAX,R11D
            mov DWORD PTR [RSP+52],EAX
            jmp .L_42fa78
.L_42fda8:

            add DWORD PTR [RSP+32],EAX
            sub R9D,EAX
.L_42fdaf:

            mov ECX,DWORD PTR [RSP+32]
            sub ECX,DWORD PTR [RSP+172]
            sub ECX,DWORD PTR [RSP+164]
            test EAX,EAX
            setg SIL
            test ECX,ECX
            setg AL
            cmp SIL,AL
            je .L_42fe68

            mov EAX,ECX
            shr EAX,31
            add EAX,ECX
            sar EAX,1
            neg EAX
            add DWORD PTR [RSP+32],EAX
            sub R9D,EAX
            add EAX,ECX
            mov DWORD PTR [RDX+12],EAX
.L_42fdec:

            mov EAX,DWORD PTR [RSP+172]
            mov ESI,DWORD PTR [RSP+32]
            sub ESI,EAX
            add EAX,R9D
            mov DWORD PTR [RSP+56],ESI
            mov DWORD PTR [RSP+64],EAX
            jmp .L_42fc65
.L_42fe09:

            sub R9D,EAX
.L_42fe0c:

            mov ESI,DWORD PTR [RSP+32]
            lea ECX,DWORD PTR [R9+RSI*1]
            sub ECX,DWORD PTR [RSP+164]
            test EAX,EAX
            setle SIL
            test ECX,ECX
            setg AL
            cmp SIL,AL
            je .L_42fe70

            sub R9D,ECX
            mov DWORD PTR [RDX+12],0
.L_42fe35:

            add R9D,DWORD PTR [RSP+172]
            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RSP+56],EAX
            mov DWORD PTR [RSP+64],R9D
            jmp .L_42fc65
.L_42fe4f:

            mov EDI,DWORD PTR [RSP+88]
            add EDI,DWORD PTR [RSP+84]
            sub EDI,DWORD PTR [RSP+168]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42fb6b
.L_42fe68:

            mov DWORD PTR [RDX+12],ECX
            jmp .L_42fdec
.L_42fe70:

            mov DWORD PTR [RDX+12],ECX
            jmp .L_42fe35
.L_42fe75:

            mov EDI,DWORD PTR [RSP+84]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42fb6b
.L_42fe83:

            mov R8D,EDI
            shr R8D,31
            add EDI,R8D
            mov R8D,DWORD PTR [RSP+92]
            sar EDI,1
            sub R8D,EDI
            mov EDI,R8D
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42f55b
.L_42fea4:

            mov R8D,EDI
            shr R8D,31
            add EDI,R8D
            mov R8D,DWORD PTR [RSP+84]
            sar EDI,1
            sub R8D,EDI
            mov EDI,R8D
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42fb6b
.L_42fec5:

            call __stack_chk_fail@PLT
.L_42feca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42fed0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,312
.L_42fee1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+1092],2
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+40],RDX
            jne .L_42ff30
.L_42ff07:

            mov RAX,QWORD PTR [RSP+296]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43069c

            add RSP,312
.L_42ff25:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42ff30:

            mov RAX,QWORD PTR [RSI+128]
            mov QWORD PTR [RSP+88],RSI
            mov RSI,RDX
            mov QWORD PTR [RSP+104],RDX
            mov EDX,DWORD PTR [RDX+144]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+80],1
            mov BYTE PTR [RSP+120],1
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [RAX+160]
            mov DWORD PTR [RSP+112],EDX
            mov QWORD PTR [RSP+128],0
            movaps XMMWORD PTR [RSP+240],XMM0
            mov RDX,QWORD PTR [RAX+24]
            mov DWORD PTR [RSP+136],3
            movaps XMMWORD PTR [RSP+176],XMM0
            movaps XMMWORD PTR [RSP+160],XMM0
            movaps XMMWORD PTR [RSP+208],XMM0
            movaps XMMWORD PTR [RSP+224],XMM0
            movaps XMMWORD PTR [RSP+272],XMM0
            movzx EAX,BYTE PTR [RDX+4]
            mov QWORD PTR [RSP+144],RDX
            movzx EDX,BYTE PTR [RDX+5]
            mov BYTE PTR [RSP+188],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov DWORD PTR [RSP+248],4294967295
            mov BYTE PTR [RSP+252],0
            shl EAX,8
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+264],0
            add AX,DX
            mov EAX,4294967295
            lea RDX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+288],RAX
            mov EAX,DWORD PTR [RDI+1088]
            setne BYTE PTR [RSP+152]
            mov DWORD PTR [RSP+116],EAX
            mov DWORD PTR [RSP+140],8
            mov DWORD PTR [RSP+184],EAX
            mov RAX,RSI
            mov ESI,DWORD PTR [RSI+184]
            mov RCX,QWORD PTR [RAX+200]
            mov QWORD PTR [RSP+168],RDX
            mov DWORD PTR [RSP+176],8
            mov QWORD PTR [RSP+232],RDX
            test ESI,ESI
            mov DWORD PTR [RSP+240],8
            mov BYTE PTR [RSP+244],1
            mov QWORD PTR [RSP+64],RCX
            mov RCX,QWORD PTR [RAX+216]
            mov BYTE PTR [RSP+245],1
            mov BYTE PTR [RSP+180],1
            mov BYTE PTR [RSP+181],1
            mov DWORD PTR [RSP+32],ESI
            mov QWORD PTR [RSP+72],RCX
            je .L_42ff07

            xor R15D,R15D
            mov R12D,ESI
            mov DWORD PTR [RSP+20],8
            mov R14,RDX
            mov R11D,R15D
            nop
            nop
            nop
            nop
.L_4300d8:

            cmp DWORD PTR [RAX+180],R11D
            mov DWORD PTR [RSP+160],R11D
            mov DWORD PTR [RSP+216],1
            mov DWORD PTR [RSP+220],R12D
            mov BYTE PTR [RSP+15],0
            mov DWORD PTR [RSP+8],0
            jne .L_430127

            mov R9,QWORD PTR [RAX+200]
            mov EDX,R11D
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R9+RDX*4]
            movzx EAX,BYTE PTR [RDX+15]
            mov BYTE PTR [RSP+15],AL
            mov DWORD PTR [RSP+8],EAX
.L_430127:

            movzx EAX,BYTE PTR [RSP+15]
            mov ESI,DWORD PTR [RSP+20]
            mov EBX,R11D
            mov DWORD PTR [RSP+16],R11D
            mov BYTE PTR [RSP+188],AL
            mov EAX,ESI
            shr EAX,16
            mov DWORD PTR [RSP+52],EAX
            lea RAX,QWORD PTR [RAX*4+2]
            mov QWORD PTR [RSP+56],RAX
            mov EAX,ESI
            and EAX,16
            mov DWORD PTR [RSP+36],EAX
            mov EAX,ESI
            and ESI,14
            and EAX,65280
            mov R13D,ESI
            mov DWORD PTR [RSP+48],EAX
            nop
.L_430170:

            lea EAX,DWORD PTR [RBX+1]
            lea RBP,QWORD PTR [RAX+RAX*4]
            mov RBX,RAX
            xor EAX,EAX
            lea EDX,DWORD PTR [RBX-1]
            shl RBP,2
            cmp EBX,R12D
            jae .L_430278
.L_43018c:

            mov RAX,QWORD PTR [R14+24]
            mov RDI,QWORD PTR [RAX+200]
            add RDI,RBP
            movzx ECX,WORD PTR [RDI+12]
            mov RAX,RDI
            test ECX,R13D
            mov EDX,ECX
            jne .L_430260

            test CL,8
            mov EDI,DWORD PTR [RDI]
            jne .L_430238
.L_4301b7:

            movzx R8D,WORD PTR [RAX+16]
            mov ECX,DWORD PTR [RAX+4]
            and ECX,DWORD PTR [RSP+184]
            mov DWORD PTR [RSP+160],EBX
            mov ESI,R8D
            and ESI,96
            cmp SI,32
            je .L_4302db

            nop
            nop
            nop
.L_4301e0:

            test ECX,ECX
            je .L_4301fe

            mov EDX,DWORD PTR [RSP+8]
            test EDX,EDX
            je .L_430290

            movzx EDX,BYTE PTR [RSP+15]
            cmp BYTE PTR [RAX+15],DL
            je .L_430290
.L_4301fe:

            mov R11D,DWORD PTR [RSP+16]
.L_430203:

            add R11D,1
.L_430207:

            cmp DWORD PTR [RSP+32],R11D
            jbe .L_42ff07

            mov R14,QWORD PTR [RSP+168]
            mov EDI,DWORD PTR [RSP+176]
            mov RAX,QWORD PTR [R14+24]
            mov DWORD PTR [RSP+20],EDI
            mov R12D,DWORD PTR [RAX+184]
            jmp .L_4300d8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430238:

            mov R8D,DWORD PTR [RSP+36]
            test R8D,R8D
            jne .L_430448

            mov ESI,DWORD PTR [RSP+48]
            test ESI,ESI
            je .L_4301b7

            xor ECX,DWORD PTR [RSP+20]
            and CH,255
            je .L_4301b7

            nop
.L_430260:

            add EBX,1
            add RBP,20
            mov EAX,1
            cmp EBX,R12D
            lea EDX,DWORD PTR [RBX-1]
            jb .L_43018c
.L_430278:

            test AL,AL
            mov R11D,DWORD PTR [RSP+16]
            je .L_430203

            mov DWORD PTR [RSP+160],EDX
            jmp .L_430203
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430290:

            mov RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSP+192]
            test RAX,RAX
            je .L_430368

            xor R15D,R15D
.L_4302b0:

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP]
            call RAX

            test AL,AL
            jne .L_430368

            test R15D,R15D
            je .L_4301fe
.L_4302cf:

            mov EBX,DWORD PTR [RSP+160]
            jmp .L_430170
.L_4302db:

            and EDX,32
            jne .L_4301e0

            cmp BYTE PTR [RSP+180],0
            jne .L_430340

            mov EDX,R8D
            and EDX,31
            cmp DX,1
            je .L_4305c0
.L_4302fe:

            test ECX,ECX
            je .L_4302cf

            cmp DWORD PTR [RSP+8],0
            je .L_430313

            movzx ECX,BYTE PTR [RSP+15]
            cmp BYTE PTR [RAX+15],CL
            jne .L_4302cf
.L_430313:

            mov RAX,QWORD PTR [RSP+208]
            mov R15D,2
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSP+192]
            test RAX,RAX
            jne .L_4302b0

            jmp .L_4302cf
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430340:

            cmp BYTE PTR [RSP+181],0
            jne .L_4302fe

            mov EDX,R8D
            and EDX,31
            cmp DX,1
            jne .L_4302fe
.L_430356:

            test R8W,256
            jne .L_4301e0

            jmp .L_4302fe
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430368:

            mov R11D,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+64]
            mov R13,QWORD PTR [RSP]
            mov DWORD PTR [RSP+216],0
            mov EAX,R11D
            mov ECX,DWORD PTR [RDI+RBP*1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            add R13,2
            mov QWORD PTR [RSP+208],R13
            mov EDX,DWORD PTR [RDI+RAX*4]
            mov RDI,QWORD PTR [RSP+24]
            lea R12,QWORD PTR [RAX*4]
            mov RSI,QWORD PTR [RDI+160]
            mov RAX,QWORD PTR [RDI+152]
            mov RDI,QWORD PTR [RSP+40]
            mov EDI,DWORD PTR [RDI+144]
            mov DWORD PTR [RSP],EDI
            and EDI,4294967294
            cmp EDI,4
            je .L_430408

            mov R8,QWORD PTR [RAX+192]
            mov RDI,QWORD PTR [RSP+24]
            call QWORD PTR [RAX+416]

            test EAX,EAX
            je .L_4303fa

            mov RCX,QWORD PTR [RSP+72]
            mov EDX,EAX
            sar EDX,1
            sub EAX,EDX
            add DWORD PTR [RCX+R12*1+4],EDX
            add RBP,RCX
            add DWORD PTR [RBP+4],EAX
            add DWORD PTR [RBP+12],EAX
.L_4303fa:

            mov R11D,EBX
            jmp .L_430207
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430408:

            mov R8,QWORD PTR [RAX+184]
            mov RDI,QWORD PTR [RSP+24]
            call QWORD PTR [RAX+408]

            test EAX,EAX
            mov R11D,EBX
            je .L_430207

            mov RSI,QWORD PTR [RSP+72]
            mov EDX,EAX
            sar EDX,1
            sub EAX,EDX
            add DWORD PTR [RSI+R12*1],EDX
            add RBP,RSI
            add DWORD PTR [RBP],EAX
            add DWORD PTR [RBP+8],EAX
            jmp .L_430207
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430448:

            mov RCX,QWORD PTR [R14+64]
            movzx ESI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            movzx R9D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R8D
            movzx R8D,BYTE PTR [RCX+2]
            shl ESI,16
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            add ESI,R8D
            cmp ESI,65537
            jbe .L_430260

            movzx ESI,BYTE PTR [RCX+12]
            movzx R8D,BYTE PTR [RCX+13]
            shl ESI,8
            add ESI,R8D
            movzx R8D,SI
            add RCX,R8
            test SI,SI
            lea RSI,QWORD PTR [RIP+.L_658640]
            cmove RCX,RSI
            movzx ESI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,R8D
            cmp SI,1
            jne .L_430260

            movzx ESI,BYTE PTR [RCX+2]
            movzx R8D,BYTE PTR [RCX+3]
            mov R10,QWORD PTR [RSP+56]
            shl ESI,8
            add ESI,R8D
            lea R8,QWORD PTR [RCX+R10*1+2]
            lea R10,QWORD PTR [RIP+.L_658640]
            movzx ESI,SI
            cmp ESI,DWORD PTR [RSP+52]
            cmovbe R8,R10
            movzx ESI,BYTE PTR [R8]
            movzx R9D,BYTE PTR [R8+1]
            shl ESI,24
            shl R9D,16
            add ESI,R9D
            movzx R9D,BYTE PTR [R8+2]
            movzx R8D,BYTE PTR [R8+3]
            shl R9D,8
            add ESI,R9D
            add R8D,ESI
            add RCX,R8
            test R8D,R8D
            cmove RCX,R10
            movzx ESI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,R8D
            cmp SI,1
            je .L_4305df

            cmp SI,2
            jne .L_430260

            movzx ESI,BYTE PTR [RCX+2]
            movzx R8D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R8D
            movzx ESI,SI
            lea R11D,DWORD PTR [RSI-1]
            mov DWORD PTR [RSP],ESI
            cmp R11D,-1
            je .L_430260

            add RCX,2
            xor R15D,R15D
            jmp .L_43058f
.L_430567:

            movzx ESI,BYTE PTR [R8+2]
            movzx R8D,BYTE PTR [R8+3]
            shl ESI,8
            add ESI,R8D
            movzx ESI,SI
            cmp EDI,ESI
            jbe .L_430648

            lea R15D,DWORD PTR [R9+1]
.L_430586:

            cmp R15D,R11D
            jg .L_430260
.L_43058f:

            lea R9D,DWORD PTR [R15+R11*1]
            sar R9D,1
            movsxd RSI,R9D
            lea RSI,QWORD PTR [RSI+RSI*2]
            lea R8,QWORD PTR [RCX+RSI*2+2]
            movzx ESI,BYTE PTR [R8]
            movzx R10D,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,R10D
            movzx ESI,SI
            cmp EDI,ESI
            jae .L_430567

            lea R11D,DWORD PTR [R9-1]
            jmp .L_430586
          .byte 0x66
          .byte 0x90
.L_4305c0:

            test R8W,512
            jne .L_4301e0

            cmp BYTE PTR [RSP+181],0
            jne .L_4302fe

            jmp .L_430356
.L_4305df:

            movzx R9D,BYTE PTR [RCX+2]
            movzx ESI,BYTE PTR [RCX+3]
            shl R9D,8
            add R9D,ESI
            movzx R9D,R9W
            sub R9D,1
            cmp R9D,-1
            je .L_430260

            add RCX,2
            xor R10D,R10D
            jmp .L_43061d
.L_43060a:

            je .L_4301b7

            lea R10D,DWORD PTR [R8+1]
.L_430614:

            cmp R10D,R9D
            jg .L_430260
.L_43061d:

            lea R8D,DWORD PTR [R9+R10*1]
            sar R8D,1
            movsxd RSI,R8D
            lea R11,QWORD PTR [RCX+RSI*2+2]
            movzx ESI,BYTE PTR [R11]
            movzx R11D,BYTE PTR [R11+1]
            shl ESI,8
            add ESI,R11D
            movzx ESI,SI
            cmp EDI,ESI
            jns .L_43060a

            lea R9D,DWORD PTR [R8-1]
            jmp .L_430614
.L_430648:

            cmp R9D,DWORD PTR [RSP]
            jb .L_430668

            mov ECX,EDI
            mov ESI,1
.L_430655:

            sub ECX,ESI
            cmp ECX,-1
            jne .L_4301b7

            jmp .L_430260
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430668:

            mov R9D,R9D
            lea RSI,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [RCX+RSI*2+2]
            movzx ESI,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [R8+4]
            movzx R8D,BYTE PTR [R8+5]
            movzx ESI,SI
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            add ECX,EDI
            jmp .L_430655
.L_43069c:

            call __stack_chk_fail@PLT
.L_4306a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4306b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+144]
            and EAX,4294967294
            cmp EAX,4
            je .L_430700
.L_4306dc:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4308cd

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_430700:

            mov EAX,DWORD PTR [RDX+184]
            mov RBX,QWORD PTR [RDX+200]
            mov RBP,QWORD PTR [RDX+216]
            test EAX,EAX
            je .L_4306dc

            sub EAX,1
            mov R15,RSI
            add RBX,16
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R12,QWORD PTR [RIP+.L_430bec]
            lea R14,QWORD PTR [RBP+RAX*4+20]
            lea RAX,QWORD PTR [RSP+20]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_43074d
          .byte 0x66
          .byte 0x90
.L_430740:

            add RBP,20
            add RBX,20
            cmp RBP,R14
            je .L_4306dc
.L_43074d:

            movzx EAX,WORD PTR [RBX]
            mov EDX,EAX
            and EDX,31
            cmp DX,29
            jne .L_430740

            test BYTE PTR [RBX-4],32
            jne .L_430740

            mov ECX,EAX
            sar ECX,8
            cmp ECX,21
            ja .L_430740

            mov EDX,ECX
            movsxd RDX,DWORD PTR [R12+RDX*4]
            add RDX,R12
            jmp RDX
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430780:

            mov R13D,48
            jmp .L_43079a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430790:

            add R13D,1
            cmp R13D,58
            je .L_430740
.L_43079a:

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+20],0
            mov EDX,R13D
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,R15
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_430790
.L_4307cc:

            mov RAX,QWORD PTR [R15+152]
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov EDX,DWORD PTR [RSP+20]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov DWORD PTR [RBP],EAX
            jmp .L_430740
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430800:

            mov EAX,DWORD PTR [R15+136]
            lea ECX,DWORD PTR [RAX*4]
            mov EAX,954437177
            imul ECX
            sar ECX,31
            sar EDX,2
            sub EDX,ECX
            mov DWORD PTR [RBP],EDX
            jmp .L_430740
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430828:

            sar EAX,9
            add EAX,DWORD PTR [R15+136]
            cdq 
            idiv ECX
            mov DWORD PTR [RBP],EAX
            jmp .L_430740
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430840:

            mov EDX,DWORD PTR [RBP]
            mov EAX,EDX
            shr EAX,31
            add EAX,EDX
            sar EAX,1
            mov DWORD PTR [RBP],EAX
            jmp .L_430740
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430858:

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+20],0
            mov EDX,46
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,R15
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_4307cc

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+20],0
            mov EDX,44
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,R15
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_4307cc

            jmp .L_430740
.L_4308cd:

            call __stack_chk_fail@PLT
.L_4308d2:
          .byte 0x66
          .byte 0x90
.L_4308d4:
          .long .L_42ed60-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ecf0-.L_4308d4
          .long .L_42ed70-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ed80-.L_4308d4
          .long .L_42ed70-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ecf0-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ecc0-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ec69-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ed58-.L_4308d4
          .long .L_42ecc0-.L_4308d4
.L_430ad4:
          .long .L_42f5e3-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f5e3-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f57f-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f57f-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f5e0-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f5e0-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f5e0-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f578-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f578-.L_430ad4
          .long .L_42f480-.L_430ad4
          .long .L_42f578-.L_430ad4
          .long .L_42f5e0-.L_430ad4
          .long .L_42f578-.L_430ad4
.L_430b60:
          .long .L_42fe0c-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fe0c-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fdaf-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fdaf-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fe09-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fe09-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fe09-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fda8-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fda8-.L_430b60
          .long .L_42fc58-.L_430b60
          .long .L_42fda8-.L_430b60
          .long .L_42fe09-.L_430b60
          .long .L_42fda8-.L_430b60
.L_430bec:
          .long .L_430740-.L_430bec
          .long .L_430828-.L_430bec
          .long .L_430828-.L_430bec
          .long .L_430828-.L_430bec
          .long .L_430828-.L_430bec
          .long .L_430828-.L_430bec
          .long .L_430828-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430828-.L_430bec
          .long .L_430800-.L_430bec
          .long .L_430740-.L_430bec
          .long .L_430780-.L_430bec
          .long .L_430858-.L_430bec
          .long .L_430840-.L_430bec
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_430c50:

            mov EAX,1
            ret 
.L_430c56:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430c60:

            ret 
.L_430c62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430c70:

            mov EAX,1
            ret 
.L_430c76:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430c80:

            ret 
.L_430c82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430c90:

            mov EAX,1
            ret 
.L_430c96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430ca0:

            ret 
.L_430ca2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430cb0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov RDI,R15
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,72
.L_430cc7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+152]
            mov QWORD PTR [RSP+24],RDX
            lea RCX,QWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSI+160]
            mov EDX,32
            mov DWORD PTR [RSP+44],0
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            mov RDI,RBX
            mov DWORD PTR [RSP+4],EAX
            call .L_402a10

            mov EAX,DWORD PTR [RBX+184]
            mov EDI,DWORD PTR [RBX+144]
            mov RBP,QWORD PTR [RBX+200]
            mov RBX,QWORD PTR [RBX+216]
            test EAX,EAX
            mov DWORD PTR [RSP+20],EDI
            je .L_430eb1

            sub EAX,1
            and EDI,4294967294
            lea R14,QWORD PTR [RSP+52]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R13,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+16],EDI
            lea RAX,QWORD PTR [RBP+RAX*4+20]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_430d60:

            mov EAX,DWORD PTR [RSP+4]
            mov EDX,DWORD PTR [RBP]
            test EAX,EAX
            jne .L_430fe8
.L_430d6f:

            mov DWORD PTR [RBP],0
            mov RAX,QWORD PTR [R15+152]
            mov RCX,RBP
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            cmp DWORD PTR [RSP+16],4
            mov EDX,DWORD PTR [RBP]
            je .L_430ef0

            mov DWORD PTR [RBX],0
            mov RAX,QWORD PTR [R15+152]
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RAX+160]
            call QWORD PTR [RAX+384]

            mov DWORD PTR [RBX+4],EAX
            mov R12D,DWORD PTR [RBP]
            mov R8,R14
            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+52],0
            mov RCX,R13
            mov DWORD PTR [RSP+48],0
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov EDX,R12D
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_430e90

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+52],0
            mov R8,R14
            mov DWORD PTR [RSP+48],0
            mov RSI,QWORD PTR [R15+160]
            mov RCX,R13
            mov EDX,R12D
            mov RDI,R15
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_430e90

            mov RAX,QWORD PTR [R15+152]
            mov EDX,R12D
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [R15+140]
            add ECX,DWORD PTR [RSP+52]
            shr EDX,31
            add EAX,EDX
            sar EAX,1
            add EAX,DWORD PTR [RSP+48]
            mov EDX,ECX
            mov DWORD PTR [RSP+52],ECX
            mov DWORD PTR [RSP+48],EAX
            jmp .L_430e98
          .byte 0x90
.L_430e90:

            mov EAX,DWORD PTR [RSP+48]
            mov EDX,DWORD PTR [RSP+52]
.L_430e98:

            sub DWORD PTR [RBX+8],EAX
            sub DWORD PTR [RBX+12],EDX
.L_430e9e:

            add RBP,20
            add RBX,20
            cmp RBP,QWORD PTR [RSP+8]
            jne .L_430d60
.L_430eb1:

            mov EAX,DWORD PTR [RSP+20]
            and EAX,4294967293
            cmp EAX,5
            je .L_4310b8
.L_430ec1:

            mov RDI,QWORD PTR [RSP+56]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_4311b3

            add RSP,72
.L_430ede:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430ef0:

            mov RAX,QWORD PTR [R15+152]
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov DWORD PTR [RBX+4],0
            mov DWORD PTR [RBX],EAX
            mov R8,R14
            mov R12D,DWORD PTR [RBP]
            mov RAX,QWORD PTR [R15+152]
            mov RCX,R13
            mov DWORD PTR [RSP+52],0
            mov DWORD PTR [RSP+48],0
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov R9,QWORD PTR [RAX+168]
            mov EDX,R12D
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_430e90

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+52],0
            mov R8,R14
            mov DWORD PTR [RSP+48],0
            mov RSI,QWORD PTR [R15+160]
            mov RCX,R13
            mov EDX,R12D
            mov RDI,R15
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_430e90

            mov RAX,QWORD PTR [R15+152]
            mov EDX,R12D
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov EDI,DWORD PTR [RSP+48]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+52]
            sub EDX,DWORD PTR [R15+140]
            sar EAX,1
            sub EDI,EAX
            mov EAX,EDI
            mov DWORD PTR [RSP+48],EDI
            mov DWORD PTR [RSP+52],EDX
            jmp .L_430e98

            nop
            nop
            nop
            nop
            nop
.L_430fe8:

            mov EAX,EDX
            shr EAX,16
            test EAX,EAX
            jne .L_431068

            mov EAX,EDX
            shr EAX,8
            cmp EAX,23
            je .L_431150

            jbe .L_431090

            cmp EAX,32
            je .L_431100

            jbe .L_4310d0

            cmp EAX,254
            je .L_431168

            cmp EAX,255
            jne .L_430d6f

            lea EAX,DWORD PTR [RDX-65520]
            cmp EAX,8
            setbe AL
            movzx EAX,AL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431040:

            test EAX,EAX
            je .L_430d6f
.L_431048:

            mov EAX,DWORD PTR [RSP+44]
            mov DWORD PTR [RBP],EAX
            mov DWORD PTR [RBX],0
            mov DWORD PTR [RBX+4],0
            jmp .L_430e9e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431068:

            cmp EAX,1
            je .L_431190

            cmp EAX,14
            jne .L_430d6f

            lea EAX,DWORD PTR [RDX-917504]
            cmp EAX,4095
            setbe AL
            movzx EAX,AL
            jmp .L_431040
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431090:

            cmp EAX,3
            je .L_4310f0

            cmp EAX,6
            je .L_431138

            test EAX,EAX
            jne .L_430d6f

            xor EAX,EAX
            cmp EDX,173
            sete AL
            jmp .L_431040
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4310b8:

            mov RDI,QWORD PTR [RSP+24]
            call .L_403c10

            jmp .L_430ec1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4310d0:

            cmp EAX,24
            jne .L_430d6f

            lea EAX,DWORD PTR [RDX-6155]
            cmp EAX,3
            setbe AL
            movzx EAX,AL
            jmp .L_431040
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4310f0:

            xor EAX,EAX
            cmp EDX,847
            sete AL
            jmp .L_431040
.L_431100:

            lea EAX,DWORD PTR [RDX-8203]
            cmp EAX,4
            jbe .L_431048

            lea EAX,DWORD PTR [RDX-8234]
            cmp EAX,4
            jbe .L_431048

            lea EAX,DWORD PTR [RDX-8288]
            cmp EAX,15
            setbe AL
            movzx EAX,AL
            jmp .L_431040
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431138:

            xor EAX,EAX
            cmp EDX,1564
            sete AL
            jmp .L_431040
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431150:

            lea EAX,DWORD PTR [RDX-6068]
            cmp EAX,1
            setbe AL
            movzx EAX,AL
            jmp .L_431040
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431168:

            lea EAX,DWORD PTR [RDX-65024]
            cmp EAX,15
            setbe AL
            cmp EDX,65279
            sete CL
            or EAX,ECX
            movzx EAX,AL
            jmp .L_431040
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431190:

            lea EAX,DWORD PTR [RDX-113824]
            cmp EAX,3
            jbe .L_431048

            lea EAX,DWORD PTR [RDX-119155]
            cmp EAX,7
            setbe AL
            movzx EAX,AL
            jmp .L_431040
.L_4311b3:

            call __stack_chk_fail@PLT
.L_4311b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4311c0:

            sub RSP,8
            mov EDI,ESI
            mov ECX,19
            mov ESI,1
            call g_unichar_fully_decompose@PLT

            add RSP,8
            ret 
.L_4311da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4311e0:

            mov EDI,ESI
            mov RSI,RDX
            mov RDX,RCX
            jmp g_unichar_decompose@PLT
.L_4311ed:

            nop
            nop
            nop
.L_4311f0:

            mov EDI,ESI
            mov ESI,EDX
            mov RDX,RCX
            jmp g_unichar_compose@PLT
.L_4311fc:

            nop
            nop
            nop
            nop
.L_431200:

            sub RSP,8
            mov EDI,ESI
            call g_unichar_get_script@PLT

            add RSP,8
            mov EDI,EAX
            jmp g_unicode_script_to_iso15924@PLT
.L_431216:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431220:

            sub RSP,24
            mov EDI,ESI
            mov DWORD PTR [RSP+12],ESI
            lea RSI,QWORD PTR [RSP+12]
            call g_unichar_get_mirror_char@PLT

            mov EAX,DWORD PTR [RSP+12]
            add RSP,24
            ret 
.L_43123d:

            nop
            nop
            nop
.L_431240:

            mov EDI,ESI
            jmp g_unichar_type@PLT
.L_431247:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431250:

            sub RSP,8
            mov EDI,ESI
            call g_unichar_iswide@PLT

            test EAX,EAX
            setne AL
            add RSP,8
            movzx EAX,AL
            add EAX,1
            ret 
.L_43126b:

            nop
            nop
            nop
            nop
            nop
.L_431270:

            mov EDI,ESI
            jmp g_unichar_combining_class@PLT
.L_431277:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431280:

            jmp g_unicode_script_to_iso15924@PLT
.L_431285:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431290:

            jmp g_unicode_script_from_iso15924@PLT
.L_431295:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4312a0:

            lea RAX,QWORD PTR [RIP+.L_657ca0]
            ret 
.L_4312a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4312b0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_4312b9:

            mov RSI,RSP
            mov QWORD PTR [RSP],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call g_bytes_get_data@PLT

            mov RDI,RBX
            mov RBP,RAX
            call g_bytes_ref@PLT

            mov R8,QWORD PTR [RIP+g_bytes_unref@GOTPCREL]
            mov ESI,DWORD PTR [RSP]
            mov EDX,1
            mov RCX,RAX
            mov RDI,RBP
            call .L_401a90

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            jne .L_431315

            add RSP,24
.L_431312:

            pop RBX
            pop RBP
            ret 
.L_431315:

            call __stack_chk_fail@PLT
.L_43131a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_431320:

            push RBX

            mov ESI,8312
            mov EDI,1
            lea RBX,QWORD PTR [RIP+.L_431d80]
            call calloc@PLT

            test RAX,RAX
            je .L_43139a

            lea RDI,QWORD PTR [RAX+8]
            mov RBX,RAX
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            call pthread_mutex_init@PLT

            cmp DWORD PTR [RBX],-1
            pxor XMM0,XMM0
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            je .L_43139a

            lea RDI,QWORD PTR [RBX+124]
            mov EAX,EBX
            and RDI,-8
            mov BYTE PTR [RBX+112],0
            mov QWORD PTR [RBX+116],0
            sub EAX,EDI
            mov QWORD PTR [RBX+8300],0
            lea ECX,DWORD PTR [RAX+8308]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]
.L_43139a:

            mov RAX,RBX
            pop RBX

            ret 
.L_43139f:

            nop
.L_4313a0:

            lea RAX,QWORD PTR [RIP+.L_431d80]
            ret 
.L_4313a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4313b0:

            test RDI,RDI
            je .L_4313c4

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4313c4

            test EAX,EAX
            jle .L_4313d0

            lock add DWORD PTR [RDI],1
.L_4313c4:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4313d0:

            lea RCX,QWORD PTR [RIP+.L_431d40]
            lea RSI,QWORD PTR [RIP+.L_431b5e]
            lea RDI,QWORD PTR [RIP+.L_431b73]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_4313f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431400:

            test RDI,RDI
            je .L_431430

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_431430

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_431438

            lock sub DWORD PTR [RDI],1
            je .L_431460

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431430:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431438:

            lea RCX,QWORD PTR [RIP+.L_431d00]
            lea RSI,QWORD PTR [RIP+.L_431b5e]
            lea RDI,QWORD PTR [RIP+.L_431b73]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431460:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_4314b0

            mov RDI,QWORD PTR [RDI+56]
            cmp RDI,R12
            je .L_431483

            call free@PLT
.L_431483:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_431493:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RDI,RBX
            pop RBX
.L_43149f:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4314b0:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_4314fe
.L_4314bf:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_4314b0

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_4314bf
.L_4314fe:

            mov RDI,QWORD PTR [RBX+56]
            cmp RDI,R12
            je .L_43150c

            call free@PLT
.L_43150c:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_431493
.L_431529:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431530:

            test RDI,RDI
            je .L_431558

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_431558

            sub RSP,8
            test EAX,EAX
            jle .L_431560

            add RDI,8
            call .L_4068c0

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431558:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431560:

            lea RCX,QWORD PTR [RIP+.L_431c20]
            lea RSI,QWORD PTR [RIP+.L_431b5e]
            lea RDI,QWORD PTR [RIP+.L_431b73]
            mov EDX,187
            call __assert_fail@PLT
.L_43157f:

            nop
.L_431580:

            test RDI,RDI
            je .L_4315c8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4315c8

            test EAX,EAX
            jle .L_4315a0

            add RDI,8
            jmp .L_406b70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4315a0:

            lea RCX,QWORD PTR [RIP+.L_431ba0]
            lea RSI,QWORD PTR [RIP+.L_431b5e]
            lea RDI,QWORD PTR [RIP+.L_431b73]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4315c8:

            xor EAX,EAX
            ret 
.L_4315cb:

            nop
            nop
            nop
            nop
            nop
.L_4315d0:

            movzx EAX,BYTE PTR [RDI+112]
            xor EAX,1
            movzx EAX,AL
            ret 
.L_4315db:

            nop
            nop
            nop
            nop
            nop
.L_4315e0:

            cmp DWORD PTR [RDI],-1
            mov RAX,RDI
            je .L_431617

            mov BYTE PTR [RDI+112],0
            mov QWORD PTR [RDI+116],0
            lea RDI,QWORD PTR [RDI+124]
            mov QWORD PTR [RDI+8176],0
            and RDI,-8
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+8308]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]
.L_431617:

            ret 
.L_431619:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431620:

            lea RAX,QWORD PTR [RDI+116]
            add RDI,8308
            jmp .L_431639

            nop
            nop
            nop
.L_431630:

            add RAX,4
            cmp RAX,RDI
            je .L_431648
.L_431639:

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            je .L_431630

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431648:

            mov EAX,1
            ret 
.L_43164e:

            nop
            nop
.L_431650:

            xor EAX,EAX
            cmp ESI,65535
            ja .L_431672

            mov EAX,ESI
            mov EDX,1
            mov ECX,ESI
            shr EAX,5
            shl EDX,CL
            test DWORD PTR [RDI+RAX*4+116],EDX
            setne AL
            movzx EAX,AL
.L_431672:

            ret 
.L_431674:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431680:

            cmp ESI,65535
            ja .L_43168e

            cmp BYTE PTR [RDI+112],0
            je .L_431690
.L_43168e:

            ret 
.L_431690:

            mov EAX,ESI
            mov EDX,1
            mov ECX,ESI
            shr EAX,5
            shl EDX,CL
            or DWORD PTR [RDI+RAX*4+116],EDX
            ret 
.L_4316a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4316b0:

            cmp BYTE PTR [RDI+112],0
            mov ECX,ESI
            jne .L_4316e5

            add EDX,1
            cmp ESI,EDX
            jae .L_4316e5

            mov R8D,1
            nop
            nop
            nop
.L_4316c8:

            cmp ECX,65535
            ja .L_4316de

            mov EAX,ECX
            mov ESI,R8D
            shr EAX,5
            shl ESI,CL
            or DWORD PTR [RDI+RAX*4+116],ESI
.L_4316de:

            add ECX,1
            cmp ECX,EDX
            jne .L_4316c8
.L_4316e5:

            ret 
.L_4316e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4316f0:

            cmp BYTE PTR [RDI+112],0
            jne .L_4316fe

            cmp ESI,65535
            jbe .L_431700
.L_4316fe:

            ret 
.L_431700:

            mov EDX,ESI
            mov EAX,1
            mov ECX,ESI
            shr EDX,5
            shl EAX,CL
            not EAX
            and DWORD PTR [RDI+RDX*4+116],EAX
            ret 
.L_431715:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431720:

            cmp BYTE PTR [RDI+112],0
            mov ECX,ESI
            jne .L_431757

            add EDX,1
            cmp ESI,EDX
            jae .L_431757

            mov R8D,1
            nop
            nop
            nop
.L_431738:

            cmp ECX,65535
            ja .L_431750

            mov EAX,ECX
            mov ESI,R8D
            shr EAX,5
            shl ESI,CL
            not ESI
            and DWORD PTR [RDI+RAX*4+116],ESI
.L_431750:

            add ECX,1
            cmp EDX,ECX
            jne .L_431738
.L_431757:

            ret 
.L_431759:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431760:

            mov EAX,116
            jmp .L_43177c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431770:

            add RAX,4
            cmp RAX,8308
            je .L_431790
.L_43177c:

            mov EDX,DWORD PTR [RSI+RAX*1]
            cmp DWORD PTR [RDI+RAX*1],EDX
            je .L_431770

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431790:

            mov EAX,1
            ret 
.L_431796:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4317a0:

            cmp BYTE PTR [RDI+112],0
            jne .L_4317c2

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_4317b0:

            mov EDX,DWORD PTR [RSI+RAX*1]
            mov DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_4317b0
.L_4317c2:

            ret 
.L_4317c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4317d0:

            cmp BYTE PTR [RDI+112],0
            jne .L_4317f2

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_4317e0:

            mov EDX,DWORD PTR [RSI+RAX*1]
            or DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_4317e0
.L_4317f2:

            ret 
.L_4317f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431800:

            cmp BYTE PTR [RDI+112],0
            jne .L_431822

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_431810:

            mov EDX,DWORD PTR [RSI+RAX*1]
            and DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_431810
.L_431822:

            ret 
.L_431824:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431830:

            cmp BYTE PTR [RDI+112],0
            jne .L_431854

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_431840:

            mov EDX,DWORD PTR [RSI+RAX*1]
            not EDX
            and DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_431840
.L_431854:

            ret 
.L_431856:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431860:

            cmp BYTE PTR [RDI+112],0
            jne .L_431882

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_431870:

            mov EDX,DWORD PTR [RSI+RAX*1]
            xor DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_431870
.L_431882:

            ret 
.L_431884:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431890:

            cmp BYTE PTR [RDI+112],0
            jne .L_4318b3

            lea RAX,QWORD PTR [RDI+116]
            lea RDX,QWORD PTR [RDI+8308]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4318a8:

            not DWORD PTR [RAX]
            add RAX,4
            cmp RAX,RDX
            jne .L_4318a8
.L_4318b3:

            ret 
.L_4318b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4318c0:

            push R12
            lea R12,QWORD PTR [RDI+8308]
            push RBP
            push RBX
            lea RBX,QWORD PTR [RDI+116]
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4318d8:

            mov EDI,DWORD PTR [RBX]
            add RBX,4
            call __popcountdi2@PLT

            add EBP,EAX
            cmp RBX,R12
            jne .L_4318d8

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_4318f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431900:

            xor ECX,ECX
.L_431902:

            mov EDX,DWORD PTR [RDI+RCX*4+116]
            mov ESI,ECX
            test EDX,EDX
            jne .L_431920
.L_43190c:

            add RCX,1
            cmp RCX,2048
            jne .L_431902

            mov EAX,4294967295
            ret 
          .byte 0x90
.L_431920:

            xor EAX,EAX
            jmp .L_431930
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431928:

            add EAX,1
            cmp EAX,32
            je .L_43190c
.L_431930:

            bt EDX,EAX
            jae .L_431928

            shl ESI,5
            add EAX,ESI
            ret 
.L_43193b:

            nop
            nop
            nop
            nop
            nop
.L_431940:

            add RDI,8304
            mov ECX,2048
.L_43194c:

            mov EDX,DWORD PTR [RDI]
            test EDX,EDX
            jne .L_431968
.L_431952:

            sub RDI,4
            sub ECX,1
            jne .L_43194c

            mov EAX,4294967295
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431968:

            mov EAX,32
            jmp .L_431974
          .byte 0x90
.L_431970:

            test EAX,EAX
            je .L_431952
.L_431974:

            sub EAX,1
            bt EDX,EAX
            jae .L_431970

            add ECX,134217727
            shl ECX,5
            add EAX,ECX
            ret 
.L_431988:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431990:

            mov ECX,DWORD PTR [RSI]
            cmp ECX,-1
            je .L_4319f0

            add ECX,1
            cmp ECX,65535
            ja .L_4319db

            mov EAX,1
            shl EAX,CL
            mov EDX,EAX
            mov EAX,ECX
            shr EAX,5
            test DWORD PTR [RDI+RAX*4+116],EDX
            jne .L_4319e8

            mov R8D,1
            jmp .L_4319d0
          .byte 0x66
          .byte 0x90
.L_4319c0:

            mov EAX,ECX
            mov EDX,R8D
            shr EAX,5
            shl EDX,CL
            test DWORD PTR [RDI+RAX*4+116],EDX
            jne .L_4319e8
.L_4319d0:

            add ECX,1
            cmp ECX,65536
            jne .L_4319c0
.L_4319db:

            mov DWORD PTR [RSI],4294967295
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4319e8:

            mov DWORD PTR [RSI],ECX
            mov EAX,1
            ret 
.L_4319f0:

            xor ECX,ECX
.L_4319f2:

            mov EDX,DWORD PTR [RDI+RCX*4+116]
            mov R8D,ECX
            test EDX,EDX
            jne .L_431a10
.L_4319fd:

            add RCX,1
            cmp RCX,2048
            jne .L_4319f2

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431a10:

            xor EAX,EAX
            jmp .L_431a20
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431a18:

            add EAX,1
            cmp EAX,32
            je .L_4319fd
.L_431a20:

            bt EDX,EAX
            jae .L_431a18

            shl R8D,5
            add EAX,R8D
            mov DWORD PTR [RSI],EAX
            mov EAX,1
            ret 
.L_431a34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431a40:

            mov ECX,DWORD PTR [RDX]
            cmp ECX,-1
            je .L_431b38

            add ECX,1
            cmp ECX,65535
            ja .L_431a95

            mov EAX,1
            shl EAX,CL
            mov R8D,EAX
            mov EAX,ECX
            shr EAX,5
            test DWORD PTR [RDI+RAX*4+116],R8D
            jne .L_431ad0

            mov R9D,1
            jmp .L_431a8a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431a78:

            mov EAX,ECX
            mov R8D,R9D
            shr EAX,5
            shl R8D,CL
            test DWORD PTR [RDI+RAX*4+116],R8D
            jne .L_431ad0
.L_431a8a:

            add ECX,1
            cmp ECX,65536
            jne .L_431a78
.L_431a95:

            mov DWORD PTR [RSI],4294967295
            xor EAX,EAX
            mov DWORD PTR [RDX],4294967295
            ret 
.L_431aa4:

            xor EAX,EAX
            jmp .L_431abc
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431ab0:

            add EAX,1
            cmp EAX,32
            je .L_431b4c
.L_431abc:

            bt R8D,EAX
            jae .L_431ab0

            shl ECX,5
            add ECX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ad0:

            mov DWORD PTR [RSI],ECX
            mov R8D,1
            mov DWORD PTR [RDX],ECX
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ae0:

            add ECX,1
            cmp ECX,65536
            je .L_431b1b

            mov EAX,ECX
            mov ESI,R8D
            shr EAX,5
            shl ESI,CL
            test DWORD PTR [RDI+RAX*4+116],ESI
            je .L_431b10

            jmp .L_431b28
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431b00:

            mov EAX,ECX
            mov ESI,R8D
            shr EAX,5
            shl ESI,CL
            test DWORD PTR [RDI+RAX*4+116],ESI
            jne .L_431b28
.L_431b10:

            add ECX,1
            cmp ECX,65536
            jne .L_431b00
.L_431b1b:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431b28:

            mov EAX,DWORD PTR [RDX]
            add EAX,1
            cmp EAX,ECX
            jne .L_431b1b

            mov DWORD PTR [RDX],ECX
            jmp .L_431ae0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431b38:

            xor R9D,R9D
.L_431b3b:

            mov R8D,DWORD PTR [RDI+R9*4+116]
            mov ECX,R9D
            test R8D,R8D
            jne .L_431aa4
.L_431b4c:

            add R9,1
            cmp R9,2048
            jne .L_431b3b

            jmp .L_431a95
.L_431b5e:
          .string "hb-object-private.hh"
.L_431b73:
          .string "hb_object_is_valid (obj)"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431ba0:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_set_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 6
.L_431c20:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_set_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 12
.L_431d00:
          .string "bool hb_object_destroy(Type*) [with Type = hb_set_t]"
          .zero 11
.L_431d40:
          .string "Type* hb_object_reference(Type*) [with Type = hb_set_t]"
          .zero 8
.L_431d80:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433e00:

            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,EDI
            sete AL
            ret 
.L_433e15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433e20:

            mov EAX,ESI
            push R15
            push R14
            lea RAX,QWORD PTR [RAX+RAX*4]
            push R13
            push R12
            push RBP
            push RBX
            lea RBP,QWORD PTR [RDI+RAX*4]
            sub RSP,8
.L_433e38:

            movsx EAX,WORD PTR [RBP+16]
            test EAX,EAX
            je .L_433e98

            movzx R12D,BYTE PTR [RBP+18]
            lea R14D,DWORD PTR [RSI+RAX*1]
            xor EAX,EAX
            mov WORD PTR [RBP+16],AX
            mov EBX,ESI
            mov R13D,EDX
            mov ESI,R14D
            mov R15,RDI
            call .L_433e20

            mov EDX,R12D
            and EDX,1
            and R12D,2
            setne AL
            cmp DL,AL
            je .L_433f63

            mov EDI,R14D
            test R12B,R12B
            lea RAX,QWORD PTR [RDI+RDI*4]
            lea RAX,QWORD PTR [R15+RAX*4]
            je .L_433eb0

            and R13D,4294967294
            cmp R13D,4
            je .L_433f58

            mov EAX,DWORD PTR [RAX+8]
            add DWORD PTR [RBP+8],EAX
.L_433e98:

            add RSP,8
.L_433e9c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433eb0:

            mov EDX,DWORD PTR [RAX+8]
            add EDX,DWORD PTR [RBP+8]
            mov DWORD PTR [RBP+8],EDX
            mov ECX,DWORD PTR [RAX+12]
            add ECX,DWORD PTR [RBP+12]
            cmp EBX,R14D
            mov DWORD PTR [RBP+12],ECX
            jbe .L_433f82

            and R13D,4294967293
            cmp R13D,4
            je .L_433f20

            lea EAX,DWORD PTR [R14+1]
            lea ESI,DWORD PTR [RBX+1]
            cmp ESI,EAX
            jbe .L_433e98

            sub EBX,1
            lea RSI,QWORD PTR [RAX+RAX*4]
            sub EBX,R14D
            add RAX,RBX
            lea RSI,QWORD PTR [R15+RSI*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R15+RAX*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
.L_433f00:

            add EDX,DWORD PTR [RSI]
            add RSI,20
            mov DWORD PTR [RBP+8],EDX
            add ECX,DWORD PTR [RSI-16]
            cmp RSI,RAX
            mov DWORD PTR [RBP+12],ECX
            jne .L_433f00

            jmp .L_433e98
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433f20:

            sub EBX,1
            sub EBX,R14D
            add RDI,RBX
            lea RSI,QWORD PTR [RDI+RDI*4]
            lea RSI,QWORD PTR [R15+RSI*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
.L_433f38:

            sub EDX,DWORD PTR [RAX]
            add RAX,20
            mov DWORD PTR [RBP+8],EDX
            sub ECX,DWORD PTR [RAX-16]
            cmp RSI,RAX
            mov DWORD PTR [RBP+12],ECX
            jne .L_433f38

            jmp .L_433e98
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433f58:

            mov EAX,DWORD PTR [RAX+12]
            add DWORD PTR [RBP+12],EAX
            jmp .L_433e98
.L_433f63:

            lea RCX,QWORD PTR [RIP+.L_44ae40]
            lea RSI,QWORD PTR [RIP+.L_439ca1]
            lea RDI,QWORD PTR [RIP+.L_439ce0]
            mov EDX,1567
            call __assert_fail@PLT
.L_433f82:

            lea RCX,QWORD PTR [RIP+.L_44ae40]
            lea RSI,QWORD PTR [RIP+.L_439ca1]
            lea RDI,QWORD PTR [RIP+.L_439cbc]
            mov EDX,1581
            call __assert_fail@PLT
.L_433fa1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433fb0:

            push R12
            push RBP
            mov R12,-1
            push RBX
            mov RBP,RDI
.L_433fbe:

            mfence 
            mov RBX,QWORD PTR [RBP+160]
            test RBX,RBX
            je .L_433fe0

            sub RBX,1
            cmp RBX,-3
            setbe AL
.L_433fd8:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433fe0:

            mov RDI,RBP
            call .L_412660

            test RAX,RAX
            mov RDI,RAX
            lea RDX,QWORD PTR [RBP+160]
            je .L_434028

            mov RAX,RBX
            lock cmpxchg QWORD PTR [RDX],RDI
            lea RAX,QWORD PTR [RDI-1]
            sete CL
            cmp RAX,-3
            setbe DL
            test CL,CL
            mov EAX,EDX
            jne .L_433fd8

            cmp RDI,1
            je .L_433fbe

            test DL,DL
            je .L_433fbe

            call .L_412670

            jmp .L_433fbe
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434028:

            lock cmpxchg QWORD PTR [RDX],R12
            jne .L_433fbe

            xor EAX,EAX
            jmp .L_433fd8
.L_434033:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434040:

            cmp ESI,1196445523
            push RBX
            mov RBX,RDI
            je .L_434080

            cmp ESI,1196643650
            lea RAX,QWORD PTR [RIP+.L_658760]
            jne .L_43406e

            call .L_433fb0

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_658760]
            jne .L_434070
.L_43406b:

            mov RAX,RDX
.L_43406e:

            pop RBX
            ret 
.L_434070:

            mov RAX,QWORD PTR [RBX+160]
            mov RDX,QWORD PTR [RAX+32]
            mov RAX,RDX
            jmp .L_43406e
.L_434080:

            call .L_433fb0

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_658760]
            je .L_43406b

            mov RAX,QWORD PTR [RBX+160]
            mov RDX,QWORD PTR [RAX+40]
            mov RAX,RDX
            jmp .L_43406e
.L_4340a0:

            movzx ECX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl ECX,8
            add ECX,EAX
            xor EAX,EAX
            movzx R9D,CX
            lea ECX,DWORD PTR [R9-1]
            cmp ECX,2
            jbe .L_4340c0
.L_4340bc:

            ret 
          .byte 0x66
          .byte 0x90
.L_4340c0:

            movzx ECX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            cmp ESI,ECX
            jb .L_4340bc

            movzx R8D,BYTE PTR [RDI+2]
            movzx R10D,BYTE PTR [RDI+3]
            shl R8D,8
            add R8D,R10D
            movzx R8D,R8W
            cmp ESI,R8D
            ja .L_4340bc

            push RBP
.L_4340f0:

            mov R11D,ESI
            push RBX
.L_4340f4:

            mov EBX,4
            sub R11D,ECX
            mov R8D,1
            sub EBX,R9D
            mov EAX,R11D
            mov R10D,16
            mov ECX,EBX
            shr EAX,CL
            mov ECX,R9D
            lea RBP,QWORD PTR [RDI+RAX*2+6]
            mov EAX,R8D
            mov EDI,65535
            shl EAX,CL
            mov ECX,R10D
            sub ECX,EAX
            movzx EAX,BYTE PTR [RBP]
            shr EDI,CL
            movzx ECX,BYTE PTR [RBP+1]
            shl EAX,8
            add EAX,ECX
            mov ECX,EBX
            shl R8D,CL
            mov ECX,R9D
            movzx EAX,AX
            sub R8D,1
            and R8D,R11D
            add R8D,1
            shl R8D,CL
            mov ECX,R10D
            sub ECX,R8D
            lea R8D,DWORD PTR [RDI+1]
            shr EAX,CL
            and EAX,EDI
            not EDI
            shr R8D,1
            mov ECX,EAX
            lea EAX,DWORD PTR [RAX+RDI*1]
            cmp ECX,R8D
            cmovb EAX,ECX
            test EAX,EAX
            je .L_434183

            movsxd RDX,EDX
            cdqe 
            mov ESI,ESI
            imul RAX,RDX
            cqo 
            idiv RSI
.L_434183:

            pop RBX
.L_434184:

            pop RBP
            ret 
.L_434186:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434190:

            mov RSI,QWORD PTR [RDI+8]
            mov EDX,DWORD PTR [RDI+16]
            movzx EAX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp EDX,EAX
            jae .L_4341b7

            lea RCX,QWORD PTR [RSI+RDX*2+4]
.L_4341b7:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            ret 
.L_4341c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4341d0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_4341e1:

            mov R14,QWORD PTR [RDI+24]
            mov QWORD PTR [RSP+8],RDX
            xor EDX,EDX
            mov DWORD PTR [RSP+16],ESI
            cmp BYTE PTR [R14+177],0
            mov EAX,DWORD PTR [R14+180]
            je .L_43420e

            mov ESI,DWORD PTR [R14+188]
            mov EDX,ESI
            sub EDX,EAX
            mov EAX,ESI
.L_43420e:

            add EAX,R9D
            mov DWORD PTR [RSP+40],EAX
            mov EAX,DWORD PTR [RSP+16]
            test EAX,EAX
            je .L_434243

            mov EBX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            lea ESI,DWORD PTR [RBX-1]
            mov RAX,RDI
            lea RSI,QWORD PTR [RDI+RSI*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434238:

            add DWORD PTR [RAX],EDX
            add RAX,4
            cmp RAX,RSI
            jne .L_434238
.L_434243:

            test ECX,ECX
            je .L_4344a1

            cmp BYTE PTR [R14+176],0
            jne .L_4344a1

            lea EAX,DWORD PTR [RCX-1]
            mov R13,R8
            lea RAX,QWORD PTR [R8+RAX*4]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434270:

            movzx EBX,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            shl EBX,8
            add EBX,EAX
            movzx R8D,BX
            cmp R8D,DWORD PTR [RSP+16]
            jae .L_434488

            test R8D,R8D
            jne .L_4342b2

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,DWORD PTR [R15+208]
            je .L_434488
.L_4342b2:

            mov RAX,QWORD PTR [RSP+8]
            movzx EBX,BX
            mov RDI,R14
            mov DWORD PTR [RSP+20],R8D
            lea RBP,QWORD PTR [RAX+RBX*4]
            mov ESI,DWORD PTR [RBP]
            call .L_402d50

            cmp BYTE PTR [R14+177],0
            mov R12D,DWORD PTR [R14+180]
            mov R8D,DWORD PTR [RSP+20]
            mov R9D,R12D
            je .L_4342ee

            mov R9D,DWORD PTR [R14+188]
.L_4342ee:

            mov EAX,DWORD PTR [R14+184]
            movzx ESI,BYTE PTR [R13+2]
            mov EDI,DWORD PTR [R15+56]
            mov DWORD PTR [RSP+36],R9D
            mov DWORD PTR [RSP+32],R8D
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [R13+3]
            shl ESI,8
            add ESI,EAX
            test EDI,EDI
            movzx ESI,SI
            je .L_434488

            mov RAX,QWORD PTR [R15+48]
            test RAX,RAX
            je .L_434488

            sub EDI,1
            mov DWORD PTR [R15+56],EDI
            mov RDI,R15
            call RAX

            add DWORD PTR [R15+56],1
            test AL,AL
            je .L_434488

            cmp BYTE PTR [R14+177],0
            mov ESI,DWORD PTR [R14+180]
            mov R8D,DWORD PTR [RSP+32]
            mov R9D,DWORD PTR [RSP+36]
            mov EAX,ESI
            je .L_43436b

            mov EAX,DWORD PTR [R14+188]
.L_43436b:

            mov EDX,DWORD PTR [R14+184]
            add EDX,R12D
            sub EDX,ESI
            sub EDX,DWORD PTR [RSP+20]
            mov R12D,EDX
            sub R12D,R9D
            add R12D,EAX
            je .L_434488

            add DWORD PTR [RSP+40],R12D
            mov EAX,DWORD PTR [RSP+40]
            cmp DWORD PTR [RBP],EAX
            jae .L_4344ea

            test R12D,R12D
            lea R9D,DWORD PTR [R8+1]
            jle .L_4344c8

            mov EAX,DWORD PTR [RSP+16]
            lea R10D,DWORD PTR [R12+RAX*1]
            cmp R10D,64
            ja .L_4344a1

            lea R11D,DWORD PTR [R12+R9*1]
            mov EAX,R9D
.L_4343c2:

            mov ECX,DWORD PTR [RSP+16]
            mov EDI,EAX
            mov DWORD PTR [RSP+44],R10D
            mov DWORD PTR [RSP+36],R11D
            mov DWORD PTR [RSP+32],R9D
            mov DWORD PTR [RSP+20],R8D
            sub ECX,EAX
            movsxd RAX,R12D
            lea RDX,QWORD PTR [RCX*4]
            mov RCX,QWORD PTR [RSP+8]
            add RAX,RDI
            lea RSI,QWORD PTR [RCX+RDI*4]
            lea RDI,QWORD PTR [RCX+RAX*4]
            call memmove@PLT

            mov R9D,DWORD PTR [RSP+32]
            mov R11D,DWORD PTR [RSP+36]
            mov R10D,DWORD PTR [RSP+44]
            mov R8D,DWORD PTR [RSP+20]
            cmp R9D,R11D
            mov DWORD PTR [RSP+16],R10D
            jae .L_434454

            mov EAX,4294967294
            mov RCX,QWORD PTR [RSP+8]
            sub R9,RBX
            sub EAX,R8D
            add EAX,R11D
            add RAX,RBX
            lea RDX,QWORD PTR [RCX+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434440:

            mov EAX,DWORD PTR [RBP]
            add EAX,1
            mov DWORD PTR [RBP+R9*4],EAX
            add RBP,4
            cmp RDX,RBP
            jne .L_434440
.L_434454:

            cmp R10D,R11D
            jbe .L_434488

            sub R10D,R11D
            mov RCX,QWORD PTR [RSP+8]
            mov ESI,R11D
            lea EDX,DWORD PTR [R10-1]
            add RDX,RSI
            lea RAX,QWORD PTR [RCX+RSI*4]
            lea RDX,QWORD PTR [RCX+RDX*4+4]
            nop
            nop
            nop
            nop
.L_434478:

            add DWORD PTR [RAX],R12D
            add RAX,4
            cmp RDX,RAX
            jne .L_434478

            nop
            nop
            nop
            nop
.L_434488:

            cmp QWORD PTR [RSP+24],R13
            je .L_4344a1

            add R13,4
            cmp BYTE PTR [R14+176],0
            je .L_434270
.L_4344a1:

            mov ESI,DWORD PTR [RSP+40]
            mov RDI,R14
            call .L_402d50

            add RSP,56
.L_4344b1:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4344c8:

            mov ECX,DWORD PTR [RSP+16]
            mov EAX,R9D
            mov R11D,R9D
            sub EAX,ECX
            cmp R12D,EAX
            cmovl R12D,EAX
            mov EAX,R9D
            sub EAX,R12D
            lea R10D,DWORD PTR [R12+RCX*1]
            jmp .L_4343c2
.L_4344ea:

            je .L_4344a1

            lea RCX,QWORD PTR [RIP+.L_44ad60]
            lea RSI,QWORD PTR [RIP+.L_439d20]
            lea RDI,QWORD PTR [RIP+.L_439cc2]
            mov EDX,1003
            call __assert_fail@PLT
.L_43450b:

            nop
            nop
            nop
            nop
            nop
.L_434510:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_434540

            cmp AX,3
            je .L_434568

            cmp AX,1
            je .L_434540

            lea RAX,QWORD PTR [RIP+.L_658760]
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434540:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434568:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea RDX,QWORD PTR [RDI+RAX*2+4]
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            add RDX,2
            shl ECX,8
            add CX,SI
            cmove RDX,RAX
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
.L_4345b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4345c0:

            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl EAX,8
            add ESI,EAX
            movzx ESI,SI
            jmp .L_43a160
.L_4345d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4345e0:

            sub RSP,8
            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            mov ECX,EDI
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,ESI
            movzx ESI,AX
            add RDX,RSI
            test AX,AX
            mov ESI,ECX
            cmovne RDI,RDX
            call .L_43a230

            cmp EAX,-1
            setne AL
            add RSP,8
            ret 
.L_434618:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434620:

            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            mov RCX,RDI
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,ESI
            movzx ESI,AX
            add RDX,RSI
            test AX,AX
            mov RSI,RCX
            cmovne RDI,RDX
            jmp .L_43a410
.L_43464b:

            nop
            nop
            nop
            nop
            nop
.L_434650:

            push RBX
            mov RBX,RSI
            mov ESI,EDI
            mov RDI,RDX
            call .L_43a6b0

            movzx EDX,BYTE PTR [RBX]
            movzx ECX,BYTE PTR [RBX+1]
            pop RBX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EDX,EAX
            sete AL
            ret 
.L_434674:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434680:

            mov RAX,RDI
            mov RDI,RDX
            movzx EDX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            mov RSI,RAX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            jmp .L_43a7b0
.L_43469d:

            nop
            nop
            nop
.L_4346a0:

            mov RAX,RDI
            mov RDI,RDX
            movzx EDX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            mov RSI,RAX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            jmp .L_43a950
.L_4346bd:

            nop
            nop
            nop
.L_4346c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_4346ce:

            mov R13,QWORD PTR [RDI+24]
            cmp ESI,64
            mov R11,QWORD PTR [RSP+96]
            mov EAX,DWORD PTR [R13+180]
            ja .L_43487a

            lea RBX,QWORD PTR [RDI+80]
            mov DWORD PTR [RDI+80],EAX
            mov QWORD PTR [RSP],RBX
            lea EBX,DWORD PTR [RSI-1]
            mov DWORD PTR [RDI+136],EBX
            mov RBX,QWORD PTR [RDI+88]
            mov RBX,QWORD PTR [RBX+24]
            mov EBP,DWORD PTR [RBX+184]
            mov DWORD PTR [RDI+140],EBP
            xor EBP,EBP
            cmp EAX,DWORD PTR [RBX+180]
            jne .L_43472c

            mov R10,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            movzx EBP,BYTE PTR [RAX+15]
.L_43472c:

            mov QWORD PTR [RDI+112],RCX
            mov BYTE PTR [RDI+108],BPL
            mov QWORD PTR [RDI+120],R8
            mov QWORD PTR [RDI+128],RDX
            mov EDX,DWORD PTR [R13+180]
            lea RCX,QWORD PTR [RDX+RDX*4]
            mov RAX,RDX
            mov RDX,QWORD PTR [R13+200]
            lea RCX,QWORD PTR [RDX+RCX*4]
            movzx EDX,WORD PTR [RCX+12]
            movzx R12D,BYTE PTR [RCX+14]
            mov EBX,EDX
            shr BX,3
            and EBX,1
            and EDX,4
            mov EDX,R12D
            jne .L_434890

            sar R12D,5
            test DL,16
            jne .L_434950

            mov ECX,EDX
            and ECX,15
            mov DWORD PTR [RSP+12],ECX
.L_43478c:

            mov EBP,1
.L_434791:

            cmp ESI,1
            mov QWORD PTR [RSP+24],R9
            mov DWORD PTR [R11],EAX
            jbe .L_434962

            lea EAX,DWORD PTR [RSI-2]
            lea R14,QWORD PTR [R11+4]
            lea RAX,QWORD PTR [R11+RAX*4+8]
            mov R15,R14
            mov R14,R13
            mov R13,RDI
            mov QWORD PTR [RSP+16],RAX
            jmp .L_43481d
          .byte 0x66
          .byte 0x90
.L_4347c0:

            mov R10D,EAX
            and R10D,15
            cmp ECX,R12D
            setne R11B
            test DL,DL
            je .L_434920

            cmp R9D,R10D
            jne .L_43487a

            test R11B,R11B
            jne .L_43487a
.L_4347e8:

            test BL,BL
            movzx EDX,WORD PTR [RSI+12]
            je .L_4347f9
.L_4347f0:

            mov EBX,EDX
            shr BX,3
            and EBX,1
.L_4347f9:

            and EDX,4
            je .L_434807

            test R8B,R8B
            jne .L_4348b8
.L_434807:

            mov EDX,1
.L_43480c:

            add EBP,EDX
            add R15,4
            cmp R15,QWORD PTR [RSP+16]
            je .L_4348ce
.L_43481d:

            mov RDI,QWORD PTR [RSP]
            call .L_43acc0

            test AL,AL
            je .L_43487a

            mov EAX,DWORD PTR [R13+80]
            mov R9D,DWORD PTR [RSP+12]
            mov DWORD PTR [R15],EAX
            mov EAX,DWORD PTR [R13+80]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RDI,RAX
            mov RAX,QWORD PTR [R14+200]
            lea RSI,QWORD PTR [RAX+RDX*4]
            movzx ECX,BYTE PTR [RSI+14]
            mov EAX,ECX
            sar ECX,5
            test R12D,R12D
            setne R8B
            test R9D,R9D
            setne DL
            and EDX,R8D
            mov R8D,EAX
            and R8D,16
            je .L_4347c0

            test DL,DL
            je .L_4347e8
.L_43487a:

            xor EAX,EAX
.L_43487c:

            add RSP,40
.L_434880:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434890:

            mov EBP,EDX
            sar R12D,5
            mov DWORD PTR [RSP+12],0
            and EBP,15
            and EDX,16
            jne .L_434791

            mov DWORD PTR [RSP+12],EBP
            jmp .L_43478c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4348b8:

            mov EDX,EAX
            add R15,4
            and EDX,15
            add EBP,EDX
            cmp R15,QWORD PTR [RSP+16]
            jne .L_43481d
.L_4348ce:

            mov R13,R14
.L_4348d1:

            sub EDI,DWORD PTR [R13+180]
            cmp QWORD PTR [RSP+104],0
            mov RSI,QWORD PTR [RSP+24]
            lea EAX,DWORD PTR [RDI+1]
            mov DWORD PTR [RSI],EAX
            je .L_4348f1

            mov RAX,QWORD PTR [RSP+104]
            mov BYTE PTR [RAX],BL
.L_4348f1:

            cmp QWORD PTR [RSP+112],0
            mov EAX,1
            je .L_43487c

            mov RSI,QWORD PTR [RSP+112]
            mov DWORD PTR [RSI],EBP
            add RSP,40
.L_43490d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434920:

            test ECX,ECX
            setne DL
            test R10D,R10D
            setne CL
            test DL,CL
            je .L_434938

            test R11B,R11B
            jne .L_43487a
.L_434938:

            test BL,BL
            mov EDX,1
            je .L_43480c

            movzx EDX,WORD PTR [RSI+12]
            jmp .L_4347f0
          .byte 0x66
          .byte 0x90
.L_434950:

            mov EBP,1
            mov DWORD PTR [RSP+12],0
            jmp .L_434791
.L_434962:

            mov EDI,DWORD PTR [RDI+80]
            jmp .L_4348d1
.L_43496a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434970:

            push R14
            push R13
            mov RAX,R9
            push R12
            push RBP
            mov R12D,ECX
            push RBX
            mov R13,R8
            mov RBX,RDI
            mov EBP,ESI
            sub RSP,296
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+288],RCX
            xor ECX,ECX
            mov DWORD PTR [RSP+20],0
            push 0
            push 0
            mov RCX,QWORD PTR [RAX]
            lea R14,QWORD PTR [RSP+40]
            push R14
            mov R8,QWORD PTR [RAX+8]
            lea R9,QWORD PTR [RSP+44]
            call .L_4346c0

            add RSP,32
            test AL,AL
            je .L_4349e4

            mov R9D,DWORD PTR [RSP+12]
            mov R8,R13
            mov ECX,R12D
            mov RDX,R14
            mov ESI,EBP
            mov RDI,RBX
            call .L_4341d0
.L_4349e4:

            mov RSI,QWORD PTR [RSP+280]
            xor RSI,QWORD PTR FS:[40]
            jne .L_434a07

            add RSP,288
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_434a07:

            call __stack_chk_fail@PLT
.L_434a0c:

            nop
            nop
            nop
            nop
.L_434a10:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov RDX,R8
            push RBP
            push RBX
            mov R12D,ESI
            mov ESI,ECX
            mov RBX,RDI
            sub RSP,336
.L_434a2f:

            mov RAX,QWORD PTR [RSP+392]
            mov RBP,QWORD PTR [RSP+416]
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+24],R9D
            mov DWORD PTR [RSP+52],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+408]
            mov RCX,QWORD PTR [RBP]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+320],RAX
            xor EAX,EAX
            push 0
.L_434a7b:

            push 0
            lea R15,QWORD PTR [RSP+72]
            push R15
            mov R8,QWORD PTR [RBP+16]
            lea R9,QWORD PTR [RSP+76]
            call .L_4346c0

            add RSP,32
            test AL,AL
            jne .L_434ac8
.L_434a9a:

            xor EAX,EAX
.L_434a9c:

            mov RCX,QWORD PTR [RSP+312]
            xor RCX,QWORD PTR FS:[40]
            jne .L_434c68

            add RSP,328
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434ac8:

            mov RDX,QWORD PTR [RBX+24]
            mov R8,QWORD PTR [RBP+8]
            lea R13,QWORD PTR [RBX+144]
            mov R9,QWORD PTR [RBP]
            cmp BYTE PTR [RDX+177],0
            mov EAX,DWORD PTR [RDX+180]
            jne .L_434b78
.L_434aee:

            mov RSI,QWORD PTR [RBX+152]
            mov DWORD PTR [RBX+144],EAX
            mov DWORD PTR [RBX+200],R12D
            mov RCX,QWORD PTR [RSI+24]
            mov EDI,DWORD PTR [RCX+184]
            mov DWORD PTR [RBX+204],EDI
            xor EDI,EDI
            cmp EAX,DWORD PTR [RCX+180]
            jne .L_434b2f

            mov RDI,QWORD PTR [RCX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            movzx EDI,BYTE PTR [RAX+15]
.L_434b2f:

            test R12D,R12D
            mov BYTE PTR [RBX+172],DIL
            mov QWORD PTR [RBX+176],R9
            mov QWORD PTR [RBX+184],R8
            mov QWORD PTR [RBX+192],R14
            je .L_434b93

            xor R14D,R14D
            jmp .L_434b61
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434b58:

            add R14D,1
            cmp R12D,R14D
            je .L_434b88
.L_434b61:

            mov RDI,R13
            call .L_43b250

            test AL,AL
            jne .L_434b58

            jmp .L_434a9a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434b78:

            mov EAX,DWORD PTR [RDX+188]
            jmp .L_434aee
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434b88:

            mov RDX,QWORD PTR [RBX+24]
            mov RSI,QWORD PTR [RBX+152]
.L_434b93:

            mov EAX,DWORD PTR [RDX+180]
            mov R9D,DWORD PTR [RSP+44]
            mov RDX,QWORD PTR [RSI+24]
            mov ECX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP+24]
            mov R8,QWORD PTR [RBP]
            lea EAX,DWORD PTR [R9+RAX*1-1]
            mov DWORD PTR [RBX+200],ECX
            mov DWORD PTR [RBX+144],EAX
            mov ECX,DWORD PTR [RDX+184]
            mov DWORD PTR [RBX+204],ECX
            cmp EAX,DWORD PTR [RDX+180]
            je .L_434c50

            xor EAX,EAX
.L_434bd5:

            mov R12D,DWORD PTR [RSP+16]
            mov BYTE PTR [RBX+172],AL
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBX+176],R8
            mov QWORD PTR [RBX+184],RDI
            test R12D,R12D
            mov QWORD PTR [RBX+192],RAX
            je .L_434c2d

            xor EBP,EBP
            jmp .L_434c10
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434c08:

            add EBP,1
            cmp R12D,EBP
            je .L_434c28
.L_434c10:

            mov RDI,R13
            call .L_43acc0

            test AL,AL
            jne .L_434c08

            jmp .L_434a9a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434c28:

            mov R9D,DWORD PTR [RSP+44]
.L_434c2d:

            mov R8,QWORD PTR [RSP+24]
            mov ECX,DWORD PTR [RSP+392]
            mov RDX,R15
            mov ESI,DWORD PTR [RSP+20]
            mov RDI,RBX
            call .L_4341d0

            jmp .L_434a9c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434c50:

            mov RCX,QWORD PTR [RDX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            movzx EAX,BYTE PTR [RAX+15]
            jmp .L_434bd5
.L_434c68:

            call __stack_chk_fail@PLT
.L_434c6d:

            nop
            nop
            nop
.L_434c70:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+56]
            call free@PLT

            mov RDI,QWORD PTR [RBX+64]
            call free@PLT

            mov RDI,QWORD PTR [RBX]
            call .L_401950

            mov RDI,QWORD PTR [RBX+8]
            call .L_401950

            mov RDI,QWORD PTR [RBX+16]
            call .L_401950

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_434ca9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434cb0:

            push RBX
            mov RBX,RDI
            call .L_433fb0

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_658760]
            je .L_434ccf

            mov RAX,QWORD PTR [RBX+160]
            mov RDX,QWORD PTR [RAX+24]
.L_434ccf:

            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            pop RBX
            shl EAX,8
            add AX,DX
            setne AL
            movzx EAX,AL
            ret 
.L_434ce5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434cf0:

            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,8
.L_434cfb:

            call .L_433fb0

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_658760]
            je .L_434d16

            mov RAX,QWORD PTR [RBP+160]
            mov RDX,QWORD PTR [RAX+24]
.L_434d16:

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,EBX
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne RDI,RDX
            add RSP,8
.L_434d3d:

            pop RBX
            pop RBP
            jmp .L_43a6b0
.L_434d44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434d50:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EBP,ESI
            mov RBX,RDX
            call .L_433fb0

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_658760]
            je .L_434d78

            mov RAX,QWORD PTR [R12+160]
            mov RDX,QWORD PTR [RAX+24]
.L_434d78:

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBX
            pop RBX
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne RDI,RDX
            mov EDX,EBP
            pop RBP
            pop R12
            jmp .L_43a7b0
.L_434da7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434db0:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,EDX
            mov R12,RCX
            mov RBX,R8
            sub RSP,8
.L_434dcc:

            call .L_433fb0

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_658760]
            je .L_434de7

            mov RAX,QWORD PTR [R13+160]
            mov RDX,QWORD PTR [RAX+24]
.L_434de7:

            movzx EAX,BYTE PTR [RDX+6]
            movzx ECX,BYTE PTR [RDX+7]
            lea R13,QWORD PTR [RIP+.L_658760]
            mov ESI,R14D
            mov R15,R13
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne R13,RDX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R13
            test AX,AX
            cmove RDI,R15
            call .L_43a230

            cmp EAX,-1
            je .L_434f18

            movzx EDX,BYTE PTR [R13+2]
            movzx ECX,BYTE PTR [R13+3]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_434eb0
.L_434e4e:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx ECX,AX
            add R13,RCX
            test AX,AX
            cmovne RDX,R13
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            test R12,R12
            movzx EAX,AX
            je .L_434e9f

            cmp EBP,EAX
            jbe .L_434ec0

            mov DWORD PTR [R12],0
.L_434e90:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_434e9f:

            add RSP,8
.L_434ea3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_434eb0:

            mov EAX,EAX
            lea R15,QWORD PTR [R13+RAX*2+4]
            jmp .L_434e4e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434ec0:

            mov ECX,DWORD PTR [R12]
            sub EAX,EBP
            cmp EAX,ECX
            cmova EAX,ECX
            add RBP,RBP
            lea RCX,QWORD PTR [RDX+2]
            test EAX,EAX
            mov DWORD PTR [R12],EAX
            je .L_434e90

            sub EAX,1
            lea RCX,QWORD PTR [RCX+RBP*1+1]
            lea RDI,QWORD PTR [RBX+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434ef0:

            movzx EAX,BYTE PTR [RCX-1]
            movzx ESI,BYTE PTR [RCX]
            add RBX,4
            add RCX,2
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            mov DWORD PTR [RBX-4],EAX
            cmp RDI,RBX
            jne .L_434ef0

            jmp .L_434e90
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434f18:

            xor EAX,EAX
            test R12,R12
            je .L_434e9f

            mov DWORD PTR [R12],0
            add RSP,8
.L_434f2f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_434f3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434f40:

            push R15
            push R14
            mov R15,R8
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,R9
            mov EBX,ECX
            sub RSP,88
.L_434f59:

            mov R13,QWORD PTR [RDI+128]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+16],EDX
            mov RDI,R13
            call .L_433fb0

            test AL,AL
            lea RCX,QWORD PTR [RIP+.L_658760]
            je .L_434f96

            mov RAX,QWORD PTR [R13+160]
            mov RCX,QWORD PTR [RAX+24]
.L_434f96:

            movzx EAX,BYTE PTR [RCX+8]
            movzx EDX,BYTE PTR [RCX+9]
            lea R14,QWORD PTR [RIP+.L_658760]
            mov R13,R14
            shl EAX,8
            add EAX,EDX
            movzx ESI,AX
            add RCX,RSI
            test AX,AX
            mov ESI,DWORD PTR [RSP+16]
            cmovne R14,RCX
            movzx EAX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,R13
            call .L_43a230

            cmp EAX,-1
            je .L_4354d0

            movzx ECX,BYTE PTR [R14+2]
            movzx ESI,BYTE PTR [R14+3]
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            cmp EAX,ECX
            jb .L_435080
.L_435001:

            movzx EAX,BYTE PTR [R13]
            movzx ECX,BYTE PTR [R13+1]
            lea R13,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            test AX,AX
            lea RDX,QWORD PTR [R14+RCX*1]
            cmovne R13,RDX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            test R15,R15
            movzx EAX,AX
            je .L_435059

            cmp EBX,EAX
            jbe .L_435090

            mov DWORD PTR [R15],0
.L_435047:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_435059:

            mov RDI,QWORD PTR [RSP+72]
            xor RDI,QWORD PTR FS:[40]
            jne .L_435652

            add RSP,88
.L_435071:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435080:

            mov EAX,EAX
            lea R13,QWORD PTR [R14+RAX*2+4]
            jmp .L_435001
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435090:

            mov EDX,DWORD PTR [R15]
            sub EAX,EBX
            lea RCX,QWORD PTR [R13+2]
            cmp EAX,EDX
            cmova EAX,EDX
            lea RDX,QWORD PTR [RBX+RBX*1]
            test EAX,EAX
            mov DWORD PTR [R15],EAX
            je .L_435047

            lea RBX,QWORD PTR [RCX+RDX*1]
            lea RDX,QWORD PTR [RCX+RDX*1+2]
            sub EAX,1
            mov R14,R12
            lea R15,QWORD PTR [RIP+.L_658760]
            mov R12,RBP
            lea RAX,QWORD PTR [RDX+RAX*2]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+60]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+32],RAX
            mov EAX,DWORD PTR [RSP+20]
            and EAX,4294967294
            mov DWORD PTR [RSP+20],EAX
            jmp .L_43511d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4350f0:

            cmp AX,3
            je .L_435370

            xor ESI,ESI
            cmp AX,1
            je .L_435338
.L_435106:

            mov DWORD PTR [R12],ESI
            add RBX,2
            add R12,4
            cmp RBX,QWORD PTR [RSP+8]
            je .L_435047
.L_43511d:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            movzx EBP,AX
            add RBP,R13
            test AX,AX
            cmove RBP,R15
            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            jne .L_4350f0

            movzx ECX,BYTE PTR [RBP+2]
            movzx EAX,BYTE PTR [RBP+3]
            sub RSP,8
.L_435155:

            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            mov RDI,R14
            mov RSI,QWORD PTR [R14+160]
            shl ECX,8
            add ECX,EAX
            mov RAX,QWORD PTR [R14+152]
            movzx ECX,CX
            push QWORD PTR [RAX+208]
            mov R9,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+48]
            mov EDX,DWORD PTR [RSP+32]
            call QWORD PTR [RAX+432]

            mov ESI,EAX
            test ESI,ESI
            pop RAX
            pop RDX
            je .L_435106

            cmp DWORD PTR [RSP+20],4
            mov RAX,QWORD PTR [R14+152]
            mov RSI,QWORD PTR [R14+160]
            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            je .L_435280

            lea RDI,QWORD PTR [RSP+68]
            lea RBP,QWORD PTR [RSP+64]
            mov R9,QWORD PTR [RAX+176]
            mov EDX,DWORD PTR [RSP+16]
            mov QWORD PTR [RSP+40],RDI
            mov R8,RDI
            mov RCX,RBP
            mov RDI,R14
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_435649

            mov RAX,QWORD PTR [R14+152]
            mov DWORD PTR [RSP+68],0
            mov RCX,RBP
            mov DWORD PTR [RSP+64],0
            mov RSI,QWORD PTR [R14+160]
            mov RDI,R14
            mov R8,QWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_435649

            mov RAX,QWORD PTR [R14+152]
            mov RSI,QWORD PTR [R14+160]
            mov RDI,R14
            mov EDX,DWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EAX,DWORD PTR [RSP+68]
            add EAX,DWORD PTR [R14+140]
.L_43526d:

            mov ESI,DWORD PTR [RSP+60]
            sub ESI,EAX
            jmp .L_435106
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435280:

            lea R10,QWORD PTR [RSP+68]
            lea RBP,QWORD PTR [RSP+64]
            mov R9,QWORD PTR [RAX+168]
            mov EDX,DWORD PTR [RSP+16]
            mov RDI,R14
            mov R8,R10
            mov QWORD PTR [RSP+40],R10
            mov RCX,RBP
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_435640

            mov RAX,QWORD PTR [R14+152]
            mov R10,QWORD PTR [RSP+40]
            mov RCX,RBP
            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            mov RDI,R14
            mov RSI,QWORD PTR [R14+160]
            mov EDX,DWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+176]
            mov R8,R10
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_435640

            mov RAX,QWORD PTR [R14+152]
            mov EDX,DWORD PTR [RSP+16]
            mov RDI,R14
            mov RSI,QWORD PTR [R14+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov EDI,DWORD PTR [RSP+64]
            shr EDX,31
            add EAX,EDX
            sar EAX,1
            sub EDI,EAX
            mov EAX,EDI
.L_435329:

            mov ESI,DWORD PTR [RSP+56]
            sub ESI,EAX
            jmp .L_435106
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435338:

            movzx ESI,BYTE PTR [RBP+2]
            movzx EAX,BYTE PTR [RBP+3]
            shl ESI,8
            add ESI,EAX
            cmp DWORD PTR [RSP+20],4
            movsx ESI,SI
            je .L_435620

            mov EDX,DWORD PTR [R14+140]
            mov RDI,R14
            call .L_43a040

            mov ESI,EAX
            jmp .L_435106
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435370:

            movzx ESI,BYTE PTR [RBP+2]
            movzx EAX,BYTE PTR [RBP+3]
            shl ESI,8
            add ESI,EAX
            cmp DWORD PTR [RSP+20],4
            movsx ESI,SI
            je .L_4354f0

            mov EDX,DWORD PTR [R14+140]
            mov RDI,R14
            call .L_43a040

            mov ESI,EAX
            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
            mov EDI,DWORD PTR [R14+148]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmove RDX,R15
            test EDI,EDI
            je .L_435106

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            lea ECX,DWORD PTR [RAX-1]
            cmp ECX,2
            ja .L_435106

            movzx ECX,BYTE PTR [RDX]
            movzx R8D,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            cmp EDI,ECX
            jb .L_435106

            movzx R8D,BYTE PTR [RDX+2]
            movzx R9D,BYTE PTR [RDX+3]
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            cmp EDI,R8D
            ja .L_435106

            mov R11D,EDI
            mov R8D,1
            mov EBP,16
            sub R11D,ECX
            mov ECX,4
            mov R10D,DWORD PTR [R14+140]
            sub ECX,EAX
            mov R9D,R11D
            shr R9D,CL
            mov DWORD PTR [RSP+40],ECX
            mov ECX,R9D
            mov R9D,R8D
            lea RDX,QWORD PTR [RDX+RCX*2+6]
            mov ECX,EAX
            shl R9D,CL
            mov ECX,R9D
            mov R9D,EBP
            sub R9D,ECX
            mov ECX,R9D
            mov R9D,65535
            shr R9D,CL
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RSP+40]
            movzx EDX,DX
            shl R8D,CL
            mov ECX,EAX
            lea EAX,DWORD PTR [R9+1]
            sub R8D,1
            and R8D,R11D
            shr EAX,1
            add R8D,1
            shl R8D,CL
            mov ECX,EBP
            sub ECX,R8D
            shr EDX,CL
            and EDX,R9D
            not R9D
            add R9D,EDX
            cmp EDX,EAX
            cmovae EDX,R9D
            test EDX,EDX
            je .L_435106
.L_4354b1:

            movsxd RAX,EDX
            movsxd RDX,R10D
            imul RAX,RDX
            cqo 
            idiv RDI
            add ESI,EAX
            jmp .L_435106
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4354d0:

            xor EAX,EAX
            test R15,R15
            je .L_435059

            mov DWORD PTR [R15],0
            jmp .L_435059
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4354f0:

            mov EDX,DWORD PTR [R14+136]
            mov RDI,R14
            call .L_43a040

            mov ESI,EAX
            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
            mov EDI,DWORD PTR [R14+144]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmove RDX,R15
            test EDI,EDI
            je .L_435106

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            lea ECX,DWORD PTR [RAX-1]
            cmp ECX,2
            ja .L_435106

            movzx ECX,BYTE PTR [RDX]
            movzx R8D,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            cmp EDI,ECX
            jb .L_435106

            movzx R8D,BYTE PTR [RDX+2]
            movzx R9D,BYTE PTR [RDX+3]
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            cmp EDI,R8D
            ja .L_435106

            mov R11D,EDI
            mov R8D,1
            mov EBP,16
            sub R11D,ECX
            mov ECX,DWORD PTR [RSP+20]
            mov R10D,DWORD PTR [R14+136]
            mov R9D,R11D
            sub ECX,EAX
            shr R9D,CL
            mov DWORD PTR [RSP+40],ECX
            mov ECX,R9D
            mov R9D,R8D
            lea RDX,QWORD PTR [RDX+RCX*2+6]
            mov ECX,EAX
            shl R9D,CL
            mov ECX,R9D
            mov R9D,EBP
            sub R9D,ECX
            mov ECX,R9D
            mov R9D,65535
            shr R9D,CL
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RSP+40]
            movzx EDX,DX
            shl R8D,CL
            mov ECX,EAX
            sub R8D,1
            and R8D,R11D
            add R8D,1
            shl R8D,CL
            mov ECX,EBP
            sub ECX,R8D
            shr EDX,CL
            lea ECX,DWORD PTR [R9+1]
            and EDX,R9D
            not R9D
            shr ECX,1
            lea EAX,DWORD PTR [RDX+R9*1]
            cmp EDX,ECX
            cmovae EDX,EAX
            test EDX,EDX
            jne .L_4354b1

            jmp .L_435106
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435620:

            mov EDX,DWORD PTR [R14+136]
            mov RDI,R14
            call .L_43a040

            mov ESI,EAX
            jmp .L_435106
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435640:

            mov EAX,DWORD PTR [RSP+64]
            jmp .L_435329
.L_435649:

            mov EAX,DWORD PTR [RSP+68]
            jmp .L_43526d
.L_435652:

            call __stack_chk_fail@PLT
.L_435657:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435660:

            push R12
            push RBP
            mov R12,RCX
            push RBX
.L_435667:

            mov EBP,EDX
            mov RBX,R8
            call .L_434040

            movzx ESI,BYTE PTR [RAX+4]
            movzx EDX,BYTE PTR [RAX+5]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl ESI,8
            add ESI,EDX
            movzx EDX,SI
            add RAX,RDX
            test SI,SI
            cmovne RDI,RAX
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            test R12,R12
            movzx EAX,AX
            je .L_435720

            cmp EBP,EAX
            ja .L_435728

            mov EDX,DWORD PTR [R12]
            sub EAX,EBP
            lea RCX,QWORD PTR [RDI+2]
            cmp EAX,EDX
            cmova EAX,EDX
            lea RDX,QWORD PTR [RBP+RBP*2]
            mov DWORD PTR [R12],EAX
            add RDX,RDX
            test EAX,EAX
            je .L_435711

            sub EAX,1
            lea RSI,QWORD PTR [RCX+RDX*1]
            lea RDX,QWORD PTR [RCX+RDX*1+6]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R8,QWORD PTR [RDX+RAX*2]
            nop
            nop
            nop
.L_4356e0:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            add RSI,6
            add RBX,4
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RSI-4]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RSI-3]
            add EAX,EDX
            mov DWORD PTR [RBX-4],EAX
            cmp R8,RSI
            jne .L_4356e0
.L_435711:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_435720:

            pop RBX
.L_435721:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435728:

            mov DWORD PTR [R12],0
            jmp .L_435711
.L_435732:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435740:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBX,RCX
            call .L_434040

            mov RDX,RBX
            mov ESI,R12D
            mov RDI,RAX
            mov RBP,RAX
            call .L_43d4d0

            test AL,AL
            mov EDX,1
            je .L_435770

            pop RBX
            mov EAX,EDX
            pop RBP
            pop R12
            ret 
.L_435770:

            mov RDX,RBX
            mov ESI,1145457748
            mov RDI,RBP
            call .L_43d4d0

            test AL,AL
            je .L_435790
.L_435784:

            xor EDX,EDX
.L_435786:

            pop RBX
            mov EAX,EDX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435790:

            mov RDX,RBX
            mov ESI,1684434036
            mov RDI,RBP
            call .L_43d4d0

            test AL,AL
            jne .L_435784

            mov RDX,RBX
            mov ESI,1818326126
            mov RDI,RBP
            call .L_43d4d0

            test RBX,RBX
            je .L_435784

            cmp AL,1
            je .L_435784

            mov DWORD PTR [RBX],65535
            xor EDX,EDX
            jmp .L_435786
.L_4357c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4357d0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDX
            push RBX
.L_4357db:

            mov R12,RCX
            mov RBX,R8
            call .L_434040

            mov R10D,DWORD PTR [RBP]
            mov R13,RAX
            test R10D,R10D
            je .L_4358b3

            lea R11,QWORD PTR [RIP+.L_658760]
            nop
            nop
            nop
.L_435800:

            movzx EAX,BYTE PTR [R13+4]
            movzx EDX,BYTE PTR [R13+5]
            shl EAX,8
            add EAX,EDX
            movzx ECX,AX
            add RCX,R13
            test AX,AX
            cmove RCX,R11
            movzx R8D,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl R8D,8
            add R8D,EAX
            movzx R8D,R8W
            sub R8D,1
            cmp R8D,-1
            je .L_435895

            xor EDX,EDX
            jmp .L_43584f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435840:

            je .L_4358e0

            lea EDX,DWORD PTR [R9+1]
            cmp EDX,R8D
            jg .L_435895
.L_43584f:

            lea R9D,DWORD PTR [R8+RDX*1]
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R14,QWORD PTR [RCX+RAX*2+2]
            movzx ESI,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            mov EDI,ESI
            shl EAX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R14+2]
            shl EAX,8
            add EAX,ESI
            movzx ESI,BYTE PTR [R14+3]
            add EAX,ESI
            cmp R10D,EAX
            jae .L_435840

            lea R8D,DWORD PTR [R9-1]
            cmp EDX,R8D
            jle .L_43584f
.L_435895:

            test R12,R12
            je .L_4358a2

            mov DWORD PTR [R12],65535
.L_4358a2:

            add RBP,4
            mov R10D,DWORD PTR [RBP]
            test R10D,R10D
            jne .L_435800
.L_4358b3:

            mov RDX,R12
            mov ESI,1145457748
            mov RDI,R13
            call .L_43d4d0

            test AL,AL
            je .L_435901

            test RBX,RBX
            je .L_435943

            mov DWORD PTR [RBX],1145457748
            xor EAX,EAX
.L_4358d4:

            pop RBX
.L_4358d5:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4358e0:

            test R12,R12
            je .L_4358e9

            mov DWORD PTR [R12],R9D
.L_4358e9:

            test RBX,RBX
            mov EAX,1
            je .L_4358d4

            mov EDX,DWORD PTR [RBP]
            mov DWORD PTR [RBX],EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_435901:

            mov RDX,R12
            mov ESI,1684434036
            mov RDI,R13
            call .L_43d4d0

            test AL,AL
            je .L_435924

            test RBX,RBX
            je .L_435943

            mov DWORD PTR [RBX],1684434036
            xor EAX,EAX
            jmp .L_4358d4
.L_435924:

            mov RDX,R12
            mov ESI,1818326126
            mov RDI,R13
            call .L_43d4d0

            test AL,AL
            je .L_43594e

            test RBX,RBX
            je .L_435943

            mov DWORD PTR [RBX],1818326126
.L_435943:

            pop RBX
.L_435944:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_43594e:

            test R12,R12
            je .L_43595b

            mov DWORD PTR [R12],65535
.L_43595b:

            test RBX,RBX
            je .L_435943

            mov DWORD PTR [RBX],65535
            xor EAX,EAX
            jmp .L_4358d4
.L_43596d:

            nop
            nop
            nop
.L_435970:

            push R12
            push RBP
            mov R12,RCX
            push RBX
.L_435977:

            mov EBP,EDX
            mov RBX,R8
            call .L_434040

            movzx ESI,BYTE PTR [RAX+6]
            movzx EDX,BYTE PTR [RAX+7]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl ESI,8
            add ESI,EDX
            movzx EDX,SI
            add RAX,RDX
            test SI,SI
            cmovne RDI,RAX
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            test R12,R12
            movzx EAX,AX
            je .L_435a30

            cmp EBP,EAX
            ja .L_435a38

            mov EDX,DWORD PTR [R12]
            sub EAX,EBP
            lea RCX,QWORD PTR [RDI+2]
            cmp EAX,EDX
            cmova EAX,EDX
            lea RDX,QWORD PTR [RBP+RBP*2]
            mov DWORD PTR [R12],EAX
            add RDX,RDX
            test EAX,EAX
            je .L_435a21

            sub EAX,1
            lea RSI,QWORD PTR [RCX+RDX*1]
            lea RDX,QWORD PTR [RCX+RDX*1+6]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R8,QWORD PTR [RDX+RAX*2]
            nop
            nop
            nop
.L_4359f0:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            add RSI,6
            add RBX,4
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RSI-4]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RSI-3]
            add EAX,EDX
            mov DWORD PTR [RBX-4],EAX
            cmp R8,RSI
            jne .L_4359f0
.L_435a21:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_435a30:

            pop RBX
.L_435a31:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435a38:

            mov DWORD PTR [R12],0
            jmp .L_435a21
.L_435a42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435a50:

            push RBP
            push RBX
            mov RBP,RCX
            mov EBX,EDX
            sub RSP,8
.L_435a5b:

            call .L_434040

            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            lea R9,QWORD PTR [RIP+.L_658760]
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RAX,RCX
            test DX,DX
            cmovne R9,RAX
            movzx EAX,BYTE PTR [R9]
            movzx EDX,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            je .L_435b07

            movzx EDX,BYTE PTR [R9+3]
            movzx ECX,AX
            movzx EAX,BYTE PTR [R9+2]
            add R9,8
            shl EAX,24
            shl EDX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [R9-4]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R9-3]
            add EAX,EDX
            xor EDX,EDX
            cmp EBX,EAX
            jne .L_435b00

            jmp .L_435b20
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435ad0:

            mov R8,R9
            add R9,6
            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            mov EDI,ESI
            shl EAX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,ESI
            movzx ESI,BYTE PTR [R8+3]
            add EAX,ESI
            cmp EBX,EAX
            je .L_435b28
.L_435b00:

            add EDX,1
            cmp EDX,ECX
            jne .L_435ad0
.L_435b07:

            xor EAX,EAX
            test RBP,RBP
            je .L_435b15

            mov DWORD PTR [RBP],65535
.L_435b15:

            add RSP,8
.L_435b19:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435b20:

            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_435b28:

            test RBP,RBP
            mov EAX,1
            je .L_435b15

            mov DWORD PTR [RBP],EDX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_435b3c:

            nop
            nop
            nop
            nop
.L_435b40:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,R8
            mov EBP,ECX
            mov RBX,R9
            sub RSP,8
.L_435b55:

            call .L_434040

            mov ESI,R13D
            mov RDI,RAX
            call .L_43d460

            test R12,R12
            je .L_435bf2

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EBP,EDX
            ja .L_435c10

            mov ECX,DWORD PTR [R12]
            sub EDX,EBP
            lea RSI,QWORD PTR [RAX+4]
            cmp EDX,ECX
            cmova EDX,ECX
            lea RCX,QWORD PTR [RBP+RBP*2]
            mov DWORD PTR [R12],EDX
            add RCX,RCX
            test EDX,EDX
            je .L_435bf2

            sub EDX,1
            lea RDI,QWORD PTR [RSI+RCX*1]
            lea RCX,QWORD PTR [RSI+RCX*1+6]
            lea RDX,QWORD PTR [RDX+RDX*2]
            mov R9,RBX
            lea R8,QWORD PTR [RCX+RDX*2]
            nop
            nop
            nop
            nop
.L_435bc0:

            movzx ECX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            add RDI,6
            add R9,4
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RDI-4]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RDI-3]
            add EDX,ECX
            mov DWORD PTR [R9-4],EDX
            cmp R8,RDI
            jne .L_435bc0
.L_435bf2:

            movzx EDX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            add RSP,8
.L_435bfe:

            pop RBX
            pop RBP
            pop R12
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            pop R13
            ret 

            nop
            nop
            nop
.L_435c10:

            mov DWORD PTR [R12],0
            jmp .L_435bf2
.L_435c1a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_435c20:

            push R12
            push RBP
            mov R12,R8
            push RBX
.L_435c27:

            mov EBX,EDX
            mov EBP,ECX
            call .L_434040

            mov ESI,EBX
            mov RDI,RAX
            call .L_43d460

            movzx ECX,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            shl ECX,8
            add ECX,EDX
            movzx ECX,CX
            sub ECX,1
            cmp ECX,-1
            je .L_435d80

            lea R8,QWORD PTR [RAX+2]
            mov R11D,ECX
            xor EBX,EBX
            jmp .L_435c77
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435c68:

            je .L_435d58

            lea EBX,DWORD PTR [R9+1]
            cmp EBX,R11D
            jg .L_435cbc
.L_435c77:

            lea R9D,DWORD PTR [R11+RBX*1]
            sar R9D,1
            movsxd RDX,R9D
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea R10,QWORD PTR [R8+RDX*2+2]
            movzx ESI,BYTE PTR [R10]
            movzx EDX,BYTE PTR [R10+1]
            mov EDI,ESI
            shl EDX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RDX*1]
            movzx EDX,BYTE PTR [R10+2]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [R10+3]
            add EDX,ESI
            cmp EBP,EDX
            jae .L_435c68

            lea R11D,DWORD PTR [R9-1]
            cmp EBX,R11D
            jle .L_435c77
.L_435cbc:

            test R12,R12
            je .L_435ce5
.L_435cc1:

            mov DWORD PTR [R12],65535
            movzx ECX,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            shl ECX,8
            add ECX,EDX
            movzx ECX,CX
            sub ECX,1
            cmp ECX,-1
            je .L_435d46

            lea R8,QWORD PTR [RAX+2]
.L_435ce5:

            xor R10D,R10D
            jmp .L_435cfb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435cf0:

            je .L_435d70

            lea R10D,DWORD PTR [RDI+1]
            cmp R10D,ECX
            jg .L_435d41
.L_435cfb:

            lea EDI,DWORD PTR [RCX+R10*1]
            sar EDI,1
            movsxd RAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R9,QWORD PTR [R8+RAX*2+2]
            movzx EDX,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            mov ESI,EDX
            shl EAX,16
            shl ESI,24
            lea EDX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [R9+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R9+3]
            add EAX,EDX
            cmp EAX,1684434036
            jbe .L_435cf0

            lea ECX,DWORD PTR [RDI-1]
            cmp R10D,ECX
            jle .L_435cfb
.L_435d41:

            test R12,R12
            je .L_435d89
.L_435d46:

            mov DWORD PTR [R12],65535
            xor EAX,EAX
.L_435d50:

            pop RBX
.L_435d51:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435d58:

            test R12,R12
            mov EAX,1
            je .L_435d50

            pop RBX
            mov DWORD PTR [R12],R9D
            mov EAX,1
            pop RBP
            pop R12
            ret 
.L_435d70:

            test R12,R12
            je .L_435d89

            pop RBX
            mov DWORD PTR [R12],EDI
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_435d80:

            test R12,R12
            jne .L_435cc1
.L_435d89:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_435d90:

            push R14
            push R13
            mov R14D,EDX
            push R12
            push RBP
            mov R13D,ECX
            push RBX
.L_435d9e:

            mov RBP,R8
            mov RBX,R9
            call .L_434040

            mov ESI,R14D
            mov RDI,RAX
            mov R12,RAX
            call .L_43d460

            cmp R13D,65535
            je .L_435e38

            movzx ESI,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl ESI,8
            add ESI,EDX
            movzx ESI,SI
            cmp R13D,ESI
            jb .L_435ef0

            movzx EDX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            shl EDX,8
            add DX,CX
            jne .L_435e47
.L_435df0:

            lea RDX,QWORD PTR [RIP+.L_44aed8]
.L_435df7:

            test RBP,RBP
            je .L_435f18

            xor ESI,ESI
            test RBX,RBX
            mov DWORD PTR [RBP],65535
            je .L_435e12

            nop
            nop
.L_435e10:

            mov DWORD PTR [RBX],ESI
.L_435e12:

            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            pop RBX
.L_435e1b:

            pop RBP
            pop R12
            shl EAX,8
            add EAX,EDX
            cmp AX,-1
            setne AL
            movzx EAX,AL
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435e38:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add DX,CX
            je .L_435df0
.L_435e47:

            movzx EDX,DX
            add RDX,RAX
            movzx ECX,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX+3]
            shl ECX,8
            add ECX,EAX
            cmp CX,-1
            je .L_435df7

            test RBP,RBP
            movzx R8D,CX
            je .L_435e6d

            mov DWORD PTR [RBP],R8D
.L_435e6d:

            test RBX,RBX
            je .L_435e12

            movzx EAX,BYTE PTR [R12+6]
            movzx ESI,BYTE PTR [R12+7]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,ESI
            movzx ESI,AX
            add R12,RSI
            test AX,AX
            cmovne RDI,R12
            movzx EAX,BYTE PTR [RDI]
            movzx ESI,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ESI
            mov ESI,538976288
            movzx EAX,AX
            cmp R8D,EAX
            jae .L_435e10

            movzx ECX,CX
            lea RAX,QWORD PTR [RCX+RCX*2]
            lea RAX,QWORD PTR [RDI+RAX*2+2]
            movzx ECX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            mov EDI,ECX
            shl ESI,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RSI*1]
            movzx ESI,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl ESI,8
            add ESI,ECX
            add ESI,EAX
            jmp .L_435e10
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435ef0:

            mov ECX,R13D
            lea RDX,QWORD PTR [RCX+RCX*2]
            lea RDI,QWORD PTR [RAX+RDX*2+4]
            movzx EDX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            shl EDX,8
            add DX,CX
            je .L_435df0

            jmp .L_435e47
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435f18:

            test RBX,RBX
            je .L_435e12

            xor ESI,ESI
            jmp .L_435e10
.L_435f28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435f30:

            xor R9D,R9D
            jmp .L_435d90
.L_435f38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435f40:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12D,ECX
            mov EBX,R8D
            mov RBP,R9
            sub RSP,8
.L_435f56:

            call .L_434040

            mov ESI,R13D
            mov RDI,RAX
            call .L_43d460

            cmp R12D,65535
            je .L_436030

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp R12D,EDX
            jb .L_436070
.L_435f93:

            movzx ESI,BYTE PTR [RCX+4]
            movzx EDI,BYTE PTR [RCX+5]
            xor EDX,EDX
            lea RCX,QWORD PTR [RIP+.L_44aed8]
            shl ESI,8
            add SI,DI
            jne .L_43604c
.L_435fb0:

            test RBP,RBP
            je .L_43601f

            cmp EBX,EDX
            ja .L_436080

            mov EAX,DWORD PTR [RBP]
            sub EDX,EBX
            cmp EDX,EAX
            cmova EDX,EAX
            add RBX,RBX
            lea RAX,QWORD PTR [RCX+6]
            test EDX,EDX
            mov DWORD PTR [RBP],EDX
            je .L_43600f

            mov RSI,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RAX+RBX*1+1]
            lea EAX,DWORD PTR [RDX-1]
            lea R8,QWORD PTR [RSI+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435ff0:

            movzx EAX,BYTE PTR [RDI-1]
            movzx EDX,BYTE PTR [RDI]
            add RSI,4
            add RDI,2
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RSI-4],EAX
            cmp R8,RSI
            jne .L_435ff0
.L_43600f:

            movzx EDX,BYTE PTR [RCX+4]
            movzx EAX,BYTE PTR [RCX+5]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
.L_43601f:

            add RSP,8
.L_436023:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436030:

            movzx ESI,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            xor EDX,EDX
            lea RCX,QWORD PTR [RIP+.L_44aed8]
            shl ESI,8
            add SI,DI
            je .L_435fb0
.L_43604c:

            movzx ESI,SI
            lea RCX,QWORD PTR [RAX+RSI*1]
            movzx EDX,BYTE PTR [RCX+4]
            movzx EAX,BYTE PTR [RCX+5]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            jmp .L_435fb0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436070:

            lea RDX,QWORD PTR [R12+R12*2]
            lea RCX,QWORD PTR [RAX+RDX*2+4]
            jmp .L_435f93
          .byte 0x66
          .byte 0x90
.L_436080:

            mov DWORD PTR [RBP],0
            jmp .L_43600f
.L_436089:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436090:

            push R15
            push R14
            mov R15D,EDX
            push R13
            push R12
            mov R14D,ECX
            push RBP
            push RBX
            mov R13D,R8D
            mov R12,R9
            sub RSP,8
.L_4360aa:

            mov RBX,QWORD PTR [RSP+64]
            call .L_434040

            mov ESI,R15D
            mov RDI,RAX
            mov RBP,RAX
            call .L_43d460

            cmp R14D,65535
            je .L_436240

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp R14D,EDX
            jb .L_436280
.L_4360ef:

            movzx EDX,BYTE PTR [RCX+4]
            movzx ECX,BYTE PTR [RCX+5]
            xor R10D,R10D
            lea RDI,QWORD PTR [RIP+.L_44aed8]
            shl EDX,8
            add DX,CX
            jne .L_43625d
.L_43610d:

            test R12,R12
            je .L_436183

            cmp R13D,R10D
            ja .L_436290

            mov EAX,DWORD PTR [R12]
            sub R10D,R13D
            cmp R10D,EAX
            cmova R10D,EAX
            add R13,R13
            lea RAX,QWORD PTR [RDI+6]
            test R10D,R10D
            mov DWORD PTR [R12],R10D
            je .L_436298

            lea RDX,QWORD PTR [RAX+R13*1+1]
            lea EAX,DWORD PTR [R10-1]
            mov RCX,RBX
            lea R8,QWORD PTR [RBX+RAX*4+4]
            nop
            nop
.L_436150:

            movzx EAX,BYTE PTR [RDX-1]
            movzx ESI,BYTE PTR [RDX]
            add RCX,4
            add RDX,2
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            mov DWORD PTR [RCX-4],EAX
            cmp R8,RCX
            jne .L_436150

            movzx R10D,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
.L_436183:

            test RBX,RBX
            je .L_43622a

            mov EAX,DWORD PTR [R12]
            test EAX,EAX
            je .L_43622a

            sub EAX,1
            lea R8,QWORD PTR [RIP+.L_658760]
            mov RDI,RBX
            lea RAX,QWORD PTR [RBX+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4361b0:

            mov R9D,DWORD PTR [RDI]
            xor EDX,EDX
            cmp R9D,65535
            je .L_43621f

            movzx EDX,BYTE PTR [RBP+6]
            movzx ECX,BYTE PTR [RBP+7]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            add RSI,RBP
            test DX,DX
            cmove RSI,R8
            movzx ECX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,EDX
            mov EDX,538976288
            movzx ECX,CX
            cmp R9D,ECX
            jae .L_43621f

            lea RDX,QWORD PTR [R9+R9*2]
            lea R9,QWORD PTR [RSI+RDX*2+2]
            movzx ECX,BYTE PTR [R9]
            movzx EDX,BYTE PTR [R9+1]
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [R9+2]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [R9+3]
            add EDX,ECX
.L_43621f:

            mov DWORD PTR [RDI],EDX
            add RDI,4
            cmp RDI,RAX
            jne .L_4361b0
.L_43622a:

            add RSP,8
.L_43622e:

            mov EAX,R10D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436240:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            xor R10D,R10D
            lea RDI,QWORD PTR [RIP+.L_44aed8]
            shl EDX,8
            add DX,CX
            je .L_43610d
.L_43625d:

            movzx EDX,DX
            lea RDI,QWORD PTR [RAX+RDX*1]
            movzx R10D,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
            jmp .L_43610d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436280:

            lea RDX,QWORD PTR [R14+R14*2]
            lea RCX,QWORD PTR [RAX+RDX*2+4]
            jmp .L_4360ef
          .byte 0x66
          .byte 0x90
.L_436290:

            mov DWORD PTR [R12],0
.L_436298:

            movzx R10D,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
            jmp .L_43622a
.L_4362b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4362c0:

            push R14
            push R13
            mov R14D,EDX
            push R12
            push RBP
            mov R13D,ECX
            push RBX
.L_4362ce:

            mov EBP,R8D
            mov R12,R9
            call .L_434040

            mov ESI,R14D
            mov RDI,RAX
            mov RBX,RAX
            call .L_43d460

            cmp R13D,65535
            je .L_436430

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp R13D,EDX
            jb .L_436410

            movzx EDX,BYTE PTR [RCX+4]
            movzx ECX,BYTE PTR [RCX+5]
            shl EDX,8
            add DX,CX
            je .L_436448

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436330:

            movzx EDX,DX
            add RAX,RDX
            movzx EDX,BYTE PTR [RAX+4]
            movzx ECX,BYTE PTR [RAX+5]
            shl EDX,8
            add EDX,ECX
            test DX,DX
            movzx ECX,DX
            je .L_436448

            lea EDX,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RAX+6]
            lea R9,QWORD PTR [RIP+.L_658760]
            lea R8,QWORD PTR [RAX+RDX*2+8]
            jmp .L_436375
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436368:

            add RSI,2
            cmp R8,RSI
            je .L_436448
.L_436375:

            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            xor EDX,EDX
            cmp AX,-1
            movzx EDI,AX
            je .L_4363f0

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            movzx R10D,DX
            add R10,RBX
            test DX,DX
            cmove R10,R9
            movzx ECX,BYTE PTR [R10]
            movzx EDX,BYTE PTR [R10+1]
            shl ECX,8
            add ECX,EDX
            mov EDX,538976288
            movzx ECX,CX
            cmp EDI,ECX
            jae .L_4363f0

            movzx EAX,AX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [R10+RAX*2+2]
            movzx EAX,BYTE PTR [R10]
            movzx EDX,BYTE PTR [R10+1]
            shl EAX,24
            shl EDX,16
            lea EAX,DWORD PTR [RAX+RDX*1]
            movzx EDX,BYTE PTR [R10+2]
            shl EDX,8
            add EDX,EAX
            movzx EAX,BYTE PTR [R10+3]
            add EDX,EAX
.L_4363f0:

            cmp EBP,EDX
            jne .L_436368

            test R12,R12
            mov EAX,1
            je .L_436406

            mov DWORD PTR [R12],EDI
.L_436406:

            pop RBX
.L_436407:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_436410:

            lea RDX,QWORD PTR [R13+R13*2]
            lea RCX,QWORD PTR [RAX+RDX*2+4]
            movzx EDX,BYTE PTR [RCX+4]
            movzx ECX,BYTE PTR [RCX+5]
            shl EDX,8
            add DX,CX
            je .L_436448

            jmp .L_436330
          .byte 0x90
.L_436430:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add DX,CX
            jne .L_436330

            nop
            nop
            nop
            nop
            nop
.L_436448:

            xor EAX,EAX
            test R12,R12
            je .L_436406

            pop RBX
.L_436450:

            pop RBP
            mov DWORD PTR [R12],65535
            pop R12
            pop R13
            pop R14
            ret 
.L_436460:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov EBP,ECX
            mov R12,R8
            mov RBX,R9
            sub RSP,8
.L_436475:

            call .L_434040

            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            lea RSI,QWORD PTR [RIP+.L_658760]
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RAX,RCX
            test DX,DX
            cmovne RSI,RAX
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp R13D,EAX
            jae .L_4364c0

            lea RAX,QWORD PTR [R13+R13*2]
            lea RDX,QWORD PTR [RSI+RAX*2+2]
.L_4364c0:

            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx ECX,AX
            add RSI,RCX
            test AX,AX
            cmovne RDX,RSI
            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            test R12,R12
            movzx EAX,AX
            je .L_436557

            cmp EBP,EAX
            ja .L_436568

            mov ECX,DWORD PTR [R12]
            sub EAX,EBP
            cmp EAX,ECX
            cmova EAX,ECX
            add RBP,RBP
            lea RCX,QWORD PTR [RDX+4]
            test EAX,EAX
            mov DWORD PTR [R12],EAX
            je .L_436547

            sub EAX,1
            lea RCX,QWORD PTR [RCX+RBP*1+1]
            lea RDI,QWORD PTR [RBX+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436528:

            movzx EAX,BYTE PTR [RCX-1]
            movzx ESI,BYTE PTR [RCX]
            add RBX,4
            add RCX,2
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            mov DWORD PTR [RBX-4],EAX
            cmp RDI,RBX
            jne .L_436528
.L_436547:

            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_436557:

            add RSP,8
.L_43655b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436568:

            mov DWORD PTR [R12],0
            jmp .L_436547
.L_436572:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436580:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            xor R13D,R13D
            push RBP
            push RBX
            mov R12D,1
            mov RBX,RCX
            sub RSP,184
.L_4365a0:

            lea RBP,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],ESI
            mov DWORD PTR [RSP+4],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+28]
            lea R15,QWORD PTR [RBP+4]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_4365d0:

            mov R8,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+4]
            mov RDI,R14
            mov ESI,DWORD PTR [RSP]
            mov R9,RBP
            mov ECX,R13D
            mov DWORD PTR [RSP+28],32
            call .L_436460

            mov EDI,DWORD PTR [RSP+28]
            test EDI,EDI
            je .L_436640

            lea EDX,DWORD PTR [RDI-1]
            movzx R8D,BYTE PTR [RBX+112]
            mov RAX,RBP
            lea RSI,QWORD PTR [R15+RDX*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436610:

            mov ECX,DWORD PTR [RAX]
            cmp ECX,65535
            ja .L_43662f

            test R8B,R8B
            jne .L_43662f

            mov EDX,ECX
            mov R10D,R12D
            shr EDX,5
            shl R10D,CL
            or DWORD PTR [RBX+RDX*4+116],R10D
.L_43662f:

            add RAX,4
            cmp RAX,RSI
            jne .L_436610

            add R13D,EDI
            cmp EDI,32
            je .L_4365d0
.L_436640:

            mov RAX,QWORD PTR [RSP+168]
            xor RAX,QWORD PTR FS:[40]
            jne .L_436665

            add RSP,184
.L_43665a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_436665:

            call __stack_chk_fail@PLT
.L_43666a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_436670:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R12,R9
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,184
.L_43668c:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            test R8,R8
            mov DWORD PTR [RSP+8],EDX
            je .L_436738

            mov R13,R8
            mov R8D,DWORD PTR [R8]
            test R8D,R8D
            je .L_43670c

            lea RAX,QWORD PTR [RSP+28]
            mov QWORD PTR [RSP],RAX
            jmp .L_4366d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4366c8:

            add R13,4
            mov R8D,DWORD PTR [R13]
            test R8D,R8D
            je .L_43670c
.L_4366d5:

            mov R9,QWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+8]
            mov ECX,R15D
            mov ESI,EBP
            mov RDI,RBX
            call .L_4362c0

            test EAX,EAX
            je .L_4366c8

            mov EDX,DWORD PTR [RSP+28]
            add R13,4
            mov RCX,R12
            mov ESI,EBP
            mov RDI,RBX
            call .L_436580

            mov R8D,DWORD PTR [R13]
            test R8D,R8D
            jne .L_4366d5
.L_43670c:

            mov RAX,QWORD PTR [RSP+168]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4367f6

            add RSP,184
.L_43672a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436738:

            lea R8,QWORD PTR [RSP+24]
            xor R9D,R9D
            call .L_435d90

            test EAX,EAX
            jne .L_4367e0
.L_43674d:

            lea RAX,QWORD PTR [RSP+28]
            lea R13,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+12],0
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
            nop
.L_436768:

            mov DWORD PTR [RSP+28],32
            sub RSP,8
            mov ECX,R15D
            push R13
            mov R9,QWORD PTR [RSP+16]
            mov ESI,EBP
            mov R8D,DWORD PTR [RSP+28]
            mov EDX,DWORD PTR [RSP+24]
            mov RDI,RBX
            call .L_435f40

            pop RAX
            pop RDX
            mov ECX,DWORD PTR [RSP+28]
            test ECX,ECX
            je .L_43670c

            mov R14D,1
            nop
            nop
            nop
.L_4367a8:

            mov EDX,DWORD PTR [R13+R14*4-4]
            mov RCX,R12
            mov ESI,EBP
            mov RDI,RBX
            call .L_436580

            mov EDX,DWORD PTR [RSP+28]
            mov ECX,R14D
            add R14,1
            cmp EDX,ECX
            ja .L_4367a8

            add DWORD PTR [RSP+12],EDX
            cmp EDX,32
            je .L_436768

            jmp .L_43670c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4367e0:

            mov EDX,DWORD PTR [RSP+24]
            mov RCX,R12
            mov ESI,EBP
            mov RDI,RBX
            call .L_436580

            jmp .L_43674d
.L_4367f6:

            call __stack_chk_fail@PLT
.L_4367fb:

            nop
            nop
            nop
            nop
            nop
.L_436800:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            mov ECX,65535
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R12D,EDX
            mov R15,R9
            sub RSP,40
.L_436821:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],R8
            call .L_436670

            test R14,R14
            je .L_4368b8

            mov ECX,DWORD PTR [R14]
            test ECX,ECX
            je .L_436893

            lea R13,QWORD PTR [RSP+20]
            jmp .L_43685b
          .byte 0x66
          .byte 0x90
.L_436850:

            add R14,4
            mov ECX,DWORD PTR [R14]
            test ECX,ECX
            je .L_436893
.L_43685b:

            mov R8,R13
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            call .L_435c20

            test EAX,EAX
            je .L_436850

            mov ECX,DWORD PTR [RSP+20]
            mov R8,QWORD PTR [RSP+8]
            add R14,4
            mov R9,R15
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            call .L_436670

            mov ECX,DWORD PTR [R14]
            test ECX,ECX
            jne .L_43685b
.L_436893:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4368fb

            add RSP,40
.L_4368a7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4368b8:

            xor R9D,R9D
            xor R8D,R8D
            xor ECX,ECX
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            call .L_435b40

            test EAX,EAX
            mov R13D,EAX
            je .L_436893

            nop
            nop
            nop
            nop
.L_4368d8:

            mov R8,QWORD PTR [RSP+8]
            mov ECX,R14D
            mov R9,R15
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            add R14D,1
            call .L_436670

            cmp R13D,R14D
            jne .L_4368d8

            jmp .L_436893
.L_4368fb:

            call __stack_chk_fail@PLT
.L_436900:

            cmp ESI,1196445523
            je .L_436928

            cmp ESI,1196643650
            jne .L_436920

            mov RAX,QWORD PTR [RDI+160]
            mov EAX,DWORD PTR [RAX+48]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436920:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436928:

            mov RAX,QWORD PTR [RDI+160]
            mov EAX,DWORD PTR [RAX+52]
            ret 
.L_436933:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436940:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R14,R8
            sub RSP,40
.L_43695c:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDX,RDX
            mov QWORD PTR [RSP+8],RCX
            je .L_4369f0

            mov EDX,DWORD PTR [RDX]
            test EDX,EDX
            je .L_4369ca

            lea R12,QWORD PTR [RSP+20]
            jmp .L_436994
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436988:

            add R13,4
            mov EDX,DWORD PTR [R13]
            test EDX,EDX
            je .L_4369ca
.L_436994:

            mov RCX,R12
            mov ESI,EBP
            mov RDI,RBX
            call .L_435740

            test EAX,EAX
            je .L_436988

            mov EDX,DWORD PTR [RSP+20]
            mov RCX,QWORD PTR [RSP+8]
            add R13,4
            mov R9,R15
            mov R8,R14
            mov ESI,EBP
            mov RDI,RBX
            call .L_436800

            mov EDX,DWORD PTR [R13]
            test EDX,EDX
            jne .L_436994
.L_4369ca:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_436a56

            add RSP,40
.L_4369de:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4369f0:

            call .L_434040

            movzx EDX,BYTE PTR [RAX+4]
            movzx ECX,BYTE PTR [RAX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx ESI,DX
            add RAX,RSI
            test DX,DX
            cmovne RCX,RAX
            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx R12D,AX
            je .L_4369ca

            nop
            nop
            nop
            nop
            nop
.L_436a30:

            mov RCX,QWORD PTR [RSP+8]
            mov EDX,R13D
            mov R9,R15
            mov R8,R14
            mov ESI,EBP
            mov RDI,RBX
            add R13D,1
            call .L_436800

            cmp R13D,R12D
            jne .L_436a30

            jmp .L_4369ca
.L_436a56:

            call __stack_chk_fail@PLT
.L_436a5b:

            nop
            nop
            nop
            nop
            nop
.L_436a60:

            push RBX
            mov RBX,RDI
            call .L_433fb0

            xor EDX,EDX
            test AL,AL
            je .L_436a87

            mov RDX,QWORD PTR [RBX+160]
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmp QWORD PTR [RDX+32],RAX
            setne DL
            movzx EDX,DL
.L_436a87:

            mov EAX,EDX
            pop RBX
            ret 
.L_436a8b:

            nop
            nop
            nop
            nop
            nop
.L_436a90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_436a9e:

            mov RAX,QWORD PTR [RDI+128]
            mov R14,QWORD PTR [RSI+200]
            mov RAX,QWORD PTR [RAX+160]
            mov R15,QWORD PTR [RAX+24]
            mov EAX,DWORD PTR [RSI+184]
            test EAX,EAX
            je .L_436b98

            sub EAX,1
            mov R12,RSI
            xor EBX,EBX
            lea R13,QWORD PTR [RAX+RAX*4+5]
            shl R13,2
            jmp .L_436b21
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436ae0:

            cmp EAX,1
            mov ECX,2
            je .L_436aff

            movzx EAX,WORD PTR [R14+RBX*1+16]
            mov ESI,EAX
            and ESI,31
            cmp SI,12
            je .L_436bb0
.L_436aff:

            mov WORD PTR [R14+RBX*1+12],CX
            mov BYTE PTR [R14+RBX*1+14],0
            mov RAX,QWORD PTR [R12+200]
            mov BYTE PTR [RAX+RBX*1+15],0
            add RBX,20
            cmp R13,RBX
            je .L_436b98
.L_436b21:

            movzx EAX,BYTE PTR [R15+4]
            movzx ECX,BYTE PTR [R15+5]
            mov EBP,DWORD PTR [R14+RBX*1]
            shl EAX,8
            mov ESI,EBP
            add EAX,ECX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            call .L_43a6b0

            cmp EAX,2
            mov ECX,4
            je .L_436aff

            cmp EAX,3
            jne .L_436ae0

            movzx EAX,BYTE PTR [R15+10]
            movzx ECX,BYTE PTR [R15+11]
            mov ESI,EBP
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            call .L_43a6b0

            shl EAX,8
            mov ECX,EAX
            or ECX,8
            jmp .L_436aff
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436b98:

            add RSP,8
.L_436b9c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436bb0:

            test AL,32
            mov ECX,8
            je .L_436aff

            movzx EAX,WORD PTR [R14+RBX*1+12]
            and EAX,32
            cmp AX,1
            sbb ECX,ECX
            and ECX,4294967290
            add ECX,8
            jmp .L_436aff
.L_436bd7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436be0:

            push RBX
            mov RBX,RDI
            call .L_433fb0

            xor EDX,EDX
            test AL,AL
            je .L_436c07

            mov RDX,QWORD PTR [RBX+160]
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmp QWORD PTR [RDX+40],RAX
            setne DL
            movzx EDX,DL
.L_436c07:

            mov EAX,EDX
            pop RBX
            ret 
.L_436c0b:

            nop
            nop
            nop
            nop
            nop
.L_436c10:

            mov EAX,DWORD PTR [RSI+184]
            test EAX,EAX
            je .L_436c53

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RCX,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436c30:

            mov RDX,QWORD PTR [RSI+216]
            xor EDI,EDI
            mov BYTE PTR [RDX+RAX*1+18],0
            mov RDX,QWORD PTR [RSI+216]
            mov WORD PTR [RDX+RAX*1+16],DI
            add RAX,20
            cmp RAX,RCX
            jne .L_436c30
.L_436c53:

            ret 
.L_436c55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436c60:

            ret 
.L_436c62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436c70:

            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            sub RSP,16
.L_436c7e:

            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403bc0

            test BYTE PTR [RBX+132],8
            je .L_436cce

            mov EDX,DWORD PTR [RSP+4]
            test EDX,EDX
            je .L_436cce

            mov R12D,DWORD PTR [RBX+144]
            mov RBP,RAX
            xor EBX,EBX
            nop
            nop
            nop
.L_436cb8:

            mov ESI,EBX
            mov EDX,R12D
            mov RDI,RBP
            call .L_433e20

            add EBX,1
            cmp DWORD PTR [RSP+4],EBX
            ja .L_436cb8
.L_436cce:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_436ce7

            add RSP,16
.L_436ce2:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_436ce7:

            call __stack_chk_fail@PLT
.L_436cec:

            nop
            nop
            nop
            nop
.L_436cf0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov R12,RDX
            mov R14,R8
            sub RSP,8
.L_436d10:

            call .L_433fb0

            test AL,AL
            lea RCX,QWORD PTR [RIP+.L_658760]
            je .L_436d2b

            mov RAX,QWORD PTR [RBX+160]
            mov RCX,QWORD PTR [RAX+40]
.L_436d2b:

            movzx EAX,BYTE PTR [RCX+6]
            movzx EDX,BYTE PTR [RCX+7]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx ESI,AX
            add RCX,RSI
            test AX,AX
            cmovne RDX,RCX
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            test AX,AX
            movzx ECX,AX
            je .L_436e80

            lea EAX,DWORD PTR [RCX-1]
            lea R11,QWORD PTR [RDX+2]
            lea RCX,QWORD PTR [RIP+.L_658760]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBX,QWORD PTR [RDX+RAX*2+8]
            jmp .L_436d8d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436d80:

            add R11,6
            cmp RBX,R11
            je .L_436e80
.L_436d8d:

            movzx EDI,BYTE PTR [R11]
            movzx EAX,BYTE PTR [R11+1]
            movzx ESI,BYTE PTR [R11+3]
            shl EAX,16
            shl EDI,24
            lea EDI,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R11+2]
            shl EAX,8
            add EAX,EDI
            add EAX,ESI
            cmp EAX,1936292453
            jne .L_436d80

            movzx ESI,BYTE PTR [R11+4]
            movzx EAX,BYTE PTR [R11+5]
            shl ESI,8
            add ESI,EAX
            movzx EAX,SI
            add RAX,RDX
            test SI,SI
            cmove RAX,RCX
            movzx EDI,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,ESI
            movzx ESI,DI
            add RAX,RSI
            test DI,DI
            cmove RAX,RCX
            mov RSI,RAX
            movzx EAX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RSI+1]
            shl EAX,8
            add AX,DI
            je .L_436d80

            test RBP,RBP
            je .L_436e09

            movzx EAX,AX
            mov DWORD PTR [RBP],EAX
.L_436e09:

            test R12,R12
            je .L_436e22

            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R12],EAX
.L_436e22:

            test R13,R13
            je .L_436e3b

            movzx EAX,BYTE PTR [RSI+4]
            movzx EDX,BYTE PTR [RSI+5]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R13],EAX
.L_436e3b:

            test R14,R14
            je .L_436e53

            movzx EAX,BYTE PTR [RSI+6]
            movzx EDX,BYTE PTR [RSI+7]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R14],EAX
.L_436e53:

            test R15,R15
            mov EAX,1
            je .L_436ec0

            movzx EDX,BYTE PTR [RSI+8]
            movzx ECX,BYTE PTR [RSI+9]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            mov DWORD PTR [R15],EDX
            add RSP,8
.L_436e74:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_436e80:

            test RBP,RBP
            je .L_436e8c

            mov DWORD PTR [RBP],0
.L_436e8c:

            test R12,R12
            je .L_436e99

            mov DWORD PTR [R12],0
.L_436e99:

            test R13,R13
            je .L_436ea6

            mov DWORD PTR [R13],0
.L_436ea6:

            test R14,R14
            je .L_436eb2

            mov DWORD PTR [R14],0
.L_436eb2:

            xor EAX,EAX
            test R15,R15
            je .L_436ec0

            mov DWORD PTR [R15],0
.L_436ec0:

            add RSP,8
.L_436ec4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_436ecf:

            nop
.L_436ed0:

            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            mov RCX,RDI
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,ESI
            movzx ESI,AX
            add RDX,RSI
            test AX,AX
            mov RSI,RCX
            cmovne RDI,RDX
            jmp .L_441d10
.L_436efb:

            nop
            nop
            nop
            nop
            nop
.L_436f00:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,56
.L_436f13:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],3
            call .L_433fb0

            test AL,AL
            lea RDI,QWORD PTR [RIP+.L_658760]
            je .L_436f59

            mov RAX,QWORD PTR [RBX+160]
            mov RDI,QWORD PTR [RAX+32]
.L_436f59:

            mov ESI,EBP
            call .L_43d5a0

            mov R15,RAX
            lea RAX,QWORD PTR [RIP+.L_4440d0]
            mov QWORD PTR [RSP+16],RAX
            movzx EBX,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx EBX,BX
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_436ffb

            lea R12D,DWORD PTR [RSI-1]
            xor R14D,R14D
            mov R13,RSP
            lea RBP,QWORD PTR [RIP+.L_658760]
            add R12,1
            jmp .L_436fba
.L_436fb0:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_436fba:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_436fcf

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_436fcf:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R13
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            add R14,1
            call .L_443750

            cmp R12,R14
            jne .L_436fb0
.L_436ffb:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43701a

            add RSP,56
.L_43700f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43701a:

            call __stack_chk_fail@PLT
.L_43701f:

            nop
.L_437020:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBX,ESI
            sub RSP,56
.L_437030:

            mov RBP,QWORD PTR [RDI+160]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp DWORD PTR [RBP+48],EBX
            jbe .L_437090

            mov QWORD PTR [RSP],RDI
            mov RDI,QWORD PTR [RBP+32]
            test R8D,R8D
            mov ESI,EBX
            mov R13,RDX
            mov R12D,ECX
            mov QWORD PTR [RSP+8],RDX
            setne BYTE PTR [RSP+20]
            mov DWORD PTR [RSP+16],ECX
            mov DWORD PTR [RSP+24],0
            call .L_43d5a0

            mov R14,RAX
            mov RAX,QWORD PTR [RBP+56]
            lea RDX,QWORD PTR [RBX+RBX*2]
            test R12D,R12D
            lea RSI,QWORD PTR [RAX+RDX*8]
            jne .L_4370b8
.L_43708e:

            xor EAX,EAX
.L_437090:

            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            jne .L_437195

            add RSP,56
.L_4370a8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4370b8:

            mov EDX,DWORD PTR [R13]
            mov EAX,1
            mov RBX,RAX
            mov ECX,EDX
            shr ECX,4
            shl RBX,CL
            test QWORD PTR [RSI],RBX
            je .L_43708e

            mov RBX,RAX
            mov ECX,EDX
            shl RBX,CL
            test QWORD PTR [RSI+8],RBX
            je .L_43708e

            mov ECX,EDX
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RSI+16],RAX
            je .L_43708e

            movzx EBP,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            movzx EDX,BYTE PTR [R14+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R14+4]
            movzx EBP,BP
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43708e

            lea R12D,DWORD PTR [RSI-1]
            xor R15D,R15D
            mov R13,RSP
            lea RBX,QWORD PTR [RIP+.L_658760]
            add R12,1
            jmp .L_43714f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437138:

            add R15,1
            cmp R12,R15
            je .L_43708e

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
.L_43714f:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_437164

            lea RDX,QWORD PTR [R14+R15*2+6]
.L_437164:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R13
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_4441a0

            test AL,AL
            je .L_437138

            mov EAX,1
            jmp .L_437090
.L_437195:

            call __stack_chk_fail@PLT
.L_43719a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4371a0:

            push R14
            push R13
            mov R14D,R8D
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R13D,ECX
            call .L_433fb0

            test AL,AL
            jne .L_4371d0

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4371d0:

            mov R8D,R14D
            mov ECX,R13D
            mov RDX,R12
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_437020
.L_4371eb:

            nop
            nop
            nop
            nop
            nop
.L_4371f0:

            push R15
            push R14
            mov R15,R8
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,ESI
            mov R14,R9
            sub RSP,8408
.L_437210:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8392],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],RCX
            mov RBX,QWORD PTR [RSP+8464]
            call .L_433fb0

            test AL,AL
            je .L_4373e0

            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RBP
            test RCX,RCX
            je .L_4374d0

            test R15,R15
            mov QWORD PTR [RSP+24],RCX
            je .L_4374f0
.L_43725e:

            test R14,R14
            mov QWORD PTR [RSP+32],R15
            je .L_437510
.L_43726c:

            test RBX,RBX
            mov QWORD PTR [RSP+40],R14
            je .L_4374c0
.L_43727a:

            mov QWORD PTR [RSP+48],RBX
            lea RDI,QWORD PTR [RSP+64]
            lea RBX,QWORD PTR [RSP+16]
            xor ESI,ESI
            mov EDX,8312
            mov QWORD PTR [RSP+56],0
            call memset@PLT

            lea RDI,QWORD PTR [RBX+56]
            xor ESI,ESI
            mov QWORD PTR [RSP+8376],3
            mov DWORD PTR [RSP+64],1
            call pthread_mutex_init@PLT

            cmp DWORD PTR [RSP+64],-1
            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movaps XMMWORD PTR [RBX+112],XMM0
            movaps XMMWORD PTR [RBX+128],XMM0
            movaps XMMWORD PTR [RBX+144],XMM0
            je .L_43730f

            lea RDI,QWORD PTR [RBX+168]
            mov ECX,1023
            xor EAX,EAX
            mov BYTE PTR [RSP+176],0
            mov QWORD PTR [RSP+180],0
            mov QWORD PTR [RBX+8348],0

            rep stosq QWORD PTR [RDI]
.L_43730f:

            cmp R12D,1196445523
            je .L_437410

            cmp R12D,1196643650
            jne .L_4373e0

            mov RAX,QWORD PTR [RBP+160]
            mov ESI,R13D
            mov RDI,QWORD PTR [RAX+32]
            call .L_43d5a0

            mov R15,RAX
            lea RAX,QWORD PTR [RIP+.L_446dd0]
            mov QWORD PTR [RSP+56],RAX
            movzx EBP,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx EBP,BP
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_4373e0

            lea R13D,DWORD PTR [RSI-1]
            xor R14D,R14D
            lea R12,QWORD PTR [RIP+.L_658760]
            add R13,1
            jmp .L_43739a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437390:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_43739a:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_4373af

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_4373af:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,R12
            add R14,1
            call .L_446900

            cmp R13,R14
            jne .L_437390

            nop
            nop
            nop
            nop
            nop
.L_4373e0:

            mov RAX,QWORD PTR [RSP+8392]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43751d

            add RSP,8408
.L_4373fe:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437410:

            mov RAX,QWORD PTR [RBP+160]
            mov ESI,R13D
            mov RDI,QWORD PTR [RAX+40]
            call .L_43d5a0

            movzx EBP,BYTE PTR [RAX]
            mov R15,RAX
            movzx EAX,BYTE PTR [RAX+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx EBP,BP
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_4373e0

            lea R13D,DWORD PTR [RSI-1]
            xor R14D,R14D
            lea R12,QWORD PTR [RIP+.L_658760]
            add R13,1
            jmp .L_437472
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437468:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_437472:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_437487

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_437487:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,R12
            add R14,1
            call .L_446ea0

            cmp R13,R14
            jne .L_437468

            jmp .L_4373e0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4374c0:

            call .L_4313a0

            mov RBX,RAX
            jmp .L_43727a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4374d0:

            call .L_4313a0

            test R15,R15
            mov RCX,RAX
            mov QWORD PTR [RSP+24],RCX
            jne .L_43725e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4374f0:

            call .L_4313a0

            test R14,R14
            mov R15,RAX
            mov QWORD PTR [RSP+32],R15
            jne .L_43726c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437510:

            call .L_4313a0

            mov R14,RAX
            jmp .L_43726c
.L_43751d:

            call __stack_chk_fail@PLT
.L_437522:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437530:

            push R15
            push R14
            mov ESI,72
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov EDI,1
            sub RSP,168
.L_43754e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+48],RAX
            je .L_437920

            mov RAX,QWORD PTR [R12+120]
            test RAX,RAX
            je .L_437950

            mov RDX,QWORD PTR [R12+128]
            mov ESI,1195656518
            mov RDI,R12
            call RAX

            test RAX,RAX
            mov RBP,RAX
            je .L_437950
.L_4375a0:

            mov RDI,RBP
            lea R13,QWORD PTR [RSP+112]
            mov DWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],0
            mov BYTE PTR [RSP+136],0
            mov DWORD PTR [RSP+140],0
            mov QWORD PTR [RSP+144],0
            call .L_401c30

            mov BYTE PTR [RSP+136],0
            mov RDI,RAX
            mov QWORD PTR [RSP+144],RAX
.L_4375fc:

            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+144]
            mov RBX,RAX
            mov QWORD PTR [RSP+120],RAX
            call .L_401d40

            mov R14,QWORD PTR [RSP+120]
            mov EAX,EAX
            add RBX,RAX
            mov QWORD PTR [RSP+128],RBX
            cmp RBX,R14
            jb .L_4384c4

            test R14,R14
            mov DWORD PTR [RSP+140],0
            mov DWORD PTR [RSP+112],0
            je .L_4376d8

            mov RSI,R13
            mov RDI,R14
            call .L_443000

            test AL,AL
            jne .L_4376c3

            mov EAX,DWORD PTR [RSP+140]
            test EAX,EAX
            je .L_438364

            cmp BYTE PTR [RSP+136],0
            jne .L_438364

            xor ESI,ESI
            mov RDI,RBP
            call .L_401d70

            mov RDI,RBP
            mov RBX,RAX
            mov QWORD PTR [RSP+120],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            cmp QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],RBX
            je .L_438364

            mov BYTE PTR [RSP+136],1
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_4375fc
.L_4376c3:

            mov ECX,DWORD PTR [RSP+140]
            test ECX,ECX
            jne .L_438462

            nop
            nop
            nop
            nop
            nop
            nop
.L_4376d8:

            mov RDI,QWORD PTR [RSP+144]
            call .L_401950
.L_4376e5:

            mov RBX,QWORD PTR [RSP+48]
            mov RDI,RBP
            mov QWORD PTR [RBX],RBP
            call .L_401d20

            xor ESI,ESI
            mov RDI,RBP
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658760]
            test RAX,RAX
            cmove RAX,RDX
            mov QWORD PTR [RBX+24],RAX
            mov RAX,QWORD PTR [R12+120]
            test RAX,RAX
            je .L_437970

            mov RDX,QWORD PTR [R12+128]
            mov ESI,1196643650
            mov RDI,R12
            call RAX

            test RAX,RAX
            je .L_437970
.L_43773a:

            mov RDI,RAX
            call .L_4482b0

            mov R14,QWORD PTR [RSP+48]
            mov RBX,RAX
            mov RDI,RAX
            mov QWORD PTR [R14+8],RAX
            call .L_401d20

            xor ESI,ESI
            mov RDI,RBX
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658760]
            test RAX,RAX
            cmove RAX,RDX
            mov QWORD PTR [R14+32],RAX
            mov RAX,QWORD PTR [R12+120]
            test RAX,RAX
            je .L_437960

            mov RDX,QWORD PTR [R12+128]
            mov ESI,1196445523
            mov RDI,R12
            call RAX

            test RAX,RAX
            je .L_437960
.L_43779b:

            mov RDI,RAX
            call .L_4495a0

            mov R14,QWORD PTR [RSP+48]
            mov RBX,RAX
            mov RDI,RAX
            mov QWORD PTR [R14+16],RAX
            call .L_401d20

            xor ESI,ESI
            mov RDI,RBX
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_658760]
            test RAX,RAX
            mov RDI,QWORD PTR [R14]
            cmove RAX,RDX
            mov QWORD PTR [R14+40],RAX
            call .L_401d40

            mov RDI,QWORD PTR [R14+8]
            mov EBX,EAX
            call .L_401d40

            mov RDI,QWORD PTR [R14+16]
            mov EBP,EAX
            call .L_401d40

            cmp EBX,442
            sete DL
            cmp EAX,42038
            jne .L_43797a

            test DL,DL
            je .L_43797a
.L_43780d:

            cmp EBP,2874
            je .L_437aa8
.L_437819:

            cmp EBX,490
            jne .L_4379c0

            cmp EAX,41638
            jne .L_4379c0

            cmp EBP,3046
            je .L_437aa8
.L_43783c:

            cmp EBX,910
            jne .L_4379e3

            cmp EAX,47732
            jne .L_4379e3

            cmp EBP,12566
            je .L_4378f0
.L_43785f:

            cmp EBX,994
            jne .L_437a06

            cmp EAX,60336
            jne .L_437a06

            cmp EBP,24474
            je .L_4378f0
.L_43787e:

            cmp EBX,844
            jne .L_437a29

            cmp EAX,45474
            jne .L_437a29

            cmp EBX,188
            sete DL
            cmp EBP,7302
            je .L_4378f0
.L_4378a6:

            cmp EAX,3426
            jne .L_437a58

            test DL,DL
            je .L_437a58

            cmp EBP,264
            je .L_4378f0
.L_4378c1:

            cmp EBX,1330
            sete CL
            cmp EAX,57938
            mov EDX,ECX
            jne .L_437a84

            test CL,CL
            je .L_437a84

            cmp EBP,109904
            jne .L_437ae5

            nop
            nop
            nop
            nop
            nop
.L_4378f0:

            mov RAX,QWORD PTR [RSP+48]
            lea RBX,QWORD PTR [RIP+.L_658760]
            mov QWORD PTR [RAX+24],RBX
            jmp .L_437ae5
.L_437905:

            mov RDI,QWORD PTR [RSP+48]
            call .L_434c70

            mov QWORD PTR [RSP+48],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437920:

            mov RBX,QWORD PTR [RSP+152]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+48]
            jne .L_4384e3

            add RSP,168
.L_437943:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_437950:

            call .L_401c20

            mov RBP,RAX
            jmp .L_4375a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437960:

            call .L_401c20

            jmp .L_43779b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437970:

            call .L_401c20

            jmp .L_43773a
.L_43797a:

            cmp EBX,430
            sete CL
            cmp EAX,40662
            jne .L_437992

            test CL,CL
            jne .L_43780d
.L_437992:

            cmp EAX,39116
            jne .L_4379a1

            test DL,DL
            jne .L_43780d
.L_4379a1:

            cmp EAX,39374
            jne .L_437819

            test CL,CL
            jne .L_43780d

            jmp .L_437819
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4379c0:

            cmp EBX,478
            jne .L_4383a7

            cmp EAX,41902
            jne .L_4383a7

            cmp EBP,3046
            je .L_437aa8
.L_4379e3:

            cmp EBX,928
            jne .L_4383ca

            cmp EAX,59332
            jne .L_4383ca

            cmp EBP,23298
            je .L_4378f0
.L_437a06:

            cmp EBX,1006
            jne .L_4383ed

            cmp EAX,61740
            jne .L_4383ed

            cmp EBP,24470
            je .L_4378f0
.L_437a29:

            cmp EBX,192
            jne .L_438410

            cmp EAX,7254
            jne .L_438410

            cmp EBP,12638
            je .L_4378f0

            cmp EBP,12690
            je .L_4378f0
.L_437a58:

            cmp EBX,1046
            jne .L_43843a

            cmp EAX,17112
            jne .L_43843a

            cmp EBX,1330
            sete DL
            cmp EBP,71788
            je .L_4378f0
.L_437a84:

            cmp EAX,58972
            sete CL
            cmp EBP,109904
            sete AL
            test CL,AL
            je .L_437ae5

            test DL,DL
            jne .L_4378f0

            jmp .L_437ae5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437aa8:

            mov RAX,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,5
            mov RDX,QWORD PTR [RAX+24]
            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a6b0

            cmp EAX,3
            je .L_4378f0
.L_437ae5:

            mov RBP,QWORD PTR [RSP+48]
            mov ESI,24
            mov RDI,QWORD PTR [RBP+32]
            mov R15,QWORD PTR [RBP+40]
            movzx EAX,BYTE PTR [RDI+8]
            movzx EDX,BYTE PTR [RDI+9]
            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+72],R15
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx ECX,AX
            add RCX,RDI
            test AX,AX
            mov R12,RDX
            cmovne RDX,RCX
            movzx EBX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BX
            mov DWORD PTR [RBP+48],EAX
            movzx EDX,BYTE PTR [R15+8]
            mov DWORD PTR [RSP+60],EAX
            movzx EAX,BYTE PTR [R15+9]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R15
            test DX,DX
            cmove RAX,R12
            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDX,8
            add EAX,EDX
            mov WORD PTR [RSP+94],AX
            movzx EAX,AX
            mov DWORD PTR [RBP+52],EAX
            movzx EDX,BYTE PTR [RDI+8]
            mov DWORD PTR [RSP+88],EAX
            movzx EAX,BYTE PTR [RDI+9]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,RDI
            test DX,DX
            cmove RAX,R12
            movzx EDI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call calloc@PLT

            mov QWORD PTR [RBP+56],RAX
            movzx EDX,BYTE PTR [R15+8]
            mov R14,RAX
            movzx EAX,BYTE PTR [R15+9]
            mov ESI,24
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R15
            test DX,DX
            cmovne R12,RAX
            movzx EDI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call calloc@PLT

            test R14,R14
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RBP+64],RAX
            jne .L_437bf7

            test BX,BX
            jne .L_437905
.L_437bf7:

            cmp QWORD PTR [RSP+80],0
            jne .L_437c0b

            cmp WORD PTR [RSP+94],0
            jne .L_437905
.L_437c0b:

            test BX,BX
            mov DWORD PTR [RSP+56],0
            mov R15,R14
            je .L_437faf

            nop
.L_437c20:

            mov ESI,DWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+64]
            call .L_43d5a0

            mov QWORD PTR [R15],0
            mov R12,RAX
            mov QWORD PTR [R15+8],0
            mov QWORD PTR [R15+16],0
            movzx EAX,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [R12+1]
            mov QWORD PTR [RSP+96],R15
            mov DWORD PTR [RSP+104],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R12+5]
            movzx EAX,AX
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [R12+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_437f98

            lea ECX,DWORD PTR [RSI-1]
            xor R14D,R14D
            mov QWORD PTR [RSP],R12
            lea RBX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+24],RBX
            lea RBX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+32],RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437cb0:

            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_437ccd

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RAX+R14*2+6]
.L_437ccd:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RSP+32]
            shl EAX,8
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            movzx EDI,AX
            add RDI,QWORD PTR [RSP]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            call .L_419430

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_437ef0

            cmp DX,2
            jne .L_437ecf

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EDI,SI
            je .L_437ecf

            mov QWORD PTR [RSP+40],R14
            lea R9,QWORD PTR [RAX+4]
            xor R11D,R11D
            mov EBX,1
            mov R14D,EDI
            jmp .L_437e02
.L_437d50:

            xor EBP,EBP
            xor EDI,EDI
            xor EDX,EDX
            mov R12D,4294967295
            xor ECX,ECX
            xor R10D,R10D
            mov R8D,1
            xor ESI,ESI
.L_437d69:

            mov R13,RBX
            shl R13,CL
            mov ECX,R10D
            mov R10D,2
            and ECX,63
            shl R10,CL
            sub R10,R13
            mov QWORD PTR [RSP+8],R10
            mov R10,RBX
            shl R10,CL
            cmp R13,R10
            mov R10,QWORD PTR [RSP+8]
            seta CL
            movzx ECX,CL
            sub R10,RCX
            or QWORD PTR [R15],R10
            cmp R12D,62
            jbe .L_437e76
.L_437daa:

            cmp EBP,62
            mov QWORD PTR [R15+8],-1
            ja .L_437eb1
.L_437dbb:

            mov ECX,EDI
            mov RSI,RBX
            mov RDI,RBX
            shl RSI,CL
            mov ECX,EDX
            mov EDX,2
            and ECX,63
            shl RDX,CL
            shl RDI,CL
            sub RDX,RSI
            cmp RSI,RDI
            seta CL
            add R11D,1
            add R9,6
            movzx ECX,CL
            sub RDX,RCX
            or QWORD PTR [R15+16],RDX
            cmp R14D,R11D
            je .L_437eca
.L_437dfa:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_437e02:

            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EDX,R11D
            jbe .L_437d50

            movzx ESI,BYTE PTR [R9+2]
            movzx ECX,BYTE PTR [R9+3]
            movzx R8D,BYTE PTR [R9]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [R9+1]
            shl R8D,8
            movzx EDX,SI
            mov R10D,EDX
            mov R12D,EDX
            shr EDX,9
            shr R10D,4
            mov EBP,EDX
            add R8D,ECX
            mov R13D,R10D
            movzx EDI,R8W
            mov ECX,EDI
            sub R12D,EDI
            shr EDI,9
            shr ECX,4
            sub EBP,EDI
            sub R13D,ECX
            cmp R13D,62
            jbe .L_437d69

            cmp R12D,62
            mov QWORD PTR [R15],-1
            ja .L_437daa
.L_437e76:

            mov ECX,R8D
            mov R10,RBX
            shl R10,CL
            mov ECX,ESI
            mov ESI,2
            and ECX,63
            mov R8,R10
            shl RSI,CL
            sub RSI,R10
            mov R10,RBX
            shl R10,CL
            cmp R8,R10
            seta CL
            movzx ECX,CL
            sub RSI,RCX
            or QWORD PTR [R15+8],RSI
            cmp EBP,62
            jbe .L_437dbb
.L_437eb1:

            add R11D,1
            add R9,6
            mov QWORD PTR [R15+16],-1
            cmp R14D,R11D
            jne .L_437dfa
.L_437eca:

            mov R14,QWORD PTR [RSP+40]
.L_437ecf:

            add R14,1
            cmp QWORD PTR [RSP+24],R14
            je .L_437f98
.L_437ede:

            mov RBX,QWORD PTR [RSP]
            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            jmp .L_437cb0
          .byte 0x90
.L_437ef0:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EBP,SI
            je .L_437ecf

            mov RBX,QWORD PTR [R15]
            mov R11,QWORD PTR [R15+8]
            lea R9,QWORD PTR [RAX+4]
            mov R10,QWORD PTR [R15+16]
            xor EDI,EDI
            mov R8D,1
            jmp .L_437f28
.L_437f20:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_437f28:

            shl EDX,8
            mov R12,R8
            mov R13,R8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EDX,EDI
            cmova RCX,R9
            add EDI,1
            add R9,2
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            mov ECX,ESI
            shr ESI,9
            shr ECX,4
            shl R12,CL
            mov ECX,EDX
            mov RDX,R8
            shl R13,CL
            mov ECX,ESI
            or RBX,R12
            shl RDX,CL
            or R11,R13
            mov QWORD PTR [R15],RBX
            or R10,RDX
            cmp EBP,EDI
            mov QWORD PTR [R15+8],R11
            mov QWORD PTR [R15+16],R10
            jne .L_437f20

            add R14,1
            cmp QWORD PTR [RSP+24],R14
            jne .L_437ede
.L_437f98:

            add DWORD PTR [RSP+56],1
            add R15,24
            mov EAX,DWORD PTR [RSP+56]
            cmp EAX,DWORD PTR [RSP+60]
            jne .L_437c20
.L_437faf:

            cmp WORD PTR [RSP+94],0
            je .L_437920

            mov R14,QWORD PTR [RSP+80]
            mov DWORD PTR [RSP+56],0
            mov R15,R14
            nop
            nop
            nop
            nop
            nop
.L_437fd0:

            mov ESI,DWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+72]
            call .L_43d5a0

            mov QWORD PTR [R15],0
            mov R12,RAX
            mov QWORD PTR [R15+8],0
            mov QWORD PTR [R15+16],0
            movzx EAX,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [R12+1]
            mov QWORD PTR [RSP+96],R15
            mov DWORD PTR [RSP+104],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R12+5]
            movzx EAX,AX
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [R12+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_438348

            lea ECX,DWORD PTR [RSI-1]
            xor R14D,R14D
            mov QWORD PTR [RSP],R12
            lea RBX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+24],RBX
            lea RBX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+32],RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438060:

            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_43807d

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RAX+R14*2+6]
.L_43807d:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RSP+32]
            shl EAX,8
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            movzx EDI,AX
            add RDI,QWORD PTR [RSP]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            call .L_449b40

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_4382a0

            cmp DX,2
            jne .L_43827f

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EDI,SI
            je .L_43827f

            mov QWORD PTR [RSP+40],R14
            lea R9,QWORD PTR [RAX+4]
            xor R11D,R11D
            mov EBX,1
            mov R14D,EDI
            jmp .L_4381b2
.L_438100:

            xor EBP,EBP
            xor EDI,EDI
            xor EDX,EDX
            mov R12D,4294967295
            xor ECX,ECX
            xor R10D,R10D
            mov R8D,1
            xor ESI,ESI
.L_438119:

            mov R13,RBX
            shl R13,CL
            mov ECX,R10D
            mov R10D,2
            and ECX,63
            shl R10,CL
            sub R10,R13
            mov QWORD PTR [RSP+8],R10
            mov R10,RBX
            shl R10,CL
            cmp R13,R10
            mov R10,QWORD PTR [RSP+8]
            seta CL
            movzx ECX,CL
            sub R10,RCX
            or QWORD PTR [R15],R10
            cmp R12D,62
            jbe .L_438226
.L_43815a:

            cmp EBP,62
            mov QWORD PTR [R15+8],-1
            ja .L_438261
.L_43816b:

            mov ECX,EDI
            mov RSI,RBX
            mov RDI,RBX
            shl RSI,CL
            mov ECX,EDX
            mov EDX,2
            and ECX,63
            shl RDX,CL
            shl RDI,CL
            sub RDX,RSI
            cmp RSI,RDI
            seta CL
            add R11D,1
            add R9,6
            movzx ECX,CL
            sub RDX,RCX
            or QWORD PTR [R15+16],RDX
            cmp R14D,R11D
            je .L_43827a
.L_4381aa:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_4381b2:

            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EDX,R11D
            jbe .L_438100

            movzx ESI,BYTE PTR [R9+2]
            movzx ECX,BYTE PTR [R9+3]
            movzx R8D,BYTE PTR [R9]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [R9+1]
            shl R8D,8
            movzx EDX,SI
            mov R10D,EDX
            mov R12D,EDX
            shr EDX,9
            shr R10D,4
            mov EBP,EDX
            add R8D,ECX
            mov R13D,R10D
            movzx EDI,R8W
            mov ECX,EDI
            sub R12D,EDI
            shr EDI,9
            shr ECX,4
            sub EBP,EDI
            sub R13D,ECX
            cmp R13D,62
            jbe .L_438119

            cmp R12D,62
            mov QWORD PTR [R15],-1
            ja .L_43815a
.L_438226:

            mov ECX,R8D
            mov R10,RBX
            shl R10,CL
            mov ECX,ESI
            mov ESI,2
            and ECX,63
            mov R8,R10
            shl RSI,CL
            sub RSI,R10
            mov R10,RBX
            shl R10,CL
            cmp R8,R10
            seta CL
            movzx ECX,CL
            sub RSI,RCX
            or QWORD PTR [R15+8],RSI
            cmp EBP,62
            jbe .L_43816b
.L_438261:

            add R11D,1
            add R9,6
            mov QWORD PTR [R15+16],-1
            cmp R14D,R11D
            jne .L_4381aa
.L_43827a:

            mov R14,QWORD PTR [RSP+40]
.L_43827f:

            add R14,1
            cmp QWORD PTR [RSP+24],R14
            je .L_438348
.L_43828e:

            mov RBX,QWORD PTR [RSP]
            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            jmp .L_438060
          .byte 0x90
.L_4382a0:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EBP,SI
            je .L_43827f

            mov RBX,QWORD PTR [R15]
            mov R11,QWORD PTR [R15+8]
            lea R9,QWORD PTR [RAX+4]
            mov R10,QWORD PTR [R15+16]
            xor EDI,EDI
            mov R8D,1
            jmp .L_4382d8
.L_4382d0:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_4382d8:

            shl EDX,8
            mov R12,R8
            mov R13,R8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EDX,EDI
            cmova RCX,R9
            add EDI,1
            add R9,2
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            mov ECX,ESI
            shr ESI,9
            shr ECX,4
            shl R12,CL
            mov ECX,EDX
            mov RDX,R8
            shl R13,CL
            mov ECX,ESI
            or RBX,R12
            shl RDX,CL
            or R11,R13
            mov QWORD PTR [R15],RBX
            or R10,RDX
            cmp EBP,EDI
            mov QWORD PTR [R15+8],R11
            mov QWORD PTR [R15+16],R10
            jne .L_4382d0

            add R14,1
            cmp QWORD PTR [RSP+24],R14
            jne .L_43828e
.L_438348:

            add DWORD PTR [RSP+56],1
            add R15,24
            mov EAX,DWORD PTR [RSP+56]
            cmp EAX,DWORD PTR [RSP+88]
            jne .L_437fd0

            jmp .L_437920
.L_438364:

            mov RDI,QWORD PTR [RSP+144]
            call .L_401950

            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+120],0
.L_438392:

            mov RDI,RBP
            call .L_401950

            call .L_401c20

            mov RBP,RAX
            jmp .L_4376e5
.L_4383a7:

            cmp EBX,898
            jne .L_43783c

            cmp EAX,46470
            jne .L_43783c

            cmp EBP,12554
            je .L_4378f0
.L_4383ca:

            cmp EBX,940
            jne .L_43785f

            cmp EAX,60732
            jne .L_43785f

            cmp EBP,23310
            je .L_4378f0
.L_4383ed:

            cmp EBX,832
            jne .L_43787e

            cmp EAX,47162
            jne .L_43787e

            cmp EBP,7324
            je .L_4378f0
.L_438410:

            cmp EBX,188
            sete CL
            cmp EAX,3852
            mov EDX,ECX
            jne .L_4378a6

            test CL,CL
            je .L_4378a6

            cmp EBP,248
            je .L_4378f0
.L_43843a:

            cmp EBX,1058
            jne .L_4378c1

            cmp EAX,17514
            jne .L_4378c1

            cmp EBP,71794
            jne .L_437ae5

            jmp .L_4378f0
.L_438462:

            mov RSI,R13
            mov RDI,R14
            mov DWORD PTR [RSP+140],0
            call .L_443000

            mov EDX,DWORD PTR [RSP+140]
            mov EBX,EAX
            test EDX,EDX
            jne .L_438364

            mov RDI,QWORD PTR [RSP+144]
            call .L_401950

            test BL,BL
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+120],0
            jne .L_4376e5

            jmp .L_438392
.L_4384c4:

            lea RCX,QWORD PTR [RIP+.L_44aea0]
            lea RSI,QWORD PTR [RIP+.L_44827b]
            lea RDI,QWORD PTR [RIP+.L_448293]
            mov EDX,218
            call __assert_fail@PLT
.L_4384e3:

            call __stack_chk_fail@PLT
.L_4384e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4384f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,344
.L_438501:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+328],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+24]
            mov R8D,DWORD PTR [RAX+184]
            mov QWORD PTR [RSP+16],RAX
            test R8D,R8D
            je .L_4387f0

            mov RBP,RDX
            mov EDX,DWORD PTR [RDI+36]
            mov R15,RDI
            test EDX,EDX
            je .L_4387f0

            movzx EAX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            mov R14,RSI
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            test AL,16
            jne .L_438a78
.L_438559:

            cmp DWORD PTR [R15],1
            mov DWORD PTR [R15+60],EAX
            mov QWORD PTR [R15+88],R15
            mov QWORD PTR [R15+128],0
            mov QWORD PTR [R15+112],0
            mov QWORD PTR [R15+120],0
            mov DWORD PTR [R15+96],EAX
            je .L_4389c8

            movzx ECX,BYTE PTR [R15+40]
            mov BYTE PTR [R15+100],0
.L_438594:

            lea RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [R15+101],CL
            mov DWORD PTR [R15+160],EAX
            mov ECX,34
            xor EAX,EAX
            mov DWORD PTR [R15+104],EDX
            mov QWORD PTR [R15+152],R15
            mov QWORD PTR [R15+192],0
            mov RBX,RDI
            mov QWORD PTR [R15+176],0
            mov QWORD PTR [R15+184],0
            mov BYTE PTR [R15+164],1
            mov BYTE PTR [R15+165],1
            mov DWORD PTR [R15+168],4294967295
            mov QWORD PTR [RSP+24],RDI

            rep stosq QWORD PTR [RDI]

            movzx ECX,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            movzx EDX,BYTE PTR [R14+5]
            mov QWORD PTR [RSP+32],RBX
            mov DWORD PTR [RSP+40],0
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [R14+4]
            movzx EBX,CX
            mov ESI,EAX
            shl ESI,8
            add ESI,EDX
            test SI,SI
            movzx EDI,SI
            je .L_438a60

            lea R13D,DWORD PTR [RDI-1]
            lea R12,QWORD PTR [RIP+.L_658760]
            lea RSI,QWORD PTR [R13+1]
            xor R13D,R13D
            mov QWORD PTR [RSP],RSI
            lea RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RSI
            jmp .L_43866a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438660:

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
.L_43866a:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_43867f

            lea RDX,QWORD PTR [R14+R13*2+6]
.L_43867f:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RSP+8]
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,R12
            add R13,1
            call .L_449e80

            cmp QWORD PTR [RSP],R13
            jne .L_438660

            movzx EBX,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            shl EBX,8
            add EBX,EAX
            cmp BX,7
            je .L_4389f0

            movzx EBX,BX
.L_4386c9:

            cmp EBX,8
            sete BL
.L_4386cf:

            test BL,BL
            jne .L_4388c8
.L_4386d7:

            mov R14,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RIP+.L_658760]
            mov RDI,R14
            call .L_4029e0

            mov DWORD PTR [R14+180],0
            mov R13,QWORD PTR [R15+24]
            mov EDX,DWORD PTR [R13+180]
            jmp .L_438719
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438708:

            mov EDX,DWORD PTR [R13+180]
.L_43870f:

            add EDX,1
            mov DWORD PTR [R13+180],EDX
.L_438719:

            cmp DWORD PTR [R13+184],EDX
            jbe .L_4387d0
.L_438726:

            cmp BYTE PTR [R13+176],0
            jne .L_4387d0

            mov RAX,QWORD PTR [R13+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov EAX,1
            mov RDI,RAX
            mov ESI,DWORD PTR [RDX]
            mov ECX,ESI
            shr ECX,4
            shl RDI,CL
            test QWORD PTR [RBP],RDI
            je .L_438780

            mov RDI,RAX
            mov ECX,ESI
            shl RDI,CL
            test QWORD PTR [RBP+8],RDI
            je .L_438780

            mov ECX,ESI
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RBP+16],RAX
            jne .L_438820

            nop
            nop
            nop
            nop
            nop
.L_438780:

            cmp BYTE PTR [R13+177],0
            je .L_438708

            mov RAX,QWORD PTR [R13+200]
            cmp QWORD PTR [R13+208],RAX
            je .L_4388a0
.L_4387a2:

            mov EDX,1
            mov ESI,1
            mov RDI,R13
            call .L_402560

            test AL,AL
            jne .L_438978

            mov EDX,DWORD PTR [R13+180]
            cmp DWORD PTR [R13+184],EDX
            ja .L_438726
.L_4387d0:

            test BL,BL
            jne .L_4389e0
.L_4387d8:

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+56]
            add RAX,16
            cmp RDI,RAX
            je .L_4387f0

            call free@PLT
.L_4387f0:

            mov RAX,QWORD PTR [RSP+328]
            xor RAX,QWORD PTR FS:[40]
            jne .L_438c0a

            add RSP,344
.L_43880e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438820:

            mov EAX,DWORD PTR [RDX+4]
            test DWORD PTR [R15+36],EAX
            je .L_438780

            mov ECX,DWORD PTR [R15+60]
            movzx EAX,WORD PTR [RDX+12]
            mov R14D,ECX
            and R14D,14
            mov EDX,EAX
            and R14D,EAX
            jne .L_438780

            and EDX,8
            jne .L_438b20
.L_438850:

            mov ESI,DWORD PTR [RSP+48]
            test ESI,ESI
            jne .L_43886f

            jmp .L_438780
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438860:

            add R14D,1
            cmp DWORD PTR [RSP+48],R14D
            jbe .L_438780
.L_43886f:

            mov EAX,R14D
            mov RSI,R15
            shl RAX,4
            add RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_438860

            mov EDX,DWORD PTR [R13+180]
            mov EBX,EAX
            jmp .L_438719
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4388a0:

            mov EAX,DWORD PTR [R13+180]
            cmp DWORD PTR [R13+188],EAX
            jne .L_4387a2

            mov EDX,EAX
.L_4388b6:

            add EAX,1
            mov DWORD PTR [R13+188],EAX
            jmp .L_43870f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4388c8:

            mov RBX,QWORD PTR [RSP+16]
            mov R13D,1
            mov RDI,RBX
            call .L_4029b0

            mov EAX,DWORD PTR [RBX+184]
            mov DWORD PTR [RSP],EAX
            sub EAX,1
            mov DWORD PTR [RBX+180],EAX
            mov R12,QWORD PTR [R15+24]
            mov EBX,DWORD PTR [R12+180]
.L_4388f9:

            mov EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R12+200]
            lea RSI,QWORD PTR [RAX+RDX*4]
            mov RDX,R13
            mov EAX,DWORD PTR [RSI]
            mov ECX,EAX
            shr ECX,4
            shl RDX,CL
            test QWORD PTR [RBP],RDX
            je .L_438960

            mov RDX,R13
            mov ECX,EAX
            shl RDX,CL
            test QWORD PTR [RBP+8],RDX
            je .L_438960

            shr EAX,9
            mov ECX,EAX
            mov RAX,R13
            shl RAX,CL
            test QWORD PTR [RBP+16],RAX
            je .L_438960

            mov EAX,DWORD PTR [RSI+4]
            test DWORD PTR [R15+36],EAX
            je .L_438960

            mov EDX,DWORD PTR [R15+60]
            mov RDI,R15
            call .L_43b520

            test AL,AL
            jne .L_438aaa

            nop
            nop
            nop
            nop
            nop
            nop
.L_438960:

            sub EBX,1
            test EBX,EBX
            mov DWORD PTR [R12+180],EBX
            jns .L_4388f9

            jmp .L_4387d8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438978:

            mov EAX,DWORD PTR [R13+188]
            mov RDX,QWORD PTR [R13+208]
            mov RCX,QWORD PTR [R13+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [R13+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [R13+188]
            mov EDX,DWORD PTR [R13+180]
            jmp .L_4388b6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4389c8:

            mov BYTE PTR [R15+100],1
            mov ECX,1
            jmp .L_438594
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4389e0:

            mov RDI,QWORD PTR [RSP+16]
            call .L_402a70

            jmp .L_4387d8
          .byte 0x90
.L_4389f0:

            movzx EAX,BYTE PTR [R14+4]
            movzx ECX,BYTE PTR [R14+5]
            lea RDX,QWORD PTR [R14+6]
            shl EAX,8
            add AX,CX
            je .L_438a6a
.L_438a06:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx ECX,AX
            test AX,AX
            lea R9,QWORD PTR [R14+RCX*1]
            cmovne RDX,R9
.L_438a27:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            jne .L_438aa3

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            cmp AX,7
            je .L_438aee

            cmp AX,8
            sete BL
            jmp .L_4386cf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438a60:

            cmp CX,7
            jne .L_4386c9
.L_438a6a:

            lea RDX,QWORD PTR [RIP+.L_658760]
            jmp .L_438a06
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438a78:

            movzx ECX,BYTE PTR [RSI+4]
            movzx ESI,BYTE PTR [RSI+5]
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            lea RSI,QWORD PTR [R14+RCX*2+6]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            shl ECX,16
            add EAX,ECX
            jmp .L_438559
.L_438aa3:

            xor EBX,EBX
            jmp .L_4386d7
.L_438aaa:

            mov EAX,DWORD PTR [RSP+48]
            test EAX,EAX
            je .L_438960

            xor EBX,EBX
            jmp .L_438ac9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438ac0:

            add EBX,1
            cmp DWORD PTR [RSP+48],EBX
            jbe .L_438ae1
.L_438ac9:

            mov EAX,EBX
            mov RSI,R15
            shl RAX,4
            add RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_438ac0
.L_438ae1:

            mov EBX,DWORD PTR [R12+180]
            jmp .L_438960
.L_438aee:

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            shl EAX,24
            shl ECX,16
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+6]
            shl ECX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+7]
            add EAX,ECX
            je .L_438bfe

            mov EAX,EAX
            add RDX,RAX
            jmp .L_438a27
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438b20:

            test CL,16
            jne .L_438b3e

            test CH,255
            je .L_438850

            xor EAX,ECX
            test AH,255
            jne .L_438780

            jmp .L_438850
.L_438b3e:

            mov RAX,QWORD PTR [R15+64]
            movzx EDX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            movzx R9D,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,EDI
            movzx EDI,BYTE PTR [RAX+2]
            shl EDX,16
            shl EDI,8
            add EDI,R9D
            movzx EDI,DI
            add EDX,EDI
            cmp EDX,65537
            jbe .L_438780

            movzx EDX,BYTE PTR [RAX+12]
            movzx EDI,BYTE PTR [RAX+13]
            shl EDX,8
            add EDX,EDI
            movzx EDI,DX
            add RAX,RDI
            test DX,DX
            cmove RAX,R12
            movzx EDX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,EDI
            cmp DX,1
            jne .L_438780

            movzx EDX,BYTE PTR [RAX+2]
            movzx EDI,BYTE PTR [RAX+3]
            shr ECX,16
            shl EDX,8
            add EDX,EDI
            mov RDI,R12
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_438bc0

            lea RDI,QWORD PTR [RAX+RCX*4+4]
.L_438bc0:

            movzx EDX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EDX,24
            shl ECX,16
            add EDX,ECX
            movzx ECX,BYTE PTR [RDI+2]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RDI+3]
            lea EDI,DWORD PTR [RDX+RCX*1]
            add RAX,RDI
            test EDI,EDI
            cmove RAX,R12
            mov RDI,RAX
            call .L_43a230

            cmp EAX,-1
            je .L_438780

            jmp .L_438850
.L_438bfe:

            lea RDX,QWORD PTR [RIP+.L_658760]
            jmp .L_438a27
.L_438c0a:

            call __stack_chk_fail@PLT
.L_438c0f:

            nop
.L_438c10:

            jmp .L_4384f0
.L_438c15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438c20:

            sub RSP,40
.L_438c24:

            mov R8,RCX
            mov R9,RSI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX+128]
            mov RSI,RSP
            mov RAX,QWORD PTR [RAX+160]
            mov RCX,QWORD PTR [RAX+40]
            mov RAX,QWORD PTR [RAX+64]
            mov QWORD PTR [RSP],RCX
            mov RCX,RDX
            mov RDX,R9
            mov QWORD PTR [RSP+8],RAX
            call .L_44a3a0

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_438c7c

            add RSP,40
.L_438c7b:

            ret 
.L_438c7c:

            call __stack_chk_fail@PLT
.L_438c81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438c90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            pxor XMM0,XMM0
            sub RSP,648
.L_438ca5:

            mov QWORD PTR [RSP+104],RSI
            mov QWORD PTR [RSP+16],RDX
            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+128]
            mov QWORD PTR [RSP+136],RSI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+632],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+152],RCX
            mov QWORD PTR [RSP+8],RDI
            mov RAX,QWORD PTR [RDX+160]
            mov QWORD PTR [RSP+144],RDX
            mov EDX,DWORD PTR [RCX+144]
            mov QWORD PTR [RSP+24],RCX
            mov DWORD PTR [RSP+128],0
            mov RBX,QWORD PTR [RAX+32]
            mov QWORD PTR [RSP+176],0
            mov DWORD PTR [RSP+160],EDX
            mov DWORD PTR [RSP+164],1
            mov BYTE PTR [RSP+168],1
            mov QWORD PTR [RSP+88],RBX
            mov RBX,QWORD PTR [RAX+56]
            mov QWORD PTR [RSP+184],3
            mov RDX,QWORD PTR [RAX+24]
            mov QWORD PTR [RSP+96],RBX
            mov QWORD PTR [RSP+192],RDX
            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            shl EAX,8
            add AX,DX
            mov EAX,4294967295
            setne BYTE PTR [RSP+200]
            mov R9D,DWORD PTR [RDI+864]
            mov QWORD PTR [RSP+336],RAX
            lea RAX,QWORD PTR [RIP+.L_444c80]
            mov QWORD PTR [RSP+240],0
            movaps XMMWORD PTR [RSP+224],XMM0
            test R9D,R9D
            mov DWORD PTR [RSP+232],4294967295
            mov BYTE PTR [RSP+236],0
            movaps XMMWORD PTR [RSP+288],XMM0
            movaps XMMWORD PTR [RSP+208],XMM0
            movaps XMMWORD PTR [RSP+256],XMM0
            movaps XMMWORD PTR [RSP+272],XMM0
            movaps XMMWORD PTR [RSP+320],XMM0
            mov QWORD PTR [RSP+248],0
            mov DWORD PTR [RSP+296],4294967295
            mov BYTE PTR [RSP+300],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+176],RAX
            je .L_438fda

            lea R14,QWORD PTR [RIP+.L_658760]
            lea R15,QWORD PTR [RIP+.L_44ac20]
            xor R13D,R13D
            mov DWORD PTR [RSP+84],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438e40:

            mov EAX,DWORD PTR [RSP+84]
            mov RSI,QWORD PTR [RSP+8]
            shl RAX,4
            add RAX,QWORD PTR [RSI+872]
            cmp R13D,DWORD PTR [RAX]
            mov QWORD PTR [RSP+40],RAX
            jae .L_438f97

            nop
            nop
            nop
            nop
            nop
            nop
.L_438e68:

            mov RDI,QWORD PTR [RSP+8]
            mov EAX,R13D
            mov RSI,QWORD PTR [RSP+16]
            lea RBX,QWORD PTR [RAX*8]
            mov RDX,QWORD PTR [RDI+328]
            mov RDI,QWORD PTR [RSP+24]
            movzx EBP,WORD PTR [RDX+RAX*8]
            lea RDX,QWORD PTR [RIP+.L_44a34c]
            xor EAX,EAX
            mov ECX,EBP
            mov DWORD PTR [RSP+36],EBP
            mov R12D,EBP
            call .L_43a0a0

            test AL,AL
            je .L_438f85

            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+336],EBP
            movzx ECX,BP
            mov RSI,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RCX+RCX*2]
            add RBX,QWORD PTR [RDI+328]
            lea RBP,QWORD PTR [RSI+RDX*8]
            mov R10D,DWORD PTR [RBX+4]
            mov DWORD PTR [RSP+164],R10D
            movzx EDI,BYTE PTR [RBX+2]
            mov RBX,QWORD PTR [RSP+88]
            and EDI,1
            mov BYTE PTR [RSP+168],DIL
            movzx ESI,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            shl ESI,8
            add ESI,EDX
            movzx EDX,SI
            add RDX,RBX
            test SI,SI
            cmove RDX,R14
            movzx ESI,BYTE PTR [RDX]
            movzx R9D,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,R9D
            mov R9,R14
            movzx ESI,SI
            cmp R12D,ESI
            jae .L_438f41

            lea RSI,QWORD PTR [RDX+RCX*2+2]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            movzx R9D,CX
            add R9,RDX
            test CX,CX
            cmove R9,R14
.L_438f41:

            mov R12,QWORD PTR [RSP+152]
            mov R8D,DWORD PTR [R12+184]
            test R8D,R8D
            sete CL
            test R10D,R10D
            sete DL
            or CL,DL
            mov BYTE PTR [RSP+35],CL
            je .L_439008
.L_438f69:

            mov ECX,DWORD PTR [RSP+36]
            mov RSI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_44a36c]
            mov RDI,QWORD PTR [RSP+24]
            xor EAX,EAX
            call .L_43a0a0
.L_438f85:

            mov RAX,QWORD PTR [RSP+40]
            add R13D,1
            cmp DWORD PTR [RAX],R13D
            ja .L_438e68
.L_438f97:

            mov RBX,QWORD PTR [RSP+40]
            cmp QWORD PTR [RBX+8],0
            je .L_438fc0

            mov RBP,QWORD PTR [RSP+24]
            mov RDI,RBP
            call .L_4029e0

            mov RDX,RBP
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+104]
            call QWORD PTR [RBX+8]
.L_438fc0:

            mov RSI,QWORD PTR [RSP+8]
            add DWORD PTR [RSP+84],1
            mov EAX,DWORD PTR [RSP+84]
            cmp DWORD PTR [RSI+864],EAX
            ja .L_438e40
.L_438fda:

            mov RAX,QWORD PTR [RSP+632]
            xor RAX,QWORD PTR FS:[40]
            jne .L_439bcf

            add RSP,648
.L_438ff8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439008:

            movzx EDX,BYTE PTR [R9+2]
            movzx ECX,BYTE PTR [R9+3]
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            and EDX,16
            jne .L_439960
.L_439023:

            cmp DWORD PTR [RSP+128],1
            lea RSI,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+188],ECX
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+216],RSI
            mov QWORD PTR [RSP+248],0
            mov DWORD PTR [RSP+224],ECX
            je .L_4396c0

            mov BYTE PTR [RSP+228],0
.L_439080:

            mov RAX,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+229],DIL
            lea RDI,QWORD PTR [RSP+352]
            mov DWORD PTR [RSP+288],ECX
            mov ECX,34
            mov DWORD PTR [RSP+232],R10D
            mov RSI,RDI
            mov QWORD PTR [RSP+56],RDI
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+112],RSI

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov BYTE PTR [RSP+292],1
            mov BYTE PTR [RSP+293],1
            mov DWORD PTR [RSP+296],4294967295
            mov DWORD PTR [RSP+120],0
            movzx R10D,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            movzx EDX,BYTE PTR [R9+5]
            shl R10D,8
            add R10D,EAX
            movzx EAX,BYTE PTR [R9+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_4397f0

            lea EBX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+64],RBP
            mov QWORD PTR [RSP+72],R12
            mov DWORD PTR [RSP+80],R13D
            mov RBP,R9
            mov R12D,R10D
            lea RDI,QWORD PTR [RBX+1]
            xor EBX,EBX
            mov R13,RBX
            mov QWORD PTR [RSP],RDI
            nop
            nop
            nop
            nop
.L_439160:

            shl EAX,8
            add EAX,EDX
            mov RDX,R14
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_439175

            lea RDX,QWORD PTR [RBP+R13*2+6]
.L_439175:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            mov RBX,RDX
            cmove RBX,R14
            cmp R12W,8
            ja .L_4391c0

            movzx EAX,R12W
            movsxd RAX,DWORD PTR [R15+RAX*4]
            add RAX,R15
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            je .L_4397c0

            nop
            nop
.L_4391c0:

            add R13,1
            cmp R13,QWORD PTR [RSP]
            je .L_439228
.L_4391ca:

            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
            jmp .L_439160
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,2
            je .L_4398d0

            cmp AX,3
            je .L_4398a0

            cmp AX,1
            jne .L_4391c0

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            add R13,1
            cmp R13,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RIP+.L_43c5d0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jne .L_4391ca

            nop
            nop
            nop
.L_439228:

            mov R9,RBP
            mov R12,QWORD PTR [RSP+72]
            mov RBP,QWORD PTR [RSP+64]
            movzx R10D,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            mov R13D,DWORD PTR [RSP+80]
            shl R10D,8
            add R10D,EAX
            cmp R10W,7
            je .L_4396d0
.L_439255:

            movzx R10D,R10W
            cmp R10D,8
            sete BYTE PTR [RSP+35]
.L_439262:

            cmp BYTE PTR [RSP+35],0
            je .L_4394f8

            mov RDI,R12
            call .L_4029b0

            mov EAX,DWORD PTR [R12+184]
            sub EAX,1
            mov DWORD PTR [R12+180],EAX
            mov R12,QWORD PTR [RSP+152]
            mov EBX,DWORD PTR [R12+180]
.L_439298:

            mov EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R12+200]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov EAX,1
            mov RDI,RAX
            mov ESI,DWORD PTR [RDX]
            mov ECX,ESI
            shr ECX,4
            shl RDI,CL
            test QWORD PTR [RBP],RDI
            je .L_4392e8

            mov RDI,RAX
            mov ECX,ESI
            shl RDI,CL
            test QWORD PTR [RBP+8],RDI
            je .L_4392e8

            mov ECX,ESI
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RBP+16],RAX
            jne .L_439808

            nop
            nop
            nop
            nop
            nop
            nop
.L_4392e8:

            sub EBX,1
            test EBX,EBX
            mov DWORD PTR [R12+180],EBX
            jns .L_439298

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439300:

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+360]
            add RAX,16
            cmp RDI,RAX
            je .L_438f69

            call free@PLT

            jmp .L_438f69
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,2
            je .L_439930

            cmp AX,3
            je .L_439900

            cmp AX,1
            jne .L_4391c0

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RDI,QWORD PTR [RIP+.L_43b090]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_4391c0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_4391c0

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RDI,QWORD PTR [RIP+.L_43e780]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_4391c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_4391c0

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RDI,QWORD PTR [RIP+.L_43dd00]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_4391c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            je .L_439790

            cmp AX,2
            jne .L_4391c0

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RSI,QWORD PTR [RIP+.L_43b7f0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_4391c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_4391c0

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            movzx EDX,BYTE PTR [RBX+3]
            mov EDI,ESI
            shl EAX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,ESI
            movzx ESI,BYTE PTR [RBX+7]
            lea EDI,DWORD PTR [RAX+RSI*1]
            lea RSI,QWORD PTR [RSP+112]
            mov RAX,RDI
            add RDI,RBX
            test EAX,EAX
            movzx EAX,BYTE PTR [RBX+2]
            cmove RDI,R14
            shl EAX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_449e80

            jmp .L_4391c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_4391c0

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RSI,QWORD PTR [RIP+.L_43e260]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_4391c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4394f8:

            mov RDI,R12
            call .L_4029e0

            mov RBX,QWORD PTR [RSP+152]
            mov DWORD PTR [R12+180],0
            mov EDX,DWORD PTR [RBX+180]
            jmp .L_43952f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_439520:

            mov EDX,DWORD PTR [RBX+180]
.L_439526:

            add EDX,1
            mov DWORD PTR [RBX+180],EDX
.L_43952f:

            cmp DWORD PTR [RBX+184],EDX
            jbe .L_4395e0
.L_43953b:

            cmp BYTE PTR [RBX+176],0
            jne .L_4395e0

            mov RAX,QWORD PTR [RBX+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov EAX,1
            mov RDI,RAX
            mov ESI,DWORD PTR [RDX]
            mov ECX,ESI
            shr ECX,4
            shl RDI,CL
            test QWORD PTR [RBP],RDI
            je .L_439590

            mov RDI,RAX
            mov ECX,ESI
            shl RDI,CL
            test QWORD PTR [RBP+8],RDI
            je .L_439590

            mov ECX,ESI
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RBP+16],RAX
            jne .L_439600

            nop
            nop
            nop
            nop
            nop
.L_439590:

            cmp BYTE PTR [RBX+177],0
            je .L_439520

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_439698
.L_4395ad:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_402560

            test AL,AL
            jne .L_439748

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+184],EDX
            ja .L_43953b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4395e0:

            cmp BYTE PTR [RSP+35],0
            je .L_439300

            mov RDI,R12
            call .L_402a70

            jmp .L_439300
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439600:

            mov EAX,DWORD PTR [RDX+4]
            test DWORD PTR [RSP+164],EAX
            je .L_439590

            mov EDI,DWORD PTR [RSP+188]
            movzx EAX,WORD PTR [RDX+12]
            mov EDX,EDI
            and EDX,14
            mov ECX,EAX
            and EDX,EAX
            jne .L_439590

            and ECX,8
            jne .L_43999e
.L_43962f:

            mov ESI,DWORD PTR [RSP+352]
            test ESI,ESI
            je .L_439590

            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+64],RBX
            mov EBX,EDX
            mov RBP,QWORD PTR [RSP+48]
            jmp .L_439660
.L_439650:

            add EBX,1
            cmp DWORD PTR [RSP+352],EBX
            jbe .L_439990
.L_439660:

            mov EAX,EBX
            mov RSI,RBP
            shl RAX,4
            add RAX,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_439650

            mov RBX,QWORD PTR [RSP+64]
            mov RBP,QWORD PTR [RSP]
            mov BYTE PTR [RSP+35],AL
            mov EDX,DWORD PTR [RBX+180]
            jmp .L_43952f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439698:

            mov EAX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EAX
            jne .L_4395ad

            mov EDX,EAX
.L_4396ac:

            add EAX,1
            mov DWORD PTR [RBX+188],EAX
            jmp .L_439526
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4396c0:

            mov BYTE PTR [RSP+228],1
            mov EDI,EAX
            jmp .L_439080
          .byte 0x90
.L_4396d0:

            movzx EAX,BYTE PTR [R9+4]
            movzx ECX,BYTE PTR [R9+5]
            lea RDX,QWORD PTR [R9+6]
            shl EAX,8
            add AX,CX
            je .L_4397fb
.L_4396ea:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            lea RCX,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R9,RDX
            test AX,AX
            cmovne RCX,R9
.L_43970a:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4394f8

            movzx EAX,BYTE PTR [RCX+2]
            movzx EDX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,EDX
            cmp AX,7
            je .L_439aa0

            cmp AX,8
            sete BYTE PTR [RSP+35]
            jmp .L_439262
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439748:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [RBX+188]
            mov EDX,DWORD PTR [RBX+180]
            jmp .L_4396ac
.L_439790:

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RSI,QWORD PTR [RIP+.L_43b740]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_4391c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4397c0:

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RSI,QWORD PTR [RIP+.L_43f600]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_4391c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4397f0:

            cmp R10W,7
            jne .L_439255
.L_4397fb:

            mov RDX,R14
            jmp .L_4396ea
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439808:

            mov EAX,DWORD PTR [RDX+4]
            test DWORD PTR [RSP+164],EAX
            je .L_4392e8

            mov EAX,DWORD PTR [RSP+188]
            movzx ECX,WORD PTR [RDX+12]
            mov EDX,EAX
            and EDX,14
            mov EDI,ECX
            and EDX,ECX
            jne .L_4392e8

            and EDI,8
            jne .L_439ad7
.L_43983b:

            mov EAX,DWORD PTR [RSP+352]
            test EAX,EAX
            je .L_4392e8

            mov QWORD PTR [RSP],RBP
            mov RBX,QWORD PTR [RSP+48]
            mov EBP,EDX
            jmp .L_43986c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439860:

            add EBP,1
            cmp DWORD PTR [RSP+352],EBP
            jbe .L_439887
.L_43986c:

            mov EAX,EBP
            mov RSI,RBX
            shl RAX,4
            add RAX,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_439860
.L_439887:

            mov RBP,QWORD PTR [RSP]
            mov EBX,DWORD PTR [R12+180]
            jmp .L_4392e8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4398a0:

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RDI,QWORD PTR [RIP+.L_43d450]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_4391c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4398d0:

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RSI,QWORD PTR [RIP+.L_43d0a0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_4391c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439900:

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RSI,QWORD PTR [RIP+.L_43afc0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_4391c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439930:

            mov RDI,QWORD PTR [RSP+112]
            call .L_449c60

            test RAX,RAX
            je .L_4391c0

            lea RDI,QWORD PTR [RIP+.L_43bfc0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_4391c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439960:

            movzx EDX,BYTE PTR [R9+4]
            movzx ESI,BYTE PTR [R9+5]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            lea RSI,QWORD PTR [R9+RDX*2+6]
            movzx EDX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,ESI
            shl EDX,16
            add ECX,EDX
            jmp .L_439023
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439990:

            mov RBP,QWORD PTR [RSP]
            mov RBX,QWORD PTR [RSP+64]
            jmp .L_439590
.L_43999e:

            test DIL,16
            jne .L_4399c0

            test EDI,65280
            je .L_43962f

            xor EAX,EDI
            test AH,255
            jne .L_439590

            jmp .L_43962f
.L_4399c0:

            mov RAX,QWORD PTR [RSP+192]
            movzx ECX,BYTE PTR [RAX]
            movzx R8D,BYTE PTR [RAX+1]
            movzx R9D,BYTE PTR [RAX+3]
            shl ECX,8
            add ECX,R8D
            mov R8D,ECX
            movzx ECX,BYTE PTR [RAX+2]
            shl R8D,16
            shl ECX,8
            add ECX,R9D
            movzx ECX,CX
            add ECX,R8D
            cmp ECX,65537
            jbe .L_439590

            movzx ECX,BYTE PTR [RAX+12]
            movzx R8D,BYTE PTR [RAX+13]
            shl ECX,8
            add ECX,R8D
            movzx R8D,CX
            add RAX,R8
            test CX,CX
            cmove RAX,R14
            mov RCX,RAX
            movzx EAX,BYTE PTR [RAX]
            movzx R8D,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,R8D
            cmp AX,1
            jne .L_439590

            movzx EAX,BYTE PTR [RCX+2]
            movzx R8D,BYTE PTR [RCX+3]
            shr EDI,16
            shl EAX,8
            add EAX,R8D
            mov R8,R14
            movzx EAX,AX
            cmp EDI,EAX
            jae .L_439a59

            mov EAX,EDI
            lea R8,QWORD PTR [RCX+RAX*4+4]
.L_439a59:

            movzx EAX,BYTE PTR [R8]
            movzx EDI,BYTE PTR [R8+1]
            mov DWORD PTR [RSP],EDX
            shl EDI,16
            shl EAX,24
            add EAX,EDI
            movzx EDI,BYTE PTR [R8+2]
            shl EDI,8
            add EAX,EDI
            movzx EDI,BYTE PTR [R8+3]
            add EDI,EAX
            mov RAX,RDI
            add RDI,RCX
            test EAX,EAX
            cmove RDI,R14
            call .L_43a230

            cmp EAX,-1
            mov EDX,DWORD PTR [RSP]
            je .L_439590

            jmp .L_43962f
.L_439aa0:

            movzx EAX,BYTE PTR [RCX+4]
            movzx EDX,BYTE PTR [RCX+5]
            shl EAX,24
            shl EDX,16
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+6]
            shl EDX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+7]
            add EAX,EDX
            jne .L_439acd

            lea RCX,QWORD PTR [RIP+.L_658760]
            jmp .L_43970a
.L_439acd:

            mov EAX,EAX
            add RCX,RAX
            jmp .L_43970a
.L_439ad7:

            test AL,16
            jne .L_439af4

            test AH,255
            je .L_43983b

            xor EAX,ECX
            test AH,255
            jne .L_4392e8

            jmp .L_43983b
.L_439af4:

            mov RCX,QWORD PTR [RSP+192]
            movzx EDI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            movzx R9D,BYTE PTR [RCX+3]
            shl EDI,8
            add EDI,R8D
            mov R8D,EDI
            movzx EDI,BYTE PTR [RCX+2]
            shl R8D,16
            shl EDI,8
            add EDI,R9D
            movzx EDI,DI
            add EDI,R8D
            cmp EDI,65537
            jbe .L_4392e8

            movzx EDI,BYTE PTR [RCX+12]
            movzx R8D,BYTE PTR [RCX+13]
            shl EDI,8
            add EDI,R8D
            movzx R8D,DI
            add RCX,R8
            test DI,DI
            cmove RCX,R14
            movzx EDI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            shl EDI,8
            add EDI,R8D
            cmp DI,1
            jne .L_4392e8

            movzx EDI,BYTE PTR [RCX+2]
            movzx R8D,BYTE PTR [RCX+3]
            shr EAX,16
            shl EDI,8
            add EDI,R8D
            mov R8,R14
            movzx EDI,DI
            cmp EAX,EDI
            jae .L_439b88

            lea R8,QWORD PTR [RCX+RAX*4+4]
.L_439b88:

            movzx EAX,BYTE PTR [R8]
            movzx EDI,BYTE PTR [R8+1]
            shl EAX,24
            shl EDI,16
            add EAX,EDI
            movzx EDI,BYTE PTR [R8+2]
            movzx R8D,BYTE PTR [R8+3]
            shl EDI,8
            add EAX,EDI
            mov RDI,R14
            add EAX,R8D
            je .L_439bb6

            mov EAX,EAX
            lea RDI,QWORD PTR [RCX+RAX*1]
.L_439bb6:

            mov DWORD PTR [RSP],EDX
            call .L_43a230

            add EAX,1
            mov EDX,DWORD PTR [RSP]
            je .L_4392e8

            jmp .L_43983b
.L_439bcf:

            call __stack_chk_fail@PLT
.L_439bd4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439be0:

            movzx ECX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            mov EDX,1
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl EDX,CL
            shl RAX,48
            shr RAX,53
            test DWORD PTR [RDI+RAX*4+116],EDX
            setne AL
            ret 
.L_439c06:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439c10:

            mov EAX,ESI
            push R15
            push R14
            lea RAX,QWORD PTR [RAX+RAX*4]
            push R13
            push R12
            push RBP
            push RBX
            lea RBP,QWORD PTR [RDI+RAX*4]
            sub RSP,8
            movsx EBX,WORD PTR [RBP+16]
            test EBX,EBX
            je .L_439c3b

            movzx R14D,BYTE PTR [RBP+18]
            test R14B,2
            jne .L_439c50
.L_439c3b:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439c50:

            mov R13D,EBX
            add EBX,ESI
            xor EAX,EAX
            cmp EBX,ECX
            mov WORD PTR [RBP+16],AX
            je .L_439c3b

            mov R15D,EDX
            mov ESI,EBX
            mov R12,RDI
            call .L_439c10

            mov ESI,EBX
            mov EDX,R15D
            lea RAX,QWORD PTR [RSI+RSI*4]
            and EDX,4294967294
            cmp EDX,4
            lea RAX,QWORD PTR [R12+RAX*4]
            je .L_439c97

            mov EDX,DWORD PTR [RBP+8]
            neg EDX
            mov DWORD PTR [RAX+8],EDX
.L_439c89:

            neg R13D
            mov BYTE PTR [RAX+18],R14B
            mov WORD PTR [RAX+16],R13W
            jmp .L_439c3b
.L_439c97:

            mov EDX,DWORD PTR [RBP+12]
            neg EDX
            mov DWORD PTR [RAX+12],EDX
            jmp .L_439c89
.L_439ca1:
          .string "hb-ot-layout-gpos-table.hh"
.L_439cbc:
          .string "j < i"
.L_439cc2:
          .string "end == match_positions[idx]"
          .byte 0x66
          .byte 0x90
.L_439ce0:
          .string "!!(type & ATTACH_TYPE_MARK) ^ !!(type & ATTACH_TYPE_CURSIVE)"
# WARNING: found overlapping blocks at address 39ad3
# WARNING: found overlapping blocks at address 39ad5
          .zero 3
.L_439d20:
          .string "hb-ot-layout-gsubgpos-private.hh"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439d50:

            cmp ESI,1
            jbe .L_439db8

            lea EAX,DWORD PTR [RSI-2]
            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea R14,QWORD PTR [RDX+RAX*2+2]
.L_439d6a:

            mov R12,R8
            mov RBP,RCX
            mov RBX,RDX
            sub RSP,8
            mov R15D,4
.L_439d7d:

            mov RAX,QWORD PTR [R13]
            mov RDX,R12
            mov RSI,RBX
            mov EDI,DWORD PTR [RAX+R15*1]
            call RBP

            test AL,AL
            je .L_439da3

            add RBX,2
            add R15,4
            cmp RBX,R14
            jne .L_439d7d

            mov EAX,1
.L_439da3:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439db8:

            mov EAX,1
            ret 
.L_439dbe:

            nop
            nop
.L_439dc0:

            test EDX,EDX
            mov R8D,EDX
            je .L_439de0

            xor EDX,EDX
            mov EAX,4294967295
            div R8D
            mov R9D,EAX
            xor EAX,EAX
            cmp ECX,R9D
            jb .L_439de0
.L_439ddb:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439de0:

            xor EAX,EAX
            cmp RSI,QWORD PTR [RDI+8]
            jb .L_439ddb

            mov RDX,QWORD PTR [RDI+16]
            cmp RSI,RDX
            ja .L_439ddb

            imul ECX,R8D
            sub RDX,RSI
            cmp ECX,EDX
            setbe AL
            ret 
.L_439dfe:

            nop
            nop
.L_439e00:

            push R15
            push R14
            mov R14D,ECX
            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov ECX,EDX
            mov RBX,RDI
            mov EDX,R13D
            mov R12,R8
            sub RSP,48
            mov DWORD PTR [R9],0
            mov DWORD PTR [R8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+32],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RBP,R9
            push QWORD PTR [RAX+208]
            call QWORD PTR [RAX+432]

            test EAX,EAX
            mov R15D,EAX
            pop RDX
            pop RCX
            jne .L_439e90
.L_439e63:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_43a03a

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439e90:

            and R14D,4294967294
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            cmp R14D,4
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            je .L_439f70

            lea RDI,QWORD PTR [RSP+20]
            lea R14,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+176]
            mov EDX,R13D
            mov QWORD PTR [RSP+8],RDI
            mov R8,RDI
            mov RCX,R14
            mov RDI,RBX
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_43a030

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+20],0
            mov RCX,R14
            mov DWORD PTR [RSP+16],0
            mov RSI,QWORD PTR [RBX+160]
            mov EDX,R13D
            mov R8,QWORD PTR [RSP+8]
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_43a030

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP+16]
            jmp .L_43a01c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439f70:

            lea R10,QWORD PTR [RSP+20]
            lea R14,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+168]
            mov EDX,R13D
            mov RDI,RBX
            mov R8,R10
            mov QWORD PTR [RSP+8],R10
            mov RCX,R14
            call QWORD PTR [RAX+392]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            jne .L_43a030

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+20],0
            mov R8,R10
            mov DWORD PTR [RSP+16],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,R13D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_43a030

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RSP+16]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub ECX,EAX
            mov EAX,ECX
.L_43a01c:

            sub DWORD PTR [R12],EAX
            sub DWORD PTR [RBP],EDX
            jmp .L_439e63
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a030:

            mov EAX,DWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+20]
            jmp .L_43a01c
.L_43a03a:

            call __stack_chk_fail@PLT
.L_43a03f:

            nop
.L_43a040:

            push R12
            push RBP
            mov EBP,EDX
            push RBX
.L_43a046:

            mov R12,QWORD PTR [RDI+128]
            mov EBX,ESI
            movsxd RCX,DWORD PTR [R12+148]
            test ECX,ECX
            jne .L_43a06b

            mov RDI,R12
            call .L_407ab0

            movsxd RCX,DWORD PTR [R12+148]
.L_43a06b:

            movsx RAX,BX
            movsxd RDX,EBP
            imul RDX,RAX
            mov EAX,ECX
            shr EAX,31
            add EAX,ECX
            sar EAX,1
            test RDX,RDX
            jns .L_43a086

            neg EAX
.L_43a086:

            cdqe 
            add RAX,RDX
            cqo 
            pop RBX
.L_43a08e:

            idiv RCX
            pop RBP
            pop R12
            ret 
.L_43a095:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a0a0:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_43a0f1

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_43a0f1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,1
            cmp QWORD PTR [RDI+280],0
            je .L_43a13e

            lea RAX,QWORD PTR [RSP+224]
            mov RCX,RSP
            mov DWORD PTR [RSP],24
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            call .L_405760
.L_43a13e:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43a156

            add RSP,216

            ret 
.L_43a156:

            call __stack_chk_fail@PLT
.L_43a15b:

            nop
            nop
            nop
            nop
            nop
.L_43a160:

            cmp BYTE PTR [RDI+112],0
            jne .L_43a16e

            cmp ESI,65535
            jbe .L_43a170
.L_43a16e:

            ret 
.L_43a170:

            mov EAX,ESI
            mov EDX,1
            mov ECX,ESI
            shr EAX,5
            shl EDX,CL
            or DWORD PTR [RDI+RAX*4+116],EDX
            ret 
.L_43a183:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a190:

            mov RCX,QWORD PTR [RSI+8]
            xor EAX,EAX
            cmp RDI,RCX
            jb .L_43a220

            mov R8,QWORD PTR [RSI+16]
            cmp RDI,R8
            ja .L_43a220

            mov RDX,R8
            sub RDX,RDI
            cmp EDX,5
            jbe .L_43a220

            lea RSI,QWORD PTR [RDI+4]
            cmp RSI,RCX
            jb .L_43a220

            cmp RSI,R8
            ja .L_43a220

            mov RDX,R8
            sub RDX,RSI
            cmp EDX,1
            jbe .L_43a220

            lea R9,QWORD PTR [RDI+6]
            cmp RCX,R9
            ja .L_43a220

            cmp R8,R9
            jb .L_43a220

            movzx EDX,BYTE PTR [RDI+4]
            movzx R10D,BYTE PTR [RDI+5]
            mov R11,R8
            sub R11,R9
            shl EDX,8
            add EDX,R10D
            movzx EDX,DX
            add EDX,EDX
            cmp EDX,R11D
            ja .L_43a220

            test BYTE PTR [RDI+3],16
            mov EAX,1
            je .L_43a220

            lea EAX,DWORD PTR [RDX+2]
            add RSI,RAX
            xor EAX,EAX
            cmp RCX,RSI
            ja .L_43a220

            cmp R8,RSI
            jb .L_43a220

            sub R8,RSI
            cmp R8D,1
            seta AL
.L_43a220:

            ret 
.L_43a222:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a230:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_43a2e8

            cmp AX,2
            jne .L_43a2d1

            movzx R9D,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl R9D,8
            add R9D,EAX
            mov EAX,4294967295
            movzx R9D,R9W
            lea R8D,DWORD PTR [R9-1]
            cmp R8D,EAX
            je .L_43a2e0

            add RDI,2
            xor R10D,R10D
            jmp .L_43a2a1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a280:

            movzx EAX,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jbe .L_43a348

            lea R10D,DWORD PTR [RDX+1]
            cmp R10D,R8D
            jg .L_43a2d1
.L_43a2a1:

            lea EDX,DWORD PTR [R8+R10*1]
            sar EDX,1
            movsxd RAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RCX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx R11D,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,R11D
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_43a280

            lea R8D,DWORD PTR [RDX-1]
            cmp R10D,R8D
            jle .L_43a2a1
.L_43a2d1:

            mov EAX,4294967295
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a2e0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a2e8:

            movzx ECX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl ECX,8
            add ECX,EAX
            mov EAX,4294967295
            movzx ECX,CX
            sub ECX,1
            cmp ECX,EAX
            je .L_43a2e0

            add RDI,2
            xor R9D,R9D
            jmp .L_43a31b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a310:

            je .L_43a2e0

            lea R9D,DWORD PTR [RAX+1]
.L_43a316:

            cmp R9D,ECX
            jg .L_43a2d1
.L_43a31b:

            lea EAX,DWORD PTR [R9+RCX*1]
            sar EAX,1
            movsxd RDX,EAX
            lea R8,QWORD PTR [RDI+RDX*2+2]
            movzx EDX,BYTE PTR [R8]
            movzx R8D,BYTE PTR [R8+1]
            shl EDX,8
            add EDX,R8D
            movzx EDX,DX
            cmp ESI,EDX
            jns .L_43a310

            lea ECX,DWORD PTR [RAX-1]
            jmp .L_43a316
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a348:

            cmp EDX,R9D
            mov EAX,1
            jb .L_43a360

            sub ESI,EAX
            mov EAX,ESI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a360:

            mov EDX,EDX
            lea RAX,QWORD PTR [RDX+RDX*2]
            lea RCX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+4]
            movzx ECX,BYTE PTR [RCX+5]
            movzx EAX,AX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            add ESI,EDX
            sub ESI,EAX
            mov EAX,ESI
            ret 
.L_43a391:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a3a0:

            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            cmp AX,1
            mov DWORD PTR [RDI],EDX
            je .L_43a400

            cmp AX,2
            jne .L_43a3f8

            mov QWORD PTR [RDI+8],RSI
            mov DWORD PTR [RDI+24],0
            xor EAX,EAX
            mov DWORD PTR [RDI+16],0
            movzx EDX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            shl EDX,8
            add DX,CX
            je .L_43a3f1

            movzx EAX,BYTE PTR [RSI+4]
            movzx EDX,BYTE PTR [RSI+5]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_43a3f1:

            mov DWORD PTR [RDI+20],EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a3f8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a400:

            mov QWORD PTR [RDI+8],RSI
            mov DWORD PTR [RDI+16],0
            ret 
.L_43a40c:

            nop
            nop
            nop
            nop
.L_43a410:

            push RBX
            mov RAX,RDI
            mov RBX,RSI
            sub RSP,48
.L_43a41b:

            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RSI
            xor ESI,ESI
            mov RDI,RSP
            mov RSI,RAX
            mov DWORD PTR [RSP],0
            call .L_43a3a0

            mov EDI,DWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+8]
            cmp EDI,1
            lea RSI,QWORD PTR [RDX+2]
            je .L_43a523

            cmp EDI,2
            mov R8D,1
            jne .L_43a540
.L_43a461:

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            mov EDI,DWORD PTR [RSP+16]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EDI,EAX
            jae .L_43a540

            mov ECX,DWORD PTR [RSP+20]
            mov EAX,R8D
            mov R9D,ECX
            shl EAX,CL
            shr R9D,5
            and R9D,2047
            and EAX,DWORD PTR [RBX+R9*4+116]
            jne .L_43a5a0

            add DWORD PTR [RSP+24],1
            movzx R9D,BYTE PTR [RDX+2]
            movzx R10D,BYTE PTR [RDX+3]
            shl R9D,8
            add R9D,R10D
            movzx R9D,R9W
            cmp EDI,R9D
            jae .L_43a4dc

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R9,QWORD PTR [RSI+RAX*2+2]
            movzx EAX,BYTE PTR [R9+2]
            movzx R9D,BYTE PTR [R9+3]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
.L_43a4dc:

            cmp ECX,EAX
            je .L_43a560

            add ECX,1
            mov DWORD PTR [RSP+20],ECX
            jmp .L_43a461
.L_43a4f0:

            mov EAX,R8D
            lea RAX,QWORD PTR [RSI+RAX*2+2]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,EAX
            mov EAX,EDI
            shl EAX,CL
            shl RCX,48
            shr RCX,53
            test DWORD PTR [RBX+RCX*4+116],EAX
            jne .L_43a5a0

            add R8D,1
            mov DWORD PTR [RSP+16],R8D
.L_43a523:

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            mov R8D,DWORD PTR [RSP+16]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp R8D,EAX
            jb .L_43a4f0

            nop
            nop
            nop
.L_43a540:

            xor EAX,EAX
.L_43a542:

            mov RBX,QWORD PTR [RSP+40]
            xor RBX,QWORD PTR FS:[40]
            jne .L_43a5a7

            add RSP,48
.L_43a556:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a560:

            add EDI,1
            mov DWORD PTR [RSP+16],EDI
            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EDI,EAX
            jae .L_43a461

            lea RAX,QWORD PTR [RDI+RDI*2]
            lea RCX,QWORD PTR [RSI+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            mov DWORD PTR [RSP+20],EAX
            jmp .L_43a461
.L_43a5a0:

            mov EAX,1
            jmp .L_43a542
.L_43a5a7:

            call __stack_chk_fail@PLT
.L_43a5ac:

            nop
            nop
            nop
            nop
.L_43a5b0:

            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_43a5bc

            cmp EAX,2
            jne .L_43a5e0
.L_43a5bc:

            mov RDX,QWORD PTR [RDI+8]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RDI+16],EAX
            setb AL
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a5e0:

            xor EAX,EAX
            ret 
.L_43a5e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a5f0:

            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_43a6a0

            cmp EAX,2
            jne .L_43a640

            mov RSI,QWORD PTR [RDI+8]
            add DWORD PTR [RDI+24],1
            mov ECX,DWORD PTR [RDI+16]
            mov R8D,DWORD PTR [RDI+20]
            movzx EDX,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_43a648

            cmp R8D,EAX
            je .L_43a668

            nop
            nop
            nop
            nop
            nop
            nop
.L_43a630:

            add R8D,1
            mov DWORD PTR [RDI+20],R8D
.L_43a638:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a640:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a648:

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp R8D,EAX
            jne .L_43a630
.L_43a668:

            add ECX,1
            mov DWORD PTR [RDI+16],ECX
            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_43a638

            lea RAX,QWORD PTR [RCX+RCX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RDI+20],EAX
            ret 
          .byte 0x66
          .byte 0x90
.L_43a6a0:

            add DWORD PTR [RDI+16],1
            ret 
.L_43a6a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a6b0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_43a740

            cmp AX,2
            jne .L_43a73d

            movzx R9D,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl R9D,8
            add R9D,EAX
            movzx R9D,R9W
            lea R8D,DWORD PTR [R9-1]
            cmp R8D,-1
            je .L_43a73d

            add RDI,2
            xor R10D,R10D
            jmp .L_43a70d
          .byte 0x90
.L_43a6f0:

            movzx EAX,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jbe .L_43a780

            lea R10D,DWORD PTR [RDX+1]
            cmp R8D,R10D
            jl .L_43a73d
.L_43a70d:

            lea EDX,DWORD PTR [R8+R10*1]
            sar EDX,1
            movsxd RAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RCX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx R11D,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,R11D
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_43a6f0

            lea R8D,DWORD PTR [RDX-1]
            cmp R8D,R10D
            jge .L_43a70d
.L_43a73d:

            xor EAX,EAX
            ret 
.L_43a740:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,AX
            sub ESI,EAX
            movzx EAX,BYTE PTR [RDI+5]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ESI,EDX
            jae .L_43a787

            lea RDX,QWORD PTR [RDI+RSI*2+6]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a780:

            xor EAX,EAX
            cmp EDX,R9D
            jb .L_43a790
.L_43a787:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a790:

            mov EDX,EDX
            lea RAX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            ret 
.L_43a7ac:

            nop
            nop
            nop
            nop
.L_43a7b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_43a7be:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            je .L_43a8b0

            cmp AX,2
            jne .L_43a8a0

            movzx EAX,BYTE PTR [RDI+2]
            movzx ECX,BYTE PTR [RDI+3]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            movzx R11D,R8W
            je .L_43a8a0

            lea R8,QWORD PTR [RDI+4]
            xor R9D,R9D
            mov R10D,1
            nop
            nop
            nop
            nop
            nop
.L_43a810:

            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,R9D
            jbe .L_43a880

            movzx EAX,BYTE PTR [R8+4]
            movzx ECX,BYTE PTR [R8+5]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EDX,EAX
            jne .L_43a880

            movzx EBX,BYTE PTR [R8+2]
            movzx EAX,BYTE PTR [R8+3]
            movzx ECX,BYTE PTR [R8]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R8+1]
            shl ECX,8
            movzx EBX,BX
            add ECX,EAX
            cmp BYTE PTR [RSI+112],0
            movzx ECX,CX
            jne .L_43a880

            add EBX,1
            cmp EBX,ECX
            jbe .L_43a880

            nop
            nop
            nop
            nop
            nop
.L_43a868:

            mov EAX,ECX
            mov EBP,R10D
            shl EBP,CL
            shr EAX,5
            add ECX,1
            or DWORD PTR [RSI+RAX*4+116],EBP
            cmp EBX,ECX
            jne .L_43a868

            nop
            nop
            nop
.L_43a880:

            add R9D,1
            add R8,6
            cmp R11D,R9D
            je .L_43a8a0

            movzx EAX,BYTE PTR [RDI+2]
            movzx ECX,BYTE PTR [RDI+3]
            jmp .L_43a810
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a8a0:

            add RSP,8
.L_43a8a4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_43a8b0:

            movzx EAX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            movzx R9D,R8W
            je .L_43a8a0

            lea R14D,DWORD PTR [R9-1]
            mov R13D,EDX
            mov RBX,RSI
            mov R12,RDI
            xor EBP,EBP
            lea R15,QWORD PTR [RIP+.L_658760]
            add R14,1
            jmp .L_43a905
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a8f0:

            add RBP,1
            cmp RBP,R14
            je .L_43a8a0

            movzx EAX,BYTE PTR [R12+4]
            movzx ECX,BYTE PTR [R12+5]
.L_43a905:

            shl EAX,8
            mov ESI,EBP
            mov RDX,R15
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,EBP
            jbe .L_43a91b

            lea RDX,QWORD PTR [R12+RBP*2+6]
.L_43a91b:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp R13D,EAX
            jne .L_43a8f0

            movzx EAX,BYTE PTR [R12+2]
            movzx EDX,BYTE PTR [R12+3]
            mov RDI,RBX
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            add ESI,EAX
            call .L_43a160

            jmp .L_43a8f0
.L_43a94f:

            nop
.L_43a950:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,RSI
            sub RSP,40
.L_43a966:

            movzx EDX,BYTE PTR [RDI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_43ab70

            cmp AX,2
            je .L_43a9c0
.L_43a992:

            xor EAX,EAX
.L_43a994:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_43aca1

            add RSP,40
.L_43a9ac:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a9c0:

            movzx R14D,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl R14D,8
            add EAX,R14D
            test EBP,EBP
            mov WORD PTR [RSP+14],AX
            movzx R12D,AX
            jne .L_43aa8b

            test AX,AX
            mov DWORD PTR [RSP+20],4294967295
            je .L_43a992

            lea RAX,QWORD PTR [RSP+20]
            lea R15,QWORD PTR [RDI+4]
            xor R14D,R14D
            mov QWORD PTR [RSP],RAX
            jmp .L_43aa25
.L_43aa00:

            test ESI,ESI
            je .L_43ab5c

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_43aa10:

            add R14D,1
            add R15,6
            mov DWORD PTR [RSP+20],EAX
            cmp R12D,R14D
            je .L_43ac88
.L_43aa25:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_431990

            test EAX,EAX
            je .L_43aa80

            movzx EAX,BYTE PTR [R13+2]
            movzx EDI,BYTE PTR [R13+3]
            mov ESI,DWORD PTR [RSP+20]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_43aa00

            movzx EAX,BYTE PTR [R15]
            movzx EDI,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp ESI,EAX
            jb .L_43ab5c

            movzx EAX,BYTE PTR [R15+2]
            movzx ESI,BYTE PTR [R15+3]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            jmp .L_43aa10
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43aa80:

            cmp DWORD PTR [RSP+20],-1
            jne .L_43ac88
.L_43aa8b:

            cmp WORD PTR [RSP+14],0
            je .L_43a992

            movzx R9D,BYTE PTR [R13+2]
            movzx EAX,BYTE PTR [R13+3]
            lea RDI,QWORD PTR [R13+4]
            xor ESI,ESI
            lea R10,QWORD PTR [RIP+.L_44db00-11295]
            mov R8D,1
            shl R9D,8
            add R9D,EAX
            movzx R9D,R9W
            jmp .L_43aad8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43aac8:

            add ESI,1
            add RDI,6
            cmp R12D,ESI
            je .L_43a992
.L_43aad8:

            xor EAX,EAX
            cmp ESI,R9D
            mov RDX,R10
            jae .L_43aaf5

            movzx EAX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            mov RDX,RDI
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
.L_43aaf5:

            cmp EBP,EAX
            jne .L_43aac8

            movzx R11D,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX+1]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+3]
            shl R11D,8
            shl ECX,8
            add R11D,EDX
            add ECX,EAX
            movzx R11D,R11W
            movzx EAX,CX
            add R11D,1
            cmp EAX,R11D
            jae .L_43aac8

            mov EDX,R8D
            shl EDX,CL
            mov ECX,EDX
            mov EDX,EAX
            shr EDX,5
            test DWORD PTR [RBX+RDX*4+116],ECX
            jne .L_43ab5c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ab40:

            add EAX,1
            cmp R11D,EAX
            jbe .L_43aac8

            mov EDX,EAX
            mov R14D,R8D
            mov ECX,EAX
            shr EDX,5
            shl R14D,CL
            test DWORD PTR [RBX+RDX*4+116],R14D
            je .L_43ab40
.L_43ab5c:

            mov EAX,1
            jmp .L_43a994
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ab70:

            movzx R15D,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl R15D,8
            add R15D,EAX
            test EBP,EBP
            movzx R12D,R15W
            je .L_43ac20
.L_43ab8c:

            test R15W,R15W
            je .L_43a992

            movzx EDI,BYTE PTR [R13+4]
            movzx EAX,BYTE PTR [R13+5]
            lea RSI,QWORD PTR [R13+6]
            xor EDX,EDX
            lea R8,QWORD PTR [RIP+.L_658760]
            mov R9D,1
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            jmp .L_43abd0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43abc0:

            add EDX,1
            add RSI,2
            cmp R12D,EDX
            je .L_43a992
.L_43abd0:

            cmp EDI,EDX
            mov RCX,R8
            cmova RCX,RSI
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EBP,EAX
            jne .L_43abc0

            movzx ECX,BYTE PTR [R13+2]
            movzx EAX,BYTE PTR [R13+3]
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            add ECX,EDX
            cmp ECX,65535
            ja .L_43abc0

            mov EAX,ECX
            mov R10D,R9D
            shr EAX,5
            shl R10D,CL
            test DWORD PTR [RBX+RAX*4+116],R10D
            je .L_43abc0

            jmp .L_43ab5c
          .byte 0x90
.L_43ac20:

            lea R14,QWORD PTR [RSP+20]
            mov RDI,RBX
            mov DWORD PTR [RSP+20],4294967295
            mov RSI,R14
            call .L_431990

            mov EDX,EAX
            xor EAX,EAX
            test EDX,EDX
            je .L_43a994

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,DWORD PTR [RSP+20]
            ja .L_43ab5c

            lea EAX,DWORD PTR [R12+RAX*1-1]
            mov RSI,R14
            mov RDI,RBX
            mov DWORD PTR [RSP+20],EAX
            call .L_431990

            test EAX,EAX
            je .L_43ab8c

            jmp .L_43ab5c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ac88:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_431990

            test EAX,EAX
            je .L_43aa8b

            jmp .L_43ab5c
.L_43aca1:

            call __stack_chk_fail@PLT
.L_43aca6:
          .string "num_items > 0"
# WARNING: found overlapping blocks at address 3aa79

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43acc0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_43acce:

            mov R14D,DWORD PTR [RDI+56]
            test R14D,R14D
            je .L_43af86

            mov R15D,DWORD PTR [RDI+60]
            mov EBP,DWORD PTR [RDI]
            lea RCX,QWORD PTR [RIP+.L_658760]
            mov RBX,RDI
            nop
            nop
            nop
            nop
            nop
.L_43acf0:

            lea EAX,DWORD PTR [R14+RBP*1]
            cmp EAX,R15D
            jae .L_43ad66

            mov RSI,QWORD PTR [RBX+8]
            lea EAX,DWORD PTR [RBP+1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov DWORD PTR [RBX],EAX
            mov RBP,RAX
            mov RDI,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR [RDI+200]
            lea R12,QWORD PTR [RAX+RDX*4]
            mov EAX,DWORD PTR [RBX+16]
            movzx EDX,WORD PTR [R12+12]
            mov EDI,EAX
            and EDI,14
            test EDI,EDX
            mov R13D,EDX
            jne .L_43acf0

            test DL,8
            mov R8D,DWORD PTR [R12]
            jne .L_43ae60
.L_43ad3a:

            movzx EDX,WORD PTR [R12+16]
            mov EAX,DWORD PTR [R12+4]
            and EAX,DWORD PTR [RBX+24]
            mov ESI,EDX
            and ESI,96
            cmp SI,32
            je .L_43add0
.L_43ad53:

            test EAX,EAX
            je .L_43ad66

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_43ad80

            cmp BYTE PTR [R12+15],AL
            je .L_43ad80
.L_43ad66:

            add RSP,24
.L_43ad6a:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ad80:

            mov RAX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_43ada2

            mov RDX,QWORD PTR [RBX+40]
            mov EDI,R8D
            call RAX

            test AL,AL
            je .L_43ad66
.L_43ad9a:

            mov R14D,DWORD PTR [RBX+56]
            mov RSI,QWORD PTR [RBX+48]
.L_43ada2:

            sub R14D,1
            add RSI,2
            mov EAX,1
            mov DWORD PTR [RBX+56],R14D
            mov QWORD PTR [RBX+48],RSI
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43add0:

            and R13D,32
            jne .L_43ad53

            cmp BYTE PTR [RBX+20],0
            je .L_43ae00

            cmp BYTE PTR [RBX+21],0
            jne .L_43ae0f

            mov ESI,EDX
            and ESI,31
            cmp SI,1
            jne .L_43ae0f
.L_43adf1:

            and DH,1
            jne .L_43ad53

            jmp .L_43ae0f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ae00:

            mov ESI,EDX
            and ESI,31
            cmp SI,1
            je .L_43af60
.L_43ae0f:

            test EAX,EAX
            je .L_43acf0

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_43ae2a

            cmp BYTE PTR [R12+15],AL
            jne .L_43af77
.L_43ae2a:

            mov RAX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_43acf0

            mov QWORD PTR [RSP],RCX
            mov RDX,QWORD PTR [RBX+40]
            mov EDI,R8D
            call RAX

            test AL,AL
            mov RCX,QWORD PTR [RSP]
            je .L_43af77

            jmp .L_43ad9a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ae60:

            test AL,16
            jne .L_43ae80

            test AH,255
            je .L_43ad3a

            xor EAX,EDX
            test AH,255
            je .L_43ad3a

            jmp .L_43acf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ae80:

            mov RDX,QWORD PTR [RSI+64]
            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            movzx R9D,BYTE PTR [RDX+3]
            shl ESI,8
            add ESI,EDI
            mov EDI,ESI
            movzx ESI,BYTE PTR [RDX+2]
            shl EDI,16
            shl ESI,8
            add ESI,R9D
            movzx ESI,SI
            add ESI,EDI
            cmp ESI,65537
            jbe .L_43acf0

            movzx ESI,BYTE PTR [RDX+12]
            movzx EDI,BYTE PTR [RDX+13]
            shl ESI,8
            add ESI,EDI
            movzx EDI,SI
            add RDX,RDI
            test SI,SI
            cmove RDX,RCX
            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EDI
            cmp SI,1
            jne .L_43acf0

            movzx ESI,BYTE PTR [RDX+2]
            movzx EDI,BYTE PTR [RDX+3]
            shr EAX,16
            shl ESI,8
            add ESI,EDI
            mov RDI,RCX
            movzx ESI,SI
            cmp EAX,ESI
            jae .L_43af04

            lea RDI,QWORD PTR [RDX+RAX*4+4]
.L_43af04:

            movzx EAX,BYTE PTR [RDI]
            movzx ESI,BYTE PTR [RDI+1]
            mov QWORD PTR [RSP],RCX
            mov DWORD PTR [RSP+12],R8D
            shl ESI,16
            shl EAX,24
            add EAX,ESI
            movzx ESI,BYTE PTR [RDI+2]
            shl ESI,8
            add EAX,ESI
            movzx ESI,BYTE PTR [RDI+3]
            lea EDI,DWORD PTR [RAX+RSI*1]
            mov ESI,R8D
            add RDX,RDI
            test EDI,EDI
            cmove RDX,RCX
            mov RDI,RDX
            call .L_43a230

            cmp EAX,-1
            mov RCX,QWORD PTR [RSP]
            je .L_43acf0

            mov R8D,DWORD PTR [RSP+12]
            jmp .L_43ad3a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43af60:

            test DH,2
            jne .L_43ad53

            cmp BYTE PTR [RBX+21],0
            je .L_43adf1

            test EAX,EAX
            jne .L_43afa5
.L_43af77:

            mov R14D,DWORD PTR [RBX+56]
            mov R15D,DWORD PTR [RBX+60]
            mov EBP,DWORD PTR [RBX]
            jmp .L_43acf0
.L_43af86:

            lea RCX,QWORD PTR [RIP+.L_44db00-11520]
            lea RSI,QWORD PTR [RIP+.L_439d20]
            lea RDI,QWORD PTR [RIP+.L_43aca6]
            mov EDX,379
            call __assert_fail@PLT
.L_43afa5:

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_43ae2a

            cmp AL,BYTE PTR [R12+15]
            jne .L_43af77

            jmp .L_43ae2a
.L_43afbd:

            nop
            nop
            nop
.L_43afc0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,40
.L_43afcc:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+7]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+6]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            xor EDX,EDX
            cmp EAX,-1
            je .L_43b06d

            movzx ESI,BYTE PTR [RBX+2]
            movzx EAX,BYTE PTR [RBX+3]
            mov R9,RSP
            movzx ECX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov RDI,RBP
            mov QWORD PTR [RSP+8],RBX
            shl ESI,8
            add ESI,EAX
            lea RAX,QWORD PTR [RIP+.L_4345e0]
            shl ECX,8
            movzx ESI,SI
            add ECX,EDX
            lea RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP],RAX
            lea EAX,DWORD PTR [RSI+RSI*1]
            movzx ECX,CX
            lea R8,QWORD PTR [RBX+RAX*1+6]
            call .L_434970

            mov EDX,EAX
.L_43b06d:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_43b086

            add RSP,40
.L_43b083:

            pop RBX
            pop RBP
            ret 
.L_43b086:

            call __stack_chk_fail@PLT
.L_43b08b:

            nop
            nop
            nop
            nop
            nop
.L_43b090:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,40
.L_43b0a4:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            cmp EAX,-1
            je .L_43b210

            movzx EDX,BYTE PTR [RBP+4]
            movzx ECX,BYTE PTR [RBP+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_43b238
.L_43b11d:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea R14,QWORD PTR [RIP+.L_658760]
            mov QWORD PTR [RSP+8],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBP,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_433e00]
            cmovne R14,RBP
            mov QWORD PTR [RSP],RAX
            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43b210

            lea R12D,DWORD PTR [RSI-1]
            xor R15D,R15D
            mov R13,RSP
            lea RBP,QWORD PTR [RIP+.L_658760]
            add R12,1
            jmp .L_43b1c8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43b188:

            movzx ESI,SI
            lea EDI,DWORD PTR [RSI+RSI*1-2]
.L_43b18f:

            movzx ECX,BYTE PTR [RAX+2]
            lea RDX,QWORD PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+3]
            mov R9,R13
            lea R8,QWORD PTR [RDX+RDI*1]
            mov RDI,RBX
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            call .L_434970

            test AL,AL
            jne .L_43b212

            add R15,1
            cmp R12,R15
            je .L_43b210

            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
.L_43b1c8:

            shl EAX,8
            mov RCX,RBP
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_43b1dd

            lea RCX,QWORD PTR [R14+R15*2+2]
.L_43b1dd:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,RBP
            movzx ESI,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            shl ESI,8
            add SI,DX
            jne .L_43b188

            xor EDI,EDI
            xor ESI,ESI
            jmp .L_43b18f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b210:

            xor EAX,EAX
.L_43b212:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_43b244

            add RSP,40
.L_43b226:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b238:

            mov EAX,EAX
            lea RCX,QWORD PTR [RBP+RAX*2+6]
            jmp .L_43b11d
.L_43b244:

            call __stack_chk_fail@PLT
.L_43b249:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b250:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_43b25e:

            mov R14D,DWORD PTR [RDI+56]
            test R14D,R14D
            je .L_43b4e2

            mov EBP,DWORD PTR [RDI]
            lea R15,QWORD PTR [RIP+.L_658760]
            mov RBX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b280:

            cmp R14D,EBP
            ja .L_43b2f2

            mov RSI,QWORD PTR [RBX+8]
            lea EAX,DWORD PTR [RBP-1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov DWORD PTR [RBX],EAX
            mov RBP,RAX
            mov RCX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR [RCX+208]
            lea R12,QWORD PTR [RAX+RDX*4]
            mov EAX,DWORD PTR [RBX+16]
            movzx EDX,WORD PTR [R12+12]
            mov ECX,EAX
            and ECX,14
            test ECX,EDX
            mov R13D,EDX
            jne .L_43b280

            test DL,8
            mov ECX,DWORD PTR [R12]
            jne .L_43b3d0
.L_43b2c6:

            movzx EDX,WORD PTR [R12+16]
            mov EAX,DWORD PTR [R12+4]
            and EAX,DWORD PTR [RBX+24]
            mov ESI,EDX
            and ESI,96
            cmp SI,32
            je .L_43b350
.L_43b2df:

            test EAX,EAX
            je .L_43b2f2

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_43b308

            cmp BYTE PTR [R12+15],AL
            je .L_43b308
.L_43b2f2:

            add RSP,24
.L_43b2f6:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b308:

            mov RAX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_43b329

            mov RDX,QWORD PTR [RBX+40]
            mov EDI,ECX
            call RAX

            test AL,AL
            je .L_43b2f2
.L_43b321:

            mov R14D,DWORD PTR [RBX+56]
            mov RSI,QWORD PTR [RBX+48]
.L_43b329:

            sub R14D,1
            add RSI,2
            mov EAX,1
            mov DWORD PTR [RBX+56],R14D
            mov QWORD PTR [RBX+48],RSI
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b350:

            and R13D,32
            jne .L_43b2df

            cmp BYTE PTR [RBX+20],0
            je .L_43b380

            cmp BYTE PTR [RBX+21],0
            jne .L_43b38f

            mov ESI,EDX
            and ESI,31
            cmp SI,1
            jne .L_43b38f
.L_43b36d:

            and DH,1
            jne .L_43b2df

            jmp .L_43b38f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b380:

            mov ESI,EDX
            and ESI,31
            cmp SI,1
            je .L_43b4c0
.L_43b38f:

            test EAX,EAX
            je .L_43b280

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_43b3aa

            cmp BYTE PTR [R12+15],AL
            jne .L_43b4d7
.L_43b3aa:

            mov RAX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_43b280

            mov RDX,QWORD PTR [RBX+40]
            mov EDI,ECX
            call RAX

            test AL,AL
            je .L_43b4d7

            jmp .L_43b321
.L_43b3d0:

            test AL,16
            jne .L_43b3f0

            test AH,255
            je .L_43b2c6

            xor EAX,EDX
            test AH,255
            je .L_43b2c6

            jmp .L_43b280
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b3f0:

            mov RDX,QWORD PTR [RSI+64]
            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            movzx R8D,BYTE PTR [RDX+3]
            shl ESI,8
            add ESI,EDI
            movzx EDI,BYTE PTR [RDX+2]
            shl ESI,16
            shl EDI,8
            add EDI,R8D
            movzx EDI,DI
            add ESI,EDI
            cmp ESI,65537
            jbe .L_43b280

            movzx ESI,BYTE PTR [RDX+12]
            movzx EDI,BYTE PTR [RDX+13]
            shl ESI,8
            add ESI,EDI
            movzx EDI,SI
            add RDX,RDI
            test SI,SI
            cmove RDX,R15
            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EDI
            cmp SI,1
            jne .L_43b280

            movzx ESI,BYTE PTR [RDX+2]
            movzx EDI,BYTE PTR [RDX+3]
            shr EAX,16
            shl ESI,8
            add ESI,EDI
            mov RDI,R15
            movzx ESI,SI
            cmp EAX,ESI
            jae .L_43b472

            lea RDI,QWORD PTR [RDX+RAX*4+4]
.L_43b472:

            movzx EAX,BYTE PTR [RDI]
            movzx ESI,BYTE PTR [RDI+1]
            mov DWORD PTR [RSP+12],ECX
            shl ESI,16
            shl EAX,24
            add EAX,ESI
            movzx ESI,BYTE PTR [RDI+2]
            shl ESI,8
            add EAX,ESI
            movzx ESI,BYTE PTR [RDI+3]
            lea EDI,DWORD PTR [RAX+RSI*1]
            mov ESI,ECX
            add RDX,RDI
            test EDI,EDI
            mov RDI,RDX
            cmove RDI,R15
            call .L_43a230

            cmp EAX,-1
            je .L_43b280

            mov ECX,DWORD PTR [RSP+12]
            jmp .L_43b2c6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b4c0:

            test DH,2
            jne .L_43b2df

            cmp BYTE PTR [RBX+21],0
            je .L_43b36d

            test EAX,EAX
            jne .L_43b501
.L_43b4d7:

            mov R14D,DWORD PTR [RBX+56]
            mov EBP,DWORD PTR [RBX]
            jmp .L_43b280
.L_43b4e2:

            lea RCX,QWORD PTR [RIP+.L_44ad20]
            lea RSI,QWORD PTR [RIP+.L_439d20]
            lea RDI,QWORD PTR [RIP+.L_43aca6]
            mov EDX,406
            call __assert_fail@PLT
.L_43b501:

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_43b3aa

            cmp AL,BYTE PTR [R12+15]
            jne .L_43b4d7

            jmp .L_43b3aa
.L_43b519:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b520:

            movzx ECX,WORD PTR [RSI+12]
            mov R8D,EDX
            xor EAX,EAX
            and R8D,14
            test R8D,ECX
            jne .L_43b53c

            test CL,8
            mov EAX,1
            jne .L_43b540
.L_43b53c:

            ret 
          .byte 0x66
          .byte 0x90
.L_43b540:

            test DL,16
            jne .L_43b558

            test DH,255
            je .L_43b53c

            xor ECX,EDX
            and CH,255
            sete AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b558:

            mov RDI,QWORD PTR [RDI+64]
            movzx ECX,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            movzx R8D,BYTE PTR [RDI+3]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            shl ECX,16
            shl EAX,8
            add EAX,R8D
            movzx EAX,AX
            add ECX,EAX
            xor EAX,EAX
            cmp ECX,65537
            jbe .L_43b53c

            movzx ECX,BYTE PTR [RDI+12]
            movzx R8D,BYTE PTR [RDI+13]
            shl ECX,8
            add ECX,R8D
            lea R8,QWORD PTR [RIP+.L_658760]
            movzx R9D,CX
            add RDI,R9
            test CX,CX
            cmovne R8,RDI
            movzx ECX,BYTE PTR [R8]
            movzx EDI,BYTE PTR [R8+1]
            shl ECX,8
            add ECX,EDI
            cmp CX,1
            jne .L_43b53c

            sub RSP,8
.L_43b5c9:

            movzx EAX,BYTE PTR [R8+2]
            mov ECX,EDX
            movzx EDX,BYTE PTR [R8+3]
            shr ECX,16
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_43b5f2

            mov EDX,ECX
            lea RDI,QWORD PTR [R8+RDX*4+4]
.L_43b5f2:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            mov ESI,DWORD PTR [RSI]
            shl EDX,16
            shl EAX,24
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+2]
            shl EDX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+3]
            lea EDI,DWORD PTR [RAX+RDX*1]
            mov RAX,RDI
            add RDI,R8
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            call .L_43a230

            cmp EAX,-1
            setne AL
            add RSP,8

            ret 
.L_43b636:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b640:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_43b64a:

            mov RAX,QWORD PTR [RDI+24]
            mov R9D,DWORD PTR [RAX+180]
            mov RAX,QWORD PTR [RAX+200]
            lea R9,QWORD PTR [R9+R9*4]
            lea R12,QWORD PTR [RAX+R9*4]
            movzx EAX,WORD PTR [R12+12]
            mov EBX,EAX
            mov EAX,48
            and EBX,96
            or EBX,16
            test CL,CL
            cmovne EBX,EAX
            mov EAX,EBX
            or EAX,64
            test R8B,R8B
            cmovne EBX,EAX
            cmp BYTE PTR [RDI+72],0
            jne .L_43b6a8

            or EBX,EDX
            test EDX,EDX
            je .L_43b699
.L_43b693:

            mov WORD PTR [R12+12],BX
.L_43b699:

            add RSP,8
.L_43b69d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43b6a8:

            mov R13,QWORD PTR [RDI+64]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov EBP,ESI
            movzx EAX,BYTE PTR [R13+4]
            movzx EDX,BYTE PTR [R13+5]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R13
            test AX,AX
            cmovne RDI,RDX
            call .L_43a6b0

            cmp EAX,2
            je .L_43b730

            cmp EAX,3
            je .L_43b6f0

            mov EDX,EBX
            or EDX,2
            cmp EAX,1
            cmove EBX,EDX
            jmp .L_43b693
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b6f0:

            movzx EAX,BYTE PTR [R13+10]
            movzx EDX,BYTE PTR [R13+11]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,EBP
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R13,RDX
            test AX,AX
            cmovne RDI,R13
            or EBX,8
            call .L_43a6b0

            shl EAX,8
            or EBX,EAX
            jmp .L_43b693
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b730:

            or EBX,4
            jmp .L_43b693
.L_43b738:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b740:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
.L_43b750:

            mov RDX,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov R13D,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,R13D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R12
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            xor EDX,EDX
            cmp EAX,-1
            je .L_43b7d4

            movzx EBX,BYTE PTR [R12+4]
            movzx EAX,BYTE PTR [R12+5]
            xor EDX,EDX
            xor R8D,R8D
            xor ECX,ECX
            mov RDI,RBP
            shl EBX,8
            add EBX,EAX
            add EBX,R13D
            movzx EBX,BX
            mov ESI,EBX
            call .L_43b640

            mov RDI,QWORD PTR [RBP+24]
            mov ESI,EBX
            call .L_402f10

            mov EDX,1
.L_43b7d4:

            add RSP,8
.L_43b7d8:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_43b7e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b7f0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_43b7fc:

            mov RDX,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_43b85a

            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_43b868
.L_43b85a:

            add RSP,8
.L_43b85e:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b868:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            movzx EBX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EBX,8
            add EBX,EAX
            movzx EBX,BX
            mov ESI,EBX
            call .L_43b640

            mov RDI,QWORD PTR [RBP+24]
            mov ESI,EBX
            call .L_402f10

            mov EAX,1
            jmp .L_43b85a
.L_43b89f:

            nop
.L_43b8a0:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_43b8b1:

            mov R13,QWORD PTR [RDI+24]
            mov EAX,DWORD PTR [R13+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R13+200]
            lea R15,QWORD PTR [RAX+RDX*4]
            movzx EBX,WORD PTR [R15+12]
            and EBX,112
            mov EBP,EBX
            or EBP,16
            cmp BYTE PTR [RDI+72],0
            je .L_43b92a

            mov R12,QWORD PTR [RDI+64]
            lea RDI,QWORD PTR [RIP+.L_658760]
            movzx EAX,BYTE PTR [R12+4]
            movzx EDX,BYTE PTR [R12+5]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R12
            test AX,AX
            cmovne RDI,RDX
            call .L_43a6b0

            cmp EAX,2
            je .L_43b988

            cmp EAX,3
            je .L_43b948

            or EBX,18
            movzx EBP,BP
            cmp EAX,1
            movzx EBX,BX
            cmove EBP,EBX
.L_43b925:

            mov WORD PTR [R15+12],BP
.L_43b92a:

            add RSP,8
.L_43b92e:

            mov ESI,R14D
            mov RDI,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_402f10

            nop
            nop
            nop
            nop
            nop
.L_43b948:

            movzx EAX,BYTE PTR [R12+10]
            movzx EDX,BYTE PTR [R12+11]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,R14D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R12,RDX
            test AX,AX
            cmovne RDI,R12
            or EBX,24
            call .L_43a6b0

            shl EAX,8
            movzx EBX,BX
            mov EBP,EAX
            or EBP,EBX
            jmp .L_43b925
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43b988:

            or EBX,20
            movzx EBP,BX
            jmp .L_43b925
.L_43b990:

            movzx EAX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            mov R9D,EAX
            shl R9D,8
            add R9D,R8D
            test R9W,R9W
            je .L_43bb40

            push R15
            push R14
            movzx R10D,R9W
            push R13
            push R12
            lea R15,QWORD PTR [RIP+.L_658760]
            push RBP
            push RBX
            mov R14,RSI
            mov R13,RDI
            xor R12D,R12D
            sub RSP,72
.L_43b9ce:

            mov QWORD PTR [RSP+56],RDX
            lea EDX,DWORD PTR [R10-1]
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RSP+16],RCX
.L_43b9e0:

            shl EAX,8
            mov RSI,R15
            add EAX,R8D
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_43b9f6

            lea RSI,QWORD PTR [R13+R12*2+2]
.L_43b9f6:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R13
            test DX,DX
            cmove RAX,R15
            lea RCX,QWORD PTR [RAX+4]
            movzx EDX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            mov QWORD PTR [RSP+40],RCX
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add DX,SI
            mov BYTE PTR [RSP+29],CL
            movzx ECX,BYTE PTR [RAX+2]
            mov BYTE PTR [RSP+30],CL
            je .L_43ba90

            mov RDI,QWORD PTR [RSP+56]
            movzx EDX,DX
            lea ECX,DWORD PTR [RDX+RDX*1-2]
            cmp EDX,1
            mov RBX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+32],RCX
            mov RBP,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],RBX
            je .L_43ba99

            sub EDX,2
            lea RBX,QWORD PTR [RAX+4]
            lea RAX,QWORD PTR [RAX+RDX*2+6]
            mov QWORD PTR [RSP+48],RAX
.L_43ba6a:

            mov RDI,QWORD PTR [R14+8]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBX
            call RBP

            test AL,AL
            je .L_43bb0b

            add RBX,2
            cmp QWORD PTR [RSP+48],RBX
            jne .L_43ba6a

            jmp .L_43ba99
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ba90:

            mov QWORD PTR [RSP+32],0
.L_43ba99:

            movzx EAX,WORD PTR [RSP+30]
            movzx EDX,BYTE PTR [RSP+29]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_43bb0b

            mov RCX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+32]
            lea EAX,DWORD PTR [RDX-1]
            lea RBX,QWORD PTR [RCX+RAX*4+6]
            lea RBP,QWORD PTR [RCX+RDI*1+2]
            add RBX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bad0:

            movzx ESI,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [R14+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_43bb02

            mov RDX,QWORD PTR [R14+16]
            test RDX,RDX
            je .L_43bb02

            sub EAX,1
            mov RDI,R14
            mov DWORD PTR [R14+24],EAX
            call RDX

            add DWORD PTR [R14+24],1
.L_43bb02:

            add RBP,4
            cmp RBP,RBX
            jne .L_43bad0
.L_43bb0b:

            add R12,1
            cmp QWORD PTR [RSP+16],R12
            je .L_43bb28

            movzx EAX,BYTE PTR [R13]
            movzx R8D,BYTE PTR [R13+1]
            jmp .L_43b9e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43bb28:

            add RSP,72
.L_43bb2c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bb40:

            ret 
.L_43bb42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bb50:

            movzx EAX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov R8D,EAX
            shl R8D,8
            add R8D,R10D
            test R8W,R8W
            je .L_43bc98

            movzx R11D,R8W
            push R15
            push R14
            lea R8D,DWORD PTR [R11-1]
            push R13
            push R12
            push RBP
            push RBX
            mov R13,RDX
            mov R14,RSI
            mov RBP,RDI
            lea R15,QWORD PTR [R8+1]
            sub RSP,56
.L_43bb8f:

            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_658760]
            jmp .L_43bbb6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bba0:

            add RBX,1
            cmp R15,RBX
            je .L_43bc80

            movzx EAX,BYTE PTR [RBP]
            movzx R10D,BYTE PTR [RBP+1]
.L_43bbb6:

            shl EAX,8
            mov RDX,R12
            add EAX,R10D
            movzx EAX,AX
            cmp EAX,EBX
            jbe .L_43bbcb

            lea RDX,QWORD PTR [RBP+RBX*2+2]
.L_43bbcb:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            mov EDX,DWORD PTR [R14+16]
            movzx ESI,AX
            add RSI,RBP
            test AX,AX
            cmove RSI,R12
            movzx EAX,BYTE PTR [RSI]
            movzx EDI,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp EDX,EAX
            jne .L_43bba0

            cmp EDX,1
            jbe .L_43bc6b

            mov RAX,QWORD PTR [R13+8]
            lea R10,QWORD PTR [RSI+4]
            mov R11D,4
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [RDX-2]
            lea RAX,QWORD PTR [R10+RAX*2+2]
            mov QWORD PTR [RSP+40],RAX
.L_43bc29:

            mov RAX,QWORD PTR [R14+8]
            mov QWORD PTR [RSP+32],R11
            mov RSI,R10
            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],R10
            mov EDI,DWORD PTR [RAX+R11*1]
            mov RAX,QWORD PTR [RSP+16]
            call RAX

            test AL,AL
            je .L_43bba0

            mov R11,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+24]
            add R11,4
            add R10,2
            cmp QWORD PTR [RSP+40],R10
            jne .L_43bc29
.L_43bc6b:

            add RSP,56
.L_43bc6f:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_43bc80:

            add RSP,56
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bc98:

            xor EAX,EAX
            ret 
.L_43bc9b:

            nop
            nop
            nop
            nop
            nop
.L_43bca0:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            je .L_43bd90

            movzx R9D,R8W
            push R15
            push R14
            push R13
            lea R13D,DWORD PTR [R9-1]
            push R12
            push RBP
            push RBX
            mov R12,RDX
            mov RBP,RSI
            mov R15,RDI
            add R13,1
            sub RSP,8
.L_43bcde:

            xor R14D,R14D
            lea RBX,QWORD PTR [RIP+.L_658760]
            jmp .L_43bd30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bcf0:

            movzx ESI,SI
            lea EDI,DWORD PTR [RSI+RSI*1-2]
.L_43bcf7:

            movzx ECX,BYTE PTR [RAX+2]
            lea RDX,QWORD PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+3]
            mov R9,R12
            lea R8,QWORD PTR [RDX+RDI*1]
            mov RDI,RBP
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            call .L_434970

            test AL,AL
            jne .L_43bd7a

            add R14,1
            cmp R13,R14
            je .L_43bd78

            movzx EAX,BYTE PTR [R15]
            movzx ECX,BYTE PTR [R15+1]
.L_43bd30:

            shl EAX,8
            add EAX,ECX
            mov RCX,RBX
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_43bd45

            lea RCX,QWORD PTR [R15+R14*2+2]
.L_43bd45:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R15
            test DX,DX
            cmove RAX,RBX
            movzx ESI,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            shl ESI,8
            add SI,DX
            jne .L_43bcf0

            xor EDI,EDI
            xor ESI,ESI
            jmp .L_43bcf7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bd78:

            xor EAX,EAX
.L_43bd7a:

            add RSP,8
.L_43bd7e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bd90:

            xor EAX,EAX
            ret 
.L_43bd93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bda0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,40
.L_43bdac:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_43be60

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_43be80
.L_43be21:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],0
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_433e00]
            cmovne RDI,RBX
            mov RDX,RSP
            mov QWORD PTR [RSP],RAX
            call .L_43bca0
.L_43be60:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43be87

            add RSP,40
.L_43be74:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43be80:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_43be21
.L_43be87:

            call __stack_chk_fail@PLT
.L_43be8c:

            nop
            nop
            nop
            nop
.L_43be90:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,40
.L_43bea0:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov R12D,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,R12D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            xor EDX,EDX
            cmp EAX,-1
            je .L_43bf84

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            lea R13,QWORD PTR [RIP+.L_658760]
            mov ESI,R12D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne R13,RDX
            mov RDI,R13
            call .L_43a6b0

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_43bfa8
.L_43bf47:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],R13
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_434650]
            mov RDX,RSP
            cmovne RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_43bca0

            mov EDX,EAX
.L_43bf84:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_43bfb1

            add RSP,40
.L_43bf9a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bfa8:

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+8]
            jmp .L_43bf47
.L_43bfb1:

            call __stack_chk_fail@PLT
.L_43bfb6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bfc0:

            jmp .L_43be90
.L_43bfc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bfd0:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            je .L_43c2c0

            push R15
            push R14
            movzx R9D,R8W
            push R13
            push R12
            mov R14,RSI
            push RBP
            push RBX
            mov R15,RDI
            xor R13D,R13D
            sub RSP,88
.L_43c006:

            mov QWORD PTR [RSP+16],RDX
            lea EDX,DWORD PTR [R9-1]
            lea RSI,QWORD PTR [RDX+1]
            mov QWORD PTR [RSP+40],RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c020:

            shl EAX,8
            add EAX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_43c039

            lea RCX,QWORD PTR [R15+R13*2+2]
.L_43c039:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            lea RSI,QWORD PTR [RIP+.L_658760]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R15
            test DX,DX
            cmove RAX,RSI
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            lea ECX,DWORD PTR [RSI+RSI*1+2]
            add RCX,RAX
            movzx R8D,BYTE PTR [RCX]
            movzx EDI,BYTE PTR [RCX+1]
            shl R8D,8
            lea R12D,DWORD PTR [R8+RDI*1]
            mov EDI,2
            movzx R11D,R12W
            test R12W,R12W
            lea EBX,DWORD PTR [R11+R11*1]
            cmove RBX,RDI
            add RBX,RCX
            movzx EDI,BYTE PTR [RBX]
            movzx R9D,BYTE PTR [RBX+1]
            shl EDI,8
            add EDI,R9D
            lea R9,QWORD PTR [RAX+2]
            mov WORD PTR [RSP+64],DI
            movzx EDI,DI
            mov DWORD PTR [RSP+36],EDI
            lea EDI,DWORD PTR [RDI+RDI*1+2]
            add RDI,RBX
            test DX,DX
            movzx R10D,BYTE PTR [RDI]
            mov QWORD PTR [RSP+48],RDI
            movzx EDI,BYTE PTR [RDI+1]
            mov BYTE PTR [RSP+66],R10B
            mov BYTE PTR [RSP+69],DIL
            mov RDI,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RDI+8]
            mov RBP,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],R10
            je .L_43c14f

            lea EDX,DWORD PTR [RSI-1]
            mov WORD PTR [RSP+70],R12W
            mov QWORD PTR [RSP+72],RBX
            mov R12,R14
            mov QWORD PTR [RSP+56],RCX
            mov RBX,R9
            lea RAX,QWORD PTR [RAX+RDX*2+4]
            mov R14D,R11D
            mov QWORD PTR [RSP+24],RAX
.L_43c10f:

            mov RDI,QWORD PTR [R12+8]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBX
            call RBP

            test AL,AL
            je .L_43c228

            add RBX,2
            cmp QWORD PTR [RSP+24],RBX
            jne .L_43c10f

            mov RAX,QWORD PTR [RSP+16]
            mov R11D,R14D
            mov R14,R12
            movzx R12D,WORD PTR [RSP+70]
            mov RCX,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+72]
            mov RBP,QWORD PTR [RAX]
.L_43c14f:

            cmp R12W,1
            ja .L_43c248
.L_43c15a:

            mov RAX,QWORD PTR [RSP+16]
            cmp WORD PTR [RSP+64],0
            mov RAX,QWORD PTR [RAX+24]
            mov QWORD PTR [RSP+8],RAX
            je .L_43c19b

            mov EAX,DWORD PTR [RSP+36]
            lea R12,QWORD PTR [RBX+2]
            sub EAX,1
            lea RBX,QWORD PTR [RBX+RAX*2+4]
.L_43c180:

            mov RDI,QWORD PTR [R14+8]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,R12
            call RBP

            test AL,AL
            je .L_43c208

            add R12,2
            cmp RBX,R12
            jne .L_43c180
.L_43c19b:

            movzx EAX,WORD PTR [RSP+66]
            movzx EDX,BYTE PTR [RSP+69]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_43c208

            mov RSI,QWORD PTR [RSP+48]
            lea EAX,DWORD PTR [RDX-1]
            lea RBP,QWORD PTR [RSI+4]
            lea RBX,QWORD PTR [RSI+RAX*4+8]
            nop
            nop
            nop
            nop
            nop
.L_43c1c8:

            movzx ESI,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [R14+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_43c1fa

            mov RDX,QWORD PTR [R14+16]
            test RDX,RDX
            je .L_43c1fa

            sub EAX,1
            mov RDI,R14
            mov DWORD PTR [R14+24],EAX
            call RDX

            add DWORD PTR [R14+24],1
.L_43c1fa:

            add RBP,4
            cmp RBP,RBX
            jne .L_43c1c8

            nop
            nop
            nop
            nop
            nop
.L_43c208:

            add R13,1
            cmp QWORD PTR [RSP+40],R13
            je .L_43c236
.L_43c213:

            movzx EAX,BYTE PTR [R15]
            movzx ECX,BYTE PTR [R15+1]
            jmp .L_43c020
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c228:

            add R13,1
            cmp QWORD PTR [RSP+40],R13
            mov R14,R12
            jne .L_43c213
.L_43c236:

            add RSP,88
.L_43c23a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c248:

            mov RAX,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RCX+2]
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+8],RAX
            lea EAX,DWORD PTR [R11-2]
            lea RAX,QWORD PTR [RCX+RAX*2+4]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R14
            mov R14,R13
            mov R13,RBX
            mov RBX,RBP
            mov RBP,RAX
.L_43c277:

            mov RDI,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,R12
            call RBX

            test AL,AL
            je .L_43c2b0

            add R12,2
            cmp QWORD PTR [RSP+24],R12
            jne .L_43c277

            mov RAX,QWORD PTR [RSP+16]
            mov RBX,R13
            mov R13,R14
            mov R14,RBP
            mov RBP,QWORD PTR [RAX]
            jmp .L_43c15a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c2b0:

            mov R13,R14
            mov R14,RBP
            jmp .L_43c208
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c2c0:

            ret 
.L_43c2c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c2d0:

            movzx EAX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,R10D
            test CX,CX
            je .L_43c468

            push R15
            movzx R8D,CX
            push R14
            push R13
            push R12
            sub R8D,1
            push RBP
            push RBX
            mov R13,RDX
            mov R12,RSI
            mov RBP,RDI
            lea R14,QWORD PTR [R8+1]
            sub RSP,56
.L_43c30c:

            xor EBX,EBX
            lea R15,QWORD PTR [RIP+.L_658760]
            jmp .L_43c336
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c320:

            add RBX,1
            cmp R14,RBX
            je .L_43c450

            movzx EAX,BYTE PTR [RBP]
            movzx R10D,BYTE PTR [RBP+1]
.L_43c336:

            shl EAX,8
            mov RSI,R15
            add EAX,R10D
            movzx EAX,AX
            cmp EAX,EBX
            jbe .L_43c34b

            lea RSI,QWORD PTR [RBP+RBX*2+2]
.L_43c34b:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,RBP
            test DX,DX
            cmove RAX,R15
            movzx EDI,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,EDX
            movzx EDX,DI
            lea RSI,QWORD PTR [RAX+RDX*2+2]
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            movzx R10D,AX
            test AX,AX
            mov EAX,2
            lea EDX,DWORD PTR [R10+R10*1]
            cmove RDX,RAX
            cmp BYTE PTR [R12+20],0
            je .L_43c3b8

            add RDX,RSI
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            or AX,DI
            jne .L_43c320
.L_43c3b8:

            cmp DWORD PTR [R12+16],R10D
            jne .L_43c320

            cmp R10D,1
            jbe .L_43c439

            mov RAX,QWORD PTR [R13+16]
            lea R11,QWORD PTR [RSI+2]
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [R10-2]
            mov R10D,4
            lea RAX,QWORD PTR [RAX*4+8]
            mov QWORD PTR [RSP+40],RAX
.L_43c3f6:

            mov RAX,QWORD PTR [R12+8]
            mov QWORD PTR [RSP+32],R10
            mov RSI,R11
            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],R11
            mov EDI,DWORD PTR [RAX+R10*1]
            mov RAX,QWORD PTR [RSP+16]
            call RAX

            test AL,AL
            je .L_43c320

            mov R10,QWORD PTR [RSP+32]
            mov R11,QWORD PTR [RSP+24]
            add R10,4
            add R11,2
            cmp R10,QWORD PTR [RSP+40]
            jne .L_43c3f6
.L_43c439:

            add RSP,56
.L_43c43d:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c450:

            add RSP,56
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c468:

            xor EAX,EAX
            ret 
.L_43c46b:

            nop
            nop
            nop
            nop
            nop
.L_43c470:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            je .L_43c5c0

            movzx R9D,R8W
            push R15
            push R14
            push R13
            lea R13D,DWORD PTR [R9-1]
            push R12
            push RBP
            push RBX
            mov R12,RDX
            mov RBP,RSI
            mov R15,RDI
            add R13,1
            sub RSP,8
.L_43c4ae:

            xor R14D,R14D
            lea RBX,QWORD PTR [RIP+.L_658760]
            jmp .L_43c4d6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c4c0:

            add R14,1
            cmp R13,R14
            je .L_43c5a8

            movzx EAX,BYTE PTR [R15]
            movzx ECX,BYTE PTR [R15+1]
.L_43c4d6:

            shl EAX,8
            mov RDX,RBX
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_43c4eb

            lea RDX,QWORD PTR [R15+R14*2+2]
.L_43c4eb:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmove RDX,RBX
            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            lea R8D,DWORD PTR [RSI+RSI*1+2]
            add R8,RDX
            movzx EDI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            shl EDI,8
            add EDI,EAX
            movzx ECX,DI
            test DI,DI
            mov EDI,2
            lea EAX,DWORD PTR [RCX+RCX*1]
            cmove RAX,RDI
            add RDX,2
            add RAX,R8
            add R8,2
            movzx R9D,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            push R12
.L_43c550:

            shl R9D,8
            add R9D,EDI
            movzx R9D,R9W
            lea R10D,DWORD PTR [R9+R9*1+2]
            add R10,RAX
            add RAX,2
            lea RDI,QWORD PTR [R10+2]
            push RDI
            movzx EDI,BYTE PTR [R10]
            movzx R10D,BYTE PTR [R10+1]
            shl EDI,8
            add EDI,R10D
            movzx EDI,DI
            push RDI
            push RAX
            mov RDI,RBP
            call .L_434a10

            add RSP,32
            test AL,AL
            je .L_43c4c0

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c5a8:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c5c0:

            xor EAX,EAX
            ret 
.L_43c5c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c5d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,56
.L_43c5dc:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_43c6a2

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_43c6c0
.L_43c651:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_433e00]
            cmovne RDI,RBX
            mov RDX,RSP
            mov QWORD PTR [RSP],RAX
            call .L_43c470
.L_43c6a2:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43c6c7

            add RSP,56
.L_43c6b6:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c6c0:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_43c651
.L_43c6c7:

            call __stack_chk_fail@PLT
.L_43c6cc:

            nop
            nop
            nop
            nop
.L_43c6d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,56
.L_43c6dc:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_43c7a2

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_43c7c0
.L_43c751:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_433e00]
            cmovne RDI,RBX
            mov RDX,RSP
            mov QWORD PTR [RSP],RAX
            call .L_43c470
.L_43c7a2:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43c7c7

            add RSP,56
.L_43c7b6:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c7c0:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_43c751
.L_43c7c7:

            call __stack_chk_fail@PLT
.L_43c7cc:

            nop
            nop
            nop
            nop
.L_43c7d0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,152
.L_43c7e7:

            movzx EDX,BYTE PTR [RDI+3]
            mov RSI,QWORD PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov QWORD PTR [RSP+96],RDI
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a410

            test AL,AL
            je .L_43ca09

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            lea RSI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+6]
            cmove RCX,RSI
            mov QWORD PTR [RSP+56],RCX
            movzx ECX,BYTE PTR [RBX+7]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+8]
            cmove RCX,RSI
            mov QWORD PTR [RSP+32],RCX
            movzx ECX,BYTE PTR [RBX+9]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+10]
            cmove RCX,RSI
            mov QWORD PTR [RSP+112],RCX
            movzx ECX,BYTE PTR [RBX+11]
            shl EAX,8
            add EAX,ECX
            test AX,AX
            movzx ECX,AX
            je .L_43ca09

            lea EAX,DWORD PTR [RCX-1]
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+8],RSI
            mov R14,R15
            add RAX,1
            mov QWORD PTR [RSP+104],RAX
            lea RAX,QWORD PTR [RSP+132]
            mov QWORD PTR [RSP+120],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c8e0:

            mov RSI,QWORD PTR [RSP+32]
            mov R12D,DWORD PTR [RSP+16]
            mov RBX,QWORD PTR [R14+8]
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_43ca38

            cmp AX,2
            jne .L_43c9f3

            mov RSI,QWORD PTR [RSP+32]
            movzx EBP,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            shl EBP,8
            cmp QWORD PTR [RSP+16],0
            lea EDI,DWORD PTR [RBP+RAX*1]
            mov WORD PTR [RSP+24],DI
            movzx R13D,DI
            jne .L_43cdb8

            xor R15D,R15D
            test DI,DI
            mov DWORD PTR [RSP+132],4294967295
            lea RBP,QWORD PTR [RSI+4]
            je .L_43c9f3

            mov DWORD PTR [RSP+44],R12D
            mov QWORD PTR [RSP+48],R14
            mov R12D,R15D
            mov R14,RBP
            mov R15,QWORD PTR [RSP+120]
            mov RBP,RSI
            jmp .L_43c992
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c970:

            test ESI,ESI
            je .L_43cef0

            xor EAX,EAX
.L_43c97a:

            add R12D,1
            add R14,6
            mov DWORD PTR [RSP+132],EAX
            cmp R13D,R12D
            je .L_43cf00
.L_43c992:

            mov RSI,R15
            mov RDI,RBX
            call .L_431990

            test EAX,EAX
            je .L_43cda0

            movzx EAX,BYTE PTR [RBP+2]
            movzx EDI,BYTE PTR [RBP+3]
            mov ESI,DWORD PTR [RSP+132]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_43c970

            movzx EAX,BYTE PTR [R14]
            movzx EDI,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp EAX,ESI
            ja .L_43cef0

            movzx EAX,BYTE PTR [R14+2]
            movzx ESI,BYTE PTR [R14+3]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            jmp .L_43c97a
          .byte 0x66
          .byte 0x90
.L_43c9f0:

            mov R14,R13
.L_43c9f3:

            add QWORD PTR [RSP+16],1
            mov RAX,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+104],RAX
            jne .L_43c8e0
.L_43ca09:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43cf24

            add RSP,152
.L_43ca27:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ca38:

            mov RSI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RSI+4]
            shl EAX,8
            cmp QWORD PTR [RSP+16],0
            mov EDX,EAX
            movzx EAX,BYTE PTR [RSI+5]
            lea R13D,DWORD PTR [RDX+RAX*1]
            movzx EBP,R13W
            je .L_43ce88
.L_43ca5e:

            test R13W,R13W
            je .L_43c9f3

            mov R9,QWORD PTR [RSP+32]
            xor EDX,EDX
            mov R8D,1
            movzx EDI,BYTE PTR [R9+4]
            movzx EAX,BYTE PTR [R9+5]
            lea RSI,QWORD PTR [R9+6]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            jmp .L_43ca9f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ca90:

            add EDX,1
            add RSI,2
            cmp EBP,EDX
            je .L_43c9f3
.L_43ca9f:

            mov RCX,QWORD PTR [RSP+8]
            cmp EDI,EDX
            cmova RCX,RSI
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,R12D
            jne .L_43ca90

            movzx ECX,BYTE PTR [R9+2]
            movzx EAX,BYTE PTR [R9+3]
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            add ECX,EDX
            cmp ECX,65535
            ja .L_43ca90

            mov EAX,ECX
            mov R10D,R8D
            shr EAX,5
            shl R10D,CL
            test DWORD PTR [RBX+RAX*4+116],R10D
            je .L_43ca90

            nop
            nop
            nop
            nop
.L_43caf0:

            mov RSI,QWORD PTR [RSP+96]
            movzx EAX,BYTE PTR [RSI+10]
            movzx EDX,BYTE PTR [RSI+11]
            shl EAX,8
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+8]
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_43cb19

            mov RAX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSI+RAX*2+12]
.L_43cb19:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+96]
            test AX,AX
            cmove RDX,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RDX]
            mov R13,RDX
            movzx EDX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43c9f3

            lea ECX,DWORD PTR [RSI-1]
            xor R15D,R15D
            lea RBX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+48],RBX
            mov RBX,R14
            mov R14,R13
            mov R13,RBX
            nop
            nop
            nop
            nop
            nop
.L_43cb70:

            shl EAX,8
            mov RCX,QWORD PTR [RSP+8]
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_43cb87

            lea RCX,QWORD PTR [R14+R15*2+2]
.L_43cb87:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,QWORD PTR [RSP+8]
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            lea R9,QWORD PTR [RAX+2]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            lea ECX,DWORD PTR [RSI+RSI*1+2]
            add RCX,RAX
            movzx R8D,BYTE PTR [RCX]
            movzx EDI,BYTE PTR [RCX+1]
            shl R8D,8
            add R8D,EDI
            mov EDI,2
            movzx R11D,R8W
            test R8W,R8W
            lea EBX,DWORD PTR [R11+R11*1]
            cmove RBX,RDI
            add RBX,RCX
            movzx R12D,BYTE PTR [RBX]
            movzx EDI,BYTE PTR [RBX+1]
            shl R12D,8
            add R12D,EDI
            movzx EDI,R12W
            lea EBP,DWORD PTR [RDI+RDI*1+2]
            mov DWORD PTR [RSP+44],EDI
            add RBP,RBX
            test DX,DX
            movzx EDI,BYTE PTR [RBP]
            mov BYTE PTR [RSP+74],DIL
            movzx EDI,BYTE PTR [RBP+1]
            mov BYTE PTR [RSP+77],DIL
            je .L_43cc82

            lea EDX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+80],RBX
            mov QWORD PTR [RSP+88],RBP
            mov QWORD PTR [RSP+64],RCX
            mov RBP,R13
            mov WORD PTR [RSP+78],R8W
            lea RAX,QWORD PTR [RAX+RDX*2+4]
            mov RBX,R9
            mov R13D,R11D
            mov QWORD PTR [RSP+24],RAX
.L_43cc43:

            mov RDI,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RSP+56]
            mov RSI,RBX
            call .L_4346a0

            test AL,AL
            je .L_43cd80

            add RBX,2
            cmp QWORD PTR [RSP+24],RBX
            jne .L_43cc43

            movzx R8D,WORD PTR [RSP+78]
            mov R11D,R13D
            mov RCX,QWORD PTR [RSP+64]
            mov R13,RBP
            mov RBX,QWORD PTR [RSP+80]
            mov RBP,QWORD PTR [RSP+88]
.L_43cc82:

            cmp R8W,1
            jbe .L_43cce0

            lea EAX,DWORD PTR [R11-2]
            lea R8,QWORD PTR [RCX+2]
            mov QWORD PTR [RSP+64],RBX
            lea RAX,QWORD PTR [RCX+RAX*2+4]
            mov RBX,R8
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R13
            mov R13,RBP
            mov RBP,RAX
.L_43ccac:

            mov RDI,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,RBX
            call .L_4346a0

            test AL,AL
            je .L_43cd80

            add RBX,2
            cmp QWORD PTR [RSP+24],RBX
            jne .L_43ccac

            mov RBX,QWORD PTR [RSP+64]
            mov RAX,RBP
            mov RBP,R13
            mov R13,RAX
            nop
            nop
.L_43cce0:

            test R12W,R12W
            je .L_43cd14

            mov EAX,DWORD PTR [RSP+44]
            lea R12,QWORD PTR [RBX+2]
            sub EAX,1
            lea RBX,QWORD PTR [RBX+RAX*2+4]
.L_43ccf6:

            mov RDI,QWORD PTR [R13+8]
            mov RDX,QWORD PTR [RSP+112]
            mov RSI,R12
            call .L_4346a0

            test AL,AL
            je .L_43cd83

            add R12,2
            cmp RBX,R12
            jne .L_43ccf6
.L_43cd14:

            movzx EAX,WORD PTR [RSP+74]
            movzx EDX,BYTE PTR [RSP+77]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_43cd83

            lea EAX,DWORD PTR [RDX-1]
            lea R12,QWORD PTR [RBP+4]
            lea RBX,QWORD PTR [RBP+RAX*4+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43cd40:

            movzx ESI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [R13+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_43cd75

            mov RDX,QWORD PTR [R13+16]
            test RDX,RDX
            je .L_43cd75

            sub EAX,1
            mov RDI,R13
            mov DWORD PTR [R13+24],EAX
            call RDX

            add DWORD PTR [R13+24],1
.L_43cd75:

            add R12,4
            cmp R12,RBX
            jne .L_43cd40

            jmp .L_43cd83
.L_43cd80:

            mov R13,RBP
.L_43cd83:

            add R15,1
            cmp QWORD PTR [RSP+48],R15
            je .L_43c9f0

            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            jmp .L_43cb70
.L_43cda0:

            cmp DWORD PTR [RSP+132],-1
            mov R12D,DWORD PTR [RSP+44]
            mov R14,QWORD PTR [RSP+48]
            jne .L_43cf0a
.L_43cdb8:

            cmp WORD PTR [RSP+24],0
            je .L_43c9f3

            mov RSI,QWORD PTR [RSP+32]
            xor R8D,R8D
            mov R9D,1
            movzx R10D,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            lea RDI,QWORD PTR [RSI+4]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
            jmp .L_43ce01

            nop
            nop
            nop
            nop
.L_43cdf0:

            add R8D,1
            add RDI,6
            cmp R13D,R8D
            je .L_43c9f3
.L_43ce01:

            xor EAX,EAX
            cmp R10D,R8D
            lea RDX,QWORD PTR [RIP+.L_44db00-11295]
            jbe .L_43ce22

            movzx EAX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            mov RDX,RDI
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
.L_43ce22:

            cmp R12D,EAX
            jne .L_43cdf0

            movzx ESI,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX+1]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+3]
            shl ESI,8
            shl ECX,8
            add ESI,EDX
            add ECX,EAX
            movzx ESI,SI
            movzx EAX,CX
            add ESI,1
            cmp EAX,ESI
            jae .L_43cdf0

            mov EDX,R9D
            shl EDX,CL
            mov ECX,EDX
            mov EDX,EAX
            shr EDX,5
            test DWORD PTR [RBX+RDX*4+116],ECX
            jne .L_43caf0

            mov ECX,EAX
            nop
            nop
            nop
.L_43ce68:

            add ECX,1
            cmp ESI,ECX
            jbe .L_43cdf0

            mov EAX,ECX
            mov EDX,R9D
            shr EAX,5
            shl EDX,CL
            test DWORD PTR [RBX+RAX*4+116],EDX
            je .L_43ce68

            jmp .L_43caf0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ce88:

            mov RSI,QWORD PTR [RSP+120]
            mov RDI,RBX
            mov DWORD PTR [RSP+132],4294967295
            call .L_431990

            test EAX,EAX
            je .L_43c9f3

            mov RSI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,DWORD PTR [RSP+132]
            ja .L_43caf0

            mov RSI,QWORD PTR [RSP+120]
            lea EAX,DWORD PTR [RBP+RAX*1-1]
            mov RDI,RBX
            mov DWORD PTR [RSP+132],EAX
            call .L_431990

            test EAX,EAX
            je .L_43ca5e

            jmp .L_43caf0
          .byte 0x90
.L_43cef0:

            mov R12D,DWORD PTR [RSP+44]
            mov R14,QWORD PTR [RSP+48]
            jmp .L_43caf0
          .byte 0x90
.L_43cf00:

            mov R12D,DWORD PTR [RSP+44]
            mov R14,QWORD PTR [RSP+48]
.L_43cf0a:

            mov RSI,QWORD PTR [RSP+120]
            mov RDI,RBX
            call .L_431990

            test EAX,EAX
            je .L_43cdb8

            jmp .L_43caf0
.L_43cf24:

            call __stack_chk_fail@PLT
.L_43cf29:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43cf30:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,72
.L_43cf44:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            movzx ECX,BYTE PTR [RDI+3]
            mov EDX,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,EDX
            mov DWORD PTR [RSP+12],EDX
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            cmovne RDI,RCX
            call .L_43a230

            xor ECX,ECX
            cmp EAX,-1
            je .L_43d06e

            movzx EAX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            lea R14,QWORD PTR [RIP+.L_658760]
            mov EDX,DWORD PTR [RSP+12]
            mov R15,R14
            shl EAX,8
            mov ESI,EDX
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+6]
            cmovne R14,RCX
            movzx ECX,BYTE PTR [RBX+7]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+9]
            movzx R12D,AX
            add R12,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+8]
            cmove R12,R15
            mov RDI,R12
            shl EAX,8
            add EAX,ECX
            movzx R13D,AX
            add R13,RBX
            test AX,AX
            cmove R13,R15
            call .L_43a6b0

            movzx EDX,BYTE PTR [RBX+10]
            movzx ECX,BYTE PTR [RBX+11]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_43d090
.L_43d022:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+24],R14
            mov QWORD PTR [RSP+32],R12
            mov QWORD PTR [RSP+40],R13
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RDX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RIP+.L_434650]
            cmovne RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_43c470

            mov ECX,EAX
.L_43d06e:

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,ECX
            jne .L_43d099

            add RSP,72
.L_43d084:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_43d090:

            mov EAX,EAX
            lea R15,QWORD PTR [RBX+RAX*2+12]
            jmp .L_43d022
.L_43d099:

            call __stack_chk_fail@PLT
.L_43d09e:

            nop
            nop
.L_43d0a0:

            jmp .L_43cf30
.L_43d0a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d0b0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R15,RSI
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_658760]
            sub RSP,40
.L_43d0cb:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea R13,QWORD PTR [RDI+RAX*2+4]
            movzx EAX,BYTE PTR [R13]
            movzx EDI,BYTE PTR [R13+1]
            lea RSI,QWORD PTR [R13+2]
            shl EAX,8
            add AX,DI
            cmove RSI,RBX
            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,ESI
            mov RSI,QWORD PTR [R15+8]
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_43a410

            test AL,AL
            jne .L_43d130
.L_43d11e:

            add RSP,40
.L_43d122:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d130:

            movzx R12D,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            lea R10,QWORD PTR [R14+4]
            movzx ESI,BYTE PTR [R14+3]
            shl R12D,8
            add R12D,EAX
            movzx R11D,R12W
            lea R9D,DWORD PTR [R11+R11*1+2]
            lea RCX,QWORD PTR [R13+R9*1]
            movzx EAX,BYTE PTR [RCX]
            shl EAX,8
            mov EDX,EAX
            movzx EAX,BYTE PTR [RCX+1]
            add EAX,EDX
            mov WORD PTR [RSP+12],AX
            movzx EAX,AX
            lea EBP,DWORD PTR [RAX+RAX*1+2]
            mov DWORD PTR [RSP+8],EAX
            add RBP,RCX
            movzx EAX,BYTE PTR [RBP]
            mov BYTE PTR [RSP+14],AL
            movzx EAX,BYTE PTR [RBP+1]
            mov BYTE PTR [RSP+25],AL
            movzx EAX,BYTE PTR [R14+2]
            shl EAX,8
            add EAX,ESI
            test AX,AX
            movzx ESI,AX
            je .L_43d20c

            lea EAX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+16],RBP
            mov WORD PTR [RSP+26],R12W
            mov DWORD PTR [RSP+28],R11D
            mov R12,R15
            mov RBP,R10
            lea RAX,QWORD PTR [R14+RAX*2+6]
            mov R15,RCX
            mov QWORD PTR [RSP],RAX
.L_43d1c0:

            movzx EAX,BYTE PTR [RBP]
            movzx ECX,BYTE PTR [RBP+1]
            mov RSI,QWORD PTR [R12+8]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_43a410

            test AL,AL
            je .L_43d11e

            add RBP,2
            cmp QWORD PTR [RSP],RBP
            jne .L_43d1c0

            mov RCX,R15
            mov R15,R12
            movzx R12D,WORD PTR [RSP+26]
            mov RBP,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+28]
.L_43d20c:

            cmp R12W,1
            jbe .L_43d250

            lea EAX,DWORD PTR [R11-2]
            lea R12,QWORD PTR [R13+4]
            lea RBX,QWORD PTR [R13+RAX*2+6]
            mov R13,RCX
.L_43d223:

            mov RDI,QWORD PTR [R15+8]
            mov RDX,R14
            mov RSI,R12
            call .L_434620

            test AL,AL
            je .L_43d11e

            add R12,2
            cmp RBX,R12
            jne .L_43d223

            mov RCX,R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d250:

            cmp WORD PTR [RSP+12],0
            je .L_43d290

            mov EAX,DWORD PTR [RSP+8]
            lea R12,QWORD PTR [RCX+2]
            sub EAX,1
            lea RBX,QWORD PTR [RCX+RAX*2+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d270:

            mov RDI,QWORD PTR [R15+8]
            mov RDX,R14
            mov RSI,R12
            call .L_434620

            test AL,AL
            je .L_43d11e

            add R12,2
            cmp RBX,R12
            jne .L_43d270
.L_43d290:

            movzx EAX,WORD PTR [RSP+14]
            movzx EDX,BYTE PTR [RSP+25]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_43d11e

            lea EAX,DWORD PTR [RDX-1]
            lea R12,QWORD PTR [RBP+4]
            lea RBX,QWORD PTR [RBP+RAX*4+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d2c0:

            movzx ESI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [R15+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_43d2f5

            mov RDX,QWORD PTR [R15+16]
            test RDX,RDX
            je .L_43d2f5

            sub EAX,1
            mov RDI,R15
            mov DWORD PTR [R15+24],EAX
            call RDX

            add DWORD PTR [R15+24],1
.L_43d2f5:

            add R12,4
            cmp R12,RBX
            jne .L_43d2c0

            jmp .L_43d11e
.L_43d303:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d310:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            lea R8,QWORD PTR [RIP+.L_658760]
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_43d329:

            mov RDX,QWORD PTR [RSI+24]
            movzx EBP,BYTE PTR [RDI+2]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            shl EBP,8
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+3]
            add EBP,EAX
            movzx EBP,BP
            lea EAX,DWORD PTR [RBP+RBP*1+2]
            lea R14,QWORD PTR [RDI+RAX*1+2]
            movzx R12D,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            lea RDX,QWORD PTR [R14+2]
            shl R12D,8
            add R12W,CX
            cmove RDX,R8
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R8
            call .L_43a230

            xor EDX,EDX
            cmp EAX,-1
            je .L_43d421

            movzx ECX,R12W
            lea RSI,QWORD PTR [RIP+.L_4345e0]
            mov QWORD PTR [RSP+8],RBX
            lea EAX,DWORD PTR [RCX+RCX*1+2]
            mov QWORD PTR [RSP+16],RBX
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP],RSI
            mov RSI,RSP
            lea R8,QWORD PTR [R14+4]
            add RAX,R14
            movzx R9D,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            push RSI
.L_43d3e0:

            shl R9D,8
            add R9D,EDX
            lea RDX,QWORD PTR [RBX+4]
            movzx R9D,R9W
            lea EDI,DWORD PTR [R9+R9*1+2]
            add RDI,RAX
            add RAX,2
            lea RSI,QWORD PTR [RDI+2]
            push RSI
            movzx ESI,BYTE PTR [RDI]
            movzx EDI,BYTE PTR [RDI+1]
            shl ESI,8
            add ESI,EDI
            mov RDI,R13
            movzx ESI,SI
            push RSI
            push RAX
            mov ESI,EBP
            call .L_434a10

            add RSP,32
            mov EDX,EAX
.L_43d421:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_43d440

            add RSP,48
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_43d440:

            call __stack_chk_fail@PLT
.L_43d445:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d450:

            jmp .L_43d310
.L_43d455:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d460:

            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx ECX,AX
            add RDI,RCX
            test AX,AX
            cmovne RDX,RDI
            lea RDI,QWORD PTR [RIP+.L_658760]
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_43d4a6

            mov ESI,ESI
            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RDI,QWORD PTR [RDX+RAX*2+2]
.L_43d4a6:

            movzx ECX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl ECX,8
            add ECX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx ESI,CX
            add RDX,RSI
            test CX,CX
            cmovne RAX,RDX
            ret 
.L_43d4c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d4d0:

            push RBX
.L_43d4d1:

            movzx EAX,BYTE PTR [RDI+4]
            lea RBX,QWORD PTR [RIP+.L_658760]
            movzx ECX,BYTE PTR [RDI+5]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDI,RCX
            test AX,AX
            cmovne RBX,RDI
            movzx R10D,BYTE PTR [RBX]
            movzx EAX,BYTE PTR [RBX+1]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
            sub R10D,1
            cmp R10D,-1
            je .L_43d568

            xor R11D,R11D
            jmp .L_43d523
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d518:

            je .L_43d580

            lea R11D,DWORD PTR [R8+1]
            cmp R11D,R10D
            jg .L_43d568
.L_43d523:

            lea R8D,DWORD PTR [R10+R11*1]
            sar R8D,1
            movsxd RAX,R8D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R9,QWORD PTR [RBX+RAX*2+2]
            movzx ECX,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R9+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R9+3]
            add EAX,ECX
            cmp ESI,EAX
            jae .L_43d518

            lea R10D,DWORD PTR [R8-1]
            cmp R11D,R10D
            jle .L_43d523
.L_43d568:

            xor EAX,EAX
            test RDX,RDX
            je .L_43d577

            mov DWORD PTR [RDX],65535
            xor EAX,EAX
.L_43d577:

            pop RBX
.L_43d578:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d580:

            test RDX,RDX
            je .L_43d590

            mov EAX,1
            mov DWORD PTR [RDX],R8D
            pop RBX
            ret 
          .byte 0x90
.L_43d590:

            mov EAX,1
            pop RBX
            ret 
.L_43d597:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d5a0:

            movzx EAX,BYTE PTR [RDI+8]
            movzx EDX,BYTE PTR [RDI+9]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx ECX,AX
            add RDI,RCX
            test AX,AX
            cmovne RDX,RDI
            movzx ECX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx ECX,CX
            cmp ESI,ECX
            jae .L_43d5fb

            mov ESI,ESI
            lea RSI,QWORD PTR [RDX+RSI*2+2]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            movzx ESI,CX
            add RDX,RSI
            test CX,CX
            cmovne RAX,RDX
.L_43d5fb:

            ret 
.L_43d5fd:

            nop
            nop
            nop
.L_43d600:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            lea RBX,QWORD PTR [RIP+.L_658760]
            mov R12,RDI
            sub RSP,48
.L_43d615:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov DWORD PTR [RSP],0
            shl EAX,8
            add EAX,EDX
            movzx ESI,AX
            add RSI,RDI
            test AX,AX
            mov RDI,RSP
            cmove RSI,RBX
            call .L_43a3a0

            mov EAX,DWORD PTR [RSP]
.L_43d651:

            cmp EAX,1
            je .L_43d690

            cmp EAX,2
            je .L_43d76e
.L_43d65f:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43d7fc

            add RSP,48
.L_43d677:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d680:

            mov EDX,DWORD PTR [RSP+16]
.L_43d684:

            add EDX,1
            mov EAX,1
            mov DWORD PTR [RSP+16],EDX
.L_43d690:

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+16]
            movzx ECX,BYTE PTR [RSI+2]
            movzx EDI,BYTE PTR [RSI+3]
            shl ECX,8
            add ECX,EDI
            movzx ECX,CX
            cmp EDX,ECX
            jae .L_43d65f

            mov ECX,EDX
            mov RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSI+RCX*2+4]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            mov RSI,RCX
            shl EAX,CL
            shl RSI,48
            shr RSI,53
            test DWORD PTR [RDI+RSI*4+116],EAX
            je .L_43d684
.L_43d6d7:

            movzx EAX,BYTE PTR [R12+4]
            movzx ECX,BYTE PTR [R12+5]
            shl EAX,8
            add EAX,ECX
            mov RCX,RBX
            movzx EAX,AX
            cmp EAX,EDX
            jbe .L_43d6f7

            lea RCX,QWORD PTR [R12+RDX*2+6]
.L_43d6f7:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160

            mov EAX,DWORD PTR [RSP]
            cmp EAX,1
            je .L_43d680

            cmp EAX,2
            jne .L_43d651
.L_43d720:

            mov RSI,QWORD PTR [RSP+8]
            add DWORD PTR [RSP+24],1
            mov ECX,DWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RSP+20]
            movzx EDX,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_43d763

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_43d763:

            cmp EDI,EAX
            je .L_43d7c0

            add EDI,1
            mov DWORD PTR [RSP+20],EDI
.L_43d76e:

            mov RDX,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RSP+16],EAX
            jae .L_43d65f

            mov ECX,DWORD PTR [RSP+20]
            mov RDI,QWORD PTR [RBP+8]
            mov EDX,1
            mov EAX,ECX
            shl EDX,CL
            shr EAX,5
            and EAX,2047
            test DWORD PTR [RDI+RAX*4+116],EDX
            je .L_43d720

            movzx EDX,WORD PTR [RSP+24]
            jmp .L_43d6d7

            nop
            nop
            nop
            nop
            nop
            nop
.L_43d7c0:

            add ECX,1
            mov DWORD PTR [RSP+16],ECX
            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_43d76e

            lea RAX,QWORD PTR [RCX+RCX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RSP+20],EAX
            jmp .L_43d76e
.L_43d7fc:

            call __stack_chk_fail@PLT
.L_43d801:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d810:

            push R15
            push R14
            lea R14,QWORD PTR [RIP+.L_658760]
            push R13
            push R12
            mov R15D,1
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,120
.L_43d82e:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+32],RDI
            mov DWORD PTR [RSP+64],0
            shl EAX,8
            add EAX,EDX
            movzx ESI,AX
            add RSI,RDI
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            lea RDI,QWORD PTR [RSP+64]
            cmove RSI,RAX
            call .L_43a3a0

            mov RBP,QWORD PTR [RSP+72]
            mov R12D,DWORD PTR [RSP+80]
            mov R13D,DWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RBP+2]
            mov R10,R12
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSP+88]
            mov DWORD PTR [RSP+16],EAX
            mov EAX,DWORD PTR [RSP+84]
            mov DWORD PTR [RSP+4],EAX
            lea RAX,QWORD PTR [RBX+4]
            mov QWORD PTR [RSP+56],RAX
.L_43d8af:

            mov EBX,DWORD PTR [RSP+4]
            movzx EDI,WORD PTR [RSP+16]
            mov ESI,R15D
            mov WORD PTR [RSP+40],R10W
            mov EAX,EBX
            mov ECX,EBX
            mov RBX,QWORD PTR [RSP+8]
            shr EAX,5
            shl ESI,CL
            mov WORD PTR [RSP+42],DI
            and EAX,2047
            mov DWORD PTR [RSP+20],ESI
            add RAX,28
            lea RBX,QWORD PTR [RBX+R12*2+2]
            mov QWORD PTR [RSP+24],RAX
.L_43d8eb:

            cmp R13D,1
            je .L_43d920

            cmp R13D,2
            je .L_43daa0
.L_43d8fb:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43db47

            add RSP,120
.L_43d913:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_43d920:

            movzx EAX,BYTE PTR [RBP+2]
            movzx EDX,BYTE PTR [RBP+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R10D
            jbe .L_43d8fb

            mov RAX,QWORD PTR [RSP+48]
            movzx ECX,BYTE PTR [RBX]
            mov R8,QWORD PTR [RAX+8]
            movzx EAX,BYTE PTR [RBX+1]
            shl ECX,8
            add ECX,EAX
            mov EAX,R13D
            shl EAX,CL
            shl RCX,48
            shr RCX,53
            test DWORD PTR [R8+RCX*4+116],EAX
            je .L_43dae0

            movzx EAX,WORD PTR [RSP+40]
.L_43d967:

            mov RSI,QWORD PTR [RSP+32]
            movzx EDX,BYTE PTR [RSI+4]
            movzx ECX,BYTE PTR [RSI+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            cmp DX,AX
            jbe .L_43d98f

            mov RDI,QWORD PTR [RSP+56]
            lea RCX,QWORD PTR [RDI+RAX*2+2]
.L_43d98f:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,QWORD PTR [RSP+32]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            test DX,DX
            movzx R9D,DX
            je .L_43da31

            movzx R11D,BYTE PTR [R8+112]
            lea RSI,QWORD PTR [RDI+2]
            xor EDX,EDX
            mov DWORD PTR [RSP+44],R10D
            jmp .L_43d9e7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d9e0:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
.L_43d9e7:

            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,EDX
            mov RAX,R14
            cmova RAX,RSI
            test R11B,R11B
            jne .L_43da20

            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            mov R10D,R15D
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl R10D,CL
            shr RAX,3
            and EAX,8188
            or DWORD PTR [R8+RAX*1+116],R10D
.L_43da20:

            add EDX,1
            add RSI,2
            cmp R9D,EDX
            jne .L_43d9e0

            mov R10D,DWORD PTR [RSP+44]
.L_43da31:

            cmp R13D,1
            je .L_43dae0

            cmp R13D,2
            jne .L_43d8eb
.L_43da45:

            add DWORD PTR [RSP+16],1
            mov EAX,DWORD PTR [RSP+16]
            mov DWORD PTR [RSP+88],EAX
            movzx EDX,BYTE PTR [RBP+2]
            movzx EAX,BYTE PTR [RBP+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp EDX,R10D
            jbe .L_43da87

            mov RBX,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [R12+R12*2]
            lea RDX,QWORD PTR [RBX+RAX*2+2]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_43da87:

            cmp EAX,DWORD PTR [RSP+4]
            je .L_43daf8

            add DWORD PTR [RSP+4],1
            mov EAX,DWORD PTR [RSP+4]
            mov DWORD PTR [RSP+84],EAX
            jmp .L_43d8af
          .byte 0x90
.L_43daa0:

            movzx EAX,BYTE PTR [RBP+2]
            movzx EDX,BYTE PTR [RBP+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R10D
            jbe .L_43d8fb

            mov RAX,QWORD PTR [RSP+48]
            mov EDI,DWORD PTR [RSP+20]
            mov R8,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RSP+24]
            test DWORD PTR [R8+RAX*4+4],EDI
            je .L_43da45

            movzx EAX,WORD PTR [RSP+42]
            jmp .L_43d967
.L_43dae0:

            lea R12D,DWORD PTR [R10+1]
            mov R10,R12
            mov DWORD PTR [RSP+80],R12D
            jmp .L_43d8af
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43daf8:

            lea R12D,DWORD PTR [R10+1]
            mov DWORD PTR [RSP+80],R12D
            movzx EAX,BYTE PTR [RBP+2]
            mov R10,R12
            movzx EDX,BYTE PTR [RBP+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp R12D,EAX
            jae .L_43d8af

            mov RDI,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [R12+R12*2]
            lea RDX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RSP+4],EAX
            mov DWORD PTR [RSP+84],EAX
            jmp .L_43d8af
.L_43db47:

            call __stack_chk_fail@PLT
.L_43db4c:

            nop
            nop
            nop
            nop
.L_43db50:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_43db64:

            mov R13,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EBP,DWORD PTR [R13+180]
            mov R14,QWORD PTR [R13+200]
            lea RAX,QWORD PTR [RBP+RBP*4]
            lea R15,QWORD PTR [R14+RAX*4]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,DWORD PTR [R15]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_43dcab

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_43dcc0
.L_43dbd4:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx ECX,DX
            add RBX,RCX
            test DX,DX
            cmovne RAX,RBX
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            movzx ECX,DX
            je .L_43dce0

            test ECX,ECX
            je .L_43dcd0

            xor R13D,R13D
            test BYTE PTR [R15+12],4
            lea EBX,DWORD PTR [RCX-1]
            setne R13B
            add RBX,1
            xor R15D,R15D
            add R13D,R13D
            jmp .L_43dc47
.L_43dc30:

            mov RDX,QWORD PTR [R12+24]
            mov RAX,QWORD PTR [RSP+8]
            mov EBP,DWORD PTR [RDX+180]
            mov R14,QWORD PTR [RDX+200]
.L_43dc47:

            lea RDX,QWORD PTR [RBP+RBP*4]
            mov ECX,R15D
            mov R8D,1
            and ECX,15
            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            mov BYTE PTR [R14+RDX*4+14],CL
            movzx EBP,BYTE PTR [RAX+R15*2+2]
            xor ECX,ECX
            movzx EDX,BYTE PTR [RAX+R15*2+3]
            add R15,1
            shl EBP,8
            add EBP,EDX
            mov EDX,R13D
            movzx EBP,BP
            mov ESI,EBP
            call .L_43b640

            mov RDI,QWORD PTR [R12+24]
            mov ESI,EBP
            call .L_402c20

            cmp RBX,R15
            jne .L_43dc30

            mov RAX,QWORD PTR [R12+24]
            add DWORD PTR [RAX+180],1
            mov EAX,1
.L_43dcab:

            add RSP,24
.L_43dcaf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43dcc0:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_43dbd4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43dcd0:

            mov RDI,R13
            call .L_4033f0

            mov EAX,1
            jmp .L_43dcab
          .byte 0x90
.L_43dce0:

            movzx ESI,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            mov RDI,R12
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43b8a0

            mov EAX,1
            jmp .L_43dcab
.L_43dcff:

            nop
.L_43dd00:

            jmp .L_43db50
.L_43dd05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dd10:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            lea RSI,QWORD PTR [RIP+.L_658760]
            mov R13,RDI
            lea RBP,QWORD PTR [RIP+.L_658760]
            sub RSP,72
.L_43dd32:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov DWORD PTR [RSP+16],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RDI,QWORD PTR [RSP+16]
            cmovne RSI,RDX
            mov QWORD PTR [RSP+8],RDI
            call .L_43a3a0

            nop
            nop
            nop
            nop
            nop
.L_43dd78:

            mov EAX,DWORD PTR [RSP+16]
            cmp EAX,1
            je .L_43ddb0

            cmp EAX,2
            je .L_43de10
.L_43dd8a:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43df05

            add RSP,72
.L_43dda2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ddb0:

            mov RCX,QWORD PTR [RSP+24]
            mov ESI,DWORD PTR [RSP+32]
            movzx EDX,BYTE PTR [RCX+2]
            movzx EDI,BYTE PTR [RCX+3]
            shl EDX,8
            add EDX,EDI
            movzx EDX,DX
            cmp ESI,EDX
            jae .L_43dd8a

            mov EDX,ESI
            mov RDI,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RCX+RDX*2+4]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,EDX
            mov RDX,RCX
            shl EAX,CL
            shl RDX,48
            shr RDX,53
            test DWORD PTR [RDI+RDX*4+116],EAX
            jne .L_43de54
.L_43ddf8:

            mov RDI,QWORD PTR [RSP+8]
            call .L_43a5f0

            jmp .L_43dd78
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43de10:

            mov RDX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RSP+32],EAX
            jae .L_43dd8a

            mov ECX,DWORD PTR [RSP+36]
            mov RDI,QWORD PTR [R12+8]
            mov EDX,1
            mov EAX,ECX
            shl EDX,CL
            shr EAX,5
            and EAX,2047
            test DWORD PTR [RDI+RAX*4+116],EDX
            je .L_43ddf8

            movzx ESI,WORD PTR [RSP+40]
.L_43de54:

            movzx EAX,BYTE PTR [R13+4]
            movzx EDX,BYTE PTR [R13+5]
            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            cmp AX,SI
            jbe .L_43de73

            movzx ESI,SI
            lea RDX,QWORD PTR [R13+RSI*2+6]
.L_43de73:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R13
            test AX,AX
            cmove RDX,RBP
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            mov R14,RDX
            mov ESI,EAX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx R8D,SI
            je .L_43ddf8

            lea EBX,DWORD PTR [R8-1]
            xor R15D,R15D
            add RBX,1
            jmp .L_43dece
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dec0:

            movzx EAX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            mov RDI,QWORD PTR [R12+8]
.L_43dece:

            shl EAX,8
            add EAX,ECX
            mov RCX,RBP
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_43dee3

            lea RCX,QWORD PTR [R14+R15*2+2]
.L_43dee3:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            add R15,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160

            cmp R15,RBX
            jne .L_43dec0

            jmp .L_43ddf8
.L_43df05:

            call __stack_chk_fail@PLT
.L_43df0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43df10:

            push R15
            push R14
            lea R15,QWORD PTR [RIP+.L_658760]
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            lea RSI,QWORD PTR [RIP+.L_658760]
            lea R14,QWORD PTR [RBP+4]
            mov EBX,1
            sub RSP,56
.L_43df3b:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov R13,RSP
            mov DWORD PTR [RSP],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RDI,R13
            cmovne RSI,RDX
            call .L_43a3a0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43df80:

            mov EAX,DWORD PTR [RSP]
            cmp EAX,1
            je .L_43dfb8

            cmp EAX,2
            je .L_43e0b8
.L_43df91:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43e128

            add RSP,56
.L_43dfa9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43dfb8:

            mov RCX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+16]
            movzx EAX,BYTE PTR [RCX+2]
            movzx ESI,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            cmp EDX,EAX
            jae .L_43df91

            lea RAX,QWORD PTR [RCX+RDX*2+4]
            mov RDI,QWORD PTR [R12+16]
            movzx ESI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160

            mov EAX,DWORD PTR [RSP]
            cmp EAX,1
            je .L_43e0f5
.L_43dfff:

            cmp EAX,2
            je .L_43e100

            mov RCX,R15
            nop
            nop
            nop
            nop
            nop
.L_43e010:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,RBP
            test AX,AX
            cmove RDI,R15
            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            test DX,DX
            movzx R9D,DX
            je .L_43e0a4

            mov R8,QWORD PTR [R12+32]
            lea RSI,QWORD PTR [RDI+2]
            xor EDX,EDX
            movzx R10D,BYTE PTR [R8+112]
            jmp .L_43e05f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e058:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
.L_43e05f:

            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,EDX
            mov RAX,R15
            cmova RAX,RSI
            test R10B,R10B
            jne .L_43e098

            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            mov R11D,EBX
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl R11D,CL
            shr RAX,3
            and EAX,8188
            or DWORD PTR [R8+RAX*1+116],R11D
.L_43e098:

            add EDX,1
            add RSI,2
            cmp R9D,EDX
            jne .L_43e058
.L_43e0a4:

            mov RDI,R13
            call .L_43a5f0

            jmp .L_43df80
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e0b8:

            mov RDX,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RSP+16],EAX
            jae .L_43df91

            movzx ESI,WORD PTR [RSP+20]
            mov RDI,QWORD PTR [R12+16]
            movzx ESI,SI
            call .L_43a160

            mov EAX,DWORD PTR [RSP]
            cmp EAX,1
            jne .L_43dfff
.L_43e0f5:

            movzx EDX,WORD PTR [RSP+16]
            jmp .L_43e105
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e100:

            movzx EDX,WORD PTR [RSP+24]
.L_43e105:

            movzx EAX,BYTE PTR [RBP+4]
            movzx ECX,BYTE PTR [RBP+5]
            shl EAX,8
            add EAX,ECX
            mov RCX,R15
            cmp AX,DX
            jbe .L_43e010

            lea RCX,QWORD PTR [R14+RDX*2+2]
            jmp .L_43e010
.L_43e128:

            call __stack_chk_fail@PLT
.L_43e12d:

            nop
            nop
            nop
.L_43e130:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_43e137:

            mov RAX,QWORD PTR [RSI+24]
            mov RBX,RDI
            mov EDX,DWORD PTR [RAX+180]
            mov RAX,QWORD PTR [RAX+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R12,QWORD PTR [RAX+RDX*4]
            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,DWORD PTR [R12]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_43e22b

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_43e230
.L_43e1a9:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_658760]
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne RSI,RBX
            xor EAX,EAX
            movzx EDX,BYTE PTR [RSI]
            movzx EDI,BYTE PTR [RSI+1]
            shl EDX,8
            add DI,DX
            je .L_43e22b

            mov R8D,DWORD PTR [RBP+36]
            mov EDX,DWORD PTR [R12+4]
            test R8D,R8D
            je .L_43e22b

            xor ECX,ECX
            mov EAX,EDX
            movzx EDX,DI
            tzcnt ECX,R8D
            and EAX,R8D
            shr EAX,CL
            test EAX,EAX
            je .L_43e250

            cmp EDX,EAX
            jb .L_43e250

            sub EAX,1
            lea RCX,QWORD PTR [RIP+.L_658760]
            cmp EDX,EAX
            ja .L_43e240
.L_43e20f:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43b8a0

            mov EAX,1
.L_43e22b:

            pop RBX
.L_43e22c:

            pop RBP
            pop R12
            ret 
.L_43e230:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_43e1a9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e240:

            lea RCX,QWORD PTR [RSI+RAX*2+2]
            jmp .L_43e20f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e250:

            xor EAX,EAX
            jmp .L_43e22b
.L_43e254:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e260:

            jmp .L_43e130
.L_43e265:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e270:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,328
.L_43e281:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+312],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            jne .L_43e2d8
.L_43e2a6:

            xor R12D,R12D
.L_43e2a9:

            mov RDI,QWORD PTR [RSP+312]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_43e769

            add RSP,328
.L_43e2ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43e2d8:

            movzx R14D,AX
            mov RBX,RDI
            mov R10,RSI
            cmp R14D,1
            je .L_43e548

            cmp AX,1
            lea RDX,QWORD PTR [RDI+4]
            lea RAX,QWORD PTR [RIP+.L_658760]
            mov BYTE PTR [RSP+39],0
            mov DWORD PTR [RSP+40],0
            lea RCX,QWORD PTR [RIP+.L_433e00]
            mov DWORD PTR [RSP+44],0
            cmove RDX,RAX
            sub RSP,8
.L_43e31f:

            lea RAX,QWORD PTR [RSP+48]
            xor R8D,R8D
            mov ESI,R14D
            mov RDI,R10
            push RAX
            lea RAX,QWORD PTR [RSP+55]
            push RAX
            lea RBP,QWORD PTR [RSP+72]
            push RBP
            lea R9,QWORD PTR [RSP+76]
            mov QWORD PTR [RSP+32],R10
            call .L_4346c0

            add RSP,32
            test AL,AL
            mov R12D,EAX
            je .L_43e2a6

            mov R10,QWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+44]
            movzx EAX,BYTE PTR [RBX]
            movzx R8D,BYTE PTR [RBX+1]
            mov ECX,DWORD PTR [RSP+40]
            movzx R13D,BYTE PTR [RSP+39]
            mov RBX,QWORD PTR [R10+24]
            cmp EDX,1
            mov ESI,DWORD PTR [RBX+180]
            ja .L_43e720
.L_43e385:

            test R13B,R13B
            jne .L_43e570

            mov EDX,DWORD PTR [RBX+224]
.L_43e394:

            mov R9D,EDX
            add EDX,1
            and R9D,7
            test R9B,R9B
            je .L_43e394

            mov DWORD PTR [RBX+224],EDX
            mov RDX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R9D,5
            lea RSI,QWORD PTR [RDX+RSI*4]
            test BYTE PTR [RSI+12],4
            movzx EDI,BYTE PTR [RSI+14]
            jne .L_43e76e

            mov BYTE PTR [RSP+24],R12B
            mov EDX,4
            mov R15D,1
.L_43e3da:

            and ECX,15
            or ECX,16
            or ECX,R9D
            mov BYTE PTR [RSI+14],CL
            mov ECX,DWORD PTR [RBX+180]
            lea RSI,QWORD PTR [RCX+RCX*4]
            mov RCX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RCX+RSI*4]
            movzx ECX,WORD PTR [RSI+16]
            mov EDI,ECX
            and EDI,31
            cmp DI,12
            jne .L_43e420

            and CX,224
            or ECX,7
            mov WORD PTR [RSI+16],CX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e420:

            shl EAX,8
            mov ECX,1
            mov RDI,R10
            add EAX,R8D
            xor R8D,R8D
            mov BYTE PTR [RSP+16],R9B
            movzx EAX,AX
            mov QWORD PTR [RSP],R10
            mov ESI,EAX
            mov DWORD PTR [RSP+12],EAX
            call .L_43b640

            mov R10,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RSP+12]
            mov RDI,QWORD PTR [R10+24]
            mov ESI,EAX
            call .L_402f10

            mov EAX,DWORD PTR [RBX+180]
            mov RSI,QWORD PTR [RBX+200]
            mov R8D,R15D
            mov ECX,1
            movzx R9D,BYTE PTR [RSP+16]
            jmp .L_43e48f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e480:

            mov EAX,DWORD PTR [RBX+180]
.L_43e486:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_43e48f:

            cmp DWORD PTR [RBP+RCX*4],EAX
            jbe .L_43e5c0

            cmp BYTE PTR [RBX+176],0
            jne .L_43e5c0

            test R13B,R13B
            jne .L_43e4e5

            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RSI+RAX*4]
            mov EAX,R8D
            movzx ESI,BYTE PTR [RDX+14]
            test SIL,16
            jne .L_43e4d5

            and ESI,15
            je .L_43e4d5

            movzx ESI,SIL
            cmp ESI,R15D
            cmova ESI,R15D
            sub EAX,R15D
            add EAX,ESI
.L_43e4d5:

            and EAX,15
            or EAX,R9D
            mov BYTE PTR [RDX+14],AL
            mov RSI,QWORD PTR [RBX+200]
.L_43e4e5:

            cmp BYTE PTR [RBX+177],0
            je .L_43e480

            cmp QWORD PTR [RBX+208],RSI
            je .L_43e610
.L_43e4fb:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            mov QWORD PTR [RSP+16],RCX
            mov DWORD PTR [RSP+12],R8D
            mov BYTE PTR [RSP],R9B
            call .L_402560

            test AL,AL
            movzx R9D,BYTE PTR [RSP]
            mov R8D,DWORD PTR [RSP+12]
            mov RCX,QWORD PTR [RSP+16]
            jne .L_43e638

            mov EAX,DWORD PTR [RBX+180]
            mov RSI,QWORD PTR [RBX+200]
            jmp .L_43e48f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e548:

            movzx ESI,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            mov RDI,R10
            mov R12D,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43b8a0

            jmp .L_43e2a9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e570:

            mov RDX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RSI+RSI*4]
            xor R9D,R9D
            lea RSI,QWORD PTR [RDX+RSI*4]
            xor EDX,EDX
            test BYTE PTR [RSI+12],4
            movzx EDI,BYTE PTR [RSI+14]
            je .L_43e759
.L_43e592:

            mov R15D,EDI
            and R15D,15
            and EDI,16
            mov EDI,1
            cmove R15D,EDI
            mov EDI,R13D
            xor EDI,1
            test R13B,R13B
            mov BYTE PTR [RSP+24],DIL
            jne .L_43e420

            jmp .L_43e3da
          .byte 0x66
          .byte 0x90
.L_43e5c0:

            mov EDX,EAX
            mov R15D,1
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
            test BYTE PTR [RDX+12],4
            movzx EDI,BYTE PTR [RDX+14]
            je .L_43e5e7

            mov EDX,EDI
            and EDX,15
            test DIL,16
            cmovne R15D,EDX
.L_43e5e7:

            add RCX,1
            add EAX,1
            lea EDX,DWORD PTR [R15+R8*1]
            cmp R14D,ECX
            mov DWORD PTR [RBX+180],EAX
            jbe .L_43e688

            mov R8D,EDX
            jmp .L_43e48f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e610:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_43e4fb

            mov EAX,EDX
.L_43e624:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_43e486
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e638:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RSI,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov RSI,QWORD PTR [RBX+200]
            jmp .L_43e624
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e688:

            movzx ECX,DIL
            sar ECX,5
            test ECX,ECX
            je .L_43e2a9

            cmp BYTE PTR [RSP+24],0
            je .L_43e2a9

            cmp DWORD PTR [RBX+184],EAX
            jbe .L_43e2a9

            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RSI+RDX*4]
            jmp .L_43e70e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e6c0:

            test DL,16
            jne .L_43e2a9

            mov ESI,EDX
            and ESI,15
            test SIL,SIL
            movzx EDX,SIL
            je .L_43e2a9

            cmp R15D,EDX
            cmovbe EDX,R15D
            add EAX,1
            add EDX,R8D
            and EDX,15
            or EDX,R9D
            mov BYTE PTR [RDI+14],DL
            cmp DWORD PTR [RBX+184],EAX
            jbe .L_43e2a9

            mov EDX,EAX
            lea RSI,QWORD PTR [RDX+RDX*4]
            mov RDX,QWORD PTR [RBX+200]
            lea RDI,QWORD PTR [RDX+RSI*4]
.L_43e70e:

            movzx ESI,BYTE PTR [RDI+14]
            mov EDX,ESI
            sar ESI,5
            cmp ECX,ESI
            je .L_43e6c0

            jmp .L_43e2a9
.L_43e720:

            add EDX,ESI
            mov RDI,RBX
            mov QWORD PTR [RSP+24],R10
            mov BYTE PTR [RSP+16],R8B
            mov BYTE PTR [RSP+12],AL
            mov DWORD PTR [RSP],ECX
            call .L_403190

            mov ESI,DWORD PTR [RBX+180]
            mov R10,QWORD PTR [RSP+24]
            movzx R8D,BYTE PTR [RSP+16]
            movzx EAX,BYTE PTR [RSP+12]
            mov ECX,DWORD PTR [RSP]
            jmp .L_43e385
.L_43e759:

            mov R15D,1
            mov BYTE PTR [RSP+24],0
            jmp .L_43e420
.L_43e769:

            call __stack_chk_fail@PLT
.L_43e76e:

            mov EDX,4
            jmp .L_43e592
.L_43e778:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e780:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_43e78b:

            mov RDX,QWORD PTR [RSI+24]
            mov RBX,RDI
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            cmp EAX,-1
            je .L_43e898

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_43e8a8
.L_43e7f7:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea R13,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne R13,RBX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43e898

            lea R12D,DWORD PTR [RSI-1]
            xor R14D,R14D
            lea RBX,QWORD PTR [RIP+.L_658760]
            add R12,1
            jmp .L_43e852
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e848:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
.L_43e852:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_43e867

            lea RDX,QWORD PTR [R13+R14*2+2]
.L_43e867:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R13
            test AX,AX
            cmove RDI,RBX
            call .L_43e270

            test AL,AL
            jne .L_43e89a

            add R14,1
            cmp R12,R14
            jne .L_43e848

            nop
            nop
            nop
.L_43e898:

            xor EAX,EAX
.L_43e89a:

            pop RBX
.L_43e89b:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e8a8:

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+6]
            jmp .L_43e7f7
.L_43e8b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e8c0:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_658760]
            push RBP
            push RBX
            mov RBP,RSI
            lea RSI,QWORD PTR [RIP+.L_658760]
            mov R13D,1
            sub RSP,72
.L_43e8e5:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov QWORD PTR [RSP+8],RDI
            mov DWORD PTR [RSP+16],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RDI,QWORD PTR [RSP+16]
            cmovne RSI,RDX
            call .L_43a3a0

            mov EDX,DWORD PTR [RSP+16]
.L_43e92a:

            cmp EDX,1
            je .L_43e96b

            cmp EDX,2
            je .L_43eb69
.L_43e938:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43ebf4

            add RSP,72
.L_43e950:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43e95b:

            mov EAX,DWORD PTR [RSP+32]
.L_43e95f:

            add EAX,1
            mov EDX,1
            mov DWORD PTR [RSP+32],EAX
.L_43e96b:

            mov RSI,QWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RSP+32]
            movzx ECX,BYTE PTR [RSI+2]
            movzx EDI,BYTE PTR [RSI+3]
            shl ECX,8
            add ECX,EDI
            movzx ECX,CX
            cmp EAX,ECX
            jae .L_43e938

            mov ECX,EAX
            mov RDI,QWORD PTR [RBP+8]
            mov EBX,EDX
            lea RSI,QWORD PTR [RSI+RCX*2+4]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            mov RSI,RCX
            shl EBX,CL
            shl RSI,48
            shr RSI,53
            test DWORD PTR [RDI+RSI*4+116],EBX
            je .L_43e95f
.L_43e9b4:

            mov RBX,QWORD PTR [RSP+8]
            movzx ECX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            shl ECX,8
            add ECX,ESI
            mov RSI,R12
            movzx ECX,CX
            cmp ECX,EAX
            jbe .L_43e9d5

            lea RSI,QWORD PTR [RBX+RAX*2+6]
.L_43e9d5:

            movzx EAX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,ECX
            movzx R15D,AX
            add R15,QWORD PTR [RSP+8]
            test AX,AX
            cmove R15,R12
            movzx ECX,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            mov ESI,ECX
            shl ESI,8
            add ESI,EAX
            test SI,SI
            movzx R9D,SI
            je .L_43eb04

            lea EBX,DWORD PTR [R9-1]
            xor R14D,R14D
            add RBX,1
            mov QWORD PTR [RSP],RBX
            lea RBX,QWORD PTR [R15+2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ea28:

            shl ECX,8
            lea RDX,QWORD PTR [RBX+R14*2]
            add ECX,EAX
            mov RAX,R12
            movzx ECX,CX
            cmp ECX,R14D
            cmova RAX,RDX
            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmove RDX,R12
            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            movzx ESI,AX
            jbe .L_43eacf

            movzx ECX,BYTE PTR [RDX+4]
            movzx EAX,BYTE PTR [RDX+5]
            shl ECX,8
            add ECX,EAX
            mov EAX,R13D
            shl EAX,CL
            shl RCX,48
            shr RCX,53
            test DWORD PTR [RDI+RCX*4+116],EAX
            je .L_43eae3

            lea RAX,QWORD PTR [RDX+6]
            lea ECX,DWORD PTR [RSI-2]
            lea RSI,QWORD PTR [RAX+RCX*2]
            jmp .L_43eaca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43eaa0:

            movzx ECX,BYTE PTR [RAX]
            movzx R10D,BYTE PTR [RAX+1]
            mov R8D,R13D
            add RAX,2
            shl ECX,8
            add ECX,R10D
            mov R10,RCX
            shl R8D,CL
            shl R10,48
            shr R10,53
            test DWORD PTR [RDI+R10*4+116],R8D
            je .L_43eae3
.L_43eaca:

            cmp RAX,RSI
            jne .L_43eaa0
.L_43eacf:

            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160
.L_43eae3:

            add R14,1
            cmp QWORD PTR [RSP],R14
            je .L_43eb00

            movzx ECX,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            mov RDI,QWORD PTR [RBP+8]
            jmp .L_43ea28
          .byte 0x90
.L_43eb00:

            mov EDX,DWORD PTR [RSP+16]
.L_43eb04:

            cmp EDX,1
            je .L_43e95b

            cmp EDX,2
            jne .L_43e92a
.L_43eb16:

            mov RCX,QWORD PTR [RSP+24]
            add DWORD PTR [RSP+40],1
            mov ESI,DWORD PTR [RSP+32]
            mov EDI,DWORD PTR [RSP+36]
            movzx EDX,BYTE PTR [RCX+2]
            movzx EAX,BYTE PTR [RCX+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ESI,EDX
            jae .L_43eb59

            mov EAX,ESI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RCX+RAX*2+4]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_43eb59:

            cmp EDI,EAX
            je .L_43ebb3

            add EDI,1
            mov EDX,2
            mov DWORD PTR [RSP+36],EDI
.L_43eb69:

            mov RCX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp DWORD PTR [RSP+32],EAX
            jae .L_43e938

            mov ECX,DWORD PTR [RSP+36]
            mov RDI,QWORD PTR [RBP+8]
            mov EBX,R13D
            mov EAX,ECX
            shl EBX,CL
            shr EAX,5
            and EAX,2047
            test DWORD PTR [RDI+RAX*4+116],EBX
            je .L_43eb16

            movzx EAX,WORD PTR [RSP+40]
            jmp .L_43e9b4
.L_43ebb3:

            add ESI,1
            mov DWORD PTR [RSP+32],ESI
            movzx EAX,BYTE PTR [RCX+2]
            movzx EDX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,EDX
            mov EDX,2
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_43eb69

            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RCX,QWORD PTR [RCX+RAX*2+4]
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            mov DWORD PTR [RSP+36],EAX
            jmp .L_43eb69
.L_43ebf4:

            call __stack_chk_fail@PLT
.L_43ebf9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ec00:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            lea RSI,QWORD PTR [RIP+.L_658760]
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_658760]
            mov EBP,1
            sub RSP,88
.L_43ec24:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov QWORD PTR [RSP+24],RDI
            mov DWORD PTR [RSP+32],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RDI,QWORD PTR [RSP+32]
            cmovne RSI,RDX
            call .L_43a3a0

            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RSP+20],EAX
.L_43ec6d:

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,1
            je .L_43ecad

            cmp EAX,2
            je .L_43eed4
.L_43ec7f:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43ef53

            add RSP,88
.L_43ec97:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43eca8:

            add DWORD PTR [RSP+48],1
.L_43ecad:

            mov RCX,QWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RCX+2]
            movzx ESI,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            cmp EDX,EAX
            jae .L_43ec7f

            lea RAX,QWORD PTR [RCX+RDX*2+4]
            mov RDI,QWORD PTR [R15+16]
            movzx ESI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ESI,8
            add ESI,EAX
.L_43ecdf:

            movzx ESI,SI
            call .L_43a160

            mov EAX,DWORD PTR [RSP+32]
            cmp EAX,1
            mov DWORD PTR [RSP+20],EAX
            je .L_43ef10

            cmp EAX,2
            jne .L_43ef08

            movzx EAX,WORD PTR [RSP+56]
.L_43ed06:

            mov RDI,QWORD PTR [RSP+24]
            movzx EDX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            shl EDX,8
            add EDX,ECX
            mov RCX,RBX
            cmp DX,AX
            jbe .L_43ed25

            lea RCX,QWORD PTR [RDI+RAX*2+6]
.L_43ed25:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx R12D,AX
            add R12,QWORD PTR [RSP+24]
            test AX,AX
            cmove R12,RBX
            movzx EAX,BYTE PTR [R12]
            movzx EDX,BYTE PTR [R12+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            movzx EDI,CX
            test CX,CX
            mov DWORD PTR [RSP+16],EDI
            je .L_43ee70

            mov R14,QWORD PTR [R15+32]
            lea R13,QWORD PTR [R12+2]
            xor R11D,R11D
            nop
.L_43ed70:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R11D
            cmova RDX,R13
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx ESI,AX
            add RSI,R12
            test AX,AX
            cmove RSI,RBX
            movzx EAX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            movzx R9D,DX
            jbe .L_43ee22

            mov R8,QWORD PTR [R15+16]
            lea RDI,QWORD PTR [RSI+4]
            mov EDX,1
            mov DWORD PTR [RSP+12],R11D
            movzx R10D,BYTE PTR [R8+112]
            jmp .L_43edd8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43edd0:

            movzx EAX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
.L_43edd8:

            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,EDX
            mov RAX,RBX
            cmova RAX,RDI
            test R10B,R10B
            jne .L_43ee11

            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            mov R11D,EBP
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl R11D,CL
            shr RAX,3
            and EAX,8188
            or DWORD PTR [R8+RAX*1+116],R11D
.L_43ee11:

            add EDX,1
            add RDI,2
            cmp R9D,EDX
            jne .L_43edd0

            mov R11D,DWORD PTR [RSP+12]
.L_43ee22:

            cmp BYTE PTR [R14+112],0
            jne .L_43ee4a

            movzx ECX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            mov EDX,EBP
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl EDX,CL
            shr RAX,3
            and EAX,8188
            or DWORD PTR [R14+RAX*1+116],EDX
.L_43ee4a:

            add R11D,1
            add R13,2
            cmp DWORD PTR [RSP+16],R11D
            je .L_43ee70

            movzx EAX,BYTE PTR [R12]
            movzx EDX,BYTE PTR [R12+1]
            jmp .L_43ed70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ee70:

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,1
            je .L_43eca8

            cmp EAX,2
            jne .L_43ec6d

            mov RSI,QWORD PTR [RSP+40]
            add DWORD PTR [RSP+56],1
            mov ECX,DWORD PTR [RSP+48]
            mov EDI,DWORD PTR [RSP+52]
            movzx EDX,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_43eec9

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_43eec9:

            cmp EDI,EAX
            je .L_43ef1a

            add EDI,1
            mov DWORD PTR [RSP+52],EDI
.L_43eed4:

            mov RDX,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RSP+48],EAX
            jae .L_43ec7f

            mov RDI,QWORD PTR [R15+16]
            movzx ESI,WORD PTR [RSP+52]
            jmp .L_43ecdf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ef08:

            mov RCX,RBX
            jmp .L_43ed25
.L_43ef10:

            movzx EAX,WORD PTR [RSP+48]
            jmp .L_43ed06
.L_43ef1a:

            add ECX,1
            mov DWORD PTR [RSP+48],ECX
            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_43eed4

            lea RAX,QWORD PTR [RCX+RCX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RSP+52],EAX
            jmp .L_43eed4
.L_43ef53:

            call __stack_chk_fail@PLT
.L_43ef58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ef60:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_43ef6b:

            mov RDX,QWORD PTR [RSI+24]
            mov RBX,RDI
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            cmp EAX,-1
            je .L_43f078

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_43f088
.L_43efd7:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea R13,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne R13,RBX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43f078

            lea R12D,DWORD PTR [RSI-1]
            xor R14D,R14D
            lea RBX,QWORD PTR [RIP+.L_658760]
            add R12,1
            jmp .L_43f032
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43f028:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
.L_43f032:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_43f047

            lea RDX,QWORD PTR [R13+R14*2+2]
.L_43f047:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R13
            test AX,AX
            cmove RDI,RBX
            call .L_43e270

            test AL,AL
            jne .L_43f07a

            add R14,1
            cmp R12,R14
            jne .L_43f028

            nop
            nop
            nop
.L_43f078:

            xor EAX,EAX
.L_43f07a:

            pop RBX
.L_43f07b:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f088:

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+6]
            jmp .L_43efd7
.L_43f094:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f0a0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,72
.L_43f0b4:

            movzx ECX,BYTE PTR [RDI+5]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDI+4]
            mov QWORD PTR [RSP+8],RAX
            movzx EAX,BYTE PTR [RDI+4]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            test DX,DX
            movzx R12D,DX
            je .L_43f178

            lea R13,QWORD PTR [RDI+6]
            xor R15D,R15D
            lea RBX,QWORD PTR [RIP+.L_658760]
            jmp .L_43f117
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f100:

            add R15D,1
            add R13,2
            cmp R12D,R15D
            je .L_43f178

            movzx EAX,BYTE PTR [R14+4]
            movzx ECX,BYTE PTR [R14+5]
.L_43f117:

            shl EAX,8
            mov RSI,QWORD PTR [RBP+8]
            add EAX,ECX
            mov RCX,RBX
            movzx EAX,AX
            cmp EAX,R15D
            cmova RCX,R13
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_43a410

            test AL,AL
            jne .L_43f100
.L_43f14f:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43f335

            add RSP,72
.L_43f167:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f178:

            mov R13,QWORD PTR [RSP+8]
            lea EAX,DWORD PTR [R12+R12*1+2]
            add R13,RAX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43f32e

            lea R12D,DWORD PTR [RSI-1]
            xor R15D,R15D
            lea RBX,QWORD PTR [RIP+.L_658760]
            add R12,1
            jmp .L_43f1d3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f1c0:

            add R15,1
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            cmp R15,R12
            je .L_43f218
.L_43f1d3:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_43f1e8

            lea RDX,QWORD PTR [R13+R15*2+2]
.L_43f1e8:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RBP+8]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_43a410

            test AL,AL
            jne .L_43f1c0

            jmp .L_43f14f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f218:

            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_43f220:

            lea EAX,DWORD PTR [RAX+RAX*1+2]
            movzx EDX,BYTE PTR [R14+3]
            lea RSI,QWORD PTR [RIP+.L_658760]
            lea RBX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+16],0
            lea R12,QWORD PTR [RIP+.L_658760]
            add R13,RAX
            movzx EAX,BYTE PTR [R14+2]
            mov RDI,RBX
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R14,RDX
            test AX,AX
            cmovne RSI,R14
            call .L_43a3a0

            jmp .L_43f2ce
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f270:

            mov ECX,DWORD PTR [RSP+36]
            mov EDX,1
            mov EAX,ECX
            shl EDX,CL
            shr EAX,5
            and EAX,2047
            test DWORD PTR [R8+RAX*4+116],EDX
            je .L_43f2c6

            movzx EDX,WORD PTR [RSP+40]
.L_43f291:

            movzx EAX,BYTE PTR [R13]
            movzx ECX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,ECX
            mov RCX,R12
            movzx EAX,AX
            cmp EAX,EDX
            jbe .L_43f2af

            lea RCX,QWORD PTR [R13+RDX*2+2]
.L_43f2af:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            mov RDI,R8
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160
.L_43f2c6:

            mov RDI,RBX
            call .L_43a5f0
.L_43f2ce:

            mov RDI,RBX
            call .L_43a5b0

            test AL,AL
            je .L_43f14f

            mov R9D,DWORD PTR [RSP+16]
            mov R8,QWORD PTR [RBP+8]
            cmp R9D,1
            je .L_43f308

            cmp R9D,2
            je .L_43f270

            test BYTE PTR [R8+116],1
            mov EDX,65535
            jne .L_43f291

            jmp .L_43f2c6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f308:

            mov RDI,RBX
            call .L_434190

            mov ECX,EAX
            shl RAX,48
            shr RAX,53
            shl R9D,CL
            test DWORD PTR [R8+RAX*4+116],R9D
            je .L_43f2c6

            movzx EDX,WORD PTR [RSP+32]
            jmp .L_43f291
.L_43f32e:

            xor EAX,EAX
            jmp .L_43f220
.L_43f335:

            call __stack_chk_fail@PLT
.L_43f33a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43f340:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,24
            mov R13,QWORD PTR [RSI+24]
            cmp DWORD PTR [RBX+56],3
            mov EAX,DWORD PTR [R13+180]
            mov R11,QWORD PTR [R13+200]
            mov RBP,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R11+RAX*4]
            mov ESI,DWORD PTR [RAX]
            je .L_43f390
.L_43f376:

            xor EAX,EAX
.L_43f378:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f390:

            movzx EAX,BYTE PTR [RDI+2]
            mov R14,RDI
            movzx EDI,BYTE PTR [RDI+3]
            shl EAX,8
            add EAX,EDI
            lea RDI,QWORD PTR [RIP+.L_658760]
            movzx R8D,AX
            add R8,R14
            test AX,AX
            cmovne RDI,R8
            call .L_43a230

            cmp EAX,-1
            mov R15D,EAX
            je .L_43f376

            cmp BYTE PTR [R13+177],0
            jne .L_43f4a0
.L_43f3d0:

            movzx EAX,BYTE PTR [R14+4]
            movzx EDI,BYTE PTR [R14+5]
            shl EAX,8
            add EAX,EDI
            movzx R12D,AX
            lea EDI,DWORD PTR [R12+R12*1+2]
            lea RCX,QWORD PTR [R14+RDI*1+4]
            mov RDI,QWORD PTR [RBX+152]
            movzx EDX,BYTE PTR [RCX]
            mov QWORD PTR [RSP],RCX
            mov R9,QWORD PTR [RDI+24]
            mov BYTE PTR [RSP+12],DL
            movzx EDX,BYTE PTR [RCX+1]
            mov DWORD PTR [RBX+144],EBP
            mov DWORD PTR [RBX+200],R12D
            mov R8D,DWORD PTR [R9+184]
            mov BYTE PTR [RSP+15],DL
            mov DWORD PTR [RBX+204],R8D
            xor R8D,R8D
            cmp EBP,DWORD PTR [R9+180]
            jne .L_43f447

            mov R10,QWORD PTR [R9+200]
            lea R8,QWORD PTR [RBP+RBP*4]
            lea R8,QWORD PTR [R10+R8*4]
            movzx R8D,BYTE PTR [R8+15]
.L_43f447:

            mov BYTE PTR [RBX+172],R8B
            lea RDX,QWORD PTR [RIP+.L_4345e0]
            lea R8,QWORD PTR [R14+6]
            test AX,AX
            lea RBP,QWORD PTR [RBX+144]
            mov QWORD PTR [RBX+184],R14
            mov QWORD PTR [RBX+176],RDX
            mov QWORD PTR [RBX+192],R8
            je .L_43f4bb

            xor R13D,R13D
            jmp .L_43f489

            nop
.L_43f480:

            add R13D,1
            cmp R12D,R13D
            je .L_43f4b0
.L_43f489:

            mov RDI,RBP
            call .L_43b250

            test AL,AL
            jne .L_43f480

            jmp .L_43f376
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f4a0:

            mov EBP,DWORD PTR [R13+188]
            jmp .L_43f3d0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43f4b0:

            mov R13,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBX+152]
.L_43f4bb:

            mov RDX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RDI+24]
            movzx EAX,BYTE PTR [RDX]
            movzx R8D,BYTE PTR [RDX+1]
            mov EDX,DWORD PTR [R13+180]
            shl EAX,8
            add EAX,R8D
            mov DWORD PTR [RBX+144],EDX
            movzx R12D,AX
            mov DWORD PTR [RBX+200],R12D
            mov R8D,DWORD PTR [RDI+184]
            mov DWORD PTR [RBX+204],R8D
            cmp EDX,DWORD PTR [RDI+180]
            je .L_43f5e8

            xor EDX,EDX
.L_43f505:

            lea RCX,QWORD PTR [RIP+.L_4345e0]
            mov BYTE PTR [RBX+172],DL
            test AX,AX
            mov QWORD PTR [RBX+184],R14
            mov QWORD PTR [RBX+176],RCX
            mov RCX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RCX+2]
            mov QWORD PTR [RBX+192],RDX
            je .L_43f560

            xor R14D,R14D
            jmp .L_43f549
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f540:

            add R14D,1
            cmp R12D,R14D
            je .L_43f560
.L_43f549:

            mov RDI,RBP
            call .L_43acc0

            test AL,AL
            jne .L_43f540

            jmp .L_43f376
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f560:

            movzx EDX,WORD PTR [RSP+12]
            movzx EAX,BYTE PTR [RSP+15]
            mov RCX,QWORD PTR [RSP]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            lea RDX,QWORD PTR [RCX+RAX*2+2]
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp R15D,EAX
            jae .L_43f59e

            mov ESI,R15D
            lea RCX,QWORD PTR [RDX+RSI*2+2]
.L_43f59e:

            movzx EBP,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            xor EDX,EDX
            xor ECX,ECX
            xor R8D,R8D
            mov RDI,RBX
            shl EBP,8
            add EBP,EAX
            movzx EBP,BP
            mov ESI,EBP
            call .L_43b640

            mov RDX,QWORD PTR [RBX+24]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX],EBP
            mov EAX,1
            jmp .L_43f378
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f5e8:

            mov RSI,QWORD PTR [RDI+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
            movzx EDX,BYTE PTR [RDX+15]
            jmp .L_43f505
.L_43f600:

            jmp .L_43f340
.L_43f605:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f610:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_43f61e:

            movzx EBX,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            shl EBX,8
            add BX,AX
            je .L_43f7c1

            test BL,1
            mov RBP,RDI
            mov R12,RSI
            mov R13D,EDX
            mov R14,RCX
            jne .L_43f810

            test BL,2
            jne .L_43f84b
.L_43f64f:

            and R13D,4294967294
            test BL,4
            je .L_43f670
.L_43f658:

            cmp R13D,4
            je .L_43f7d0

            add R8,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f670:

            test BL,8
            je .L_43f6b6

            cmp R13D,4
            je .L_43f6b2

            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            mov RDI,R12
            mov EDX,DWORD PTR [R12+140]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            sub DWORD PTR [R9+4],EAX
.L_43f6b2:

            add R8,2
.L_43f6b6:

            movzx EAX,BYTE PTR [RBP+1]
            test AL,240
            je .L_43f7c1

            mov EBP,DWORD PTR [R12+144]
            mov R15D,DWORD PTR [R12+148]
            mov EAX,EBP
            or EAX,R15D
            je .L_43f7c1

            test BL,16
            je .L_43f6ee

            test EBP,EBP
            jne .L_43f8f0
.L_43f6ea:

            add R8,2
.L_43f6ee:

            test BL,32
            je .L_43f700

            test R15D,R15D
            jne .L_43f898
.L_43f6fc:

            add R8,2
.L_43f700:

            test BL,64
            je .L_43f765

            cmp R13D,4
            jne .L_43f761

            test EBP,EBP
            je .L_43f761

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,DWORD PTR [R12+144]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            xor EAX,EAX
            test ESI,ESI
            je .L_43f75e

            mov EDX,DWORD PTR [R12+136]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_4340a0

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_43f75e:

            add DWORD PTR [R9],EAX
.L_43f761:

            add R8,2
.L_43f765:

            and EBX,128
            je .L_43f7c1

            cmp R13D,4
            je .L_43f7c1

            test R15D,R15D
            je .L_43f7c1

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,DWORD PTR [R12+148]
            shl EAX,8
            add EAX,EDX
            movzx ECX,AX
            add R14,RCX
            test AX,AX
            cmovne RDI,R14
            xor EAX,EAX
            test ESI,ESI
            je .L_43f7bd

            mov EDX,DWORD PTR [R12+140]
            mov QWORD PTR [RSP],R9
            call .L_4340a0

            mov R9,QWORD PTR [RSP]
.L_43f7bd:

            sub DWORD PTR [R9+4],EAX
.L_43f7c1:

            add RSP,24
.L_43f7c5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43f7d0:

            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            mov RDI,R12
            mov EDX,DWORD PTR [R12+136]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            add DWORD PTR [R9],EAX
            add R8,2
            jmp .L_43f670
          .byte 0x90
.L_43f810:

            mov EDX,DWORD PTR [RSI+136]
            movzx ESI,BYTE PTR [R8]
            mov RDI,R12
            movzx EAX,BYTE PTR [R8+1]
            mov QWORD PTR [RSP],R9
            lea R15,QWORD PTR [R8+2]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            mov R9,QWORD PTR [RSP]
            mov R8,R15
            add DWORD PTR [R9+8],EAX
            test BL,2
            je .L_43f64f
.L_43f84b:

            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            mov RDI,R12
            mov EDX,DWORD PTR [R12+140]
            lea R15,QWORD PTR [R8+2]
            and R13D,4294967294
            mov QWORD PTR [RSP],R9
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            mov R9,QWORD PTR [RSP]
            mov R8,R15
            add DWORD PTR [R9+12],EAX
            test BL,4
            je .L_43f670

            jmp .L_43f658
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f898:

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,DWORD PTR [R12+148]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            xor EAX,EAX
            test ESI,ESI
            je .L_43f8e7

            mov EDX,DWORD PTR [R12+140]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_4340a0

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_43f8e7:

            add DWORD PTR [R9+12],EAX
            jmp .L_43f6fc
.L_43f8f0:

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,EBP
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            mov EDX,DWORD PTR [R12+136]
            call .L_4340a0

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            add DWORD PTR [R9+8],EAX
            jmp .L_43f6ea
.L_43f93c:

            nop
            nop
            nop
            nop
.L_43f940:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_43f950:

            mov RBP,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [RBP+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBP+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            xor EDX,EDX
            cmp EAX,-1
            je .L_43f9c8

            mov R9,QWORD PTR [RBP+216]
            mov EDX,DWORD PTR [R13+32]
            lea RDI,QWORD PTR [RBX+4]
            mov RSI,QWORD PTR [R13+8]
            lea R8,QWORD PTR [RBX+6]
            mov RCX,RBX
            add R9,R12
            call .L_43f610

            add DWORD PTR [RBP+180],1
            mov EDX,1
.L_43f9c8:

            add RSP,8
.L_43f9cc:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_43f9d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f9e0:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            push RBX
.L_43f9eb:

            mov R12,QWORD PTR [RSI+24]
            mov RBX,RDI
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R12+180]
            lea RBP,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R12+200]
            shl RBP,2
            mov ESI,DWORD PTR [RAX+RBP*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov R14D,EAX
            xor EAX,EAX
            cmp R14D,-1
            je .L_43fa53

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp R14D,EDX
            jb .L_43fa60
.L_43fa53:

            pop RBX
.L_43fa54:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43fa60:

            movzx EDI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            imul R14D,EAX
            mov R9,QWORD PTR [R12+216]
            mov EDX,DWORD PTR [R13+32]
            mov RSI,QWORD PTR [R13+8]
            lea RDI,QWORD PTR [RBX+4]
            mov RCX,RBX
            lea R8,QWORD PTR [RBX+R14*2+8]
            add R9,RBP
            call .L_43f610

            add DWORD PTR [R12+180],1
            mov EAX,1
            jmp .L_43fa53
.L_43faad:

            nop
            nop
            nop
.L_43fab0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,EDX
            mov RBX,RDI
            mov R12,R8
            sub RSP,24
.L_43facc:

            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_43fd40

            cmp AX,3
            je .L_43fb80

            cmp AX,1
            je .L_43fb30
.L_43fb0b:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43fdf0

            add RSP,24
.L_43fb23:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_43fb30:

            movzx ESI,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBP+136]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            mov DWORD PTR [R13],EAX
            movzx ESI,BYTE PTR [RBX+4]
            mov RDI,RBP
            movzx EAX,BYTE PTR [RBX+5]
            mov EDX,DWORD PTR [RBP+140]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            mov DWORD PTR [R12],EAX
            jmp .L_43fb0b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fb80:

            movzx ESI,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBP+136]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            mov DWORD PTR [R13],EAX
            movzx ESI,BYTE PTR [RBX+4]
            mov RDI,RBP
            movzx EAX,BYTE PTR [RBX+5]
            mov EDX,DWORD PTR [RBP+140]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            mov DWORD PTR [R12],EAX
            mov ESI,DWORD PTR [RBP+144]
            test ESI,ESI
            je .L_43fce8

            movzx EAX,BYTE PTR [RBX+6]
            movzx EDX,BYTE PTR [RBX+7]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            lea ECX,DWORD PTR [RDX-1]
            cmp ECX,2
            ja .L_43fce4

            movzx ECX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            cmp ESI,ECX
            jb .L_43fce4

            movzx R8D,BYTE PTR [RDI+2]
            movzx R9D,BYTE PTR [RDI+3]
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            cmp ESI,R8D
            ja .L_43fce4

            mov R14D,ESI
            mov R15D,4
            mov R8D,1
            sub R14D,ECX
            sub R15D,EDX
            mov R11D,16
            mov ECX,R15D
            mov EAX,R14D
            mov R10D,65535
            shr EAX,CL
            mov ECX,EDX
            mov R9D,DWORD PTR [RBP+136]
            lea RAX,QWORD PTR [RDI+RAX*2+6]
            mov EDI,R8D
            shl EDI,CL
            mov ECX,EDI
            mov EDI,R11D
            sub EDI,ECX
            mov ECX,EDI
            movzx EDI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shr R10D,CL
            mov ECX,R15D
            shl R8D,CL
            mov ECX,EDX
            lea EDX,DWORD PTR [R10+1]
            sub R8D,1
            and R8D,R14D
            shl EDI,8
            shr EDX,1
            add R8D,1
            add EDI,EAX
            shl R8D,CL
            mov ECX,R11D
            movzx EDI,DI
            sub ECX,R8D
            shr EDI,CL
            and EDI,R10D
            not R10D
            lea EAX,DWORD PTR [RDI+R10*1]
            cmp EDI,EDX
            cmovb EAX,EDI
            test EAX,EAX
            je .L_43fce4

            movsxd RDX,R9D
            cdqe 
            imul RAX,RDX
            cqo 
            idiv RSI
.L_43fce4:

            add DWORD PTR [R13],EAX
.L_43fce8:

            mov EAX,DWORD PTR [RBP+148]
            test EAX,EAX
            je .L_43fb0b

            movzx EAX,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,DWORD PTR [RBP+144]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne RDI,RBX
            xor EAX,EAX
            test ESI,ESI
            je .L_43fd2e

            mov EDX,DWORD PTR [RBP+136]
            call .L_4340a0
.L_43fd2e:

            add DWORD PTR [R12],EAX
            jmp .L_43fb0b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fd40:

            mov R14D,DWORD PTR [RBP+144]
            mov R15D,DWORD PTR [RBP+148]
            mov EAX,R14D
            or EAX,R15D
            jne .L_43fd90
.L_43fd56:

            mov R15D,1
.L_43fd5c:

            movzx ESI,BYTE PTR [RBX+2]
            movzx EAX,BYTE PTR [RBX+3]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBP+136]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040
.L_43fd7a:

            test R15B,R15B
            mov DWORD PTR [R13],EAX
            mov EAX,DWORD PTR [RSP+4]
            jne .L_43fdd0
.L_43fd87:

            mov DWORD PTR [R12],EAX
            jmp .L_43fb0b
.L_43fd90:

            movzx EDX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            lea R9,QWORD PTR [RSP+4]
            mov R8,RSP
            mov ECX,4
            mov RDI,RBP
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_439e00

            test EAX,EAX
            je .L_43fd56

            test R15D,R15D
            sete R15B
            test R14D,R14D
            je .L_43fd5c

            mov EAX,DWORD PTR [RSP]
            jmp .L_43fd7a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fdd0:

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBP+140]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_43a040

            jmp .L_43fd87
.L_43fdf0:

            call __stack_chk_fail@PLT
.L_43fdf5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fe00:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            lea R10,QWORD PTR [RIP+.L_658760]
            sub RSP,40
.L_43fe14:

            mov RBX,QWORD PTR [RSI+24]
            movzx ESI,BYTE PTR [RDI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            mov R12D,DWORD PTR [RSP+80]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            cmp EDX,EAX
            jae .L_43fe47

            mov EDX,EDX
            lea R10,QWORD PTR [RDI+RDX*4+2]
.L_43fe47:

            movzx ESI,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            movzx EDX,BYTE PTR [R10+3]
            shl ESI,8
            add ESI,EAX
            movzx EAX,BYTE PTR [R10+2]
            lea R10,QWORD PTR [RIP+.L_658760]
            movzx ESI,SI
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDI,RDX
            test AX,AX
            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            cmovne R10,RDI
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            setae DL
            cmp ESI,R9D
            setae AL
            or AL,DL
            je .L_43fec0

            xor EAX,EAX
.L_43fe9d:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_43ff8c

            add RSP,40
.L_43feb5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43fec0:

            imul ECX,R9D
            lea EDX,DWORD PTR [RCX+RSI*1]
            lea RCX,QWORD PTR [R8+RDX*2+2]
            movzx EDX,BYTE PTR [RCX]
            movzx EBP,BYTE PTR [RCX+1]
            shl EDX,8
            add BP,DX
            je .L_43fe9d

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            movzx EBP,BP
            mov RSI,QWORD PTR [R13+8]
            add RBP,R8
            lea RCX,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RSP+12]
            mov RDI,R10
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RAX]
            call .L_43fab0

            mov RSI,QWORD PTR [RBX+200]
            mov EAX,R12D
            lea RCX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RSP+20]
            mov RDI,RBP
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov RSI,QWORD PTR [R13+8]
            mov EDX,DWORD PTR [RAX]
            call .L_43fab0

            mov EAX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+216]
            lea RAX,QWORD PTR [RAX+RDX*4]
            mov EDX,DWORD PTR [RSP+16]
            sub EDX,DWORD PTR [RSP+8]
            mov BYTE PTR [RAX+18],1
            mov DWORD PTR [RAX+8],EDX
            mov EDX,DWORD PTR [RSP+20]
            sub EDX,DWORD PTR [RSP+12]
            mov DWORD PTR [RAX+12],EDX
            sub R12W,WORD PTR [RBX+180]
            mov WORD PTR [RAX+16],R12W
            mov EAX,1
            or DWORD PTR [RBX+132],8
            add DWORD PTR [RBX+180],1
            jmp .L_43fe9d
.L_43ff8c:

            call __stack_chk_fail@PLT
.L_43ff91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ffa0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,40
.L_43ffb4:

            mov RAX,QWORD PTR [RSI+24]
            mov EDX,DWORD PTR [RAX+180]
            mov RAX,QWORD PTR [RAX+200]
            lea R12,QWORD PTR [RDX+RDX*4]
            mov R13,RDX
            movzx EDX,BYTE PTR [RDI+3]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov R14D,EAX
            cmp R14D,-1
            je .L_440150

            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R13D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R13D,DWORD PTR [RAX+180]
            je .L_440168
.L_440038:

            lea RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            call .L_43acc0

            test AL,AL
            mov R12D,EAX
            je .L_440150

            movzx EAX,BYTE PTR [RBP+8]
            movzx EDX,BYTE PTR [RBP+9]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp R14D,EAX
            jb .L_440180
.L_44006f:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            lea R13,QWORD PTR [RIP+.L_658760]
            movzx EDI,BYTE PTR [RBP+4]
            mov R14,QWORD PTR [RBX+24]
            shl EAX,8
            mov R15,QWORD PTR [R14+200]
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            mov EAX,DWORD PTR [RBX+80]
            cmovne R13,RDX
            shl EDI,8
            mov DWORD PTR [RSP+12],EAX
            movzx EAX,BYTE PTR [RBP+5]
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDI,BYTE PTR [RBP+6]
            mov DWORD PTR [RSP+24],EAX
            movzx EAX,BYTE PTR [RBP+7]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            mov ECX,DWORD PTR [RSP+24]
            movzx EDX,BYTE PTR [R13]
            lea R10,QWORD PTR [R13+2]
            movzx EDI,BYTE PTR [R13+1]
            lea R9D,DWORD PTR [RCX+RAX*1+1]
            shl EDX,8
            add R9D,R9D
            add DX,DI
            je .L_440150

            mov ECX,DWORD PTR [RSP+12]
            movzx EDX,DX
            xor R8D,R8D
            lea EDI,DWORD PTR [RDX-1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            shl RCX,2
            mov QWORD PTR [RSP+16],RCX
            mov R11D,DWORD PTR [R15+RCX*1]
            jmp .L_440120
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440118:

            lea EDI,DWORD PTR [RCX-1]
.L_44011b:

            cmp EDI,R8D
            jl .L_440150
.L_440120:

            lea ECX,DWORD PTR [R8+RDI*1]
            sar ECX,1
            mov R15D,ECX
            imul R15D,R9D
            add R15,R10
            movzx EDX,BYTE PTR [R15]
            movzx ESI,BYTE PTR [R15+1]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            cmp R11D,EDX
            jb .L_440118

            jbe .L_440190

            lea R8D,DWORD PTR [RCX+1]
            jmp .L_44011b
          .byte 0x66
          .byte 0x90
.L_440150:

            xor R12D,R12D
.L_440153:

            add RSP,40
.L_440157:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440168:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_440038
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440180:

            lea RDX,QWORD PTR [RBP+R14*2+10]
            jmp .L_44006f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440190:

            mov EDX,DWORD PTR [R14+180]
            mov RCX,QWORD PTR [R14+216]
            lea RDI,QWORD PTR [RBP+4]
            mov RSI,QWORD PTR [RBX+8]
            mov DWORD PTR [RSP+28],EAX
            lea R8,QWORD PTR [RDX+RDX*4]
            mov EDX,DWORD PTR [RBX+32]
            lea R9,QWORD PTR [RCX+R8*4]
            lea R8,QWORD PTR [R15+2]
            mov RCX,R13
            call .L_43f610

            movsxd RCX,DWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBP+6]
            add R9,QWORD PTR [R14+216]
            mov EDX,DWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+8]
            lea R8,QWORD PTR [R15+RCX*2+2]
            mov RCX,R13
            call .L_43f610

            mov EAX,DWORD PTR [RSP+28]
            cmp EAX,1
            sbb DWORD PTR [RSP+12],-1
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [R14+180],EAX
            jmp .L_440153
.L_440206:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440210:

            jmp .L_43ffa0
.L_440215:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440220:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,40
.L_440234:

            mov R14,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R14+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R13,RAX
            mov RAX,QWORD PTR [R14+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            cmp EAX,-1
            je .L_4403a0

            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R13D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R13D,DWORD PTR [RAX+180]
            je .L_4403b8
.L_4402b5:

            lea RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            call .L_43acc0

            test AL,AL
            mov R13D,EAX
            je .L_4403a0

            movzx EDI,BYTE PTR [RBP+4]
            movzx EAX,BYTE PTR [RBP+5]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDI,BYTE PTR [RBP+6]
            movsxd R12,EAX
            movzx EAX,BYTE PTR [RBP+7]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            mov DWORD PTR [RSP+20],EAX
            lea R15D,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RBP+8]
            movzx EDX,BYTE PTR [RBP+9]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            mov EAX,DWORD PTR [R14+180]
            cmovne RDI,RDX
            mov RDX,QWORD PTR [R14+200]
            lea R9,QWORD PTR [RAX+RAX*4]
            mov QWORD PTR [RSP+8],RDX
            shl R9,2
            mov ESI,DWORD PTR [RDX+R9*1]
            mov QWORD PTR [RSP+24],R9
            call .L_43a6b0

            mov DWORD PTR [RSP+16],EAX
            movzx EAX,BYTE PTR [RBP+10]
            lea RSI,QWORD PTR [RIP+.L_658760]
            movzx ECX,BYTE PTR [RBP+11]
            mov RDX,QWORD PTR [RSP+8]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,RBP
            test AX,AX
            mov EAX,DWORD PTR [RBX+80]
            cmove RDI,RSI
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov ESI,DWORD PTR [RDX+RAX*4]
            call .L_43a6b0

            movzx EDX,BYTE PTR [RBP+12]
            movzx ECX,BYTE PTR [RBP+13]
            mov R8D,DWORD PTR [RSP+16]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EDX,R8D
            ja .L_4403d0

            nop
            nop
.L_4403a0:

            xor R13D,R13D
.L_4403a3:

            add RSP,40
.L_4403a7:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4403b8:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_4402b5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4403d0:

            movzx EDX,BYTE PTR [RBP+14]
            movzx ECX,BYTE PTR [RBP+15]
            shl EDX,8
            add ECX,EDX
            movzx EDX,CX
            cmp EDX,EAX
            jbe .L_4403a0

            imul EDX,R8D
            mov R9,QWORD PTR [RSP+24]
            add R9,QWORD PTR [R14+216]
            mov RSI,QWORD PTR [RBX+8]
            lea RDI,QWORD PTR [RBP+4]
            mov RCX,RBP
            add EAX,EDX
            mov EDX,DWORD PTR [RBX+32]
            imul R15D,EAX
            lea R15,QWORD PTR [RBP+R15*2+16]
            mov R8,R15
            call .L_43f610

            mov EAX,DWORD PTR [RBX+80]
            mov EDX,DWORD PTR [RBX+32]
            lea RDI,QWORD PTR [RBP+6]
            mov RSI,QWORD PTR [RBX+8]
            lea R8,QWORD PTR [R15+R12*2]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+216]
            lea R9,QWORD PTR [RAX+RCX*4]
            mov RCX,RBP
            call .L_43f610

            mov EAX,DWORD PTR [RBX+80]
            mov ECX,DWORD PTR [RSP+20]
            lea EDX,DWORD PTR [RAX+1]
            test ECX,ECX
            cmovne EAX,EDX
            mov DWORD PTR [R14+180],EAX
            jmp .L_4403a3
.L_440459:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440460:

            jmp .L_440220
.L_440465:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440470:

            push R15
            push R14
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_658760]
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,72
.L_44048b:

            mov R15,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [R15+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R14,RAX
            mov RAX,QWORD PTR [R15+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_4404fd

            mov EAX,EAX
            lea R13,QWORD PTR [RBX+RAX*4+6]
.L_4404fd:

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add AX,DX
            je .L_440750

            mov RAX,QWORD PTR [RBP+88]
            mov DWORD PTR [RBP+80],R14D
            lea RDI,QWORD PTR [RBP+80]
            mov DWORD PTR [RBP+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBP+140],EDX
            xor EDX,EDX
            cmp R14D,DWORD PTR [RAX+180]
            je .L_440790

            mov BYTE PTR [RBP+108],DL
            call .L_43acc0

            test AL,AL
            mov BYTE PTR [RSP+8],AL
            je .L_440750
.L_44055c:

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            mov EAX,DWORD PTR [RBP+80]
            cmovne RDI,RDX
            mov RDX,QWORD PTR [R15+200]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov QWORD PTR [RSP+16],RDX
            mov R14,RAX
            shl R12,2
            mov ESI,DWORD PTR [RDX+R12*1]
            call .L_43a230

            movzx ECX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            lea R11,QWORD PTR [RIP+.L_658760]
            mov RDX,QWORD PTR [RSP+16]
            movzx R10D,BYTE PTR [RSP+8]
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            cmp EAX,ECX
            jb .L_440780
.L_4405ca:

            movzx EAX,BYTE PTR [R11]
            movzx ECX,BYTE PTR [R11+1]
            mov BYTE PTR [RSP+16],R10B
            mov QWORD PTR [RSP+8],R11
            shl EAX,8
            add AX,CX
            je .L_440750

            movzx ECX,BYTE PTR [R13+2]
            movzx ESI,BYTE PTR [R13+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov EAX,DWORD PTR [R15+180]
            lea R8,QWORD PTR [RSP+52]
            shl ECX,8
            mov DWORD PTR [RSP+28],EAX
            add ECX,ESI
            movzx ESI,CX
            add RSI,RBX
            test CX,CX
            mov ECX,EAX
            lea R13,QWORD PTR [RCX+RCX*4]
            cmovne RDI,RSI
            mov RSI,QWORD PTR [RBP+8]
            lea RCX,QWORD PTR [RSP+48]
            shl R13,2
            mov EDX,DWORD PTR [RDX+R13*1]
            call .L_43fab0

            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [RBP+8]
            lea R8,QWORD PTR [RSP+44]
            movzx EDX,BYTE PTR [R11]
            movzx ECX,BYTE PTR [R11+1]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RSP+40]
            movzx EDI,DX
            add RDI,RBX
            test DX,DX
            mov RDX,QWORD PTR [R15+200]
            cmove RDI,RAX
            mov EDX,DWORD PTR [RDX+R12*1]
            call .L_43fab0

            mov EDX,DWORD PTR [RBP+32]
            mov R8,QWORD PTR [R15+216]
            mov EAX,DWORD PTR [RSP+28]
            movzx R10D,BYTE PTR [RSP+16]
            cmp EDX,5
            je .L_440850

            jbe .L_440800

            cmp EDX,6
            je .L_4407b8

            cmp EDX,7
            jne .L_440840

            lea RDX,QWORD PTR [R8+R13*1]
            mov ECX,DWORD PTR [RSP+52]
            mov EBX,DWORD PTR [RSP+44]
            mov ESI,DWORD PTR [RDX+12]
            add ESI,ECX
            sub DWORD PTR [RDX+4],ESI
            mov ESI,ECX
            neg ESI
            mov DWORD PTR [RDX+12],ESI
            mov DWORD PTR [R8+R12*1+4],EBX
            mov EDX,DWORD PTR [RBP+32]
.L_4406d5:

            mov ESI,DWORD PTR [RSP+40]
            sub EBX,ECX
            mov R11D,R14D
            sub ESI,DWORD PTR [RSP+48]
            test BYTE PTR [RBP+60],1
            mov R9D,ESI
            jne .L_4406f9

            mov R11D,EAX
            neg R9D
            neg EBX
            mov R13,R12
            mov EAX,R14D
.L_4406f9:

            mov ECX,R11D
            mov ESI,EAX
            mov RDI,R8
            mov BYTE PTR [RSP+16],R10B
            mov DWORD PTR [RSP+8],EAX
            call .L_439c10

            mov EAX,DWORD PTR [RSP+8]
            add R13,R8
            movzx R10D,BYTE PTR [RSP+16]
            mov BYTE PTR [R13+18],2
            sub R11D,EAX
            mov WORD PTR [R13+16],R11W
            mov EAX,DWORD PTR [RBP+32]
            or DWORD PTR [R15+132],8
            and EAX,4294967294
            cmp EAX,4
            je .L_4407f0

            mov DWORD PTR [R13+8],R9D
.L_440744:

            mov DWORD PTR [R15+180],R14D
            jmp .L_440753
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440750:

            xor R10D,R10D
.L_440753:

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,R10D
            jne .L_440881

            add RSP,72
.L_44076e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440780:

            mov EAX,EAX
            lea R11,QWORD PTR [RBX+RAX*4+6]
            jmp .L_4405ca
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440790:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            mov BYTE PTR [RBP+108],DL
            call .L_43acc0

            test AL,AL
            mov BYTE PTR [RSP+8],AL
            jne .L_44055c

            jmp .L_440750
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4407b8:

            lea RDX,QWORD PTR [R8+R13*1]
            mov ECX,DWORD PTR [RSP+52]
            mov EBX,DWORD PTR [RSP+44]
            mov ESI,DWORD PTR [RDX+12]
            add ESI,ECX
            mov DWORD PTR [RDX+4],ESI
            lea RDX,QWORD PTR [R8+R12*1]
            mov ESI,DWORD PTR [RDX+12]
            add ESI,EBX
            sub DWORD PTR [RDX+4],ESI
            mov ESI,EBX
            neg ESI
            mov DWORD PTR [RDX+12],ESI
            mov EDX,DWORD PTR [RBP+32]
            jmp .L_4406d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4407f0:

            mov DWORD PTR [R13+12],EBX
            jmp .L_440744
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440800:

            cmp EDX,4
            jne .L_440840

            lea RCX,QWORD PTR [R8+R13*1]
            mov EDX,DWORD PTR [RSP+48]
            add EDX,DWORD PTR [RCX+8]
            mov DWORD PTR [RCX],EDX
            lea RDX,QWORD PTR [R8+R12*1]
            mov ECX,DWORD PTR [RSP+40]
            mov ESI,DWORD PTR [RDX+8]
            add ESI,ECX
            neg ECX
            sub DWORD PTR [RDX],ESI
            mov DWORD PTR [RDX+8],ECX
            mov EBX,DWORD PTR [RSP+44]
            mov ECX,DWORD PTR [RSP+52]
            mov EDX,DWORD PTR [RBP+32]
            jmp .L_4406d5
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440840:

            mov EBX,DWORD PTR [RSP+44]
            mov ECX,DWORD PTR [RSP+52]
            jmp .L_4406d5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440850:

            lea RDX,QWORD PTR [R8+R13*1]
            mov ECX,DWORD PTR [RSP+48]
            mov ESI,DWORD PTR [RDX+8]
            add ESI,ECX
            neg ECX
            sub DWORD PTR [RDX],ESI
            mov DWORD PTR [RDX+8],ECX
            lea RCX,QWORD PTR [R8+R12*1]
            mov EDX,DWORD PTR [RSP+40]
            add EDX,DWORD PTR [RCX+8]
            mov DWORD PTR [RCX],EDX
            mov EBX,DWORD PTR [RSP+44]
            mov ECX,DWORD PTR [RSP+52]
            mov EDX,DWORD PTR [RBP+32]
            jmp .L_4406d5
.L_440881:

            call __stack_chk_fail@PLT
.L_440886:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440890:

            jmp .L_440470
.L_440895:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4408a0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
.L_4408b4:

            mov R13,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R13+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R14,RAX
            mov RAX,QWORD PTR [R13+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            cmp EAX,-1
            je .L_440990

            mov R15D,EAX
            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R14D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R14D,DWORD PTR [RAX+180]
            je .L_440a48
.L_440938:

            lea R12,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            mov DWORD PTR [RBX+96],8
            jmp .L_440980
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440950:

            mov EAX,DWORD PTR [RBX+80]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov R14,RAX
            mov RAX,QWORD PTR [R13+200]
            lea RDX,QWORD PTR [RAX+RDX*4]
            movzx EAX,BYTE PTR [RDX+14]
            test AL,16
            jne .L_4409a8

            test AL,15
            je .L_4409a8

            add DWORD PTR [RBX+136],1
            sub QWORD PTR [RBX+128],2
.L_440980:

            mov RDI,R12
            call .L_43b250

            test AL,AL
            jne .L_440950

            nop
            nop
            nop
            nop
.L_440990:

            xor EAX,EAX
.L_440992:

            add RSP,8
.L_440996:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4409a8:

            movzx EAX,BYTE PTR [RBP+4]
            movzx ECX,BYTE PTR [RBP+5]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,DWORD PTR [RDX]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBP
            test AX,AX
            cmovne RDI,RCX
            call .L_43a230

            cmp EAX,-1
            je .L_440990

            movzx EDX,BYTE PTR [RBP+8]
            movzx ECX,BYTE PTR [RBP+9]
            lea RDI,QWORD PTR [RIP+.L_658760]
            movzx R9D,BYTE PTR [RBP+6]
            mov RSI,RBX
            mov R8,RDI
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RCX,RBP
            test DX,DX
            movzx EDX,BYTE PTR [RBP+7]
            cmovne RDI,RCX
            shl R9D,8
            movzx ECX,BYTE PTR [RBP+11]
            add R9D,EDX
            movzx EDX,BYTE PTR [RBP+10]
            movzx R9D,R9W
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RBP,RCX
            test DX,DX
            mov ECX,EAX
            cmovne R8,RBP
            sub RSP,8
.L_440a30:

            mov EDX,R15D
            push R14
            call .L_43fe00

            pop RDX
            pop RCX
            jmp .L_440992
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440a48:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_440938
.L_440a5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_440a60:

            jmp .L_4408a0
.L_440a65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440a70:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,24
.L_440a84:

            mov R14,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R14+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R13,RAX
            mov RAX,QWORD PTR [R14+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            cmp EAX,-1
            je .L_440c88

            mov R15D,EAX
            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R13D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R13D,DWORD PTR [RAX+180]
            je .L_440ca0
.L_440b08:

            lea RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            mov DWORD PTR [RBX+96],8
            call .L_43b250

            test AL,AL
            je .L_440c88

            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov R12D,DWORD PTR [RBX+80]
            mov R13,QWORD PTR [R14+200]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            mov EAX,R12D
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmovne RDI,RDX
            lea R9,QWORD PTR [R13+RAX*4]
            mov ESI,DWORD PTR [R9]
            mov QWORD PTR [RSP+8],R9
            call .L_43a230

            cmp EAX,-1
            je .L_440c88

            movzx ECX,BYTE PTR [RBP+10]
            movzx EDX,BYTE PTR [RBP+11]
            lea R8,QWORD PTR [RIP+.L_658760]
            mov R9,QWORD PTR [RSP+8]
            shl ECX,8
            add ECX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx ESI,CX
            add RSI,RBP
            test CX,CX
            cmovne RDX,RSI
            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            cmp EAX,ECX
            jae .L_440bd1

            mov EAX,EAX
            lea RCX,QWORD PTR [RDX+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne R8,RDX
.L_440bd1:

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx ECX,AX
            je .L_440c88

            movzx EDX,BYTE PTR [R9+14]
            mov ESI,EDX
            mov EDX,DWORD PTR [R14+180]
            sar ESI,5
            lea RDX,QWORD PTR [RDX+RDX*4]
            movzx EAX,BYTE PTR [R13+RDX*4+14]
            test AL,16
            jne .L_440cb8

            movzx EDX,AL
            sar EDX,5
            cmp EDX,ESI
            sete DIL
            and EAX,15
            setne DL
            test DIL,DL
            je .L_440cb8

            test ESI,ESI
            je .L_440cb8

            cmp ECX,EAX
            cmovbe EAX,ECX
            lea ECX,DWORD PTR [RAX-1]
.L_440c39:

            movzx EAX,BYTE PTR [RBP+8]
            movzx EDX,BYTE PTR [RBP+9]
            lea RDI,QWORD PTR [RIP+.L_658760]
            movzx R9D,BYTE PTR [RBP+6]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            movzx EAX,BYTE PTR [RBP+7]
            cmovne RDI,RDX
            sub RSP,8
.L_440c6a:

            shl R9D,8
            push R12
            mov EDX,R15D
            add R9D,EAX
            movzx R9D,R9W
            call .L_43fe00

            pop RDX
            pop RCX
            jmp .L_440c8a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440c88:

            xor EAX,EAX
.L_440c8a:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440ca0:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_440b08
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440cb8:

            sub ECX,1
            jmp .L_440c39
.L_440cc0:

            jmp .L_440a70
.L_440cc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440cd0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
.L_440ce4:

            mov R14,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R14+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R13,RAX
            mov RAX,QWORD PTR [R14+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            cmp EAX,-1
            je .L_440eb0

            mov R15D,EAX
            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R13D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R13D,DWORD PTR [RAX+180]
            je .L_440ec8
.L_440d68:

            mov EAX,DWORD PTR [RBX+60]
            lea RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            and EAX,4294967281
            mov DWORD PTR [RBX+96],EAX
            call .L_43b250

            test AL,AL
            je .L_440eb0

            mov EAX,DWORD PTR [RBX+80]
            mov RDX,QWORD PTR [R14+200]
            mov R12,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            test BYTE PTR [RAX+12],8
            je .L_440eb0

            mov ECX,DWORD PTR [R14+180]
            xor R9D,R9D
            lea RCX,QWORD PTR [RCX+RCX*4]
            movzx EDX,BYTE PTR [RDX+RCX*4+14]
            movzx ECX,BYTE PTR [RAX+14]
            mov R8D,EDX
            mov EDI,ECX
            sar EDX,5
            mov ESI,R8D
            sar ECX,5
            and ESI,15
            and R8D,16
            mov R8D,EDI
            cmovne ESI,R9D
            and R8D,15
            and EDI,16
            cmovne R8D,R9D
            cmp ECX,EDX
            je .L_440e95

            test EDX,EDX
            je .L_440eda

            test ESI,ESI
            jne .L_440eda
.L_440dfa:

            movzx EDX,BYTE PTR [RBP+4]
            movzx ECX,BYTE PTR [RBP+5]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov ESI,DWORD PTR [RAX]
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RCX,RBP
            test DX,DX
            cmovne RDI,RCX
            call .L_43a230

            cmp EAX,-1
            je .L_440eb0

            movzx EDX,BYTE PTR [RBP+8]
            movzx ECX,BYTE PTR [RBP+9]
            lea RDI,QWORD PTR [RIP+.L_658760]
            movzx R9D,BYTE PTR [RBP+6]
            shl EDX,8
            add EDX,ECX
            mov RCX,RDI
            movzx ESI,DX
            add RSI,RBP
            test DX,DX
            movzx EDX,BYTE PTR [RBP+7]
            cmovne RDI,RSI
            shl R9D,8
            movzx ESI,BYTE PTR [RBP+11]
            add R9D,EDX
            movzx EDX,BYTE PTR [RBP+10]
            movzx R9D,R9W
            shl EDX,8
            add EDX,ESI
            mov RSI,RBX
            movzx R8D,DX
            add R8,RBP
            test DX,DX
            mov EDX,R15D
            cmove R8,RCX
            sub RSP,8
.L_440e88:

            mov ECX,EAX
            push R12
            call .L_43fe00

            pop RDX
            pop RCX
            jmp .L_440eb2
.L_440e95:

            cmp R8D,ESI
            je .L_440dfa

            test ECX,ECX
            je .L_440dfa

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440eb0:

            xor EAX,EAX
.L_440eb2:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440ec8:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_440d68
.L_440eda:

            test ECX,ECX
            je .L_440eb0

            test R8D,R8D
            je .L_440dfa

            jmp .L_440eb0
.L_440ee9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440ef0:

            jmp .L_440cd0
.L_440ef5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440f00:

            mov R9,QWORD PTR [RSI+8]
            cmp RDI,R9
            jb .L_440fea

            mov R11,QWORD PTR [RSI+16]
            cmp RDI,R11
            ja .L_440fea

            mov RAX,R11
            sub RAX,RDI
            cmp EAX,1
            jbe .L_440fea

            movzx R8D,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov EAX,1
            shl R8D,8
            add R8W,R10W
            je .L_440f6b

            movzx R8D,R8W
            add R8,RDX
            cmp ECX,1936292453
            je .L_440ff0

            xor CX,CX
            cmp ECX,1936916480
            je .L_4410b8

            cmp ECX,1668677632
            je .L_440f70
.L_440f6b:

            ret 

            nop
            nop
            nop
.L_440f70:

            cmp R9,R8
            ja .L_440fd0

            cmp R11,R8
            jb .L_440fd0

            mov RAX,R11
            sub RAX,R8
            cmp EAX,13
            jbe .L_440fd0

            lea RAX,QWORD PTR [R8+12]
            cmp R9,RAX
            ja .L_440fd0

            cmp R11,RAX
            jb .L_440fd0

            mov RDX,R11
            sub RDX,RAX
            cmp EDX,1
            jbe .L_440fd0

            lea RAX,QWORD PTR [R8+14]
            cmp R9,RAX
            ja .L_440fd0

            cmp R11,RAX
            jb .L_440fd0

            movzx EDX,BYTE PTR [R8+12]
            movzx ECX,BYTE PTR [R8+13]
            sub R11,RAX
            mov EAX,1
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea EDX,DWORD PTR [RDX+RDX*2]
            cmp EDX,R11D
            jbe .L_440f6b

            nop
            nop
.L_440fd0:

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_440fea

            movzx EAX,BYTE PTR [RSI+24]
            add EDX,1
            mov DWORD PTR [RSI+28],EDX
            test AL,AL
            jne .L_4410e0
.L_440fea:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440ff0:

            cmp R9,R8
            ja .L_440fd0

            cmp R11,R8
            jb .L_440fd0

            sub R11,R8
            cmp R11D,9
            jbe .L_440fd0

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            shl EAX,8
            add DX,AX
            je .L_440fd0

            movzx EAX,BYTE PTR [R8+6]
            movzx ECX,BYTE PTR [R8+7]
            movzx R9D,BYTE PTR [R8+3]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+2]
            shl ECX,8
            add CX,R9W
            jne .L_441070

            movzx ECX,BYTE PTR [R8+4]
            movzx R9D,BYTE PTR [R8+5]
            shl ECX,8
            add CX,R9W
            jne .L_441070

            test AX,AX
            jne .L_441070

            movzx ECX,BYTE PTR [R8+8]
            movzx R9D,BYTE PTR [R8+9]
            mov EAX,1
            shl ECX,8
            add CX,R9W
            jne .L_441088

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441070:

            cmp AX,DX
            ja .L_440fd0

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            shl ECX,8
            add ECX,EAX
.L_441088:

            cmp CX,DX
            jb .L_440fd0

            movzx EAX,BYTE PTR [R8+4]
            movzx EDX,BYTE PTR [R8+5]
            shl EAX,8
            lea EAX,DWORD PTR [RDX+RAX*1-256]
            cmp AX,32511
            ja .L_440fd0

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4410b8:

            cmp R9,R8
            ja .L_440fd0

            cmp R11,R8
            jb .L_440fd0

            sub R11,R8
            cmp R11D,3
            jbe .L_440fd0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4410e0:

            xor EDX,EDX
            mov WORD PTR [RDI],DX
            ret 
.L_4410e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4410f0:

            mov RCX,QWORD PTR [RSI+8]
            cmp RDI,RCX
            jb .L_441128

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
            mov R13,QWORD PTR [RSI+16]
            cmp RDI,R13
            jbe .L_441130
.L_441110:

            xor EAX,EAX
.L_441112:

            add RSP,72
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441128:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441130:

            mov RDX,R13
            sub RDX,RDI
            cmp EDX,3
            jbe .L_441110

            movzx EDX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            shl EDX,8
            add EDX,R8D
            cmp DX,1
            jne .L_441110

            lea RDX,QWORD PTR [RDI+4]
            cmp RDX,RCX
            jb .L_441110

            cmp RDX,R13
            ja .L_441110

            mov RBX,R13
            sub RBX,RDX
            cmp EBX,1
            jbe .L_441110

            movzx R11D,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            mov RAX,RCX
            shl R11D,8
            add R11W,DX
            jne .L_441218
.L_441182:

            lea RDX,QWORD PTR [RDI+6]
            cmp RDX,RCX
            jb .L_441110

            mov R13,QWORD PTR [RSI+16]
            cmp RDX,R13
            ja .L_441110

            mov RBX,R13
            sub RBX,RDX
            cmp EBX,1
            jbe .L_441110

            movzx EDX,BYTE PTR [RDI+6]
            movzx R10D,BYTE PTR [RDI+7]
            mov RBX,RSI
            mov QWORD PTR [RSP+56],RDI
            shl EDX,8
            add DX,R10W
            jne .L_441670
.L_4411c5:

            mov RDI,QWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RDI+8]
            cmp RDX,RAX
            jb .L_441110

            mov RCX,QWORD PTR [RBX+16]
            cmp RDX,RCX
            ja .L_441110

            mov RSI,RCX
            sub RSI,RDX
            cmp ESI,1
            jbe .L_441110

            movzx EDX,BYTE PTR [RDI+8]
            movzx EBP,BYTE PTR [RDI+9]
            shl EDX,8
            add DX,BP
            jne .L_441960
.L_441207:

            mov EAX,1
            jmp .L_441112
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441218:

            movzx R11D,R11W
            add R11,RDI
            cmp RCX,R11
            ja .L_441330

            cmp R13,R11
            jb .L_441330

            mov RDX,R13
            sub RDX,R11
            cmp EDX,1
            jbe .L_441330

            lea RDX,QWORD PTR [R11+2]
            cmp RCX,RDX
            ja .L_441330

            cmp R13,RDX
            jb .L_441330

            movzx R8D,BYTE PTR [R11]
            movzx R9D,BYTE PTR [R11+1]
            shl R8D,8
            add R8D,R9D
            mov R9,R13
            movzx R10D,R8W
            sub R9,RDX
            lea EDX,DWORD PTR [R10+R10*2]
            add EDX,EDX
            cmp EDX,R9D
            ja .L_441330

            test R8W,R8W
            je .L_441182

            cmp R9D,5
            jbe .L_441330

            lea R9,QWORD PTR [R11+6]
            cmp RCX,R9
            ja .L_441330

            cmp R13,R9
            jb .L_441330

            mov RAX,R13
            sub RAX,R9
            cmp EAX,1
            jbe .L_441330

            lea EAX,DWORD PTR [R10-1]
            lea RBX,QWORD PTR [R11+8]
            mov QWORD PTR [RSP+16],R11
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R15,QWORD PTR [RBX+RAX*2]
            lea RAX,QWORD PTR [R11+12]
            sub RAX,R9
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_4412d8:

            movzx EDX,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            shl EDX,8
            add DX,AX
            jne .L_441368

            mov RAX,RCX
.L_4412ec:

            cmp RBX,R15
            je .L_441182

            cmp RBX,RCX
            jb .L_441330

            mov R13,QWORD PTR [RSI+16]
            cmp RBX,R13
            ja .L_441330

            mov RAX,R13
            sub RAX,RBX
            cmp EAX,5
            jbe .L_441330

            add R9,QWORD PTR [RSP+8]
            cmp RCX,R9
            ja .L_441330

            cmp R13,R9
            jb .L_441330

            lea RAX,QWORD PTR [RBX+4]
            mov RDX,R13
            add RBX,6
            sub RDX,RAX
            cmp EDX,1
            ja .L_4412d8
.L_441330:

            movzx ECX,BYTE PTR [RSI+24]
            mov EAX,DWORD PTR [RSI+28]
.L_441337:

            cmp EAX,2
            ja .L_441110

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            je .L_441110

            xor R8D,R8D
            mov WORD PTR [RDI+4],R8W
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RCX
            jmp .L_441182
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441368:

            movzx EDX,DX
            add RDX,QWORD PTR [RSP+16]
            cmp RDX,RCX
            jb .L_441550

            cmp RDX,R13
            ja .L_441550

            mov RAX,R13
            sub RAX,RDX
            cmp EAX,1
            jbe .L_441550

            movzx EAX,BYTE PTR [RDX]
            movzx R8D,BYTE PTR [RDX+1]
            shl EAX,8
            add AX,R8W
            jne .L_4415c0
.L_4413a6:

            lea R12,QWORD PTR [RDX+2]
            mov RAX,RCX
            cmp R12,RCX
            jb .L_441550

            mov R13,QWORD PTR [RSI+16]
            cmp R12,R13
            ja .L_441550

            mov R8,R13
            sub R8,R12
            cmp R8D,1
            jbe .L_441550

            lea R10,QWORD PTR [RDX+4]
            cmp RCX,R10
            ja .L_441550

            cmp R13,R10
            jb .L_441550

            movzx R8D,BYTE PTR [RDX+2]
            movzx R11D,BYTE PTR [RDX+3]
            mov RBP,R13
            sub RBP,R10
            shl R8D,8
            add R8D,R11D
            movzx R11D,R8W
            lea R10D,DWORD PTR [R11+R11*2]
            add R10D,R10D
            cmp R10D,EBP
            ja .L_441550

            test R8W,R8W
            je .L_4412ec

            cmp EBP,5
            jbe .L_441550

            lea R8,QWORD PTR [RDX+8]
            cmp RCX,R8
            ja .L_441550

            cmp R13,R8
            jb .L_441550

            mov RAX,R13
            sub RAX,R8
            cmp EAX,1
            jbe .L_441550

            lea EAX,DWORD PTR [R11-1]
            lea R10,QWORD PTR [RDX+10]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R14,QWORD PTR [R12+RAX*2+8]
            add R12,12
            sub R12,R8
            nop
            nop
            nop
            nop
.L_441468:

            movzx EAX,BYTE PTR [R8]
            movzx R11D,BYTE PTR [R8+1]
            shl EAX,8
            add AX,R11W
            je .L_441500

            movzx EAX,AX
            add RAX,RDX
            cmp RAX,RCX
            jb .L_4414a0

            cmp RAX,R13
            ja .L_4414a0

            mov R11,R13
            sub R11,RAX
            cmp R11D,5
            ja .L_441560

            nop
            nop
.L_4414a0:

            mov EAX,DWORD PTR [RSI+28]
            movzx ECX,BYTE PTR [RSI+24]
            cmp EAX,2
            ja .L_441110

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            jne .L_4414f0
.L_4414ba:

            cmp EAX,2
            ja .L_441110

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            je .L_441337

            mov BYTE PTR [R9],0
            mov BYTE PTR [R9+1],0
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RCX
            jmp .L_4412ec
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4414f0:

            mov BYTE PTR [R8],0
            mov BYTE PTR [R8+1],0
            mov RCX,QWORD PTR [RSI+8]
            nop
            nop
            nop
.L_441500:

            cmp R14,R10
            mov RAX,RCX
            je .L_4412ec

            cmp R10,RCX
            jb .L_441550

            mov R13,QWORD PTR [RSI+16]
            cmp R10,R13
            ja .L_441550

            mov RAX,R13
            sub RAX,R10
            cmp EAX,5
            jbe .L_441550

            add R8,R12
            cmp R8,RCX
            jb .L_441550

            cmp R8,R13
            ja .L_441550

            lea RAX,QWORD PTR [R10+4]
            mov R11,R13
            add R10,6
            sub R11,RAX
            cmp R11D,1
            ja .L_441468

            nop
            nop
            nop
            nop
            nop
            nop
.L_441550:

            movzx ECX,BYTE PTR [RSI+24]
            mov EAX,DWORD PTR [RSI+28]
            jmp .L_4414ba
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441560:

            lea R11,QWORD PTR [RAX+4]
            cmp R11,RCX
            jb .L_4414a0

            cmp R13,R11
            jb .L_4414a0

            mov RBP,R13
            sub RBP,R11
            cmp EBP,1
            jbe .L_4414a0

            lea R11,QWORD PTR [RAX+6]
            cmp R11,RCX
            jb .L_4414a0

            cmp R13,R11
            jb .L_4414a0

            movzx EBP,BYTE PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+5]
            sub R13,R11
            shl EBP,8
            add EAX,EBP
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,R13D
            jbe .L_441500

            jmp .L_4414a0
          .byte 0x66
          .byte 0x90
.L_4415c0:

            movzx EAX,AX
            add RAX,RDX
            cmp RAX,RCX
            jb .L_4415e0

            cmp R13,RAX
            jb .L_4415e0

            mov R8,R13
            sub R8,RAX
            cmp R8D,5
            ja .L_441618

            nop
            nop
            nop
            nop
.L_4415e0:

            mov EAX,DWORD PTR [RSI+28]
            movzx ECX,BYTE PTR [RSI+24]
            cmp EAX,2
            ja .L_441110

            lea R8D,DWORD PTR [RAX+1]
            test CL,CL
            mov DWORD PTR [RSI+28],R8D
            jne .L_441940

            cmp R8D,3
            je .L_441110

            add EAX,2
            mov DWORD PTR [RSI+28],EAX
            jmp .L_441337
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441618:

            lea R8,QWORD PTR [RAX+4]
            cmp R8,RCX
            jb .L_4415e0

            cmp R13,R8
            jb .L_4415e0

            mov R14,R13
            sub R14,R8
            cmp R14D,1
            jbe .L_4415e0

            lea R8,QWORD PTR [RAX+6]
            cmp R8,RCX
            jb .L_4415e0

            cmp R13,R8
            jb .L_4415e0

            movzx R10D,BYTE PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+5]
            sub R13,R8
            shl R10D,8
            add EAX,R10D
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,R13D
            jbe .L_4413a6

            jmp .L_4415e0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441670:

            movzx EDX,DX
            lea R15,QWORD PTR [RDI+RDX*1]
            cmp R15,RCX
            jb .L_4418c9

            cmp R13,R15
            jb .L_4418c9

            mov RDX,R13
            sub RDX,R15
            cmp EDX,1
            jbe .L_4418c9

            lea R11,QWORD PTR [R15+2]
            cmp R11,RCX
            mov QWORD PTR [RSP+40],R11
            jb .L_4418c9

            cmp R13,R11
            jb .L_4418c9

            movzx EDX,BYTE PTR [R15]
            movzx ESI,BYTE PTR [R15+1]
            mov R8,R13
            sub R8,R11
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*2]
            add EDI,EDI
            cmp EDI,R8D
            ja .L_4418c9

            test DX,DX
            je .L_4411c5

            movzx EAX,BYTE PTR [R15+3]
            movzx EBP,BYTE PTR [R15+2]
            lea R8,QWORD PTR [R15+6]
            mov QWORD PTR [RSP+32],R15
            mov R9,RBX
            shl EBP,24
            shl EAX,16
            lea EAX,DWORD PTR [RAX+RBP*1]
            movzx EBP,BYTE PTR [R15+4]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R15+5]
            add EBP,EAX
            lea EAX,DWORD PTR [RSI-1]
            mov EBX,EBP
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [R8+RAX*2]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [R15+8]
            mov R15,R11
            mov QWORD PTR [RSP+48],RAX
            jmp .L_4418b2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441738:

            cmp R8,R13
            ja .L_4418c6

            mov RAX,R13
            sub RAX,R8
            cmp EAX,1
            jbe .L_4418c6

            movzx R14D,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            shl R14D,8
            add R14W,AX
            je .L_441861

            movzx R12D,R14W
            add R12,QWORD PTR [RSP+32]
            cmp RCX,R12
            ja .L_441900

            cmp R13,R12
            jb .L_441900

            mov RAX,R13
            sub RAX,R12
            cmp EAX,3
            jbe .L_441900

            lea RAX,QWORD PTR [R12+2]
            cmp RCX,RAX
            ja .L_441900

            cmp R13,RAX
            jb .L_441900

            mov RDI,R13
            sub RDI,RAX
            cmp EDI,1
            jbe .L_441900

            lea RAX,QWORD PTR [R12+4]
            cmp RCX,RAX
            ja .L_441900

            cmp R13,RAX
            jb .L_441900

            movzx EDX,BYTE PTR [R12+2]
            movzx ECX,BYTE PTR [R12+3]
            sub R13,RAX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            add EDX,EDX
            cmp EDX,R13D
            ja .L_441900

            mov RSI,R9
            mov ECX,EBX
            mov RDX,R12
            mov RDI,R12
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R9
            movzx R13D,BYTE PTR [R12]
            movzx EBP,BYTE PTR [R12+1]
            call .L_440f00

            test AL,AL
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            je .L_441900

            shl R13D,8
            add BP,R13W
            je .L_44185d

            movzx EAX,BYTE PTR [R12]
            movzx EDX,BYTE PTR [R12+1]
            shl EAX,8
            add AX,DX
            jne .L_44185d

            cmp QWORD PTR [RSP+32],R12
            setb DL
            cmp EBX,1936292453
            sete AL
            test DL,AL
            jne .L_441a89
.L_44185d:

            mov RCX,QWORD PTR [R9+8]
.L_441861:

            cmp QWORD PTR [RSP+24],R8
            mov RAX,RCX
            je .L_441930

            mov RAX,QWORD PTR [RSP+48]
            sub RAX,QWORD PTR [RSP+40]
            movzx EBX,BYTE PTR [R8+3]
            add R15,RAX
            movzx EAX,BYTE PTR [R8+2]
            shl EBX,16
            shl EAX,24
            lea EAX,DWORD PTR [RAX+RBX*1]
            movzx EBX,BYTE PTR [R8+4]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R8+5]
            add EBX,EAX
            cmp RCX,R15
            ja .L_4418c6

            mov R13,QWORD PTR [R9+16]
            add R8,6
            cmp R13,R15
            jb .L_4418c6
.L_4418b2:

            mov RAX,R13
            sub RAX,R15
            cmp EAX,5
            jbe .L_4418c6

            cmp RCX,R8
            jbe .L_441738
.L_4418c6:

            mov RBX,R9
.L_4418c9:

            movzx EDX,BYTE PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+28]
.L_4418d0:

            cmp EAX,2
            ja .L_441110

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBX+28],EAX
            je .L_441110

            mov RAX,QWORD PTR [RSP+56]
            xor ECX,ECX
            mov WORD PTR [RAX+6],CX
            mov RAX,QWORD PTR [RBX+8]
            jmp .L_4411c5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441900:

            mov EAX,DWORD PTR [R9+28]
            movzx EDX,BYTE PTR [R9+24]
            cmp EAX,2
            ja .L_441110

            add EAX,1
            test DL,DL
            mov DWORD PTR [R9+28],EAX
            je .L_441950

            mov BYTE PTR [R8],0
            mov BYTE PTR [R8+1],0
            jmp .L_44185d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441930:

            mov RBX,R9
            jmp .L_4411c5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441940:

            xor R10D,R10D
            mov WORD PTR [RDX],R10W
            mov RCX,QWORD PTR [RSI+8]
            jmp .L_4413a6
.L_441950:

            mov RBX,R9
            jmp .L_4418d0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441960:

            mov RDI,QWORD PTR [RSP+56]
            movzx EDX,DX
            lea RBP,QWORD PTR [RDI+RDX*1]
            cmp RBP,RAX
            jb .L_441a80

            cmp RCX,RBP
            jb .L_441a80

            mov RDX,RCX
            sub RDX,RBP
            cmp EDX,1
            jbe .L_441a80

            lea R14,QWORD PTR [RBP+2]
            cmp R14,RAX
            jb .L_441a80

            cmp RCX,R14
            jb .L_441a80

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            sub RCX,R14
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            lea ESI,DWORD PTR [RDX+RDX*1]
            cmp ESI,ECX
            ja .L_441a80

            test AX,AX
            je .L_441207

            cmp ECX,1
            jbe .L_441a80

            lea R13,QWORD PTR [RBP+4]
            lea EAX,DWORD PTR [RDX-1]
            lea R12,QWORD PTR [R13+RAX*2]
            nop
.L_4419e0:

            movzx EAX,BYTE PTR [R14]
            movzx EDI,BYTE PTR [R14+1]
            shl EAX,8
            add AX,DI
            je .L_441a50

            movzx EAX,AX
            mov RSI,RBX
            lea RDI,QWORD PTR [RBP+RAX*1]
            call .L_43a190

            test AL,AL
            jne .L_441a50

            mov EDX,DWORD PTR [RBX+28]
            cmp EDX,2
            ja .L_441110

            movzx EAX,BYTE PTR [RBX+24]
            add EDX,1
            mov DWORD PTR [RBX+28],EDX
            test AL,AL
            jne .L_441a46
.L_441a1f:

            cmp EDX,2
            ja .L_441110

            add EDX,1
            test AL,AL
            mov DWORD PTR [RBX+28],EDX
            je .L_441110

            mov RDI,QWORD PTR [RSP+56]
            xor EDX,EDX
            mov WORD PTR [RDI+8],DX
            jmp .L_441112
.L_441a46:

            mov BYTE PTR [R14],0
            mov BYTE PTR [R14+1],0
            nop
.L_441a50:

            cmp R13,R12
            je .L_441207

            cmp R13,QWORD PTR [RBX+8]
            jb .L_441a80

            mov RAX,QWORD PTR [RBX+16]
            cmp R13,RAX
            ja .L_441a80

            sub RAX,R13
            add R14,2
            add R13,2
            cmp EAX,1
            ja .L_4419e0

            nop
            nop
            nop
            nop
.L_441a80:

            movzx EAX,BYTE PTR [RBX+24]
            mov EDX,DWORD PTR [RBX+28]
            jmp .L_441a1f
.L_441a89:

            movzx EAX,R14W
            movzx ECX,BP
            sub ECX,EAX
            mov EAX,EBP
            sub EAX,R14D
            movzx EDX,CL
            xor AL,AL
            add EAX,EDX
            mov EDX,DWORD PTR [R9+28]
            movzx ESI,AX
            cmp ECX,ESI
            je .L_441abe
.L_441aa9:

            cmp EDX,1
            jbe .L_44185d
.L_441ab2:

            sub EDX,1
            mov DWORD PTR [R9+28],EDX
            jmp .L_44185d
.L_441abe:

            cmp EDX,2
            ja .L_441ab2

            movzx ECX,BYTE PTR [R9+24]
            add EDX,1
            mov DWORD PTR [R9+28],EDX
            test CL,CL
            je .L_441aa9

            mov EDX,EAX
            mov RSI,R9
            mov BYTE PTR [R12+1],AL
            shr DX,8
            mov ECX,1936292453
            mov RDI,R12
            mov BYTE PTR [R12],DL
            mov RDX,R12
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R9
            call .L_440f00

            test AL,AL
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            je .L_441900

            mov EDX,DWORD PTR [R9+28]
            jmp .L_441aa9
.L_441b17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441b20:

            mov R8,QWORD PTR [RSI+8]
            cmp RDI,R8
            jb .L_441bf8

            mov R9,QWORD PTR [RSI+16]
            cmp RDI,R9
            ja .L_441bf8

            mov RAX,R9
            sub RAX,RDI
            cmp EAX,1
            jbe .L_441bf8

            movzx ECX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov EAX,1
            shl ECX,8
            add CX,R10W
            je .L_441c00

            movzx ECX,CX
            add RCX,RDX
            cmp R8,RCX
            ja .L_441bd8

            cmp R9,RCX
            jb .L_441bd8

            sub R9,RCX
            cmp R9D,5
            jbe .L_441bd8

            movzx R8D,BYTE PTR [RCX+4]
            movzx EDX,BYTE PTR [RCX+5]
            shl R8D,8
            add R8D,EDX
            movzx R8D,R8W
            lea EDX,DWORD PTR [R8-1]
            cmp EDX,2
            ja .L_441c00

            movzx R10D,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl R10D,8
            add R10D,EDX
            movzx EDX,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EDX,8
            add EDX,ECX
            cmp R10W,DX
            ja .L_441c00

            movzx EDX,DX
            movzx R10D,R10W
            mov ECX,4
            sub EDX,R10D
            sub ECX,R8D
            sar EDX,CL
            lea EAX,DWORD PTR [RDX+RDX*1+8]
            cmp R9D,EAX
            jae .L_441bfb
.L_441bd8:

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_441bf8

            movzx EAX,BYTE PTR [RSI+24]
            add EDX,1
            mov DWORD PTR [RSI+28],EDX
            test AL,AL
            je .L_441bf8

            xor EDX,EDX
            mov WORD PTR [RDI],DX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441bf8:

            xor EAX,EAX
            ret 
.L_441bfb:

            mov EAX,1
.L_441c00:

            ret 
.L_441c02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441c10:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,RCX
            mov R12,RSI
            sub RSP,8
.L_441c23:

            movzx EBP,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            shl EBP,8
            add EBP,EAX
            lea RAX,QWORD PTR [RCX+2]
            test BPL,1
            cmovne RBX,RAX
            test BPL,2
            lea RAX,QWORD PTR [RBX+2]
            cmovne RBX,RAX
            test BPL,4
            lea RAX,QWORD PTR [RBX+2]
            cmovne RBX,RAX
            test BPL,8
            lea RAX,QWORD PTR [RBX+2]
            cmovne RBX,RAX
            test BPL,16
            jne .L_441cd0
.L_441c65:

            test BPL,32
            jne .L_441cf0
.L_441c6f:

            test BPL,64
            jne .L_441c90

            and EBP,128
            mov EAX,1
            jne .L_441cb3
.L_441c82:

            add RSP,8
.L_441c86:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441c90:

            mov RDX,R13
            mov RSI,R12
            mov RDI,RBX
            call .L_441b20

            test AL,AL
            je .L_441ce0

            add RBX,2
            and EBP,128
            mov EAX,1
            je .L_441c82
.L_441cb3:

            add RSP,8
            mov RDX,R13
            mov RSI,R12
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_441b20
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441cd0:

            mov RDI,RBX
            add RBX,2
            call .L_441b20

            test AL,AL
            jne .L_441c65
.L_441ce0:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441cf0:

            mov RDX,R13
            mov RSI,R12
            mov RDI,RBX
            call .L_441b20

            test AL,AL
            je .L_441ce0

            add RBX,2
            jmp .L_441c6f
.L_441d0b:

            nop
            nop
            nop
            nop
            nop
.L_441d10:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_441d18:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_441de0

            cmp AX,2
            jne .L_441e57

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx R11D,CX
            je .L_441e57

            movzx EBX,BYTE PTR [RSI+112]
            lea R8,QWORD PTR [RDI+4]
            xor R10D,R10D
            mov R9D,1
            nop
            nop
            nop
.L_441d68:

            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R10D
            jbe .L_441dbd

            movzx EDX,BYTE PTR [R8+2]
            movzx EAX,BYTE PTR [R8+3]
            movzx ECX,BYTE PTR [R8]
            shl EDX,8
            add EDX,EAX
            movzx EAX,BYTE PTR [R8+1]
            shl ECX,8
            movzx EDX,DX
            add ECX,EAX
            test BL,BL
            movzx ECX,CX
            jne .L_441dbd

            add EDX,1
            cmp EDX,ECX
            jbe .L_441dbd

            nop
            nop
            nop
            nop
            nop
.L_441da8:

            mov EAX,ECX
            mov EBP,R9D
            shl EBP,CL
            shr EAX,5
            add ECX,1
            or DWORD PTR [RSI+RAX*4+116],EBP
            cmp ECX,EDX
            jne .L_441da8
.L_441dbd:

            add R10D,1
            add R8,6
            cmp R11D,R10D
            je .L_441e57

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            jmp .L_441d68
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441de0:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx R8D,CX
            je .L_441e57

            lea EBX,DWORD PTR [R8-1]
            mov RBP,RSI
            mov R14,RDI
            xor R13D,R13D
            lea R12,QWORD PTR [RIP+.L_658760]
            add RBX,1
            jmp .L_441e22
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441e18:

            movzx EAX,BYTE PTR [R14+2]
            movzx EDX,BYTE PTR [R14+3]
.L_441e22:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_441e37

            lea RDX,QWORD PTR [R14+R13*2+4]
.L_441e37:

            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            mov RDI,RBP
            add R13,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160

            cmp R13,RBX
            jne .L_441e18
.L_441e57:

            pop RBX
.L_441e58:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_441e60:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,24
.L_441e74:

            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            mov RSI,QWORD PTR [RSI+16]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+3]
            movzx EAX,AX
            lea RBP,QWORD PTR [RDI+RAX*2+6]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [R14+4]
            movzx ECX,BYTE PTR [R14+5]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            test DX,DX
            mov DWORD PTR [RSP+12],ESI
            je .L_441f2d

            lea R13,QWORD PTR [R14+6]
            xor R15D,R15D
            lea R12,QWORD PTR [RIP+.L_658760]
            jmp .L_441eea
.L_441ee0:

            movzx EAX,BYTE PTR [R14+4]
            movzx ECX,BYTE PTR [R14+5]
.L_441eea:

            shl EAX,8
            mov RSI,QWORD PTR [RBX+8]
            add EAX,ECX
            mov RCX,R12
            movzx EAX,AX
            cmp EAX,R15D
            cmova RCX,R13
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,R12
            add R15D,1
            add R13,2
            call .L_441d10

            cmp DWORD PTR [RSP+12],R15D
            jne .L_441ee0
.L_441f2d:

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_442040

            lea R13D,DWORD PTR [RSI-1]
            xor R15D,R15D
            lea R12,QWORD PTR [RIP+.L_658760]
            add R13,1
            jmp .L_441f64
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441f60:

            movzx EDX,BYTE PTR [RBP+1]
.L_441f64:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_441f79

            lea RDX,QWORD PTR [RBP+R15*2+2]
.L_441f79:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RBX+24]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,R12
            add R15,1
            call .L_441d10

            cmp R13,R15
            movzx EAX,BYTE PTR [RBP]
            jne .L_441f60

            movzx EDX,BYTE PTR [RBP+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_441fb4:

            lea R14D,DWORD PTR [RAX+RAX*1+2]
            add R14,RBP
            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_44202f

            lea EBP,DWORD PTR [RSI-1]
            xor R13D,R13D
            lea R12,QWORD PTR [RIP+.L_658760]
            add RBP,1
            jmp .L_441ff9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441ff0:

            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
.L_441ff9:

            shl EAX,8
            mov RDI,QWORD PTR [RBX+32]
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_442012

            lea RDX,QWORD PTR [R14+R13*2+2]
.L_442012:

            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            add R13,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160

            cmp R13,RBP
            jne .L_441ff0
.L_44202f:

            add RSP,24
.L_442033:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_442040:

            xor EAX,EAX
            jmp .L_441fb4
.L_442047:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442050:

            mov RCX,QWORD PTR [RSI+8]
            cmp RDI,RCX
            jb .L_442240

            mov R8,QWORD PTR [RSI+16]
            cmp RDI,R8
            ja .L_442240

            mov RAX,R8
            sub RAX,RDI
            cmp EAX,1
            jbe .L_442240

            push R14
            push R13
            push R12
            push RBP
            lea RBP,QWORD PTR [RDI+2]
            push RBX
.L_442085:

            cmp RCX,RBP
            ja .L_442233

            cmp R8,RBP
            jb .L_442233

            movzx EAX,BYTE PTR [RDI]
            movzx R9D,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,R9D
            mov R9,R8
            movzx R10D,AX
            sub R9,RBP
            lea R11D,DWORD PTR [R10+R10*1]
            cmp R11D,R9D
            ja .L_442233

            test AX,AX
            je .L_442248

            cmp R9D,1
            jbe .L_442233

            lea RBX,QWORD PTR [RDI+4]
            lea EAX,DWORD PTR [R10-1]
            lea R12,QWORD PTR [RBX+RAX*2]
            nop
            nop
            nop
            nop
            nop
.L_4420e0:

            movzx EDI,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl EDI,8
            add DI,AX
            je .L_4422c8

            movzx EDI,DI
            add RDI,RDX
            cmp RCX,RDI
            ja .L_4422a0

            cmp RDI,R8
            ja .L_4422a0

            mov RAX,R8
            sub RAX,RDI
            cmp EAX,1
            jbe .L_4422a0

            lea R9,QWORD PTR [RDI+2]
            cmp RCX,R9
            ja .L_4422a0

            cmp R8,R9
            jb .L_4422a0

            movzx EAX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,R10D
            mov R10,R8
            movzx R11D,AX
            sub R10,R9
            lea R13D,DWORD PTR [R11+R11*1]
            cmp R13D,R10D
            ja .L_4422a0

            test AX,AX
            je .L_4422c8

            cmp R9,RCX
            jb .L_4422a0

            cmp R10D,1
            jbe .L_4422a0

            lea R10,QWORD PTR [RDI+4]
            lea EAX,DWORD PTR [R11-1]
            lea R11,QWORD PTR [R10+RAX*2]
            nop
            nop
.L_442180:

            movzx EAX,BYTE PTR [R9]
            movzx R13D,BYTE PTR [R9+1]
            shl EAX,8
            add AX,R13W
            je .L_442270

            movzx EAX,AX
            add RAX,RDI
            cmp RAX,RCX
            jb .L_442210

            cmp RAX,R8
            ja .L_442210

            mov R13,R8
            sub R13,RAX
            cmp R13D,1
            jbe .L_442210

            lea R13,QWORD PTR [RAX+2]
            cmp R13,RCX
            jb .L_442210

            cmp R8,R13
            jb .L_442210

            mov R14,R8
            sub R14,R13
            cmp R14D,1
            jbe .L_442210

            lea R13,QWORD PTR [RAX+4]
            cmp R13,RCX
            jb .L_442210

            cmp R8,R13
            jb .L_442210

            movzx ECX,BYTE PTR [RAX+2]
            movzx R14D,BYTE PTR [RAX+3]
            sub R8,R13
            shl ECX,8
            add ECX,R14D
            movzx R14D,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            movzx ECX,CX
            shl R14D,8
            add EAX,R14D
            movzx EAX,AX
            lea EAX,DWORD PTR [RAX+RCX*2]
            add EAX,EAX
            cmp EAX,R8D
            jbe .L_442270

            nop
            nop
            nop
            nop
            nop
.L_442210:

            mov EAX,DWORD PTR [RSI+28]
            cmp EAX,2
            ja .L_442233

            movzx R8D,BYTE PTR [RSI+24]
            lea ECX,DWORD PTR [RAX+1]
            mov DWORD PTR [RSI+28],ECX
            test R8B,R8B
            jne .L_442260

            cmp ECX,3
            je .L_442233

            add EAX,2
            mov DWORD PTR [RSI+28],EAX
.L_442233:

            pop RBX
.L_442234:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_442240:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442248:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442260:

            mov BYTE PTR [R9],0
            mov BYTE PTR [R9+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442270:

            cmp R11,R10
            je .L_4422c8

            mov RCX,QWORD PTR [RSI+8]
            cmp R10,RCX
            jb .L_4422a0

            mov R8,QWORD PTR [RSI+16]
            cmp R10,R8
            ja .L_4422a0

            mov RAX,R8
            add R9,2
            sub RAX,R10
            add R10,2
            cmp EAX,1
            ja .L_442180

            nop
            nop
.L_4422a0:

            mov EAX,DWORD PTR [RSI+28]
            movzx ECX,BYTE PTR [RSI+24]
            cmp EAX,2
            ja .L_442233

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            je .L_442233

            mov BYTE PTR [RBP],0
            mov BYTE PTR [RBP+1],0
            nop
            nop
            nop
            nop
            nop
            nop
.L_4422c8:

            cmp R12,RBX
            je .L_442248

            mov RCX,QWORD PTR [RSI+8]
            cmp RBX,RCX
            jb .L_442233

            mov R8,QWORD PTR [RSI+16]
            cmp RBX,R8
            ja .L_442233

            mov RAX,R8
            add RBP,2
            sub RAX,RBX
            add RBX,2
            cmp EAX,1
            ja .L_4420e0

            jmp .L_442233
.L_442307:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442310:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            mov RDI,QWORD PTR [RSI+8]
            push RBP
            push RBX
            cmp R12,RDI
            jb .L_44232f

            mov R9,QWORD PTR [RSI+16]
            cmp R12,R9
            jbe .L_442340
.L_44232f:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442340:

            mov RAX,R9
            sub RAX,R12
            cmp EAX,1
            jbe .L_44232f

            lea R13,QWORD PTR [R12+2]
            cmp RDI,R13
            ja .L_44232f

            cmp R9,R13
            jb .L_44232f

            movzx EAX,BYTE PTR [R12]
            movzx ECX,BYTE PTR [R12+1]
            shl EAX,8
            add EAX,ECX
            mov RCX,R9
            movzx R8D,AX
            sub RCX,R13
            lea R10D,DWORD PTR [R8+R8*1]
            cmp R10D,ECX
            ja .L_44232f

            test AX,AX
            je .L_442530

            cmp ECX,1
            jbe .L_44232f

            lea EAX,DWORD PTR [R8-1]
            add R12,4
            mov R14D,2
            lea RAX,QWORD PTR [R12+RAX*2]
            mov QWORD PTR [RSP-8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4423a8:

            movzx R10D,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            shl R10D,8
            add R10W,AX
            je .L_4424f0

            movzx R10D,R10W
            add R10,RDX
            cmp RDI,R10
            ja .L_442580

            cmp R10,R9
            ja .L_442580

            mov RAX,R9
            sub RAX,R10
            cmp EAX,1
            jbe .L_442580

            lea R11,QWORD PTR [R10+2]
            cmp RDI,R11
            ja .L_442580

            cmp R9,R11
            jb .L_442580

            movzx EAX,BYTE PTR [R10]
            movzx ECX,BYTE PTR [R10+1]
            mov R8,R9
            sub R8,R11
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            lea EBX,DWORD PTR [RCX+RCX*1]
            cmp EBX,R8D
            ja .L_442580

            test AX,AX
            je .L_4424f0

            cmp R11,RDI
            jb .L_442580

            cmp R8D,1
            jbe .L_442580

            lea RBX,QWORD PTR [R10+4]
            lea EAX,DWORD PTR [RCX-1]
            lea RBP,QWORD PTR [RBX+RAX*2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442450:

            movzx EAX,BYTE PTR [R11]
            movzx ECX,BYTE PTR [R11+1]
            shl EAX,8
            add AX,CX
            je .L_442550

            movzx EAX,AX
            add RAX,R10
            cmp RDI,RAX
            ja .L_4424b0

            cmp RAX,R9
            ja .L_4424b0

            mov RCX,R9
            sub RCX,RAX
            cmp ECX,1
            jbe .L_4424b0

            lea R8,QWORD PTR [RAX+2]
            cmp RDI,R8
            ja .L_4424b0

            cmp R9,R8
            jb .L_4424b0

            movzx ECX,BYTE PTR [RAX]
            movzx R15D,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,R15D
            mov R15,R9
            movzx ECX,CX
            sub R15,R8
            add ECX,ECX
            cmp ECX,R15D
            jbe .L_442590
.L_4424b0:

            mov EAX,DWORD PTR [RSI+28]
            cmp EAX,2
            ja .L_44232f

            movzx ECX,BYTE PTR [RSI+24]
            add EAX,1
            mov DWORD PTR [RSI+28],EAX
            test CL,CL
            jne .L_442540
.L_4424ca:

            cmp EAX,2
            ja .L_44232f

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            je .L_44232f

            mov BYTE PTR [R13],0
            mov BYTE PTR [R13+1],0
            nop
            nop
            nop
            nop
            nop
.L_4424f0:

            cmp R12,QWORD PTR [RSP-8]
            je .L_442530

            mov RDI,QWORD PTR [RSI+8]
            cmp R12,RDI
            jb .L_44232f

            mov R9,QWORD PTR [RSI+16]
            cmp R12,R9
            ja .L_44232f

            mov RAX,R9
            add R13,2
            sub RAX,R12
            add R12,2
            cmp EAX,1
            ja .L_4423a8

            jmp .L_44232f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442530:

            pop RBX
.L_442531:

            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_442540:

            mov BYTE PTR [R11],0
            mov BYTE PTR [R11+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442550:

            cmp RBP,RBX
            je .L_4424f0

            mov RDI,QWORD PTR [RSI+8]
            cmp RBX,RDI
            jb .L_442580

            mov R9,QWORD PTR [RSI+16]
            cmp RBX,R9
            ja .L_442580

            mov RAX,R9
            add R11,2
            sub RAX,RBX
            add RBX,2
            cmp EAX,1
            ja .L_442450

            nop
            nop
.L_442580:

            movzx ECX,BYTE PTR [RSI+24]
            mov EAX,DWORD PTR [RSI+28]
            jmp .L_4424ca
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442590:

            add ECX,2
            add RAX,RCX
            cmp RDI,RAX
            ja .L_4424b0

            cmp RAX,R9
            ja .L_4424b0

            mov R15,R9
            sub R15,RAX
            cmp R15D,1
            jbe .L_4424b0

            movzx R8D,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl R8D,8
            add R8D,ECX
            movzx ECX,R8W
            add ECX,ECX
            cmp R15D,ECX
            jb .L_4424b0

            test R8W,R8W
            cmove RCX,R14
            add RAX,RCX
            cmp RDI,RAX
            ja .L_4424b0

            cmp RAX,R9
            ja .L_4424b0

            mov RCX,R9
            sub RCX,RAX
            cmp ECX,1
            jbe .L_4424b0

            lea R8,QWORD PTR [RAX+2]
            cmp RDI,R8
            ja .L_4424b0

            cmp R9,R8
            jb .L_4424b0

            movzx ECX,BYTE PTR [RAX]
            movzx R15D,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,R15D
            mov R15,R9
            movzx ECX,CX
            sub R15,R8
            add ECX,ECX
            cmp ECX,R15D
            ja .L_4424b0

            add ECX,2
            add RAX,RCX
            cmp RDI,RAX
            ja .L_4424b0

            cmp RAX,R9
            ja .L_4424b0

            mov RCX,R9
            sub RCX,RAX
            cmp ECX,1
            jbe .L_4424b0

            lea RCX,QWORD PTR [RAX+2]
            cmp RDI,RCX
            ja .L_4424b0

            cmp R9,RCX
            jb .L_4424b0

            movzx EDI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            sub R9,RCX
            shl EDI,8
            add EAX,EDI
            movzx EAX,AX
            shl EAX,2
            cmp EAX,R9D
            jbe .L_442550

            jmp .L_4424b0
.L_44269a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4426a0:

            mov RCX,QWORD PTR [RSI+8]
            cmp RDI,RCX
            jb .L_4426d8

            mov R8,QWORD PTR [RSI+16]
            cmp RDI,R8
            ja .L_4426d8

            mov RAX,R8
            sub RAX,RDI
            cmp EAX,1
            jbe .L_4426d8

            movzx EAX,BYTE PTR [RDI]
            movzx R9D,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,R9W
            jne .L_4426e0

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4426d8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4426e0:

            movzx EAX,AX
            push R12
.L_4426e5:

            push RBP
            push RBX
.L_4426e7:

            lea RBX,QWORD PTR [RDX+RAX*1]
            mov R12,RSI
            mov RBP,RDI
            cmp RCX,RBX
            ja .L_442740

            cmp R8,RBX
            jb .L_442740

            sub R8,RBX
            cmp R8D,1
            jbe .L_442740

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_442770

            cmp AX,3
            je .L_442780

            cmp AX,1
            je .L_442730
.L_442722:

            mov EAX,1
.L_442727:

            pop RBX
.L_442728:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442730:

            cmp R8D,5
            seta AL
.L_442737:

            test AL,AL
            jne .L_442722

            nop
            nop
            nop
            nop
            nop
.L_442740:

            mov EDX,DWORD PTR [R12+28]
            cmp EDX,2
            ja .L_442768

            movzx EAX,BYTE PTR [R12+24]
            add EDX,1
            mov DWORD PTR [R12+28],EDX
            test AL,AL
            je .L_442768

            xor EDX,EDX
            mov WORD PTR [RBP],DX
            jmp .L_442727
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442768:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_442770:

            cmp R8D,7
            seta AL
            jmp .L_442737
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442780:

            cmp R8D,9
            jbe .L_442740

            lea RDI,QWORD PTR [RBX+6]
            mov RDX,RBX
            call .L_441b20

            test AL,AL
            je .L_442740

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,RBX
            mov RSI,R12
            call .L_441b20

            test AL,AL
            je .L_442740

            jmp .L_442722
.L_4427ae:

            nop
            nop
.L_4427b0:

            mov RCX,QWORD PTR [RSI+8]
            cmp RDI,RCX
            jae .L_4427c0
.L_4427b9:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4427c0:

            mov R8,QWORD PTR [RSI+16]
            cmp RDI,R8
            ja .L_4427b9

            mov RAX,R8
            sub RAX,RDI
            cmp EAX,1
            jbe .L_4427b9

            push R14
            push R13
            push R12
            push RBP
            push RBX
            movzx EAX,BYTE PTR [RDI]
            movzx R12D,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,R12W
            jne .L_442800
.L_4427ed:

            mov EAX,1
.L_4427f2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442800:

            movzx EAX,AX
            mov RBX,RSI
            mov R13,RDI
            lea R12,QWORD PTR [RDX+RAX*1]
            cmp RCX,R12
            ja .L_4428c0

            cmp R8,R12
            jb .L_4428c0

            mov RAX,R8
            sub RAX,R12
            cmp EAX,1
            jbe .L_4428c0

            lea RAX,QWORD PTR [R12+2]
            cmp RCX,RAX
            ja .L_4428c0

            cmp R8,RAX
            jb .L_4428c0

            movzx EDX,BYTE PTR [R12]
            movzx ECX,BYTE PTR [R12+1]
            sub R8,RAX
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            lea EAX,DWORD PTR [RCX*4]
            cmp EAX,R8D
            ja .L_4428c0

            test DX,DX
            je .L_4427ed

            cmp R8D,3
            jbe .L_4428c0

            lea RBP,QWORD PTR [R12+4]
            lea EAX,DWORD PTR [RCX-1]
            lea R14,QWORD PTR [RBP+RAX*4]
            nop
            nop
            nop
            nop
            nop
.L_442880:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBP
            call .L_4426a0

            test AL,AL
            je .L_4428c0

            cmp R14,RBP
            je .L_4427ed

            lea RAX,QWORD PTR [RBP+2]
            cmp QWORD PTR [RBX+8],RAX
            ja .L_4428c0

            mov RDX,QWORD PTR [RBX+16]
            cmp RDX,RAX
            jb .L_4428c0

            sub RDX,RAX
            add RBP,4
            cmp EDX,3
            ja .L_442880

            nop
            nop
            nop
            nop
            nop
            nop
.L_4428c0:

            mov EDX,DWORD PTR [RBX+28]
            cmp EDX,2
            ja .L_4428e8

            movzx EAX,BYTE PTR [RBX+24]
            add EDX,1
            mov DWORD PTR [RBX+28],EDX
            test AL,AL
            je .L_4428e8

            xor EDX,EDX
            mov WORD PTR [R13],DX
            jmp .L_4427f2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4428e8:

            pop RBX
.L_4428e9:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4428f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442900:

            mov R8,QWORD PTR [RSI+8]
            cmp RDI,R8
            jae .L_442910
.L_442909:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442910:

            mov R9,QWORD PTR [RSI+16]
            cmp RDI,R9
            ja .L_442909

            mov RAX,R9
            sub RAX,RDI
            cmp EAX,1
            jbe .L_442909

            push R14
            push R13
            push R12
            push RBP
            push RBX
            movzx EAX,BYTE PTR [RDI]
            movzx EBP,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,BP
            jne .L_442950
.L_44293b:

            mov EAX,1
.L_442940:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442950:

            movzx EAX,AX
            mov R12,RSI
            mov R13,RDI
            lea RBP,QWORD PTR [RDX+RAX*1]
            cmp R8,RBP
            ja .L_442998

            cmp R9,RBP
            jb .L_442998

            mov RAX,R9
            sub RAX,RBP
            cmp EAX,1
            jbe .L_442998

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx ESI,AX
            je .L_4429e8

            xor EDX,EDX
            mov EAX,4294967295
            div ESI
            cmp ECX,EAX
            jb .L_4429c0

            nop
            nop
            nop
            nop
.L_442998:

            mov EDX,DWORD PTR [R12+28]
            cmp EDX,2
            ja .L_4429d8

            movzx EAX,BYTE PTR [R12+24]
            add EDX,1
            mov DWORD PTR [R12+28],EDX
            test AL,AL
            je .L_4429d8

            xor EDX,EDX
            mov WORD PTR [R13],DX
            jmp .L_442940
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4429c0:

            imul ECX,ESI
            cmp ECX,2147483646
            ja .L_442998

            lea RBX,QWORD PTR [RBP+2]
            jmp .L_4429ee
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4429d8:

            pop RBX
.L_4429d9:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4429e8:

            lea RBX,QWORD PTR [RBP+2]
            xor ECX,ECX
.L_4429ee:

            cmp RBX,R8
            jb .L_442998

            cmp RBX,R9
            ja .L_442998

            lea EAX,DWORD PTR [RCX+RCX*1]
            sub R9,RBX
            cmp EAX,R9D
            ja .L_442998

            test ECX,ECX
            je .L_44293b

            lea EAX,DWORD PTR [RCX-1]
            lea R14,QWORD PTR [RBP+RAX*2+4]
            jmp .L_442a25
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442a18:

            add RBX,2
            cmp R14,RBX
            je .L_44293b
.L_442a25:

            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_4426a0

            test AL,AL
            jne .L_442a18

            jmp .L_442998
.L_442a3c:

            nop
            nop
            nop
            nop
.L_442a40:

            mov RCX,QWORD PTR [RSI+8]
            xor EAX,EAX
            cmp RDI,RCX
            jb .L_442a8b

            mov RSI,QWORD PTR [RSI+16]
            cmp RDI,RSI
            ja .L_442a8b

            mov RDX,RSI
            sub RDX,RDI
            cmp EDX,1
            jbe .L_442a8b

            movzx EDX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            add RDI,2
            cmp RDI,RCX
            jb .L_442a8b

            cmp RDI,RSI
            ja .L_442a8b

            shl EDX,8
            movzx EAX,R8B
            sub RSI,RDI
            add EAX,EDX
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,ESI
            setbe AL
.L_442a8b:

            ret 
.L_442a8d:

            nop
            nop
            nop
.L_442a90:

            mov RDX,QWORD PTR [RSI+8]
            cmp RDI,RDX
            jb .L_442b18

            mov RCX,QWORD PTR [RSI+16]
            cmp RDI,RCX
            ja .L_442b18

            mov RAX,RCX
            sub RAX,RDI
            cmp EAX,1
            jbe .L_442b18

            movzx EAX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,R8D
            cmp AX,1
            je .L_442b30

            cmp AX,2
            jne .L_442b20

            lea RSI,QWORD PTR [RDI+2]
            xor EAX,EAX
            cmp RDX,RSI
            ja .L_442b25

            cmp RCX,RSI
            jb .L_442b25

            mov R9,RCX
            sub R9,RSI
            cmp R9D,1
            jbe .L_442b25

            movzx ESI,BYTE PTR [RDI+2]
            movzx R8D,BYTE PTR [RDI+3]
            add RDI,4
            cmp RDX,RDI
            ja .L_442b25

            cmp RCX,RDI
            jb .L_442b25

            shl ESI,8
            sub RCX,RDI
            add ESI,R8D
            movzx ESI,SI
            lea EAX,DWORD PTR [RSI+RSI*2]
            add EAX,EAX
            cmp EAX,ECX
            setbe AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442b18:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442b20:

            mov EAX,1
.L_442b25:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442b30:

            add RDI,2
            jmp .L_442a40
.L_442b39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442b40:

            cmp RDI,QWORD PTR [RSI+8]
            jb .L_442bb0

            mov RAX,QWORD PTR [RSI+16]
            cmp RDI,RAX
            ja .L_442bb0

            sub RAX,RDI
            cmp EAX,1
            jbe .L_442bb0

            movzx ECX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            mov EAX,1
            shl ECX,8
            add CX,R8W
            je .L_442bb2

            push RBP
            movzx ECX,CX
            push RBX
            mov RBP,RDI
            lea RDI,QWORD PTR [RDX+RCX*1]
            mov RBX,RSI
            sub RSP,8
            call .L_442a90

            test AL,AL
            jne .L_442ba2

            mov EDX,DWORD PTR [RBX+28]
            cmp EDX,2
            ja .L_442ba0

            movzx EAX,BYTE PTR [RBX+24]
            add EDX,1
            mov DWORD PTR [RBX+28],EDX
            test AL,AL
            jne .L_442bb8

            nop
.L_442ba0:

            xor EAX,EAX
.L_442ba2:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442bb0:

            xor EAX,EAX
.L_442bb2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442bb8:

            xor EDX,EDX
            mov WORD PTR [RBP],DX
            jmp .L_442ba2
.L_442bc0:

            mov RAX,QWORD PTR [RSI+8]
            cmp RDI,RAX
            jb .L_442c60

            mov RCX,QWORD PTR [RSI+16]
            cmp RDI,RCX
            ja .L_442c60

            mov R8,RCX
            sub R8,RDI
            cmp R8D,1
            jbe .L_442c60

            push R13
            push R12
            push RBP
            push RBX
            lea RBX,QWORD PTR [RDI+2]
            sub RSP,8
.L_442bf4:

            cmp RAX,RBX
            ja .L_442c53

            cmp RCX,RBX
            jb .L_442c53

            movzx EAX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            sub RCX,RBX
            shl EAX,8
            add EAX,R8D
            movzx R8D,AX
            lea R9D,DWORD PTR [R8+R8*1]
            cmp R9D,ECX
            ja .L_442c53

            test AX,AX
            je .L_442c68

            lea EAX,DWORD PTR [R8-1]
            mov R12,RDX
            mov RBP,RSI
            lea R13,QWORD PTR [RDI+RAX*2+4]
            jmp .L_442c41
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442c38:

            add RBX,2
            cmp RBX,R13
            je .L_442c68
.L_442c41:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_442b40

            test AL,AL
            jne .L_442c38
.L_442c53:

            add RSP,8
.L_442c57:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_442c60:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442c68:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_442c78:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442c80:

            mov RCX,QWORD PTR [RSI+8]
            xor EAX,EAX
            cmp RDI,RCX
            jb .L_442ccb

            mov RSI,QWORD PTR [RSI+16]
            cmp RDI,RSI
            ja .L_442ccb

            mov RDX,RSI
            sub RDX,RDI
            cmp EDX,1
            jbe .L_442ccb

            movzx EDX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            add RDI,2
            cmp RDI,RCX
            jb .L_442ccb

            cmp RDI,RSI
            ja .L_442ccb

            shl EDX,8
            movzx EAX,R8B
            sub RSI,RDI
            add EAX,EDX
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,ESI
            setbe AL
.L_442ccb:

            ret 
.L_442ccd:

            nop
            nop
            nop
.L_442cd0:

            mov R8,QWORD PTR [RSI+8]
            cmp RDI,R8
            jb .L_442dd0

            mov R9,QWORD PTR [RSI+16]
            cmp RDI,R9
            ja .L_442dd0

            mov RAX,R9
            sub RAX,RDI
            cmp EAX,1
            jbe .L_442dd0

            movzx ECX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov EAX,1
            shl ECX,8
            add CX,R10W
            je .L_442dd2

            push RBP
.L_442d14:

            movzx ECX,CX
            push RBX
            add RDX,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_442d25:

            cmp R8,RDX
            ja .L_442da0

            cmp R9,RDX
            jb .L_442da0

            mov RDI,R9
            sub RDI,RDX
            cmp EDI,1
            jbe .L_442da0

            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,ESI
            cmp CX,1
            je .L_442dd8

            cmp CX,2
            jne .L_442dc2

            lea RAX,QWORD PTR [RDX+2]
            cmp R8,RAX
            ja .L_442da0

            cmp R9,RAX
            jb .L_442da0

            mov RSI,R9
            sub RSI,RAX
            cmp ESI,1
            jbe .L_442da0

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            add RDX,4
            cmp R8,RDX
            ja .L_442da0

            cmp R9,RDX
            jb .L_442da0

            shl EAX,8
            sub R9,RDX
            add EAX,ECX
            movzx EAX,AX
            lea ECX,DWORD PTR [RAX+RAX*2]
            mov EAX,1
            add ECX,ECX
            cmp ECX,R9D
            jbe .L_442dc2

            nop
.L_442da0:

            mov EDX,DWORD PTR [RBP+28]
            cmp EDX,2
            ja .L_442dc0

            movzx EAX,BYTE PTR [RBP+24]
            add EDX,1
            mov DWORD PTR [RBP+28],EDX
            test AL,AL
            jne .L_442df8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442dc0:

            xor EAX,EAX
.L_442dc2:

            add RSP,8
.L_442dc6:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442dd0:

            xor EAX,EAX
.L_442dd2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442dd8:

            cmp EDI,5
            jbe .L_442da0

            lea RDI,QWORD PTR [RDX+4]
            mov RSI,RBP
            call .L_442c80

            test AL,AL
            je .L_442da0

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442df8:

            xor EDX,EDX
            mov WORD PTR [RBX],DX
            jmp .L_442dc2
.L_442dff:

            nop
.L_442e00:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
            cmp RDI,QWORD PTR [RSI+8]
            jb .L_442e20

            mov RAX,QWORD PTR [RSI+16]
            cmp RDI,RAX
            jbe .L_442e38

            nop
            nop
            nop
.L_442e20:

            xor EBP,EBP
.L_442e22:

            add RSP,40
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442e38:

            sub RAX,RDI
            cmp EAX,15
            jbe .L_442e20

            mov R14,RDI
            lea RDI,QWORD PTR [RDI+2]
            mov RBX,RSI
            mov RDX,R14
            call .L_442b40

            test AL,AL
            je .L_442e20

            lea RDI,QWORD PTR [R14+8]
            mov RDX,R14
            mov RSI,RBX
            call .L_442cd0

            test AL,AL
            je .L_442e20

            lea RDI,QWORD PTR [R14+10]
            mov RDX,R14
            mov RSI,RBX
            call .L_442cd0

            test AL,AL
            je .L_442e20

            movzx R13D,BYTE PTR [R14+4]
            movzx EAX,BYTE PTR [R14+5]
            shl R13D,8
            add R13D,EAX
            movzx EDI,R13W
            call __popcountdi2@PLT

            movzx R12D,BYTE PTR [R14+6]
            mov R15D,EAX
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [R14+7]
            shl R12D,8
            add R12D,EAX
            movzx EDI,R12W
            call __popcountdi2@PLT

            movzx EBP,BYTE PTR [R14+12]
            mov ESI,EAX
            movzx EAX,BYTE PTR [R14+13]
            movzx EDX,BYTE PTR [R14+15]
            add ESI,R15D
            lea R15,QWORD PTR [R14+16]
            mov DWORD PTR [RSP+16],ESI
            mov RDI,RBX
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R14+14]
            movzx EBP,BP
            mov ECX,EBP
            shl EAX,8
            add EAX,EDX
            lea EDX,DWORD PTR [RSI+RSI*1]
            mov RSI,R15
            movzx EAX,AX
            imul ECX,EAX
            mov DWORD PTR [RSP+12],ECX
            call .L_439dc0

            test AL,AL
            mov EBP,EAX
            je .L_442e20

            and R13D,240
            jne .L_442f90
.L_442f12:

            and R12D,240
            je .L_442e22

            mov EAX,DWORD PTR [RSP+12]
            test EAX,EAX
            je .L_442e22

            movsxd RAX,DWORD PTR [RSP+20]
            mov R13D,DWORD PTR [RSP+16]
            lea R12,QWORD PTR [R14+6]
            xor R8D,R8D
            lea R15,QWORD PTR [R14+RAX*2+16]
            add R13,R13
            jmp .L_442f67
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442f50:

            mov R8D,DWORD PTR [RSP+16]
            add R15,R13
            add R8D,1
            cmp DWORD PTR [RSP+12],R8D
            je .L_442e22
.L_442f67:

            mov RCX,R15
            mov RDX,R14
            mov RSI,RBX
            mov RDI,R12
            mov DWORD PTR [RSP+16],R8D
            call .L_441c10

            test AL,AL
            jne .L_442f50

            jmp .L_442e20

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442f90:

            mov EDX,DWORD PTR [RSP+12]
            test EDX,EDX
            je .L_442e22

            mov R13D,DWORD PTR [RSP+16]
            lea R12,QWORD PTR [R14+4]
            lea RAX,QWORD PTR [R13+R13*1]
            xor R13D,R13D
            mov QWORD PTR [RSP+24],RAX
            jmp .L_442fc8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442fb8:

            add R15,QWORD PTR [RSP+24]
            add R13D,1
            cmp DWORD PTR [RSP+12],R13D
            je .L_442fe2
.L_442fc8:

            mov RCX,R15
            mov RDX,R14
            mov RSI,RBX
            mov RDI,R12
            call .L_441c10

            test AL,AL
            jne .L_442fb8

            jmp .L_442e20
.L_442fe2:

            movzx R12D,BYTE PTR [R14+6]
            movzx EAX,BYTE PTR [R14+7]
            shl R12D,8
            add R12D,EAX
            jmp .L_442f12
.L_442ff8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443000:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
            cmp RDI,QWORD PTR [RSI+8]
            jb .L_443020

            mov RAX,QWORD PTR [RSI+16]
            cmp RDI,RAX
            jbe .L_443038

            nop
            nop
            nop
.L_443020:

            xor R12D,R12D
.L_443023:

            add RSP,40
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443038:

            sub RAX,RDI
            cmp EAX,3
            jbe .L_443020

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_443020

            mov RBP,RDI
            lea RDI,QWORD PTR [RDI+4]
            mov RBX,RSI
            mov RDX,RBP
            call .L_442cd0

            test AL,AL
            je .L_443020

            mov RAX,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RBP+6]
            cmp RDX,RAX
            jb .L_443020

            mov RCX,QWORD PTR [RBX+16]
            cmp RDX,RCX
            ja .L_443020

            sub RCX,RDX
            cmp ECX,1
            jbe .L_443020

            movzx R12D,BYTE PTR [RBP+6]
            movzx EDX,BYTE PTR [RBP+7]
            shl R12D,8
            add R12W,DX
            jne .L_4432b0
.L_44309d:

            lea RDX,QWORD PTR [RBP+8]
            cmp RDX,RAX
            jb .L_443020

            mov RAX,QWORD PTR [RBX+16]
            cmp RDX,RAX
            ja .L_443020

            sub RAX,RDX
            cmp EAX,1
            jbe .L_443020

            movzx R13D,BYTE PTR [RBP+8]
            movzx EAX,BYTE PTR [RBP+9]
            shl R13D,8
            add R13W,AX
            jne .L_443410
.L_4430da:

            lea RDI,QWORD PTR [RBP+10]
            mov RDX,RBP
            mov RSI,RBX
            call .L_442cd0

            test AL,AL
            mov R12D,EAX
            je .L_443020

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            movzx ECX,BYTE PTR [RBP+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBP+2]
            shl EAX,16
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            add EAX,EDX
            cmp EAX,65537
            jbe .L_443023

            mov RDX,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RBP+12]
            cmp RAX,RDX
            jb .L_443020

            mov RSI,QWORD PTR [RBX+16]
            cmp RAX,RSI
            ja .L_443020

            mov RCX,RSI
            sub RCX,RAX
            cmp ECX,1
            jbe .L_443020

            movzx EAX,BYTE PTR [RBP+12]
            movzx ECX,BYTE PTR [RBP+13]
            shl EAX,8
            add AX,CX
            je .L_443023

            movzx EAX,AX
            lea R14,QWORD PTR [RBP+RAX*1]
            cmp RDX,R14
            ja .L_443280

            cmp RSI,R14
            jb .L_443280

            mov RAX,RSI
            sub RAX,R14
            cmp EAX,1
            jbe .L_443280

            movzx EAX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            jne .L_443023

            lea RAX,QWORD PTR [R14+2]
            cmp RDX,RAX
            ja .L_443280

            cmp RSI,RAX
            jb .L_443280

            mov RCX,RSI
            sub RCX,RAX
            cmp ECX,1
            jbe .L_443280

            lea R15,QWORD PTR [R14+4]
            cmp RDX,R15
            ja .L_443280

            cmp RSI,R15
            jb .L_443280

            movzx EAX,BYTE PTR [R14+2]
            movzx EDX,BYTE PTR [R14+3]
            sub RSI,R15
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            lea ECX,DWORD PTR [RDX*4]
            cmp ECX,ESI
            ja .L_443280

            test AX,AX
            je .L_443023

            cmp ESI,3
            jbe .L_443280

            lea R13,QWORD PTR [R14+8]
            lea EAX,DWORD PTR [RDX-1]
            lea RAX,QWORD PTR [R13+RAX*4]
            mov QWORD PTR [RSP],RAX
.L_443220:

            movzx EDX,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R15+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R15+3]
            add EAX,EDX
            je .L_443711

            mov EAX,EAX
            mov RSI,RBX
            lea RDI,QWORD PTR [R14+RAX*1]
            call .L_442a90

            test AL,AL
            jne .L_443711

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_443020

            movzx EDX,BYTE PTR [RBX+24]
            add EAX,1
            mov DWORD PTR [RBX+28],EAX
            test DL,DL
            jne .L_4436fe

            nop
.L_443280:

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_443020

            movzx R12D,BYTE PTR [RBX+24]
            add EAX,1
            mov DWORD PTR [RBX+28],EAX
            test R12B,R12B
            je .L_443020

            mov WORD PTR [RBP+12],0
            jmp .L_443023
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4432b0:

            movzx R12D,R12W
            mov RSI,RBX
            add R12,RBP
            mov RDX,R12
            mov RDI,R12
            call .L_442b40

            test AL,AL
            jne .L_443300
.L_4432c9:

            movzx ECX,BYTE PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+28]
.L_4432d0:

            cmp EAX,2
            ja .L_443020

            add EAX,1
            test CL,CL
            mov DWORD PTR [RBX+28],EAX
            je .L_443020

            xor EDX,EDX
            mov WORD PTR [RBP+6],DX
            mov RAX,QWORD PTR [RBX+8]
            jmp .L_44309d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443300:

            mov R15,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [R12+2]
            cmp RDX,R15
            mov RAX,R15
            jb .L_4432c9

            mov RCX,QWORD PTR [RBX+16]
            cmp RDX,RCX
            ja .L_4432c9

            mov RSI,RCX
            sub RSI,RDX
            cmp ESI,1
            jbe .L_4432c9

            lea RDX,QWORD PTR [R12+4]
            cmp R15,RDX
            ja .L_4432c9

            cmp RCX,RDX
            jb .L_4432c9

            movzx ESI,BYTE PTR [R12+2]
            movzx EDI,BYTE PTR [R12+3]
            sub RCX,RDX
            shl ESI,8
            add ESI,EDI
            movzx EDI,SI
            lea R8D,DWORD PTR [RDI+RDI*1]
            cmp R8D,ECX
            ja .L_4432c9

            test SI,SI
            je .L_44309d

            cmp ECX,1
            jbe .L_4432c9

            lea R14,QWORD PTR [R12+6]
            lea EAX,DWORD PTR [RDI-1]
            mov R13,RDX
            lea RAX,QWORD PTR [R14+RAX*2]
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
.L_443380:

            movzx EDI,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            shl EDI,8
            add DI,AX
            je .L_4433d0

            movzx EDI,DI
            mov RSI,RBX
            add RDI,R12
            call .L_442c80

            test AL,AL
            jne .L_4433d0

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_443020

            movzx ECX,BYTE PTR [RBX+24]
            add EAX,1
            mov DWORD PTR [RBX+28],EAX
            test CL,CL
            je .L_4432d0

            mov BYTE PTR [R13],0
            mov BYTE PTR [R13+1],0
            mov R15,QWORD PTR [RBX+8]
.L_4433d0:

            cmp QWORD PTR [RSP],R14
            mov RAX,R15
            je .L_44309d

            cmp R14,R15
            jb .L_4432c9

            mov RAX,QWORD PTR [RBX+16]
            cmp R14,RAX
            ja .L_4432c9

            sub RAX,R14
            add R13,2
            add R14,2
            cmp EAX,1
            ja .L_443380

            jmp .L_4432c9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443410:

            movzx R13D,R13W
            mov RSI,RBX
            add R13,RBP
            mov RDX,R13
            mov RDI,R13
            call .L_442b40

            test AL,AL
            jne .L_443458
.L_443429:

            movzx EDX,BYTE PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+28]
.L_443430:

            cmp EAX,2
            ja .L_443020

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBX+28],EAX
            je .L_443020

            xor EAX,EAX
            mov WORD PTR [RBP+8],AX
            jmp .L_4430da
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443458:

            mov R15,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [R13+2]
            cmp RAX,R15
            jb .L_443429

            mov RSI,QWORD PTR [RBX+16]
            cmp RAX,RSI
            ja .L_443429

            mov RDX,RSI
            sub RDX,RAX
            cmp EDX,1
            jbe .L_443429

            lea R9,QWORD PTR [R13+4]
            cmp R15,R9
            ja .L_443429

            cmp RSI,R9
            jb .L_443429

            movzx EDX,BYTE PTR [R13+2]
            movzx ECX,BYTE PTR [R13+3]
            shl EDX,8
            add EDX,ECX
            mov RCX,RSI
            movzx EDI,DX
            sub RCX,R9
            lea R8D,DWORD PTR [RDI+RDI*1]
            cmp R8D,ECX
            ja .L_443429

            test DX,DX
            je .L_4430da

            cmp ECX,1
            jbe .L_443429

            lea EDX,DWORD PTR [RDI-1]
            lea R14,QWORD PTR [R13+6]
            lea RAX,QWORD PTR [RAX+RDX*2+4]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
.L_4434d0:

            movzx R12D,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            shl R12D,8
            add R12W,AX
            je .L_443640

            movzx R12D,R12W
            add R12,R13
            cmp R15,R12
            ja .L_443610

            cmp R12,RSI
            ja .L_443610

            mov RAX,RSI
            sub RAX,R12
            cmp EAX,1
            jbe .L_443610

            lea RDX,QWORD PTR [R12+2]
            cmp R15,RDX
            ja .L_443610

            cmp RSI,RDX
            jb .L_443610

            movzx EAX,BYTE PTR [R12]
            movzx ECX,BYTE PTR [R12+1]
            shl EAX,8
            add EAX,ECX
            mov RCX,RSI
            movzx EDI,AX
            sub RCX,RDX
            lea R8D,DWORD PTR [RDI+RDI*1]
            cmp R8D,ECX
            ja .L_443610

            test AX,AX
            je .L_443640

            cmp RDX,R15
            mov RAX,R15
            jb .L_443610

            cmp ECX,1
            jbe .L_443610

            lea RCX,QWORD PTR [R12+4]
            mov R15,RDX
            lea EDX,DWORD PTR [RDI-1]
            lea R8,QWORD PTR [RCX+RDX*2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443580:

            movzx EDX,BYTE PTR [R15]
            movzx EDI,BYTE PTR [R15+1]
            shl EDX,8
            add DX,DI
            je .L_4435df

            movzx EDX,DX
            add RDX,R12
            cmp RAX,RDX
            ja .L_443696

            cmp RDX,RSI
            ja .L_443696

            sub RSI,RDX
            cmp ESI,1
            jbe .L_443696

            movzx EAX,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDI
            cmp AX,2
            je .L_443688

            cmp AX,3
            je .L_4436c8

            cmp AX,1
            je .L_443688
.L_4435df:

            cmp R8,RCX
            je .L_443640

            mov RAX,QWORD PTR [RBX+8]
            cmp RCX,RAX
            jb .L_443610

            mov RSI,QWORD PTR [RBX+16]
            cmp RCX,RSI
            ja .L_443610

            mov RDX,RSI
            add R15,2
            sub RDX,RCX
            add RCX,2
            cmp EDX,1
            ja .L_443580

            nop
            nop
            nop
.L_443610:

            movzx EDX,BYTE PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+28]
.L_443617:

            cmp EAX,2
            ja .L_443020

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBX+28],EAX
            je .L_443430

            mov BYTE PTR [R9],0
            mov BYTE PTR [R9+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443640:

            cmp QWORD PTR [RSP+24],R14
            je .L_4430da

            mov R15,QWORD PTR [RBX+8]
            cmp R14,R15
            jb .L_443429

            mov RSI,QWORD PTR [RBX+16]
            cmp R14,RSI
            ja .L_443429

            mov RAX,RSI
            add R9,2
            sub RAX,R14
            add R14,2
            cmp EAX,1
            ja .L_4434d0

            jmp .L_443429
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443688:

            cmp ESI,3
            seta AL
            test AL,AL
            jne .L_4435df
.L_443696:

            mov EAX,DWORD PTR [RBX+28]
            movzx EDX,BYTE PTR [RBX+24]
            cmp EAX,2
            ja .L_443020

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBX+28],EAX
            je .L_443617

            mov BYTE PTR [R15],0
            mov BYTE PTR [R15+1],0
            jmp .L_4435df
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4436c8:

            cmp ESI,5
            jbe .L_443696

            lea RDI,QWORD PTR [RDX+4]
            mov RSI,RBX
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP],R9
            call .L_441b20

            test AL,AL
            mov R9,QWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            je .L_443696

            jmp .L_4435df
.L_4436fe:

            mov BYTE PTR [R15],0
            mov BYTE PTR [R15+1],0
            mov BYTE PTR [R15+2],0
            mov BYTE PTR [R15+3],0
.L_443711:

            cmp QWORD PTR [RSP],R13
            je .L_443023

            cmp R13,QWORD PTR [RBX+8]
            jb .L_443280

            mov RAX,QWORD PTR [RBX+16]
            cmp R13,RAX
            ja .L_443280

            sub RAX,R13
            add R15,4
            add R13,4
            cmp EAX,3
            jbe .L_443280

            jmp .L_443220
.L_44374b:

            nop
            nop
            nop
            nop
            nop
.L_443750:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_44375e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            cmp EDX,8
            ja .L_4437b0

            mov ECX,EDX
            mov R12D,EDX
            lea RDX,QWORD PTR [RIP+.L_4440a8]
            mov RBX,RDI
            mov RBP,RSI
            movsxd RAX,DWORD PTR [RDX+RCX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_443790:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_443c90

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4437b0:

            xor EAX,EAX
.L_4437b2:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4440a3

            add RSP,104
.L_4437ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4437d8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_443d70

            cmp AX,2
            jne .L_4437b0

            call .L_43d600

            xor EAX,EAX
            jmp .L_4437b2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443800:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4437b0

            call .L_43d810

            xor EAX,EAX
            jmp .L_4437b2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443820:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4437b0

            call .L_43dd10

            xor EAX,EAX
            jmp .L_4437b2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443848:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4437b0

            call .L_43e8c0

            xor EAX,EAX
            jmp .L_4437b2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443870:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_443e50

            cmp AX,3
            je .L_443f88

            cmp AX,1
            jne .L_4437b0

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea R13,QWORD PTR [RIP+.L_658760]
            mov QWORD PTR [RSP+24],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_439be0]
            cmovne R13,RDX
            movzx EDX,BYTE PTR [RDI+5]
            mov QWORD PTR [RSP+16],RAX
            movzx EAX,BYTE PTR [RDI+4]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_4437b0

            lea EAX,DWORD PTR [RDX-1]
            xor R12D,R12D
            lea R15,QWORD PTR [RIP+.L_658760]
            mov R14D,1
            add RAX,1
            mov QWORD PTR [RSP],RAX
            jmp .L_44391e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443910:

            add R12,1
            cmp QWORD PTR [RSP],R12
            je .L_4437b0
.L_44391e:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov R9D,R12D
            mov R10,QWORD PTR [RBP+8]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_443cd0

            cmp AX,2
            jne .L_443910

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_443910

            lea EAX,DWORD PTR [RDX-1]
            lea R8,QWORD PTR [R13+4]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R11,QWORD PTR [R13+RAX*2+10]
            nop
            nop
            nop
            nop
            nop
.L_443970:

            movzx EDX,BYTE PTR [R8+4]
            movzx EAX,BYTE PTR [R8+5]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            cmp EDX,R9D
            ja .L_443910

            movzx ESI,BYTE PTR [R8+2]
            movzx EAX,BYTE PTR [R8+3]
            movzx ECX,BYTE PTR [R8]
            shl ESI,8
            add ESI,EAX
            movzx EAX,BYTE PTR [R8+1]
            shl ECX,8
            movzx ESI,SI
            mov EDI,ESI
            add ECX,EAX
            movzx EAX,CX
            sub EDI,EAX
            add EDX,EDI
            cmp EDX,R9D
            jbe .L_443ca0

            lea EDX,DWORD PTR [RSI+1]
            cmp EAX,EDX
            jae .L_443ca0

            mov ESI,R14D
            shl ESI,CL
            mov ECX,EAX
            shr ECX,5
            test DWORD PTR [R10+RCX*4+116],ESI
            jne .L_4439fc

            mov ECX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4439e0:

            add ECX,1
            cmp EDX,ECX
            jbe .L_443ca0

            mov EAX,ECX
            mov ESI,R14D
            shr EAX,5
            shl ESI,CL
            test DWORD PTR [R10+RAX*4+116],ESI
            je .L_4439e0
.L_4439fc:

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,R9D
            jbe .L_443a19

            lea RDX,QWORD PTR [RBX+R12*2+6]
.L_443a19:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RSP+16]
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R15
            call .L_43b990

            jmp .L_443910
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443a48:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_443f78

            cmp AX,3
            je .L_443f68

            cmp AX,1
            jne .L_4437b0

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea R13,QWORD PTR [RIP+.L_658760]
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_439be0]
            cmovne R13,RDX
            movzx EDX,BYTE PTR [RDI+5]
            mov QWORD PTR [RSP+48],RAX
            movzx EAX,BYTE PTR [RDI+4]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_4437b0

            lea EAX,DWORD PTR [RDX-1]
            xor R12D,R12D
            lea R15,QWORD PTR [RIP+.L_658760]
            mov R14D,1
            add RAX,1
            mov QWORD PTR [RSP],RAX
            jmp .L_443afe
.L_443af0:

            add R12,1
            cmp QWORD PTR [RSP],R12
            je .L_4437b0
.L_443afe:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov EDI,R12D
            mov R8,QWORD PTR [RBP+8]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_443d20

            cmp AX,2
            jne .L_443af0

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_443af0

            lea EAX,DWORD PTR [RDX-1]
            lea RSI,QWORD PTR [R13+4]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R9,QWORD PTR [R13+RAX*2+10]
            nop
            nop
            nop
            nop
            nop
.L_443b50:

            movzx EDX,BYTE PTR [RSI+4]
            movzx EAX,BYTE PTR [RSI+5]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            cmp EDX,EDI
            ja .L_443af0

            movzx R10D,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            movzx ECX,BYTE PTR [RSI]
            shl R10D,8
            add R10D,EAX
            movzx EAX,BYTE PTR [RSI+1]
            shl ECX,8
            movzx R10D,R10W
            mov R11D,R10D
            add ECX,EAX
            movzx EAX,CX
            sub R11D,EAX
            add EDX,R11D
            cmp EDX,EDI
            jbe .L_443cb8

            lea EDX,DWORD PTR [R10+1]
            cmp EAX,EDX
            jae .L_443cb8

            mov R10D,EAX
            mov R11D,R14D
            shr R10D,5
            shl R11D,CL
            test DWORD PTR [R8+R10*4+116],R11D
            jne .L_443bdd

            mov ECX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_443bc0:

            add ECX,1
            cmp EDX,ECX
            jbe .L_443cb8

            mov EAX,ECX
            mov R10D,R14D
            shr EAX,5
            shl R10D,CL
            test DWORD PTR [R8+RAX*4+116],R10D
            je .L_443bc0
.L_443bdd:

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,EDI
            jbe .L_443bf9

            lea RDX,QWORD PTR [RBX+R12*2+6]
.L_443bf9:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RSP+48]
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R15
            call .L_43bfd0

            jmp .L_443af0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443c28:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4437b0

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            lea EDI,DWORD PTR [RAX+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            mov RAX,RDI
            add RDI,RBX
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            movzx EAX,BYTE PTR [RBX+3]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_443750

            jmp .L_4437b2
          .byte 0x66
          .byte 0x90
.L_443c90:

            call .L_43f0a0

            xor EAX,EAX
            jmp .L_4437b2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443ca0:

            add R8,6
            cmp R8,R11
            jne .L_443970

            jmp .L_443910
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443cb8:

            add RSI,6
            cmp R9,RSI
            jne .L_443b50

            jmp .L_443af0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443cd0:

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_443cef

            lea RDX,QWORD PTR [R13+R12*2+4]
.L_443cef:

            movzx ECX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            mov EDX,R14D
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl EDX,CL
            shl RAX,48
            shr RAX,53
            test DWORD PTR [R10+RAX*4+116],EDX
            jne .L_4439fc

            jmp .L_443910
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443d20:

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_443d3f

            lea RDX,QWORD PTR [R13+R12*2+4]
.L_443d3f:

            movzx ECX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            mov EDX,R14D
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl EDX,CL
            shl RAX,48
            shr RAX,53
            test DWORD PTR [R8+RAX*4+116],EDX
            jne .L_443bdd

            jmp .L_443af0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443d70:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea R13,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_658760]
            mov DWORD PTR [RSP+16],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RDI,R13
            cmovne RSI,RDX
            call .L_43a3a0

            jmp .L_443de8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443db0:

            cmp R8D,2
            jne .L_443e20

            mov ECX,DWORD PTR [RSP+36]
            mov R8D,1
            mov EAX,ECX
            movzx R9D,CX
            shl R8D,CL
            shr EAX,5
            and EAX,2047
            mov EDX,EAX
.L_443dd3:

            mov RDI,QWORD PTR [RBP+8]
            mov EAX,EDX
            test DWORD PTR [RDI+RAX*4+116],R8D
            jne .L_443e30
.L_443de0:

            mov RDI,R13
            call .L_43a5f0
.L_443de8:

            mov RDI,R13
            call .L_43a5b0

            test AL,AL
            je .L_4437b0

            mov R8D,DWORD PTR [RSP+16]
            cmp R8D,1
            jne .L_443db0

            mov RDI,R13
            call .L_434190

            movzx R9D,AX
            mov ECX,EAX
            mov EDX,R9D
            shl R8D,CL
            shr EDX,5
            jmp .L_443dd3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443e20:

            mov R8D,R12D
            xor EDX,EDX
            xor R9D,R9D
            jmp .L_443dd3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443e30:

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl ESI,8
            add ESI,EAX
            add ESI,R9D
            movzx ESI,SI
            call .L_43a160

            jmp .L_443de0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443e50:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [RSI+8]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a410

            test AL,AL
            je .L_4437b0

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            lea R12,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_4346a0]
            cmovne R12,RDX
            movzx EDX,BYTE PTR [RBX+7]
            mov QWORD PTR [RSP+16],RAX
            movzx EAX,BYTE PTR [RBX+6]
            mov QWORD PTR [RSP+24],R12
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_4437b0

            lea RAX,QWORD PTR [RSP+16]
            lea R14D,DWORD PTR [RDX-1]
            lea R13,QWORD PTR [RIP+.L_658760]
            xor R15D,R15D
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RBX+8]
            add R14,1
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443ef8:

            mov RSI,QWORD PTR [RBP+8]
            mov EDX,R15D
            mov RDI,R12
            call .L_43a950

            test AL,AL
            je .L_443f56

            movzx EAX,BYTE PTR [RBX+6]
            movzx EDX,BYTE PTR [RBX+7]
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+8]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RDI+R15*2]
            movzx EAX,AX
            cmp EAX,R15D
            mov RAX,RDX
            mov RDX,R13
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            mov RDX,QWORD PTR [RSP]
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R13
            call .L_43b990
.L_443f56:

            add R15,1
            cmp R14,R15
            jne .L_443ef8

            jmp .L_4437b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443f68:

            call .L_43d0b0

            xor EAX,EAX
            jmp .L_4437b2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443f78:

            call .L_43c7d0

            xor EAX,EAX
            jmp .L_4437b2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443f88:

            movzx EAX,BYTE PTR [RDI+6]
            movzx EDX,BYTE PTR [RDI+7]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [RSI+8]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a410

            mov EDX,EAX
            xor EAX,EAX
            test DL,DL
            je .L_4437b2

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            movzx R12D,BYTE PTR [RBX+4]
            movzx R14D,BYTE PTR [RBX+5]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            movzx R13D,AX
            ja .L_444050
.L_443fdf:

            shl R12D,8
            movzx EAX,R14B
            add EAX,R12D
            test AX,AX
            movzx EDX,AX
            je .L_4437b0

            lea EAX,DWORD PTR [R13+R13*1]
            sub EDX,1
            lea R12,QWORD PTR [RBX+RAX*1+8]
            lea RAX,QWORD PTR [RBX+RAX*1+12]
            lea RBX,QWORD PTR [RAX+RDX*4]
            nop
            nop
            nop
            nop
.L_444010:

            movzx ESI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [RBP+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_444042

            mov RDX,QWORD PTR [RBP+16]
            test RDX,RDX
            je .L_444042

            sub EAX,1
            mov RDI,RBP
            mov DWORD PTR [RBP+24],EAX
            call RDX

            add DWORD PTR [RBP+24],1
.L_444042:

            add R12,4
            cmp RBX,R12
            jne .L_444010

            jmp .L_4437b0
.L_444050:

            lea EAX,DWORD PTR [R13-2]
            lea R15,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RBX+RAX*2+10]
            mov QWORD PTR [RSP],RAX
.L_444061:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            mov RSI,QWORD PTR [RBP+8]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            call .L_43a410

            test AL,AL
            je .L_4437b0

            add R15,2
            cmp QWORD PTR [RSP],R15
            jne .L_444061

            jmp .L_443fdf
.L_4440a3:

            call __stack_chk_fail@PLT
.L_4440a8:
          .long .L_4437b0-.L_4440a8
          .long .L_4437d8-.L_4440a8
          .long .L_443800-.L_4440a8
          .long .L_443820-.L_4440a8
          .long .L_443848-.L_4440a8
          .long .L_443870-.L_4440a8
          .long .L_443a48-.L_4440a8
          .long .L_443c28-.L_4440a8
          .long .L_443790-.L_4440a8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4440d0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_4440e1:

            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+160]
            mov RDI,QWORD PTR [RAX+32]
            call .L_43d5a0

            movzx EBX,BYTE PTR [RAX]
            mov R15,RAX
            movzx EAX,BYTE PTR [RAX+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R15+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            je .L_444183

            movzx ESI,CX
            movzx EBX,BX
            xor R14D,R14D
            lea R12D,DWORD PTR [RSI-1]
            lea RBP,QWORD PTR [RIP+.L_658760]
            add R12,1
            jmp .L_444142
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444138:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_444142:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_444157

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_444157:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R13
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            add R14,1
            call .L_443750

            cmp R12,R14
            jne .L_444138
.L_444183:

            add RSP,8
.L_444187:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_444194:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4441a0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_4441ae:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp EDX,8
            ja .L_444250

            lea RCX,QWORD PTR [RIP+.L_444810]
            mov EDX,EDX
            mov RBX,RDI
            mov RBP,RSI
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x90
.L_4441e0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            mov EAX,0
            je .L_444530
.L_4441fb:

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            jne .L_44480a

            add RSP,72
.L_444213:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_444220:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_444660

            cmp AX,3
            je .L_4445f0

            cmp AX,1
            je .L_444540

            nop
            nop
            nop
            nop
            nop
            nop
.L_444250:

            xor EAX,EAX
            jmp .L_4441fb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444258:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_444270

            cmp AX,2
            jne .L_444250
.L_444270:

            xor EAX,EAX
            cmp DWORD PTR [RBP+16],1
            jne .L_4441fb
.L_444278:

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            mov RAX,QWORD PTR [RBP+8]
            cmovne RDI,RBX
            mov ESI,DWORD PTR [RAX]
            call .L_43a230

            cmp EAX,-1
            setne AL
            jmp .L_4441fb
          .byte 0x90
.L_4442b0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_444250

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            lea EDI,DWORD PTR [RAX+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            mov RAX,RDI
            add RDI,RBX
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            movzx EAX,BYTE PTR [RBX+3]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_4441a0

            jmp .L_4441fb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444318:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_444778

            cmp AX,3
            je .L_444738

            cmp AX,1
            jne .L_444250

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            mov RAX,QWORD PTR [RSI+8]
            cmovne RDI,RDX
            mov ESI,DWORD PTR [RAX]
            call .L_43a230

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_444390

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+6]
.L_444390:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],0
            shl EAX,8
            add EAX,EDX
            mov RDX,RSP
            movzx R8D,AX
            add RBX,R8
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_433e00]
            cmovne RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_43bb50

            jmp .L_4441fb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4443d8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_444250

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov R12,QWORD PTR [RSI+8]
            shl EAX,8
            mov ESI,DWORD PTR [R12]
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_4441fb

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_444449

            lea RAX,QWORD PTR [RBX+RCX*2+6]
.L_444449:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_658760]
            mov EDI,DWORD PTR [RBP+16]
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne RSI,RBX
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_444250

            lea EAX,DWORD PTR [RDX-1]
            lea R10D,DWORD PTR [RDI-2]
            lea RCX,QWORD PTR [RSI+2]
            lea R8,QWORD PTR [RIP+.L_658760]
            lea R9,QWORD PTR [RSI+RAX*2+4]
            add R10,2
            jmp .L_4444b5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4444a8:

            add RCX,2
            cmp R9,RCX
            je .L_444250
.L_4444b5:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RSI
            test AX,AX
            cmove RDX,R8
            movzx EAX,BYTE PTR [RDX+2]
            movzx R11D,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,R11D
            movzx EAX,AX
            cmp EDI,EAX
            jne .L_4444a8

            cmp EDI,1
            jbe .L_444522

            add RDX,4
            mov EBX,1
.L_4444f2:

            cmp EAX,EBX
            mov RBP,R8
            cmova RBP,RDX
            movzx R11D,BYTE PTR [RBP]
            movzx EBP,BYTE PTR [RBP+1]
            shl R11D,8
            add R11D,EBP
            movzx R11D,R11W
            cmp DWORD PTR [R12+RBX*4],R11D
            jne .L_4444a8

            add RBX,1
            add RDX,2
            cmp R10,RBX
            jne .L_4444f2
.L_444522:

            mov EAX,1
            jmp .L_4441fb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444530:

            cmp DWORD PTR [RSI+16],1
            jne .L_4441fb

            jmp .L_444278
          .byte 0x90
.L_444540:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            mov RAX,QWORD PTR [RSI+8]
            cmovne RDI,RDX
            mov ESI,DWORD PTR [RAX]
            call .L_43a230

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_44458e

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+6]
.L_44458e:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RSP+16]
            movzx R8D,AX
            add RBX,R8
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_433e00]
            cmovne RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_43c2d0

            jmp .L_4441fb
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4445f0:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            lea RCX,QWORD PTR [RDI+RAX*2+4]
            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            lea EAX,DWORD PTR [RSI+RSI*1+2]
            add RAX,RCX
            cmp BYTE PTR [RBP+20],0
            movzx EDI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            je .L_444638

            shl EDI,8
            add EDI,EAX
            xor EAX,EAX
            or DI,DX
            jne .L_4441fb
.L_444638:

            xor EAX,EAX
            cmp ESI,DWORD PTR [RBP+16]
            jne .L_4441fb

            lea RDX,QWORD PTR [RCX+4]
            lea RDI,QWORD PTR [RBP+8]
            lea RCX,QWORD PTR [RIP+.L_4345e0]
            mov R8,RBX
            call .L_439d50

            jmp .L_4441fb
          .byte 0x90
.L_444660:

            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            lea R15,QWORD PTR [RIP+.L_658760]
            mov R12,R15
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            movzx EAX,BYTE PTR [RDI+6]
            cmovne R15,RDX
            movzx EDX,BYTE PTR [RDI+7]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+9]
            movzx R13D,AX
            add R13,RDI
            test AX,AX
            movzx EAX,BYTE PTR [RDI+8]
            cmove R13,R12
            shl EAX,8
            add EAX,EDX
            movzx R14D,AX
            add R14,RDI
            test AX,AX
            mov RAX,QWORD PTR [RSI+8]
            mov RDI,R13
            cmove R14,R12
            mov ESI,DWORD PTR [RAX]
            call .L_43a6b0

            movzx EDX,BYTE PTR [RBX+10]
            movzx ECX,BYTE PTR [RBX+11]
            shl EDX,8
            add EDX,ECX
            mov RCX,R12
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_4446e6

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+12]
.L_4446e6:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+24],R15
            mov QWORD PTR [RSP+32],R13
            mov QWORD PTR [RSP+40],R14
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RSP+16]
            movzx R8D,AX
            add RBX,R8
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_434650]
            cmovne RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_43c2d0

            jmp .L_4441fb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444738:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            mov ESI,DWORD PTR [RSI+16]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ESI,EDX
            jne .L_4441fb

            lea RDX,QWORD PTR [RDI+8]
            lea RCX,QWORD PTR [RIP+.L_4345e0]
            lea RDI,QWORD PTR [RBP+8]
            mov R8,RBX
            call .L_439d50

            jmp .L_4441fb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444778:

            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            lea R12,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RAX,QWORD PTR [RSI+8]
            cmovne R12,RDX
            mov RDI,R12
            mov ESI,DWORD PTR [RAX]
            call .L_43a6b0

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_4447c9

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+8]
.L_4447c9:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],R12
            shl EAX,8
            add EAX,EDX
            mov RDX,RSP
            movzx R8D,AX
            add RBX,R8
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_434650]
            cmovne RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_43bb50

            jmp .L_4441fb
.L_44480a:

            call __stack_chk_fail@PLT
.L_44480f:
          .byte 0x90
.L_444810:
          .long .L_444250-.L_444810
          .long .L_444258-.L_444810
          .long .L_4441e0-.L_444810
          .long .L_4441e0-.L_444810
          .long .L_4443d8-.L_444810
          .long .L_444318-.L_444810
          .long .L_444220-.L_444810
          .long .L_4442b0-.L_444810
          .long .L_4441e0-.L_444810
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_444840:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,40
.L_44484c:

            movzx EDX,BYTE PTR [RDI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_444950

            cmp AX,3
            je .L_4448b0

            cmp AX,1
            je .L_4448a0

            xor EAX,EAX
.L_444880:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44495a

            add RSP,40
.L_444898:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4448a0:

            call .L_43bda0

            jmp .L_444880
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4448b0:

            mov RDX,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+7]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+6]
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov EDX,EAX
            xor EAX,EAX
            cmp EDX,-1
            je .L_444880

            movzx ESI,BYTE PTR [RBX+2]
            movzx EAX,BYTE PTR [RBX+3]
            mov R9,RSP
            movzx ECX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov RDI,RBP
            mov QWORD PTR [RSP+8],RBX
            shl ESI,8
            add ESI,EAX
            lea RAX,QWORD PTR [RIP+.L_4345e0]
            shl ECX,8
            movzx ESI,SI
            add ECX,EDX
            lea RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP],RAX
            lea EAX,DWORD PTR [RSI+RSI*1]
            movzx ECX,CX
            lea R8,QWORD PTR [RBX+RAX*1+6]
            call .L_434970

            jmp .L_444880
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_444950:

            call .L_43be90

            jmp .L_444880
.L_44495a:

            call __stack_chk_fail@PLT
.L_44495f:

            nop
.L_444960:

            push R12
            lea RCX,QWORD PTR [RIP+.L_444c50]
            push RBP
            mov RBP,RSI
            lea RSI,QWORD PTR [RIP+.L_658760]
            push RBX
            mov RBX,RDI
.L_444978:

            cmp EDX,8
            ja .L_4449b0

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444990:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_444b90

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4449b0:

            xor EAX,EAX
.L_4449b2:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4449c0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_444ba0

            cmp AX,2
            jne .L_4449b0

            mov RDX,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RBX+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_4449b2

            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_4449b2

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            mov RDI,RBP
            movzx ESI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43b8a0

            mov EAX,1
            jmp .L_4449b2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444a68:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4449b0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_444a85:

            pop RBP
            pop R12
            jmp .L_43db50
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444a90:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4449b0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_43e130
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444ab8:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4449b0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_43ef60
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444ae0:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_444840
          .byte 0x90
.L_444af0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_444c40

            cmp AX,3
            je .L_444c30

            cmp AX,1
            jne .L_4449b0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_43c6d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444b30:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_4449b0

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov EDI,EDX
            shl EAX,16
            shl EDI,24
            lea EDX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            movzx EDI,BYTE PTR [RBX+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RBX
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RBX+2]
            cmove RAX,RSI
            mov RBX,RAX
            shl EDX,8
            add EDX,EDI
            movzx EDX,DX
            jmp .L_444978
          .byte 0x90
.L_444b90:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_444b97:

            pop RBP
            pop R12
            jmp .L_43f340
          .byte 0x90
.L_444ba0:

            mov RDX,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov EAX,DWORD PTR [RDX+180]
            mov RSI,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RBX+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov R12D,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RBX+2]
            mov ESI,R12D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov EDX,EAX
            xor EAX,EAX
            cmp EDX,-1
            je .L_4449b2

            movzx EAX,BYTE PTR [RBX+4]
            movzx EBX,BYTE PTR [RBX+5]
            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            shl EAX,8
            add EBX,EAX
            add EBX,R12D
            movzx EBX,BX
            mov ESI,EBX
            call .L_43b640

            mov RDI,QWORD PTR [RBP+24]
            mov ESI,EBX
            call .L_402f10

            mov EAX,1
            jmp .L_4449b2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444c30:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_444c37:

            pop RBP
            pop R12
            jmp .L_43d310
          .byte 0x90
.L_444c40:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_43cf30
.L_444c4f:
          .byte 0x90
.L_444c50:
          .long .L_4449b0-.L_444c50
          .long .L_4449c0-.L_444c50
          .long .L_444a68-.L_444c50
          .long .L_444a90-.L_444c50
          .long .L_444ab8-.L_444c50
          .long .L_444ae0-.L_444c50
          .long .L_444af0-.L_444c50
          .long .L_444b30-.L_444c50
          .long .L_444990-.L_444c50
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_444c80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EBP,ESI
            sub RSP,24
.L_444c93:

            mov RAX,QWORD PTR [RDI+16]
            mov RAX,QWORD PTR [RAX+160]
            mov RDI,QWORD PTR [RAX+32]
            call .L_43d5a0

            mov R15,RAX
            mov EAX,DWORD PTR [RBX+60]
            mov DWORD PTR [RSP+8],EAX
            mov EAX,DWORD PTR [RBX+208]
            mov DWORD PTR [RBX+208],EBP
            movzx EDX,BYTE PTR [R15+3]
            mov DWORD PTR [RSP+12],EAX
            movzx EAX,BYTE PTR [R15+2]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            test AL,16
            jne .L_444ef0
.L_444cdb:

            mov EDI,DWORD PTR [RBX]
            mov DWORD PTR [RBX+60],EAX
            mov QWORD PTR [RBX+88],RBX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            cmp EDI,1
            mov DWORD PTR [RBX+96],EAX
            je .L_444ec8

            movzx EDX,BYTE PTR [RBX+40]
            mov BYTE PTR [RBX+100],0
.L_444d13:

            mov ESI,DWORD PTR [RBX+36]
            mov BYTE PTR [RBX+101],DL
            mov QWORD PTR [RBX+152],RBX
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov DWORD PTR [RBX+104],ESI
            mov DWORD PTR [RBX+160],EAX
            mov BYTE PTR [RBX+164],1
            mov BYTE PTR [RBX+165],1
            mov DWORD PTR [RBX+168],4294967295
            movzx R12D,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl R12D,8
            add R12D,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx R12D,R12W
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx R9D,CX
            je .L_444f20

            lea R13D,DWORD PTR [R9-1]
            xor R14D,R14D
            lea RBP,QWORD PTR [RIP+.L_658760]
            add R13,1
            jmp .L_444dc7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444db0:

            add R14,1
            cmp R13,R14
            je .L_444eb8

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_444dc7:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_444ddc

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_444ddc:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,R12D
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            call .L_444960

            test AL,AL
            je .L_444db0

            mov EDI,DWORD PTR [RBX]
            mov ESI,DWORD PTR [RBX+36]
            mov EAX,1
.L_444e0e:

            mov ECX,DWORD PTR [RSP+12]
            cmp EDI,1
            mov QWORD PTR [RBX+88],RBX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov DWORD PTR [RBX+208],ECX
            mov ECX,DWORD PTR [RSP+8]
            mov DWORD PTR [RBX+60],ECX
            mov DWORD PTR [RBX+96],ECX
            je .L_444ee0

            movzx EDX,BYTE PTR [RBX+40]
            mov BYTE PTR [RBX+100],0
.L_444e52:

            mov DWORD PTR [RBX+104],ESI
            mov ESI,DWORD PTR [RSP+8]
            mov BYTE PTR [RBX+101],DL
            mov QWORD PTR [RBX+152],RBX
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov DWORD PTR [RBX+160],ESI
            mov BYTE PTR [RBX+164],1
            mov BYTE PTR [RBX+165],1
            mov DWORD PTR [RBX+168],4294967295
            add RSP,24
.L_444ea6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444eb8:

            mov EDI,DWORD PTR [RBX]
            mov ESI,DWORD PTR [RBX+36]
            xor EAX,EAX
            jmp .L_444e0e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444ec8:

            mov BYTE PTR [RBX+100],1
            mov EDX,1
            jmp .L_444d13
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444ee0:

            mov BYTE PTR [RBX+100],1
            mov EDX,1
            jmp .L_444e52
          .byte 0x66
          .byte 0x90
.L_444ef0:

            movzx EDX,BYTE PTR [R15+4]
            movzx ECX,BYTE PTR [R15+5]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea RCX,QWORD PTR [R15+RDX*2+6]
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            shl EDX,16
            add EAX,EDX
            jmp .L_444cdb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444f20:

            xor EAX,EAX
            jmp .L_444e0e
.L_444f27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444f30:

            push R14
            lea RCX,QWORD PTR [RIP+.L_4452dc]
            push R13
            push R12
            push RBP
            mov RBP,RSI
            lea RSI,QWORD PTR [RIP+.L_658760]
            push RBX
            mov RBX,RDI
.L_444f4c:

            cmp EDX,9
            ja .L_444f80

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444f60:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_4451b8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444f80:

            xor EAX,EAX
.L_444f82:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444f90:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_445220

            cmp AX,2
            jne .L_444f80

            mov R13,QWORD PTR [RBP+24]
            movzx EDX,BYTE PTR [RBX+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov EAX,DWORD PTR [R13+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R13+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov R14D,EAX
            xor EAX,EAX
            cmp R14D,-1
            je .L_444f82

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp R14D,EDX
            jae .L_444f82

            movzx EDI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            imul R14D,EAX
            mov R9,QWORD PTR [R13+216]
            mov EDX,DWORD PTR [RBP+32]
            mov RSI,QWORD PTR [RBP+8]
            lea RDI,QWORD PTR [RBX+4]
            mov RCX,RBX
            lea R8,QWORD PTR [RBX+R14*2+8]
            add R9,R12
            call .L_43f610

            add DWORD PTR [R13+180],1
            mov EAX,1
            jmp .L_444f82
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445068:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_445208

            cmp AX,2
            jne .L_444f80

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_44508f:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_440220
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4450a0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_444f80

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_440470
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4450d0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_444f80

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_4408a0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445100:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_444f80

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_440a70
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445130:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_444f80

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_440cd0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445160:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_444840
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445178:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_4452c8

            cmp AX,3
            je .L_4452b0

            cmp AX,1
            jne .L_444f80

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_43c6d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4451b8:

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov EDI,EDX
            shl EAX,16
            shl EDI,24
            lea EDX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            movzx EDI,BYTE PTR [RBX+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RBX
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RBX+2]
            cmove RAX,RSI
            mov RBX,RAX
            shl EDX,8
            add EDX,EDI
            movzx EDX,DX
            jmp .L_444f4c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445208:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_44520f:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_43ffa0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445220:

            mov R12,QWORD PTR [RBP+24]
            movzx EDX,BYTE PTR [RBX+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov EAX,DWORD PTR [R12+180]
            lea R13,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R12+200]
            shl R13,2
            mov ESI,DWORD PTR [RAX+R13*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_43a230

            mov EDX,EAX
            xor EAX,EAX
            cmp EDX,-1
            je .L_444f82

            mov R9,QWORD PTR [R12+216]
            mov EDX,DWORD PTR [RBP+32]
            lea RDI,QWORD PTR [RBX+4]
            mov RSI,QWORD PTR [RBP+8]
            lea R8,QWORD PTR [RBX+6]
            mov RCX,RBX
            add R9,R13
            call .L_43f610

            add DWORD PTR [R12+180],1
            mov EAX,1
            jmp .L_444f82
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4452b0:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_4452b7:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_43d310
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4452c8:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_43cf30
.L_4452db:
          .byte 0x90
.L_4452dc:
          .long .L_444f80-.L_4452dc
          .long .L_444f90-.L_4452dc
          .long .L_445068-.L_4452dc
          .long .L_4450a0-.L_4452dc
          .long .L_4450d0-.L_4452dc
          .long .L_445100-.L_4452dc
          .long .L_445130-.L_4452dc
          .long .L_445160-.L_4452dc
          .long .L_445178-.L_4452dc
          .long .L_444f60-.L_4452dc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_445310:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EBP,ESI
            sub RSP,24
.L_445323:

            mov RAX,QWORD PTR [RDI+16]
            mov RAX,QWORD PTR [RAX+160]
            mov RDI,QWORD PTR [RAX+40]
            call .L_43d5a0

            mov R15,RAX
            mov EAX,DWORD PTR [RBX+60]
            mov DWORD PTR [RSP+8],EAX
            mov EAX,DWORD PTR [RBX+208]
            mov DWORD PTR [RBX+208],EBP
            movzx EDX,BYTE PTR [R15+3]
            mov DWORD PTR [RSP+12],EAX
            movzx EAX,BYTE PTR [R15+2]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            test AL,16
            jne .L_445580
.L_44536b:

            mov EDI,DWORD PTR [RBX]
            mov DWORD PTR [RBX+60],EAX
            mov QWORD PTR [RBX+88],RBX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            cmp EDI,1
            mov DWORD PTR [RBX+96],EAX
            je .L_445558

            movzx EDX,BYTE PTR [RBX+40]
            mov BYTE PTR [RBX+100],0
.L_4453a3:

            mov ESI,DWORD PTR [RBX+36]
            mov BYTE PTR [RBX+101],DL
            mov QWORD PTR [RBX+152],RBX
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov DWORD PTR [RBX+104],ESI
            mov DWORD PTR [RBX+160],EAX
            mov BYTE PTR [RBX+164],1
            mov BYTE PTR [RBX+165],1
            mov DWORD PTR [RBX+168],4294967295
            movzx R12D,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl R12D,8
            add R12D,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx R12D,R12W
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx R9D,CX
            je .L_4455b0

            lea R13D,DWORD PTR [R9-1]
            xor R14D,R14D
            lea RBP,QWORD PTR [RIP+.L_658760]
            add R13,1
            jmp .L_445457
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445440:

            add R14,1
            cmp R13,R14
            je .L_445548

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_445457:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_44546c

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_44546c:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,R12D
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            call .L_444f30

            test AL,AL
            je .L_445440

            mov EDI,DWORD PTR [RBX]
            mov ESI,DWORD PTR [RBX+36]
            mov EAX,1
.L_44549e:

            mov ECX,DWORD PTR [RSP+12]
            cmp EDI,1
            mov QWORD PTR [RBX+88],RBX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov DWORD PTR [RBX+208],ECX
            mov ECX,DWORD PTR [RSP+8]
            mov DWORD PTR [RBX+60],ECX
            mov DWORD PTR [RBX+96],ECX
            je .L_445570

            movzx EDX,BYTE PTR [RBX+40]
            mov BYTE PTR [RBX+100],0
.L_4454e2:

            mov DWORD PTR [RBX+104],ESI
            mov ESI,DWORD PTR [RSP+8]
            mov BYTE PTR [RBX+101],DL
            mov QWORD PTR [RBX+152],RBX
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov DWORD PTR [RBX+160],ESI
            mov BYTE PTR [RBX+164],1
            mov BYTE PTR [RBX+165],1
            mov DWORD PTR [RBX+168],4294967295
            add RSP,24
.L_445536:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445548:

            mov EDI,DWORD PTR [RBX]
            mov ESI,DWORD PTR [RBX+36]
            xor EAX,EAX
            jmp .L_44549e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_445558:

            mov BYTE PTR [RBX+100],1
            mov EDX,1
            jmp .L_4453a3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445570:

            mov BYTE PTR [RBX+100],1
            mov EDX,1
            jmp .L_4454e2
          .byte 0x66
          .byte 0x90
.L_445580:

            movzx EDX,BYTE PTR [R15+4]
            movzx ECX,BYTE PTR [R15+5]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea RCX,QWORD PTR [R15+RDX*2+6]
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            shl EDX,16
            add EAX,EDX
            jmp .L_44536b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4455b0:

            xor EAX,EAX
            jmp .L_44549e
.L_4455b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4455c0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            mov QWORD PTR [RSP+48],RDI
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_445a4b

            cmp AX,3
            je .L_4458fb

            cmp AX,1
            je .L_44560d
.L_4455fc:

            add RSP,104
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_44560d:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            mov RSI,RDI
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RSI
            mov RSI,QWORD PTR [R14+16]
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_4455fc

            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+64],0
            lea RDI,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+72],RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445670:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+64]
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp EAX,ESI
            jbe .L_445692

            mov RAX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RAX+RSI*2+6]
.L_445692:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+48]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDX,RAX
            movzx ECX,BYTE PTR [RDX]
            mov RDI,RDX
            mov QWORD PTR [RSP+32],RDX
            movzx EAX,BYTE PTR [RDI+1]
            mov EDX,ECX
            shl EDX,8
            add EDX,EAX
            test DX,DX
            movzx ESI,DX
            je .L_4458d3

            lea EDX,DWORD PTR [RSI-1]
            add RDI,2
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+56],RDI
            mov R13,R14
            lea RSI,QWORD PTR [RDX+1]
            mov EDX,EAX
            mov EAX,ECX
            mov QWORD PTR [RSP+40],RSI
            nop
            nop
            nop
            nop
            nop
.L_445700:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+56]
            shl EAX,8
            add EAX,EDX
            lea RCX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            lea RDX,QWORD PTR [RSI+RDI*2]
            cmp EAX,EDI
            mov RAX,RDX
            mov RDX,RCX
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+32]
            test AX,AX
            cmove RDX,RCX
            xor R15D,R15D
            lea RSI,QWORD PTR [RDX+4]
            movzx EBX,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            mov QWORD PTR [RSP],RSI
            movzx ESI,BYTE PTR [RDX+3]
            shl EBX,8
            shl EAX,8
            add EBX,ESI
            add AX,CX
            movzx EDI,BX
            mov DWORD PTR [RSP+8],EDI
            je .L_4457a6

            movzx ECX,AX
            mov RBP,QWORD PTR [R13+16]
            cmp ECX,1
            lea R15D,DWORD PTR [RCX+RCX*1-2]
            je .L_4457a6

            sub ECX,2
            lea R14,QWORD PTR [RDX+4]
            lea R12,QWORD PTR [RDX+RCX*2+6]
            nop
.L_445790:

            xor EDX,EDX
            mov RSI,R14
            mov RDI,RBP
            add R14,2
            call .L_4345c0

            cmp R12,R14
            jne .L_445790
.L_4457a6:

            test BX,BX
            je .L_4458ad

            mov EAX,DWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            sub EAX,1
            lea R14,QWORD PTR [RSI+R15*1+2]
            lea RAX,QWORD PTR [RSI+RAX*4+6]
            add R15,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4457d0:

            mov ECX,DWORD PTR [R13+8360]
            movzx EBX,BYTE PTR [R14]
            movzx EBP,BYTE PTR [R14+1]
            test ECX,ECX
            je .L_4458a0

            cmp QWORD PTR [R13+40],0
            je .L_4458a0

            mov R12,QWORD PTR [R13+32]
            call .L_4313a0

            cmp R12,RAX
            je .L_4458a0

            shl EBX,8
            movzx ECX,BPL
            mov R12D,1
            add ECX,EBX
            movzx EBP,CX
            shl R12D,CL
            mov EAX,EBP
            shr EAX,5
            lea RBX,QWORD PTR [R13+RAX*4]
            test DWORD PTR [RBX+164],R12D
            jne .L_4458a0

            mov R8,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [R13+24]
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4313a0

            sub DWORD PTR [R13+8360],1
            mov QWORD PTR [R13+24],RAX
            mov ESI,EBP
            mov QWORD PTR [R13+16],RAX
            mov QWORD PTR [R13+8],RAX
            mov RDI,R13
            call QWORD PTR [R13+40]

            add DWORD PTR [R13+8360],1
            cmp BYTE PTR [R13+160],0
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R13+8],R8
            mov QWORD PTR [R13+16],RCX
            mov QWORD PTR [R13+24],RDX
            jne .L_4458a0

            or DWORD PTR [RBX+164],R12D
            nop
            nop
            nop
            nop
.L_4458a0:

            add R14,4
            cmp R14,R15
            jne .L_4457d0
.L_4458ad:

            add QWORD PTR [RSP+24],1
            mov RAX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+40],RAX
            je .L_4458d0

            mov RDI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            jmp .L_445700
.L_4458d0:

            mov R14,R13
.L_4458d3:

            add QWORD PTR [RSP+64],1
            mov RAX,QWORD PTR [RSP+64]
            cmp QWORD PTR [RSP+72],RAX
            je .L_4455fc

            mov RSI,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RSI+4]
            movzx EDX,BYTE PTR [RSI+5]
            jmp .L_445670
.L_4458fb:

            mov RBX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [R14+16]
            lea RDI,QWORD PTR [RIP+.L_658760]
            movzx EAX,BYTE PTR [RBX+6]
            movzx EDX,BYTE PTR [RBX+7]
            lea R15,QWORD PTR [RBX+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            mov RSI,RBX
            movzx EBX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RSI+5]
            shl EAX,8
            add EAX,EDX
            shl EBX,8
            movzx EDX,AX
            test AX,AX
            lea EDI,DWORD PTR [RDX+RDX*1]
            mov QWORD PTR [RSP+8],RDI
            lea EDI,DWORD PTR [RBX+RCX*1]
            movzx ESI,DI
            mov WORD PTR [RSP],DI
            mov DWORD PTR [RSP+16],ESI
            jne .L_445d7b
.L_44596b:

            cmp WORD PTR [RSP],0
            je .L_4455fc

            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RSP+16]
            lea R13,QWORD PTR [R15+RAX*1+2]
            lea ECX,DWORD PTR [RDI-1]
            lea RAX,QWORD PTR [R15+RAX*1+6]
            lea R12,QWORD PTR [RAX+RCX*4]
.L_445990:

            mov EAX,DWORD PTR [R14+8360]
            movzx EBX,BYTE PTR [R13]
            movzx EBP,BYTE PTR [R13+1]
            test EAX,EAX
            je .L_445a39

            cmp QWORD PTR [R14+40],0
            je .L_445a39

            mov R15,QWORD PTR [R14+32]
            call .L_4313a0

            cmp R15,RAX
            je .L_445a39

            shl EBX,8
            movzx ECX,BPL
            mov EDX,1
            add ECX,EBX
            movzx EBX,CX
            shl EDX,CL
            mov EAX,EBX
            shr EAX,5
            test DWORD PTR [R14+RAX*4+164],EDX
            jne .L_445a39

            mov RDX,QWORD PTR [R14+8]
            mov R15,QWORD PTR [R14+16]
            mov RBP,QWORD PTR [R14+24]
            mov QWORD PTR [RSP],RDX
            call .L_4313a0

            sub DWORD PTR [R14+8360],1
            mov ESI,EBX
            mov RDI,R14
            mov QWORD PTR [R14+24],RAX
            mov QWORD PTR [R14+16],RAX
            mov QWORD PTR [R14+8],RAX
            call QWORD PTR [R14+40]

            mov RDX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [R14+48]
            mov ESI,EBX
            add DWORD PTR [R14+8360],1
            mov QWORD PTR [R14+16],R15
            mov QWORD PTR [R14+24],RBP
            mov QWORD PTR [R14+8],RDX
            call .L_43a160
.L_445a39:

            add R13,4
            cmp R12,R13
            jne .L_445990

            jmp .L_4455fc
.L_445a4b:

            mov R15,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [RSI+16]
            mov RBX,RDI
            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            movzx EAX,BYTE PTR [R15+6]
            cmove RDX,RBX
            mov QWORD PTR [RSP+80],RDX
            movzx EDX,BYTE PTR [R15+7]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_4455fc

            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+40],RBX
            lea RDI,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+88],RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445ae0:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+72]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+40]
            movzx EAX,AX
            cmp EAX,ESI
            jbe .L_445b00

            mov RAX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RAX+RSI*2+8]
.L_445b00:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+48]
            test AX,AX
            cmove RDX,QWORD PTR [RSP+40]
            movzx ECX,BYTE PTR [RDX]
            mov RDI,RDX
            mov QWORD PTR [RSP+32],RDX
            movzx EAX,BYTE PTR [RDI+1]
            mov EDX,ECX
            shl EDX,8
            add EDX,EAX
            test DX,DX
            movzx ESI,DX
            je .L_445d53

            lea EDX,DWORD PTR [RSI-1]
            add RDI,2
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+64],RDI
            mov R13,R14
            lea RSI,QWORD PTR [RDX+1]
            mov EDX,EAX
            mov EAX,ECX
            mov QWORD PTR [RSP+56],RSI
            nop
            nop
            nop
            nop
.L_445b68:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+64]
            movzx EAX,AX
            cmp EAX,ESI
            lea RDX,QWORD PTR [RDX+RSI*2]
            mov RAX,RDX
            mov RDX,RDI
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+32]
            test AX,AX
            cmove RDX,RDI
            xor R15D,R15D
            movzx EBX,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX]
            lea RDI,QWORD PTR [RDX+4]
            movzx ESI,BYTE PTR [RDX+3]
            movzx ECX,BYTE PTR [RDX+1]
            mov QWORD PTR [RSP],RDI
            shl EBX,8
            shl EAX,8
            add EBX,ESI
            add AX,CX
            movzx EDI,BX
            mov DWORD PTR [RSP+8],EDI
            je .L_445c2c

            movzx ECX,AX
            mov RBP,QWORD PTR [R13+16]
            cmp ECX,1
            lea R15D,DWORD PTR [RCX+RCX*1-2]
            je .L_445c2c

            sub ECX,2
            lea R14,QWORD PTR [RDX+4]
            mov WORD PTR [RSP+16],BX
            lea R12,QWORD PTR [RDX+RCX*2+6]
            mov RBX,R14
            mov R14,R12
            mov R12,RBP
            mov RBP,QWORD PTR [RSP+80]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445c10:

            mov RSI,RBX
            mov RDX,RBP
            mov RDI,R12
            add RBX,2
            call .L_434680

            cmp R14,RBX
            jne .L_445c10

            movzx EBX,WORD PTR [RSP+16]
.L_445c2c:

            test BX,BX
            je .L_445d2d

            mov EAX,DWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            sub EAX,1
            lea R14,QWORD PTR [RSI+R15*1+2]
            lea RAX,QWORD PTR [RSI+RAX*4+6]
            add R15,RAX
            nop
            nop
            nop
.L_445c50:

            mov EDX,DWORD PTR [R13+8360]
            movzx EBX,BYTE PTR [R14]
            movzx EBP,BYTE PTR [R14+1]
            test EDX,EDX
            je .L_445d20

            cmp QWORD PTR [R13+40],0
            je .L_445d20

            mov R12,QWORD PTR [R13+32]
            call .L_4313a0

            cmp R12,RAX
            je .L_445d20

            shl EBX,8
            movzx ECX,BPL
            mov R12D,1
            add ECX,EBX
            movzx EBP,CX
            shl R12D,CL
            mov EAX,EBP
            shr EAX,5
            lea RBX,QWORD PTR [R13+RAX*4]
            test DWORD PTR [RBX+164],R12D
            jne .L_445d20

            mov R8,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [R13+24]
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4313a0

            sub DWORD PTR [R13+8360],1
            mov QWORD PTR [R13+24],RAX
            mov ESI,EBP
            mov QWORD PTR [R13+16],RAX
            mov QWORD PTR [R13+8],RAX
            mov RDI,R13
            call QWORD PTR [R13+40]

            add DWORD PTR [R13+8360],1
            cmp BYTE PTR [R13+160],0
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R13+8],R8
            mov QWORD PTR [R13+16],RCX
            mov QWORD PTR [R13+24],RDX
            jne .L_445d20

            or DWORD PTR [RBX+164],R12D
            nop
            nop
            nop
            nop
.L_445d20:

            add R14,4
            cmp R15,R14
            jne .L_445c50
.L_445d2d:

            add QWORD PTR [RSP+24],1
            mov RAX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+56],RAX
            je .L_445d50

            mov RDI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            jmp .L_445b68
.L_445d50:

            mov R14,R13
.L_445d53:

            add QWORD PTR [RSP+72],1
            mov RAX,QWORD PTR [RSP+72]
            cmp QWORD PTR [RSP+88],RAX
            je .L_4455fc

            mov RSI,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RSI+6]
            movzx EDX,BYTE PTR [RSI+7]
            jmp .L_445ae0
.L_445d7b:

            cmp EDX,1
            mov R13,QWORD PTR [R14+16]
            je .L_44596b

            mov RDI,QWORD PTR [RSP+48]
            lea EAX,DWORD PTR [RDX-2]
            lea RBP,QWORD PTR [RIP+.L_658760]
            mov QWORD PTR [RSP+24],R14
            lea RBX,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+RAX*2+10]
            mov R14,RBX
            mov RBX,RDI
            nop
            nop
            nop
            nop
            nop
.L_445db0:

            movzx EAX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            mov RSI,R13
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,RBP
            add R14,2
            call .L_441d10

            cmp R12,R14
            jne .L_445db0

            mov R14,QWORD PTR [RSP+24]
            jmp .L_44596b
.L_445de6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445df0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,168
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            mov QWORD PTR [RSP+96],RDI
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_446499

            cmp AX,3
            je .L_4461f8

            cmp AX,1
            je .L_445e43
.L_445e2f:

            add RSP,168
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_445e43:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            mov RSI,RDI
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RSI
            mov RSI,QWORD PTR [R15+16]
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_445e2f

            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+104],0
            add RCX,1
            mov QWORD PTR [RSP+112],RCX
            nop
.L_445ea0:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+104]
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp EAX,ESI
            jbe .L_445ec2

            mov RAX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RAX+RSI*2+6]
.L_445ec2:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+96]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDX,RAX
            movzx ECX,BYTE PTR [RDX]
            mov RBX,RDX
            mov QWORD PTR [RSP+32],RDX
            movzx EAX,BYTE PTR [RBX+1]
            mov EDX,ECX
            shl EDX,8
            add EDX,EAX
            test DX,DX
            movzx ESI,DX
            je .L_4461d0

            lea EDX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+24],0
            lea RSI,QWORD PTR [RDX+1]
            mov EDX,EAX
            mov EAX,ECX
            mov QWORD PTR [RSP+80],RSI
            lea RSI,QWORD PTR [RBX+2]
            mov QWORD PTR [RSP+88],RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445f30:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+24]
            lea RCX,QWORD PTR [RIP+.L_658760]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+88]
            mov R13,QWORD PTR [R15+8]
            movzx EAX,AX
            cmp EAX,ESI
            lea RDX,QWORD PTR [RDX+RSI*2]
            mov RAX,RDX
            mov RDX,RCX
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+32]
            test AX,AX
            cmove RDX,RCX
            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EAX
            movzx ECX,SI
            lea EBP,DWORD PTR [RCX+RCX*1+2]
            add RBP,RDX
            movzx R12D,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl R12D,8
            lea EDI,DWORD PTR [R12+RAX*1]
            movzx EAX,DI
            mov WORD PTR [RSP+40],DI
            mov DWORD PTR [RSP+72],EAX
            add EAX,EAX
            test DI,DI
            mov EDI,2
            cmove RAX,RDI
            add RAX,RBP
            movzx EDI,BYTE PTR [RAX]
            movzx R9D,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,R9D
            mov WORD PTR [RSP],DI
            movzx EDI,DI
            lea EBX,DWORD PTR [RDI+RDI*1+2]
            mov DWORD PTR [RSP+8],EDI
            add RBX,RAX
            add RAX,2
            lea RDI,QWORD PTR [RBX+2]
            movzx R9D,BYTE PTR [RBX+1]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RDX+2]
            mov QWORD PTR [RSP+56],RDI
            movzx EDI,BYTE PTR [RBX]
            shl EDI,8
            add EDI,R9D
            test SI,SI
            mov WORD PTR [RSP+54],DI
            movzx EDI,DI
            mov DWORD PTR [RSP+64],EDI
            je .L_446036

            sub ECX,1
            mov R12,RAX
            lea R14,QWORD PTR [RDX+RCX*2+4]
            nop
            nop
            nop
            nop
.L_446020:

            xor EDX,EDX
            mov RSI,R12
            mov RDI,R13
            add R12,2
            call .L_4345c0

            cmp R14,R12
            jne .L_446020
.L_446036:

            cmp WORD PTR [RSP+40],0
            je .L_446076

            mov EAX,DWORD PTR [RSP+72]
            mov R12,QWORD PTR [R15+16]
            cmp EAX,1
            je .L_446076

            sub EAX,2
            lea R13,QWORD PTR [RBP+2]
            lea RBP,QWORD PTR [RBP+RAX*2+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446060:

            xor EDX,EDX
            mov RSI,R13
            mov RDI,R12
            add R13,2
            call .L_4345c0

            cmp RBP,R13
            jne .L_446060
.L_446076:

            cmp WORD PTR [RSP],0
            mov RBP,QWORD PTR [R15+24]
            je .L_4460ae

            mov EAX,DWORD PTR [RSP+8]
            mov R13,QWORD PTR [RSP+16]
            sub EAX,1
            lea R12,QWORD PTR [R13+RAX*2+2]
            nop
            nop
            nop
            nop
            nop
            nop
.L_446098:

            xor EDX,EDX
            mov RSI,R13
            mov RDI,RBP
            add R13,2
            call .L_4345c0

            cmp R13,R12
            jne .L_446098
.L_4460ae:

            cmp WORD PTR [RSP+54],0
            je .L_4461ad

            mov EAX,DWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+56]
            add RBX,4
            sub EAX,1
            lea R14,QWORD PTR [RSI+RAX*4+6]
            nop
.L_4460d0:

            mov ECX,DWORD PTR [R15+8360]
            movzx EBP,BYTE PTR [RBX]
            movzx R12D,BYTE PTR [RBX+1]
            test ECX,ECX
            je .L_4461a0

            cmp QWORD PTR [R15+40],0
            je .L_4461a0

            mov R13,QWORD PTR [R15+32]
            call .L_4313a0

            cmp R13,RAX
            je .L_4461a0

            shl EBP,8
            movzx ECX,R12B
            mov R13D,1
            add ECX,EBP
            movzx R12D,CX
            shl R13D,CL
            mov EAX,R12D
            shr EAX,5
            lea RBP,QWORD PTR [R15+RAX*4]
            test DWORD PTR [RBP+164],R13D
            jne .L_4461a0

            mov R8,QWORD PTR [R15+8]
            mov RCX,QWORD PTR [R15+16]
            mov RDX,QWORD PTR [R15+24]
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4313a0

            sub DWORD PTR [R15+8360],1
            mov QWORD PTR [R15+24],RAX
            mov ESI,R12D
            mov QWORD PTR [R15+16],RAX
            mov QWORD PTR [R15+8],RAX
            mov RDI,R15
            call QWORD PTR [R15+40]

            add DWORD PTR [R15+8360],1
            cmp BYTE PTR [R15+160],0
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R15+8],R8
            mov QWORD PTR [R15+16],RCX
            mov QWORD PTR [R15+24],RDX
            jne .L_4461a0

            or DWORD PTR [RBP+164],R13D
            nop
            nop
            nop
.L_4461a0:

            add RBX,4
            cmp R14,RBX
            jne .L_4460d0
.L_4461ad:

            add QWORD PTR [RSP+24],1
            mov RAX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+80],RAX
            je .L_4461d0

            mov RCX,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            jmp .L_445f30
.L_4461d0:

            add QWORD PTR [RSP+104],1
            mov RAX,QWORD PTR [RSP+104]
            cmp QWORD PTR [RSP+112],RAX
            je .L_445e2f

            mov RCX,QWORD PTR [RSP+96]
            movzx EAX,BYTE PTR [RCX+4]
            movzx EDX,BYTE PTR [RCX+5]
            jmp .L_445ea0
.L_4461f8:

            mov R12,QWORD PTR [RSP+96]
            lea RBX,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [RSI+16]
            movzx EAX,BYTE PTR [R12+2]
            movzx EDX,BYTE PTR [R12+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea RBP,QWORD PTR [R12+RAX*2+4]
            movzx EAX,BYTE PTR [RBP]
            movzx ECX,BYTE PTR [RBP+1]
            lea RDX,QWORD PTR [RBP+2]
            shl EAX,8
            add AX,CX
            cmove RDX,RBX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R12
            test AX,AX
            cmove RDI,RBX
            call .L_441d10

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            mov R13,QWORD PTR [R15+8]
            shl EAX,8
            add EAX,EDX
            mov WORD PTR [RSP+24],AX
            movzx EAX,AX
            mov DWORD PTR [RSP+72],EAX
            lea EAX,DWORD PTR [RAX+RAX*1+2]
            add RAX,RBP
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add ECX,EDX
            mov WORD PTR [RSP],CX
            movzx ECX,CX
            lea R14D,DWORD PTR [RCX+RCX*1+2]
            mov DWORD PTR [RSP+8],ECX
            lea RCX,QWORD PTR [RAX+R14*1]
            add RAX,2
            mov QWORD PTR [RSP+16],RAX
            movzx EAX,BYTE PTR [R12+2]
            movzx EDX,BYTE PTR [RCX]
            lea RSI,QWORD PTR [RCX+2]
            mov QWORD PTR [RSP+32],RCX
            movzx ECX,BYTE PTR [RCX+1]
            mov QWORD PTR [RSP+40],RSI
            shl EAX,8
            shl EDX,8
            lea ESI,DWORD PTR [RDX+RCX*1]
            movzx EDX,BYTE PTR [R12+3]
            movzx ECX,SI
            mov WORD PTR [RSP+54],SI
            mov DWORD PTR [RSP+56],ECX
            lea RCX,QWORD PTR [R12+4]
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_446330

            lea EAX,DWORD PTR [RDX-1]
            mov R14,RCX
            mov RCX,R12
            mov QWORD PTR [RSP+64],RBP
            mov RBP,R14
            mov R14,RCX
            lea R12,QWORD PTR [R12+RAX*2+6]
.L_446300:

            movzx EAX,BYTE PTR [RBP]
            movzx ECX,BYTE PTR [RBP+1]
            mov RSI,R13
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            add RBP,2
            call .L_441d10

            cmp R12,RBP
            jne .L_446300

            mov RBP,QWORD PTR [RSP+64]
.L_446330:

            cmp WORD PTR [RSP+24],0
            je .L_446377

            mov EAX,DWORD PTR [RSP+72]
            mov RBX,QWORD PTR [R15+16]
            cmp EAX,1
            je .L_446377

            sub EAX,2
            mov R13,QWORD PTR [RSP+96]
            lea R12,QWORD PTR [RBP+4]
            lea RBP,QWORD PTR [RBP+RAX*2+6]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446360:

            mov RSI,R12
            mov RDX,R13
            mov RDI,RBX
            add R12,2
            call .L_436ed0

            cmp RBP,R12
            jne .L_446360
.L_446377:

            cmp WORD PTR [RSP],0
            mov RBX,QWORD PTR [R15+24]
            je .L_4463b7

            mov EAX,DWORD PTR [RSP+8]
            mov R12,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RSP+96]
            sub EAX,1
            lea RBP,QWORD PTR [R12+RAX*2+2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4463a0:

            mov RSI,R12
            mov RDX,R13
            mov RDI,RBX
            add R12,2
            call .L_436ed0

            cmp RBP,R12
            jne .L_4463a0
.L_4463b7:

            cmp WORD PTR [RSP+54],0
            je .L_445e2f

            mov EAX,DWORD PTR [RSP+56]
            mov R8,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+40]
            sub EAX,1
            add R8,4
            lea R12,QWORD PTR [RCX+RAX*4+6]
            mov RBX,R8
.L_4463e0:

            mov EAX,DWORD PTR [R15+8360]
            movzx EBP,BYTE PTR [RBX]
            movzx R13D,BYTE PTR [RBX+1]
            test EAX,EAX
            je .L_446487

            cmp QWORD PTR [R15+40],0
            je .L_446487

            mov R14,QWORD PTR [R15+32]
            call .L_4313a0

            cmp R14,RAX
            je .L_446487

            shl EBP,8
            movzx ECX,R13B
            mov EDX,1
            add ECX,EBP
            movzx EBP,CX
            shl EDX,CL
            mov EAX,EBP
            shr EAX,5
            test DWORD PTR [R15+RAX*4+164],EDX
            jne .L_446487

            mov RDX,QWORD PTR [R15+8]
            mov R14,QWORD PTR [R15+16]
            mov R13,QWORD PTR [R15+24]
            mov QWORD PTR [RSP],RDX
            call .L_4313a0

            sub DWORD PTR [R15+8360],1
            mov ESI,EBP
            mov RDI,R15
            mov QWORD PTR [R15+24],RAX
            mov QWORD PTR [R15+16],RAX
            mov QWORD PTR [R15+8],RAX
            call QWORD PTR [R15+40]

            mov RDX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [R15+48]
            mov ESI,EBP
            add DWORD PTR [R15+8360],1
            mov QWORD PTR [R15+16],R14
            mov QWORD PTR [R15+24],R13
            mov QWORD PTR [R15+8],RDX
            call .L_43a160
.L_446487:

            add RBX,4
            cmp R12,RBX
            jne .L_4463e0

            jmp .L_445e2f
.L_446499:

            mov R14,QWORD PTR [RSP+96]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [RSI+16]
            mov RBX,RDI
            movzx EAX,BYTE PTR [R14+2]
            movzx EDX,BYTE PTR [R14+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            movzx EAX,BYTE PTR [R14+6]
            cmove RDX,RBX
            mov QWORD PTR [RSP+128],RDX
            movzx EDX,BYTE PTR [R14+7]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            movzx EAX,BYTE PTR [R14+8]
            cmove RDX,RBX
            mov QWORD PTR [RSP+144],RDX
            movzx EDX,BYTE PTR [R14+9]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            movzx EAX,BYTE PTR [R14+10]
            cmove RDX,RBX
            mov QWORD PTR [RSP+104],RDX
            movzx EDX,BYTE PTR [R14+11]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_445e2f

            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+88],RBX
            add RCX,1
            mov QWORD PTR [RSP+152],RCX
            nop
            nop
            nop
            nop
            nop
.L_446578:

            shl EAX,8
            mov RCX,QWORD PTR [RSP+136]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+88]
            movzx EAX,AX
            cmp EAX,ECX
            jbe .L_44659b

            mov RAX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RAX+RCX*2+12]
.L_44659b:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+96]
            test AX,AX
            cmove RDX,QWORD PTR [RSP+88]
            movzx ECX,BYTE PTR [RDX]
            mov RBX,RDX
            mov QWORD PTR [RSP+32],RDX
            movzx EAX,BYTE PTR [RBX+1]
            mov EDX,ECX
            shl EDX,8
            add EDX,EAX
            test DX,DX
            movzx ESI,DX
            je .L_4468c0

            lea EDX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+24],0
            lea RSI,QWORD PTR [RDX+1]
            mov EDX,EAX
            mov EAX,ECX
            mov QWORD PTR [RSP+112],RSI
            lea RSI,QWORD PTR [RBX+2]
            mov QWORD PTR [RSP+120],RSI
            nop
            nop
            nop
            nop
.L_446600:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+88]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+120]
            mov R13,QWORD PTR [R15+8]
            movzx EAX,AX
            cmp EAX,ESI
            lea RDX,QWORD PTR [RDX+RSI*2]
            mov RAX,RDX
            mov RDX,RDI
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+32]
            test AX,AX
            cmove RDX,RDI
            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EAX
            movzx ECX,SI
            lea EBP,DWORD PTR [RCX+RCX*1+2]
            add RBP,RDX
            movzx R12D,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl R12D,8
            lea EDI,DWORD PTR [R12+RAX*1]
            movzx EAX,DI
            mov WORD PTR [RSP+40],DI
            mov DWORD PTR [RSP+80],EAX
            add EAX,EAX
            test DI,DI
            mov EDI,2
            cmove RAX,RDI
            add RAX,RBP
            movzx EDI,BYTE PTR [RAX]
            movzx R9D,BYTE PTR [RAX+1]
            shl EDI,8
            lea EBX,DWORD PTR [RDI+R9*1]
            movzx EDI,BX
            mov WORD PTR [RSP],BX
            lea EBX,DWORD PTR [RDI+RDI*1+2]
            mov DWORD PTR [RSP+8],EDI
            add RBX,RAX
            add RAX,2
            lea RDI,QWORD PTR [RBX+2]
            movzx R9D,BYTE PTR [RBX+1]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RDX+2]
            mov QWORD PTR [RSP+56],RDI
            movzx EDI,BYTE PTR [RBX]
            shl EDI,8
            add EDI,R9D
            test SI,SI
            mov WORD PTR [RSP+54],DI
            movzx EDI,DI
            mov DWORD PTR [RSP+64],EDI
            je .L_44671c

            sub ECX,1
            mov R12,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+72],RBX
            lea R14,QWORD PTR [RDX+RCX*2+4]
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446700:

            mov RSI,RBX
            mov RDX,R12
            mov RDI,R13
            add RBX,2
            call .L_434680

            cmp R14,RBX
            jne .L_446700

            mov RBX,QWORD PTR [RSP+72]
.L_44671c:

            cmp WORD PTR [RSP+40],0
            je .L_44675f

            mov EAX,DWORD PTR [RSP+80]
            mov R12,QWORD PTR [R15+16]
            cmp EAX,1
            je .L_44675f

            sub EAX,2
            mov R14,QWORD PTR [RSP+144]
            lea R13,QWORD PTR [RBP+2]
            lea RBP,QWORD PTR [RBP+RAX*2+4]
            nop
            nop
            nop
.L_446748:

            mov RSI,R13
            mov RDX,R14
            mov RDI,R12
            add R13,2
            call .L_434680

            cmp RBP,R13
            jne .L_446748
.L_44675f:

            cmp WORD PTR [RSP],0
            mov RBP,QWORD PTR [R15+24]
            je .L_446797

            mov EAX,DWORD PTR [RSP+8]
            mov R13,QWORD PTR [RSP+16]
            mov R14,QWORD PTR [RSP+104]
            sub EAX,1
            lea R12,QWORD PTR [R13+RAX*2+2]
.L_446780:

            mov RSI,R13
            mov RDX,R14
            mov RDI,RBP
            add R13,2
            call .L_434680

            cmp R12,R13
            jne .L_446780
.L_446797:

            cmp WORD PTR [RSP+54],0
            je .L_44689d

            mov EAX,DWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+56]
            add RBX,4
            sub EAX,1
            lea R14,QWORD PTR [RCX+RAX*4+6]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4467c0:

            mov EDX,DWORD PTR [R15+8360]
            movzx EBP,BYTE PTR [RBX]
            movzx R12D,BYTE PTR [RBX+1]
            test EDX,EDX
            je .L_446890

            cmp QWORD PTR [R15+40],0
            je .L_446890

            mov R13,QWORD PTR [R15+32]
            call .L_4313a0

            cmp R13,RAX
            je .L_446890

            shl EBP,8
            movzx ECX,R12B
            mov R13D,1
            add ECX,EBP
            movzx R12D,CX
            shl R13D,CL
            mov EAX,R12D
            shr EAX,5
            lea RBP,QWORD PTR [R15+RAX*4]
            test DWORD PTR [RBP+164],R13D
            jne .L_446890

            mov R8,QWORD PTR [R15+8]
            mov RCX,QWORD PTR [R15+16]
            mov RDX,QWORD PTR [R15+24]
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4313a0

            sub DWORD PTR [R15+8360],1
            mov QWORD PTR [R15+24],RAX
            mov ESI,R12D
            mov QWORD PTR [R15+16],RAX
            mov QWORD PTR [R15+8],RAX
            mov RDI,R15
            call QWORD PTR [R15+40]

            add DWORD PTR [R15+8360],1
            cmp BYTE PTR [R15+160],0
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R15+8],R8
            mov QWORD PTR [R15+16],RCX
            mov QWORD PTR [R15+24],RDX
            jne .L_446890

            or DWORD PTR [RBP+164],R13D
            nop
            nop
            nop
.L_446890:

            add RBX,4
            cmp R14,RBX
            jne .L_4467c0
.L_44689d:

            add QWORD PTR [RSP+24],1
            mov RAX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+112],RAX
            je .L_4468c0

            mov RSI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            jmp .L_446600
.L_4468c0:

            add QWORD PTR [RSP+136],1
            mov RAX,QWORD PTR [RSP+136]
            cmp QWORD PTR [RSP+152],RAX
            je .L_445e2f

            mov RSI,QWORD PTR [RSP+96]
            movzx EAX,BYTE PTR [RSI+10]
            movzx EDX,BYTE PTR [RSI+11]
            jmp .L_446578
.L_4468f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446900:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_44690e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp EDX,8
            ja .L_446960

            lea RCX,QWORD PTR [RIP+.L_446da4]
            mov EDX,EDX
            mov RBX,RDI
            mov RBP,RSI
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446940:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_446cc0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446960:

            xor EAX,EAX
.L_446962:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_446d9d

            add RSP,72
.L_44697a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_446988:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_446cf0

            cmp AX,2
            jne .L_446960

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RSI,QWORD PTR [RIP+.L_658760]
            lea R12,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+16],0
            lea R13,QWORD PTR [RIP+.L_658760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RDI,R12
            cmovne RSI,RDX
            call .L_43a3a0

            jmp .L_446a2c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4469e8:

            movzx ESI,WORD PTR [RSP+36]
.L_4469ed:

            mov RDI,R8
            call .L_43a160

            mov EAX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP+32]
            cmp EAX,1
            je .L_446ce0

            cmp EAX,2
            je .L_446a77

            mov RCX,R13
            nop
            nop
.L_446a10:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160

            mov RDI,R12
            call .L_43a5f0
.L_446a2c:

            mov RDI,R12
            call .L_43a5b0

            test AL,AL
            je .L_446960

            mov EAX,DWORD PTR [RSP+16]
            mov R8,QWORD PTR [RBP+16]
            cmp EAX,1
            je .L_446cd0

            cmp EAX,2
            je .L_4469e8

            xor ESI,ESI
            mov RDI,R8
            call .L_43a160

            mov EAX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP+32]
            cmp EAX,1
            je .L_446ce0

            cmp EAX,2
            mov EDX,65535
            jne .L_446a7c
.L_446a77:

            movzx EDX,WORD PTR [RSP+40]
.L_446a7c:

            movzx EAX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EAX,8
            add EAX,ECX
            mov RCX,R13
            movzx EAX,AX
            cmp EAX,EDX
            jbe .L_446a10

            lea RCX,QWORD PTR [RBX+RDX*2+6]
            jmp .L_446a10
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446aa8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_446960

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [RSI+16]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_446960

            lea R15D,DWORD PTR [RSI-1]
            lea R13,QWORD PTR [RIP+.L_658760]
            mov QWORD PTR [RSP],0
            lea RCX,QWORD PTR [R15+1]
            mov QWORD PTR [RSP+8],RCX
            nop
.L_446b20:

            shl EAX,8
            mov RCX,QWORD PTR [RSP]
            add EAX,EDX
            mov RDX,R13
            movzx EAX,AX
            cmp EAX,ECX
            jbe .L_446b38

            lea RDX,QWORD PTR [RBX+RCX*2+6]
.L_446b38:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            cmove RCX,R13
            movzx EAX,BYTE PTR [RCX]
            movzx ESI,BYTE PTR [RCX+1]
            mov R14,RCX
            mov EDX,EAX
            shl EDX,8
            add EDX,ESI
            test DX,DX
            movzx EDI,DX
            je .L_446bc1

            lea R12D,DWORD PTR [RDI-1]
            xor R15D,R15D
            add R12,1
            jmp .L_446b89
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446b80:

            movzx EAX,BYTE PTR [R14]
            movzx ESI,BYTE PTR [R14+1]
.L_446b89:

            shl EAX,8
            mov RDI,QWORD PTR [RBP+32]
            mov R8,R13
            add EAX,ESI
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_446ba2

            lea R8,QWORD PTR [R14+R15*2+2]
.L_446ba2:

            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            add R15,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_43a160

            cmp R15,R12
            jne .L_446b80
.L_446bc1:

            add QWORD PTR [RSP],1
            mov RAX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],RAX
            je .L_446960

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            jmp .L_446b20
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446be8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_446960

            call .L_43df10

            xor EAX,EAX
            jmp .L_446962
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446c10:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_446960

            call .L_43ec00

            xor EAX,EAX
            jmp .L_446962
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446c38:

            call .L_4455c0

            jmp .L_446962
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446c48:

            call .L_445df0

            jmp .L_446962
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446c58:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_446960

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            lea EDI,DWORD PTR [RAX+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            mov RAX,RDI
            add RDI,RBX
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RDI,RAX
            movzx EAX,BYTE PTR [RBX+3]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_446900

            jmp .L_446962
          .byte 0x66
          .byte 0x90
.L_446cc0:

            call .L_441e60

            xor EAX,EAX
            jmp .L_446962
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_446cd0:

            mov RDI,R12
            call .L_434190

            movzx ESI,AX
            jmp .L_4469ed
.L_446ce0:

            movzx EDX,WORD PTR [RSP+32]
            jmp .L_446a7c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446cf0:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea R12,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_658760]
            mov DWORD PTR [RSP+16],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RDI,R12
            cmovne RSI,RDX
            call .L_43a3a0

            jmp .L_446d6b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446d30:

            cmp EAX,2
            jne .L_446d98

            movzx R13D,WORD PTR [RSP+36]
.L_446d3b:

            mov RDI,QWORD PTR [RBP+16]
            mov ESI,R13D
            call .L_43a160

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov RDI,QWORD PTR [RBP+32]
            shl ESI,8
            add ESI,EAX
            add ESI,R13D
            movzx ESI,SI
            call .L_43a160

            mov RDI,R12
            call .L_43a5f0
.L_446d6b:

            mov RDI,R12
            call .L_43a5b0

            test AL,AL
            je .L_446960

            mov EAX,DWORD PTR [RSP+16]
            cmp EAX,1
            jne .L_446d30

            mov RDI,R12
            call .L_434190

            movzx R13D,AX
            jmp .L_446d3b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446d98:

            xor R13D,R13D
            jmp .L_446d3b
.L_446d9d:

            call __stack_chk_fail@PLT
.L_446da2:
          .byte 0x66
          .byte 0x90
.L_446da4:
          .long .L_446960-.L_446da4
          .long .L_446988-.L_446da4
          .long .L_446aa8-.L_446da4
          .long .L_446be8-.L_446da4
          .long .L_446c10-.L_446da4
          .long .L_446c38-.L_446da4
          .long .L_446c48-.L_446da4
          .long .L_446c58-.L_446da4
          .long .L_446940-.L_446da4
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446dd0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_446de1:

            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+160]
            mov RDI,QWORD PTR [RAX+32]
            call .L_43d5a0

            movzx EBX,BYTE PTR [RAX]
            mov R15,RAX
            movzx EAX,BYTE PTR [RAX+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R15+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            je .L_446e83

            movzx ESI,CX
            movzx EBX,BX
            xor R14D,R14D
            lea R12D,DWORD PTR [RSI-1]
            lea RBP,QWORD PTR [RIP+.L_658760]
            add R12,1
            jmp .L_446e42
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446e38:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_446e42:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_446e57

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_446e57:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R13
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            add R14,1
            call .L_446900

            cmp R12,R14
            jne .L_446e38
.L_446e83:

            add RSP,8
.L_446e87:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_446e94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446ea0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14,RSI
            push RBP
            push RBX
            lea RSI,QWORD PTR [RIP+.L_4472bc]
            lea RDI,QWORD PTR [RIP+.L_658760]
            sub RSP,24
.L_446ec2:

            cmp EDX,9
            ja .L_446f40

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RSI+RDX*4]
            add RAX,RSI
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446ed8:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_446f40

            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [R14+16]
            mov RBX,RDI
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
            mov RSI,QWORD PTR [R14+16]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBX
            call .L_441d10
.L_446f40:

            add RSP,24
.L_446f44:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446f58:

            add RSP,24
            mov RSI,R14
            mov RDI,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_445df0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446f78:

            add RSP,24
            mov RSI,R14
            mov RDI,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4455c0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446f98:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_446fb2

            cmp AX,2
            jne .L_446f40
.L_446fb2:

            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [R14+16]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R15,RDX
            test AX,AX
            cmovne RDI,R15
            call .L_441d10

            jmp .L_446f40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446fe8:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_447180

            cmp AX,2
            jne .L_446f40

            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [R14+16]
            mov RBX,RDI
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [R15+12]
            movzx EDX,BYTE PTR [R15+13]
            movzx ESI,BYTE PTR [R15+9]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R15+8]
            movzx R12D,AX
            shl EDX,8
            add EDX,ESI
            movzx EBP,DX
            add RBP,R15
            test DX,DX
            cmove RBP,RBX
            test AX,AX
            je .L_447086

            xor EBX,EBX
            nop
.L_447070:

            mov RSI,QWORD PTR [R14+16]
            mov EDX,EBX
            mov RDI,RBP
            add EBX,1
            call .L_43a7b0

            cmp R12D,EBX
            jne .L_447070
.L_447086:

            movzx EAX,BYTE PTR [R15+14]
            movzx EDX,BYTE PTR [R15+15]
            lea RBP,QWORD PTR [RIP+.L_658760]
            movzx ESI,BYTE PTR [R15+11]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R15+10]
            movzx R12D,AX
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            add R15,RSI
            test DX,DX
            cmovne RBP,R15
            test AX,AX
            je .L_446f40

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4470d0:

            mov RSI,QWORD PTR [R14+16]
            mov EDX,EBX
            mov RDI,RBP
            add EBX,1
            call .L_43a7b0

            cmp R12D,EBX
            jne .L_4470d0

            jmp .L_446f40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4470f0:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_446f40

            jmp .L_446fb2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_447110:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_446f40

            movzx EDX,BYTE PTR [R15+4]
            movzx EAX,BYTE PTR [R15+5]
            movzx R8D,BYTE PTR [R15+3]
            shl EAX,16
            shl EDX,24
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [R15+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R15+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,R15
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [R15+2]
            cmove RAX,RDI
            mov R15,RAX
            shl EDX,8
            add EDX,R8D
            movzx EDX,DX
            jmp .L_446ec2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447180:

            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            lea RDI,QWORD PTR [RIP+.L_658760]
            mov RSI,QWORD PTR [R14+16]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmovne RDI,RDX
            call .L_441d10

            movzx EAX,BYTE PTR [R15+8]
            movzx EDX,BYTE PTR [R15+9]
            mov ESI,EAX
            shl ESI,8
            add ESI,EDX
            test SI,SI
            movzx EDI,SI
            je .L_446f40

            lea ECX,DWORD PTR [RDI-1]
            mov QWORD PTR [RSP],0
            add RCX,1
            mov QWORD PTR [RSP+8],RCX
            nop
            nop
            nop
.L_4471e0:

            shl EAX,8
            mov RCX,QWORD PTR [RSP]
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_658760]
            movzx EAX,AX
            cmp EAX,ECX
            jbe .L_4471fc

            lea RDX,QWORD PTR [R15+RCX*2+10]
.L_4471fc:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            movzx EDI,BYTE PTR [R15+4]
            shl EAX,8
            add EAX,EDX
            movzx EBP,AX
            add RBP,R15
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_658760]
            cmove RBP,RAX
            movzx EAX,BYTE PTR [R15+5]
            shl EDI,8
            lea R12,QWORD PTR [RBP+2]
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDI,BYTE PTR [R15+6]
            mov EBX,EAX
            movzx EAX,BYTE PTR [R15+7]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDX,BYTE PTR [RBP]
            movzx ESI,BYTE PTR [RBP+1]
            lea EBX,DWORD PTR [RBX+RAX*1+1]
            add EBX,EBX
            shl EDX,8
            add EDX,ESI
            test DX,DX
            movzx EBP,DX
            je .L_447298

            xor R13D,R13D
            nop
            nop
.L_447270:

            movzx ESI,BYTE PTR [R12]
            movzx EDI,BYTE PTR [R12+1]
            add R13D,1
            add R12,RBX
            shl ESI,8
            add ESI,EDI
            mov RDI,QWORD PTR [R14+16]
            movzx ESI,SI
            call .L_43a160

            cmp EBP,R13D
            jne .L_447270
.L_447298:

            add QWORD PTR [RSP],1
            mov RAX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],RAX
            je .L_446f40

            movzx EAX,BYTE PTR [R15+8]
            movzx EDX,BYTE PTR [R15+9]
            jmp .L_4471e0
.L_4472bb:
          .byte 0x90
.L_4472bc:
          .long .L_446f40-.L_4472bc
          .long .L_446f98-.L_4472bc
          .long .L_446fe8-.L_4472bc
          .long .L_4470f0-.L_4472bc
          .long .L_446ed8-.L_4472bc
          .long .L_446ed8-.L_4472bc
          .long .L_446ed8-.L_4472bc
          .long .L_446f78-.L_4472bc
          .long .L_446f58-.L_4472bc
          .long .L_447110-.L_4472bc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_4472f0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            mov RDX,QWORD PTR [RSI+8]
            cmp RDI,RDX
            jae .L_447310
.L_447305:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447310:

            mov RCX,QWORD PTR [RSI+16]
            cmp RDI,RCX
            ja .L_447305

            mov R8,RCX
            sub R8,RDI
            cmp R8D,1
            jbe .L_447305

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            cmp AX,2
            je .L_447368

            cmp AX,3
            je .L_4473e0

            cmp AX,1
            je .L_447390

            mov EAX,1
.L_447354:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447368:

            lea RDI,QWORD PTR [RDI+2]
            mov RDX,RBX
            call .L_442b40

            test AL,AL
            jne .L_4473c0
.L_447378:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447390:

            lea RDI,QWORD PTR [RDI+2]
            mov RDX,RBX
            call .L_442b40

            test AL,AL
            lea RDI,QWORD PTR [RBX+4]
            je .L_447378
.L_4473a4:

            add RSP,8
            mov RDX,RBX
            mov RSI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_442050
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4473c0:

            lea RDI,QWORD PTR [RBX+4]
            mov RDX,RBX
            mov RSI,RBP
            call .L_442cd0

            test AL,AL
            je .L_447378

            lea RDI,QWORD PTR [RBX+6]
            jmp .L_4473a4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4473e0:

            cmp R8D,5
            jbe .L_447378

            movzx EAX,BYTE PTR [RDI+2]
            movzx ESI,BYTE PTR [RDI+3]
            shl EAX,8
            add AX,SI
            je .L_447378

            lea R13,QWORD PTR [RDI+6]
            cmp RDX,R13
            ja .L_447378

            cmp RCX,R13
            jb .L_447378

            movzx EAX,AX
            sub RCX,R13
            lea R14D,DWORD PTR [RAX+RAX*1]
            cmp R14D,ECX
            ja .L_447378

            sub EAX,1
            mov R12,R13
            lea R15,QWORD PTR [RDI+RAX*2+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_447430:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_442b40

            test AL,AL
            je .L_447378

            add R12,2
            cmp R15,R12
            jne .L_447430

            add R13,R14
            xor EAX,EAX
            cmp R13,QWORD PTR [RBP+8]
            jb .L_447354

            mov RCX,QWORD PTR [RBP+16]
            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            cmp R13,RCX
            ja .L_447354

            shl EDX,8
            movzx EAX,SIL
            sub RCX,R13
            add EAX,EDX
            movzx EAX,AX
            shl EAX,2
            cmp EAX,ECX
            setbe AL
            jmp .L_447354
.L_44748f:

            nop
.L_447490:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp RDI,QWORD PTR [RSI+8]
            jae .L_4474a8
.L_4474a2:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4474a8:

            mov RDX,QWORD PTR [RSI+16]
            cmp RDI,RDX
            ja .L_4474a2

            sub RDX,RDI
            cmp EDX,1
            jbe .L_4474a2

            cmp AX,2
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RBX,RDI
            je .L_4474e0

            cmp AX,3
            je .L_447528

            cmp AX,1
            je .L_447500

            mov EAX,1
.L_4474da:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_4474e0:

            lea RDI,QWORD PTR [RDI+2]
            mov RDX,RBX
            call .L_442b40

            test AL,AL
            jne .L_447610
.L_4474f4:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447500:

            lea RDI,QWORD PTR [RDI+2]
            mov RDX,RBX
            call .L_442b40

            test AL,AL
            lea RDI,QWORD PTR [RBX+4]
            je .L_4474f4
.L_447514:

            mov RDX,RBX
            mov RSI,RBP
            pop RBX
            pop RBP
            pop R12
            jmp .L_442310
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447528:

            lea R12,QWORD PTR [RDI+2]
            mov RDX,RDI
            mov RDI,R12
            call .L_442bc0

            test AL,AL
            je .L_4474f4

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            lea R12,QWORD PTR [R12+RAX*2+2]
            mov RDI,R12
            call .L_442bc0

            test AL,AL
            je .L_4474f4

            movzx EAX,BYTE PTR [R12]
            movzx EDX,BYTE PTR [R12+1]
            shl EAX,8
            add AX,DX
            je .L_4474f4

            movzx EAX,AX
            mov RDX,RBX
            mov RSI,RBP
            lea R12,QWORD PTR [R12+RAX*2+2]
            mov RDI,R12
            call .L_442bc0

            test AL,AL
            je .L_4474f4

            movzx EDX,BYTE PTR [R12]
            movzx ECX,BYTE PTR [R12+1]
            shl EDX,8
            add EDX,ECX
            mov RCX,QWORD PTR [RBP+8]
            movzx EDX,DX
            lea RDX,QWORD PTR [R12+RDX*2+2]
            cmp RDX,RCX
            jb .L_4474f4

            mov RSI,QWORD PTR [RBP+16]
            cmp RDX,RSI
            ja .L_4474f4

            mov RDI,RSI
            sub RDI,RDX
            cmp EDI,1
            jbe .L_4474f4

            lea RDI,QWORD PTR [RDX+2]
            cmp RCX,RDI
            ja .L_4474f4

            cmp RSI,RDI
            jb .L_4474f4

            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            sub RSI,RDI
            shl ECX,8
            add EDX,ECX
            movzx EDX,DX
            shl EDX,2
            cmp EDX,ESI
            jbe .L_4474da

            jmp .L_4474f4
.L_447610:

            lea RDI,QWORD PTR [RBX+4]
            mov RDX,RBX
            mov RSI,RBP
            call .L_442cd0

            test AL,AL
            je .L_4474f4

            lea RDI,QWORD PTR [RBX+6]
            mov RDX,RBX
            mov RSI,RBP
            call .L_442cd0

            test AL,AL
            je .L_4474f4

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,RBX
            mov RSI,RBP
            call .L_442cd0

            test AL,AL
            je .L_4474f4

            lea RDI,QWORD PTR [RBX+10]
            jmp .L_447514
.L_44765e:

            nop
            nop
.L_447660:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
            mov RCX,QWORD PTR [RSI+8]
            cmp RCX,RDI
            ja .L_447690

            mov RBX,RDI
            mov R12,RDI
            mov RDI,QWORD PTR [RSI+16]
            mov RBP,RSI
            cmp RBX,RDI
            jbe .L_4476a8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447690:

            xor R13D,R13D
.L_447693:

            add RSP,8
            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4476a8:

            mov RAX,RDI
            lea RSI,QWORD PTR [RIP+.L_447ea4]
            sub RAX,RBX
            cmp EAX,1
            jbe .L_447690
.L_4476ba:

            cmp EDX,8
            ja .L_4476d0

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RSI+RDX*4]
            add RAX,RSI
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4476d0:

            mov R13D,1
            jmp .L_447693
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4476e0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_447690

            cmp R12,RDI
            ja .L_447690

            sub RDI,R12
            cmp EDI,1
            jbe .L_447690

            cmp AX,1
            jne .L_4476d0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            je .L_447690

            lea R13,QWORD PTR [RBX+4]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,R13
            call .L_442bc0

            test AL,AL
            je .L_447690

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            lea RBX,QWORD PTR [R13+RAX*2+2]
            mov RDI,RBX
            call .L_442bc0

            test AL,AL
            je .L_447690

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea RDI,QWORD PTR [RBX+RAX*2+2]
            jmp .L_447d99
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447780:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_447690

            cmp R12,RDI
            ja .L_447690

            mov RDX,RDI
            sub RDX,R12
            cmp EDX,1
            jbe .L_447690

            cmp AX,1
            jne .L_4476d0

            cmp EDX,7
            jbe .L_447690

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EAX,EDX
            je .L_447690

            movzx EDX,BYTE PTR [RBX+2]
            movzx R8D,BYTE PTR [RBX+3]
            mov EAX,EAX
            add R12,RAX
            shl EDX,8
            add EDX,R8D
            cmp R12,RCX
            movzx EDX,DX
            jb .L_447690

            cmp R12,RDI
            ja .L_447690

            mov RAX,RDI
            mov RBX,R12
            sub RAX,R12
            cmp EAX,1
            ja .L_4476ba

            jmp .L_447690
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447830:

            add RSP,8
.L_447834:

            mov RSI,RBP
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_447490
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447850:

            add RSP,8
            mov RSI,RBP
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4472f0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447870:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_447690

            cmp R12,RDI
            ja .L_447690

            sub RDI,R12
            cmp EDI,1
            jbe .L_447690

            cmp AX,1
            jne .L_4476d0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            mov R13D,EAX
            je .L_447690

            mov RDX,QWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RBX+4]
            cmp RAX,RDX
            jb .L_447690

            mov RCX,QWORD PTR [RBP+16]
            cmp RAX,RCX
            ja .L_447690

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_447690

            lea R10,QWORD PTR [RBX+6]
            cmp RDX,R10
            ja .L_447690

            cmp RCX,R10
            jb .L_447690

            movzx ESI,BYTE PTR [RBX+4]
            movzx EDI,BYTE PTR [RBX+5]
            shl ESI,8
            add ESI,EDI
            mov RDI,RCX
            movzx R8D,SI
            sub RDI,R10
            lea R9D,DWORD PTR [R8+R8*1]
            cmp R9D,EDI
            ja .L_447690

            test SI,SI
            je .L_447693

            cmp EDI,1
            jbe .L_447690

            lea ESI,DWORD PTR [R8-1]
            add RBX,8
            lea R11,QWORD PTR [RAX+RSI*2+4]
.L_447944:

            movzx EAX,BYTE PTR [R10]
            movzx ESI,BYTE PTR [R10+1]
            shl EAX,8
            add AX,SI
            je .L_447e20

            movzx EAX,AX
            lea RSI,QWORD PTR [R12+RAX*1]
            cmp RDX,RSI
            ja .L_447df0

            cmp RSI,RCX
            ja .L_447df0

            mov RAX,RCX
            sub RAX,RSI
            cmp EAX,1
            jbe .L_447df0

            lea RDI,QWORD PTR [RSI+2]
            cmp RDX,RDI
            ja .L_447df0

            cmp RCX,RDI
            jb .L_447df0

            movzx EAX,BYTE PTR [RSI]
            movzx R8D,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,R8D
            mov R8,RCX
            movzx R9D,AX
            sub R8,RDI
            lea R14D,DWORD PTR [R9+R9*1]
            cmp R14D,R8D
            ja .L_447df0

            test AX,AX
            je .L_447e20

            cmp RDI,RDX
            jb .L_447df0

            cmp R8D,1
            jbe .L_447df0

            lea R8,QWORD PTR [RSI+4]
            lea EAX,DWORD PTR [R9-1]
            lea R9,QWORD PTR [R8+RAX*2]
            nop
            nop
            nop
            nop
.L_4479e8:

            movzx EAX,BYTE PTR [RDI]
            movzx R14D,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,R14W
            je .L_447dc0

            movzx EAX,AX
            add RAX,RSI
            cmp RDX,RAX
            ja .L_447a49

            cmp RAX,RCX
            ja .L_447a49

            mov R14,RCX
            sub R14,RAX
            cmp R14D,1
            jbe .L_447a49

            lea R14,QWORD PTR [RAX+2]
            cmp RDX,R14
            ja .L_447a49

            cmp RCX,R14
            jb .L_447a49

            sub RCX,R14
            cmp ECX,1
            jbe .L_447a49

            movzx EDX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            add EAX,EAX
            cmp ECX,EAX
            jae .L_447dc0
.L_447a49:

            mov EAX,DWORD PTR [RBP+28]
            movzx EDX,BYTE PTR [RBP+24]
            cmp EAX,2
            ja .L_447690

            lea ECX,DWORD PTR [RAX+1]
            test DL,DL
            mov DWORD PTR [RBP+28],ECX
            jne .L_447daf

            cmp ECX,3
            je .L_447690

            add EAX,2
            mov DWORD PTR [RBP+28],EAX
            jmp .L_447690
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447a80:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_447690

            cmp R12,RDI
            ja .L_447690

            sub RDI,R12
            cmp EDI,1
            jbe .L_447690

            cmp AX,1
            jne .L_4476d0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            mov R13D,EAX
            je .L_447690

            mov RDX,QWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RBX+4]
            cmp RAX,RDX
            jb .L_447690

            mov RCX,QWORD PTR [RBP+16]
            cmp RAX,RCX
            ja .L_447690

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_447690

            lea R15,QWORD PTR [RBX+6]
            cmp RDX,R15
            ja .L_447690

            cmp RCX,R15
            jb .L_447690

            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            sub RCX,R15
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*1]
            cmp EDI,ECX
            ja .L_447690

            test DX,DX
            je .L_447693

            cmp ECX,1
            jbe .L_447690

            lea EDX,DWORD PTR [RSI-1]
            add RBX,8
            lea R14,QWORD PTR [RAX+RDX*2+4]
.L_447b4d:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add AX,DX
            je .L_447ba0

            movzx EAX,AX
            mov RSI,RBP
            lea RDI,QWORD PTR [R12+RAX*1]
            call .L_442a40

            test AL,AL
            jne .L_447ba0

            mov EAX,DWORD PTR [RBP+28]
            cmp EAX,2
            ja .L_447690

            movzx EDX,BYTE PTR [RBP+24]
            add EAX,1
            mov DWORD PTR [RBP+28],EAX
            test DL,DL
            je .L_447690

            mov BYTE PTR [R15],0
            mov BYTE PTR [R15+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447ba0:

            cmp RBX,R14
            je .L_447693

            cmp RBX,QWORD PTR [RBP+8]
            jb .L_447690

            mov RAX,QWORD PTR [RBP+16]
            cmp RBX,RAX
            ja .L_447690

            sub RAX,RBX
            add R15,2
            add RBX,2
            cmp EAX,1
            ja .L_447b4d

            jmp .L_447690
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447be0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_447690

            cmp R12,RDI
            ja .L_447690

            sub RDI,R12
            cmp EDI,1
            jbe .L_447690

            cmp AX,1
            jne .L_4476d0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            mov R13D,EAX
            je .L_447690

            mov RDX,QWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RBX+4]
            cmp RAX,RDX
            jb .L_447690

            mov RCX,QWORD PTR [RBP+16]
            cmp RAX,RCX
            ja .L_447690

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_447690

            lea R15,QWORD PTR [RBX+6]
            cmp RDX,R15
            ja .L_447690

            cmp RCX,R15
            jb .L_447690

            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            sub RCX,R15
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*1]
            cmp EDI,ECX
            ja .L_447690

            test DX,DX
            je .L_447693

            cmp ECX,1
            jbe .L_447690

            lea EDX,DWORD PTR [RSI-1]
            add RBX,8
            lea R14,QWORD PTR [RAX+RDX*2+4]
.L_447cad:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add AX,DX
            je .L_447d00

            movzx EAX,AX
            mov RSI,RBP
            lea RDI,QWORD PTR [R12+RAX*1]
            call .L_442a40

            test AL,AL
            jne .L_447d00

            mov EAX,DWORD PTR [RBP+28]
            cmp EAX,2
            ja .L_447690

            movzx EDX,BYTE PTR [RBP+24]
            add EAX,1
            mov DWORD PTR [RBP+28],EAX
            test DL,DL
            je .L_447690

            mov BYTE PTR [R15],0
            mov BYTE PTR [R15+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447d00:

            cmp R14,RBX
            je .L_447693

            cmp RBX,QWORD PTR [RBP+8]
            jb .L_447690

            mov RAX,QWORD PTR [RBP+16]
            cmp RBX,RAX
            ja .L_447690

            sub RAX,RBX
            add R15,2
            add RBX,2
            cmp EAX,1
            ja .L_447cad

            jmp .L_447690
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447d40:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_447690

            cmp R12,RDI
            ja .L_447690

            sub RDI,R12
            cmp EDI,1
            jbe .L_447690

            cmp AX,1
            je .L_447e60

            cmp AX,2
            jne .L_4476d0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            lea RDI,QWORD PTR [RBX+4]
            je .L_447690
.L_447d99:

            add RSP,8
.L_447d9d:

            mov RSI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_442a40
.L_447daf:

            mov BYTE PTR [RDI],0
            mov BYTE PTR [RDI+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447dc0:

            cmp R8,R9
            je .L_447e20

            mov RDX,QWORD PTR [RBP+8]
            cmp R8,RDX
            jb .L_447df0

            mov RCX,QWORD PTR [RBP+16]
            cmp R8,RCX
            ja .L_447df0

            mov RAX,RCX
            add RDI,2
            sub RAX,R8
            add R8,2
            cmp EAX,1
            ja .L_4479e8

            nop
            nop
.L_447df0:

            mov EAX,DWORD PTR [RBP+28]
            movzx EDX,BYTE PTR [RBP+24]
            cmp EAX,2
            ja .L_447690

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBP+28],EAX
            je .L_447690

            mov BYTE PTR [R10],0
            mov BYTE PTR [R10+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447e20:

            cmp R11,RBX
            je .L_447693

            mov RDX,QWORD PTR [RBP+8]
            cmp RBX,RDX
            jb .L_447690

            mov RCX,QWORD PTR [RBP+16]
            cmp RBX,RCX
            ja .L_447690

            mov RAX,RCX
            add R10,2
            sub RAX,RBX
            add RBX,2
            cmp EAX,1
            ja .L_447944

            jmp .L_447690
          .byte 0x90
.L_447e60:

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            je .L_447690

            add RBX,4
            cmp RBX,QWORD PTR [RBP+8]
            jb .L_447690

            mov RAX,QWORD PTR [RBP+16]
            cmp RBX,RAX
            ja .L_447690

            sub RAX,RBX
            cmp EAX,1
            seta R13B
            jmp .L_447693
.L_447ea1:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_447ea4:
          .long .L_4476d0-.L_447ea4
          .long .L_447d40-.L_447ea4
          .long .L_447be0-.L_447ea4
          .long .L_447a80-.L_447ea4
          .long .L_447870-.L_447ea4
          .long .L_447850-.L_447ea4
          .long .L_447830-.L_447ea4
          .long .L_447780-.L_447ea4
          .long .L_4476e0-.L_447ea4
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447ed0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,56
.L_447ee1:

            mov QWORD PTR [RSP+40],RDI
            call .L_4410f0

            test AL,AL
            mov BYTE PTR [RSP+15],AL
            je .L_4480c8

            mov RDI,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RDI+8]
            cmp RAX,RDX
            jb .L_4480c8

            mov RCX,QWORD PTR [RBX+16]
            cmp RAX,RCX
            ja .L_4480c8

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_4480c8

            movzx EAX,BYTE PTR [RDI+8]
            movzx ESI,BYTE PTR [RDI+9]
            shl EAX,8
            add AX,SI
            je .L_4480cd

            movzx EAX,AX
            add RAX,RDI
            cmp RDX,RAX
            mov R10,RAX
            mov QWORD PTR [RSP+24],RAX
            ja .L_448130

            cmp RCX,RAX
            jb .L_448130

            mov RAX,RCX
            sub RAX,R10
            cmp EAX,1
            jbe .L_448130

            lea RAX,QWORD PTR [R10+2]
            cmp RDX,RAX
            ja .L_448130

            cmp RCX,RAX
            jb .L_448130

            movzx EDX,BYTE PTR [R10]
            movzx ESI,BYTE PTR [R10+1]
            sub RCX,RAX
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*1]
            cmp EDI,ECX
            ja .L_448130

            test DX,DX
            je .L_4480cd

            cmp ECX,1
            jbe .L_448130

            lea RCX,QWORD PTR [R10+4]
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [RSI-1]
            lea RBP,QWORD PTR [RIP+.L_658760]
            lea RAX,QWORD PTR [RCX+RAX*2]
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
.L_447fd8:

            mov RAX,QWORD PTR [RSP+16]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add CX,AX
            je .L_4480f0

            mov RAX,QWORD PTR [RSP+24]
            movzx ECX,CX
            mov RSI,RBX
            lea R14,QWORD PTR [RAX+RCX*1]
            mov RDI,R14
            call .L_43a190

            test AL,AL
            je .L_4480a4

            movzx ESI,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            movzx EDX,BYTE PTR [R14+5]
            shl ESI,8
            add ESI,EAX
            movzx EAX,BYTE PTR [R14+4]
            movzx R13D,SI
            mov EDI,EAX
            shl EDI,8
            add EDI,EDX
            test DI,DI
            movzx R8D,DI
            je .L_448260

            lea R12D,DWORD PTR [R8-1]
            xor R15D,R15D
            add R12,1
            jmp .L_448067
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_448050:

            add R15,1
            cmp R12,R15
            je .L_448168

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
.L_448067:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_44807c

            lea RDX,QWORD PTR [R14+R15*2+6]
.L_44807c:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,R13D
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBP
            call .L_447660

            test AL,AL
            jne .L_448050
.L_4480a4:

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_4480c8

            movzx ECX,BYTE PTR [RBX+24]
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBX+28],EDX
            test CL,CL
            jne .L_4480e1

            cmp EDX,3
            je .L_4480c8

            add EAX,2
            mov DWORD PTR [RBX+28],EAX
            nop
            nop
            nop
.L_4480c8:

            mov BYTE PTR [RSP+15],0
.L_4480cd:

            movzx EAX,BYTE PTR [RSP+15]
            add RSP,56
.L_4480d6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4480e1:

            mov RAX,QWORD PTR [RSP+16]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RAX+1],0
            nop
            nop
            nop
.L_4480f0:

            mov RCX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+32],RCX
            je .L_4480cd

            mov RAX,QWORD PTR [RSP]
            cmp RAX,QWORD PTR [RBX+8]
            jb .L_448130

            mov RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP]
            cmp RCX,RAX
            ja .L_448130

            sub RAX,RCX
            add QWORD PTR [RSP+16],2
            add RCX,2
            cmp EAX,1
            mov QWORD PTR [RSP],RCX
            ja .L_447fd8

            nop
            nop
            nop
            nop
.L_448130:

            movzx EAX,BYTE PTR [RBX+24]
            mov BYTE PTR [RSP+15],AL
            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_4480c8

            add EAX,1
            cmp BYTE PTR [RSP+15],0
            mov DWORD PTR [RBX+28],EAX
            je .L_4480c8

            mov RAX,QWORD PTR [RSP+40]
            xor EDX,EDX
            mov WORD PTR [RAX+8],DX
            jmp .L_4480cd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448168:

            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,7
            jne .L_4480f0

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx R8D,AX
            je .L_448270

            lea RAX,QWORD PTR [R14+6]
.L_4481a0:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,RBP
            xor EDI,EDI
            movzx EDX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ESI
            cmp DX,1
            jne .L_4481dd

            movzx EDI,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
.L_4481dd:

            cmp R8D,1
            jbe .L_4480f0

            lea EAX,DWORD PTR [R8-2]
            lea RSI,QWORD PTR [R14+8]
            lea R8,QWORD PTR [R14+RAX*2+10]
            jmp .L_448225
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448200:

            movzx EDX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
.L_448210:

            cmp EDI,EAX
            jne .L_4480a4

            add RSI,2
            cmp R8,RSI
            je .L_4480f0
.L_448225:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,RBP
            movzx EDX,BYTE PTR [RAX]
            movzx R9D,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,R9D
            cmp DX,1
            je .L_448200

            xor EAX,EAX
            jmp .L_448210
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448260:

            cmp SI,7
            jne .L_4480f0

            nop
            nop
            nop
            nop
            nop
            nop
.L_448270:

            xor R8D,R8D
            mov RAX,RBP
            jmp .L_4481a0
.L_44827b:
          .string "hb-open-type-private.hh"
.L_448293:
          .string "this->start <= this->end"
# WARNING: found overlapping blocks at address 48065
# WARNING: found overlapping blocks at address 4806e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4482b0:

            push R15
            push R14
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_658760]
            push RBP
            push RBX
            sub RSP,136
.L_4482c8:

            lea R15,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+72],RDI
            mov DWORD PTR [RSP+80],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+88],0
            mov QWORD PTR [RSP+96],0
            mov BYTE PTR [RSP+104],0
            mov DWORD PTR [RSP+108],0
            mov QWORD PTR [RSP+112],0
.L_448312:

            call .L_401c30

            mov BYTE PTR [RSP+104],0
            mov RDI,RAX
            mov QWORD PTR [RSP+112],RAX
.L_448324:

            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+112]
            mov RBX,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+96],RBX
            cmp RBX,RAX
            mov QWORD PTR [RSP+56],RAX
            jb .L_4488da

            cmp QWORD PTR [RSP+56],0
            mov DWORD PTR [RSP+108],0
            mov DWORD PTR [RSP+80],0
            je .L_4483d0

            mov RBX,QWORD PTR [RSP+56]
            mov RSI,R15
            mov RDI,RBX
            call .L_4410f0

            test AL,AL
            je .L_448408

            mov RSI,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RBX+8]
            mov RCX,RBX
            cmp RAX,RSI
            jb .L_448408

            mov RDI,QWORD PTR [RSP+96]
            cmp RAX,RDI
            ja .L_448408

            mov RBX,RDI
            sub RBX,RAX
            cmp EBX,1
            jbe .L_448408

            movzx EAX,BYTE PTR [RCX+8]
            movzx EDX,BYTE PTR [RCX+9]
            shl EAX,8
            add AX,DX
            jne .L_4484a0
.L_4483c4:

            mov ECX,DWORD PTR [RSP+108]
            test ECX,ECX
            jne .L_448880
.L_4483d0:

            mov RDI,QWORD PTR [RSP+112]
            call .L_401950
.L_4483da:

            mov RSI,QWORD PTR [RSP+120]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+72]
            jne .L_4488d5

            add RSP,136
.L_4483fa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448408:

            mov EAX,DWORD PTR [RSP+108]
            test EAX,EAX
            jne .L_448450
.L_448410:

            mov RDI,QWORD PTR [RSP+112]
            call .L_401950

            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+88],0
.L_448435:

            mov RDI,QWORD PTR [RSP+72]
            call .L_401950

            call .L_401c20

            mov QWORD PTR [RSP+72],RAX
            jmp .L_4483da
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448450:

            cmp BYTE PTR [RSP+104],0
            jne .L_448410
.L_448457:

            mov R14,QWORD PTR [RSP+72]
            xor ESI,ESI
            mov RDI,R14
            call .L_401d70

            mov RDI,R14
            mov RBX,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            cmp QWORD PTR [RSP+88],0
            mov QWORD PTR [RSP+96],RBX
            je .L_448410

            mov BYTE PTR [RSP+104],1
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_448324
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4484a0:

            movzx EAX,AX
            add RAX,RCX
            cmp RSI,RAX
            mov RBX,RAX
            mov QWORD PTR [RSP+40],RAX
            ja .L_448738

            cmp RDI,RAX
            jb .L_448738

            mov RAX,RDI
            sub RAX,RBX
            cmp EAX,1
            jbe .L_448738

            lea RAX,QWORD PTR [RBX+2]
            cmp RSI,RAX
            ja .L_448738

            cmp RDI,RAX
            jb .L_448738

            movzx EDX,BYTE PTR [RBX]
            movzx ECX,BYTE PTR [RBX+1]
            shl EDX,8
            add EDX,ECX
            mov RCX,RDI
            movzx R8D,DX
            sub RCX,RAX
            lea R9D,DWORD PTR [R8+R8*1]
            cmp R9D,ECX
            ja .L_448738

            test DX,DX
            je .L_4483c4

            cmp ECX,1
            jbe .L_448738

            lea RCX,QWORD PTR [RBX+4]
            mov QWORD PTR [RSP+32],RAX
            lea EAX,DWORD PTR [R8-1]
            lea RAX,QWORD PTR [RCX+RAX*2]
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+48],RAX
            nop
            nop
            nop
.L_448538:

            mov RAX,QWORD PTR [RSP+32]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add CX,AX
            je .L_4486e8

            mov RAX,QWORD PTR [RSP+40]
            movzx ECX,CX
            lea R14,QWORD PTR [RAX+RCX*1]
            cmp R14,RSI
            jb .L_4486a8

            cmp R14,RDI
            ja .L_4486a8

            mov RAX,RDI
            sub RAX,R14
            cmp EAX,5
            jbe .L_4486a8

            lea RCX,QWORD PTR [R14+4]
            cmp RCX,RSI
            mov QWORD PTR [RSP+64],RCX
            jb .L_4486a8

            cmp RDI,RCX
            jb .L_4486a8

            mov RAX,RDI
            sub RAX,RCX
            cmp EAX,1
            jbe .L_4486a8

            lea RBX,QWORD PTR [R14+6]
            cmp RBX,RSI
            mov QWORD PTR [RSP+24],RBX
            jb .L_4486a8

            cmp RDI,RBX
            jb .L_4486a8

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
            mov R10,RDI
            sub R10,RBX
            mov R8D,EAX
            shl R8D,8
            add R8D,EDX
            movzx R11D,R8W
            lea R9D,DWORD PTR [R11+R11*1]
            mov DWORD PTR [RSP+12],R11D
            cmp R9D,R10D
            ja .L_4486a8

            test BYTE PTR [R14+3],16
            je .L_448620

            add R9D,2
            add R9,RCX
            cmp R9,RSI
            jb .L_4486a8

            cmp RDI,R9
            jb .L_4486a8

            sub RDI,R9
            cmp EDI,1
            jbe .L_4486a8

            nop
            nop
.L_448620:

            movzx ESI,BYTE PTR [R14]
            movzx EDI,BYTE PTR [R14+1]
            shl ESI,8
            add ESI,EDI
            test R8W,R8W
            movzx EBX,SI
            je .L_448868

            mov RBP,QWORD PTR [RSP+24]
            xor R12D,R12D
            mov RSI,RBP
            mov RBP,R14
            mov R14,RSI
            jmp .L_44866b
          .byte 0x66
          .byte 0x90
.L_448650:

            add R12D,1
            add R14,2
            cmp DWORD PTR [RSP+12],R12D
            je .L_448770

            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
.L_44866b:

            shl EAX,8
            mov RSI,R15
            add EAX,EDX
            mov RDX,R13
            movzx EAX,AX
            cmp EAX,R12D
            cmova RDX,R14
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,RBP
            test AX,AX
            cmove RDI,R13
            call .L_447660

            test AL,AL
            jne .L_448650

            nop
            nop
            nop
            nop
.L_4486a8:

            mov EAX,DWORD PTR [RSP+108]
            cmp EAX,2
            ja .L_448450

            cmp BYTE PTR [RSP+104],0
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RSP+108],EDX
            jne .L_4486d8

            cmp EDX,3
            je .L_448450

            add EAX,2
            mov DWORD PTR [RSP+108],EAX
            jmp .L_448457
.L_4486d8:

            mov RAX,QWORD PTR [RSP+32]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RAX+1],0
            nop
            nop
            nop
            nop
.L_4486e8:

            mov RSI,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+48],RSI
            je .L_4483c4

            mov RSI,QWORD PTR [RSP+88]
            cmp QWORD PTR [RSP+16],RSI
            jb .L_448738

            mov RDI,QWORD PTR [RSP+96]
            mov RBX,QWORD PTR [RSP+16]
            cmp RBX,RDI
            ja .L_448738

            mov RAX,RDI
            add QWORD PTR [RSP+32],2
            sub RAX,RBX
            add RBX,2
            cmp EAX,1
            mov QWORD PTR [RSP+16],RBX
            ja .L_448538

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448738:

            mov EAX,DWORD PTR [RSP+108]
            movzx EDX,BYTE PTR [RSP+104]
            cmp EAX,2
            ja .L_448450

            add EAX,1
            test DL,DL
            mov DWORD PTR [RSP+108],EAX
            je .L_448457

            mov RAX,QWORD PTR [RSP+56]
            xor ESI,ESI
            mov WORD PTR [RAX+8],SI
            jmp .L_4483c4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448770:

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            mov R14,RBP
            shl EAX,8
            add EAX,EDX
            cmp AX,7
            jne .L_4486e8

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
            mov ESI,0
            mov R12,QWORD PTR [RSP+24]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            cmove EDX,ESI
            cmove R12,R13
.L_4487b0:

            movzx ESI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ESI,8
            add ESI,EAX
            movzx EAX,SI
            add RAX,R14
            test SI,SI
            cmove RAX,R13
            movzx ESI,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            shl ESI,8
            add ESI,EDI
            xor EDI,EDI
            cmp SI,1
            jne .L_4487f1

            movzx EDI,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
.L_4487f1:

            cmp EDX,1
            jbe .L_4486e8

            mov RCX,QWORD PTR [RSP+64]
            lea EAX,DWORD PTR [RDX-2]
            lea RSI,QWORD PTR [R14+8]
            lea R8,QWORD PTR [RCX+RAX*2+6]
            jmp .L_448835
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448810:

            movzx EDX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
.L_448820:

            cmp EDI,EAX
            jne .L_4486a8

            add RSI,2
            cmp R8,RSI
            je .L_4486e8
.L_448835:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,R13
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_448810

            xor EAX,EAX
            jmp .L_448820
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_448868:

            cmp SI,7
            jne .L_4486e8

            xor EDX,EDX
            lea R12,QWORD PTR [RIP+.L_658760]
            jmp .L_4487b0
.L_448880:

            mov RDI,QWORD PTR [RSP+56]
            mov RSI,R15
            mov DWORD PTR [RSP+108],0
            call .L_447ed0

            mov EDX,DWORD PTR [RSP+108]
            mov EBX,EAX
            test EDX,EDX
            jne .L_448410

            mov RDI,QWORD PTR [RSP+112]
            call .L_401950

            test BL,BL
            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+88],0
            jne .L_4483da

            jmp .L_448435
.L_4488d5:

            call __stack_chk_fail@PLT
.L_4488da:

            lea RCX,QWORD PTR [RIP+.L_44aea0]
            lea RSI,QWORD PTR [RIP+.L_44827b]
            lea RDI,QWORD PTR [RIP+.L_448293]
            mov EDX,218
            call __assert_fail@PLT
.L_4488f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448900:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RCX,QWORD PTR [RSI+8]
            cmp RCX,RDI
            ja .L_448930

            mov RBP,RSI
            mov RSI,QWORD PTR [RSI+16]
            mov RBX,RDI
            cmp RSI,RDI
            jae .L_448948

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448930:

            xor R15D,R15D
.L_448933:

            add RSP,88
            mov EAX,R15D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448948:

            mov RAX,RSI
            mov R14,RDI
            sub RAX,RDI
            lea RDI,QWORD PTR [RIP+.L_4492d4]
            cmp EAX,1
            jbe .L_448930
.L_44895d:

            cmp EDX,9
            ja .L_448970

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RDI+RDX*4]
            add RAX,RDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448970:

            mov R15D,1
            jmp .L_448933
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448980:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_448930

            cmp R14,RSI
            ja .L_448930

            sub RSI,R14
            cmp ESI,1
            jbe .L_448930

            cmp AX,1
            jne .L_448970

            cmp ESI,11
            jbe .L_448930

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            je .L_448930

            lea RDI,QWORD PTR [RBX+4]
            mov RDX,R14
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            je .L_448930

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,R14
            mov RSI,RBP
            call .L_4427b0

            test AL,AL
            je .L_448930

            movzx ECX,BYTE PTR [RBX+6]
            movzx EAX,BYTE PTR [RBX+7]
            add RSP,88
.L_4489fa:

            lea RDI,QWORD PTR [RBX+10]
            mov RDX,R14
            mov RSI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            jmp .L_442900
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448a20:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_448930

            cmp R14,RSI
            ja .L_448930

            sub RSI,R14
            cmp ESI,1
            jbe .L_448930

            cmp AX,1
            jne .L_448970

            cmp ESI,11
            jbe .L_448930

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            je .L_448930

            lea RDI,QWORD PTR [RBX+4]
            mov RDX,R14
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            je .L_448930

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,R14
            mov RSI,RBP
            call .L_4427b0

            test AL,AL
            mov R15D,EAX
            je .L_448930

            mov RCX,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RBX+10]
            cmp RDX,RCX
            jb .L_448930

            mov RAX,QWORD PTR [RBP+16]
            cmp RDX,RAX
            ja .L_448930

            mov RDI,RAX
            sub RDI,RDX
            cmp EDI,1
            jbe .L_448930

            movzx EDX,BYTE PTR [RBX+10]
            movzx ESI,BYTE PTR [RBX+11]
            shl EDX,8
            add DX,SI
            je .L_448933

            movzx EDX,DX
            add R14,RDX
            cmp RCX,R14
            ja .L_448b83

            cmp RAX,R14
            jb .L_448b83

            mov RDX,RAX
            sub RDX,R14
            cmp EDX,1
            jbe .L_448b83

            lea R12,QWORD PTR [R14+2]
            cmp RCX,R12
            ja .L_448b83

            cmp RAX,R12
            jb .L_448b83

            movzx EDX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            sub RAX,R12
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            lea ESI,DWORD PTR [RCX+RCX*1]
            cmp ESI,EAX
            ja .L_448b83

            test DX,DX
            je .L_448933

            movzx R13D,BYTE PTR [RBX+6]
            movzx EAX,BYTE PTR [RBX+7]
            shl R13D,8
            add R13D,EAX
            lea EAX,DWORD PTR [RCX-1]
            movzx R13D,R13W
            add RAX,RAX
            lea RAX,QWORD PTR [R14+RAX*1+4]
            mov QWORD PTR [RSP],RAX
            jmp .L_448b6e
.L_448b60:

            add R12,2
            cmp QWORD PTR [RSP],R12
            je .L_448933
.L_448b6e:

            mov ECX,R13D
            mov RDX,R14
            mov RSI,RBP
            mov RDI,R12
            call .L_442900

            test AL,AL
            jne .L_448b60
.L_448b83:

            mov EAX,DWORD PTR [RBP+28]
            cmp EAX,2
            ja .L_448930

            movzx R15D,BYTE PTR [RBP+24]
            add EAX,1
            mov DWORD PTR [RBP+28],EAX
            test R15B,R15B
            je .L_448930

            mov WORD PTR [RBX+10],0
            jmp .L_448933
          .byte 0x66
          .byte 0x90
.L_448bb0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_448930

            cmp R14,RSI
            ja .L_448930

            mov RDX,RSI
            sub RDX,R14
            cmp EDX,1
            jbe .L_448930

            cmp AX,1
            jne .L_448970

            cmp EDX,7
            jbe .L_448930

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EAX,EDX
            je .L_448930

            movzx EDX,BYTE PTR [RBX+2]
            movzx R8D,BYTE PTR [RBX+3]
            mov EAX,EAX
            add R14,RAX
            shl EDX,8
            add EDX,R8D
            cmp R14,RCX
            movzx EDX,DX
            jb .L_448930

            cmp R14,RSI
            ja .L_448930

            mov RAX,RSI
            mov RBX,R14
            sub RAX,R14
            cmp EAX,1
            ja .L_44895d

            jmp .L_448930
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448c60:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_448930

            cmp R14,RSI
            ja .L_448930

            sub RSI,R14
            cmp ESI,1
            jbe .L_448930

            cmp AX,1
            jne .L_448970

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            mov R15D,EAX
            je .L_448930

            mov RCX,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RBX+4]
            cmp RDX,RCX
            jb .L_448930

            mov RSI,QWORD PTR [RBP+16]
            cmp RDX,RSI
            ja .L_448930

            mov RAX,RSI
            sub RAX,RDX
            cmp EAX,1
            jbe .L_448930

            lea RAX,QWORD PTR [RBX+6]
            cmp RCX,RAX
            ja .L_448930

            cmp RSI,RAX
            jb .L_448930

            movzx ECX,BYTE PTR [RBX+4]
            movzx EDI,BYTE PTR [RBX+5]
            sub RSI,RAX
            shl ECX,8
            add ECX,EDI
            movzx EDI,CX
            lea R10D,DWORD PTR [RDI*4]
            cmp R10D,ESI
            ja .L_448930

            test CX,CX
            je .L_448933

            mov RBX,RAX
            lea EAX,DWORD PTR [RDI-1]
            lea R12,QWORD PTR [RDX+RAX*4+6]
            jmp .L_448d54
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448d30:

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_4426a0

            test AL,AL
            je .L_448930

            add RBX,4
            cmp R12,RBX
            je .L_448933
.L_448d54:

            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_4426a0

            test AL,AL
            je .L_448930

            jmp .L_448d30
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_448d70:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_448930

            cmp R14,RSI
            ja .L_448930

            sub RSI,R14
            cmp ESI,1
            jbe .L_448930

            cmp AX,1
            je .L_448f20

            cmp AX,2
            jne .L_448970

            add RSP,88
.L_448db2:

            mov RSI,RBP
            mov RDI,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_442e00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448dd0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_448930

            cmp R14,RSI
            ja .L_448930

            sub RSI,R14
            cmp ESI,1
            jbe .L_448930

            cmp AX,1
            je .L_4491b0

            cmp AX,2
            jne .L_448970

            cmp ESI,7
            jbe .L_448930

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            je .L_448930

            movzx EAX,BYTE PTR [RBX+6]
            movzx R13D,BYTE PTR [RBX+4]
            lea R12,QWORD PTR [RBX+8]
            shl EAX,8
            shl R13D,8
            mov EDX,EAX
            movzx EAX,BYTE PTR [RBX+7]
            add EAX,EDX
            mov WORD PTR [RSP+8],AX
            movzx R15D,AX
            movzx EAX,BYTE PTR [RBX+5]
            add EAX,R13D
            movzx EDI,AX
            mov WORD PTR [RSP],AX
            call __popcountdi2@PLT

            movsxd R13,EAX
            mov ECX,R15D
            mov RSI,R12
            lea EDX,DWORD PTR [R13+R13*1]
            mov RDI,RBP
            call .L_439dc0

            test AL,AL
            je .L_448930

            test BYTE PTR [RSP],240
            je .L_448970

            cmp WORD PTR [RSP+8],0
            je .L_448970

            lea RAX,QWORD PTR [R13+R13*1]
            add RBX,4
            xor R13D,R13D
            mov QWORD PTR [RSP],RAX
            jmp .L_448ec1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_448eb0:

            add R13D,1
            add R12,QWORD PTR [RSP]
            cmp R15D,R13D
            je .L_448970
.L_448ec1:

            mov RCX,R12
            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_441c10

            test AL,AL
            jne .L_448eb0

            jmp .L_448930
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448ee0:

            add RSP,88
.L_448ee4:

            mov RSI,RBP
            mov RDI,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_447490
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448f00:

            add RSP,88
            mov RSI,RBP
            mov RDI,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4472f0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448f20:

            cmp ESI,9
            jbe .L_448930

            movzx EDI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDI,BYTE PTR [RBX+6]
            movsxd R12,EAX
            movzx EAX,BYTE PTR [RBX+7]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            mov R13D,EAX
            call .L_442b40

            test AL,AL
            mov R15D,EAX
            je .L_448930

            mov RCX,QWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RBX+8]
            cmp RAX,RCX
            jb .L_448930

            mov RSI,QWORD PTR [RBP+16]
            cmp RAX,RSI
            ja .L_448930

            mov RDX,RSI
            sub RDX,RAX
            cmp EDX,1
            jbe .L_448930

            lea R8,QWORD PTR [RBX+10]
            cmp RCX,R8
            ja .L_448930

            cmp RSI,R8
            jb .L_448930

            movzx EDI,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            mov R10,RSI
            sub R10,R8
            shl EDI,8
            add EDI,EDX
            movzx EDX,DI
            lea R11D,DWORD PTR [RDX+RDX*1]
            cmp R11D,R10D
            ja .L_448930

            test DI,DI
            je .L_448933

            cmp R10D,1
            jbe .L_448930

            lea RDI,QWORD PTR [RBX+4]
            sub EDX,1
            mov BYTE PTR [RSP+79],R15B
            lea RAX,QWORD PTR [RAX+RDX*2+4]
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+48],RDI
            lea EDI,DWORD PTR [R12+R13*1+1]
            mov R13,R8
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RBX+6]
            lea R11D,DWORD PTR [RDI+RDI*1]
            add RDI,RDI
            mov QWORD PTR [RSP],RDI
            lea RDI,QWORD PTR [R12+R12*1+2]
            lea R12,QWORD PTR [RBX+12]
            mov DWORD PTR [RSP+72],R11D
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+56],RDI
.L_44903b:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add AX,DX
            je .L_4490d8

            movzx EAX,AX
            add RAX,R14
            cmp RAX,RCX
            jb .L_449180

            cmp RAX,RSI
            ja .L_449180

            mov RDX,RSI
            sub RDX,RAX
            cmp EDX,1
            jbe .L_449180

            movzx EDX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,EDI
            lea RDI,QWORD PTR [RAX+2]
            movzx R15D,DX
            cmp RCX,RDI
            mov QWORD PTR [RSP+16],RDI
            ja .L_449180

            cmp RSI,RDI
            jb .L_449180

            mov ECX,DWORD PTR [RSP+72]
            sub RSI,RDI
            imul ECX,R15D
            cmp ECX,ESI
            ja .L_449180

            mov RCX,QWORD PTR [RSP+24]
            movzx ECX,BYTE PTR [RCX+5]
            and ECX,240
            jne .L_44923e

            mov RAX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RAX+7]
            test AL,240
            jne .L_449119
.L_4490d8:

            cmp R12,QWORD PTR [RSP+8]
            je .L_449299

            mov RCX,QWORD PTR [RBP+8]
            cmp R12,RCX
            jb .L_448930

            mov RSI,QWORD PTR [RBP+16]
            cmp R12,RSI
            ja .L_448930

            mov RAX,RSI
            add R13,2
            sub RAX,R12
            add R12,2
            cmp EAX,1
            ja .L_44903b

            jmp .L_448930
.L_449119:

            test DX,DX
            je .L_4490d8
.L_44911e:

            mov RBX,QWORD PTR [RSP+16]
            add RBX,QWORD PTR [RSP+56]
            xor R9D,R9D
            mov QWORD PTR [RSP+16],R13
            mov QWORD PTR [RSP+32],R12
            mov R13D,R9D
            mov R12,RBX
            mov RBX,QWORD PTR [RSP+64]
            jmp .L_449159
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449148:

            add R13D,1
            add R12,QWORD PTR [RSP]
            cmp R15D,R13D
            je .L_4492c4
.L_449159:

            mov RCX,R12
            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_441c10

            test AL,AL
            jne .L_449148

            mov R13,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449180:

            mov EAX,DWORD PTR [RBP+28]
            cmp EAX,2
            ja .L_448930

            movzx EDX,BYTE PTR [RBP+24]
            add EAX,1
            mov DWORD PTR [RBP+28],EAX
            test DL,DL
            je .L_448930

            mov BYTE PTR [R13],0
            mov BYTE PTR [R13+1],0
            jmp .L_4490d8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4491b0:

            cmp ESI,5
            jbe .L_448930

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_442b40

            test AL,AL
            je .L_448930

            movzx R12D,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            lea R13,QWORD PTR [RBX+6]
            shl R12D,8
            add R12D,EAX
            movzx EDI,R12W
            call __popcountdi2@PLT

            cmp R13,QWORD PTR [RBP+8]
            jb .L_448930

            mov RDX,QWORD PTR [RBP+16]
            cmp R13,RDX
            ja .L_448930

            add EAX,EAX
            sub RDX,R13
            cmp EAX,EDX
            ja .L_448930

            and R12D,240
            je .L_448970

            add RSP,88
.L_449222:

            lea RDI,QWORD PTR [RBX+4]
            mov RCX,R13
            pop RBX
            mov RDX,R14
            mov RSI,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_441c10
.L_44923e:

            test DX,DX
            je .L_4490d8

            lea R9,QWORD PTR [RAX+4]
            xor EBX,EBX
            mov QWORD PTR [RSP+32],R13
            mov QWORD PTR [RSP+40],R12
            mov R13D,EBX
            mov RBX,QWORD PTR [RSP+48]
            mov R12,R9
            jmp .L_449275
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_449268:

            add R13D,1
            add R12,QWORD PTR [RSP]
            cmp R15D,R13D
            je .L_4492a4
.L_449275:

            mov RCX,R12
            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_441c10

            test AL,AL
            jne .L_449268

            mov R13,QWORD PTR [RSP+32]
            mov R12,QWORD PTR [RSP+40]
            jmp .L_449180
.L_449299:

            movzx R15D,BYTE PTR [RSP+79]
            jmp .L_448933
.L_4492a4:

            mov RAX,QWORD PTR [RSP+24]
            mov R13,QWORD PTR [RSP+32]
            mov R12,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RAX+7]
            test AL,240
            je .L_4490d8

            jmp .L_44911e
.L_4492c4:

            mov R13,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+32]
            jmp .L_4490d8
.L_4492d3:
          .byte 0x90
.L_4492d4:
          .long .L_448970-.L_4492d4
          .long .L_448dd0-.L_4492d4
          .long .L_448d70-.L_4492d4
          .long .L_448c60-.L_4492d4
          .long .L_448980-.L_4492d4
          .long .L_448a20-.L_4492d4
          .long .L_448980-.L_4492d4
          .long .L_448f00-.L_4492d4
          .long .L_448ee0-.L_4492d4
          .long .L_448bb0-.L_4492d4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_449300:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,56
.L_449311:

            mov QWORD PTR [RSP+40],RDI
            call .L_4410f0

            test AL,AL
            mov BYTE PTR [RSP+15],AL
            je .L_4494f8

            mov RDI,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RDI+8]
            cmp RAX,RDX
            jb .L_4494f8

            mov RCX,QWORD PTR [RBX+16]
            cmp RAX,RCX
            ja .L_4494f8

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_4494f8

            movzx EAX,BYTE PTR [RDI+8]
            movzx ESI,BYTE PTR [RDI+9]
            shl EAX,8
            add AX,SI
            je .L_4494fd

            movzx EAX,AX
            add RAX,RDI
            cmp RDX,RAX
            mov R8,RAX
            mov QWORD PTR [RSP+24],RAX
            ja .L_449560

            cmp RCX,RAX
            jb .L_449560

            mov RAX,RCX
            sub RAX,R8
            cmp EAX,1
            jbe .L_449560

            lea RAX,QWORD PTR [R8+2]
            cmp RDX,RAX
            ja .L_449560

            cmp RCX,RAX
            jb .L_449560

            movzx EDX,BYTE PTR [R8]
            movzx ESI,BYTE PTR [R8+1]
            sub RCX,RAX
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*1]
            cmp EDI,ECX
            ja .L_449560

            test DX,DX
            je .L_4494fd

            cmp ECX,1
            jbe .L_449560

            lea RCX,QWORD PTR [R8+4]
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [RSI-1]
            lea R12,QWORD PTR [RIP+.L_658760]
            lea RAX,QWORD PTR [RCX+RAX*2]
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
.L_449408:

            mov RAX,QWORD PTR [RSP+16]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add CX,AX
            je .L_449520

            mov RAX,QWORD PTR [RSP+24]
            movzx ECX,CX
            mov RSI,RBX
            lea R15,QWORD PTR [RAX+RCX*1]
            mov RDI,R15
            call .L_43a190

            test AL,AL
            je .L_4494d3

            movzx EBP,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx EBP,BP
            mov ESI,EAX
            shl ESI,8
            add ESI,EDX
            test SI,SI
            movzx EDI,SI
            je .L_449520

            lea R13D,DWORD PTR [RDI-1]
            xor R14D,R14D
            add R13,1
            jmp .L_449497
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449480:

            add R14,1
            cmp R13,R14
            je .L_449520

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_449497:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_4494ac

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_4494ac:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,R12
            call .L_448900

            test AL,AL
            jne .L_449480
.L_4494d3:

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_4494f8

            movzx ECX,BYTE PTR [RBX+24]
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBX+28],EDX
            test CL,CL
            jne .L_449511

            cmp EDX,3
            je .L_4494f8

            add EAX,2
            mov DWORD PTR [RBX+28],EAX
            nop
            nop
            nop
            nop
.L_4494f8:

            mov BYTE PTR [RSP+15],0
.L_4494fd:

            movzx EAX,BYTE PTR [RSP+15]
            add RSP,56
.L_449506:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_449511:

            mov RAX,QWORD PTR [RSP+16]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RAX+1],0
            nop
            nop
            nop
.L_449520:

            mov RCX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+32],RCX
            je .L_4494fd

            mov RAX,QWORD PTR [RSP]
            cmp RAX,QWORD PTR [RBX+8]
            jb .L_449560

            mov RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP]
            cmp RCX,RAX
            ja .L_449560

            sub RAX,RCX
            add QWORD PTR [RSP+16],2
            add RCX,2
            cmp EAX,1
            mov QWORD PTR [RSP],RCX
            ja .L_449408

            nop
            nop
            nop
            nop
.L_449560:

            movzx EAX,BYTE PTR [RBX+24]
            mov BYTE PTR [RSP+15],AL
            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_4494f8

            add EAX,1
            cmp BYTE PTR [RSP+15],0
            mov DWORD PTR [RBX+28],EAX
            je .L_4494f8

            mov RAX,QWORD PTR [RSP+40]
            xor EDX,EDX
            mov WORD PTR [RAX+8],DX
            jmp .L_4494fd
.L_449591:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4495a0:

            push R15
            push R14
            lea R15,QWORD PTR [RIP+.L_658760]
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_4495b5:

            lea R12,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+56],RDI
            mov DWORD PTR [RSP+64],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
            mov BYTE PTR [RSP+88],0
            mov DWORD PTR [RSP+92],0
            mov QWORD PTR [RSP+96],0
            call .L_401c30

            mov BYTE PTR [RSP+88],0
            mov RDI,RAX
            mov QWORD PTR [RSP+96],RAX
.L_449611:

            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+96]
            mov RBX,RAX
            mov QWORD PTR [RSP+72],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            mov RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+80],RBX
            cmp RBX,RAX
            mov QWORD PTR [RSP+48],RAX
            jb .L_449aa3

            cmp QWORD PTR [RSP+48],0
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+64],0
            je .L_4496c0

            mov RBX,QWORD PTR [RSP+48]
            mov RSI,R12
            mov RDI,RBX
            call .L_4410f0

            test AL,AL
            je .L_4496f8

            mov R9,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RBX+8]
            cmp RAX,R9
            jb .L_4496f8

            mov R10,QWORD PTR [RSP+80]
            cmp RAX,R10
            ja .L_4496f8

            mov RSI,R10
            sub RSI,RAX
            cmp ESI,1
            jbe .L_4496f8

            movzx EAX,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            shl EAX,8
            add AX,DX
            jne .L_449790
.L_4496ae:

            mov ECX,DWORD PTR [RSP+92]
            test ECX,ECX
            jne .L_449a49

            nop
            nop
            nop
            nop
            nop
            nop
.L_4496c0:

            mov RDI,QWORD PTR [RSP+96]
            call .L_401950
.L_4496ca:

            mov RSI,QWORD PTR [RSP+104]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+56]
            jne .L_449a9e

            add RSP,120
.L_4496e7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_4496f8:

            mov EAX,DWORD PTR [RSP+92]
            test EAX,EAX
            jne .L_449740
.L_449700:

            mov RDI,QWORD PTR [RSP+96]
            call .L_401950

            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+72],0
.L_449725:

            mov RDI,QWORD PTR [RSP+56]
            call .L_401950

            call .L_401c20

            mov QWORD PTR [RSP+56],RAX
            jmp .L_4496ca
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449740:

            cmp BYTE PTR [RSP+88],0
            jne .L_449700
.L_449747:

            mov R14,QWORD PTR [RSP+56]
            xor ESI,ESI
            mov RDI,R14
            call .L_401d70

            mov RDI,R14
            mov RBX,RAX
            mov QWORD PTR [RSP+72],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            cmp QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],RBX
            je .L_449700

            mov BYTE PTR [RSP+88],1
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_449611
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449790:

            movzx EAX,AX
            add RAX,RBX
            cmp R9,RAX
            mov RBX,RAX
            mov QWORD PTR [RSP+32],RAX
            ja .L_449a18

            cmp R10,RAX
            jb .L_449a18

            mov RAX,R10
            sub RAX,RBX
            cmp EAX,1
            jbe .L_449a18

            lea R14,QWORD PTR [RBX+2]
            cmp R9,R14
            ja .L_449a18

            cmp R10,R14
            jb .L_449a18

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            mov RDX,R10
            movzx ECX,AX
            sub RDX,R14
            lea ESI,DWORD PTR [RCX+RCX*1]
            cmp ESI,EDX
            ja .L_449a18

            test AX,AX
            je .L_4496ae

            cmp EDX,1
            jbe .L_449a18

            lea RSI,QWORD PTR [RBX+4]
            lea EAX,DWORD PTR [RCX-1]
            mov QWORD PTR [RSP+24],R14
            lea RAX,QWORD PTR [RSI+RAX*2]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+40],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449828:

            mov RAX,QWORD PTR [RSP+24]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add CX,AX
            je .L_4499c8

            mov RAX,QWORD PTR [RSP+32]
            movzx ECX,CX
            lea RBP,QWORD PTR [RAX+RCX*1]
            cmp RBP,R9
            jb .L_449988

            cmp RBP,R10
            ja .L_449988

            mov RAX,R10
            sub RAX,RBP
            cmp EAX,5
            jbe .L_449988

            lea RDI,QWORD PTR [RBP+4]
            cmp RDI,R9
            jb .L_449988

            cmp R10,RDI
            jb .L_449988

            mov RAX,R10
            sub RAX,RDI
            cmp EAX,1
            jbe .L_449988

            lea RDX,QWORD PTR [RBP+6]
            cmp RDX,R9
            jb .L_449988

            cmp R10,RDX
            jb .L_449988

            movzx EAX,BYTE PTR [RBP+4]
            movzx ESI,BYTE PTR [RBP+5]
            mov RBX,R10
            sub RBX,RDX
            mov R11D,EAX
            shl R11D,8
            add R11D,ESI
            movzx ECX,R11W
            lea R8D,DWORD PTR [RCX+RCX*1]
            mov DWORD PTR [RSP+12],ECX
            cmp R8D,EBX
            ja .L_449988

            test BYTE PTR [RBP+3],16
            je .L_449908

            add R8D,2
            add RDI,R8
            cmp RDI,R9
            jb .L_449988

            cmp R10,RDI
            jb .L_449988

            sub R10,RDI
            cmp R10D,1
            jbe .L_449988

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449908:

            movzx EBX,BYTE PTR [RBP]
            movzx EDI,BYTE PTR [RBP+1]
            shl EBX,8
            add EBX,EDI
            test R11W,R11W
            movzx EBX,BX
            je .L_4499c8

            mov R14,RDX
            xor R13D,R13D
            jmp .L_44994b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449930:

            add R13D,1
            add R14,2
            cmp DWORD PTR [RSP+12],R13D
            je .L_4499c8

            movzx EAX,BYTE PTR [RBP+4]
            movzx ESI,BYTE PTR [RBP+5]
.L_44994b:

            shl EAX,8
            mov RDX,R15
            add EAX,ESI
            mov RSI,R12
            movzx EAX,AX
            cmp R13D,EAX
            cmovb RDX,R14
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,RBP
            test AX,AX
            cmove RDI,R15
            call .L_448900

            test AL,AL
            jne .L_449930

            nop
            nop
            nop
            nop
.L_449988:

            mov EAX,DWORD PTR [RSP+92]
            cmp EAX,2
            ja .L_449740

            cmp BYTE PTR [RSP+88],0
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RSP+92],EDX
            jne .L_4499b8

            cmp EDX,3
            je .L_449740

            add EAX,2
            mov DWORD PTR [RSP+92],EAX
            jmp .L_449747
.L_4499b8:

            mov RAX,QWORD PTR [RSP+24]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RAX+1],0
            nop
            nop
            nop
            nop
.L_4499c8:

            mov RCX,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+40],RCX
            je .L_4496ae

            mov R9,QWORD PTR [RSP+72]
            cmp QWORD PTR [RSP+16],R9
            jb .L_449a18

            mov R10,QWORD PTR [RSP+80]
            mov RCX,QWORD PTR [RSP+16]
            cmp RCX,R10
            ja .L_449a18

            mov RAX,R10
            add QWORD PTR [RSP+24],2
            sub RAX,RCX
            add RCX,2
            cmp EAX,1
            mov QWORD PTR [RSP+16],RCX
            ja .L_449828

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449a18:

            mov EAX,DWORD PTR [RSP+92]
            movzx EDX,BYTE PTR [RSP+88]
            cmp EAX,2
            ja .L_449740

            add EAX,1
            test DL,DL
            mov DWORD PTR [RSP+92],EAX
            je .L_449747

            mov RAX,QWORD PTR [RSP+48]
            xor ESI,ESI
            mov WORD PTR [RAX+8],SI
            jmp .L_4496ae
.L_449a49:

            mov RDI,QWORD PTR [RSP+48]
            mov RSI,R12
            mov DWORD PTR [RSP+92],0
            call .L_449300

            mov EDX,DWORD PTR [RSP+92]
            mov EBX,EAX
            test EDX,EDX
            jne .L_449700

            mov RDI,QWORD PTR [RSP+96]
            call .L_401950

            test BL,BL
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+72],0
            jne .L_4496ca

            jmp .L_449725
.L_449a9e:

            call __stack_chk_fail@PLT
.L_449aa3:

            lea RCX,QWORD PTR [RIP+.L_44aea0]
            lea RSI,QWORD PTR [RIP+.L_44827b]
            lea RDI,QWORD PTR [RIP+.L_448293]
            mov EDX,218
            call __assert_fail@PLT
.L_449ac2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449ad0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_449b00

            cmp AX,3
            je .L_449b28

            cmp AX,1
            je .L_449b00

            lea RAX,QWORD PTR [RIP+.L_658760]
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449b00:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
.L_449b0b:

            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449b28:

            movzx EDX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            shl EDX,8
            jmp .L_449b0b
.L_449b35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449b40:

            lea RCX,QWORD PTR [RIP+.L_449c30]
            lea R8,QWORD PTR [RIP+.L_658760]
.L_449b4e:

            cmp EDX,9
            ja .L_449bb0

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_449b60:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_449bb0
.L_449b72:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_658760]
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_449b98:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_449b72

            cmp AX,2
            je .L_449b72
.L_449bb0:

            lea RAX,QWORD PTR [RIP+.L_658760]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449bc0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_449bb0

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RDI
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RDI+2]
            movzx EDI,BYTE PTR [RDI+3]
            cmove RAX,R8
            shl EDX,8
            add EDX,EDI
            mov RDI,RAX
            movzx EDX,DX
            jmp .L_449b4e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449c20:

            jmp .L_434510
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449c28:

            jmp .L_449ad0
.L_449c2d:

            nop
            nop
            nop
.L_449c30:
          .long .L_449bb0-.L_449c30
          .long .L_449b98-.L_449c30
          .long .L_449b98-.L_449c30
          .long .L_449b60-.L_449c30
          .long .L_449b60-.L_449c30
          .long .L_449b60-.L_449c30
          .long .L_449b60-.L_449c30
          .long .L_449c28-.L_449c30
          .long .L_449c20-.L_449c30
          .long .L_449bc0-.L_449c30
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449c60:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_449c6b:

            mov RDI,QWORD PTR [RDI+8]
            mov EBX,DWORD PTR [RBP]
            test RDI,RDI
            je .L_449cb0

            mov EAX,DWORD PTR [RBP+4]
            cmp EAX,EBX
            ja .L_449cc7

            mov EDX,EAX
            mov R12,RDI
            shr EDX,1
            lea R13D,DWORD PTR [RAX+RDX*1+8]
            lea RDX,QWORD PTR [RBP+16]
            cmp RDI,RDX
            je .L_449d55

            cmp R13D,268435454
            ja .L_449ca5

            cmp EAX,R13D
            jbe .L_449ce0
.L_449ca5:

            xor EAX,EAX
            jmp .L_449cd7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449cb0:

            lea R12,QWORD PTR [RBP+16]
            cmp EBX,15
            mov DWORD PTR [RBP+4],16
            mov QWORD PTR [RBP+8],R12
            ja .L_449d18

            mov RDI,R12
.L_449cc7:

            lea EAX,DWORD PTR [RBX+1]
            mov DWORD PTR [RBP],EAX
            mov EAX,EBX
            shl RAX,4
            lea RAX,QWORD PTR [RDI+RAX*1]
.L_449cd7:

            pop RBX
.L_449cd8:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_449ce0:

            mov ESI,R13D
            shl RSI,4
            call realloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_449ca5

            mov EAX,DWORD PTR [RBP]
            mov RBX,RAX
            shl RAX,4
            mov R14,RAX
.L_449d01:

            add EBX,1
            mov QWORD PTR [RBP+8],RCX
            mov DWORD PTR [RBP+4],R13D
            mov DWORD PTR [RBP],EBX
            lea RAX,QWORD PTR [RCX+R14*1]
            jmp .L_449cd7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449d18:

            mov EDI,32
            mov R13D,32
.L_449d23:

            mov ESI,16
            call calloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_449ca5

            mov EAX,EBX
            mov RDI,RCX
            mov RSI,R12
            shl RAX,4
            mov RDX,RAX
            mov R14,RAX
            call memcpy@PLT

            mov RCX,RAX
            jmp .L_449d01
.L_449d55:

            mov EDI,R13D
            jmp .L_449d23
.L_449d5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_449d60:

            push RBX
            movzx EAX,BYTE PTR [RDI]
            mov RBX,RDI
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_449dd0

            cmp AX,3
            je .L_449db0

            cmp AX,1
            je .L_449d90
.L_449d82:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449d90:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449d82

            lea RCX,QWORD PTR [RIP+.L_43b090]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x90
.L_449db0:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449d82

            lea RCX,QWORD PTR [RIP+.L_43afc0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x90
.L_449dd0:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449d82

            lea RCX,QWORD PTR [RIP+.L_43bfc0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
.L_449def:

            nop
.L_449df0:

            push RBX
            movzx EAX,BYTE PTR [RDI]
            mov RBX,RDI
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_449e60

            cmp AX,3
            je .L_449e40

            cmp AX,1
            je .L_449e20
.L_449e12:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449e20:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449e12

            lea RCX,QWORD PTR [RIP+.L_43c5d0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x90
.L_449e40:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449e12

            lea RCX,QWORD PTR [RIP+.L_43d450]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x90
.L_449e60:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449e12

            lea RCX,QWORD PTR [RIP+.L_43d0a0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
.L_449e7f:

            nop
.L_449e80:

            lea RCX,QWORD PTR [RIP+.L_44a078]
            lea R8,QWORD PTR [RIP+.L_658760]
            push RBX
            mov RBX,RDI
.L_449e92:

            cmp EDX,8
            ja .L_449ec3

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449ea8:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449ec3

            lea RDI,QWORD PTR [RIP+.L_43b740]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
.L_449ec3:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449ed0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_449ec3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449ec3

            lea RDI,QWORD PTR [RIP+.L_43f600]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_449ec3
          .byte 0x90
.L_449f00:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_449ea8

            cmp AX,2
            jne .L_449ec3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449ec3

            lea RDI,QWORD PTR [RIP+.L_43b7f0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_449ec3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449f38:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_449ec3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449ec3

            lea RDI,QWORD PTR [RIP+.L_43dd00]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_449ec3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449f78:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_449ec3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449ec3

            lea RDI,QWORD PTR [RIP+.L_43e260]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_449ec3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449fb8:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_449ec3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_449ec3

            lea RDI,QWORD PTR [RIP+.L_43e780]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_449ec3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449ff8:

            mov RDI,RBX
            pop RBX
.L_449ffc:

            jmp .L_449d60
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a008:

            mov RDI,RBX
            pop RBX
            jmp .L_449df0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a018:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_449ec3

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov EDI,EDX
            shl EAX,16
            shl EDI,24
            lea EDX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            movzx EDI,BYTE PTR [RBX+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RBX
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RBX+2]
            cmove RAX,R8
            mov RBX,RAX
            shl EDX,8
            add EDX,EDI
            movzx EDX,DX
            jmp .L_449e92
.L_44a077:
          .byte 0x90
.L_44a078:
          .long .L_449ec3-.L_44a078
          .long .L_449f00-.L_44a078
          .long .L_449f38-.L_44a078
          .long .L_449f78-.L_44a078
          .long .L_449fb8-.L_44a078
          .long .L_449ff8-.L_44a078
          .long .L_44a008-.L_44a078
          .long .L_44a018-.L_44a078
          .long .L_449ed0-.L_44a078
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a0a0:

            push RBX
.L_44a0a1:

            lea RCX,QWORD PTR [RIP+.L_44a324]
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_658760]
.L_44a0b2:

            cmp EDX,9
            ja .L_44a0e3

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a0c8:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_44a0e3

            lea RDI,QWORD PTR [RIP+.L_43f940]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
.L_44a0e3:

            xor EAX,EAX
            pop RBX
.L_44a0e6:

            ret 
          .byte 0x66

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a0f0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_44a0e3

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            movzx R8D,BYTE PTR [RBX+3]
            shl EAX,16
            shl EDX,24
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RBX
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RBX+2]
            cmove RAX,RDI
            mov RBX,RAX
            shl EDX,8
            add EDX,R8D
            movzx EDX,DX
            jmp .L_44a0b2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a150:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_44a0c8

            cmp AX,2
            jne .L_44a0e3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_44a0e3

            lea RDI,QWORD PTR [RIP+.L_43f9e0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_44a0e3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a198:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_44a300

            cmp AX,2
            jne .L_44a0e3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_44a0e3

            lea RDI,QWORD PTR [RIP+.L_440460]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_44a0e3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a1e0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_44a0e3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_44a0e3

            lea RSI,QWORD PTR [RIP+.L_440890]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_44a0e3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a220:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_44a0e3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_44a0e3

            lea RDI,QWORD PTR [RIP+.L_440a60]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_44a0e3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a260:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_44a0e3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_44a0e3

            lea RSI,QWORD PTR [RIP+.L_440cc0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_44a0e3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a2a0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_44a0e3

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_44a0e3

            lea RDI,QWORD PTR [RIP+.L_440ef0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_44a0e3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a2e0:

            mov RDI,RBX
            pop RBX
.L_44a2e4:

            jmp .L_449d60
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a2f0:

            mov RDI,RBX
            pop RBX
            jmp .L_449df0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a300:

            mov RDI,QWORD PTR [RSI]
            call .L_449c60

            test RAX,RAX
            je .L_44a0e3

            lea RSI,QWORD PTR [RIP+.L_440210]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_44a0e3
.L_44a324:
          .long .L_44a0e3-.L_44a324
          .long .L_44a150-.L_44a324
          .long .L_44a198-.L_44a324
          .long .L_44a1e0-.L_44a324
          .long .L_44a220-.L_44a324
          .long .L_44a260-.L_44a324
          .long .L_44a2a0-.L_44a324
          .long .L_44a2e0-.L_44a324
          .long .L_44a2f0-.L_44a324
          .long .L_44a0f0-.L_44a324
.L_44a34c:
          .string "start lookup %d"
.L_44a35c:
          .string "hb-ot-layout.cc"
.L_44a36c:
          .string "end lookup %d"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a380:

            and DWORD PTR [RDX+117],ESP
            jb .L_44a3b5
          .byte 0x3e
          .byte 0x68
          .byte 0x61
          .byte 0x73
          .byte 0x5f
          .byte 0x73
          .byte 0x65
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x65

            pop RDI
            outsd DX,DWORD PTR [RSI]
          .byte 0x75
          .byte 0x74

            jo .L_44a410
          .byte 0x74
          .byte 0x20
          .byte 0x28
          .byte 0x29
          .byte 0x0
.L_44a3a0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            pxor XMM0,XMM0
            sub RSP,648
.L_44a3b5:

            mov RAX,QWORD PTR [RCX+128]
            mov QWORD PTR [RSP+104],RDX
            mov EDX,DWORD PTR [R8+144]
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],3
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RAX+160]
            mov DWORD PTR [RSP+160],EDX
          .byte 0x4c
          .byte 0x89
          .byte 0x84
          .byte 0x24
          .byte 0x98
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x89
          .byte 0x8c
          .byte 0x24
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x84
          .byte 0x24
          .byte 0xa4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
.L_44a410:

            add BYTE PTR [RAX-117],CL
            push RAX
            sbb DH,AL
            test BYTE PTR [RAX+RBP*4],AH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX],AL
            mov QWORD PTR [RSP+88],RSI
            mov QWORD PTR [RSP+16],R8
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+632],RSI
            xor ESI,ESI
            mov QWORD PTR [RSP+192],RDX
            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+8],RCX
            mov DWORD PTR [RSP+128],1
            movaps XMMWORD PTR [RSP+208],XMM0
            shl EAX,8
            add AX,DX
            mov EAX,4294967295
            movaps XMMWORD PTR [RSP+224],XMM0
            setne BYTE PTR [RSP+200]
            movaps XMMWORD PTR [RSP+256],XMM0
            movaps XMMWORD PTR [RSP+288],XMM0
            movaps XMMWORD PTR [RSP+272],XMM0
            movaps XMMWORD PTR [RSP+320],XMM0
            mov R8D,DWORD PTR [RDI+944]
            mov QWORD PTR [RSP+336],RAX
            lea RAX,QWORD PTR [RIP+.L_445310]
            mov DWORD PTR [RSP+232],4294967295
            mov BYTE PTR [RSP+236],0
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+248],0
            test R8D,R8D
            mov DWORD PTR [RSP+296],4294967295
            mov BYTE PTR [RSP+300],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+176],RAX
            je .L_44a6c3

            lea RAX,QWORD PTR [RSP+352]
            lea R15,QWORD PTR [RIP+.L_658760]
            mov DWORD PTR [RSP+84],0
            mov DWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+368]
            mov QWORD PTR [RSP+96],RAX
.L_44a550:

            mov EAX,DWORD PTR [RSP+84]
            mov RSI,QWORD PTR [RSP+32]
            shl RAX,4
            add RAX,QWORD PTR [RSI+952]
            mov ESI,DWORD PTR [RSP+24]
            cmp ESI,DWORD PTR [RAX]
            mov QWORD PTR [RSP+40],RAX
            jae .L_44a680

            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+56],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a588:

            mov R13,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [R13+600]
            lea RBX,QWORD PTR [RAX*8]
            movzx R12D,WORD PTR [RDX+RAX*8]
            lea RDX,QWORD PTR [RIP+.L_44a34c]
            xor EAX,EAX
            mov ECX,R12D
            mov DWORD PTR [RSP+28],R12D
            mov RBP,R12
            call .L_43a0a0

            test AL,AL
            mov R14D,EAX
            je .L_44a66a

            add RBX,QWORD PTR [R13+600]
            mov DWORD PTR [RSP+336],R12D
            mov ESI,R12D
            mov RDI,QWORD PTR [RSP+88]
            lea RCX,QWORD PTR [RBP+RBP*2]
            mov EDX,DWORD PTR [RBX+4]
            mov RAX,QWORD PTR [RDI+8]
            mov RDI,QWORD PTR [RDI]
            mov DWORD PTR [RSP+164],EDX
            movzx R12D,BYTE PTR [RBX+2]
            lea RBX,QWORD PTR [RAX+RCX*8]
            mov DWORD PTR [RSP+80],EDX
            and R12D,1
            mov BYTE PTR [RSP+168],R12B
            call .L_43d5a0

            mov R13,RAX
            mov RAX,QWORD PTR [RSP+152]
            mov EDX,DWORD PTR [RSP+80]
            mov EDI,DWORD PTR [RAX+184]
            mov QWORD PTR [RSP+48],RAX
            test EDI,EDI
            sete CL
            test EDX,EDX
            sete AL
            or CL,AL
            mov BYTE PTR [RSP+80],CL
            je .L_44a6f0
.L_44a64e:

            mov ECX,DWORD PTR [RSP+28]
            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44a36c]
            mov RDI,QWORD PTR [RSP+16]
            xor EAX,EAX
            call .L_43a0a0
.L_44a66a:

            mov RSI,QWORD PTR [RSP+40]
            add DWORD PTR [RSP+24],1
            mov EAX,DWORD PTR [RSP+24]
            cmp DWORD PTR [RSI],EAX
            ja .L_44a588
.L_44a680:

            mov RBX,QWORD PTR [RSP+40]
            cmp QWORD PTR [RBX+8],0
            je .L_44a6a9

            mov R14,QWORD PTR [RSP+16]
            mov RDI,R14
            call .L_4029e0

            mov RDX,R14
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+104]
            call QWORD PTR [RBX+8]
.L_44a6a9:

            mov RSI,QWORD PTR [RSP+32]
            add DWORD PTR [RSP+84],1
            mov EAX,DWORD PTR [RSP+84]
            cmp DWORD PTR [RSI+944],EAX
            ja .L_44a550
.L_44a6c3:

            mov RAX,QWORD PTR [RSP+632]
            xor RAX,QWORD PTR FS:[40]
            jne .L_44ac02

            add RSP,648
.L_44a6e1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a6f0:

            movzx EAX,BYTE PTR [R13+2]
            movzx ECX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,ECX
            test AL,16
            movzx ECX,AX
            jne .L_44aad8
.L_44a70a:

            cmp DWORD PTR [RSP+128],1
            mov RAX,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+188],ECX
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+248],0
            mov QWORD PTR [RSP+216],RAX
            mov DWORD PTR [RSP+224],ECX
            je .L_44aa68

            mov BYTE PTR [RSP+228],0
.L_44a75f:

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+288],ECX
            mov ECX,34
            mov BYTE PTR [RSP+229],R12B
            mov DWORD PTR [RSP+232],EDX
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+304],0

            rep stosq QWORD PTR [RDI]

            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+312],0
            mov BYTE PTR [RSP+292],1
            mov BYTE PTR [RSP+293],1
            mov DWORD PTR [RSP+296],4294967295
            mov DWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+112],RDI
            movzx EBP,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            movzx EDX,BYTE PTR [R13+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R13+4]
            movzx EBP,BP
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_44aac8

            lea R12D,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+72],RBX
            lea R14,QWORD PTR [RSP+112]
            mov RBX,R13
            lea RSI,QWORD PTR [R12+1]
            xor R12D,R12D
            mov R13,R12
            mov R12,RSI
            jmp .L_44a840
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a838:

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
.L_44a840:

            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_44a855

            lea RDX,QWORD PTR [RBX+R13*2+6]
.L_44a855:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R14
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R15
            add R13,1
            call .L_44a0a0

            cmp R13,R12
            jne .L_44a838

            mov RBX,QWORD PTR [RSP+72]
            mov RBP,QWORD PTR [RSP+152]
.L_44a88e:

            mov RAX,QWORD PTR [RSP+48]
            mov DWORD PTR [RAX+180],0
            mov EDX,DWORD PTR [RBP+180]
            jmp .L_44a8b7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44a8a8:

            mov EDX,DWORD PTR [RBP+180]
.L_44a8ae:

            add EDX,1
            mov DWORD PTR [RBP+180],EDX
.L_44a8b7:

            cmp DWORD PTR [RBP+184],EDX
            jbe .L_44a970
.L_44a8c3:

            cmp BYTE PTR [RBP+176],0
            jne .L_44a970

            mov RAX,QWORD PTR [RBP+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov EAX,1
            mov RDI,RAX
            mov ESI,DWORD PTR [RDX]
            mov ECX,ESI
            shr ECX,4
            shl RDI,CL
            test QWORD PTR [RBX],RDI
            je .L_44a920

            mov RDI,RAX
            mov ECX,ESI
            shl RDI,CL
            test QWORD PTR [RBX+8],RDI
            je .L_44a920

            mov ECX,ESI
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RBX+16],RAX
            jne .L_44a9b0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a920:

            cmp BYTE PTR [RBP+177],0
            je .L_44a8a8

            mov RAX,QWORD PTR [RBP+200]
            cmp QWORD PTR [RBP+208],RAX
            je .L_44aa40
.L_44a941:

            mov EDX,1
            mov ESI,1
            mov RDI,RBP
            call .L_402560

            test AL,AL
            jne .L_44aa80

            mov EDX,DWORD PTR [RBP+180]
            cmp DWORD PTR [RBP+184],EDX
            ja .L_44a8c3

            nop
            nop
            nop
.L_44a970:

            cmp BYTE PTR [RSP+80],0
            je .L_44a990

            mov RAX,QWORD PTR [RSP+48]
            mov RBX,QWORD PTR [RAX+208]
            cmp QWORD PTR [RAX+200],RBX
            jne .L_44abe3
.L_44a990:

            mov RDI,QWORD PTR [RSP+360]
            cmp RDI,QWORD PTR [RSP+96]
            je .L_44a64e

            call free@PLT

            jmp .L_44a64e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44a9b0:

            mov EAX,DWORD PTR [RDX+4]
            test DWORD PTR [RSP+164],EAX
            je .L_44a920

            mov ECX,DWORD PTR [RSP+188]
            movzx EAX,WORD PTR [RDX+12]
            mov R12D,ECX
            and R12D,14
            mov EDX,EAX
            and R12D,EAX
            jne .L_44a920

            and EDX,8
            jne .L_44ab05
.L_44a9e6:

            mov ESI,DWORD PTR [RSP+352]
            test ESI,ESI
            je .L_44a920

            mov R13,QWORD PTR [RSP+56]
            jmp .L_44aa12
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44aa00:

            add R12D,1
            cmp DWORD PTR [RSP+352],R12D
            jbe .L_44a920
.L_44aa12:

            mov EAX,R12D
            mov RSI,R13
            shl RAX,4
            add RAX,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_44aa00

            mov EDX,DWORD PTR [RBP+180]
            mov BYTE PTR [RSP+80],AL
            jmp .L_44a8b7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44aa40:

            mov EAX,DWORD PTR [RBP+180]
            cmp DWORD PTR [RBP+188],EAX
            jne .L_44a941

            mov EDX,EAX
.L_44aa54:

            add EAX,1
            mov DWORD PTR [RBP+188],EAX
            jmp .L_44a8ae

            nop
            nop
            nop
            nop
            nop
            nop
.L_44aa68:

            mov BYTE PTR [RSP+228],1
            mov R12D,R14D
            jmp .L_44a75f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44aa80:

            mov EAX,DWORD PTR [RBP+188]
            mov RDX,QWORD PTR [RBP+208]
            mov RCX,QWORD PTR [RBP+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBP+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [RBP+188]
            mov EDX,DWORD PTR [RBP+180]
            jmp .L_44aa54
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44aac8:

            mov RBP,QWORD PTR [RSP+48]
            jmp .L_44a88e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44aad8:

            movzx EAX,BYTE PTR [R13+4]
            movzx ESI,BYTE PTR [R13+5]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            lea RSI,QWORD PTR [R13+RAX*2+6]
            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,ESI
            shl EAX,16
            add ECX,EAX
            jmp .L_44a70a
.L_44ab05:

            test CL,16
            jne .L_44ab23

            test CH,255
            je .L_44a9e6

            xor EAX,ECX
            test AH,255
            jne .L_44a920

            jmp .L_44a9e6
.L_44ab23:

            mov RAX,QWORD PTR [RSP+192]
            movzx EDX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            movzx R8D,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,EDI
            movzx EDI,BYTE PTR [RAX+2]
            shl EDX,16
            shl EDI,8
            add EDI,R8D
            movzx EDI,DI
            add EDX,EDI
            cmp EDX,65537
            jbe .L_44a920

            movzx EDX,BYTE PTR [RAX+12]
            movzx EDI,BYTE PTR [RAX+13]
            shl EDX,8
            add EDX,EDI
            movzx EDI,DX
            add RDI,RAX
            test DX,DX
            cmove RDI,R15
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_44a920

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            shr ECX,16
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_44aba9

            lea RDX,QWORD PTR [RDI+RCX*4+4]
.L_44aba9:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,24
            shl ECX,16
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl ECX,8
            add EAX,ECX
            add EDX,EAX
            add RDI,RDX
            test EDX,EDX
            cmove RDI,R15
            call .L_43a230

            cmp EAX,-1
            je .L_44a920

            jmp .L_44a9e6
.L_44abe3:

            lea RCX,QWORD PTR [RIP+.L_44ac60]
            lea RSI,QWORD PTR [RIP+.L_44a35c]
            lea RDI,QWORD PTR [RIP+.L_44a380]
            mov EDX,1126
            call __assert_fail@PLT
.L_44ac02:

            call __stack_chk_fail@PLT
.L_44ac07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44ac20:

            movabs AL,BYTE PTR [-6845472636714090779]
            out 254,EAX
            call QWORD PTR [RAX+1627389672]
          .byte 0xe7
          .byte 0xfe
          .byte 0xff
          .byte 0x8
          .byte 0xe7
          .byte 0xfe
          .byte 0xff
          .byte 0xb8
          .byte 0xe5
          .byte 0xfe
          .byte 0xff
          .byte 0x30
          .byte 0xe8
          .byte 0xfe
          .byte 0xff
          .byte 0x88
          .byte 0xe5
          .byte 0xfe
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ac60:

            jbe .L_44acd1
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x79
          .byte 0x5f
          .byte 0x73
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x28
          .byte 0x4f
          .byte 0x54
          .byte 0x3a
          .byte 0x3a
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x79
          .byte 0x5f
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x5f
          .byte 0x74
          .byte 0x2a
          .byte 0x2c
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x74
          .byte 0x79
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x20
          .byte 0x50
          .byte 0x72
          .byte 0x6f
          .byte 0x78
          .byte 0x79
          .byte 0x3a
          .byte 0x3a
          .byte 0x4c
          .byte 0x6f
          .byte 0x6f
          .byte 0x6b
          .byte 0x75
          .byte 0x70
          .byte 0x26
          .byte 0x2c
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x6f
          .byte 0x74
          .byte 0x5f
          .byte 0x6c
          .byte 0x61
          .byte 0x79
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x5f
          .byte 0x6c
          .byte 0x6f
          .byte 0x6f
          .byte 0x6b
          .byte 0x75
          .byte 0x70
          .byte 0x5f
          .byte 0x61
          .byte 0x63
          .byte 0x63
          .byte 0x65
          .byte 0x6c
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x5f
          .byte 0x74
.L_44acd1:

            sub DWORD PTR ES:[RAX],ESP
            pop RBX
            ja .L_44ad40
          .byte 0x74
          .byte 0x68
          .byte 0x20
          .byte 0x50
          .byte 0x72
          .byte 0x6f
          .byte 0x78
          .byte 0x79
          .byte 0x20
          .byte 0x3d
          .byte 0x20
          .byte 0x47
          .byte 0x50
          .byte 0x4f
          .byte 0x53
          .byte 0x50
          .byte 0x72
          .byte 0x6f
          .byte 0x78
          .byte 0x79
          .byte 0x3b
          .byte 0x20
          .byte 0x74
          .byte 0x79
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x20
          .byte 0x50
          .byte 0x72
          .byte 0x6f
          .byte 0x78
          .byte 0x79
          .byte 0x3a
          .byte 0x3a
          .byte 0x4c
          .byte 0x6f
          .byte 0x6f
          .byte 0x6b
          .byte 0x75
          .byte 0x70
          .byte 0x20
          .byte 0x3d
          .byte 0x20
          .byte 0x4f
          .byte 0x54
          .byte 0x3a
          .byte 0x3a
          .byte 0x50
          .byte 0x6f
          .byte 0x73
          .byte 0x4c
          .byte 0x6f
          .byte 0x6f
          .byte 0x6b
          .byte 0x75
          .byte 0x70
          .byte 0x5d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ad20:
          .byte 0x62
          .byte 0x6f
          .byte 0x6f
          .byte 0x6c
          .byte 0x20
          .byte 0x4f
          .byte 0x54
          .byte 0x3a
          .byte 0x3a
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x79
          .byte 0x5f
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x5f
          .byte 0x74
          .byte 0x3a
          .byte 0x3a
          .byte 0x73
          .byte 0x6b
          .byte 0x69
.L_44ad40:

            jo .L_44adb2
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x5f
          .byte 0x69
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x5f
          .byte 0x74
          .byte 0x3a
          .byte 0x3a
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x76
          .byte 0x28
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ad60:
          .byte 0x62
          .byte 0x6f
          .byte 0x6f
          .byte 0x6c
          .byte 0x20
          .byte 0x4f
          .byte 0x54
          .byte 0x3a
          .byte 0x3a
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x79
          .byte 0x5f
          .byte 0x6c
          .byte 0x6f
          .byte 0x6f
          .byte 0x6b
          .byte 0x75
          .byte 0x70
          .byte 0x28
          .byte 0x4f
          .byte 0x54
          .byte 0x3a
          .byte 0x3a
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x79
          .byte 0x5f
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x5f
          .byte 0x74
          .byte 0x2a
          .byte 0x2c
          .byte 0x20
          .byte 0x75
          .byte 0x6e
          .byte 0x73
          .byte 0x69
          .byte 0x67
          .byte 0x6e
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x2c
          .byte 0x20
          .byte 0x75
          .byte 0x6e
          .byte 0x73
          .byte 0x69
          .byte 0x67
          .byte 0x6e
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x2a
          .byte 0x2c
          .byte 0x20
          .byte 0x75
          .byte 0x6e
          .byte 0x73
          .byte 0x69
          .byte 0x67
          .byte 0x6e
.L_44adb2:

            and BYTE PTR FS:[RCX+110],CH
            je .L_44ade5
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x4f
          .byte 0x54
          .byte 0x3a
          .byte 0x3a
          .byte 0x4c
          .byte 0x6f
          .byte 0x6f
          .byte 0x6b
          .byte 0x75
          .byte 0x70
          .byte 0x52
          .byte 0x65
          .byte 0x63
          .byte 0x6f
          .byte 0x72
          .byte 0x64
          .byte 0x2a
          .byte 0x2c
          .byte 0x20
          .byte 0x75
          .byte 0x6e
          .byte 0x73
          .byte 0x69
          .byte 0x67
          .byte 0x6e
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ade5:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDX+111],AH
            outsd DX,DWORD PTR [RSI]
            insb BYTE PTR [RDI],DX
            and BYTE PTR [RDI+84],CL
            cmp BH,BYTE PTR [RDX]
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c

            jns .L_44ae71
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x5f
          .byte 0x74
          .byte 0x3a
          .byte 0x3a
          .byte 0x73
          .byte 0x6b
          .byte 0x69
          .byte 0x70
          .byte 0x70
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x5f
          .byte 0x69
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x5f
          .byte 0x74
          .byte 0x3a
          .byte 0x3a
          .byte 0x6e
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x28
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ae40:
          .byte 0x76
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x4f
          .byte 0x54
          .byte 0x3a
          .byte 0x3a
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x70
          .byte 0x61
          .byte 0x67
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x5f
          .byte 0x61
          .byte 0x74
          .byte 0x74
          .byte 0x61
          .byte 0x63
          .byte 0x68
          .byte 0x6d
          .byte 0x65
          .byte 0x6e
          .byte 0x74
          .byte 0x5f
          .byte 0x6f
          .byte 0x66
          .byte 0x66
          .byte 0x73
          .byte 0x65
          .byte 0x74
          .byte 0x73
          .byte 0x28
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x67
          .byte 0x6c
          .byte 0x79
          .byte 0x70
          .byte 0x68
          .byte 0x5f
          .byte 0x70
          .byte 0x6f
.L_44ae71:

            jae .L_44aedc

            je .L_44aede
          .byte 0x6f
          .byte 0x6e
          .byte 0x5f
          .byte 0x74
          .byte 0x2a
          .byte 0x2c
          .byte 0x20
          .byte 0x75
          .byte 0x6e
          .byte 0x73
          .byte 0x69
          .byte 0x67
          .byte 0x6e
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x2c
          .byte 0x20
          .byte 0x68
          .byte 0x62
          .byte 0x5f
          .byte 0x64
          .byte 0x69
          .byte 0x72
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x5f
          .byte 0x74
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44aea0:
          .string "void OT::hb_sanitize_context_t::start_processing()"
          .zero 5
.L_44aed8:
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
.L_44aedc:

            add BYTE PTR [RAX],AL
.L_44aede:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44aef0:

            push R15
            push R14
            mov R14D,R8D
            push R13
            push R12
            mov R13D,R9D
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,216
.L_44af0f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_44bf48]
            mov QWORD PTR [RSP+8],RSI
            mov DWORD PTR [RSP+32],ECX
            mov EAX,DWORD PTR [RAX+RBP*4]
            mov ESI,EAX
            mov DWORD PTR [RSP+4],EAX
            call .L_436900

            mov R12D,EAX
            mov RAX,RBP
            lea RDI,QWORD PTR [RSP+60]
            shl RAX,4
            mov DWORD PTR [RSP],0
            add RAX,RBP
            lea RBP,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+16],RDI
            shl RAX,4
            lea R15,QWORD PTR [RBX+RAX*1+336]
            add RBX,RAX
.L_44af72:

            mov R8,QWORD PTR [RSP+16]
            mov ECX,DWORD PTR [RSP]
            mov R9,RBP
            mov EDX,DWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+4]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+60],32
            call .L_436460

            mov EAX,DWORD PTR [RSP+60]
            test EAX,EAX
            je .L_44b000

            mov ECX,1
            nop
            nop
            nop
            nop
.L_44afa8:

            cmp DWORD PTR [RBP+RCX*4-4],R12D
            jae .L_44b05f

            mov RDI,QWORD PTR [RBX+328]
            test RDI,RDI
            je .L_44b080

            mov EAX,DWORD PTR [RBX+324]
.L_44afc9:

            mov EDX,DWORD PTR [RBX+320]
            cmp EDX,EAX
            jb .L_44b030

            mov ESI,EAX
            shr ESI,1
            cmp R15,RDI
            lea R8D,DWORD PTR [RAX+RSI*1+8]
            je .L_44b0f0

            cmp R8D,EAX
            mov QWORD PTR [RSP+24],RCX
            jb .L_44b000

            cmp R8D,536870910
            jbe .L_44b0a0

            nop
            nop
            nop
            nop
.L_44b000:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_44b136

            add RSP,216
.L_44b01e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b030:

            lea EAX,DWORD PTR [RDX+1]
            mov DWORD PTR [RBX+320],EAX
            lea RAX,QWORD PTR [RDI+RDX*8]
.L_44b03d:

            test RAX,RAX
            je .L_44b000

            mov DWORD PTR [RAX+4],R14D
            mov EDX,DWORD PTR [RBP+RCX*4-4]
            mov ESI,R13D
            and ESI,1
            mov WORD PTR [RAX],DX
            movzx EDX,BYTE PTR [RAX+2]
            and EDX,4294967294
            or EDX,ESI
            mov BYTE PTR [RAX+2],DL
.L_44b05f:

            mov EAX,DWORD PTR [RSP+60]
            mov EDX,ECX
            add RCX,1
            cmp EAX,EDX
            ja .L_44afa8

            add DWORD PTR [RSP],EAX
            cmp EAX,32
            je .L_44af72

            jmp .L_44b000
          .byte 0x90
.L_44b080:

            mov QWORD PTR [RBX+328],R15
            mov DWORD PTR [RBX+324],32
            mov RDI,R15
            mov EAX,32
            jmp .L_44afc9
          .byte 0x66
          .byte 0x90
.L_44b0a0:

            mov ESI,R8D
            mov DWORD PTR [RSP+36],R8D
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov R9,RAX
            mov R8D,DWORD PTR [RSP+36]
            mov RCX,QWORD PTR [RSP+24]
            je .L_44b000
.L_44b0c7:

            mov EAX,DWORD PTR [RBX+320]
            mov QWORD PTR [RBX+328],R9
            mov DWORD PTR [RBX+324],R8D
            lea EDX,DWORD PTR [RAX+1]
            lea RAX,QWORD PTR [R9+RAX*8]
            mov DWORD PTR [RBX+320],EDX
            jmp .L_44b03d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44b0f0:

            mov EDI,R8D
            mov ESI,8
            mov QWORD PTR [RSP+40],RCX
            mov DWORD PTR [RSP+36],EDX
            mov DWORD PTR [RSP+24],R8D
            call calloc@PLT

            test RAX,RAX
            je .L_44b000

            mov EDX,DWORD PTR [RSP+36]
            mov RSI,R15
            mov RDI,RAX
            shl RDX,3
            call memcpy@PLT

            mov R8D,DWORD PTR [RSP+24]
            mov R9,RAX
            mov RCX,QWORD PTR [RSP+40]
            jmp .L_44b0c7
.L_44b136:

            call __stack_chk_fail@PLT
.L_44b13b:

            nop
            nop
            nop
            nop
            nop
.L_44b140:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            add RDI,8
            mov RCX,RBX
            sub RSP,32
.L_44b152:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov QWORD PTR [RDI+1264],0
            and RDI,-8
            lea RBP,QWORD PTR [RSP+12]
            sub RCX,RDI
            add ECX,1280
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RBX],RSI
            mov RSI,RBP
            mov QWORD PTR [RSP+12],0
            mov DWORD PTR [RSP+20],0
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RBX+8],XMM0
            mov EDI,DWORD PTR [RBX+12]
            movdqu XMM0,XMMWORD PTR [RDX+16]
            lea RDX,QWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX+24],XMM0
            call .L_44bfc0

            mov RDI,QWORD PTR [RBX+16]
            call .L_44c280

            mov RDI,QWORD PTR [RBX]
            lea RCX,QWORD PTR [RBX+52]
            lea R8,QWORD PTR [RBX+40]
            mov RDX,RBP
            mov ESI,1196643650
            mov R12D,EAX
            call .L_4357d0

            mov EDX,DWORD PTR [RBX+52]
            mov RDI,QWORD PTR [RBX]
            test EAX,EAX
            lea R8,QWORD PTR [RBX+60]
            setne BYTE PTR [RBX+48]
            mov ECX,R12D
            mov ESI,1196643650
            call .L_435c20

            mov RDI,QWORD PTR [RBX]
            lea RCX,QWORD PTR [RBX+56]
            lea R8,QWORD PTR [RBX+44]
            mov RDX,RBP
            mov ESI,1196445523
            call .L_4357d0

            mov EDX,DWORD PTR [RBX+56]
            mov RDI,QWORD PTR [RBX]
            test EAX,EAX
            lea R8,QWORD PTR [RBX+64]
            setne BYTE PTR [RBX+49]
            mov ECX,R12D
            mov ESI,1196445523
            call .L_435c20

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_44b249

            add RSP,32
.L_44b244:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_44b249:

            call __stack_chk_fail@PLT
.L_44b24e:

            nop
            nop
.L_44b250:

            push R15
            push R14
            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov RBX,RDI
            mov R12D,EDX
            sub RSP,24
.L_44b267:

            mov RDI,QWORD PTR [RDI+88]
            mov EBP,DWORD PTR [RBX+80]
            test RDI,RDI
            je .L_44b2c0

            mov EAX,DWORD PTR [RBX+84]
            cmp EAX,EBP
            ja .L_44b2db

            mov EDX,EAX
            mov R14,RDI
            shr EDX,1
            lea R15D,DWORD PTR [RAX+RDX*1+8]
            lea RDX,QWORD PTR [RBX+96]
            cmp RDI,RDX
            je .L_44b3eb

            cmp R15D,153391688
            mov DWORD PTR [RSP+4],ECX
            ja .L_44b2a9

            cmp EAX,R15D
            jbe .L_44b338
.L_44b2a9:

            add RSP,24
.L_44b2ad:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b2c0:

            lea R14,QWORD PTR [RBX+96]
            cmp EBP,31
            mov DWORD PTR [RBX+84],32
            mov QWORD PTR [RBX+88],R14
            ja .L_44b390

            mov RDI,R14
.L_44b2db:

            lea EAX,DWORD PTR [RBP+1]
            mov DWORD PTR [RBX+80],EAX
            lea RAX,QWORD PTR [RBP*8]
            sub RAX,RBP
            lea RAX,QWORD PTR [RDI+RAX*4]
.L_44b2f0:

            test RAX,RAX
            je .L_44b2a9

            test R13D,R13D
            je .L_44b2a9

            mov EDX,DWORD PTR [RBX+80]
            mov DWORD PTR [RAX+12],ECX
            and ECX,1
            mov DWORD PTR [RAX+8],R12D
            mov DWORD PTR [RAX],R13D
            mov DWORD PTR [RAX+4],EDX
            mov EDX,0
            cmove R12D,EDX
            mov EDX,DWORD PTR [RBX+68]
            mov DWORD PTR [RAX+16],R12D
            mov DWORD PTR [RAX+20],EDX
            mov EDX,DWORD PTR [RBX+72]
            mov DWORD PTR [RAX+24],EDX
            add RSP,24
.L_44b32a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44b338:

            mov EAX,R15D
            lea RSI,QWORD PTR [RAX*8]
            sub RSI,RAX
            shl RSI,2
            call realloc@PLT

            test RAX,RAX
            mov R8,RAX
            je .L_44b2a9

            mov EDX,DWORD PTR [RBX+80]
            mov ECX,DWORD PTR [RSP+4]
            lea RAX,QWORD PTR [RDX*8]
            mov RBP,RDX
            sub RAX,RDX
            lea R9,QWORD PTR [RAX*4]
.L_44b378:

            add EBP,1
            mov QWORD PTR [RBX+88],R8
            mov DWORD PTR [RBX+84],R15D
            mov DWORD PTR [RBX+80],EBP
            lea RAX,QWORD PTR [R8+R9*1]
            jmp .L_44b2f0
          .byte 0x90
.L_44b390:

            mov EDI,56
            mov R15D,56
.L_44b39b:

            mov ESI,28
            mov DWORD PTR [RSP+4],ECX
            call calloc@PLT

            test RAX,RAX
            mov R8,RAX
            je .L_44b2a9

            mov EDX,EBP
            mov RDI,R8
            mov RSI,R14
            lea RAX,QWORD PTR [RDX*8]
            sub RAX,RDX
            lea R9,QWORD PTR [RAX*4]
            mov RDX,R9
            mov QWORD PTR [RSP+8],R9
            call memcpy@PLT

            mov R9,QWORD PTR [RSP+8]
            mov R8,RAX
            mov ECX,DWORD PTR [RSP+4]
            jmp .L_44b378
.L_44b3eb:

            mov EDI,R15D
            jmp .L_44b39b
.L_44b3f0:

            mov EAX,ESI
            push R13
            push R12
            mov RSI,RAX
            push RBP
            push RBX
            shl RSI,4
            add RSI,RAX
            sub RSP,8
.L_44b406:

            shl RSI,4
            lea RBP,QWORD PTR [RDI+RSI*1]
            mov EAX,DWORD PTR [RBP+320]
            test EAX,EAX
            je .L_44b445

            lea R13,QWORD PTR [RDI+RSI*1+320]
            mov R12,RDX
            xor EBX,EBX
            nop
            nop
            nop
.L_44b428:

            mov RAX,QWORD PTR [R13+8]
            mov ECX,EBX
            mov RDI,R12
            add EBX,1
            movzx ESI,WORD PTR [RAX+RCX*8]
            call .L_431680

            cmp DWORD PTR [RBP+320],EBX
            ja .L_44b428
.L_44b445:

            add RSP,8
.L_44b449:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_44b450:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,ESI
            lea RAX,QWORD PTR [RBX+RBX*8]
            sub RSP,8
.L_44b46a:

            shl RAX,4
            lea RDX,QWORD PTR [RDI+RAX*1]
            mov RBP,QWORD PTR [RDX+1000]
            test RBP,RBP
            je .L_44b510

            mov EDX,DWORD PTR [RDX+996]
.L_44b488:

            lea RAX,QWORD PTR [RBX+RBX*8]
            shl RAX,4
            lea RCX,QWORD PTR [R13+RAX*1]
            mov R12D,DWORD PTR [RCX+992]
            cmp R12D,EDX
            jb .L_44b4d0

            lea RAX,QWORD PTR [R13+RAX*1+1008]
            mov ECX,EDX
            shr ECX,1
            cmp RAX,RBP
            lea R15D,DWORD PTR [RDX+RCX*1+8]
            je .L_44b590

            cmp R15D,268435454
            ja .L_44b4c9

            cmp R15D,EDX
            jae .L_44b538
.L_44b4c9:

            mov EAX,DWORD PTR [R13+RBX*4+68]
            jmp .L_44b4f9
.L_44b4d0:

            lea EAX,DWORD PTR [R12+1]
            shl R12,4
            add RBP,R12
            mov DWORD PTR [RCX+992],EAX
.L_44b4e2:

            lea RDX,QWORD PTR [R13+RBX*4]
            test RBP,RBP
            mov EAX,DWORD PTR [RDX+68]
            je .L_44b4f9

            mov DWORD PTR [RBP],EAX
            mov QWORD PTR [RBP+8],R14
            mov EAX,DWORD PTR [RDX+68]
.L_44b4f9:

            add EAX,1
            mov DWORD PTR [R13+RBX*4+68],EAX
            add RSP,8
.L_44b505:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_44b510:

            lea RBP,QWORD PTR [RDI+RAX*1+1008]
            mov DWORD PTR [RDX+996],8
            mov QWORD PTR [RDX+1000],RBP
            mov EDX,8
            jmp .L_44b488
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b538:

            mov ESI,R15D
            mov RDI,RBP
            shl RSI,4
            call realloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_44b4c9
.L_44b553:

            lea RDX,QWORD PTR [RBX+RBX*8]
            shl RDX,4
            add RDX,R13
            mov EBP,DWORD PTR [RDX+992]
            mov QWORD PTR [RDX+1000],RCX
            mov DWORD PTR [RDX+996],R15D
            lea ESI,DWORD PTR [RBP+1]
            shl RBP,4
            add RBP,RCX
            mov DWORD PTR [RDX+992],ESI
            jmp .L_44b4e2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b590:

            mov EDI,R15D
            mov ESI,16
            call calloc@PLT

            test RAX,RAX
            je .L_44b4c9

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RAX
            shl RDX,4
            call memcpy@PLT

            mov RCX,RAX
            jmp .L_44b553
.L_44b5bd:

            nop
            nop
            nop
.L_44b5c0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,120
.L_44b5d4:

            mov ECX,DWORD PTR [RDI+60]
            mov EDX,DWORD PTR [RDI+52]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+40]
            lea R15,QWORD PTR [RSP+72]
            lea RBX,QWORD PTR [RSP+80]
            mov DWORD PTR [RSI+12],1
            mov QWORD PTR [RSP+88],0
            mov R9,RBX
            mov R8,R15
            mov QWORD PTR [RSP+32],R15
            mov DWORD PTR [RSI],EAX
            movzx EAX,BYTE PTR [RDI+48]
            mov RDI,QWORD PTR [RDI]
            mov BYTE PTR [RSI+8],AL
            mov ESI,1196643650
            call .L_435d90

            mov EAX,DWORD PTR [R13+44]
            mov ECX,DWORD PTR [R13+64]
            lea R9,QWORD PTR [RBX+4]
            mov EDX,DWORD PTR [R13+56]
            mov RDI,QWORD PTR [R13]
            lea R8,QWORD PTR [R15+4]
            mov ESI,1196445523
            mov DWORD PTR [RBP+4],EAX
            movzx EAX,BYTE PTR [R13+49]
            mov BYTE PTR [RBP+9],AL
            call .L_435d90

            mov EAX,DWORD PTR [R13+80]
            test EAX,EAX
            jne .L_44b680
.L_44b65d:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_44bee7

            add RSP,120
.L_44b675:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_44b680:

            mov RDI,QWORD PTR [R13+88]
            lea RCX,QWORD PTR [RIP+.L_44bf20]
            mov ESI,EAX
            mov EDX,28
            call qsort@PLT

            mov R9D,DWORD PTR [R13+80]
            cmp R9D,1
            mov EAX,R9D
            jbe .L_44b78e

            mov ECX,1
            xor EDI,EDI
            mov R8,QWORD PTR [R13+88]
            jmp .L_44b6f3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44b6b8:

            mov R10D,ESI
            movdqu XMM0,XMMWORD PTR [RDX]
            lea RAX,QWORD PTR [R10*8]
            add ECX,1
            sub RAX,R10
            cmp R9D,ECX
            lea RAX,QWORD PTR [R8+RAX*4]
            movups XMMWORD PTR [RAX],XMM0
            mov R10,QWORD PTR [RDX+16]
            mov QWORD PTR [RAX+16],R10
            mov EDX,DWORD PTR [RDX+24]
            mov DWORD PTR [RAX+24],EDX
            lea EDX,DWORD PTR [RDI+2]
            mov EAX,R9D
            mov EDI,ESI
            jbe .L_44b783
.L_44b6f3:

            mov EDX,ECX
            mov ESI,EDI
            lea RAX,QWORD PTR [RDX*8]
            sub RAX,RDX
            lea RDX,QWORD PTR [R8+RAX*4]
            lea RAX,QWORD PTR [RSI*8]
            sub RAX,RSI
            lea ESI,DWORD PTR [RDI+1]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov EBX,DWORD PTR [RAX]
            cmp DWORD PTR [RDX],EBX
            jne .L_44b6b8

            test BYTE PTR [RDX+12],1
            mov R10D,DWORD PTR [RAX+12]
            mov EBX,DWORD PTR [RDX+8]
            mov R11D,R10D
            je .L_44bd80

            mov R10D,DWORD PTR [RDX+16]
            or R11D,1
            mov DWORD PTR [RAX+8],EBX
            mov DWORD PTR [RAX+12],R11D
            mov DWORD PTR [RAX+16],R10D
.L_44b745:

            mov R10D,DWORD PTR [RDX+12]
            and R10D,2
            or R10D,R11D
            mov DWORD PTR [RAX+12],R10D
            mov R10D,DWORD PTR [RDX+20]
            cmp DWORD PTR [RAX+20],R10D
            cmovbe R10D,DWORD PTR [RAX+20]
            mov DWORD PTR [RAX+20],R10D
            mov EDX,DWORD PTR [RDX+24]
            cmp DWORD PTR [RAX+24],EDX
            cmovbe EDX,DWORD PTR [RAX+24]
            add ECX,1
            cmp R9D,ECX
            mov DWORD PTR [RAX+24],EDX
            mov EDX,ESI
            mov EAX,R9D
            ja .L_44b6f3
.L_44b783:

            cmp R9D,EDX
            jbe .L_44b78e

            mov DWORD PTR [R13+80],EDX
            mov EAX,EDX
.L_44b78e:

            test EAX,EAX
            je .L_44ba34

            lea RAX,QWORD PTR [RSP+96]
            mov R11D,1
            xor R12D,R12D
            mov R15D,R11D
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+100]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_44b7f5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b7c0:

            test EAX,EAX
            je .L_44b7e4

            bsr EAX,EAX
            mov EBX,32
            xor EAX,31
            sub EBX,EAX
            mov EAX,8
            cmp EBX,8
            cmova EBX,EAX
            add EBX,R15D
            cmp EBX,32
            jbe .L_44b828
.L_44b7e4:

            mov EAX,DWORD PTR [R13+80]
            add R12D,1
            cmp EAX,R12D
            jbe .L_44ba28
.L_44b7f5:

            mov EDX,R12D
            lea RAX,QWORD PTR [RDX*8]
            sub RAX,RDX
            mov RDX,QWORD PTR [R13+88]
            lea R14,QWORD PTR [RDX+RAX*4]
            test BYTE PTR [R14+12],1
            mov EAX,DWORD PTR [R14+8]
            je .L_44b7c0

            cmp EAX,1
            jne .L_44b7c0

            mov EBX,R15D
            cmp EBX,32
            ja .L_44b7e4

            nop
            nop
            nop
            nop
            nop
.L_44b828:

            mov R8D,DWORD PTR [R14]
            cmp R8D,DWORD PTR [RSP+80]
            jne .L_44b83a

            mov EAX,DWORD PTR [R14+20]
            mov DWORD PTR [RSP+88],EAX
.L_44b83a:

            mov ECX,DWORD PTR [R13+60]
            mov EDX,DWORD PTR [R13+52]
            mov ESI,1196643650
            mov R9,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R13]
            call .L_4362c0

            mov R8D,DWORD PTR [R14]
            cmp DWORD PTR [RSP+84],R8D
            mov DWORD PTR [RSP],EAX
            jne .L_44b86a

            mov EAX,DWORD PTR [R14+24]
            mov DWORD PTR [RSP+92],EAX
.L_44b86a:

            mov ECX,DWORD PTR [R13+64]
            mov EDX,DWORD PTR [R13+56]
            mov ESI,1196445523
            mov R9,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [R13]
            call .L_4362c0

            mov R10D,DWORD PTR [RSP]
            or R10D,EAX
            je .L_44bda8
.L_44b892:

            mov R9,QWORD PTR [RBP+24]
            mov R8D,DWORD PTR [RBP+16]
            test R9,R9
            mov RDX,R9
            je .L_44b928

            mov EAX,DWORD PTR [RBP+20]
            cmp EAX,R8D
            ja .L_44b94f

            mov EDX,EAX
            shr EDX,1
            lea R11D,DWORD PTR [RAX+RDX*1+8]
            lea RDX,QWORD PTR [RBP+32]
            cmp R9,RDX
            je .L_44be20

            cmp EAX,R11D
            mov DWORD PTR [RSP+56],R10D
            ja .L_44bd97

            cmp R11D,119304646
            ja .L_44bd97

            mov EAX,R11D
            mov RDI,R9
            mov DWORD PTR [RSP+24],R11D
            lea RSI,QWORD PTR [RAX+RAX*8]
            shl RSI,2
            call realloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_44bd97

            mov EAX,DWORD PTR [RBP+16]
            mov R10D,DWORD PTR [RSP+56]
            mov R11D,DWORD PTR [RSP+24]
            mov R8,RAX
            lea RAX,QWORD PTR [RAX+RAX*8]
            shl RAX,2
            mov QWORD PTR [RSP],RAX
            jmp .L_44be84
.L_44b928:

            lea R9,QWORD PTR [RBP+32]
            cmp R8D,7
            mov DWORD PTR [RBP+20],8
            mov EDI,20
            mov R11D,20
            mov QWORD PTR [RBP+24],R9
            mov RDX,R9
            ja .L_44be23
.L_44b94f:

            lea EAX,DWORD PTR [R8+1]
            mov DWORD PTR [RBP+16],EAX
            lea RAX,QWORD PTR [R8+R8*8]
            lea RAX,QWORD PTR [RDX+RAX*4]
.L_44b95e:

            test RAX,RAX
            je .L_44bd97

            mov EDX,DWORD PTR [R14]
            mov ECX,DWORD PTR [R14+12]
            movzx ESI,BYTE PTR [RAX+32]
            mov DWORD PTR [RAX],EDX
            mov EDX,DWORD PTR [RSP+96]
            and ESI,4294967293
            mov DWORD PTR [RAX+4],EDX
            mov EDX,DWORD PTR [RSP+100]
            mov DWORD PTR [RAX+8],EDX
            mov EDX,DWORD PTR [R14+20]
            mov DWORD PTR [RAX+12],EDX
            mov EDX,DWORD PTR [R14+24]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,ECX
            shr EDX,2
            xor EDX,1
            and EDX,1
            add EDX,EDX
            or EDX,ESI
            and ECX,1
            mov BYTE PTR [RAX+32],DL
            je .L_44b9d0

            cmp DWORD PTR [R14+8],1
            jne .L_44b9d0

            movabs RSI,4294967296
            mov EDX,1
            mov QWORD PTR [RAX+20],RSI
            jmp .L_44b9ff
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b9d0:

            mov ECX,R15D
            mov ESI,DWORD PTR [R14+16]
            mov EDI,1
            shl EDI,CL
            mov EDX,1
            mov ECX,EBX
            shl EDX,CL
            mov ECX,R15D
            mov DWORD PTR [RAX+20],R15D
            sub EDX,EDI
            shl ESI,CL
            mov R15D,EBX
            mov DWORD PTR [RAX+24],EDX
            and ESI,EDX
            or DWORD PTR [RBP+12],ESI
            and EDX,EDI
.L_44b9ff:

            mov DWORD PTR [RAX+28],EDX
            movzx EDX,BYTE PTR [RAX+32]
            test R10D,R10D
            sete CL
            add R12D,1
            and EDX,4294967294
            or EDX,ECX
            mov BYTE PTR [RAX+32],DL
            mov EAX,DWORD PTR [R13+80]
            cmp EAX,R12D
            ja .L_44b7f5

            nop
            nop
            nop
.L_44ba28:

            test EAX,EAX
            je .L_44ba34
.L_44ba2c:

            mov DWORD PTR [R13+80],0
.L_44ba34:

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R13
            call .L_44b450

            xor EDX,EDX
            mov ESI,1
            mov RDI,R13
            call .L_44b450

            lea RAX,QWORD PTR [R13+992]
            lea R14,QWORD PTR [RBP+320]
            xor R15D,R15D
            mov QWORD PTR [RSP],R13
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RBP+880]
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+40],RAX
            mov RAX,R15
            mov R15,R14
            mov R14,RAX
.L_44ba88:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RSP+16],R14D
            mov EDX,DWORD PTR [RAX+R14*4+68]
            test EDX,EDX
            je .L_44bb89

            xor EAX,EAX
            mov R10,R14
            xor R12D,R12D
            mov R14,R15
            mov DWORD PTR [RSP+56],0
            mov R15D,EAX
            nop
            nop
            nop
            nop
.L_44bab8:

            mov RAX,QWORD PTR [RSP+32]
            mov ECX,DWORD PTR [RAX+R10*4]
            cmp ECX,65535
            je .L_44bad8

            mov RAX,QWORD PTR [RSP+40]
            cmp DWORD PTR [RAX+R10*4],R12D
            je .L_44bc78
.L_44bad8:

            mov EAX,DWORD PTR [RBP+16]
            test EAX,EAX
            je .L_44bb43

            xor EBX,EBX
            lea R13,QWORD PTR [R10*4]
            mov QWORD PTR [RSP+8],R10
            jmp .L_44baf8
.L_44baf0:

            add EBX,1
            cmp DWORD PTR [RBP+16],EBX
            jbe .L_44bb3e
.L_44baf8:

            mov EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*8]
            mov RAX,QWORD PTR [RBP+24]
            lea RAX,QWORD PTR [RAX+RDX*4]
            lea RDX,QWORD PTR [RAX+R13*1]
            cmp DWORD PTR [RDX+12],R12D
            jne .L_44baf0

            movzx R9D,BYTE PTR [RAX+32]
            mov R8D,DWORD PTR [RAX+24]
            mov RDI,RBP
            mov RAX,QWORD PTR [RSP]
            mov ECX,DWORD PTR [RDX+4]
            add EBX,1
            mov EDX,DWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RAX]
            shr R9B,1
            and R9D,1
            call .L_44aef0

            cmp DWORD PTR [RBP+16],EBX
            ja .L_44baf8
.L_44bb3e:

            mov R10,QWORD PTR [RSP+8]
.L_44bb43:

            mov EBX,DWORD PTR [R14]
            cmp EBX,R15D
            ja .L_44bbb8
.L_44bb4b:

            mov RAX,QWORD PTR [RSP+24]
            mov EDI,DWORD PTR [RSP+56]
            cmp DWORD PTR [RAX],EDI
            jbe .L_44bb6d

            mov RAX,QWORD PTR [RAX+8]
            mov R13D,EDI
            shl R13,4
            cmp DWORD PTR [RAX+R13*1],R12D
            je .L_44bcb0
.L_44bb6d:

            mov RAX,QWORD PTR [RSP]
            add R12D,1
            mov R15D,EBX
            cmp DWORD PTR [RAX+R10*4+68],R12D
            ja .L_44bab8

            mov R15,R14
            mov R14,R10
.L_44bb89:

            add QWORD PTR [RSP+24],144
            add R15,272
            add QWORD PTR [RSP+48],80
            cmp R14,1
            je .L_44b65d

            mov R14D,1
            jmp .L_44ba88
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44bbb8:

            mov RDX,QWORD PTR [R14+8]
            mov R13D,R15D
            mov ESI,EBX
            lea RCX,QWORD PTR [RIP+.L_44bf00]
            sub ESI,R15D
            mov QWORD PTR [RSP+8],R10
            lea RDI,QWORD PTR [RDX+R13*8]
            mov EDX,8
            call qsort@PLT

            mov EBX,DWORD PTR [R14]
            lea ESI,DWORD PTR [R15+1]
            mov R10,QWORD PTR [RSP+8]
            mov EDX,ESI
            cmp ESI,EBX
            jae .L_44bb4b

            mov RDI,QWORD PTR [R14+8]
            jmp .L_44bc21
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44bc00:

            mov RCX,QWORD PTR [RCX]
            mov EAX,ESI
            add EDX,1
            mov QWORD PTR [RDI+RAX*8],RCX
            mov EBX,DWORD PTR [R14]
            lea ECX,DWORD PTR [R15+2]
            mov R15D,ESI
            cmp EBX,EDX
            jbe .L_44bc63
.L_44bc1a:

            lea ESI,DWORD PTR [R15+1]
            mov R13D,R15D
.L_44bc21:

            mov EAX,EDX
            lea RCX,QWORD PTR [RDI+RAX*8]
            lea RAX,QWORD PTR [RDI+R13*8]
            movzx EBX,WORD PTR [RAX]
            cmp WORD PTR [RCX],BX
            jne .L_44bc00

            mov R8D,DWORD PTR [RCX+4]
            or DWORD PTR [RAX+4],R8D
            add EDX,1
            movzx R8D,BYTE PTR [RAX+2]
            movzx EBX,BYTE PTR [RCX+2]
            and EBX,R8D
            and R8D,4294967294
            mov ECX,EBX
            and ECX,1
            or R8D,ECX
            mov ECX,ESI
            mov BYTE PTR [RAX+2],R8B
            mov EBX,DWORD PTR [R14]
            cmp EBX,EDX
            ja .L_44bc1a
.L_44bc63:

            cmp EBX,ECX
            jbe .L_44bb4b

            mov DWORD PTR [R14],ECX
            mov EBX,ECX
            jmp .L_44bb4b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44bc78:

            mov RAX,QWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+16]
            mov R9D,1
            mov R8D,1
            mov RDI,RBP
            mov QWORD PTR [RSP+8],R10
            mov RSI,QWORD PTR [RAX]
            call .L_44aef0

            mov R10,QWORD PTR [RSP+8]
            jmp .L_44bad8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bcb0:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSI-8]
            test RDI,RDI
            je .L_44bd18

            mov EAX,DWORD PTR [RSI-12]
            mov EDX,DWORD PTR [RSI-16]
            cmp EDX,EAX
            jb .L_44bd3a

            mov ECX,EAX
            shr ECX,1
            cmp RDI,QWORD PTR [RSP+48]
            lea R15D,DWORD PTR [RAX+RCX*1+8]
            je .L_44bdc1

            cmp R15D,EAX
            jb .L_44bd6d

            cmp R15D,268435454
            ja .L_44bd6d

            mov ESI,R15D
            mov QWORD PTR [RSP+8],R10
            shl RSI,4
            call realloc@PLT

            test RAX,RAX
            mov R8,RAX
            mov R10,QWORD PTR [RSP+8]
            jne .L_44bdfe

            jmp .L_44bd6d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44bd18:

            mov RDI,QWORD PTR [RSP+48]
            mov R15D,14
            mov EDX,DWORD PTR [RDI-16]
            mov QWORD PTR [RDI-8],RDI
            mov DWORD PTR [RDI-12],4
            cmp EDX,3
            ja .L_44bdc1
.L_44bd3a:

            mov R8D,EDX
            lea EAX,DWORD PTR [RDX+1]
            mov RSI,QWORD PTR [RSP+48]
            mov RDX,R8
            shl RDX,4
            lea R8,QWORD PTR [RDI+RDX*1]
            mov DWORD PTR [RSI-16],EAX
.L_44bd53:

            test R8,R8
            je .L_44bd6d

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [R8],EBX
            mov RAX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+R13*1+8]
            mov QWORD PTR [R8+8],RAX
.L_44bd6d:

            add DWORD PTR [RSP+56],1
            jmp .L_44bb6d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bd80:

            and R11D,4294967294
            cmp DWORD PTR [RAX+8],EBX
            cmovae EBX,DWORD PTR [RAX+8]
            mov DWORD PTR [RAX+12],R11D
            mov DWORD PTR [RAX+8],EBX
            jmp .L_44b745
.L_44bd97:

            mov EAX,DWORD PTR [R13+80]
            test EAX,EAX
            jne .L_44ba2c

            jmp .L_44ba34
.L_44bda8:

            mov EAX,DWORD PTR [R14+12]
            test AL,8
            jne .L_44bea0
.L_44bdb4:

            test AL,2
            jne .L_44b892

            jmp .L_44b7e4
.L_44bdc1:

            mov EDI,R15D
            mov ESI,16
            mov QWORD PTR [RSP+8],R10
            mov DWORD PTR [RSP+60],EDX
            call calloc@PLT

            test RAX,RAX
            mov R10,QWORD PTR [RSP+8]
            je .L_44bd6d

            mov EDX,DWORD PTR [RSP+60]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,RAX
            shl RDX,4
            call memcpy@PLT

            mov R10,QWORD PTR [RSP+8]
            mov R8,RAX
.L_44bdfe:

            mov RSI,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RSI-16]
            mov QWORD PTR [RSI-8],R8
            mov DWORD PTR [RSI-12],R15D
            lea EDX,DWORD PTR [RAX+1]
            shl RAX,4
            add R8,RAX
            mov DWORD PTR [RSI-16],EDX
            jmp .L_44bd53
.L_44be20:

            mov EDI,R11D
.L_44be23:

            mov ESI,36
            mov DWORD PTR [RSP],R8D
            mov DWORD PTR [RSP+48],R10D
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+56],R11D
            call calloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_44bd97

            mov EAX,DWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+40]
            mov RDI,RCX
            mov RSI,R9
            mov DWORD PTR [RSP+24],EAX
            lea RAX,QWORD PTR [RAX+RAX*8]
            shl RAX,2
            mov RDX,RAX
            mov QWORD PTR [RSP],RAX
            call memcpy@PLT

            mov R8D,DWORD PTR [RSP+24]
            mov R11D,DWORD PTR [RSP+56]
            mov RCX,RAX
            mov R10D,DWORD PTR [RSP+48]
.L_44be84:

            mov RAX,QWORD PTR [RSP]
            add R8D,1
            mov QWORD PTR [RBP+24],RCX
            mov DWORD PTR [RBP+20],R11D
            mov DWORD PTR [RBP+16],R8D
            add RAX,RCX
            jmp .L_44b95e
.L_44bea0:

            mov RCX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [R14]
            mov ESI,1196643650
            mov RDI,QWORD PTR [R13]
            mov DWORD PTR [RSP+24],R10D
            call .L_435a50

            mov RCX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [R14]
            mov ESI,1196445523
            mov RDI,QWORD PTR [R13]
            mov DWORD PTR [RSP],EAX
            call .L_435a50

            or EAX,DWORD PTR [RSP]
            jne .L_44beec

            mov EAX,DWORD PTR [R14+12]
            mov R10D,DWORD PTR [RSP+24]
            jmp .L_44bdb4
.L_44bee7:

            call __stack_chk_fail@PLT
.L_44beec:

            mov R10D,EAX
            jmp .L_44b892
.L_44bef4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44bf00:

            movzx EAX,WORD PTR [RSI]
            cmp WORD PTR [RDI],AX
            jb .L_44bf10

            seta AL
            movzx EAX,AL
            ret 
          .byte 0x90
.L_44bf10:

            mov EAX,4294967295
            ret 
.L_44bf16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44bf20:

            mov EAX,DWORD PTR [RSI]
            cmp DWORD PTR [RDI],EAX
            je .L_44bf30

            sbb EAX,EAX
            or EAX,1
            ret 

            nop
            nop
            nop
            nop
.L_44bf30:

            mov EAX,DWORD PTR [RSI+4]
            cmp DWORD PTR [RDI+4],EAX
            jb .L_44bf3f

            seta AL
            movzx EAX,AL
            ret 
.L_44bf3f:

            mov EAX,4294967295
            ret 
.L_44bf45:

            nop
            nop
            nop
.L_44bf48:
          .byte 0x42
          .byte 0x55
          .byte 0x53
          .byte 0x47
          .byte 0x53
          .byte 0x4f
          .byte 0x50
          .byte 0x47
.L_44bf50:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov ESI,45
            mov RBP,RDI
            call strchr@PLT

            test RAX,RAX
            je .L_44bfa0

            mov EBX,EAX
            sub EBX,EBP
.L_44bf6d:

            mov ESI,45
            mov RDI,R12
            call strchr@PLT

            test RAX,RAX
            je .L_44bfb0

            sub EAX,R12D
.L_44bf82:

            cmp EBX,EAX
            mov RSI,R12
            mov RDI,RBP
            cmovae EAX,EBX
            pop RBX
            pop RBP
            pop R12
            mov EDX,EAX
            jmp strncmp@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bfa0:

            mov RDI,RBP
            call strlen@PLT

            mov EBX,EAX
            jmp .L_44bf6d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44bfb0:

            mov RDI,R12
            call strlen@PLT

            jmp .L_44bf82
.L_44bfba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_44bfc0:

            cmp EDI,1281453935
            mov DWORD PTR [RDX],1145457748
            je .L_44c078

            jbe .L_44c040

            cmp EDI,1449224553
            je .L_44c058

            cmp EDI,1500080489
            je .L_44c098

            cmp EDI,1315663727
            je .L_44c068
.L_44bff0:

            mov ECX,EDI
            or ECX,536870912
            cmp EDI,1265525857
            mov DWORD PTR [RSI],ECX
            je .L_44c0b8

            jbe .L_44c0c0

            cmp EDI,1332902241
            je .L_44c0a8

            jbe .L_44c0f0

            cmp EDI,1415671148
            je .L_44c110

            cmp EDI,1415933045
            jne .L_44c053

            mov EAX,1952803890
            jmp .L_44c0ad
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c040:

            test EDI,EDI
            je .L_44c088

            cmp EDI,1214870113
            mov EAX,1801547361
            jne .L_44bff0

            mov DWORD PTR [RSI],EAX
.L_44c053:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44c058:

            mov EAX,1986095392
            mov DWORD PTR [RSI],EAX
            jmp .L_44c053

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c068:

            mov EAX,1852534560
            mov DWORD PTR [RSI],EAX
            jmp .L_44c053
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c078:

            mov EAX,1818324768
            mov DWORD PTR [RSI],EAX
            jmp .L_44c053

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c088:

            mov EAX,1145457748
            mov DWORD PTR [RSI],EAX
            jmp .L_44c053
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c098:

            mov EAX,2036932640
            mov DWORD PTR [RSI],EAX
            jmp .L_44c053
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c0a8:

            mov EAX,1869773106
.L_44c0ad:

            mov DWORD PTR [RDX],ECX
            mov DWORD PTR [RSI],EAX
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_44c0b8:

            mov EAX,1802396722
            jmp .L_44c0ad
          .byte 0x90
.L_44c0c0:

            cmp EDI,1147500129
            je .L_44c0e8

            jbe .L_44c140

            cmp EDI,1198877298
            je .L_44c120

            cmp EDI,1198879349
            jne .L_44c153

            mov EAX,1735750194
            jmp .L_44c0ad
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c0e8:

            mov EAX,1684370994
            jmp .L_44c0ad
          .byte 0x90
.L_44c0f0:

            cmp EDI,1298954605
            je .L_44c130

            cmp EDI,1299803506
            jne .L_44c152

            mov EAX,1836674354
            jmp .L_44c0ad
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c110:

            mov EAX,1953328178
            jmp .L_44c0ad

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c120:

            mov EAX,1735029298
            jmp .L_44c0ad

            nop
            nop
            nop
            nop
            nop
            nop
.L_44c130:

            mov EAX,1835822386
            jmp .L_44c0ad
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c140:

            cmp EDI,1113943655
            jne .L_44c154

            mov EAX,1651402546
            jmp .L_44c0ad
.L_44c152:

            ret 
.L_44c153:

            ret 
.L_44c154:

            ret 
.L_44c155:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c160:

            movzx EDX,DIL
            cmp EDX,50
            je .L_44c1b0

            xor EAX,EAX
            cmp EDI,1145457748
            je .L_44c1f0

            mov EAX,EDI
            and EAX,65280
            cmp EAX,8192
            jne .L_44c191

            mov EAX,EDI
            shr EAX,8
            and EAX,65280
            or EDI,EAX
            movzx EDX,DIL
.L_44c191:

            mov EAX,EDI
            movzx ECX,AH
            or EDI,ECX
            cmp EDX,32
            cmovne EDI,EAX
            mov EAX,EDI
            and EAX,3758096383
.L_44c1a5:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c1b0:

            cmp EDI,1802396722
            je .L_44c270

            jbe .L_44c1f8

            cmp EDI,1869773106
            je .L_44c260

            ja .L_44c228

            cmp EDI,1835822386
            mov EAX,1298954605
            je .L_44c1a5

            cmp EDI,1836674354
            mov EAX,1299803506
            jne .L_44c24a

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c1f0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c1f8:

            cmp EDI,1684370994
            mov EAX,1147500129
            je .L_44c1a5

            jbe .L_44c250

            cmp EDI,1735029298
            mov EAX,1198877298
            je .L_44c1a5

            cmp EDI,1735750194
            mov EAX,1198879349
            jne .L_44c24a

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c228:

            cmp EDI,1952803890
            mov EAX,1415933045
            je .L_44c1a5

            cmp EDI,1953328178
            mov EAX,1415671148
            je .L_44c1a5
.L_44c24a:

            mov EAX,1517976186
            ret 
.L_44c250:

            cmp EDI,1651402546
            mov EAX,1113943655
            jne .L_44c24a

            ret 
          .byte 0x90
.L_44c260:

            mov EAX,1332902241
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c270:

            mov EAX,1265525857
            ret 
.L_44c276:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c280:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_44c28e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_44c3b0

            call .L_406620

            lea RSI,QWORD PTR [RIP+.L_44c672]
            mov RDI,RAX
            mov RBP,RAX
            call strstr@PLT

            test RAX,RAX
            je .L_44c328

            xor ECX,ECX
.L_44c2c5:

            movzx EDX,BYTE PTR [RAX+RCX*1+6]
            mov ESI,EDX
            lea R8D,DWORD PTR [RDX-97]
            and ESI,4294967263
            sub ESI,65
            cmp SIL,25
            ja .L_44c320

            lea ESI,DWORD PTR [RDX-32]
            cmp R8B,26
            cmovb EDX,ESI
            mov BYTE PTR [RSP+RCX*1+4],DL
            add RCX,1
            cmp RCX,4
            jne .L_44c2c5
.L_44c2f4:

            mov EDX,DWORD PTR [RSP+4]
            bswap EDX
.L_44c2fa:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_44c4f2

            add RSP,24
.L_44c314:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_44c320:

            test ECX,ECX
            jne .L_44c4d1
.L_44c328:

            lea RSI,QWORD PTR [RIP+.L_44c679]
            mov RDI,RBP
            call strstr@PLT

            test RAX,RAX
            mov EDX,1230000200
            jne .L_44c2fa

            lea RSI,QWORD PTR [RIP+.L_44c681]
            mov RDI,RBP
            call strstr@PLT

            test RAX,RAX
            mov EDX,1095782472
            jne .L_44c2fa

            xor R12D,R12D
            mov R13D,607
            lea R14,QWORD PTR [RIP+.L_44c760]
            jmp .L_44c378
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44c370:

            cmp RBX,R12
            jbe .L_44c3c0
.L_44c375:

            mov R13,RBX
.L_44c378:

            lea RBX,QWORD PTR [R13+R12*1]
            mov RDI,RBP
            shr RBX,1
            lea R15,QWORD PTR [R14+RBX*8]
            mov RSI,R15
            call .L_44bf50

            test EAX,EAX
            js .L_44c370

            je .L_44c4b2

            lea R12,QWORD PTR [RBX+1]
            cmp R12,R13
            jae .L_44c3c0

            mov RBX,R13
            jmp .L_44c375
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c3b0:

            mov EDX,1684434036
            jmp .L_44c2fa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c3c0:

            lea RSI,QWORD PTR [RIP+.L_44c68a]
            mov RDI,RBP
            call .L_44bf50

            test EAX,EAX
            jne .L_44c470

            lea R12,QWORD PTR [RIP+.L_44c6c0]
            xor R13D,R13D
            mov R14,R12
            jmp .L_44c406
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c3f0:

            cmp AL,45
            je .L_44c45d
.L_44c3f4:

            add R13D,1
            add R14,16
            cmp R13D,9
            je .L_44c4a8
.L_44c406:

            mov RDX,R14
.L_44c409:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_44c409

            mov ECX,EAX
            mov RSI,R14
            mov RDI,RBP
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            cmove RDX,RCX
            mov ECX,EAX
            add CL,AL
            sbb RDX,3
            mov EBX,EDX
            sub EBX,R14D
            mov RDX,RBX
            call strncmp@PLT

            test EAX,EAX
            jne .L_44c3f4

            movzx EAX,BYTE PTR [RBP+RBX*1]
            test AL,AL
            jne .L_44c3f0
.L_44c45d:

            shl R13,4
            mov EDX,DWORD PTR [R12+R13*1+12]
            jmp .L_44c2fa
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c470:

            mov ESI,45
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            je .L_44c4c4
.L_44c482:

            sub RAX,RBP
            cmp RAX,3
            jne .L_44c3b0

            mov ESI,3
            mov RDI,RBP
            call .L_406430

            and EAX,3755991039
            mov EDX,EAX
            jmp .L_44c2fa
.L_44c4a8:

            mov EDX,1514689312
            jmp .L_44c2fa
.L_44c4b2:

            test R15,R15
            je .L_44c3c0

            mov EDX,DWORD PTR [R15+4]
            jmp .L_44c2fa
.L_44c4c4:

            mov RDI,RBP
            call strlen@PLT

            add RAX,RBP
            jmp .L_44c482
.L_44c4d1:

            lea RDX,QWORD PTR [RSP+4]
            movsxd RAX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c4e0:

            mov BYTE PTR [RDX+RAX*1],32
            add RAX,1
            cmp EAX,4
            jne .L_44c4e0

            jmp .L_44c2f4
.L_44c4f2:

            call __stack_chk_fail@PLT
.L_44c4f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c500:

            sub RSP,40
.L_44c504:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp EDI,1684434036
            je .L_44c5ba

            mov EDX,1095127584
            lea RCX,QWORD PTR [RIP+.L_44c764]
            jmp .L_44c53f
          .byte 0x66
          .byte 0x90
.L_44c530:

            add RAX,1
            cmp RAX,607
            je .L_44c578

            mov EDX,DWORD PTR [RCX+RAX*8]
.L_44c53f:

            cmp EDX,EDI
            jne .L_44c530

            lea RDX,QWORD PTR [RIP+.L_44c760]
            mov ESI,4294967295
            lea RDI,QWORD PTR [RDX+RAX*8]
            call .L_406580
.L_44c558:

            mov RSI,QWORD PTR [RSP+24]
            xor RSI,QWORD PTR FS:[40]
            jne .L_44c66d

            add RSP,40
.L_44c570:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c578:

            mov EAX,EDI
            xor AX,AX
            cmp EAX,1514668032
            je .L_44c5be

            cmp EDI,1095782472
            je .L_44c5a7

            cmp EDI,1230000200
            jne .L_44c5da

            lea RDI,QWORD PTR [RIP+.L_44c6af]
            mov ESI,4294967295
            call .L_406580

            jmp .L_44c558
.L_44c5a7:

            lea RDI,QWORD PTR [RIP+.L_44c6a3]
            mov ESI,4294967295
            call .L_406580

            jmp .L_44c558
.L_44c5ba:

            xor EAX,EAX
            jmp .L_44c558
.L_44c5be:

            cmp EDI,1514689312
            je .L_44c657

            cmp EDI,1514689568
            je .L_44c641

            cmp EDI,1514686496
            je .L_44c62b
.L_44c5da:

            movabs RAX,128021741186424
            mov ESI,4294967295
            mov BYTE PTR [RSP+23],0
            mov QWORD PTR [RSP+13],RAX
            mov EAX,EDI
            shr EAX,24
            mov BYTE PTR [RSP+19],AL
            mov EAX,EDI
            shr EAX,16
            cmp DIL,32
            mov BYTE PTR [RSP+20],AL
            mov EAX,EDI
            mov BYTE PTR [RSP+21],AH
            mov EAX,0
            cmove EDI,EAX
            mov BYTE PTR [RSP+22],DIL
            lea RDI,QWORD PTR [RSP+13]
            call .L_406580

            jmp .L_44c558
.L_44c62b:

            lea RDI,QWORD PTR [RIP+.L_44c68d]
            mov ESI,4294967295
            call .L_406580

            jmp .L_44c558
.L_44c641:

            lea RDI,QWORD PTR [RIP+.L_44c69b]
            mov ESI,4294967295
            call .L_406580

            jmp .L_44c558
.L_44c657:

            lea RDI,QWORD PTR [RIP+.L_44c693]
            mov ESI,4294967295
            call .L_406580

            jmp .L_44c558
.L_44c66d:

            call __stack_chk_fail@PLT
.L_44c672:
          .string "x-hbot"
.L_44c679:
          .string "-fonipa"
.L_44c681:
          .string "-fonnapa"
.L_44c68a:
          .string "zh"
.L_44c68d:
          .string "zh-hk"
.L_44c693:
          .string "zh-Hans"
.L_44c69b:
          .string "zh-Hant"
.L_44c6a3:
          .string "und-fonnapa"
.L_44c6af:
          .string "und-fonipa"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c6c0:
          .byte 0x7a
          .byte 0x68
          .byte 0x2d
          .byte 0x63
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x53
          .byte 0x48
          .byte 0x5a
          .byte 0x7a
          .byte 0x68
          .byte 0x2d
          .byte 0x68
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x48
          .byte 0x48
          .byte 0x5a
          .byte 0x7a
          .byte 0x68
          .byte 0x2d
          .byte 0x6d
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .string " HHZzh-sg"
          .zero 6
          .string " SHZzh-tw"
          .zero 6
          .string " THZzh-hans"
          .zero 4
          .string " SHZzh-hant-hk"
          .zero 1
          .string " HHZzh-hant-mo"
          .zero 1
          .string " HHZzh-hant"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x54
          .byte 0x48
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c760:
          .string "aa"
          .zero 1
.L_44c764:
          .string " RFAab"
          .zero 1
          .string " KBAabq"
          .string " ABAacf"
          .string " NAFach"
          .string " HCAacr"
          .string " RCAada"
          .string " GNDady"
          .string " YDAaf"
          .zero 1
          .string " KFAahg"
          .string " WGAaii"
          .string " AWSaio"
          .string " OIAaiw"
          .string " IRAak"
          .zero 1
          .string " IWTaka"
          .string " AKAalt"
          .string " TLAam"
          .zero 1
          .string " HMAamf"
          .string " NBHan"
          .zero 1
          .string " GRAang"
          .string " GNAar"
          .zero 1
          .string " ARAarb"
          .string " ARAarn"
          .string " PAMary"
          .string " ROMas"
          .zero 1
          .string " MSAast"
          .string " TSAath"
          .string " HTAatj"
          .string " RCRatv"
          .string " TLAav"
          .zero 1
          .string " RVAawa"
          .string " AWAay"
          .zero 1
          .string " MYAaz"
          .zero 1
          .string " EZAazb"
          .string " BZAazj"
          .string " EZAba"
          .zero 1
          .string " HSBbad"
          .string "0DABbai"
          .string " LMBbal"
          .string " ILBban"
          .string " NABbar"
          .string " RABbbc"
          .string " CBBbci"
          .string " UABbcl"
          .string " KIBbcq"
          .string " HCBbdy"
          .string " YDBbe"
          .zero 1
          .string " LEBbem"
          .string " MEBber"
          .string " REBbfq"
          .string " DABbft"
          .string " TLBbfu"
          .string " HALbfy"
          .string " GABbg"
          .zero 1
          .string " RGBbgc"
          .string " CGBbgq"
          .string " QGBbhb"
          .string " IHBbhk"
          .string " KIBbho"
          .string " OHBbi"
          .zero 1
          .string " SIBbik"
          .string " KIBbin"
          .string " ODEbjj"
          .string " JJBbjt"
          .string " NLBbla"
          .string " FKBble"
          .string " NLBblk"
          .string " KLBbln"
          .string " KIBbm"
          .zero 1
          .string " BMBbn"
          .zero 1
          .string " NEBbo"
          .zero 1
          .string " BITbpy"
          .string " YPBbqi"
          .string " CRLbr"
          .zero 1
          .string " ERBbra"
          .string " IRBbrh"
          .string " HRBbrx"
          .string " XRBbs"
          .zero 1
          .string " SOBbtb"
          .string " ITBbto"
          .string " KIBbts"
          .string " STBbug"
          .string " GUBbxr"
          .string " UBRbyn"
          .string " LIBca"
          .zero 1
          .string " TACcak"
          .string " KACcbk"
          .string " KBCce"
          .zero 1
          .string " EHCceb"
          .string " BECcgg"
          .string " GGCch"
          .zero 1
          .string " AHCchk"
          .string "0KHCcho"
          .string " OHCchp"
          .string " PHCchr"
          .string " RHCchy"
          .string " YHCckb"
          .string " RUKckt"
          .string " KHCcop"
          .string " POCcpp"
          .string " PPCcr"
          .zero 1
          .string " ERCcre"
          .string " RCYcrh"
          .string " TRCcrj"
          .string " RCEcrk"
          .string " RCWcrl"
          .string " RCEcrm"
          .string " RCMcrx"
          .string " RRCcs"
          .zero 1
          .string " YSCcsb"
          .string " BSCctg"
          .string " GTCcts"
          .string " KIBcu"
          .zero 1
          .string " LSCcuk"
          .string " KUCcv"
          .zero 1
          .string " UHCcwd"
          .string " RCDcy"
          .zero 1
          .string " LEWda"
          .zero 1
          .string " NADdap"
          .string " SINdar"
          .string " RADdax"
          .string " XADde"
          .zero 1
          .string " UEDdgo"
          .string " OGDdhd"
          .string " WAMdhg"
          .string " GHDdin"
          .string " KNDdiq"
          .string " QIDdje"
          .string " RJDdjr"
          .string "0RJDdng"
          .string " NUDdnj"
          .string " JNDdoi"
          .string " RGDdsb"
          .string " BSLduj"
          .string " JUDdv"
          .zero 1
          .string " VIDdyu"
          .string " LUJdz"
          .zero 1
          .string " NZDee"
          .zero 1
          .string " EWEefi"
          .string " IFEekk"
          .string " ITEel"
          .zero 1
          .string " LLEemk"
          .string " KNMen"
          .zero 1
          .string " GNEenf"
          .string " ENFenh"
          .string " ENTeo"
          .zero 1
          .string " OTNeot"
          .string " ITBes"
          .zero 1
          .string " PSEesu"
          .string " USEet"
          .zero 1
          .string " ITEeu"
          .zero 1
          .string " QUEeve"
          .string " NVEevn"
          .string " KVEfa"
          .zero 1
          .string " RAFfan"
          .string "0NAFfat"
          .string " TAFff"
          .zero 1
          .string " LUFfi"
          .zero 1
          .string " NIFfil"
          .string " LIPfj"
          .zero 1
          .string " IJFflm"
          .string " LAHfo"
          .zero 1
          .string " SOFfon"
          .string " NOFfr"
          .zero 1
          .string " ARFfrc"
          .string " CRFfrp"
          .string " PRFfuf"
          .string " ATFfur"
          .string " LRFfuv"
          .string " VUFfy"
          .zero 1
          .string " IRFga"
          .zero 1
          .string " IRIgaa"
          .string " DAGgag"
          .string " GAGgbm"
          .string " WAGgd"
          .zero 1
          .string " EAGgez"
          .string " ZEGggo"
          .string " NOGgih"
          .string " HIGgil"
          .string "0LIGgkp"
          .string " PKGgl"
          .zero 1
          .string " LAGgld"
          .string " NANgle"
          .string " TRIglk"
          .string " KLGgn"
          .zero 1
          .string " AUGgnn"
          .string " NNGgno"
          .string " NOGgog"
          .string " GOGgon"
          .string " NOGgrt"
          .string " ORGgru"
          .string " GOSgsw"
          .string " SLAgu"
          .zero 1
          .string " JUGguc"
          .string " CUGguf"
          .string " FUGguk"
          .string " ZMGguz"
          .string " ZUGgv"
          .zero 1
          .string " XNMha"
          .zero 1
          .string " UAHhar"
          .string " IRHhaw"
          .string " WAHhay"
          .string " YAHhaz"
          .string " ZAHhe"
          .zero 1
          .string " RWIhi"
          .zero 1
          .string " NIHhil"
          .string " LIHhmn"
          .string " NMHhnd"
          .string " DNHhne"
          .string " HHChno"
          .string " DNHho"
          .zero 1
          .string " OMHhoc"
          .string "  OHhoj"
          .string " RAHhr"
          .zero 1
          .string " VRHhsb"
          .string " BSUht"
          .zero 1
          .string " IAHhu"
          .zero 1
          .string " NUHhy"
          .zero 1
          .string " EYHhz"
          .zero 1
          .string " REHia"
          .zero 1
          .string " ANIiba"
          .string " ABIibb"
          .string " BBIid"
          .zero 1
          .string " DNIie"
          .zero 1
          .string " ELIig"
          .zero 1
          .string " OBIigb"
          .string " IBEii"
          .zero 1
          .string " MIYijc"
          .string " OJIijo"
          .string " OJIik"
          .zero 1
          .string " KPIilo"
          .string " OLIinh"
          .string " GNIio"
          .zero 1
          .string " ODIis"
          .zero 1
          .string " LSIit"
          .zero 1
          .string " ATIiu"
          .zero 1
          .string " UNIja"
          .zero 1
          .string " NAJjam"
          .string " MAJjbo"
          .string " OBJjv"
          .zero 1
          .string " VAJka"
          .zero 1
          .string " TAKkaa"
          .string " KRKkab"
          .string "0BAKkam"
          .string " BMKkar"
          .string " NRKkat"
          .string " EGKkbd"
          .string " BAKkde"
          .string " EDKkdr"
          .string " MRKkdt"
          .string " YUKkea"
          .string " AEKkek"
          .string " KEKkex"
          .string " NKKkfa"
          .string " DOKkfr"
          .string " CAKkfx"
          .string " LUKkfy"
          .string " NMKkg"
          .zero 1
          .string " NOKkha"
          .string " ISKkhb"
          .string " DBXkht"
          .string " NHKkhw"
          .string " WHKki"
          .zero 1
          .string " KIKkiu"
          .string " UIKkj"
          .zero 1
          .string " AUKkjd"
          .string " DJKkjh"
          .string " AHKkjp"
          .string " PJKkk"
          .zero 1
          .string " ZAKkl"
          .zero 1
          .string " NRGkln"
          .string " LAKkm"
          .zero 1
          .string " MHKkmb"
          .string " NBMkmw"
          .string " OMKkn"
          .zero 1
          .string " NAKknn"
          .string " KOKko"
          .zero 1
          .string " ROKkoi"
          .string " POKkok"
          .string " KOKkon"
          .string "0NOKkos"
          .string " SOKkpe"
          .string " LPKkpv"
          .string " ZOKkpy"
          .string " KYKkqy"
          .string " TRKkr"
          .zero 1
          .string " RNKkri"
          .string " IRKkrl"
          .string " LRKkru"
          .string " UUKks"
          .zero 1
          .string " HSKksh"
          .string "0HSKksw"
          .string " WSKktb"
          .string " BEKktu"
          .string " NOKku"
          .zero 1
          .string " RUKkum"
          .string " MUKkv"
          .zero 1
          .string " MOKkvd"
          .string " IUKkw"
          .zero 1
          .string " ROCkxc"
          .string " SMKkxu"
          .string " IUKky"
          .zero 1
          .string " RIKkyu"
          .string " UYKla"
          .zero 1
          .string " TALlad"
          .string " DUJlb"
          .zero 1
          .string " ZTLlbe"
          .string " KALlbj"
          .string " KDLlez"
          .string " ZELlg"
          .zero 1
          .string " GULli"
          .zero 1
          .string " MILlif"
          .string " BMLlij"
          .string " JILlis"
          .string " SILljp"
          .string " PJLlki"
          .string " IKLlld"
          .string " DALlmn"
          .string " MALlmo"
          .string " OMLln"
          .zero 1
          .string " NILlo"
          .zero 1
          .string " OALlom"
          .string " MOLlrc"
          .string " CRLlt"
          .zero 1
          .string " HTLlu"
          .zero 1
          .string " BULlua"
          .string " BULluo"
          .string " OULlus"
          .string " ZIMluy"
          .string " HULluz"
          .string " CRLlv"
          .zero 1
          .string " IVLlzz"
          .string " ZALmad"
          .string " DAMmag"
          .string " GAMmai"
          .string " HTMmak"
          .string " RKMmal"
          .string " LAMmam"
          .string " MAMman"
          .string " KNMmdc"
          .string " ELMmdf"
          .string " KOMmdr"
          .string " RDMmdy"
          .string " ELMmen"
          .string " EDMmer"
          .string " REMmfe"
          .string " EFMmg"
          .zero 1
          .string " GLMmh"
          .zero 1
          .string " HAMmhr"
          .string " AMLmi"
          .zero 1
          .string " IRMmin"
          .string " NIMmk"
          .zero 1
          .string " DKMmku"
          .string " KNMmkw"
          .string " WKMml"
          .zero 1
          .string " RLMmlq"
          .string " KNMmn"
          .zero 1
          .string " GNMmnc"
          .string " HCMmni"
          .string " INMmnk"
          .string " DNMmns"
          .string " NAMmnw"
          .string " NOMmo"
          .zero 1
          .string " LOMmoh"
          .string " HOMmos"
          .string " SOMmpe"
          .string " JAMmr"
          .zero 1
          .string " RAMmrj"
          .string " AMHms"
          .zero 1
          .string " YLMmsc"
          .string " KNMmt"
          .zero 1
          .string " STMmtr"
          .string " WAMmus"
          .string " SUMmve"
          .string " WAMmwk"
          .string " KNMmwl"
          .string " LWMmwr"
          .string " WAMmww"
          .string " WWMmy"
          .zero 1
          .string " MRBmym"
          .string " NEMmyn"
          .string " NYMmyq"
          .string " KNMmyv"
          .string " ZREmzn"
          .string " NZMna"
          .zero 1
          .string " UANnag"
          .string " GANnah"
          .string " HANnap"
          .string " PANnb"
          .zero 1
          .string " RONnco"
          .string " BISnd"
          .zero 1
          .string " BDNndc"
          .string " CDNnds"
          .string " SDNne"
          .zero 1
          .string " PENnew"
          .string " WENng"
          .zero 1
          .string " GDNnga"
          .string " AGNngl"
          .string " WMLngo"
          .string " TXSniu"
          .string " UINniv"
          .string " LIGnl"
          .zero 1
          .string " DLNnn"
          .zero 1
          .string " NYNno"
          .zero 1
          .string " RONnod"
          .string " ATNnoe"
          .string " EONnog"
          .string " GONnov"
          .string " VONnqo"
          .string " OKNnr"
          .zero 1
          .string " BDNnsk"
          .string " SANnso"
          .string " TOSnv"
          .zero 1
          .string " VANny"
          .zero 1
          .string " IHCnym"
          .string " MYNnyn"
          .string " LKNoc"
          .zero 1
          .string " ICOoj"
          .zero 1
          .string " BJOojs"
          .string " RCOokm"
          .string " HOKom"
          .zero 1
          .string " OROor"
          .zero 1
          .string " IROos"
          .zero 1
          .string " SSOpa"
          .zero 1
          .string " NAPpag"
          .string " GAPpam"
          .string " MAPpap"
          .string "0PAPpau"
          .string " UAPpcc"
          .string " CCPpcd"
          .string " DCPpce"
          .string " GLPpdc"
          .string " CDPpes"
          .string " RAFphk"
          .string " KHPpi"
          .zero 1
          .string " LAPpih"
          .string " HIPpl"
          .zero 1
          .string " KLPpll"
          .string " GLPplp"
          .string " PAPpms"
          .string " SMPpnb"
          .string " BNPpoh"
          .string " HOPpon"
          .string " NOPprs"
          .string " IRDps"
          .zero 1
          .string " SAPpt"
          .zero 1
          .string " GTPpwo"
          .string " OWPqu"
          .zero 1
          .string " ZUQquc"
          .string " CUQquh"
          .string " HUQquz"
          .string " ZUQqvi"
          .string " IVQqwh"
          .string " HWQraj"
          .string " JARrar"
          .string " RARrbb"
          .string " GLPrej"
          .string " JERria"
          .string " AIRrif"
          .string " FIRril"
          .string " AIRrit"
          .string " TIRrki"
          .string " KRArkw"
          .string " WKRrm"
          .zero 1
          .string " SMRrmy"
          .string " YMRrn"
          .zero 1
          .string " NURro"
          .zero 1
          .string " MORrom"
          .string " YORrtm"
          .string " MTRru"
          .zero 1
          .string " SURrue"
          .string " YSRrup"
          .string " PURrw"
          .zero 1
          .string " AURrwr"
          .string " WAMsa"
          .zero 1
          .string " NASsah"
          .string " KAYsam"
          .string " AAPsas"
          .string " SASsat"
          .string " TASsc"
          .zero 1
          .string " DRSsck"
          .string " DASscn"
          .string " NCSsco"
          .string " OCSscs"
          .string " ALSsd"
          .zero 1
          .string " DNSse"
          .zero 1
          .string " MSNseh"
          .string " ANSsel"
          .string " LESsg"
          .zero 1
          .string " OGSsga"
          .string " AGSsgs"
          .string " SGSsgw"
          .string " GHCshi"
          .string " IHSshn"
          .string " NHSsi"
          .zero 1
          .string " HNSsid"
          .string " DISsjd"
          .string " MSKsk"
          .zero 1
          .string " YKSskr"
          .string " KRSsl"
          .zero 1
          .string " VLSsm"
          .zero 1
          .string " OMSsma"
          .string " MSSsmj"
          .string " MSLsmn"
          .string " MSIsms"
          .string " SKSsn"
          .zero 1
          .string "0ANSsnk"
          .string " KNSso"
          .zero 1
          .string " LMSsop"
          .string " POSsq"
          .zero 1
          .string " IQSsr"
          .zero 1
          .string " BRSsrr"
          .string " RRSss"
          .zero 1
          .string " ZWSst"
          .zero 1
          .string " TOSstq"
          .string " QTSstv"
          .string " GISsu"
          .zero 1
          .string " NUSsuk"
          .string " KUSsuq"
          .string " RUSsv"
          .zero 1
          .string " EVSsva"
          .string " AVSsw"
          .zero 1
          .string " KWSswb"
          .string " RMCswh"
          .string " KWSswv"
          .string " WAMsxu"
          .string " UXSsyl"
          .string " LYSsyr"
          .string " RYSszl"
          .string " LZSta"
          .zero 1
          .string " MATtab"
          .string " BATtcy"
          .string " LUTtdd"
          .string " DDTte"
          .zero 1
          .string " LETtem"
          .string " NMTtet"
          .string " TETtg"
          .zero 1
          .string " JATth"
          .zero 1
          .string " AHTti"
          .zero 1
          .string " YGTtig"
          .string " RGTtiv"
          .string " VITtk"
          .zero 1
          .string " MKTtl"
          .zero 1
          .string " LGTtmh"
          .string " HMTtn"
          .zero 1
          .string " ANTto"
          .zero 1
          .string " NGTtod"
          .string "0DOTtoi"
          .string " GNTtpi"
          .string " IPTtr"
          .zero 1
          .string " KRTtru"
          .string " AUTts"
          .zero 1
          .string " GSTtt"
          .zero 1
          .string " TATtum"
          .string " MUTtvl"
          .string " LVTtw"
          .zero 1
          .string " IWTty"
          .zero 1
          .string " THTtyv"
          .string " VUTtyz"
          .string " ZYTtzm"
          .string " MZTtzo"
          .string " OZTudm"
          .string " MDUug"
          .zero 1
          .string " GYUuk"
          .zero 1
          .string " RKUumb"
          .string " BMUunr"
          .string " NUMur"
          .zero 1
          .string " DRUuz"
          .zero 1
          .string " BZUuzn"
          .string " BZUuzs"
          .string " BZUve"
          .zero 1
          .string " NEVvec"
          .string " CEVvi"
          .zero 1
          .string " TIVvls"
          .string " ELFvmw"
          .string " KAMvo"
          .zero 1
          .string " LOVvro"
          .string " ORVwa"
          .zero 1
          .string " NLWwar"
          .string " RAWwbm"
          .string "  AWwbr"
          .string " GAWwle"
          .string " GISwo"
          .zero 1
          .string " FLWwry"
          .string " WAMwtm"
          .string " MTWxal"
          .string " MLKxan"
          .string " KESxh"
          .zero 1
          .string " SHXxjb"
          .string " BJXxog"
          .string " GOXxom"
          .string " OMKxpe"
          .string " EPXxsl"
          .string " LSSxst"
          .string " GISxwo"
          .string " DOTyao"
          .string " OAYyap"
          .string " PAYyi"
          .zero 1
          .string " IIJyo"
          .zero 1
          .string " ABYyso"
          .string " SINza"
          .zero 1
          .string " AHZzea"
          .string " AEZzgh"
          .string " HGZzne"
          .string " DNZzu"
          .zero 1
          .string " LUZzum"
          .string " CRLzza"
          .byte 0x20
          .byte 0x41
          .byte 0x5a
          .byte 0x5a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44da60:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_657250]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_657258]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 4080

            test RBP,RBP
            je .L_44dab6

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44daa0:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_44daa0
.L_44dab6:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_44dac5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44dad0:

            ret 
.L_44dad2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44dae0:

            mov RDX,QWORD PTR [RIP+.L_6581c8]
            xor ESI,ESI
            jmp __cxa_atexit@PLT
.L_44daee:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

.L_44db00:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_44db04:
          .string "rb"
.L_44db07:
          .string "malloc error!\n"
.L_44db16:
          .string "read error!\n"
          .zero 13
.L_44db30:
          .byte 0x41
          .byte 0x42
          .byte 0x43
          .byte 0x44
          .byte 0x45
          .byte 0x58
          .byte 0x59
          .byte 0x5a
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x40
          .byte 0x5f
          .byte 0x25
          .byte 0x26
          .byte 0x29
#===================================
# end section .rodata
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_657250:
          .quad .L_401750
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_657258:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

.L_657260:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x78
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_657375:
          .zero 43
.L_6573a0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6581e0
          .byte 0xe8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x76
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_657460:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6575b8:
          .quad .L_408420
          .quad .L_408580
.L_6575c8:
          .quad .L_408070
          .quad .L_4080b0
.L_6575d8:
          .quad .L_408280
          .quad .L_4082d0
.L_6575e8:
          .quad .L_408750
          .quad .L_408800
.L_6575f8:
          .quad .L_408320
          .quad .L_408370
.L_657608:
          .quad .L_408650
          .quad .L_4081d0
.L_657618:
          .quad .L_408170
          .quad .L_408520
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4083c0
          .quad .L_408500
          .quad .L_408060
          .quad .L_4080a0
          .quad .L_4080e0
          .quad .L_4080f0
          .quad .L_408100
          .quad .L_408120
          .quad .L_408130
          .quad .L_4084f0
          .quad .L_4083e0
          .quad .L_408140
          .quad .L_408160
          .quad .L_4081a0
          .zero 24
.L_657820:
          .string "ot"
          .zero 13
.L_657830:
          .quad .L_413350
          .byte 0x66
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x62
          .byte 0x61
          .byte 0x63
          .byte 0x6b
.L_657840:
          .zero 8
          .quad .L_430cb0
          .zero 16
.L_657860:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40d460
          .quad .L_40d470
          .quad .L_40d480
          .quad .L_40d490
          .quad .L_40d4a0
          .quad .L_40d4b0
          .quad .L_40d4c0
          .quad .L_40d4d0
          .zero 128
.L_6579a0:
          .string "arabic"
          .zero 1
          .quad .L_4150b0
          .zero 8
          .quad .L_414e90
          .quad .L_4158e0
          .zero 8
          .quad .L_4153c0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_416530
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_657a00:
          .string "hangul"
          .zero 1
          .quad .L_4197f0
          .quad .L_4197d0
          .quad .L_419700
          .quad .L_4196f0
          .quad .L_419840
          .zero 32
          .quad .L_419640
          .zero 8
.L_657a60:
          .string "hebrew"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41a590
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_657ac0:
          .string "indic"
          .zero 2
          .quad .L_41a970
          .quad .L_41a900
          .quad .L_41d320
          .quad .L_41a8f0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41d8d0
          .quad .L_41bef0
          .quad .L_41bfa0
          .zero 8
.L_657b20:
          .string "myanmar"
          .quad .L_425290
          .quad .L_425270
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425c10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_657b80:
          .string "thai"
          .zero 35
          .quad .L_426810
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_657be0:
          .string "default"
          .quad .L_426f90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_657c40:
          .quad .L_657375
          .quad .L_427450
          .zero 8
          .quad .L_4272e0
          .quad .L_4272c0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427eb0
          .quad .L_427250
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_657ca0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_431270
          .quad .L_431250
          .quad .L_431240
          .quad .L_431220
          .quad .L_431200
          .quad .L_4311f0
          .quad .L_4311e0
          .quad .L_4311c0
          .zero 128
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 8
.L_6581c8:
          .zero 24
.L_6581e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

.L_6582a0:
          .zero 8
.L_6582a8:
          .zero 8
.L_6582b0:
          .zero 8
.L_6582b8:
          .zero 8
.L_6582c0:
          .zero 264
.L_6583c8:
          .zero 8
.L_6583d0:
          .zero 8
.L_6583d8:
          .zero 8
.L_6583e0:
          .zero 32
.L_658400:
          .zero 288
.L_658520:
          .zero 288
.L_658640:
          .zero 288
.L_658760:
          .zero 264
#-----------------------------------
.align 8
.globl _end
.type _end, @notype
#-----------------------------------
_end:
#===================================
# end section .bss
#===================================
